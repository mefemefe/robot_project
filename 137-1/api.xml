<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 5.0.1 (Python 3.10.5 on linux)" generated="20220705 05:42:48.559" rpa="false" schemaversion="3">
<suite id="s1" name="Trello" source="/trello">
<suite id="s1-s1" name="Api" source="/trello/api">
<suite id="s1-s1-s1" name="Trello Api Boards Tests" source="/trello/api/trello_api_boards_tests.robot">
<kw name="Create Trello Session" library="TrelloAPI" type="SETUP">
<doc>Creates a Trello Session</doc>
<kw name="Create Session" library="request_own_library">
<arg>${API_BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<status status="PASS" starttime="20220705 05:42:48.684" endtime="20220705 05:42:48.684"/>
</kw>
<status status="PASS" starttime="20220705 05:42:48.683" endtime="20220705 05:42:48.684"/>
</kw>
<test id="s1-s1-s1-t1" name="CREATE a board" line="9">
<kw name="Create A Board" library="Board">
<var>${response}</var>
<arg>NewBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 05:42:48.686" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 05:42:48.686" endtime="20220705 05:42:48.686"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 05:42:48.686" endtime="20220705 05:42:48.687"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 05:42:48.687" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220705 05:42:48.687" endtime="20220705 05:42:48.687"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 05:42:48.922" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 05:42:48.688" endtime="20220705 05:42:48.922"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 05:42:48.922" endtime="20220705 05:42:48.922"/>
</return>
<msg timestamp="20220705 05:42:48.922" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 05:42:48.686" endtime="20220705 05:42:48.922"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 05:42:48.922" endtime="20220705 05:42:48.922"/>
</return>
<msg timestamp="20220705 05:42:48.922" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 05:42:48.685" endtime="20220705 05:42:48.922"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>board</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 05:42:48.923" endtime="20220705 05:42:48.927"/>
</kw>
<status status="PASS" starttime="20220705 05:42:48.922" endtime="20220705 05:42:48.927"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${response.json()}[id]</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${response.json()}[id]</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 05:42:48.929" level="INFO">${url} = boards/62c3cf58a615590acd03bac5</msg>
<status status="PASS" starttime="20220705 05:42:48.929" endtime="20220705 05:42:48.929"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 05:42:49.237" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 05:42:48.930" endtime="20220705 05:42:49.237"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 05:42:49.237" endtime="20220705 05:42:49.237"/>
</return>
<msg timestamp="20220705 05:42:49.237" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 05:42:48.929" endtime="20220705 05:42:49.237"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 05:42:49.237" endtime="20220705 05:42:49.237"/>
</return>
<status status="PASS" starttime="20220705 05:42:48.928" endtime="20220705 05:42:49.237"/>
</kw>
<status status="PASS" starttime="20220705 05:42:48.928" endtime="20220705 05:42:49.237"/>
</kw>
<doc>Verify that a board can be create through API</doc>
<tag>api</tag>
<tag>board.create</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220705 05:42:48.685" endtime="20220705 05:42:49.237"/>
</test>
<test id="s1-s1-s1-t2" name="UPDATE a Board's name" line="16">
<kw name="Create A Board" library="Board">
<var>${response}</var>
<arg>NewBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 05:42:49.240" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 05:42:49.240" endtime="20220705 05:42:49.240"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 05:42:49.240" endtime="20220705 05:42:49.240"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 05:42:49.241" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220705 05:42:49.240" endtime="20220705 05:42:49.241"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 05:42:49.437" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 05:42:49.241" endtime="20220705 05:42:49.437"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 05:42:49.438" endtime="20220705 05:42:49.438"/>
</return>
<msg timestamp="20220705 05:42:49.438" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 05:42:49.239" endtime="20220705 05:42:49.438"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 05:42:49.438" endtime="20220705 05:42:49.438"/>
</return>
<msg timestamp="20220705 05:42:49.438" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 05:42:49.239" endtime="20220705 05:42:49.438"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>board</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 05:42:49.439" endtime="20220705 05:42:49.443"/>
</kw>
<status status="PASS" starttime="20220705 05:42:49.438" endtime="20220705 05:42:49.443"/>
</kw>
<kw name="Update A Board" library="Board">
<arg>${response.json()}[id]</arg>
<arg>name</arg>
<arg>NewName</arg>
<doc>Updates the board with the given ID
optional_args: name, desc, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 05:42:49.444" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 05:42:49.444" endtime="20220705 05:42:49.444"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 05:42:49.444" endtime="20220705 05:42:49.445"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 05:42:49.445" level="INFO">${url} = boards/62c3cf59b45bb94403c1c0d7</msg>
<status status="PASS" starttime="20220705 05:42:49.445" endtime="20220705 05:42:49.445"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 05:42:49.529" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 05:42:49.445" endtime="20220705 05:42:49.529"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 05:42:49.529" endtime="20220705 05:42:49.529"/>
</return>
<msg timestamp="20220705 05:42:49.529" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 05:42:49.444" endtime="20220705 05:42:49.529"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 05:42:49.529" endtime="20220705 05:42:49.529"/>
</return>
<status status="PASS" starttime="20220705 05:42:49.443" endtime="20220705 05:42:49.530"/>
</kw>
<kw name="Get A Board" library="Board">
<var>${new_response}</var>
<arg>${response.json()}[id]</arg>
<doc>Gets the Board with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 05:42:49.532" level="INFO">${url} = boards/62c3cf59b45bb94403c1c0d7</msg>
<status status="PASS" starttime="20220705 05:42:49.531" endtime="20220705 05:42:49.532"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 05:42:49.583" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 05:42:49.532" endtime="20220705 05:42:49.583"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 05:42:49.583" endtime="20220705 05:42:49.583"/>
</return>
<msg timestamp="20220705 05:42:49.583" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 05:42:49.531" endtime="20220705 05:42:49.583"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 05:42:49.583" endtime="20220705 05:42:49.583"/>
</return>
<msg timestamp="20220705 05:42:49.583" level="INFO">${new_response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 05:42:49.530" endtime="20220705 05:42:49.583"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${new_response}</arg>
<arg>board</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 05:42:49.584" endtime="20220705 05:42:49.588"/>
</kw>
<status status="PASS" starttime="20220705 05:42:49.584" endtime="20220705 05:42:49.588"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${new_response.json()}[name]</arg>
<arg>NewName</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220705 05:42:49.588" endtime="20220705 05:42:49.589"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${response.json()}[id]</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${response.json()}[id]</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 05:42:49.591" level="INFO">${url} = boards/62c3cf59b45bb94403c1c0d7</msg>
<status status="PASS" starttime="20220705 05:42:49.590" endtime="20220705 05:42:49.591"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 05:42:49.905" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 05:42:49.591" endtime="20220705 05:42:49.905"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 05:42:49.905" endtime="20220705 05:42:49.905"/>
</return>
<msg timestamp="20220705 05:42:49.905" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 05:42:49.590" endtime="20220705 05:42:49.905"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 05:42:49.905" endtime="20220705 05:42:49.905"/>
</return>
<status status="PASS" starttime="20220705 05:42:49.589" endtime="20220705 05:42:49.906"/>
</kw>
<status status="PASS" starttime="20220705 05:42:49.589" endtime="20220705 05:42:49.906"/>
</kw>
<doc>Verify that a board's name can be updated through API</doc>
<tag>api</tag>
<tag>board.update</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220705 05:42:49.238" endtime="20220705 05:42:49.906"/>
</test>
<test id="s1-s1-s1-t3" name="DELETE A Board" line="27">
<kw name="Create A Board" library="Board">
<var>${response}</var>
<arg>NewBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 05:42:49.908" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 05:42:49.908" endtime="20220705 05:42:49.908"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 05:42:49.908" endtime="20220705 05:42:49.908"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 05:42:49.909" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220705 05:42:49.908" endtime="20220705 05:42:49.909"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 05:42:50.125" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 05:42:49.909" endtime="20220705 05:42:50.125"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 05:42:50.125" endtime="20220705 05:42:50.125"/>
</return>
<msg timestamp="20220705 05:42:50.125" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 05:42:49.907" endtime="20220705 05:42:50.125"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 05:42:50.125" endtime="20220705 05:42:50.125"/>
</return>
<msg timestamp="20220705 05:42:50.126" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 05:42:49.907" endtime="20220705 05:42:50.126"/>
</kw>
<kw name="Delete A Board" library="Board">
<arg>${response.json()}[id]</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 05:42:50.128" level="INFO">${url} = boards/62c3cf59dd3e7a1cd63f6f1e</msg>
<status status="PASS" starttime="20220705 05:42:50.127" endtime="20220705 05:42:50.128"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 05:42:50.485" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 05:42:50.128" endtime="20220705 05:42:50.485"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 05:42:50.485" endtime="20220705 05:42:50.485"/>
</return>
<msg timestamp="20220705 05:42:50.485" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 05:42:50.127" endtime="20220705 05:42:50.485"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 05:42:50.485" endtime="20220705 05:42:50.485"/>
</return>
<status status="PASS" starttime="20220705 05:42:50.126" endtime="20220705 05:42:50.485"/>
</kw>
<kw name="Get A Board" library="Board">
<arg>${response.json()}[id]</arg>
<arg>status_code=404</arg>
<doc>Gets the Board with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 05:42:50.487" level="INFO">${url} = boards/62c3cf59dd3e7a1cd63f6f1e</msg>
<status status="PASS" starttime="20220705 05:42:50.487" endtime="20220705 05:42:50.487"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 05:42:50.521" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220705 05:42:50.487" endtime="20220705 05:42:50.521"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 05:42:50.521" endtime="20220705 05:42:50.521"/>
</return>
<msg timestamp="20220705 05:42:50.521" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220705 05:42:50.486" endtime="20220705 05:42:50.521"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 05:42:50.521" endtime="20220705 05:42:50.521"/>
</return>
<status status="PASS" starttime="20220705 05:42:50.485" endtime="20220705 05:42:50.522"/>
</kw>
<doc>Verify that a board can be deleted through API</doc>
<tag>api</tag>
<tag>board.delete</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220705 05:42:49.906" endtime="20220705 05:42:50.522"/>
</test>
<test id="s1-s1-s1-t4" name="GET Information of A Board" line="34">
<kw name="Create A Board" library="Board">
<var>${response}</var>
<arg>BoardTest</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 05:42:50.524" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 05:42:50.524" endtime="20220705 05:42:50.524"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 05:42:50.524" endtime="20220705 05:42:50.524"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 05:42:50.525" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220705 05:42:50.524" endtime="20220705 05:42:50.525"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 05:42:50.728" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 05:42:50.525" endtime="20220705 05:42:50.728"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 05:42:50.728" endtime="20220705 05:42:50.728"/>
</return>
<msg timestamp="20220705 05:42:50.728" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 05:42:50.523" endtime="20220705 05:42:50.728"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 05:42:50.728" endtime="20220705 05:42:50.729"/>
</return>
<msg timestamp="20220705 05:42:50.729" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 05:42:50.523" endtime="20220705 05:42:50.729"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>board</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 05:42:50.729" endtime="20220705 05:42:50.733"/>
</kw>
<status status="PASS" starttime="20220705 05:42:50.729" endtime="20220705 05:42:50.733"/>
</kw>
<kw name="Get A Board" library="Board">
<var>${response2}</var>
<arg>${response.json()}[id]</arg>
<doc>Gets the Board with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 05:42:50.735" level="INFO">${url} = boards/62c3cf5a1c659123a006bc3c</msg>
<status status="PASS" starttime="20220705 05:42:50.735" endtime="20220705 05:42:50.735"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 05:42:50.790" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 05:42:50.735" endtime="20220705 05:42:50.790"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 05:42:50.790" endtime="20220705 05:42:50.790"/>
</return>
<msg timestamp="20220705 05:42:50.791" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 05:42:50.734" endtime="20220705 05:42:50.791"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 05:42:50.791" endtime="20220705 05:42:50.791"/>
</return>
<msg timestamp="20220705 05:42:50.791" level="INFO">${response2} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 05:42:50.733" endtime="20220705 05:42:50.791"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response2}</arg>
<arg>board</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 05:42:50.792" endtime="20220705 05:42:50.796"/>
</kw>
<status status="PASS" starttime="20220705 05:42:50.791" endtime="20220705 05:42:50.796"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${response2.json()}[name]</arg>
<arg>BoardTest</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220705 05:42:50.796" endtime="20220705 05:42:50.797"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${response.json()}[id]</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${response.json()}[id]</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 05:42:50.799" level="INFO">${url} = boards/62c3cf5a1c659123a006bc3c</msg>
<status status="PASS" starttime="20220705 05:42:50.798" endtime="20220705 05:42:50.799"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 05:42:51.099" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 05:42:50.799" endtime="20220705 05:42:51.099"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 05:42:51.099" endtime="20220705 05:42:51.099"/>
</return>
<msg timestamp="20220705 05:42:51.099" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 05:42:50.798" endtime="20220705 05:42:51.099"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 05:42:51.100" endtime="20220705 05:42:51.100"/>
</return>
<status status="PASS" starttime="20220705 05:42:50.797" endtime="20220705 05:42:51.100"/>
</kw>
<status status="PASS" starttime="20220705 05:42:50.797" endtime="20220705 05:42:51.100"/>
</kw>
<doc>Verify that a board's information can be accesed through API</doc>
<tag>api</tag>
<tag>board.get</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220705 05:42:50.522" endtime="20220705 05:42:51.100"/>
</test>
<test id="s1-s1-s1-t5" name="UPDATE a Board's description" line="45">
<kw name="Create A Board" library="Board">
<var>${response}</var>
<arg>NewBoardForTest</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 05:42:51.102" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 05:42:51.102" endtime="20220705 05:42:51.102"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 05:42:51.102" endtime="20220705 05:42:51.103"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 05:42:51.103" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220705 05:42:51.103" endtime="20220705 05:42:51.103"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 05:42:51.258" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 05:42:51.104" endtime="20220705 05:42:51.258"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 05:42:51.258" endtime="20220705 05:42:51.258"/>
</return>
<msg timestamp="20220705 05:42:51.258" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 05:42:51.101" endtime="20220705 05:42:51.258"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 05:42:51.258" endtime="20220705 05:42:51.258"/>
</return>
<msg timestamp="20220705 05:42:51.258" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 05:42:51.101" endtime="20220705 05:42:51.258"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>board</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 05:42:51.259" endtime="20220705 05:42:51.263"/>
</kw>
<status status="PASS" starttime="20220705 05:42:51.258" endtime="20220705 05:42:51.263"/>
</kw>
<kw name="Update A Board" library="Board">
<arg>${response.json()}[id]</arg>
<arg>desc</arg>
<arg>sampleDescription</arg>
<doc>Updates the board with the given ID
optional_args: name, desc, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 05:42:51.265" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 05:42:51.265" endtime="20220705 05:42:51.265"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 05:42:51.265" endtime="20220705 05:42:51.265"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 05:42:51.266" level="INFO">${url} = boards/62c3cf5be9cbda40dc06163e</msg>
<status status="PASS" starttime="20220705 05:42:51.266" endtime="20220705 05:42:51.266"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 05:42:51.367" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 05:42:51.266" endtime="20220705 05:42:51.367"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 05:42:51.367" endtime="20220705 05:42:51.367"/>
</return>
<msg timestamp="20220705 05:42:51.368" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 05:42:51.264" endtime="20220705 05:42:51.368"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 05:42:51.368" endtime="20220705 05:42:51.368"/>
</return>
<status status="PASS" starttime="20220705 05:42:51.263" endtime="20220705 05:42:51.368"/>
</kw>
<kw name="Get A Board" library="Board">
<var>${new_response}</var>
<arg>${response.json()}[id]</arg>
<doc>Gets the Board with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 05:42:51.370" level="INFO">${url} = boards/62c3cf5be9cbda40dc06163e</msg>
<status status="PASS" starttime="20220705 05:42:51.369" endtime="20220705 05:42:51.370"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 05:42:51.417" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 05:42:51.370" endtime="20220705 05:42:51.417"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 05:42:51.417" endtime="20220705 05:42:51.417"/>
</return>
<msg timestamp="20220705 05:42:51.418" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 05:42:51.369" endtime="20220705 05:42:51.418"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 05:42:51.418" endtime="20220705 05:42:51.418"/>
</return>
<msg timestamp="20220705 05:42:51.418" level="INFO">${new_response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 05:42:51.368" endtime="20220705 05:42:51.418"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${new_response.json()}[desc]</arg>
<arg>sampleDescription</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220705 05:42:51.418" endtime="20220705 05:42:51.419"/>
</kw>
<kw name="Update A Board" library="Board">
<arg>${response.json()}[id]</arg>
<arg>desc</arg>
<arg>updatedDescription</arg>
<doc>Updates the board with the given ID
optional_args: name, desc, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 05:42:51.421" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 05:42:51.420" endtime="20220705 05:42:51.421"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 05:42:51.421" endtime="20220705 05:42:51.421"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 05:42:51.421" level="INFO">${url} = boards/62c3cf5be9cbda40dc06163e</msg>
<status status="PASS" starttime="20220705 05:42:51.421" endtime="20220705 05:42:51.421"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 05:42:51.526" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 05:42:51.421" endtime="20220705 05:42:51.526"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 05:42:51.526" endtime="20220705 05:42:51.526"/>
</return>
<msg timestamp="20220705 05:42:51.527" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 05:42:51.420" endtime="20220705 05:42:51.527"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 05:42:51.527" endtime="20220705 05:42:51.527"/>
</return>
<status status="PASS" starttime="20220705 05:42:51.419" endtime="20220705 05:42:51.527"/>
</kw>
<kw name="Get A Board" library="Board">
<var>${new_response2}</var>
<arg>${response.json()}[id]</arg>
<doc>Gets the Board with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 05:42:51.529" level="INFO">${url} = boards/62c3cf5be9cbda40dc06163e</msg>
<status status="PASS" starttime="20220705 05:42:51.529" endtime="20220705 05:42:51.529"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 05:42:51.573" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 05:42:51.529" endtime="20220705 05:42:51.573"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 05:42:51.573" endtime="20220705 05:42:51.573"/>
</return>
<msg timestamp="20220705 05:42:51.574" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 05:42:51.528" endtime="20220705 05:42:51.574"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 05:42:51.574" endtime="20220705 05:42:51.574"/>
</return>
<msg timestamp="20220705 05:42:51.574" level="INFO">${new_response2} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 05:42:51.527" endtime="20220705 05:42:51.574"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${new_response2.json()}[desc]</arg>
<arg>updatedDescription</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220705 05:42:51.574" endtime="20220705 05:42:51.575"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${response.json()}[id]</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${response.json()}[id]</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 05:42:51.577" level="INFO">${url} = boards/62c3cf5be9cbda40dc06163e</msg>
<status status="PASS" starttime="20220705 05:42:51.577" endtime="20220705 05:42:51.577"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 05:42:51.898" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 05:42:51.577" endtime="20220705 05:42:51.898"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 05:42:51.898" endtime="20220705 05:42:51.898"/>
</return>
<msg timestamp="20220705 05:42:51.898" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 05:42:51.576" endtime="20220705 05:42:51.898"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 05:42:51.899" endtime="20220705 05:42:51.899"/>
</return>
<status status="PASS" starttime="20220705 05:42:51.575" endtime="20220705 05:42:51.899"/>
</kw>
<status status="PASS" starttime="20220705 05:42:51.575" endtime="20220705 05:42:51.899"/>
</kw>
<doc>Verify that a board's description can be updated through API</doc>
<tag>api</tag>
<tag>board.update</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220705 05:42:51.100" endtime="20220705 05:42:51.899"/>
</test>
<kw name="Delete All Sessions" library="request_own_library" type="TEARDOWN">
<status status="PASS" starttime="20220705 05:42:51.900" endtime="20220705 05:42:51.901"/>
</kw>
<doc>Example Test with Trello API Boards</doc>
<status status="PASS" starttime="20220705 05:42:48.578" endtime="20220705 05:42:51.901"/>
</suite>
<suite id="s1-s1-s2" name="Trello Api Cards Tests" source="/trello/api/trello_api_cards_tests.robot">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Create Trello Session</arg>
<arg>Setup Board And List</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Create Trello Session" library="TrelloAPI">
<doc>Creates a Trello Session</doc>
<kw name="Create Session" library="request_own_library">
<arg>${API_BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<status status="PASS" starttime="20220705 05:42:51.913" endtime="20220705 05:42:51.913"/>
</kw>
<status status="PASS" starttime="20220705 05:42:51.913" endtime="20220705 05:42:51.913"/>
</kw>
<kw name="Setup Board And List">
<doc>Create a board and save its ID and its first list's ID</doc>
<kw name="Create A Board" library="Board">
<var>${BOARD}</var>
<arg>TestBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 05:42:51.914" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 05:42:51.914" endtime="20220705 05:42:51.914"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 05:42:51.914" endtime="20220705 05:42:51.914"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 05:42:51.915" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220705 05:42:51.915" endtime="20220705 05:42:51.915"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 05:42:52.176" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 05:42:51.915" endtime="20220705 05:42:52.176"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 05:42:52.176" endtime="20220705 05:42:52.176"/>
</return>
<msg timestamp="20220705 05:42:52.176" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 05:42:51.914" endtime="20220705 05:42:52.176"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 05:42:52.177" endtime="20220705 05:42:52.177"/>
</return>
<msg timestamp="20220705 05:42:52.177" level="INFO">${BOARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 05:42:51.913" endtime="20220705 05:42:52.177"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_BOARD_ID}</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220705 05:42:52.178" level="INFO">${TEST_SUITE_BOARD_ID} = 62c3cf5c2710a158e10a1143</msg>
<status status="PASS" starttime="20220705 05:42:52.177" endtime="20220705 05:42:52.178"/>
</kw>
<kw name="Get Lists On A Board" library="Board">
<var>${LISTS}</var>
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Get all the lists in a board</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>lists_on_board</arg>
<arg>${id}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 05:42:52.179" level="INFO">${url} = boards/62c3cf5c2710a158e10a1143/lists/</msg>
<status status="PASS" starttime="20220705 05:42:52.179" endtime="20220705 05:42:52.179"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 05:42:52.228" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 05:42:52.179" endtime="20220705 05:42:52.228"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 05:42:52.228" endtime="20220705 05:42:52.228"/>
</return>
<msg timestamp="20220705 05:42:52.228" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 05:42:52.178" endtime="20220705 05:42:52.228"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 05:42:52.228" endtime="20220705 05:42:52.228"/>
</return>
<msg timestamp="20220705 05:42:52.228" level="INFO">${LISTS} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 05:42:52.178" endtime="20220705 05:42:52.228"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_LIST_ID}</arg>
<arg>${LISTS.json()}[0][id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220705 05:42:52.229" level="INFO">${TEST_SUITE_LIST_ID} = 62c3cf5c2710a158e10a114a</msg>
<status status="PASS" starttime="20220705 05:42:52.229" endtime="20220705 05:42:52.229"/>
</kw>
<status status="PASS" starttime="20220705 05:42:51.913" endtime="20220705 05:42:52.230"/>
</kw>
<status status="PASS" starttime="20220705 05:42:51.912" endtime="20220705 05:42:52.230"/>
</kw>
<test id="s1-s1-s2-t1" name="Verify A Card Can Be Created" line="13">
<kw name="Create A Card" library="Card">
<var>${response}</var>
<arg>name</arg>
<arg>RFCard2</arg>
<doc>Creates a new card in the given list.
required_args: listId
optional_args: name, desc, pos, idCardSource, idLabels, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>@{optional_args}</arg>
<arg>idList</arg>
<arg>${idList}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 05:42:52.231" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 05:42:52.231" endtime="20220705 05:42:52.231"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 05:42:52.232" endtime="20220705 05:42:52.232"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 05:42:52.232" level="INFO">${url} = cards/</msg>
<status status="PASS" starttime="20220705 05:42:52.232" endtime="20220705 05:42:52.233"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 05:42:52.411" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 05:42:52.233" endtime="20220705 05:42:52.411"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 05:42:52.411" endtime="20220705 05:42:52.411"/>
</return>
<msg timestamp="20220705 05:42:52.411" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 05:42:52.231" endtime="20220705 05:42:52.411"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 05:42:52.411" endtime="20220705 05:42:52.412"/>
</return>
<msg timestamp="20220705 05:42:52.412" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 05:42:52.230" endtime="20220705 05:42:52.412"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>card</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 05:42:52.412" endtime="20220705 05:42:52.417"/>
</kw>
<status status="PASS" starttime="20220705 05:42:52.412" endtime="20220705 05:42:52.417"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 05:42:52.418" endtime="20220705 05:42:52.418"/>
</return>
<msg timestamp="20220705 05:42:52.418" level="INFO">${CARD_ID} = 62c3cf5cdd14a67e1bd47580</msg>
<status status="PASS" starttime="20220705 05:42:52.417" endtime="20220705 05:42:52.418"/>
</kw>
<kw name="Get A Card" library="Card">
<var>${response}</var>
<arg>${CARD_ID}</arg>
<doc>Gets the card with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 05:42:52.419" level="INFO">${url} = cards/62c3cf5cdd14a67e1bd47580</msg>
<status status="PASS" starttime="20220705 05:42:52.419" endtime="20220705 05:42:52.420"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 05:42:52.473" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 05:42:52.420" endtime="20220705 05:42:52.473"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 05:42:52.473" endtime="20220705 05:42:52.473"/>
</return>
<msg timestamp="20220705 05:42:52.473" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 05:42:52.419" endtime="20220705 05:42:52.473"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 05:42:52.473" endtime="20220705 05:42:52.473"/>
</return>
<msg timestamp="20220705 05:42:52.473" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 05:42:52.418" endtime="20220705 05:42:52.473"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_NAME}</var>
<arg>${response}</arg>
<arg>name</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 05:42:52.474" endtime="20220705 05:42:52.474"/>
</return>
<msg timestamp="20220705 05:42:52.475" level="INFO">${CARD_NAME} = RFCard2</msg>
<status status="PASS" starttime="20220705 05:42:52.474" endtime="20220705 05:42:52.475"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${CARD_NAME}</arg>
<arg>RFCard2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220705 05:42:52.475" endtime="20220705 05:42:52.475"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Card</arg>
<arg>${CARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Card" library="Card">
<arg>${CARD_ID}</arg>
<doc>Deletes the card with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 05:42:52.477" level="INFO">${url} = cards/62c3cf5cdd14a67e1bd47580</msg>
<status status="PASS" starttime="20220705 05:42:52.476" endtime="20220705 05:42:52.477"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 05:42:52.621" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 05:42:52.477" endtime="20220705 05:42:52.621"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 05:42:52.621" endtime="20220705 05:42:52.621"/>
</return>
<msg timestamp="20220705 05:42:52.621" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 05:42:52.476" endtime="20220705 05:42:52.621"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 05:42:52.622" endtime="20220705 05:42:52.622"/>
</return>
<status status="PASS" starttime="20220705 05:42:52.475" endtime="20220705 05:42:52.622"/>
</kw>
<status status="PASS" starttime="20220705 05:42:52.475" endtime="20220705 05:42:52.622"/>
</kw>
<doc>Verify that a card can be created through API</doc>
<tag>api</tag>
<tag>card.create</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220705 05:42:52.230" endtime="20220705 05:42:52.622"/>
</test>
<test id="s1-s1-s2-t2" name="Verify A Card Can Be Closed" line="24">
<kw name="Create A Card" library="Card">
<var>${response}</var>
<doc>Creates a new card in the given list.
required_args: listId
optional_args: name, desc, pos, idCardSource, idLabels, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>@{optional_args}</arg>
<arg>idList</arg>
<arg>${idList}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 05:42:52.624" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 05:42:52.624" endtime="20220705 05:42:52.624"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 05:42:52.624" endtime="20220705 05:42:52.625"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 05:42:52.626" level="INFO">${url} = cards/</msg>
<status status="PASS" starttime="20220705 05:42:52.625" endtime="20220705 05:42:52.626"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 05:42:52.771" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 05:42:52.626" endtime="20220705 05:42:52.771"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 05:42:52.771" endtime="20220705 05:42:52.771"/>
</return>
<msg timestamp="20220705 05:42:52.771" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 05:42:52.623" endtime="20220705 05:42:52.771"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 05:42:52.771" endtime="20220705 05:42:52.771"/>
</return>
<msg timestamp="20220705 05:42:52.771" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 05:42:52.623" endtime="20220705 05:42:52.771"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 05:42:52.772" endtime="20220705 05:42:52.772"/>
</return>
<msg timestamp="20220705 05:42:52.773" level="INFO">${CARD_ID} = 62c3cf5c1674ad1bd9bb77d8</msg>
<status status="PASS" starttime="20220705 05:42:52.771" endtime="20220705 05:42:52.773"/>
</kw>
<kw name="Archive A Card" library="Card">
<arg>${CARD_ID}</arg>
<doc>Modifies the card status to closed.</doc>
<kw name="Update A Card" library="Card">
<var>${response}</var>
<arg>${id}</arg>
<arg>closed</arg>
<arg>true</arg>
<arg>status_code=${status_code}</arg>
<doc>Updates the card with the given ID
optional_args: name, desc, closed, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<arg>status_code=${status_code}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 05:42:52.775" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 05:42:52.775" endtime="20220705 05:42:52.775"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 05:42:52.775" endtime="20220705 05:42:52.775"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 05:42:52.776" level="INFO">${url} = cards/62c3cf5c1674ad1bd9bb77d8</msg>
<status status="PASS" starttime="20220705 05:42:52.775" endtime="20220705 05:42:52.776"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 05:42:52.884" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 05:42:52.776" endtime="20220705 05:42:52.885"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 05:42:52.885" endtime="20220705 05:42:52.885"/>
</return>
<msg timestamp="20220705 05:42:52.885" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 05:42:52.774" endtime="20220705 05:42:52.885"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 05:42:52.885" endtime="20220705 05:42:52.885"/>
</return>
<msg timestamp="20220705 05:42:52.885" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 05:42:52.773" endtime="20220705 05:42:52.885"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 05:42:52.885" endtime="20220705 05:42:52.885"/>
</return>
<status status="PASS" starttime="20220705 05:42:52.773" endtime="20220705 05:42:52.885"/>
</kw>
<kw name="Get A Card" library="Card">
<var>${response}</var>
<arg>${CARD_ID}</arg>
<doc>Gets the card with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 05:42:52.887" level="INFO">${url} = cards/62c3cf5c1674ad1bd9bb77d8</msg>
<status status="PASS" starttime="20220705 05:42:52.887" endtime="20220705 05:42:52.887"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 05:42:52.939" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 05:42:52.887" endtime="20220705 05:42:52.939"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 05:42:52.939" endtime="20220705 05:42:52.940"/>
</return>
<msg timestamp="20220705 05:42:52.940" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 05:42:52.886" endtime="20220705 05:42:52.940"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 05:42:52.940" endtime="20220705 05:42:52.940"/>
</return>
<msg timestamp="20220705 05:42:52.940" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 05:42:52.886" endtime="20220705 05:42:52.940"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_CLOSED}</var>
<arg>${response}</arg>
<arg>closed</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 05:42:52.941" endtime="20220705 05:42:52.941"/>
</return>
<msg timestamp="20220705 05:42:52.942" level="INFO">${CARD_CLOSED} = True</msg>
<status status="PASS" starttime="20220705 05:42:52.940" endtime="20220705 05:42:52.942"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${CARD_CLOSED}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220705 05:42:52.942" endtime="20220705 05:42:52.942"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Card</arg>
<arg>${CARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Card" library="Card">
<arg>${CARD_ID}</arg>
<doc>Deletes the card with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 05:42:52.943" level="INFO">${url} = cards/62c3cf5c1674ad1bd9bb77d8</msg>
<status status="PASS" starttime="20220705 05:42:52.943" endtime="20220705 05:42:52.943"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 05:42:53.063" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 05:42:52.944" endtime="20220705 05:42:53.063"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 05:42:53.063" endtime="20220705 05:42:53.063"/>
</return>
<msg timestamp="20220705 05:42:53.064" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 05:42:52.943" endtime="20220705 05:42:53.064"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 05:42:53.064" endtime="20220705 05:42:53.064"/>
</return>
<status status="PASS" starttime="20220705 05:42:52.942" endtime="20220705 05:42:53.064"/>
</kw>
<status status="PASS" starttime="20220705 05:42:52.942" endtime="20220705 05:42:53.064"/>
</kw>
<doc>Verify that a card can be closed through API</doc>
<tag>api</tag>
<tag>card.close</tag>
<tag>regression</tag>
<status status="PASS" starttime="20220705 05:42:52.622" endtime="20220705 05:42:53.064"/>
</test>
<test id="s1-s1-s2-t3" name="Verify A Card Can Be Deleted" line="35">
<kw name="Create A Card" library="Card">
<var>${response}</var>
<doc>Creates a new card in the given list.
required_args: listId
optional_args: name, desc, pos, idCardSource, idLabels, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>@{optional_args}</arg>
<arg>idList</arg>
<arg>${idList}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 05:42:53.067" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 05:42:53.066" endtime="20220705 05:42:53.067"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 05:42:53.067" endtime="20220705 05:42:53.067"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 05:42:53.068" level="INFO">${url} = cards/</msg>
<status status="PASS" starttime="20220705 05:42:53.067" endtime="20220705 05:42:53.068"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 05:42:53.202" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 05:42:53.068" endtime="20220705 05:42:53.202"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 05:42:53.202" endtime="20220705 05:42:53.202"/>
</return>
<msg timestamp="20220705 05:42:53.203" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 05:42:53.065" endtime="20220705 05:42:53.203"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 05:42:53.203" endtime="20220705 05:42:53.203"/>
</return>
<msg timestamp="20220705 05:42:53.203" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 05:42:53.065" endtime="20220705 05:42:53.203"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 05:42:53.203" endtime="20220705 05:42:53.204"/>
</return>
<msg timestamp="20220705 05:42:53.204" level="INFO">${CARD_ID} = 62c3cf5dc5fa8d6d4b754bac</msg>
<status status="PASS" starttime="20220705 05:42:53.203" endtime="20220705 05:42:53.204"/>
</kw>
<kw name="Delete A Card" library="Card">
<var>${response}</var>
<arg>${CARD_ID}</arg>
<doc>Deletes the card with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 05:42:53.206" level="INFO">${url} = cards/62c3cf5dc5fa8d6d4b754bac</msg>
<status status="PASS" starttime="20220705 05:42:53.205" endtime="20220705 05:42:53.206"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 05:42:53.334" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 05:42:53.206" endtime="20220705 05:42:53.334"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 05:42:53.334" endtime="20220705 05:42:53.334"/>
</return>
<msg timestamp="20220705 05:42:53.334" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 05:42:53.205" endtime="20220705 05:42:53.334"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 05:42:53.334" endtime="20220705 05:42:53.334"/>
</return>
<msg timestamp="20220705 05:42:53.334" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 05:42:53.205" endtime="20220705 05:42:53.335"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>delete</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 05:42:53.335" endtime="20220705 05:42:53.337"/>
</kw>
<status status="PASS" starttime="20220705 05:42:53.335" endtime="20220705 05:42:53.337"/>
</kw>
<kw name="Get A Card" library="Card">
<arg>${CARD_ID}</arg>
<arg>status_code=404</arg>
<doc>Gets the card with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 05:42:53.338" level="INFO">${url} = cards/62c3cf5dc5fa8d6d4b754bac</msg>
<status status="PASS" starttime="20220705 05:42:53.338" endtime="20220705 05:42:53.338"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 05:42:53.373" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220705 05:42:53.339" endtime="20220705 05:42:53.373"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 05:42:53.373" endtime="20220705 05:42:53.373"/>
</return>
<msg timestamp="20220705 05:42:53.373" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220705 05:42:53.338" endtime="20220705 05:42:53.373"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 05:42:53.373" endtime="20220705 05:42:53.373"/>
</return>
<status status="PASS" starttime="20220705 05:42:53.337" endtime="20220705 05:42:53.373"/>
</kw>
<doc>Verify that a card can be deleted through API</doc>
<tag>api</tag>
<tag>card.delete</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220705 05:42:53.064" endtime="20220705 05:42:53.374"/>
</test>
<test id="s1-s1-s2-t4" name="Verify A Card Can Be Updated" line="44">
<kw name="Create A Card" library="Card">
<var>${response}</var>
<arg>name</arg>
<arg>RFCard4</arg>
<doc>Creates a new card in the given list.
required_args: listId
optional_args: name, desc, pos, idCardSource, idLabels, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>@{optional_args}</arg>
<arg>idList</arg>
<arg>${idList}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 05:42:53.376" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 05:42:53.376" endtime="20220705 05:42:53.376"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 05:42:53.376" endtime="20220705 05:42:53.376"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 05:42:53.377" level="INFO">${url} = cards/</msg>
<status status="PASS" starttime="20220705 05:42:53.376" endtime="20220705 05:42:53.377"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 05:42:53.533" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 05:42:53.377" endtime="20220705 05:42:53.533"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 05:42:53.533" endtime="20220705 05:42:53.533"/>
</return>
<msg timestamp="20220705 05:42:53.533" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 05:42:53.375" endtime="20220705 05:42:53.533"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 05:42:53.533" endtime="20220705 05:42:53.533"/>
</return>
<msg timestamp="20220705 05:42:53.533" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 05:42:53.375" endtime="20220705 05:42:53.533"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 05:42:53.534" endtime="20220705 05:42:53.534"/>
</return>
<msg timestamp="20220705 05:42:53.535" level="INFO">${CARD_ID} = 62c3cf5d54277257b8bfe14f</msg>
<status status="PASS" starttime="20220705 05:42:53.533" endtime="20220705 05:42:53.535"/>
</kw>
<kw name="Update A Card" library="Card">
<var>${response}</var>
<arg>${CARD_ID}</arg>
<arg>name</arg>
<arg>RFCard5</arg>
<arg>desc</arg>
<arg>Description</arg>
<doc>Updates the card with the given ID
optional_args: name, desc, closed, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<arg>status_code=${status_code}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 05:42:53.536" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 05:42:53.536" endtime="20220705 05:42:53.536"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 05:42:53.536" endtime="20220705 05:42:53.536"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 05:42:53.537" level="INFO">${url} = cards/62c3cf5d54277257b8bfe14f</msg>
<status status="PASS" starttime="20220705 05:42:53.537" endtime="20220705 05:42:53.537"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 05:42:53.666" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 05:42:53.537" endtime="20220705 05:42:53.666"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 05:42:53.666" endtime="20220705 05:42:53.666"/>
</return>
<msg timestamp="20220705 05:42:53.666" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 05:42:53.535" endtime="20220705 05:42:53.666"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 05:42:53.666" endtime="20220705 05:42:53.666"/>
</return>
<msg timestamp="20220705 05:42:53.667" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 05:42:53.535" endtime="20220705 05:42:53.667"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>card</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 05:42:53.667" endtime="20220705 05:42:53.673"/>
</kw>
<status status="PASS" starttime="20220705 05:42:53.667" endtime="20220705 05:42:53.673"/>
</kw>
<kw name="Get A Card" library="Card">
<var>${response}</var>
<arg>${CARD_ID}</arg>
<doc>Gets the card with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 05:42:53.674" level="INFO">${url} = cards/62c3cf5d54277257b8bfe14f</msg>
<status status="PASS" starttime="20220705 05:42:53.674" endtime="20220705 05:42:53.674"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 05:42:53.731" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 05:42:53.674" endtime="20220705 05:42:53.731"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 05:42:53.731" endtime="20220705 05:42:53.731"/>
</return>
<msg timestamp="20220705 05:42:53.731" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 05:42:53.674" endtime="20220705 05:42:53.731"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 05:42:53.731" endtime="20220705 05:42:53.731"/>
</return>
<msg timestamp="20220705 05:42:53.731" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 05:42:53.673" endtime="20220705 05:42:53.731"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_NAME}</var>
<arg>${response}</arg>
<arg>name</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 05:42:53.732" endtime="20220705 05:42:53.732"/>
</return>
<msg timestamp="20220705 05:42:53.733" level="INFO">${CARD_NAME} = RFCard5</msg>
<status status="PASS" starttime="20220705 05:42:53.731" endtime="20220705 05:42:53.733"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_DESC}</var>
<arg>${response}</arg>
<arg>desc</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 05:42:53.733" endtime="20220705 05:42:53.733"/>
</return>
<msg timestamp="20220705 05:42:53.734" level="INFO">${CARD_DESC} = Description</msg>
<status status="PASS" starttime="20220705 05:42:53.733" endtime="20220705 05:42:53.734"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${CARD_NAME}</arg>
<arg>RFCard5</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220705 05:42:53.734" endtime="20220705 05:42:53.734"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${CARD_DESC}</arg>
<arg>Description</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220705 05:42:53.734" endtime="20220705 05:42:53.735"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Card</arg>
<arg>${CARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Card" library="Card">
<arg>${CARD_ID}</arg>
<doc>Deletes the card with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 05:42:53.736" level="INFO">${url} = cards/62c3cf5d54277257b8bfe14f</msg>
<status status="PASS" starttime="20220705 05:42:53.736" endtime="20220705 05:42:53.736"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 05:42:53.878" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 05:42:53.736" endtime="20220705 05:42:53.878"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 05:42:53.878" endtime="20220705 05:42:53.878"/>
</return>
<msg timestamp="20220705 05:42:53.878" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 05:42:53.735" endtime="20220705 05:42:53.878"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 05:42:53.879" endtime="20220705 05:42:53.879"/>
</return>
<status status="PASS" starttime="20220705 05:42:53.735" endtime="20220705 05:42:53.879"/>
</kw>
<status status="PASS" starttime="20220705 05:42:53.735" endtime="20220705 05:42:53.879"/>
</kw>
<doc>Verify that a card's name and Description can be updated through API</doc>
<tag>api</tag>
<tag>card.update</tag>
<tag>regression</tag>
<status status="PASS" starttime="20220705 05:42:53.374" endtime="20220705 05:42:53.879"/>
</test>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Teardown Board</arg>
<arg>Delete All Sessions</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Teardown Board">
<doc>Delete the board created for this suite</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 05:42:53.882" level="INFO">${url} = boards/62c3cf5c2710a158e10a1143</msg>
<status status="PASS" starttime="20220705 05:42:53.881" endtime="20220705 05:42:53.882"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 05:42:54.193" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 05:42:53.882" endtime="20220705 05:42:54.193"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 05:42:54.193" endtime="20220705 05:42:54.193"/>
</return>
<msg timestamp="20220705 05:42:54.193" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 05:42:53.881" endtime="20220705 05:42:54.193"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 05:42:54.193" endtime="20220705 05:42:54.193"/>
</return>
<status status="PASS" starttime="20220705 05:42:53.880" endtime="20220705 05:42:54.193"/>
</kw>
<status status="PASS" starttime="20220705 05:42:53.880" endtime="20220705 05:42:54.193"/>
</kw>
<status status="PASS" starttime="20220705 05:42:53.880" endtime="20220705 05:42:54.193"/>
</kw>
<kw name="Delete All Sessions" library="request_own_library">
<status status="PASS" starttime="20220705 05:42:54.194" endtime="20220705 05:42:54.195"/>
</kw>
<status status="PASS" starttime="20220705 05:42:53.879" endtime="20220705 05:42:54.195"/>
</kw>
<doc>Example Test with Trello API Cards</doc>
<status status="PASS" starttime="20220705 05:42:51.903" endtime="20220705 05:42:54.195"/>
</suite>
<suite id="s1-s1-s3" name="Trello Api Checklists Tests" source="/trello/api/trello_api_checklists_tests.robot">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Create Trello Session</arg>
<arg>Setup Board, List And Card</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Create Trello Session" library="TrelloAPI">
<doc>Creates a Trello Session</doc>
<kw name="Create Session" library="request_own_library">
<arg>${API_BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<status status="PASS" starttime="20220705 05:42:54.206" endtime="20220705 05:42:54.206"/>
</kw>
<status status="PASS" starttime="20220705 05:42:54.206" endtime="20220705 05:42:54.206"/>
</kw>
<kw name="Setup Board, List And Card">
<doc>Create a board and save its ID and its first list's ID</doc>
<kw name="Create A Board" library="Board">
<var>${BOARD}</var>
<arg>TestBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 05:42:54.207" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 05:42:54.207" endtime="20220705 05:42:54.207"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 05:42:54.207" endtime="20220705 05:42:54.208"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 05:42:54.208" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220705 05:42:54.208" endtime="20220705 05:42:54.208"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 05:42:54.406" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 05:42:54.209" endtime="20220705 05:42:54.406"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 05:42:54.406" endtime="20220705 05:42:54.406"/>
</return>
<msg timestamp="20220705 05:42:54.407" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 05:42:54.207" endtime="20220705 05:42:54.407"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 05:42:54.407" endtime="20220705 05:42:54.407"/>
</return>
<msg timestamp="20220705 05:42:54.407" level="INFO">${BOARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 05:42:54.207" endtime="20220705 05:42:54.407"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_BOARD_ID}</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220705 05:42:54.408" level="INFO">${TEST_SUITE_BOARD_ID} = 62c3cf5eb081c8273ad807ab</msg>
<status status="PASS" starttime="20220705 05:42:54.407" endtime="20220705 05:42:54.408"/>
</kw>
<kw name="Get Lists On A Board" library="Board">
<var>${LISTS}</var>
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Get all the lists in a board</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>lists_on_board</arg>
<arg>${id}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 05:42:54.409" level="INFO">${url} = boards/62c3cf5eb081c8273ad807ab/lists/</msg>
<status status="PASS" starttime="20220705 05:42:54.409" endtime="20220705 05:42:54.409"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 05:42:54.457" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 05:42:54.409" endtime="20220705 05:42:54.457"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 05:42:54.457" endtime="20220705 05:42:54.457"/>
</return>
<msg timestamp="20220705 05:42:54.457" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 05:42:54.409" endtime="20220705 05:42:54.457"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 05:42:54.457" endtime="20220705 05:42:54.457"/>
</return>
<msg timestamp="20220705 05:42:54.458" level="INFO">${LISTS} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 05:42:54.408" endtime="20220705 05:42:54.458"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_LIST_ID}</arg>
<arg>${LISTS.json()}[0][id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220705 05:42:54.459" level="INFO">${TEST_SUITE_LIST_ID} = 62c3cf5eb081c8273ad807b2</msg>
<status status="PASS" starttime="20220705 05:42:54.458" endtime="20220705 05:42:54.459"/>
</kw>
<kw name="Create A Card" library="Card">
<var>${CARD}</var>
<arg>name</arg>
<arg>TestCard</arg>
<doc>Creates a new card in the given list.
required_args: listId
optional_args: name, desc, pos, idCardSource, idLabels, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>@{optional_args}</arg>
<arg>idList</arg>
<arg>${idList}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 05:42:54.461" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 05:42:54.460" endtime="20220705 05:42:54.461"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 05:42:54.461" endtime="20220705 05:42:54.461"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 05:42:54.462" level="INFO">${url} = cards/</msg>
<status status="PASS" starttime="20220705 05:42:54.461" endtime="20220705 05:42:54.462"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 05:42:54.686" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 05:42:54.462" endtime="20220705 05:42:54.686"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 05:42:54.686" endtime="20220705 05:42:54.686"/>
</return>
<msg timestamp="20220705 05:42:54.686" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 05:42:54.460" endtime="20220705 05:42:54.686"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 05:42:54.686" endtime="20220705 05:42:54.686"/>
</return>
<msg timestamp="20220705 05:42:54.686" level="INFO">${CARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 05:42:54.459" endtime="20220705 05:42:54.686"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_CARD_ID}</arg>
<arg>${CARD.json()}[id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220705 05:42:54.687" level="INFO">${TEST_SUITE_CARD_ID} = 62c3cf5ec00d790a3b6b5aea</msg>
<status status="PASS" starttime="20220705 05:42:54.687" endtime="20220705 05:42:54.687"/>
</kw>
<status status="PASS" starttime="20220705 05:42:54.206" endtime="20220705 05:42:54.688"/>
</kw>
<status status="PASS" starttime="20220705 05:42:54.205" endtime="20220705 05:42:54.688"/>
</kw>
<test id="s1-s1-s3-t1" name="Verify A Checklist Can Be Created" line="14">
<kw name="Create A Checklist" library="Checklist">
<var>${response}</var>
<arg>name</arg>
<arg>TestChecklist</arg>
<arg>idCard=${TEST_SUITE_CARD_ID}</arg>
<doc>Creates a new checklist in the given card.
required_args: idCard
optional_args: name, pos, idChecklistSource
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>@{optional_args}</arg>
<arg>idCard</arg>
<arg>${idCard}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 05:42:54.690" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 05:42:54.690" endtime="20220705 05:42:54.690"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 05:42:54.690" endtime="20220705 05:42:54.690"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 05:42:54.691" level="INFO">${url} = checklists/</msg>
<status status="PASS" starttime="20220705 05:42:54.690" endtime="20220705 05:42:54.691"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 05:42:54.787" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 05:42:54.691" endtime="20220705 05:42:54.787"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 05:42:54.787" endtime="20220705 05:42:54.788"/>
</return>
<msg timestamp="20220705 05:42:54.788" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 05:42:54.689" endtime="20220705 05:42:54.788"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 05:42:54.788" endtime="20220705 05:42:54.788"/>
</return>
<msg timestamp="20220705 05:42:54.788" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 05:42:54.688" endtime="20220705 05:42:54.788"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${checklist_id}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 05:42:54.789" endtime="20220705 05:42:54.789"/>
</return>
<msg timestamp="20220705 05:42:54.790" level="INFO">${checklist_id} = 62c3cf5e14feb22bf333a266</msg>
<status status="PASS" starttime="20220705 05:42:54.788" endtime="20220705 05:42:54.790"/>
</kw>
<kw name="Get A Checklist" library="Checklist">
<var>${response}</var>
<arg>${checklist_id}</arg>
<doc>Gets the checklist with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 05:42:54.791" level="INFO">${url} = checklists/62c3cf5e14feb22bf333a266</msg>
<status status="PASS" starttime="20220705 05:42:54.791" endtime="20220705 05:42:54.791"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 05:42:54.841" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 05:42:54.791" endtime="20220705 05:42:54.841"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 05:42:54.841" endtime="20220705 05:42:54.842"/>
</return>
<msg timestamp="20220705 05:42:54.842" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 05:42:54.790" endtime="20220705 05:42:54.842"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 05:42:54.842" endtime="20220705 05:42:54.842"/>
</return>
<msg timestamp="20220705 05:42:54.842" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 05:42:54.790" endtime="20220705 05:42:54.842"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${checklist_name}</var>
<arg>${response}</arg>
<arg>name</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 05:42:54.843" endtime="20220705 05:42:54.843"/>
</return>
<msg timestamp="20220705 05:42:54.843" level="INFO">${checklist_name} = TestChecklist</msg>
<status status="PASS" starttime="20220705 05:42:54.842" endtime="20220705 05:42:54.843"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${checklist_name}</arg>
<arg>TestChecklist</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220705 05:42:54.844" endtime="20220705 05:42:54.844"/>
</kw>
<kw name="Delete A Checklist" library="Checklist" type="TEARDOWN">
<arg>${checklist_id}</arg>
<doc>Deletes the checklist with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 05:42:54.845" level="INFO">${url} = checklists/62c3cf5e14feb22bf333a266</msg>
<status status="PASS" starttime="20220705 05:42:54.845" endtime="20220705 05:42:54.845"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 05:42:54.970" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 05:42:54.845" endtime="20220705 05:42:54.970"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 05:42:54.970" endtime="20220705 05:42:54.970"/>
</return>
<msg timestamp="20220705 05:42:54.970" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 05:42:54.844" endtime="20220705 05:42:54.970"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 05:42:54.970" endtime="20220705 05:42:54.970"/>
</return>
<status status="PASS" starttime="20220705 05:42:54.844" endtime="20220705 05:42:54.970"/>
</kw>
<doc>Verify that a checklist can be created through API</doc>
<tag>api</tag>
<tag>checklist.create</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220705 05:42:54.688" endtime="20220705 05:42:54.970"/>
</test>
<test id="s1-s1-s3-t2" name="Verify A Checklist Can Be Deleted" line="24">
<kw name="Create A Checklist" library="Checklist">
<var>${response}</var>
<arg>name</arg>
<arg>TestChecklist</arg>
<arg>idCard=${TEST_SUITE_CARD_ID}</arg>
<doc>Creates a new checklist in the given card.
required_args: idCard
optional_args: name, pos, idChecklistSource
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>@{optional_args}</arg>
<arg>idCard</arg>
<arg>${idCard}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 05:42:54.973" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 05:42:54.973" endtime="20220705 05:42:54.973"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 05:42:54.974" endtime="20220705 05:42:54.974"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 05:42:54.975" level="INFO">${url} = checklists/</msg>
<status status="PASS" starttime="20220705 05:42:54.974" endtime="20220705 05:42:54.975"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 05:42:55.074" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 05:42:54.975" endtime="20220705 05:42:55.074"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 05:42:55.074" endtime="20220705 05:42:55.075"/>
</return>
<msg timestamp="20220705 05:42:55.075" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 05:42:54.973" endtime="20220705 05:42:55.075"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 05:42:55.075" endtime="20220705 05:42:55.075"/>
</return>
<msg timestamp="20220705 05:42:55.075" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 05:42:54.972" endtime="20220705 05:42:55.075"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${checklist_id}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 05:42:55.076" endtime="20220705 05:42:55.076"/>
</return>
<msg timestamp="20220705 05:42:55.077" level="INFO">${checklist_id} = 62c3cf5f0c70c7125696b50b</msg>
<status status="PASS" starttime="20220705 05:42:55.075" endtime="20220705 05:42:55.077"/>
</kw>
<kw name="Delete A Checklist" library="Checklist">
<var>${response}</var>
<arg>${checklist_id}</arg>
<doc>Deletes the checklist with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 05:42:55.078" level="INFO">${url} = checklists/62c3cf5f0c70c7125696b50b</msg>
<status status="PASS" starttime="20220705 05:42:55.078" endtime="20220705 05:42:55.078"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 05:42:55.195" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 05:42:55.078" endtime="20220705 05:42:55.195"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 05:42:55.196" endtime="20220705 05:42:55.196"/>
</return>
<msg timestamp="20220705 05:42:55.196" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 05:42:55.077" endtime="20220705 05:42:55.196"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 05:42:55.196" endtime="20220705 05:42:55.196"/>
</return>
<msg timestamp="20220705 05:42:55.196" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 05:42:55.077" endtime="20220705 05:42:55.196"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>delete</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 05:42:55.197" endtime="20220705 05:42:55.199"/>
</kw>
<status status="PASS" starttime="20220705 05:42:55.197" endtime="20220705 05:42:55.199"/>
</kw>
<kw name="Get A Checklist" library="Checklist">
<arg>${checklist_id}</arg>
<arg>status_code=404</arg>
<doc>Gets the checklist with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 05:42:55.200" level="INFO">${url} = checklists/62c3cf5f0c70c7125696b50b</msg>
<status status="PASS" starttime="20220705 05:42:55.200" endtime="20220705 05:42:55.200"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 05:42:55.237" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220705 05:42:55.201" endtime="20220705 05:42:55.237"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 05:42:55.237" endtime="20220705 05:42:55.237"/>
</return>
<msg timestamp="20220705 05:42:55.237" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220705 05:42:55.200" endtime="20220705 05:42:55.237"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 05:42:55.238" endtime="20220705 05:42:55.238"/>
</return>
<status status="PASS" starttime="20220705 05:42:55.199" endtime="20220705 05:42:55.238"/>
</kw>
<doc>Verify that a checklist can be deleted through API</doc>
<tag>api</tag>
<tag>checklist.delete</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220705 05:42:54.971" endtime="20220705 05:42:55.238"/>
</test>
<test id="s1-s1-s3-t3" name="Verify A Checklist Can Be Updated" line="33">
<kw name="Create A Checklist" library="Checklist">
<var>${response}</var>
<arg>name</arg>
<arg>TestChecklist</arg>
<arg>idCard=${TEST_SUITE_CARD_ID}</arg>
<doc>Creates a new checklist in the given card.
required_args: idCard
optional_args: name, pos, idChecklistSource
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>@{optional_args}</arg>
<arg>idCard</arg>
<arg>${idCard}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 05:42:55.242" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 05:42:55.241" endtime="20220705 05:42:55.242"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 05:42:55.242" endtime="20220705 05:42:55.243"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 05:42:55.243" level="INFO">${url} = checklists/</msg>
<status status="PASS" starttime="20220705 05:42:55.243" endtime="20220705 05:42:55.243"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 05:42:55.355" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 05:42:55.243" endtime="20220705 05:42:55.355"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 05:42:55.355" endtime="20220705 05:42:55.355"/>
</return>
<msg timestamp="20220705 05:42:55.356" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 05:42:55.240" endtime="20220705 05:42:55.356"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 05:42:55.356" endtime="20220705 05:42:55.356"/>
</return>
<msg timestamp="20220705 05:42:55.356" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 05:42:55.239" endtime="20220705 05:42:55.356"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${checklist_id}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 05:42:55.357" endtime="20220705 05:42:55.357"/>
</return>
<msg timestamp="20220705 05:42:55.357" level="INFO">${checklist_id} = 62c3cf5f786c902798cd268b</msg>
<status status="PASS" starttime="20220705 05:42:55.356" endtime="20220705 05:42:55.357"/>
</kw>
<kw name="Update A Checklist" library="Checklist">
<var>${response}</var>
<arg>${checklist_id}</arg>
<arg>name</arg>
<arg>TestChecklist2</arg>
<doc>Updates the checklist with the given ID
optional_args: name, pos
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<arg>status_code=${status_code}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 05:42:55.359" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 05:42:55.359" endtime="20220705 05:42:55.359"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 05:42:55.359" endtime="20220705 05:42:55.359"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 05:42:55.360" level="INFO">${url} = checklists/62c3cf5f786c902798cd268b</msg>
<status status="PASS" starttime="20220705 05:42:55.359" endtime="20220705 05:42:55.360"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 05:42:55.437" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 05:42:55.360" endtime="20220705 05:42:55.437"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 05:42:55.437" endtime="20220705 05:42:55.437"/>
</return>
<msg timestamp="20220705 05:42:55.437" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 05:42:55.358" endtime="20220705 05:42:55.437"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 05:42:55.437" endtime="20220705 05:42:55.437"/>
</return>
<msg timestamp="20220705 05:42:55.438" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 05:42:55.357" endtime="20220705 05:42:55.438"/>
</kw>
<kw name="Get A Checklist" library="Checklist">
<var>${response}</var>
<arg>${checklist_id}</arg>
<doc>Gets the checklist with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 05:42:55.439" level="INFO">${url} = checklists/62c3cf5f786c902798cd268b</msg>
<status status="PASS" starttime="20220705 05:42:55.439" endtime="20220705 05:42:55.439"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 05:42:55.499" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 05:42:55.439" endtime="20220705 05:42:55.499"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 05:42:55.499" endtime="20220705 05:42:55.499"/>
</return>
<msg timestamp="20220705 05:42:55.499" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 05:42:55.438" endtime="20220705 05:42:55.499"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 05:42:55.499" endtime="20220705 05:42:55.499"/>
</return>
<msg timestamp="20220705 05:42:55.499" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 05:42:55.438" endtime="20220705 05:42:55.499"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${checklist_name}</var>
<arg>${response}</arg>
<arg>name</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 05:42:55.500" endtime="20220705 05:42:55.500"/>
</return>
<msg timestamp="20220705 05:42:55.501" level="INFO">${checklist_name} = TestChecklist2</msg>
<status status="PASS" starttime="20220705 05:42:55.499" endtime="20220705 05:42:55.501"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${checklist_name}</arg>
<arg>TestChecklist2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220705 05:42:55.501" endtime="20220705 05:42:55.501"/>
</kw>
<kw name="Delete A Checklist" library="Checklist" type="TEARDOWN">
<arg>${checklist_id}</arg>
<doc>Deletes the checklist with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 05:42:55.514" level="INFO">${url} = checklists/62c3cf5f786c902798cd268b</msg>
<status status="PASS" starttime="20220705 05:42:55.513" endtime="20220705 05:42:55.514"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 05:42:55.624" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 05:42:55.514" endtime="20220705 05:42:55.624"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 05:42:55.624" endtime="20220705 05:42:55.624"/>
</return>
<msg timestamp="20220705 05:42:55.625" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 05:42:55.513" endtime="20220705 05:42:55.625"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 05:42:55.625" endtime="20220705 05:42:55.625"/>
</return>
<status status="PASS" starttime="20220705 05:42:55.501" endtime="20220705 05:42:55.625"/>
</kw>
<doc>Verify that a checklist's name can be updated through API</doc>
<tag>api</tag>
<tag>checklist.update</tag>
<tag>regression</tag>
<status status="PASS" starttime="20220705 05:42:55.238" endtime="20220705 05:42:55.625"/>
</test>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Teardown Board</arg>
<arg>Delete All Sessions</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Teardown Board">
<doc>Delete the board created for this suite</doc>
<kw name="Delete A Board" library="Board">
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 05:42:55.627" level="INFO">${url} = boards/62c3cf5eb081c8273ad807ab</msg>
<status status="PASS" starttime="20220705 05:42:55.627" endtime="20220705 05:42:55.627"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 05:42:55.993" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 05:42:55.627" endtime="20220705 05:42:55.993"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 05:42:55.993" endtime="20220705 05:42:55.993"/>
</return>
<msg timestamp="20220705 05:42:55.994" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 05:42:55.626" endtime="20220705 05:42:55.994"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 05:42:55.994" endtime="20220705 05:42:55.994"/>
</return>
<status status="PASS" starttime="20220705 05:42:55.626" endtime="20220705 05:42:55.994"/>
</kw>
<status status="PASS" starttime="20220705 05:42:55.626" endtime="20220705 05:42:55.994"/>
</kw>
<kw name="Delete All Sessions" library="request_own_library">
<status status="PASS" starttime="20220705 05:42:55.994" endtime="20220705 05:42:55.995"/>
</kw>
<status status="PASS" starttime="20220705 05:42:55.626" endtime="20220705 05:42:55.996"/>
</kw>
<doc>Example Test with Trello API Checklists</doc>
<status status="PASS" starttime="20220705 05:42:54.196" endtime="20220705 05:42:55.996"/>
</suite>
<suite id="s1-s1-s4" name="Trello Api Labels Tests" source="/trello/api/trello_api_labels_tests.robot">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Create Trello Session</arg>
<arg>Setup Board And List</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Create Trello Session" library="TrelloAPI">
<doc>Creates a Trello Session</doc>
<kw name="Create Session" library="request_own_library">
<arg>${API_BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<status status="PASS" starttime="20220705 05:42:56.006" endtime="20220705 05:42:56.006"/>
</kw>
<status status="PASS" starttime="20220705 05:42:56.005" endtime="20220705 05:42:56.006"/>
</kw>
<kw name="Setup Board And List">
<doc>Create a board and save its ID and its first list's ID</doc>
<kw name="Create A Board" library="Board">
<var>${BOARD}</var>
<arg>TestBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 05:42:56.007" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 05:42:56.007" endtime="20220705 05:42:56.007"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 05:42:56.007" endtime="20220705 05:42:56.007"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 05:42:56.008" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220705 05:42:56.007" endtime="20220705 05:42:56.008"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 05:42:56.334" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 05:42:56.008" endtime="20220705 05:42:56.334"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 05:42:56.334" endtime="20220705 05:42:56.334"/>
</return>
<msg timestamp="20220705 05:42:56.334" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 05:42:56.006" endtime="20220705 05:42:56.334"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 05:42:56.334" endtime="20220705 05:42:56.335"/>
</return>
<msg timestamp="20220705 05:42:56.335" level="INFO">${BOARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 05:42:56.006" endtime="20220705 05:42:56.335"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_BOARD_ID}</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220705 05:42:56.336" level="INFO">${TEST_SUITE_BOARD_ID} = 62c3cf602766642e0942de94</msg>
<status status="PASS" starttime="20220705 05:42:56.335" endtime="20220705 05:42:56.336"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${LISTS}</var>
<arg>boards/${TEST_SUITE_BOARD_ID}/lists</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 05:42:56.382" level="INFO">${LISTS} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 05:42:56.336" endtime="20220705 05:42:56.382"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_LIST_ID}</arg>
<arg>${LISTS.json()}[0][id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220705 05:42:56.383" level="INFO">${TEST_SUITE_LIST_ID} = 62c3cf602766642e0942de9b</msg>
<status status="PASS" starttime="20220705 05:42:56.382" endtime="20220705 05:42:56.383"/>
</kw>
<status status="PASS" starttime="20220705 05:42:56.006" endtime="20220705 05:42:56.383"/>
</kw>
<status status="PASS" starttime="20220705 05:42:56.005" endtime="20220705 05:42:56.383"/>
</kw>
<test id="s1-s1-s4-t1" name="Create and get label on board" line="14">
<kw name="Create A Label" library="Label">
<var>${response}</var>
<arg>name</arg>
<arg>label2</arg>
<arg>color</arg>
<arg>yellow</arg>
<doc>Creates a new label in the given board.
required_args: idBoard
optional_args: name, color
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>idBoard</arg>
<arg>${idBoard}</arg>
<arg>@{optional_args}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 05:42:56.385" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 05:42:56.385" endtime="20220705 05:42:56.385"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 05:42:56.385" endtime="20220705 05:42:56.386"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 05:42:56.386" level="INFO">${url} = labels/</msg>
<status status="PASS" starttime="20220705 05:42:56.386" endtime="20220705 05:42:56.386"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 05:42:56.469" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 05:42:56.387" endtime="20220705 05:42:56.469"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 05:42:56.469" endtime="20220705 05:42:56.469"/>
</return>
<msg timestamp="20220705 05:42:56.469" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 05:42:56.385" endtime="20220705 05:42:56.470"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 05:42:56.470" endtime="20220705 05:42:56.470"/>
</return>
<msg timestamp="20220705 05:42:56.470" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 05:42:56.384" endtime="20220705 05:42:56.470"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>label</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 05:42:56.470" endtime="20220705 05:42:56.472"/>
</kw>
<status status="PASS" starttime="20220705 05:42:56.470" endtime="20220705 05:42:56.472"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${LABEL_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 05:42:56.473" endtime="20220705 05:42:56.473"/>
</return>
<msg timestamp="20220705 05:42:56.474" level="INFO">${LABEL_ID} = 62c3cf6033b6c82613c34364</msg>
<status status="PASS" starttime="20220705 05:42:56.473" endtime="20220705 05:42:56.474"/>
</kw>
<kw name="Get A Label" library="Label">
<var>${response}</var>
<arg>${LABEL_ID}</arg>
<doc>Gets the label with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 05:42:56.475" level="INFO">${url} = labels/62c3cf6033b6c82613c34364</msg>
<status status="PASS" starttime="20220705 05:42:56.475" endtime="20220705 05:42:56.475"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 05:42:56.522" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 05:42:56.475" endtime="20220705 05:42:56.522"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 05:42:56.522" endtime="20220705 05:42:56.522"/>
</return>
<msg timestamp="20220705 05:42:56.523" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 05:42:56.474" endtime="20220705 05:42:56.523"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 05:42:56.523" endtime="20220705 05:42:56.523"/>
</return>
<msg timestamp="20220705 05:42:56.523" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 05:42:56.474" endtime="20220705 05:42:56.523"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${LABEL_COLOR}</var>
<arg>${response}</arg>
<arg>color</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 05:42:56.523" endtime="20220705 05:42:56.524"/>
</return>
<msg timestamp="20220705 05:42:56.524" level="INFO">${LABEL_COLOR} = yellow</msg>
<status status="PASS" starttime="20220705 05:42:56.523" endtime="20220705 05:42:56.524"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${LABEL_NAME}</var>
<arg>${response}</arg>
<arg>name</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 05:42:56.525" endtime="20220705 05:42:56.525"/>
</return>
<msg timestamp="20220705 05:42:56.526" level="INFO">${LABEL_NAME} = label2</msg>
<status status="PASS" starttime="20220705 05:42:56.524" endtime="20220705 05:42:56.526"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${LABEL_COLOR}</arg>
<arg>yellow</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220705 05:42:56.526" endtime="20220705 05:42:56.526"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${LABEL_NAME}</arg>
<arg>label2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220705 05:42:56.526" endtime="20220705 05:42:56.526"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Label</arg>
<arg>${LABEL_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Label" library="Label">
<arg>${LABEL_ID}</arg>
<doc>Deletes the label with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 05:42:56.528" level="INFO">${url} = labels/62c3cf6033b6c82613c34364</msg>
<status status="PASS" starttime="20220705 05:42:56.528" endtime="20220705 05:42:56.528"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 05:42:56.653" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 05:42:56.528" endtime="20220705 05:42:56.653"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 05:42:56.653" endtime="20220705 05:42:56.653"/>
</return>
<msg timestamp="20220705 05:42:56.654" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 05:42:56.527" endtime="20220705 05:42:56.654"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 05:42:56.654" endtime="20220705 05:42:56.654"/>
</return>
<status status="PASS" starttime="20220705 05:42:56.527" endtime="20220705 05:42:56.654"/>
</kw>
<status status="PASS" starttime="20220705 05:42:56.527" endtime="20220705 05:42:56.654"/>
</kw>
<doc>Verify that a label can be created through API</doc>
<tag>api</tag>
<tag>label.create</tag>
<tag>label.get</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220705 05:42:56.384" endtime="20220705 05:42:56.654"/>
</test>
<test id="s1-s1-s4-t2" name="Update label on board" line="28">
<kw name="Create A Label" library="Label">
<var>${response}</var>
<arg>name</arg>
<arg>label2</arg>
<arg>color</arg>
<arg>yellow</arg>
<doc>Creates a new label in the given board.
required_args: idBoard
optional_args: name, color
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>idBoard</arg>
<arg>${idBoard}</arg>
<arg>@{optional_args}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 05:42:56.656" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 05:42:56.656" endtime="20220705 05:42:56.656"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 05:42:56.657" endtime="20220705 05:42:56.657"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 05:42:56.658" level="INFO">${url} = labels/</msg>
<status status="PASS" starttime="20220705 05:42:56.657" endtime="20220705 05:42:56.658"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 05:42:56.744" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 05:42:56.658" endtime="20220705 05:42:56.744"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 05:42:56.744" endtime="20220705 05:42:56.744"/>
</return>
<msg timestamp="20220705 05:42:56.744" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 05:42:56.656" endtime="20220705 05:42:56.744"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 05:42:56.744" endtime="20220705 05:42:56.744"/>
</return>
<msg timestamp="20220705 05:42:56.744" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 05:42:56.655" endtime="20220705 05:42:56.744"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>label</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 05:42:56.745" endtime="20220705 05:42:56.747"/>
</kw>
<status status="PASS" starttime="20220705 05:42:56.745" endtime="20220705 05:42:56.747"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${LABEL_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 05:42:56.748" endtime="20220705 05:42:56.748"/>
</return>
<msg timestamp="20220705 05:42:56.748" level="INFO">${LABEL_ID} = 62c3cf60201c713f64c62df3</msg>
<status status="PASS" starttime="20220705 05:42:56.747" endtime="20220705 05:42:56.748"/>
</kw>
<kw name="Update A Label" library="Label">
<var>${new_response}</var>
<arg>${LABEL_ID}</arg>
<arg>name</arg>
<arg>label3</arg>
<arg>color</arg>
<arg>orange</arg>
<doc>Updates the label with the given ID
optional_args: name, color
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 05:42:56.750" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 05:42:56.749" endtime="20220705 05:42:56.750"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 05:42:56.750" endtime="20220705 05:42:56.750"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 05:42:56.750" level="INFO">${url} = labels/62c3cf60201c713f64c62df3</msg>
<status status="PASS" starttime="20220705 05:42:56.750" endtime="20220705 05:42:56.750"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 05:42:56.849" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 05:42:56.750" endtime="20220705 05:42:56.849"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 05:42:56.849" endtime="20220705 05:42:56.849"/>
</return>
<msg timestamp="20220705 05:42:56.849" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 05:42:56.749" endtime="20220705 05:42:56.849"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 05:42:56.850" endtime="20220705 05:42:56.850"/>
</return>
<msg timestamp="20220705 05:42:56.850" level="INFO">${new_response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 05:42:56.748" endtime="20220705 05:42:56.850"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${NEW_LABEL_COLOR}</var>
<arg>${new_response}</arg>
<arg>color</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 05:42:56.850" endtime="20220705 05:42:56.850"/>
</return>
<msg timestamp="20220705 05:42:56.851" level="INFO">${NEW_LABEL_COLOR} = orange</msg>
<status status="PASS" starttime="20220705 05:42:56.850" endtime="20220705 05:42:56.851"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${NEW_LABEL_NAME}</var>
<arg>${new_response}</arg>
<arg>name</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 05:42:56.852" endtime="20220705 05:42:56.852"/>
</return>
<msg timestamp="20220705 05:42:56.852" level="INFO">${NEW_LABEL_NAME} = label3</msg>
<status status="PASS" starttime="20220705 05:42:56.851" endtime="20220705 05:42:56.852"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${NEW_LABEL_COLOR}</arg>
<arg>orange</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220705 05:42:56.852" endtime="20220705 05:42:56.853"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${NEW_LABEL_NAME}</arg>
<arg>label3</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220705 05:42:56.853" endtime="20220705 05:42:56.853"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Label</arg>
<arg>${LABEL_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Label" library="Label">
<arg>${LABEL_ID}</arg>
<doc>Deletes the label with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 05:42:56.855" level="INFO">${url} = labels/62c3cf60201c713f64c62df3</msg>
<status status="PASS" starttime="20220705 05:42:56.855" endtime="20220705 05:42:56.855"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 05:42:56.976" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 05:42:56.855" endtime="20220705 05:42:56.976"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 05:42:56.976" endtime="20220705 05:42:56.976"/>
</return>
<msg timestamp="20220705 05:42:56.976" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 05:42:56.854" endtime="20220705 05:42:56.976"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 05:42:56.976" endtime="20220705 05:42:56.976"/>
</return>
<status status="PASS" starttime="20220705 05:42:56.854" endtime="20220705 05:42:56.977"/>
</kw>
<status status="PASS" starttime="20220705 05:42:56.853" endtime="20220705 05:42:56.977"/>
</kw>
<doc>Verify that a label's name and color can be updated through API</doc>
<tag>api</tag>
<tag>label.update</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220705 05:42:56.654" endtime="20220705 05:42:56.977"/>
</test>
<test id="s1-s1-s4-t3" name="Delete label on board" line="41">
<kw name="Create A Label" library="Label">
<var>${response}</var>
<arg>name</arg>
<arg>label2</arg>
<arg>color</arg>
<arg>yellow</arg>
<doc>Creates a new label in the given board.
required_args: idBoard
optional_args: name, color
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>idBoard</arg>
<arg>${idBoard}</arg>
<arg>@{optional_args}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 05:42:56.979" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 05:42:56.979" endtime="20220705 05:42:56.979"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 05:42:56.979" endtime="20220705 05:42:56.979"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 05:42:56.980" level="INFO">${url} = labels/</msg>
<status status="PASS" starttime="20220705 05:42:56.979" endtime="20220705 05:42:56.980"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 05:42:57.064" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 05:42:56.980" endtime="20220705 05:42:57.064"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 05:42:57.064" endtime="20220705 05:42:57.064"/>
</return>
<msg timestamp="20220705 05:42:57.064" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 05:42:56.978" endtime="20220705 05:42:57.064"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 05:42:57.064" endtime="20220705 05:42:57.065"/>
</return>
<msg timestamp="20220705 05:42:57.065" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 05:42:56.978" endtime="20220705 05:42:57.065"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${LABEL_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 05:42:57.065" endtime="20220705 05:42:57.065"/>
</return>
<msg timestamp="20220705 05:42:57.066" level="INFO">${LABEL_ID} = 62c3cf61807ab832e65bec36</msg>
<status status="PASS" starttime="20220705 05:42:57.065" endtime="20220705 05:42:57.066"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Label</arg>
<arg>${LABEL_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Label" library="Label">
<arg>${LABEL_ID}</arg>
<doc>Deletes the label with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 05:42:57.068" level="INFO">${url} = labels/62c3cf61807ab832e65bec36</msg>
<status status="PASS" starttime="20220705 05:42:57.068" endtime="20220705 05:42:57.068"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 05:42:57.169" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 05:42:57.068" endtime="20220705 05:42:57.169"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 05:42:57.169" endtime="20220705 05:42:57.169"/>
</return>
<msg timestamp="20220705 05:42:57.169" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 05:42:57.067" endtime="20220705 05:42:57.169"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 05:42:57.169" endtime="20220705 05:42:57.169"/>
</return>
<status status="PASS" starttime="20220705 05:42:57.066" endtime="20220705 05:42:57.169"/>
</kw>
<status status="PASS" starttime="20220705 05:42:57.066" endtime="20220705 05:42:57.169"/>
</kw>
<kw name="Get A Label" library="Label">
<arg>${LABEL_ID}</arg>
<arg>status_code=404</arg>
<doc>Gets the label with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 05:42:57.171" level="INFO">${url} = labels/62c3cf61807ab832e65bec36</msg>
<status status="PASS" starttime="20220705 05:42:57.170" endtime="20220705 05:42:57.171"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 05:42:57.206" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220705 05:42:57.171" endtime="20220705 05:42:57.206"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 05:42:57.206" endtime="20220705 05:42:57.206"/>
</return>
<msg timestamp="20220705 05:42:57.206" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220705 05:42:57.170" endtime="20220705 05:42:57.206"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 05:42:57.206" endtime="20220705 05:42:57.207"/>
</return>
<status status="PASS" starttime="20220705 05:42:57.169" endtime="20220705 05:42:57.207"/>
</kw>
<doc>Verify that a label can be deleted through API</doc>
<tag>api</tag>
<tag>label.delete</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220705 05:42:56.977" endtime="20220705 05:42:57.207"/>
</test>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Teardown Board</arg>
<arg>Delete All Sessions</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Teardown Board">
<doc>Delete the board created for this session.</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 05:42:57.210" level="INFO">${url} = boards/62c3cf602766642e0942de94</msg>
<status status="PASS" starttime="20220705 05:42:57.209" endtime="20220705 05:42:57.210"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 05:42:57.723" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 05:42:57.210" endtime="20220705 05:42:57.723"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 05:42:57.723" endtime="20220705 05:42:57.723"/>
</return>
<msg timestamp="20220705 05:42:57.724" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 05:42:57.209" endtime="20220705 05:42:57.724"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 05:42:57.724" endtime="20220705 05:42:57.724"/>
</return>
<status status="PASS" starttime="20220705 05:42:57.209" endtime="20220705 05:42:57.724"/>
</kw>
<status status="PASS" starttime="20220705 05:42:57.208" endtime="20220705 05:42:57.724"/>
</kw>
<status status="PASS" starttime="20220705 05:42:57.208" endtime="20220705 05:42:57.724"/>
</kw>
<kw name="Delete All Sessions" library="request_own_library">
<status status="PASS" starttime="20220705 05:42:57.724" endtime="20220705 05:42:57.725"/>
</kw>
<status status="PASS" starttime="20220705 05:42:57.207" endtime="20220705 05:42:57.725"/>
</kw>
<doc>Example Test with Trello API Cards</doc>
<status status="PASS" starttime="20220705 05:42:55.997" endtime="20220705 05:42:57.725"/>
</suite>
<suite id="s1-s1-s5" name="Trello Api Lists Tests" source="/trello/api/trello_api_lists_tests.robot">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Create Trello Session</arg>
<arg>Setup Board</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Create Trello Session" library="TrelloAPI">
<doc>Creates a Trello Session</doc>
<kw name="Create Session" library="request_own_library">
<arg>${API_BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<status status="PASS" starttime="20220705 05:42:57.735" endtime="20220705 05:42:57.735"/>
</kw>
<status status="PASS" starttime="20220705 05:42:57.735" endtime="20220705 05:42:57.735"/>
</kw>
<kw name="Setup Board">
<doc>Create a board and save it's id for the suite</doc>
<kw name="Create A Board" library="Board">
<var>${BOARD}</var>
<arg>TestBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 05:42:57.736" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 05:42:57.736" endtime="20220705 05:42:57.736"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 05:42:57.736" endtime="20220705 05:42:57.737"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 05:42:57.737" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220705 05:42:57.737" endtime="20220705 05:42:57.737"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 05:42:57.905" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 05:42:57.738" endtime="20220705 05:42:57.905"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 05:42:57.905" endtime="20220705 05:42:57.906"/>
</return>
<msg timestamp="20220705 05:42:57.906" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 05:42:57.736" endtime="20220705 05:42:57.906"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 05:42:57.906" endtime="20220705 05:42:57.906"/>
</return>
<msg timestamp="20220705 05:42:57.906" level="INFO">${BOARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 05:42:57.736" endtime="20220705 05:42:57.906"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Set Suite Variable</arg>
<arg>\${TEST_SUITE_BOARD_ID}</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_BOARD_ID}</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220705 05:42:57.907" level="INFO">${TEST_SUITE_BOARD_ID} = 62c3cf61f0309d858b1fac94</msg>
<status status="PASS" starttime="20220705 05:42:57.907" endtime="20220705 05:42:57.907"/>
</kw>
<status status="PASS" starttime="20220705 05:42:57.906" endtime="20220705 05:42:57.907"/>
</kw>
<status status="PASS" starttime="20220705 05:42:57.735" endtime="20220705 05:42:57.908"/>
</kw>
<status status="PASS" starttime="20220705 05:42:57.735" endtime="20220705 05:42:57.908"/>
</kw>
<test id="s1-s1-s5-t1" name="CREATE a list" line="13">
<kw name="Create A List" library="List">
<var>${response}</var>
<arg>NewList</arg>
<doc>Creates a new List
board id
name the list will have
optional_args: idListSource, pos, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>list</arg>
<arg>name</arg>
<arg>${name}</arg>
<arg>idBoard</arg>
<arg>${idBoard}</arg>
<arg>@{optional_args}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 05:42:57.910" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 05:42:57.909" endtime="20220705 05:42:57.910"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 05:42:57.910" endtime="20220705 05:42:57.910"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 05:42:57.911" level="INFO">${url} = lists/</msg>
<status status="PASS" starttime="20220705 05:42:57.910" endtime="20220705 05:42:57.911"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 05:42:58.003" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 05:42:57.911" endtime="20220705 05:42:58.003"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 05:42:58.003" endtime="20220705 05:42:58.003"/>
</return>
<msg timestamp="20220705 05:42:58.004" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 05:42:57.909" endtime="20220705 05:42:58.004"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 05:42:58.004" endtime="20220705 05:42:58.004"/>
</return>
<msg timestamp="20220705 05:42:58.004" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 05:42:57.908" endtime="20220705 05:42:58.004"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>list</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 05:42:58.005" endtime="20220705 05:42:58.006"/>
</kw>
<status status="PASS" starttime="20220705 05:42:58.004" endtime="20220705 05:42:58.007"/>
</kw>
<doc>Verify that a list can be created through API</doc>
<tag>api</tag>
<tag>list.create</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220705 05:42:57.908" endtime="20220705 05:42:58.007"/>
</test>
<test id="s1-s1-s5-t2" name="UPDATE a list" line="19">
<kw name="Create A List" library="List">
<var>${response}</var>
<arg>NewList</arg>
<doc>Creates a new List
board id
name the list will have
optional_args: idListSource, pos, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>list</arg>
<arg>name</arg>
<arg>${name}</arg>
<arg>idBoard</arg>
<arg>${idBoard}</arg>
<arg>@{optional_args}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 05:42:58.009" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 05:42:58.009" endtime="20220705 05:42:58.009"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 05:42:58.009" endtime="20220705 05:42:58.010"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 05:42:58.010" level="INFO">${url} = lists/</msg>
<status status="PASS" starttime="20220705 05:42:58.010" endtime="20220705 05:42:58.010"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 05:42:58.107" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 05:42:58.010" endtime="20220705 05:42:58.107"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 05:42:58.108" endtime="20220705 05:42:58.108"/>
</return>
<msg timestamp="20220705 05:42:58.108" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 05:42:58.009" endtime="20220705 05:42:58.108"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 05:42:58.108" endtime="20220705 05:42:58.108"/>
</return>
<msg timestamp="20220705 05:42:58.108" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 05:42:58.008" endtime="20220705 05:42:58.108"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>list</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 05:42:58.109" endtime="20220705 05:42:58.110"/>
</kw>
<status status="PASS" starttime="20220705 05:42:58.108" endtime="20220705 05:42:58.111"/>
</kw>
<kw name="Update A List" library="List">
<arg>${response.json()}[id]</arg>
<arg>name</arg>
<arg>NewName</arg>
<doc>Updates the board with the given ID
optional_args: name, idListSource, pos, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>list</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 05:42:58.112" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 05:42:58.112" endtime="20220705 05:42:58.113"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 05:42:58.113" endtime="20220705 05:42:58.113"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 05:42:58.113" level="INFO">${url} = lists/62c3cf6233a1c96a539ad4f3</msg>
<status status="PASS" starttime="20220705 05:42:58.113" endtime="20220705 05:42:58.113"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 05:42:58.200" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 05:42:58.113" endtime="20220705 05:42:58.200"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 05:42:58.200" endtime="20220705 05:42:58.200"/>
</return>
<msg timestamp="20220705 05:42:58.200" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 05:42:58.112" endtime="20220705 05:42:58.200"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 05:42:58.200" endtime="20220705 05:42:58.200"/>
</return>
<status status="PASS" starttime="20220705 05:42:58.111" endtime="20220705 05:42:58.200"/>
</kw>
<kw name="Get A List" library="List">
<var>${new_response}</var>
<arg>${response.json()}[id]</arg>
<doc>Gets the List with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>list</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 05:42:58.202" level="INFO">${url} = lists/62c3cf6233a1c96a539ad4f3</msg>
<status status="PASS" starttime="20220705 05:42:58.202" endtime="20220705 05:42:58.202"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 05:42:58.242" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 05:42:58.203" endtime="20220705 05:42:58.242"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 05:42:58.242" endtime="20220705 05:42:58.242"/>
</return>
<msg timestamp="20220705 05:42:58.242" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 05:42:58.202" endtime="20220705 05:42:58.243"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 05:42:58.243" endtime="20220705 05:42:58.243"/>
</return>
<msg timestamp="20220705 05:42:58.243" level="INFO">${new_response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 05:42:58.201" endtime="20220705 05:42:58.243"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${new_response}</arg>
<arg>list</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 05:42:58.243" endtime="20220705 05:42:58.245"/>
</kw>
<status status="PASS" starttime="20220705 05:42:58.243" endtime="20220705 05:42:58.245"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${new_response.json()}[name]</arg>
<arg>NewName</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220705 05:42:58.245" endtime="20220705 05:42:58.246"/>
</kw>
<doc>Verify that a lists name can be updated through API</doc>
<tag>api</tag>
<tag>list.update</tag>
<tag>regression</tag>
<status status="PASS" starttime="20220705 05:42:58.007" endtime="20220705 05:42:58.246"/>
</test>
<test id="s1-s1-s5-t3" name="ARCHIVE A list" line="29">
<kw name="Create A List" library="List">
<var>${response}</var>
<arg>NewList</arg>
<doc>Creates a new List
board id
name the list will have
optional_args: idListSource, pos, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>list</arg>
<arg>name</arg>
<arg>${name}</arg>
<arg>idBoard</arg>
<arg>${idBoard}</arg>
<arg>@{optional_args}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 05:42:58.250" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 05:42:58.249" endtime="20220705 05:42:58.250"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 05:42:58.250" endtime="20220705 05:42:58.250"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 05:42:58.251" level="INFO">${url} = lists/</msg>
<status status="PASS" starttime="20220705 05:42:58.250" endtime="20220705 05:42:58.251"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 05:42:58.339" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 05:42:58.251" endtime="20220705 05:42:58.339"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 05:42:58.339" endtime="20220705 05:42:58.339"/>
</return>
<msg timestamp="20220705 05:42:58.340" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 05:42:58.249" endtime="20220705 05:42:58.340"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 05:42:58.340" endtime="20220705 05:42:58.340"/>
</return>
<msg timestamp="20220705 05:42:58.340" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 05:42:58.247" endtime="20220705 05:42:58.340"/>
</kw>
<kw name="Archive A List" library="List">
<arg>${response.json()}[id]</arg>
<doc>Deletes the list with the given ID</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>archive_list</arg>
<arg>${id}</arg>
<arg>value</arg>
<arg>true</arg>
<arg>status_code=${status_code}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 05:42:58.342" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 05:42:58.342" endtime="20220705 05:42:58.342"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 05:42:58.342" endtime="20220705 05:42:58.342"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 05:42:58.343" level="INFO">${url} = lists/62c3cf625833942ded957a54/closed</msg>
<status status="PASS" starttime="20220705 05:42:58.343" endtime="20220705 05:42:58.343"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 05:42:58.440" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 05:42:58.343" endtime="20220705 05:42:58.440"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 05:42:58.440" endtime="20220705 05:42:58.440"/>
</return>
<msg timestamp="20220705 05:42:58.440" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 05:42:58.341" endtime="20220705 05:42:58.440"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 05:42:58.440" endtime="20220705 05:42:58.440"/>
</return>
<status status="PASS" starttime="20220705 05:42:58.340" endtime="20220705 05:42:58.440"/>
</kw>
<kw name="Get A List" library="List">
<var>${new_response}</var>
<arg>${response.json()}[id]</arg>
<doc>Gets the List with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>list</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 05:42:58.442" level="INFO">${url} = lists/62c3cf625833942ded957a54</msg>
<status status="PASS" starttime="20220705 05:42:58.442" endtime="20220705 05:42:58.442"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 05:42:58.481" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 05:42:58.442" endtime="20220705 05:42:58.481"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 05:42:58.481" endtime="20220705 05:42:58.482"/>
</return>
<msg timestamp="20220705 05:42:58.482" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 05:42:58.441" endtime="20220705 05:42:58.482"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 05:42:58.482" endtime="20220705 05:42:58.482"/>
</return>
<msg timestamp="20220705 05:42:58.482" level="INFO">${new_response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 05:42:58.440" endtime="20220705 05:42:58.482"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${new_response.json()}[closed]</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220705 05:42:58.482" endtime="20220705 05:42:58.483"/>
</kw>
<doc>Verify that a list can be archived through API</doc>
<tag>api</tag>
<tag>list.archive</tag>
<tag>regression</tag>
<status status="PASS" starttime="20220705 05:42:58.246" endtime="20220705 05:42:58.483"/>
</test>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Teardown Board</arg>
<arg>Delete All Sessions</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Teardown Board">
<doc>Delete the board created for this suite.</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 05:42:58.489" level="INFO">${url} = boards/62c3cf61f0309d858b1fac94</msg>
<status status="PASS" starttime="20220705 05:42:58.489" endtime="20220705 05:42:58.489"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 05:42:58.804" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 05:42:58.489" endtime="20220705 05:42:58.804"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 05:42:58.804" endtime="20220705 05:42:58.804"/>
</return>
<msg timestamp="20220705 05:42:58.804" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 05:42:58.488" endtime="20220705 05:42:58.804"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 05:42:58.804" endtime="20220705 05:42:58.805"/>
</return>
<status status="PASS" starttime="20220705 05:42:58.488" endtime="20220705 05:42:58.805"/>
</kw>
<status status="PASS" starttime="20220705 05:42:58.488" endtime="20220705 05:42:58.805"/>
</kw>
<status status="PASS" starttime="20220705 05:42:58.487" endtime="20220705 05:42:58.805"/>
</kw>
<kw name="Delete All Sessions" library="request_own_library">
<status status="PASS" starttime="20220705 05:42:58.805" endtime="20220705 05:42:58.806"/>
</kw>
<status status="PASS" starttime="20220705 05:42:58.484" endtime="20220705 05:42:58.806"/>
</kw>
<doc>Example Test with Trello API lists</doc>
<status status="PASS" starttime="20220705 05:42:57.727" endtime="20220705 05:42:58.806"/>
</suite>
<status status="PASS" starttime="20220705 05:42:48.577" endtime="20220705 05:42:58.808"/>
</suite>
<status status="PASS" starttime="20220705 05:42:48.560" endtime="20220705 05:42:58.810"/>
</suite>
<statistics>
<total>
<stat pass="18" fail="0" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="18" fail="0" skip="0">api</stat>
<stat pass="1" fail="0" skip="0">board.create</stat>
<stat pass="1" fail="0" skip="0">board.delete</stat>
<stat pass="1" fail="0" skip="0">board.get</stat>
<stat pass="2" fail="0" skip="0">board.update</stat>
<stat pass="1" fail="0" skip="0">card.close</stat>
<stat pass="1" fail="0" skip="0">card.create</stat>
<stat pass="1" fail="0" skip="0">card.delete</stat>
<stat pass="1" fail="0" skip="0">card.update</stat>
<stat pass="1" fail="0" skip="0">checklist.create</stat>
<stat pass="1" fail="0" skip="0">checklist.delete</stat>
<stat pass="1" fail="0" skip="0">checklist.update</stat>
<stat pass="1" fail="0" skip="0">label.create</stat>
<stat pass="1" fail="0" skip="0">label.delete</stat>
<stat pass="1" fail="0" skip="0">label.get</stat>
<stat pass="1" fail="0" skip="0">label.update</stat>
<stat pass="1" fail="0" skip="0">list.archive</stat>
<stat pass="1" fail="0" skip="0">list.create</stat>
<stat pass="1" fail="0" skip="0">list.update</stat>
<stat pass="5" fail="0" skip="0">regression</stat>
<stat pass="13" fail="0" skip="0">smoke</stat>
</tag>
<suite>
<stat pass="18" fail="0" skip="0" id="s1" name="Trello">Trello</stat>
<stat pass="18" fail="0" skip="0" id="s1-s1" name="Api">Trello.Api</stat>
<stat pass="5" fail="0" skip="0" id="s1-s1-s1" name="Trello Api Boards Tests">Trello.Api.Trello Api Boards Tests</stat>
<stat pass="4" fail="0" skip="0" id="s1-s1-s2" name="Trello Api Cards Tests">Trello.Api.Trello Api Cards Tests</stat>
<stat pass="3" fail="0" skip="0" id="s1-s1-s3" name="Trello Api Checklists Tests">Trello.Api.Trello Api Checklists Tests</stat>
<stat pass="3" fail="0" skip="0" id="s1-s1-s4" name="Trello Api Labels Tests">Trello.Api.Trello Api Labels Tests</stat>
<stat pass="3" fail="0" skip="0" id="s1-s1-s5" name="Trello Api Lists Tests">Trello.Api.Trello Api Lists Tests</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
