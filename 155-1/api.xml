<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 5.0.1 (Python 3.10.5 on linux)" generated="20220705 15:47:43.680" rpa="false" schemaversion="3">
<suite id="s1" name="Trello" source="/trello">
<suite id="s1-s1" name="Api" source="/trello/api">
<suite id="s1-s1-s1" name="Trello Api Boards Tests" source="/trello/api/trello_api_boards_tests.robot">
<kw name="Create Trello Session" library="TrelloAPI" type="SETUP">
<doc>Creates a Trello Session</doc>
<kw name="Create Session" library="request_own_library">
<arg>${API_BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<status status="PASS" starttime="20220705 15:47:43.807" endtime="20220705 15:47:43.807"/>
</kw>
<status status="PASS" starttime="20220705 15:47:43.806" endtime="20220705 15:47:43.807"/>
</kw>
<test id="s1-s1-s1-t1" name="CREATE a board" line="9">
<kw name="Create A Board" library="Board">
<var>${response}</var>
<arg>NewBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 15:47:43.809" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 15:47:43.809" endtime="20220705 15:47:43.809"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 15:47:43.809" endtime="20220705 15:47:43.810"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 15:47:43.810" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220705 15:47:43.810" endtime="20220705 15:47:43.810"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 15:47:44.045" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 15:47:43.810" endtime="20220705 15:47:44.045"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 15:47:44.045" endtime="20220705 15:47:44.045"/>
</return>
<msg timestamp="20220705 15:47:44.045" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 15:47:43.809" endtime="20220705 15:47:44.045"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 15:47:44.045" endtime="20220705 15:47:44.045"/>
</return>
<msg timestamp="20220705 15:47:44.046" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 15:47:43.808" endtime="20220705 15:47:44.046"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>board</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 15:47:44.046" endtime="20220705 15:47:44.051"/>
</kw>
<status status="PASS" starttime="20220705 15:47:44.046" endtime="20220705 15:47:44.051"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${response.json()}[id]</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${response.json()}[id]</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 15:47:44.053" level="INFO">${url} = boards/62c45d1fcd725d65f87de710</msg>
<status status="PASS" starttime="20220705 15:47:44.052" endtime="20220705 15:47:44.053"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 15:47:44.425" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 15:47:44.053" endtime="20220705 15:47:44.425"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 15:47:44.425" endtime="20220705 15:47:44.425"/>
</return>
<msg timestamp="20220705 15:47:44.426" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 15:47:44.052" endtime="20220705 15:47:44.426"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 15:47:44.426" endtime="20220705 15:47:44.426"/>
</return>
<status status="PASS" starttime="20220705 15:47:44.051" endtime="20220705 15:47:44.426"/>
</kw>
<status status="PASS" starttime="20220705 15:47:44.051" endtime="20220705 15:47:44.426"/>
</kw>
<doc>Verify that a board can be create through API</doc>
<tag>api</tag>
<tag>board.create</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220705 15:47:43.808" endtime="20220705 15:47:44.426"/>
</test>
<test id="s1-s1-s1-t2" name="UPDATE a Board's name" line="16">
<kw name="Create A Board" library="Board">
<var>${response}</var>
<arg>NewBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 15:47:44.428" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 15:47:44.428" endtime="20220705 15:47:44.428"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 15:47:44.428" endtime="20220705 15:47:44.428"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 15:47:44.429" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220705 15:47:44.428" endtime="20220705 15:47:44.429"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 15:47:44.606" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 15:47:44.429" endtime="20220705 15:47:44.606"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 15:47:44.606" endtime="20220705 15:47:44.606"/>
</return>
<msg timestamp="20220705 15:47:44.607" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 15:47:44.427" endtime="20220705 15:47:44.607"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 15:47:44.607" endtime="20220705 15:47:44.607"/>
</return>
<msg timestamp="20220705 15:47:44.607" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 15:47:44.427" endtime="20220705 15:47:44.607"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>board</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 15:47:44.607" endtime="20220705 15:47:44.611"/>
</kw>
<status status="PASS" starttime="20220705 15:47:44.607" endtime="20220705 15:47:44.611"/>
</kw>
<kw name="Update A Board" library="Board">
<arg>${response.json()}[id]</arg>
<arg>name</arg>
<arg>NewName</arg>
<doc>Updates the board with the given ID
optional_args: name, desc, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 15:47:44.613" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 15:47:44.613" endtime="20220705 15:47:44.613"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 15:47:44.613" endtime="20220705 15:47:44.613"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 15:47:44.614" level="INFO">${url} = boards/62c45d203f8b784006a931e1</msg>
<status status="PASS" starttime="20220705 15:47:44.613" endtime="20220705 15:47:44.614"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 15:47:46.907" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 15:47:44.614" endtime="20220705 15:47:46.907"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 15:47:46.907" endtime="20220705 15:47:46.907"/>
</return>
<msg timestamp="20220705 15:47:46.907" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 15:47:44.612" endtime="20220705 15:47:46.907"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 15:47:46.907" endtime="20220705 15:47:46.907"/>
</return>
<status status="PASS" starttime="20220705 15:47:44.611" endtime="20220705 15:47:46.908"/>
</kw>
<kw name="Get A Board" library="Board">
<var>${new_response}</var>
<arg>${response.json()}[id]</arg>
<doc>Gets the Board with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 15:47:46.909" level="INFO">${url} = boards/62c45d203f8b784006a931e1</msg>
<status status="PASS" starttime="20220705 15:47:46.909" endtime="20220705 15:47:46.909"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 15:47:46.977" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 15:47:46.909" endtime="20220705 15:47:46.977"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 15:47:46.977" endtime="20220705 15:47:46.977"/>
</return>
<msg timestamp="20220705 15:47:46.977" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 15:47:46.908" endtime="20220705 15:47:46.977"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 15:47:46.977" endtime="20220705 15:47:46.977"/>
</return>
<msg timestamp="20220705 15:47:46.977" level="INFO">${new_response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 15:47:46.908" endtime="20220705 15:47:46.977"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${new_response}</arg>
<arg>board</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 15:47:46.978" endtime="20220705 15:47:46.982"/>
</kw>
<status status="PASS" starttime="20220705 15:47:46.977" endtime="20220705 15:47:46.982"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${new_response.json()}[name]</arg>
<arg>NewName</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220705 15:47:46.982" endtime="20220705 15:47:46.983"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${response.json()}[id]</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${response.json()}[id]</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 15:47:46.985" level="INFO">${url} = boards/62c45d203f8b784006a931e1</msg>
<status status="PASS" starttime="20220705 15:47:46.984" endtime="20220705 15:47:46.985"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 15:47:47.323" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 15:47:46.985" endtime="20220705 15:47:47.323"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 15:47:47.323" endtime="20220705 15:47:47.323"/>
</return>
<msg timestamp="20220705 15:47:47.323" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 15:47:46.984" endtime="20220705 15:47:47.323"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 15:47:47.323" endtime="20220705 15:47:47.323"/>
</return>
<status status="PASS" starttime="20220705 15:47:46.983" endtime="20220705 15:47:47.324"/>
</kw>
<status status="PASS" starttime="20220705 15:47:46.983" endtime="20220705 15:47:47.324"/>
</kw>
<doc>Verify that a board's name can be updated through API</doc>
<tag>api</tag>
<tag>board.update</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220705 15:47:44.426" endtime="20220705 15:47:47.324"/>
</test>
<test id="s1-s1-s1-t3" name="DELETE A Board" line="27">
<kw name="Create A Board" library="Board">
<var>${response}</var>
<arg>NewBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 15:47:47.326" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 15:47:47.326" endtime="20220705 15:47:47.326"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 15:47:47.326" endtime="20220705 15:47:47.327"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 15:47:47.327" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220705 15:47:47.327" endtime="20220705 15:47:47.327"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 15:47:47.485" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 15:47:47.327" endtime="20220705 15:47:47.485"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 15:47:47.485" endtime="20220705 15:47:47.485"/>
</return>
<msg timestamp="20220705 15:47:47.485" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 15:47:47.326" endtime="20220705 15:47:47.485"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 15:47:47.485" endtime="20220705 15:47:47.485"/>
</return>
<msg timestamp="20220705 15:47:47.485" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 15:47:47.325" endtime="20220705 15:47:47.485"/>
</kw>
<kw name="Delete A Board" library="Board">
<arg>${response.json()}[id]</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 15:47:47.487" level="INFO">${url} = boards/62c45d23af14645892349a4f</msg>
<status status="PASS" starttime="20220705 15:47:47.487" endtime="20220705 15:47:47.487"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 15:47:48.051" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 15:47:47.487" endtime="20220705 15:47:48.051"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 15:47:48.051" endtime="20220705 15:47:48.051"/>
</return>
<msg timestamp="20220705 15:47:48.051" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 15:47:47.486" endtime="20220705 15:47:48.051"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 15:47:48.051" endtime="20220705 15:47:48.051"/>
</return>
<status status="PASS" starttime="20220705 15:47:47.486" endtime="20220705 15:47:48.051"/>
</kw>
<kw name="Get A Board" library="Board">
<arg>${response.json()}[id]</arg>
<arg>status_code=404</arg>
<doc>Gets the Board with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 15:47:48.053" level="INFO">${url} = boards/62c45d23af14645892349a4f</msg>
<status status="PASS" starttime="20220705 15:47:48.053" endtime="20220705 15:47:48.053"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 15:47:48.083" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220705 15:47:48.053" endtime="20220705 15:47:48.083"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 15:47:48.083" endtime="20220705 15:47:48.083"/>
</return>
<msg timestamp="20220705 15:47:48.083" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220705 15:47:48.052" endtime="20220705 15:47:48.083"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 15:47:48.083" endtime="20220705 15:47:48.083"/>
</return>
<status status="PASS" starttime="20220705 15:47:48.051" endtime="20220705 15:47:48.083"/>
</kw>
<doc>Verify that a board can be deleted through API</doc>
<tag>api</tag>
<tag>board.delete</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220705 15:47:47.325" endtime="20220705 15:47:48.084"/>
</test>
<test id="s1-s1-s1-t4" name="GET Information of A Board" line="34">
<kw name="Create A Board" library="Board">
<var>${response}</var>
<arg>BoardTest</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 15:47:48.086" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 15:47:48.086" endtime="20220705 15:47:48.086"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 15:47:48.086" endtime="20220705 15:47:48.086"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 15:47:48.087" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220705 15:47:48.086" endtime="20220705 15:47:48.087"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 15:47:48.256" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 15:47:48.087" endtime="20220705 15:47:48.256"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 15:47:48.256" endtime="20220705 15:47:48.256"/>
</return>
<msg timestamp="20220705 15:47:48.256" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 15:47:48.085" endtime="20220705 15:47:48.256"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 15:47:48.256" endtime="20220705 15:47:48.256"/>
</return>
<msg timestamp="20220705 15:47:48.256" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 15:47:48.085" endtime="20220705 15:47:48.257"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>board</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 15:47:48.257" endtime="20220705 15:47:48.261"/>
</kw>
<status status="PASS" starttime="20220705 15:47:48.257" endtime="20220705 15:47:48.261"/>
</kw>
<kw name="Get A Board" library="Board">
<var>${response2}</var>
<arg>${response.json()}[id]</arg>
<doc>Gets the Board with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 15:47:48.263" level="INFO">${url} = boards/62c45d24dbd8e10f2e56c277</msg>
<status status="PASS" starttime="20220705 15:47:48.262" endtime="20220705 15:47:48.263"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 15:47:48.308" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 15:47:48.263" endtime="20220705 15:47:48.308"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 15:47:48.308" endtime="20220705 15:47:48.308"/>
</return>
<msg timestamp="20220705 15:47:48.309" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 15:47:48.262" endtime="20220705 15:47:48.309"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 15:47:48.309" endtime="20220705 15:47:48.309"/>
</return>
<msg timestamp="20220705 15:47:48.309" level="INFO">${response2} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 15:47:48.261" endtime="20220705 15:47:48.309"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response2}</arg>
<arg>board</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 15:47:48.309" endtime="20220705 15:47:48.313"/>
</kw>
<status status="PASS" starttime="20220705 15:47:48.309" endtime="20220705 15:47:48.313"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${response2.json()}[name]</arg>
<arg>BoardTest</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220705 15:47:48.313" endtime="20220705 15:47:48.314"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${response.json()}[id]</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${response.json()}[id]</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 15:47:48.316" level="INFO">${url} = boards/62c45d24dbd8e10f2e56c277</msg>
<status status="PASS" starttime="20220705 15:47:48.316" endtime="20220705 15:47:48.316"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 15:47:48.655" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 15:47:48.316" endtime="20220705 15:47:48.655"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 15:47:48.655" endtime="20220705 15:47:48.655"/>
</return>
<msg timestamp="20220705 15:47:48.655" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 15:47:48.315" endtime="20220705 15:47:48.656"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 15:47:48.656" endtime="20220705 15:47:48.656"/>
</return>
<status status="PASS" starttime="20220705 15:47:48.314" endtime="20220705 15:47:48.656"/>
</kw>
<status status="PASS" starttime="20220705 15:47:48.314" endtime="20220705 15:47:48.656"/>
</kw>
<doc>Verify that a board's information can be accesed through API</doc>
<tag>api</tag>
<tag>board.get</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220705 15:47:48.084" endtime="20220705 15:47:48.656"/>
</test>
<test id="s1-s1-s1-t5" name="UPDATE a Board's description" line="45">
<kw name="Create A Board" library="Board">
<var>${response}</var>
<arg>NewBoardForTest</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 15:47:48.658" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 15:47:48.658" endtime="20220705 15:47:48.658"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 15:47:48.658" endtime="20220705 15:47:48.659"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 15:47:48.659" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220705 15:47:48.659" endtime="20220705 15:47:48.659"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 15:47:48.819" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 15:47:48.659" endtime="20220705 15:47:48.819"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 15:47:48.819" endtime="20220705 15:47:48.819"/>
</return>
<msg timestamp="20220705 15:47:48.819" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 15:47:48.658" endtime="20220705 15:47:48.819"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 15:47:48.819" endtime="20220705 15:47:48.819"/>
</return>
<msg timestamp="20220705 15:47:48.820" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 15:47:48.657" endtime="20220705 15:47:48.820"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>board</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 15:47:48.820" endtime="20220705 15:47:48.824"/>
</kw>
<status status="PASS" starttime="20220705 15:47:48.820" endtime="20220705 15:47:48.824"/>
</kw>
<kw name="Update A Board" library="Board">
<arg>${response.json()}[id]</arg>
<arg>desc</arg>
<arg>sampleDescription</arg>
<doc>Updates the board with the given ID
optional_args: name, desc, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 15:47:48.826" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 15:47:48.826" endtime="20220705 15:47:48.826"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 15:47:48.826" endtime="20220705 15:47:48.826"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 15:47:48.826" level="INFO">${url} = boards/62c45d24c9247c62f8169061</msg>
<status status="PASS" starttime="20220705 15:47:48.826" endtime="20220705 15:47:48.826"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 15:47:48.917" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 15:47:48.827" endtime="20220705 15:47:48.917"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 15:47:48.918" endtime="20220705 15:47:48.918"/>
</return>
<msg timestamp="20220705 15:47:48.918" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 15:47:48.825" endtime="20220705 15:47:48.918"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 15:47:48.918" endtime="20220705 15:47:48.918"/>
</return>
<status status="PASS" starttime="20220705 15:47:48.824" endtime="20220705 15:47:48.918"/>
</kw>
<kw name="Get A Board" library="Board">
<var>${new_response}</var>
<arg>${response.json()}[id]</arg>
<doc>Gets the Board with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 15:47:48.920" level="INFO">${url} = boards/62c45d24c9247c62f8169061</msg>
<status status="PASS" starttime="20220705 15:47:48.920" endtime="20220705 15:47:48.920"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 15:47:48.964" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 15:47:48.920" endtime="20220705 15:47:48.964"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 15:47:48.964" endtime="20220705 15:47:48.964"/>
</return>
<msg timestamp="20220705 15:47:48.964" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 15:47:48.919" endtime="20220705 15:47:48.964"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 15:47:48.964" endtime="20220705 15:47:48.964"/>
</return>
<msg timestamp="20220705 15:47:48.964" level="INFO">${new_response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 15:47:48.918" endtime="20220705 15:47:48.964"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${new_response.json()}[desc]</arg>
<arg>sampleDescription</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220705 15:47:48.965" endtime="20220705 15:47:48.965"/>
</kw>
<kw name="Update A Board" library="Board">
<arg>${response.json()}[id]</arg>
<arg>desc</arg>
<arg>updatedDescription</arg>
<doc>Updates the board with the given ID
optional_args: name, desc, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 15:47:48.967" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 15:47:48.967" endtime="20220705 15:47:48.967"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 15:47:48.967" endtime="20220705 15:47:48.967"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 15:47:48.968" level="INFO">${url} = boards/62c45d24c9247c62f8169061</msg>
<status status="PASS" starttime="20220705 15:47:48.967" endtime="20220705 15:47:48.968"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 15:47:49.059" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 15:47:48.968" endtime="20220705 15:47:49.059"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 15:47:49.059" endtime="20220705 15:47:49.059"/>
</return>
<msg timestamp="20220705 15:47:49.059" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 15:47:48.966" endtime="20220705 15:47:49.059"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 15:47:49.059" endtime="20220705 15:47:49.059"/>
</return>
<status status="PASS" starttime="20220705 15:47:48.965" endtime="20220705 15:47:49.059"/>
</kw>
<kw name="Get A Board" library="Board">
<var>${new_response2}</var>
<arg>${response.json()}[id]</arg>
<doc>Gets the Board with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 15:47:49.061" level="INFO">${url} = boards/62c45d24c9247c62f8169061</msg>
<status status="PASS" starttime="20220705 15:47:49.061" endtime="20220705 15:47:49.061"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 15:47:49.105" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 15:47:49.061" endtime="20220705 15:47:49.105"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 15:47:49.105" endtime="20220705 15:47:49.106"/>
</return>
<msg timestamp="20220705 15:47:49.106" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 15:47:49.060" endtime="20220705 15:47:49.106"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 15:47:49.106" endtime="20220705 15:47:49.106"/>
</return>
<msg timestamp="20220705 15:47:49.106" level="INFO">${new_response2} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 15:47:49.059" endtime="20220705 15:47:49.106"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${new_response2.json()}[desc]</arg>
<arg>updatedDescription</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220705 15:47:49.106" endtime="20220705 15:47:49.107"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${response.json()}[id]</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${response.json()}[id]</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 15:47:49.109" level="INFO">${url} = boards/62c45d24c9247c62f8169061</msg>
<status status="PASS" starttime="20220705 15:47:49.109" endtime="20220705 15:47:49.109"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 15:47:49.520" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 15:47:49.109" endtime="20220705 15:47:49.520"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 15:47:49.520" endtime="20220705 15:47:49.520"/>
</return>
<msg timestamp="20220705 15:47:49.520" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 15:47:49.108" endtime="20220705 15:47:49.520"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 15:47:49.520" endtime="20220705 15:47:49.520"/>
</return>
<status status="PASS" starttime="20220705 15:47:49.107" endtime="20220705 15:47:49.520"/>
</kw>
<status status="PASS" starttime="20220705 15:47:49.107" endtime="20220705 15:47:49.520"/>
</kw>
<doc>Verify that a board's description can be updated through API</doc>
<tag>api</tag>
<tag>board.update</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220705 15:47:48.656" endtime="20220705 15:47:49.520"/>
</test>
<kw name="Delete All Sessions" library="request_own_library" type="TEARDOWN">
<status status="PASS" starttime="20220705 15:47:49.521" endtime="20220705 15:47:49.522"/>
</kw>
<doc>Example Test with Trello API Boards</doc>
<status status="PASS" starttime="20220705 15:47:43.699" endtime="20220705 15:47:49.522"/>
</suite>
<suite id="s1-s1-s2" name="Trello Api Cards Tests" source="/trello/api/trello_api_cards_tests.robot">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Create Trello Session</arg>
<arg>Setup Board And List</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Create Trello Session" library="TrelloAPI">
<doc>Creates a Trello Session</doc>
<kw name="Create Session" library="request_own_library">
<arg>${API_BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<status status="PASS" starttime="20220705 15:47:49.533" endtime="20220705 15:47:49.533"/>
</kw>
<status status="PASS" starttime="20220705 15:47:49.533" endtime="20220705 15:47:49.533"/>
</kw>
<kw name="Setup Board And List">
<doc>Create a board and save its ID and its first list's ID</doc>
<kw name="Create A Board" library="Board">
<var>${BOARD}</var>
<arg>TestBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 15:47:49.534" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 15:47:49.534" endtime="20220705 15:47:49.534"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 15:47:49.534" endtime="20220705 15:47:49.535"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 15:47:49.535" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220705 15:47:49.535" endtime="20220705 15:47:49.535"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 15:47:49.753" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 15:47:49.535" endtime="20220705 15:47:49.753"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 15:47:49.753" endtime="20220705 15:47:49.753"/>
</return>
<msg timestamp="20220705 15:47:49.753" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 15:47:49.534" endtime="20220705 15:47:49.753"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 15:47:49.753" endtime="20220705 15:47:49.753"/>
</return>
<msg timestamp="20220705 15:47:49.754" level="INFO">${BOARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 15:47:49.534" endtime="20220705 15:47:49.754"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_BOARD_ID}</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220705 15:47:49.755" level="INFO">${TEST_SUITE_BOARD_ID} = 62c45d2505e7f56a4f3eaebe</msg>
<status status="PASS" starttime="20220705 15:47:49.754" endtime="20220705 15:47:49.755"/>
</kw>
<kw name="Get Lists On A Board" library="Board">
<var>${LISTS}</var>
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Get all the lists in a board</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>lists_on_board</arg>
<arg>${id}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 15:47:49.756" level="INFO">${url} = boards/62c45d2505e7f56a4f3eaebe/lists/</msg>
<status status="PASS" starttime="20220705 15:47:49.755" endtime="20220705 15:47:49.756"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 15:47:49.808" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 15:47:49.756" endtime="20220705 15:47:49.808"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 15:47:49.809" endtime="20220705 15:47:49.809"/>
</return>
<msg timestamp="20220705 15:47:49.809" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 15:47:49.755" endtime="20220705 15:47:49.809"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 15:47:49.809" endtime="20220705 15:47:49.809"/>
</return>
<msg timestamp="20220705 15:47:49.809" level="INFO">${LISTS} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 15:47:49.755" endtime="20220705 15:47:49.809"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_LIST_ID}</arg>
<arg>${LISTS.json()}[0][id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220705 15:47:49.810" level="INFO">${TEST_SUITE_LIST_ID} = 62c45d2505e7f56a4f3eaec5</msg>
<status status="PASS" starttime="20220705 15:47:49.809" endtime="20220705 15:47:49.810"/>
</kw>
<status status="PASS" starttime="20220705 15:47:49.533" endtime="20220705 15:47:49.810"/>
</kw>
<status status="PASS" starttime="20220705 15:47:49.533" endtime="20220705 15:47:49.810"/>
</kw>
<test id="s1-s1-s2-t1" name="Verify A Card Can Be Created" line="13">
<kw name="Create A Card" library="Card">
<var>${response}</var>
<arg>name</arg>
<arg>RFCard2</arg>
<doc>Creates a new card in the given list.
required_args: listId
optional_args: name, desc, pos, idCardSource, idLabels, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>@{optional_args}</arg>
<arg>idList</arg>
<arg>${idList}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 15:47:49.812" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 15:47:49.812" endtime="20220705 15:47:49.812"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 15:47:49.812" endtime="20220705 15:47:49.812"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 15:47:49.813" level="INFO">${url} = cards/</msg>
<status status="PASS" starttime="20220705 15:47:49.812" endtime="20220705 15:47:49.813"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 15:47:49.994" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 15:47:49.813" endtime="20220705 15:47:49.994"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 15:47:49.994" endtime="20220705 15:47:49.994"/>
</return>
<msg timestamp="20220705 15:47:49.994" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 15:47:49.811" endtime="20220705 15:47:49.994"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 15:47:49.994" endtime="20220705 15:47:49.994"/>
</return>
<msg timestamp="20220705 15:47:49.994" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 15:47:49.811" endtime="20220705 15:47:49.994"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>card</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 15:47:49.995" endtime="20220705 15:47:50.000"/>
</kw>
<status status="PASS" starttime="20220705 15:47:49.995" endtime="20220705 15:47:50.000"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 15:47:50.000" endtime="20220705 15:47:50.000"/>
</return>
<msg timestamp="20220705 15:47:50.001" level="INFO">${CARD_ID} = 62c45d25fd8d5b185ace1e9b</msg>
<status status="PASS" starttime="20220705 15:47:50.000" endtime="20220705 15:47:50.001"/>
</kw>
<kw name="Get A Card" library="Card">
<var>${response}</var>
<arg>${CARD_ID}</arg>
<doc>Gets the card with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 15:47:50.002" level="INFO">${url} = cards/62c45d25fd8d5b185ace1e9b</msg>
<status status="PASS" starttime="20220705 15:47:50.002" endtime="20220705 15:47:50.002"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 15:47:50.058" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 15:47:50.002" endtime="20220705 15:47:50.058"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 15:47:50.058" endtime="20220705 15:47:50.058"/>
</return>
<msg timestamp="20220705 15:47:50.058" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 15:47:50.002" endtime="20220705 15:47:50.058"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 15:47:50.058" endtime="20220705 15:47:50.058"/>
</return>
<msg timestamp="20220705 15:47:50.059" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 15:47:50.001" endtime="20220705 15:47:50.059"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_NAME}</var>
<arg>${response}</arg>
<arg>name</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 15:47:50.059" endtime="20220705 15:47:50.059"/>
</return>
<msg timestamp="20220705 15:47:50.060" level="INFO">${CARD_NAME} = RFCard2</msg>
<status status="PASS" starttime="20220705 15:47:50.059" endtime="20220705 15:47:50.060"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${CARD_NAME}</arg>
<arg>RFCard2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220705 15:47:50.060" endtime="20220705 15:47:50.060"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Card</arg>
<arg>${CARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Card" library="Card">
<arg>${CARD_ID}</arg>
<doc>Deletes the card with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 15:47:50.062" level="INFO">${url} = cards/62c45d25fd8d5b185ace1e9b</msg>
<status status="PASS" starttime="20220705 15:47:50.061" endtime="20220705 15:47:50.062"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 15:47:50.212" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 15:47:50.062" endtime="20220705 15:47:50.212"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 15:47:50.212" endtime="20220705 15:47:50.212"/>
</return>
<msg timestamp="20220705 15:47:50.212" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 15:47:50.061" endtime="20220705 15:47:50.212"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 15:47:50.212" endtime="20220705 15:47:50.212"/>
</return>
<status status="PASS" starttime="20220705 15:47:50.061" endtime="20220705 15:47:50.212"/>
</kw>
<status status="PASS" starttime="20220705 15:47:50.060" endtime="20220705 15:47:50.212"/>
</kw>
<doc>Verify that a card can be created through API</doc>
<tag>api</tag>
<tag>card.create</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220705 15:47:49.810" endtime="20220705 15:47:50.212"/>
</test>
<test id="s1-s1-s2-t2" name="Verify A Card Can Be Closed" line="24">
<kw name="Create A Card" library="Card">
<var>${response}</var>
<doc>Creates a new card in the given list.
required_args: listId
optional_args: name, desc, pos, idCardSource, idLabels, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>@{optional_args}</arg>
<arg>idList</arg>
<arg>${idList}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 15:47:50.214" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 15:47:50.214" endtime="20220705 15:47:50.214"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 15:47:50.215" endtime="20220705 15:47:50.215"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 15:47:50.215" level="INFO">${url} = cards/</msg>
<status status="PASS" starttime="20220705 15:47:50.215" endtime="20220705 15:47:50.215"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 15:47:50.390" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 15:47:50.216" endtime="20220705 15:47:50.390"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 15:47:50.390" endtime="20220705 15:47:50.390"/>
</return>
<msg timestamp="20220705 15:47:50.390" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 15:47:50.214" endtime="20220705 15:47:50.390"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 15:47:50.390" endtime="20220705 15:47:50.391"/>
</return>
<msg timestamp="20220705 15:47:50.391" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 15:47:50.213" endtime="20220705 15:47:50.391"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 15:47:50.391" endtime="20220705 15:47:50.391"/>
</return>
<msg timestamp="20220705 15:47:50.392" level="INFO">${CARD_ID} = 62c45d262bc3648479a52621</msg>
<status status="PASS" starttime="20220705 15:47:50.391" endtime="20220705 15:47:50.392"/>
</kw>
<kw name="Archive A Card" library="Card">
<arg>${CARD_ID}</arg>
<doc>Modifies the card status to closed.</doc>
<kw name="Update A Card" library="Card">
<var>${response}</var>
<arg>${id}</arg>
<arg>closed</arg>
<arg>true</arg>
<arg>status_code=${status_code}</arg>
<doc>Updates the card with the given ID
optional_args: name, desc, closed, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<arg>status_code=${status_code}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 15:47:50.394" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 15:47:50.394" endtime="20220705 15:47:50.394"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 15:47:50.394" endtime="20220705 15:47:50.394"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 15:47:50.394" level="INFO">${url} = cards/62c45d262bc3648479a52621</msg>
<status status="PASS" starttime="20220705 15:47:50.394" endtime="20220705 15:47:50.394"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 15:47:50.546" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 15:47:50.395" endtime="20220705 15:47:50.546"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 15:47:50.546" endtime="20220705 15:47:50.546"/>
</return>
<msg timestamp="20220705 15:47:50.546" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 15:47:50.393" endtime="20220705 15:47:50.546"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 15:47:50.546" endtime="20220705 15:47:50.546"/>
</return>
<msg timestamp="20220705 15:47:50.546" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 15:47:50.392" endtime="20220705 15:47:50.546"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 15:47:50.546" endtime="20220705 15:47:50.546"/>
</return>
<status status="PASS" starttime="20220705 15:47:50.392" endtime="20220705 15:47:50.546"/>
</kw>
<kw name="Get A Card" library="Card">
<var>${response}</var>
<arg>${CARD_ID}</arg>
<doc>Gets the card with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 15:47:50.548" level="INFO">${url} = cards/62c45d262bc3648479a52621</msg>
<status status="PASS" starttime="20220705 15:47:50.547" endtime="20220705 15:47:50.548"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 15:47:50.604" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 15:47:50.548" endtime="20220705 15:47:50.604"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 15:47:50.604" endtime="20220705 15:47:50.604"/>
</return>
<msg timestamp="20220705 15:47:50.604" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 15:47:50.547" endtime="20220705 15:47:50.604"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 15:47:50.604" endtime="20220705 15:47:50.604"/>
</return>
<msg timestamp="20220705 15:47:50.604" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 15:47:50.547" endtime="20220705 15:47:50.604"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_CLOSED}</var>
<arg>${response}</arg>
<arg>closed</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 15:47:50.605" endtime="20220705 15:47:50.605"/>
</return>
<msg timestamp="20220705 15:47:50.606" level="INFO">${CARD_CLOSED} = True</msg>
<status status="PASS" starttime="20220705 15:47:50.605" endtime="20220705 15:47:50.606"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${CARD_CLOSED}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220705 15:47:50.606" endtime="20220705 15:47:50.606"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Card</arg>
<arg>${CARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Card" library="Card">
<arg>${CARD_ID}</arg>
<doc>Deletes the card with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 15:47:50.608" level="INFO">${url} = cards/62c45d262bc3648479a52621</msg>
<status status="PASS" starttime="20220705 15:47:50.607" endtime="20220705 15:47:50.608"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 15:47:50.743" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 15:47:50.608" endtime="20220705 15:47:50.743"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 15:47:50.743" endtime="20220705 15:47:50.743"/>
</return>
<msg timestamp="20220705 15:47:50.743" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 15:47:50.607" endtime="20220705 15:47:50.743"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 15:47:50.743" endtime="20220705 15:47:50.743"/>
</return>
<status status="PASS" starttime="20220705 15:47:50.606" endtime="20220705 15:47:50.744"/>
</kw>
<status status="PASS" starttime="20220705 15:47:50.606" endtime="20220705 15:47:50.744"/>
</kw>
<doc>Verify that a card can be closed through API</doc>
<tag>api</tag>
<tag>card.close</tag>
<tag>regression</tag>
<status status="PASS" starttime="20220705 15:47:50.213" endtime="20220705 15:47:50.744"/>
</test>
<test id="s1-s1-s2-t3" name="Verify A Card Can Be Deleted" line="35">
<kw name="Create A Card" library="Card">
<var>${response}</var>
<doc>Creates a new card in the given list.
required_args: listId
optional_args: name, desc, pos, idCardSource, idLabels, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>@{optional_args}</arg>
<arg>idList</arg>
<arg>${idList}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 15:47:50.746" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 15:47:50.746" endtime="20220705 15:47:50.746"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 15:47:50.746" endtime="20220705 15:47:50.747"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 15:47:50.747" level="INFO">${url} = cards/</msg>
<status status="PASS" starttime="20220705 15:47:50.747" endtime="20220705 15:47:50.747"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 15:47:50.971" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 15:47:50.747" endtime="20220705 15:47:50.971"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 15:47:50.971" endtime="20220705 15:47:50.971"/>
</return>
<msg timestamp="20220705 15:47:50.971" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 15:47:50.745" endtime="20220705 15:47:50.971"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 15:47:50.971" endtime="20220705 15:47:50.971"/>
</return>
<msg timestamp="20220705 15:47:50.972" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 15:47:50.745" endtime="20220705 15:47:50.972"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 15:47:50.972" endtime="20220705 15:47:50.972"/>
</return>
<msg timestamp="20220705 15:47:50.973" level="INFO">${CARD_ID} = 62c45d26e9bc1d26da83b381</msg>
<status status="PASS" starttime="20220705 15:47:50.972" endtime="20220705 15:47:50.973"/>
</kw>
<kw name="Delete A Card" library="Card">
<var>${response}</var>
<arg>${CARD_ID}</arg>
<doc>Deletes the card with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 15:47:50.974" level="INFO">${url} = cards/62c45d26e9bc1d26da83b381</msg>
<status status="PASS" starttime="20220705 15:47:50.974" endtime="20220705 15:47:50.974"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 15:47:51.164" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 15:47:50.974" endtime="20220705 15:47:51.164"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 15:47:51.164" endtime="20220705 15:47:51.164"/>
</return>
<msg timestamp="20220705 15:47:51.164" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 15:47:50.973" endtime="20220705 15:47:51.164"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 15:47:51.164" endtime="20220705 15:47:51.164"/>
</return>
<msg timestamp="20220705 15:47:51.165" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 15:47:50.973" endtime="20220705 15:47:51.165"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>delete</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 15:47:51.165" endtime="20220705 15:47:51.167"/>
</kw>
<status status="PASS" starttime="20220705 15:47:51.165" endtime="20220705 15:47:51.167"/>
</kw>
<kw name="Get A Card" library="Card">
<arg>${CARD_ID}</arg>
<arg>status_code=404</arg>
<doc>Gets the card with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 15:47:51.168" level="INFO">${url} = cards/62c45d26e9bc1d26da83b381</msg>
<status status="PASS" starttime="20220705 15:47:51.168" endtime="20220705 15:47:51.168"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 15:47:51.201" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220705 15:47:51.168" endtime="20220705 15:47:51.201"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 15:47:51.201" endtime="20220705 15:47:51.201"/>
</return>
<msg timestamp="20220705 15:47:51.202" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220705 15:47:51.167" endtime="20220705 15:47:51.202"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 15:47:51.202" endtime="20220705 15:47:51.202"/>
</return>
<status status="PASS" starttime="20220705 15:47:51.167" endtime="20220705 15:47:51.202"/>
</kw>
<doc>Verify that a card can be deleted through API</doc>
<tag>api</tag>
<tag>card.delete</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220705 15:47:50.744" endtime="20220705 15:47:51.202"/>
</test>
<test id="s1-s1-s2-t4" name="Verify A Card Can Be Updated" line="44">
<kw name="Create A Card" library="Card">
<var>${response}</var>
<arg>name</arg>
<arg>RFCard4</arg>
<doc>Creates a new card in the given list.
required_args: listId
optional_args: name, desc, pos, idCardSource, idLabels, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>@{optional_args}</arg>
<arg>idList</arg>
<arg>${idList}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 15:47:51.204" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 15:47:51.204" endtime="20220705 15:47:51.204"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 15:47:51.204" endtime="20220705 15:47:51.204"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 15:47:51.205" level="INFO">${url} = cards/</msg>
<status status="PASS" starttime="20220705 15:47:51.204" endtime="20220705 15:47:51.205"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 15:47:51.382" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 15:47:51.205" endtime="20220705 15:47:51.382"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 15:47:51.382" endtime="20220705 15:47:51.382"/>
</return>
<msg timestamp="20220705 15:47:51.382" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 15:47:51.203" endtime="20220705 15:47:51.382"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 15:47:51.382" endtime="20220705 15:47:51.382"/>
</return>
<msg timestamp="20220705 15:47:51.383" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 15:47:51.203" endtime="20220705 15:47:51.383"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 15:47:51.383" endtime="20220705 15:47:51.383"/>
</return>
<msg timestamp="20220705 15:47:51.384" level="INFO">${CARD_ID} = 62c45d27eed7132b1e273ac0</msg>
<status status="PASS" starttime="20220705 15:47:51.383" endtime="20220705 15:47:51.384"/>
</kw>
<kw name="Update A Card" library="Card">
<var>${response}</var>
<arg>${CARD_ID}</arg>
<arg>name</arg>
<arg>RFCard5</arg>
<arg>desc</arg>
<arg>Description</arg>
<doc>Updates the card with the given ID
optional_args: name, desc, closed, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<arg>status_code=${status_code}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 15:47:51.385" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 15:47:51.385" endtime="20220705 15:47:51.385"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 15:47:51.385" endtime="20220705 15:47:51.385"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 15:47:51.386" level="INFO">${url} = cards/62c45d27eed7132b1e273ac0</msg>
<status status="PASS" starttime="20220705 15:47:51.385" endtime="20220705 15:47:51.386"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 15:47:51.529" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 15:47:51.386" endtime="20220705 15:47:51.529"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 15:47:51.530" endtime="20220705 15:47:51.530"/>
</return>
<msg timestamp="20220705 15:47:51.530" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 15:47:51.384" endtime="20220705 15:47:51.530"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 15:47:51.530" endtime="20220705 15:47:51.530"/>
</return>
<msg timestamp="20220705 15:47:51.530" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 15:47:51.384" endtime="20220705 15:47:51.530"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>card</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 15:47:51.531" endtime="20220705 15:47:51.536"/>
</kw>
<status status="PASS" starttime="20220705 15:47:51.530" endtime="20220705 15:47:51.536"/>
</kw>
<kw name="Get A Card" library="Card">
<var>${response}</var>
<arg>${CARD_ID}</arg>
<doc>Gets the card with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 15:47:51.537" level="INFO">${url} = cards/62c45d27eed7132b1e273ac0</msg>
<status status="PASS" starttime="20220705 15:47:51.537" endtime="20220705 15:47:51.537"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 15:47:51.583" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 15:47:51.537" endtime="20220705 15:47:51.583"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 15:47:51.583" endtime="20220705 15:47:51.583"/>
</return>
<msg timestamp="20220705 15:47:51.583" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 15:47:51.536" endtime="20220705 15:47:51.583"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 15:47:51.583" endtime="20220705 15:47:51.583"/>
</return>
<msg timestamp="20220705 15:47:51.583" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 15:47:51.536" endtime="20220705 15:47:51.583"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_NAME}</var>
<arg>${response}</arg>
<arg>name</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 15:47:51.584" endtime="20220705 15:47:51.584"/>
</return>
<msg timestamp="20220705 15:47:51.585" level="INFO">${CARD_NAME} = RFCard5</msg>
<status status="PASS" starttime="20220705 15:47:51.584" endtime="20220705 15:47:51.585"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_DESC}</var>
<arg>${response}</arg>
<arg>desc</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 15:47:51.585" endtime="20220705 15:47:51.585"/>
</return>
<msg timestamp="20220705 15:47:51.586" level="INFO">${CARD_DESC} = Description</msg>
<status status="PASS" starttime="20220705 15:47:51.585" endtime="20220705 15:47:51.586"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${CARD_NAME}</arg>
<arg>RFCard5</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220705 15:47:51.586" endtime="20220705 15:47:51.586"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${CARD_DESC}</arg>
<arg>Description</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220705 15:47:51.586" endtime="20220705 15:47:51.586"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Card</arg>
<arg>${CARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Card" library="Card">
<arg>${CARD_ID}</arg>
<doc>Deletes the card with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 15:47:51.588" level="INFO">${url} = cards/62c45d27eed7132b1e273ac0</msg>
<status status="PASS" starttime="20220705 15:47:51.588" endtime="20220705 15:47:51.588"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 15:47:51.736" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 15:47:51.588" endtime="20220705 15:47:51.736"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 15:47:51.736" endtime="20220705 15:47:51.736"/>
</return>
<msg timestamp="20220705 15:47:51.736" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 15:47:51.587" endtime="20220705 15:47:51.736"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 15:47:51.736" endtime="20220705 15:47:51.736"/>
</return>
<status status="PASS" starttime="20220705 15:47:51.587" endtime="20220705 15:47:51.737"/>
</kw>
<status status="PASS" starttime="20220705 15:47:51.587" endtime="20220705 15:47:51.737"/>
</kw>
<doc>Verify that a card's name and Description can be updated through API</doc>
<tag>api</tag>
<tag>card.update</tag>
<tag>regression</tag>
<status status="PASS" starttime="20220705 15:47:51.202" endtime="20220705 15:47:51.737"/>
</test>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Teardown Board</arg>
<arg>Delete All Sessions</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Teardown Board">
<doc>Delete the board created for this suite</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 15:47:51.739" level="INFO">${url} = boards/62c45d2505e7f56a4f3eaebe</msg>
<status status="PASS" starttime="20220705 15:47:51.739" endtime="20220705 15:47:51.739"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 15:47:52.062" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 15:47:51.739" endtime="20220705 15:47:52.062"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 15:47:52.062" endtime="20220705 15:47:52.062"/>
</return>
<msg timestamp="20220705 15:47:52.062" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 15:47:51.739" endtime="20220705 15:47:52.062"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 15:47:52.062" endtime="20220705 15:47:52.062"/>
</return>
<status status="PASS" starttime="20220705 15:47:51.738" endtime="20220705 15:47:52.062"/>
</kw>
<status status="PASS" starttime="20220705 15:47:51.738" endtime="20220705 15:47:52.062"/>
</kw>
<status status="PASS" starttime="20220705 15:47:51.738" endtime="20220705 15:47:52.062"/>
</kw>
<kw name="Delete All Sessions" library="request_own_library">
<status status="PASS" starttime="20220705 15:47:52.063" endtime="20220705 15:47:52.063"/>
</kw>
<status status="PASS" starttime="20220705 15:47:51.737" endtime="20220705 15:47:52.064"/>
</kw>
<doc>Example Test with Trello API Cards</doc>
<status status="PASS" starttime="20220705 15:47:49.524" endtime="20220705 15:47:52.064"/>
</suite>
<suite id="s1-s1-s3" name="Trello Api Checklists Tests" source="/trello/api/trello_api_checklists_tests.robot">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Create Trello Session</arg>
<arg>Setup Board, List And Card</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Create Trello Session" library="TrelloAPI">
<doc>Creates a Trello Session</doc>
<kw name="Create Session" library="request_own_library">
<arg>${API_BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<status status="PASS" starttime="20220705 15:47:52.073" endtime="20220705 15:47:52.074"/>
</kw>
<status status="PASS" starttime="20220705 15:47:52.073" endtime="20220705 15:47:52.074"/>
</kw>
<kw name="Setup Board, List And Card">
<doc>Create a board and save its ID and its first list's ID</doc>
<kw name="Create A Board" library="Board">
<var>${BOARD}</var>
<arg>TestBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 15:47:52.075" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 15:47:52.075" endtime="20220705 15:47:52.075"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 15:47:52.075" endtime="20220705 15:47:52.075"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 15:47:52.076" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220705 15:47:52.075" endtime="20220705 15:47:52.076"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 15:47:52.314" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 15:47:52.076" endtime="20220705 15:47:52.314"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 15:47:52.315" endtime="20220705 15:47:52.315"/>
</return>
<msg timestamp="20220705 15:47:52.315" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 15:47:52.074" endtime="20220705 15:47:52.315"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 15:47:52.315" endtime="20220705 15:47:52.315"/>
</return>
<msg timestamp="20220705 15:47:52.315" level="INFO">${BOARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 15:47:52.074" endtime="20220705 15:47:52.315"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_BOARD_ID}</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220705 15:47:52.316" level="INFO">${TEST_SUITE_BOARD_ID} = 62c45d289b4b31454bf8fffa</msg>
<status status="PASS" starttime="20220705 15:47:52.315" endtime="20220705 15:47:52.316"/>
</kw>
<kw name="Get Lists On A Board" library="Board">
<var>${LISTS}</var>
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Get all the lists in a board</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>lists_on_board</arg>
<arg>${id}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 15:47:52.317" level="INFO">${url} = boards/62c45d289b4b31454bf8fffa/lists/</msg>
<status status="PASS" starttime="20220705 15:47:52.317" endtime="20220705 15:47:52.317"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 15:47:52.365" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 15:47:52.317" endtime="20220705 15:47:52.365"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 15:47:52.365" endtime="20220705 15:47:52.366"/>
</return>
<msg timestamp="20220705 15:47:52.366" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 15:47:52.316" endtime="20220705 15:47:52.366"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 15:47:52.366" endtime="20220705 15:47:52.366"/>
</return>
<msg timestamp="20220705 15:47:52.366" level="INFO">${LISTS} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 15:47:52.316" endtime="20220705 15:47:52.366"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_LIST_ID}</arg>
<arg>${LISTS.json()}[0][id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220705 15:47:52.367" level="INFO">${TEST_SUITE_LIST_ID} = 62c45d289b4b31454bf90001</msg>
<status status="PASS" starttime="20220705 15:47:52.366" endtime="20220705 15:47:52.367"/>
</kw>
<kw name="Create A Card" library="Card">
<var>${CARD}</var>
<arg>name</arg>
<arg>TestCard</arg>
<doc>Creates a new card in the given list.
required_args: listId
optional_args: name, desc, pos, idCardSource, idLabels, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>@{optional_args}</arg>
<arg>idList</arg>
<arg>${idList}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 15:47:52.368" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 15:47:52.368" endtime="20220705 15:47:52.369"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 15:47:52.369" endtime="20220705 15:47:52.369"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 15:47:52.370" level="INFO">${url} = cards/</msg>
<status status="PASS" starttime="20220705 15:47:52.369" endtime="20220705 15:47:52.370"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 15:47:52.543" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 15:47:52.370" endtime="20220705 15:47:52.543"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 15:47:52.543" endtime="20220705 15:47:52.543"/>
</return>
<msg timestamp="20220705 15:47:52.544" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 15:47:52.368" endtime="20220705 15:47:52.544"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 15:47:52.544" endtime="20220705 15:47:52.544"/>
</return>
<msg timestamp="20220705 15:47:52.544" level="INFO">${CARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 15:47:52.367" endtime="20220705 15:47:52.544"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_CARD_ID}</arg>
<arg>${CARD.json()}[id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220705 15:47:52.545" level="INFO">${TEST_SUITE_CARD_ID} = 62c45d2886d9c73fd698d2c4</msg>
<status status="PASS" starttime="20220705 15:47:52.544" endtime="20220705 15:47:52.545"/>
</kw>
<status status="PASS" starttime="20220705 15:47:52.074" endtime="20220705 15:47:52.545"/>
</kw>
<status status="PASS" starttime="20220705 15:47:52.073" endtime="20220705 15:47:52.545"/>
</kw>
<test id="s1-s1-s3-t1" name="Verify A Checklist Can Be Created" line="14">
<kw name="Create A Checklist" library="Checklist">
<var>${response}</var>
<arg>name</arg>
<arg>TestChecklist</arg>
<arg>idCard=${TEST_SUITE_CARD_ID}</arg>
<doc>Creates a new checklist in the given card.
required_args: idCard
optional_args: name, pos, idChecklistSource
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>@{optional_args}</arg>
<arg>idCard</arg>
<arg>${idCard}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 15:47:52.547" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 15:47:52.547" endtime="20220705 15:47:52.547"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 15:47:52.547" endtime="20220705 15:47:52.547"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 15:47:52.548" level="INFO">${url} = checklists/</msg>
<status status="PASS" starttime="20220705 15:47:52.547" endtime="20220705 15:47:52.548"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 15:47:52.659" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 15:47:52.548" endtime="20220705 15:47:52.659"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 15:47:52.659" endtime="20220705 15:47:52.659"/>
</return>
<msg timestamp="20220705 15:47:52.659" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 15:47:52.546" endtime="20220705 15:47:52.659"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 15:47:52.659" endtime="20220705 15:47:52.659"/>
</return>
<msg timestamp="20220705 15:47:52.659" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 15:47:52.546" endtime="20220705 15:47:52.659"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${checklist_id}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 15:47:52.660" endtime="20220705 15:47:52.660"/>
</return>
<msg timestamp="20220705 15:47:52.660" level="INFO">${checklist_id} = 62c45d2849b887159e123be1</msg>
<status status="PASS" starttime="20220705 15:47:52.659" endtime="20220705 15:47:52.660"/>
</kw>
<kw name="Get A Checklist" library="Checklist">
<var>${response}</var>
<arg>${checklist_id}</arg>
<doc>Gets the checklist with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 15:47:52.662" level="INFO">${url} = checklists/62c45d2849b887159e123be1</msg>
<status status="PASS" starttime="20220705 15:47:52.661" endtime="20220705 15:47:52.662"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 15:47:52.718" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 15:47:52.662" endtime="20220705 15:47:52.719"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 15:47:52.719" endtime="20220705 15:47:52.719"/>
</return>
<msg timestamp="20220705 15:47:52.719" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 15:47:52.661" endtime="20220705 15:47:52.719"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 15:47:52.719" endtime="20220705 15:47:52.719"/>
</return>
<msg timestamp="20220705 15:47:52.719" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 15:47:52.661" endtime="20220705 15:47:52.719"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${checklist_name}</var>
<arg>${response}</arg>
<arg>name</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 15:47:52.720" endtime="20220705 15:47:52.720"/>
</return>
<msg timestamp="20220705 15:47:52.720" level="INFO">${checklist_name} = TestChecklist</msg>
<status status="PASS" starttime="20220705 15:47:52.719" endtime="20220705 15:47:52.720"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${checklist_name}</arg>
<arg>TestChecklist</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220705 15:47:52.721" endtime="20220705 15:47:52.721"/>
</kw>
<kw name="Delete A Checklist" library="Checklist" type="TEARDOWN">
<arg>${checklist_id}</arg>
<doc>Deletes the checklist with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 15:47:52.722" level="INFO">${url} = checklists/62c45d2849b887159e123be1</msg>
<status status="PASS" starttime="20220705 15:47:52.722" endtime="20220705 15:47:52.722"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 15:47:52.832" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 15:47:52.722" endtime="20220705 15:47:52.832"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 15:47:52.832" endtime="20220705 15:47:52.832"/>
</return>
<msg timestamp="20220705 15:47:52.832" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 15:47:52.721" endtime="20220705 15:47:52.833"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 15:47:52.833" endtime="20220705 15:47:52.833"/>
</return>
<status status="PASS" starttime="20220705 15:47:52.721" endtime="20220705 15:47:52.833"/>
</kw>
<doc>Verify that a checklist can be created through API</doc>
<tag>api</tag>
<tag>checklist.create</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220705 15:47:52.545" endtime="20220705 15:47:52.833"/>
</test>
<test id="s1-s1-s3-t2" name="Verify A Checklist Can Be Deleted" line="24">
<kw name="Create A Checklist" library="Checklist">
<var>${response}</var>
<arg>name</arg>
<arg>TestChecklist</arg>
<arg>idCard=${TEST_SUITE_CARD_ID}</arg>
<doc>Creates a new checklist in the given card.
required_args: idCard
optional_args: name, pos, idChecklistSource
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>@{optional_args}</arg>
<arg>idCard</arg>
<arg>${idCard}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 15:47:52.835" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 15:47:52.835" endtime="20220705 15:47:52.835"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 15:47:52.835" endtime="20220705 15:47:52.836"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 15:47:52.836" level="INFO">${url} = checklists/</msg>
<status status="PASS" starttime="20220705 15:47:52.836" endtime="20220705 15:47:52.836"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 15:47:52.961" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 15:47:52.836" endtime="20220705 15:47:52.961"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 15:47:52.961" endtime="20220705 15:47:52.961"/>
</return>
<msg timestamp="20220705 15:47:52.961" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 15:47:52.835" endtime="20220705 15:47:52.961"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 15:47:52.961" endtime="20220705 15:47:52.962"/>
</return>
<msg timestamp="20220705 15:47:52.962" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 15:47:52.834" endtime="20220705 15:47:52.962"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${checklist_id}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 15:47:52.962" endtime="20220705 15:47:52.962"/>
</return>
<msg timestamp="20220705 15:47:52.963" level="INFO">${checklist_id} = 62c45d289fb43e4585b790b4</msg>
<status status="PASS" starttime="20220705 15:47:52.962" endtime="20220705 15:47:52.963"/>
</kw>
<kw name="Delete A Checklist" library="Checklist">
<var>${response}</var>
<arg>${checklist_id}</arg>
<doc>Deletes the checklist with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 15:47:52.964" level="INFO">${url} = checklists/62c45d289fb43e4585b790b4</msg>
<status status="PASS" starttime="20220705 15:47:52.964" endtime="20220705 15:47:52.964"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 15:47:53.068" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 15:47:52.965" endtime="20220705 15:47:53.068"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 15:47:53.068" endtime="20220705 15:47:53.068"/>
</return>
<msg timestamp="20220705 15:47:53.068" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 15:47:52.964" endtime="20220705 15:47:53.068"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 15:47:53.068" endtime="20220705 15:47:53.068"/>
</return>
<msg timestamp="20220705 15:47:53.068" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 15:47:52.963" endtime="20220705 15:47:53.068"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>delete</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 15:47:53.069" endtime="20220705 15:47:53.071"/>
</kw>
<status status="PASS" starttime="20220705 15:47:53.068" endtime="20220705 15:47:53.071"/>
</kw>
<kw name="Get A Checklist" library="Checklist">
<arg>${checklist_id}</arg>
<arg>status_code=404</arg>
<doc>Gets the checklist with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 15:47:53.072" level="INFO">${url} = checklists/62c45d289fb43e4585b790b4</msg>
<status status="PASS" starttime="20220705 15:47:53.072" endtime="20220705 15:47:53.072"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 15:47:53.112" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220705 15:47:53.072" endtime="20220705 15:47:53.112"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 15:47:53.112" endtime="20220705 15:47:53.112"/>
</return>
<msg timestamp="20220705 15:47:53.112" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220705 15:47:53.071" endtime="20220705 15:47:53.112"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 15:47:53.112" endtime="20220705 15:47:53.112"/>
</return>
<status status="PASS" starttime="20220705 15:47:53.071" endtime="20220705 15:47:53.112"/>
</kw>
<doc>Verify that a checklist can be deleted through API</doc>
<tag>api</tag>
<tag>checklist.delete</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220705 15:47:52.833" endtime="20220705 15:47:53.112"/>
</test>
<test id="s1-s1-s3-t3" name="Verify A Checklist Can Be Updated" line="33">
<kw name="Create A Checklist" library="Checklist">
<var>${response}</var>
<arg>name</arg>
<arg>TestChecklist</arg>
<arg>idCard=${TEST_SUITE_CARD_ID}</arg>
<doc>Creates a new checklist in the given card.
required_args: idCard
optional_args: name, pos, idChecklistSource
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>@{optional_args}</arg>
<arg>idCard</arg>
<arg>${idCard}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 15:47:53.116" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 15:47:53.115" endtime="20220705 15:47:53.116"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 15:47:53.116" endtime="20220705 15:47:53.117"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 15:47:53.117" level="INFO">${url} = checklists/</msg>
<status status="PASS" starttime="20220705 15:47:53.117" endtime="20220705 15:47:53.117"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 15:47:53.226" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 15:47:53.117" endtime="20220705 15:47:53.226"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 15:47:53.226" endtime="20220705 15:47:53.226"/>
</return>
<msg timestamp="20220705 15:47:53.227" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 15:47:53.114" endtime="20220705 15:47:53.227"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 15:47:53.227" endtime="20220705 15:47:53.227"/>
</return>
<msg timestamp="20220705 15:47:53.227" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 15:47:53.114" endtime="20220705 15:47:53.227"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${checklist_id}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 15:47:53.227" endtime="20220705 15:47:53.227"/>
</return>
<msg timestamp="20220705 15:47:53.228" level="INFO">${checklist_id} = 62c45d2941b92c44ac2d4503</msg>
<status status="PASS" starttime="20220705 15:47:53.227" endtime="20220705 15:47:53.228"/>
</kw>
<kw name="Update A Checklist" library="Checklist">
<var>${response}</var>
<arg>${checklist_id}</arg>
<arg>name</arg>
<arg>TestChecklist2</arg>
<doc>Updates the checklist with the given ID
optional_args: name, pos
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<arg>status_code=${status_code}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 15:47:53.229" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 15:47:53.229" endtime="20220705 15:47:53.229"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 15:47:53.229" endtime="20220705 15:47:53.230"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 15:47:53.230" level="INFO">${url} = checklists/62c45d2941b92c44ac2d4503</msg>
<status status="PASS" starttime="20220705 15:47:53.230" endtime="20220705 15:47:53.230"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 15:47:53.310" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 15:47:53.230" endtime="20220705 15:47:53.310"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 15:47:53.310" endtime="20220705 15:47:53.310"/>
</return>
<msg timestamp="20220705 15:47:53.311" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 15:47:53.229" endtime="20220705 15:47:53.311"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 15:47:53.311" endtime="20220705 15:47:53.311"/>
</return>
<msg timestamp="20220705 15:47:53.311" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 15:47:53.228" endtime="20220705 15:47:53.311"/>
</kw>
<kw name="Get A Checklist" library="Checklist">
<var>${response}</var>
<arg>${checklist_id}</arg>
<doc>Gets the checklist with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 15:47:53.312" level="INFO">${url} = checklists/62c45d2941b92c44ac2d4503</msg>
<status status="PASS" starttime="20220705 15:47:53.312" endtime="20220705 15:47:53.312"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 15:47:53.368" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 15:47:53.312" endtime="20220705 15:47:53.368"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 15:47:53.368" endtime="20220705 15:47:53.368"/>
</return>
<msg timestamp="20220705 15:47:53.368" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 15:47:53.311" endtime="20220705 15:47:53.368"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 15:47:53.368" endtime="20220705 15:47:53.368"/>
</return>
<msg timestamp="20220705 15:47:53.368" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 15:47:53.311" endtime="20220705 15:47:53.368"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${checklist_name}</var>
<arg>${response}</arg>
<arg>name</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 15:47:53.369" endtime="20220705 15:47:53.369"/>
</return>
<msg timestamp="20220705 15:47:53.369" level="INFO">${checklist_name} = TestChecklist2</msg>
<status status="PASS" starttime="20220705 15:47:53.368" endtime="20220705 15:47:53.369"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${checklist_name}</arg>
<arg>TestChecklist2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220705 15:47:53.370" endtime="20220705 15:47:53.370"/>
</kw>
<kw name="Delete A Checklist" library="Checklist" type="TEARDOWN">
<arg>${checklist_id}</arg>
<doc>Deletes the checklist with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 15:47:53.382" level="INFO">${url} = checklists/62c45d2941b92c44ac2d4503</msg>
<status status="PASS" starttime="20220705 15:47:53.381" endtime="20220705 15:47:53.382"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 15:47:53.504" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 15:47:53.382" endtime="20220705 15:47:53.504"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 15:47:53.504" endtime="20220705 15:47:53.504"/>
</return>
<msg timestamp="20220705 15:47:53.504" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 15:47:53.381" endtime="20220705 15:47:53.504"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 15:47:53.504" endtime="20220705 15:47:53.504"/>
</return>
<status status="PASS" starttime="20220705 15:47:53.370" endtime="20220705 15:47:53.505"/>
</kw>
<doc>Verify that a checklist's name can be updated through API</doc>
<tag>api</tag>
<tag>checklist.update</tag>
<tag>regression</tag>
<status status="PASS" starttime="20220705 15:47:53.113" endtime="20220705 15:47:53.505"/>
</test>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Teardown Board</arg>
<arg>Delete All Sessions</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Teardown Board">
<doc>Delete the board created for this suite</doc>
<kw name="Delete A Board" library="Board">
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 15:47:53.507" level="INFO">${url} = boards/62c45d289b4b31454bf8fffa</msg>
<status status="PASS" starttime="20220705 15:47:53.506" endtime="20220705 15:47:53.507"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 15:47:53.865" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 15:47:53.507" endtime="20220705 15:47:53.865"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 15:47:53.865" endtime="20220705 15:47:53.865"/>
</return>
<msg timestamp="20220705 15:47:53.865" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 15:47:53.506" endtime="20220705 15:47:53.865"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 15:47:53.865" endtime="20220705 15:47:53.865"/>
</return>
<status status="PASS" starttime="20220705 15:47:53.506" endtime="20220705 15:47:53.865"/>
</kw>
<status status="PASS" starttime="20220705 15:47:53.506" endtime="20220705 15:47:53.866"/>
</kw>
<kw name="Delete All Sessions" library="request_own_library">
<status status="PASS" starttime="20220705 15:47:53.866" endtime="20220705 15:47:53.867"/>
</kw>
<status status="PASS" starttime="20220705 15:47:53.505" endtime="20220705 15:47:53.867"/>
</kw>
<doc>Example Test with Trello API Checklists</doc>
<status status="PASS" starttime="20220705 15:47:52.065" endtime="20220705 15:47:53.867"/>
</suite>
<suite id="s1-s1-s4" name="Trello Api Labels Tests" source="/trello/api/trello_api_labels_tests.robot">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Create Trello Session</arg>
<arg>Setup Board And List</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Create Trello Session" library="TrelloAPI">
<doc>Creates a Trello Session</doc>
<kw name="Create Session" library="request_own_library">
<arg>${API_BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<status status="PASS" starttime="20220705 15:47:53.876" endtime="20220705 15:47:53.877"/>
</kw>
<status status="PASS" starttime="20220705 15:47:53.876" endtime="20220705 15:47:53.877"/>
</kw>
<kw name="Setup Board And List">
<doc>Create a board and save its ID and its first list's ID</doc>
<kw name="Create A Board" library="Board">
<var>${BOARD}</var>
<arg>TestBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 15:47:53.878" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 15:47:53.878" endtime="20220705 15:47:53.878"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 15:47:53.878" endtime="20220705 15:47:53.878"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 15:47:53.879" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220705 15:47:53.878" endtime="20220705 15:47:53.879"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 15:47:54.077" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 15:47:53.879" endtime="20220705 15:47:54.077"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 15:47:54.077" endtime="20220705 15:47:54.077"/>
</return>
<msg timestamp="20220705 15:47:54.078" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 15:47:53.877" endtime="20220705 15:47:54.078"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 15:47:54.078" endtime="20220705 15:47:54.078"/>
</return>
<msg timestamp="20220705 15:47:54.078" level="INFO">${BOARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 15:47:53.877" endtime="20220705 15:47:54.078"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_BOARD_ID}</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220705 15:47:54.079" level="INFO">${TEST_SUITE_BOARD_ID} = 62c45d29dfbf5355bb19cf88</msg>
<status status="PASS" starttime="20220705 15:47:54.078" endtime="20220705 15:47:54.079"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${LISTS}</var>
<arg>boards/${TEST_SUITE_BOARD_ID}/lists</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 15:47:54.130" level="INFO">${LISTS} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 15:47:54.079" endtime="20220705 15:47:54.130"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_LIST_ID}</arg>
<arg>${LISTS.json()}[0][id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220705 15:47:54.131" level="INFO">${TEST_SUITE_LIST_ID} = 62c45d29dfbf5355bb19cf8f</msg>
<status status="PASS" starttime="20220705 15:47:54.130" endtime="20220705 15:47:54.131"/>
</kw>
<status status="PASS" starttime="20220705 15:47:53.877" endtime="20220705 15:47:54.131"/>
</kw>
<status status="PASS" starttime="20220705 15:47:53.876" endtime="20220705 15:47:54.131"/>
</kw>
<test id="s1-s1-s4-t1" name="Create and get label on board" line="14">
<kw name="Create A Label" library="Label">
<var>${response}</var>
<arg>name</arg>
<arg>label2</arg>
<arg>color</arg>
<arg>yellow</arg>
<doc>Creates a new label in the given board.
required_args: idBoard
optional_args: name, color
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>idBoard</arg>
<arg>${idBoard}</arg>
<arg>@{optional_args}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 15:47:54.133" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 15:47:54.133" endtime="20220705 15:47:54.133"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 15:47:54.133" endtime="20220705 15:47:54.133"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 15:47:54.134" level="INFO">${url} = labels/</msg>
<status status="PASS" starttime="20220705 15:47:54.133" endtime="20220705 15:47:54.134"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 15:47:54.224" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 15:47:54.134" endtime="20220705 15:47:54.224"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 15:47:54.224" endtime="20220705 15:47:54.224"/>
</return>
<msg timestamp="20220705 15:47:54.224" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 15:47:54.132" endtime="20220705 15:47:54.224"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 15:47:54.225" endtime="20220705 15:47:54.225"/>
</return>
<msg timestamp="20220705 15:47:54.225" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 15:47:54.132" endtime="20220705 15:47:54.225"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>label</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 15:47:54.225" endtime="20220705 15:47:54.227"/>
</kw>
<status status="PASS" starttime="20220705 15:47:54.225" endtime="20220705 15:47:54.227"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${LABEL_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 15:47:54.227" endtime="20220705 15:47:54.228"/>
</return>
<msg timestamp="20220705 15:47:54.228" level="INFO">${LABEL_ID} = 62c45d2a01c49428bcd82eb4</msg>
<status status="PASS" starttime="20220705 15:47:54.227" endtime="20220705 15:47:54.228"/>
</kw>
<kw name="Get A Label" library="Label">
<var>${response}</var>
<arg>${LABEL_ID}</arg>
<doc>Gets the label with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 15:47:54.229" level="INFO">${url} = labels/62c45d2a01c49428bcd82eb4</msg>
<status status="PASS" starttime="20220705 15:47:54.229" endtime="20220705 15:47:54.229"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 15:47:54.275" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 15:47:54.229" endtime="20220705 15:47:54.275"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 15:47:54.275" endtime="20220705 15:47:54.276"/>
</return>
<msg timestamp="20220705 15:47:54.276" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 15:47:54.229" endtime="20220705 15:47:54.276"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 15:47:54.276" endtime="20220705 15:47:54.276"/>
</return>
<msg timestamp="20220705 15:47:54.276" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 15:47:54.228" endtime="20220705 15:47:54.276"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${LABEL_COLOR}</var>
<arg>${response}</arg>
<arg>color</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 15:47:54.277" endtime="20220705 15:47:54.277"/>
</return>
<msg timestamp="20220705 15:47:54.277" level="INFO">${LABEL_COLOR} = yellow</msg>
<status status="PASS" starttime="20220705 15:47:54.276" endtime="20220705 15:47:54.277"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${LABEL_NAME}</var>
<arg>${response}</arg>
<arg>name</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 15:47:54.278" endtime="20220705 15:47:54.278"/>
</return>
<msg timestamp="20220705 15:47:54.278" level="INFO">${LABEL_NAME} = label2</msg>
<status status="PASS" starttime="20220705 15:47:54.277" endtime="20220705 15:47:54.278"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${LABEL_COLOR}</arg>
<arg>yellow</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220705 15:47:54.278" endtime="20220705 15:47:54.279"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${LABEL_NAME}</arg>
<arg>label2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220705 15:47:54.279" endtime="20220705 15:47:54.279"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Label</arg>
<arg>${LABEL_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Label" library="Label">
<arg>${LABEL_ID}</arg>
<doc>Deletes the label with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 15:47:54.280" level="INFO">${url} = labels/62c45d2a01c49428bcd82eb4</msg>
<status status="PASS" starttime="20220705 15:47:54.280" endtime="20220705 15:47:54.280"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 15:47:54.392" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 15:47:54.280" endtime="20220705 15:47:54.392"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 15:47:54.392" endtime="20220705 15:47:54.392"/>
</return>
<msg timestamp="20220705 15:47:54.392" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 15:47:54.280" endtime="20220705 15:47:54.392"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 15:47:54.392" endtime="20220705 15:47:54.392"/>
</return>
<status status="PASS" starttime="20220705 15:47:54.279" endtime="20220705 15:47:54.392"/>
</kw>
<status status="PASS" starttime="20220705 15:47:54.279" endtime="20220705 15:47:54.392"/>
</kw>
<doc>Verify that a label can be created through API</doc>
<tag>api</tag>
<tag>label.create</tag>
<tag>label.get</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220705 15:47:54.131" endtime="20220705 15:47:54.392"/>
</test>
<test id="s1-s1-s4-t2" name="Update label on board" line="28">
<kw name="Create A Label" library="Label">
<var>${response}</var>
<arg>name</arg>
<arg>label2</arg>
<arg>color</arg>
<arg>yellow</arg>
<doc>Creates a new label in the given board.
required_args: idBoard
optional_args: name, color
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>idBoard</arg>
<arg>${idBoard}</arg>
<arg>@{optional_args}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 15:47:54.394" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 15:47:54.394" endtime="20220705 15:47:54.394"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 15:47:54.394" endtime="20220705 15:47:54.395"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 15:47:54.395" level="INFO">${url} = labels/</msg>
<status status="PASS" starttime="20220705 15:47:54.395" endtime="20220705 15:47:54.395"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 15:47:54.488" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 15:47:54.395" endtime="20220705 15:47:54.488"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 15:47:54.488" endtime="20220705 15:47:54.488"/>
</return>
<msg timestamp="20220705 15:47:54.488" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 15:47:54.394" endtime="20220705 15:47:54.488"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 15:47:54.488" endtime="20220705 15:47:54.488"/>
</return>
<msg timestamp="20220705 15:47:54.489" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 15:47:54.393" endtime="20220705 15:47:54.489"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>label</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 15:47:54.489" endtime="20220705 15:47:54.491"/>
</kw>
<status status="PASS" starttime="20220705 15:47:54.489" endtime="20220705 15:47:54.491"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${LABEL_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 15:47:54.491" endtime="20220705 15:47:54.491"/>
</return>
<msg timestamp="20220705 15:47:54.492" level="INFO">${LABEL_ID} = 62c45d2aaf09234930d6b2e9</msg>
<status status="PASS" starttime="20220705 15:47:54.491" endtime="20220705 15:47:54.492"/>
</kw>
<kw name="Update A Label" library="Label">
<var>${new_response}</var>
<arg>${LABEL_ID}</arg>
<arg>name</arg>
<arg>label3</arg>
<arg>color</arg>
<arg>orange</arg>
<doc>Updates the label with the given ID
optional_args: name, color
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 15:47:54.493" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 15:47:54.493" endtime="20220705 15:47:54.493"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 15:47:54.493" endtime="20220705 15:47:54.494"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 15:47:54.494" level="INFO">${url} = labels/62c45d2aaf09234930d6b2e9</msg>
<status status="PASS" starttime="20220705 15:47:54.494" endtime="20220705 15:47:54.494"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 15:47:54.588" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 15:47:54.494" endtime="20220705 15:47:54.588"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 15:47:54.588" endtime="20220705 15:47:54.589"/>
</return>
<msg timestamp="20220705 15:47:54.589" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 15:47:54.493" endtime="20220705 15:47:54.589"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 15:47:54.589" endtime="20220705 15:47:54.589"/>
</return>
<msg timestamp="20220705 15:47:54.589" level="INFO">${new_response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 15:47:54.492" endtime="20220705 15:47:54.589"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${NEW_LABEL_COLOR}</var>
<arg>${new_response}</arg>
<arg>color</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 15:47:54.590" endtime="20220705 15:47:54.590"/>
</return>
<msg timestamp="20220705 15:47:54.590" level="INFO">${NEW_LABEL_COLOR} = orange</msg>
<status status="PASS" starttime="20220705 15:47:54.589" endtime="20220705 15:47:54.590"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${NEW_LABEL_NAME}</var>
<arg>${new_response}</arg>
<arg>name</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 15:47:54.591" endtime="20220705 15:47:54.591"/>
</return>
<msg timestamp="20220705 15:47:54.591" level="INFO">${NEW_LABEL_NAME} = label3</msg>
<status status="PASS" starttime="20220705 15:47:54.590" endtime="20220705 15:47:54.591"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${NEW_LABEL_COLOR}</arg>
<arg>orange</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220705 15:47:54.591" endtime="20220705 15:47:54.592"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${NEW_LABEL_NAME}</arg>
<arg>label3</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220705 15:47:54.592" endtime="20220705 15:47:54.592"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Label</arg>
<arg>${LABEL_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Label" library="Label">
<arg>${LABEL_ID}</arg>
<doc>Deletes the label with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 15:47:54.594" level="INFO">${url} = labels/62c45d2aaf09234930d6b2e9</msg>
<status status="PASS" starttime="20220705 15:47:54.593" endtime="20220705 15:47:54.594"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 15:47:54.696" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 15:47:54.594" endtime="20220705 15:47:54.696"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 15:47:54.696" endtime="20220705 15:47:54.696"/>
</return>
<msg timestamp="20220705 15:47:54.697" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 15:47:54.593" endtime="20220705 15:47:54.697"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 15:47:54.697" endtime="20220705 15:47:54.697"/>
</return>
<status status="PASS" starttime="20220705 15:47:54.592" endtime="20220705 15:47:54.697"/>
</kw>
<status status="PASS" starttime="20220705 15:47:54.592" endtime="20220705 15:47:54.697"/>
</kw>
<doc>Verify that a label's name and color can be updated through API</doc>
<tag>api</tag>
<tag>label.update</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220705 15:47:54.393" endtime="20220705 15:47:54.697"/>
</test>
<test id="s1-s1-s4-t3" name="Delete label on board" line="41">
<kw name="Create A Label" library="Label">
<var>${response}</var>
<arg>name</arg>
<arg>label2</arg>
<arg>color</arg>
<arg>yellow</arg>
<doc>Creates a new label in the given board.
required_args: idBoard
optional_args: name, color
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>idBoard</arg>
<arg>${idBoard}</arg>
<arg>@{optional_args}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 15:47:54.699" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 15:47:54.699" endtime="20220705 15:47:54.699"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 15:47:54.699" endtime="20220705 15:47:54.699"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 15:47:54.700" level="INFO">${url} = labels/</msg>
<status status="PASS" starttime="20220705 15:47:54.699" endtime="20220705 15:47:54.700"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 15:47:54.777" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 15:47:54.700" endtime="20220705 15:47:54.777"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 15:47:54.778" endtime="20220705 15:47:54.778"/>
</return>
<msg timestamp="20220705 15:47:54.778" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 15:47:54.698" endtime="20220705 15:47:54.778"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 15:47:54.778" endtime="20220705 15:47:54.778"/>
</return>
<msg timestamp="20220705 15:47:54.778" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 15:47:54.698" endtime="20220705 15:47:54.778"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${LABEL_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 15:47:54.778" endtime="20220705 15:47:54.779"/>
</return>
<msg timestamp="20220705 15:47:54.779" level="INFO">${LABEL_ID} = 62c45d2a24993956d6f21f50</msg>
<status status="PASS" starttime="20220705 15:47:54.778" endtime="20220705 15:47:54.779"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Label</arg>
<arg>${LABEL_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Label" library="Label">
<arg>${LABEL_ID}</arg>
<doc>Deletes the label with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 15:47:54.781" level="INFO">${url} = labels/62c45d2a24993956d6f21f50</msg>
<status status="PASS" starttime="20220705 15:47:54.781" endtime="20220705 15:47:54.781"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 15:47:54.896" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 15:47:54.781" endtime="20220705 15:47:54.896"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 15:47:54.896" endtime="20220705 15:47:54.896"/>
</return>
<msg timestamp="20220705 15:47:54.897" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 15:47:54.780" endtime="20220705 15:47:54.897"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 15:47:54.897" endtime="20220705 15:47:54.897"/>
</return>
<status status="PASS" starttime="20220705 15:47:54.780" endtime="20220705 15:47:54.897"/>
</kw>
<status status="PASS" starttime="20220705 15:47:54.779" endtime="20220705 15:47:54.897"/>
</kw>
<kw name="Get A Label" library="Label">
<arg>${LABEL_ID}</arg>
<arg>status_code=404</arg>
<doc>Gets the label with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 15:47:54.898" level="INFO">${url} = labels/62c45d2a24993956d6f21f50</msg>
<status status="PASS" starttime="20220705 15:47:54.898" endtime="20220705 15:47:54.898"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 15:47:54.933" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220705 15:47:54.898" endtime="20220705 15:47:54.933"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 15:47:54.933" endtime="20220705 15:47:54.933"/>
</return>
<msg timestamp="20220705 15:47:54.933" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220705 15:47:54.898" endtime="20220705 15:47:54.933"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 15:47:54.933" endtime="20220705 15:47:54.933"/>
</return>
<status status="PASS" starttime="20220705 15:47:54.897" endtime="20220705 15:47:54.933"/>
</kw>
<doc>Verify that a label can be deleted through API</doc>
<tag>api</tag>
<tag>label.delete</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220705 15:47:54.697" endtime="20220705 15:47:54.934"/>
</test>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Teardown Board</arg>
<arg>Delete All Sessions</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Teardown Board">
<doc>Delete the board created for this session.</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 15:47:54.936" level="INFO">${url} = boards/62c45d29dfbf5355bb19cf88</msg>
<status status="PASS" starttime="20220705 15:47:54.935" endtime="20220705 15:47:54.936"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 15:47:55.265" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 15:47:54.936" endtime="20220705 15:47:55.265"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 15:47:55.265" endtime="20220705 15:47:55.265"/>
</return>
<msg timestamp="20220705 15:47:55.265" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 15:47:54.935" endtime="20220705 15:47:55.265"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 15:47:55.266" endtime="20220705 15:47:55.266"/>
</return>
<status status="PASS" starttime="20220705 15:47:54.935" endtime="20220705 15:47:55.266"/>
</kw>
<status status="PASS" starttime="20220705 15:47:54.934" endtime="20220705 15:47:55.266"/>
</kw>
<status status="PASS" starttime="20220705 15:47:54.934" endtime="20220705 15:47:55.266"/>
</kw>
<kw name="Delete All Sessions" library="request_own_library">
<status status="PASS" starttime="20220705 15:47:55.266" endtime="20220705 15:47:55.267"/>
</kw>
<status status="PASS" starttime="20220705 15:47:54.934" endtime="20220705 15:47:55.267"/>
</kw>
<doc>Example Test with Trello API Cards</doc>
<status status="PASS" starttime="20220705 15:47:53.868" endtime="20220705 15:47:55.267"/>
</suite>
<suite id="s1-s1-s5" name="Trello Api Lists Tests" source="/trello/api/trello_api_lists_tests.robot">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Create Trello Session</arg>
<arg>Setup Board</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Create Trello Session" library="TrelloAPI">
<doc>Creates a Trello Session</doc>
<kw name="Create Session" library="request_own_library">
<arg>${API_BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<status status="PASS" starttime="20220705 15:47:55.276" endtime="20220705 15:47:55.276"/>
</kw>
<status status="PASS" starttime="20220705 15:47:55.276" endtime="20220705 15:47:55.276"/>
</kw>
<kw name="Setup Board">
<doc>Create a board and save it's id for the suite</doc>
<kw name="Create A Board" library="Board">
<var>${BOARD}</var>
<arg>TestBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 15:47:55.277" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 15:47:55.277" endtime="20220705 15:47:55.278"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 15:47:55.278" endtime="20220705 15:47:55.278"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 15:47:55.278" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220705 15:47:55.278" endtime="20220705 15:47:55.278"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 15:47:55.494" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 15:47:55.279" endtime="20220705 15:47:55.494"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 15:47:55.494" endtime="20220705 15:47:55.494"/>
</return>
<msg timestamp="20220705 15:47:55.495" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 15:47:55.277" endtime="20220705 15:47:55.495"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 15:47:55.495" endtime="20220705 15:47:55.495"/>
</return>
<msg timestamp="20220705 15:47:55.495" level="INFO">${BOARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 15:47:55.277" endtime="20220705 15:47:55.495"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Set Suite Variable</arg>
<arg>\${TEST_SUITE_BOARD_ID}</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_BOARD_ID}</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220705 15:47:55.496" level="INFO">${TEST_SUITE_BOARD_ID} = 62c45d2b329b882baad4546b</msg>
<status status="PASS" starttime="20220705 15:47:55.495" endtime="20220705 15:47:55.496"/>
</kw>
<status status="PASS" starttime="20220705 15:47:55.495" endtime="20220705 15:47:55.496"/>
</kw>
<status status="PASS" starttime="20220705 15:47:55.277" endtime="20220705 15:47:55.496"/>
</kw>
<status status="PASS" starttime="20220705 15:47:55.276" endtime="20220705 15:47:55.496"/>
</kw>
<test id="s1-s1-s5-t1" name="CREATE a list" line="13">
<kw name="Create A List" library="List">
<var>${response}</var>
<arg>NewList</arg>
<doc>Creates a new List
board id
name the list will have
optional_args: idListSource, pos, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>list</arg>
<arg>name</arg>
<arg>${name}</arg>
<arg>idBoard</arg>
<arg>${idBoard}</arg>
<arg>@{optional_args}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 15:47:55.498" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 15:47:55.498" endtime="20220705 15:47:55.498"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 15:47:55.498" endtime="20220705 15:47:55.498"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 15:47:55.499" level="INFO">${url} = lists/</msg>
<status status="PASS" starttime="20220705 15:47:55.498" endtime="20220705 15:47:55.499"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 15:47:55.593" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 15:47:55.499" endtime="20220705 15:47:55.593"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 15:47:55.593" endtime="20220705 15:47:55.593"/>
</return>
<msg timestamp="20220705 15:47:55.593" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 15:47:55.497" endtime="20220705 15:47:55.593"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 15:47:55.593" endtime="20220705 15:47:55.593"/>
</return>
<msg timestamp="20220705 15:47:55.594" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 15:47:55.497" endtime="20220705 15:47:55.594"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>list</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 15:47:55.594" endtime="20220705 15:47:55.596"/>
</kw>
<status status="PASS" starttime="20220705 15:47:55.594" endtime="20220705 15:47:55.596"/>
</kw>
<doc>Verify that a list can be created through API</doc>
<tag>api</tag>
<tag>list.create</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220705 15:47:55.496" endtime="20220705 15:47:55.596"/>
</test>
<test id="s1-s1-s5-t2" name="UPDATE a list" line="19">
<kw name="Create A List" library="List">
<var>${response}</var>
<arg>NewList</arg>
<doc>Creates a new List
board id
name the list will have
optional_args: idListSource, pos, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>list</arg>
<arg>name</arg>
<arg>${name}</arg>
<arg>idBoard</arg>
<arg>${idBoard}</arg>
<arg>@{optional_args}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 15:47:55.598" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 15:47:55.598" endtime="20220705 15:47:55.598"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 15:47:55.598" endtime="20220705 15:47:55.598"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 15:47:55.599" level="INFO">${url} = lists/</msg>
<status status="PASS" starttime="20220705 15:47:55.598" endtime="20220705 15:47:55.599"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 15:47:55.692" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 15:47:55.599" endtime="20220705 15:47:55.692"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 15:47:55.692" endtime="20220705 15:47:55.692"/>
</return>
<msg timestamp="20220705 15:47:55.692" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 15:47:55.597" endtime="20220705 15:47:55.692"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 15:47:55.692" endtime="20220705 15:47:55.692"/>
</return>
<msg timestamp="20220705 15:47:55.692" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 15:47:55.597" endtime="20220705 15:47:55.693"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>list</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 15:47:55.693" endtime="20220705 15:47:55.695"/>
</kw>
<status status="PASS" starttime="20220705 15:47:55.693" endtime="20220705 15:47:55.695"/>
</kw>
<kw name="Update A List" library="List">
<arg>${response.json()}[id]</arg>
<arg>name</arg>
<arg>NewName</arg>
<doc>Updates the board with the given ID
optional_args: name, idListSource, pos, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>list</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 15:47:55.696" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 15:47:55.696" endtime="20220705 15:47:55.697"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 15:47:55.697" endtime="20220705 15:47:55.697"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 15:47:55.697" level="INFO">${url} = lists/62c45d2b6d6e4c1545c6b7cb</msg>
<status status="PASS" starttime="20220705 15:47:55.697" endtime="20220705 15:47:55.697"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 15:47:55.777" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 15:47:55.697" endtime="20220705 15:47:55.777"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 15:47:55.777" endtime="20220705 15:47:55.777"/>
</return>
<msg timestamp="20220705 15:47:55.777" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 15:47:55.696" endtime="20220705 15:47:55.777"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 15:47:55.777" endtime="20220705 15:47:55.777"/>
</return>
<status status="PASS" starttime="20220705 15:47:55.695" endtime="20220705 15:47:55.777"/>
</kw>
<kw name="Get A List" library="List">
<var>${new_response}</var>
<arg>${response.json()}[id]</arg>
<doc>Gets the List with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>list</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 15:47:55.779" level="INFO">${url} = lists/62c45d2b6d6e4c1545c6b7cb</msg>
<status status="PASS" starttime="20220705 15:47:55.779" endtime="20220705 15:47:55.779"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 15:47:55.826" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 15:47:55.779" endtime="20220705 15:47:55.826"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 15:47:55.826" endtime="20220705 15:47:55.827"/>
</return>
<msg timestamp="20220705 15:47:55.827" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 15:47:55.778" endtime="20220705 15:47:55.827"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 15:47:55.827" endtime="20220705 15:47:55.827"/>
</return>
<msg timestamp="20220705 15:47:55.827" level="INFO">${new_response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 15:47:55.777" endtime="20220705 15:47:55.827"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${new_response}</arg>
<arg>list</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 15:47:55.828" endtime="20220705 15:47:55.829"/>
</kw>
<status status="PASS" starttime="20220705 15:47:55.827" endtime="20220705 15:47:55.829"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${new_response.json()}[name]</arg>
<arg>NewName</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220705 15:47:55.829" endtime="20220705 15:47:55.830"/>
</kw>
<doc>Verify that a lists name can be updated through API</doc>
<tag>api</tag>
<tag>list.update</tag>
<tag>regression</tag>
<status status="PASS" starttime="20220705 15:47:55.596" endtime="20220705 15:47:55.830"/>
</test>
<test id="s1-s1-s5-t3" name="ARCHIVE A list" line="29">
<kw name="Create A List" library="List">
<var>${response}</var>
<arg>NewList</arg>
<doc>Creates a new List
board id
name the list will have
optional_args: idListSource, pos, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>list</arg>
<arg>name</arg>
<arg>${name}</arg>
<arg>idBoard</arg>
<arg>${idBoard}</arg>
<arg>@{optional_args}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 15:47:55.833" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 15:47:55.833" endtime="20220705 15:47:55.833"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 15:47:55.833" endtime="20220705 15:47:55.834"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 15:47:55.834" level="INFO">${url} = lists/</msg>
<status status="PASS" starttime="20220705 15:47:55.834" endtime="20220705 15:47:55.834"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 15:47:55.922" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 15:47:55.834" endtime="20220705 15:47:55.922"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 15:47:55.922" endtime="20220705 15:47:55.922"/>
</return>
<msg timestamp="20220705 15:47:55.922" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 15:47:55.832" endtime="20220705 15:47:55.922"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 15:47:55.922" endtime="20220705 15:47:55.922"/>
</return>
<msg timestamp="20220705 15:47:55.922" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 15:47:55.831" endtime="20220705 15:47:55.922"/>
</kw>
<kw name="Archive A List" library="List">
<arg>${response.json()}[id]</arg>
<doc>Deletes the list with the given ID</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>archive_list</arg>
<arg>${id}</arg>
<arg>value</arg>
<arg>true</arg>
<arg>status_code=${status_code}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 15:47:55.924" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 15:47:55.924" endtime="20220705 15:47:55.924"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 15:47:55.924" endtime="20220705 15:47:55.925"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 15:47:55.925" level="INFO">${url} = lists/62c45d2b147c1088fa1d9a39/closed</msg>
<status status="PASS" starttime="20220705 15:47:55.925" endtime="20220705 15:47:55.925"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 15:47:56.020" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 15:47:55.925" endtime="20220705 15:47:56.020"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 15:47:56.020" endtime="20220705 15:47:56.020"/>
</return>
<msg timestamp="20220705 15:47:56.020" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 15:47:55.923" endtime="20220705 15:47:56.020"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 15:47:56.020" endtime="20220705 15:47:56.020"/>
</return>
<status status="PASS" starttime="20220705 15:47:55.923" endtime="20220705 15:47:56.021"/>
</kw>
<kw name="Get A List" library="List">
<var>${new_response}</var>
<arg>${response.json()}[id]</arg>
<doc>Gets the List with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>list</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 15:47:56.022" level="INFO">${url} = lists/62c45d2b147c1088fa1d9a39</msg>
<status status="PASS" starttime="20220705 15:47:56.022" endtime="20220705 15:47:56.022"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 15:47:56.073" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 15:47:56.022" endtime="20220705 15:47:56.073"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 15:47:56.073" endtime="20220705 15:47:56.073"/>
</return>
<msg timestamp="20220705 15:47:56.073" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 15:47:56.022" endtime="20220705 15:47:56.073"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 15:47:56.073" endtime="20220705 15:47:56.073"/>
</return>
<msg timestamp="20220705 15:47:56.073" level="INFO">${new_response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 15:47:56.021" endtime="20220705 15:47:56.073"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${new_response.json()}[closed]</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220705 15:47:56.074" endtime="20220705 15:47:56.074"/>
</kw>
<doc>Verify that a list can be archived through API</doc>
<tag>api</tag>
<tag>list.archive</tag>
<tag>regression</tag>
<status status="PASS" starttime="20220705 15:47:55.830" endtime="20220705 15:47:56.074"/>
</test>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Teardown Board</arg>
<arg>Delete All Sessions</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Teardown Board">
<doc>Delete the board created for this suite.</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 15:47:56.077" level="INFO">${url} = boards/62c45d2b329b882baad4546b</msg>
<status status="PASS" starttime="20220705 15:47:56.077" endtime="20220705 15:47:56.077"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 15:47:56.440" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 15:47:56.077" endtime="20220705 15:47:56.440"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 15:47:56.440" endtime="20220705 15:47:56.440"/>
</return>
<msg timestamp="20220705 15:47:56.441" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 15:47:56.076" endtime="20220705 15:47:56.441"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 15:47:56.441" endtime="20220705 15:47:56.441"/>
</return>
<status status="PASS" starttime="20220705 15:47:56.076" endtime="20220705 15:47:56.441"/>
</kw>
<status status="PASS" starttime="20220705 15:47:56.076" endtime="20220705 15:47:56.441"/>
</kw>
<status status="PASS" starttime="20220705 15:47:56.075" endtime="20220705 15:47:56.441"/>
</kw>
<kw name="Delete All Sessions" library="request_own_library">
<status status="PASS" starttime="20220705 15:47:56.441" endtime="20220705 15:47:56.442"/>
</kw>
<status status="PASS" starttime="20220705 15:47:56.075" endtime="20220705 15:47:56.442"/>
</kw>
<doc>Example Test with Trello API lists</doc>
<status status="PASS" starttime="20220705 15:47:55.268" endtime="20220705 15:47:56.442"/>
</suite>
<status status="PASS" starttime="20220705 15:47:43.698" endtime="20220705 15:47:56.444"/>
</suite>
<status status="PASS" starttime="20220705 15:47:43.681" endtime="20220705 15:47:56.446"/>
</suite>
<statistics>
<total>
<stat pass="18" fail="0" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="18" fail="0" skip="0">api</stat>
<stat pass="1" fail="0" skip="0">board.create</stat>
<stat pass="1" fail="0" skip="0">board.delete</stat>
<stat pass="1" fail="0" skip="0">board.get</stat>
<stat pass="2" fail="0" skip="0">board.update</stat>
<stat pass="1" fail="0" skip="0">card.close</stat>
<stat pass="1" fail="0" skip="0">card.create</stat>
<stat pass="1" fail="0" skip="0">card.delete</stat>
<stat pass="1" fail="0" skip="0">card.update</stat>
<stat pass="1" fail="0" skip="0">checklist.create</stat>
<stat pass="1" fail="0" skip="0">checklist.delete</stat>
<stat pass="1" fail="0" skip="0">checklist.update</stat>
<stat pass="1" fail="0" skip="0">label.create</stat>
<stat pass="1" fail="0" skip="0">label.delete</stat>
<stat pass="1" fail="0" skip="0">label.get</stat>
<stat pass="1" fail="0" skip="0">label.update</stat>
<stat pass="1" fail="0" skip="0">list.archive</stat>
<stat pass="1" fail="0" skip="0">list.create</stat>
<stat pass="1" fail="0" skip="0">list.update</stat>
<stat pass="5" fail="0" skip="0">regression</stat>
<stat pass="13" fail="0" skip="0">smoke</stat>
</tag>
<suite>
<stat pass="18" fail="0" skip="0" id="s1" name="Trello">Trello</stat>
<stat pass="18" fail="0" skip="0" id="s1-s1" name="Api">Trello.Api</stat>
<stat pass="5" fail="0" skip="0" id="s1-s1-s1" name="Trello Api Boards Tests">Trello.Api.Trello Api Boards Tests</stat>
<stat pass="4" fail="0" skip="0" id="s1-s1-s2" name="Trello Api Cards Tests">Trello.Api.Trello Api Cards Tests</stat>
<stat pass="3" fail="0" skip="0" id="s1-s1-s3" name="Trello Api Checklists Tests">Trello.Api.Trello Api Checklists Tests</stat>
<stat pass="3" fail="0" skip="0" id="s1-s1-s4" name="Trello Api Labels Tests">Trello.Api.Trello Api Labels Tests</stat>
<stat pass="3" fail="0" skip="0" id="s1-s1-s5" name="Trello Api Lists Tests">Trello.Api.Trello Api Lists Tests</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
