<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 5.0.1 (Python 3.10.5 on linux)" generated="20220707 04:37:21.566" rpa="false" schemaversion="3">
<suite id="s1" name="Trello" source="/trello">
<suite id="s1-s1" name="Gui" source="/trello/gui">
<suite id="s1-s1-s1" name="Trello Gui Board" source="/trello/gui/trello_gui_board.robot">
<kw name="Boards Suite Setup" type="SETUP">
<doc>Creates a Trello Sesion in order to use api's keywords.</doc>
<kw name="Create Trello Session" library="TrelloAPI">
<doc>Creates a Trello Session</doc>
<kw name="Create Session" library="request_own_library">
<arg>${API_BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<status status="PASS" starttime="20220707 04:37:21.826" endtime="20220707 04:37:21.826"/>
</kw>
<status status="PASS" starttime="20220707 04:37:21.826" endtime="20220707 04:37:21.826"/>
</kw>
<status status="PASS" starttime="20220707 04:37:21.825" endtime="20220707 04:37:21.827"/>
</kw>
<test id="s1-s1-s1-t1" name="create a board" line="12">
<kw name="Open Browser From Environment" library="CommonGUI">
<arg>${LOGIN_URL}</arg>
<doc>This keywords takes REMOTE and BROWSER variables
from the environment automatically and only needs a url</doc>
<if>
<branch type="IF" condition="${is_remote}">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${url}</arg>
<arg>${BROWSER}</arg>
<arg>remote_url=http://selenium-hub:4444</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20220707 04:37:21.829" level="INFO">Opening browser 'chrome' to base url 'https://trello.com/login' through remote server at 'http://selenium-hub:4444'.</msg>
<status status="PASS" starttime="20220707 04:37:21.828" endtime="20220707 04:37:23.732"/>
</kw>
<status status="PASS" starttime="20220707 04:37:21.828" endtime="20220707 04:37:23.732"/>
</branch>
<branch type="ELSE">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${url}</arg>
<arg>${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<status status="NOT RUN" starttime="20220707 04:37:23.732" endtime="20220707 04:37:23.733"/>
</kw>
<status status="NOT RUN" starttime="20220707 04:37:23.732" endtime="20220707 04:37:23.733"/>
</branch>
<status status="PASS" starttime="20220707 04:37:21.828" endtime="20220707 04:37:23.733"/>
</if>
<status status="PASS" starttime="20220707 04:37:21.828" endtime="20220707 04:37:23.733"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20220707 04:37:23.733" endtime="20220707 04:37:23.858"/>
</kw>
<kw name="Login To Trello" library="LoginPage">
<arg>${DEFAULT_EMAIL}</arg>
<arg>${DEFAULT_PASSWORD}</arg>
<doc>High-level keyword for logging in to Trello</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220707 04:37:23.878" level="INFO">${url} = https://trello.com/login</msg>
<status status="PASS" starttime="20220707 04:37:23.858" endtime="20220707 04:37:23.878"/>
</kw>
<if>
<branch type="IF" condition="'${url}' != '${LOGIN_URL}'">
<kw name="Go To" library="SeleniumLibrary">
<arg>${LOGIN_URL}</arg>
<doc>Navigates the current browser window to the provided ``url``.</doc>
<status status="NOT RUN" starttime="20220707 04:37:23.878" endtime="20220707 04:37:23.878"/>
</kw>
<status status="NOT RUN" starttime="20220707 04:37:23.878" endtime="20220707 04:37:23.878"/>
</branch>
<status status="PASS" starttime="20220707 04:37:23.878" endtime="20220707 04:37:23.878"/>
</if>
<kw name="Enter Username" library="LoginPage">
<arg>${username}</arg>
<doc>Take a username as argument and
enters it in the user_input</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${USER_INPUT}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220707 04:37:23.879" endtime="20220707 04:37:23.939"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${USER_INPUT}</arg>
<arg>${username}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220707 04:37:23.940" level="INFO">Typing text 'bootcamp04@mailinator.com' into text field 'css:input#user'.</msg>
<status status="PASS" starttime="20220707 04:37:23.940" endtime="20220707 04:37:24.081"/>
</kw>
<status status="PASS" starttime="20220707 04:37:23.878" endtime="20220707 04:37:24.081"/>
</kw>
<kw name="Wait Until Element Is Not Visible" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<doc>Waits until the element ``locator`` is not visible.</doc>
<status status="PASS" starttime="20220707 04:37:24.082" endtime="20220707 04:37:24.641"/>
</kw>
<kw name="Click Login Button" library="LoginPage">
<doc>Clicks Trello's login button if in Trello's
login page, else it clicks Atlassian's</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220707 04:37:24.662" level="INFO">${url} = https://trello.com/login</msg>
<status status="PASS" starttime="20220707 04:37:24.642" endtime="20220707 04:37:24.662"/>
</kw>
<if>
<branch type="IF" condition="'${url}' == '${LOGIN_URL}'">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220707 04:37:24.662" endtime="20220707 04:37:24.737"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220707 04:37:24.737" level="INFO">Clicking button 'css:input#login'.</msg>
<status status="PASS" starttime="20220707 04:37:24.737" endtime="20220707 04:37:25.600"/>
</kw>
<status status="PASS" starttime="20220707 04:37:24.662" endtime="20220707 04:37:25.600"/>
</branch>
<branch type="ELSE">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="NOT RUN" starttime="20220707 04:37:25.600" endtime="20220707 04:37:25.600"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<status status="NOT RUN" starttime="20220707 04:37:25.600" endtime="20220707 04:37:25.600"/>
</kw>
<status status="NOT RUN" starttime="20220707 04:37:25.600" endtime="20220707 04:37:25.600"/>
</branch>
<status status="PASS" starttime="20220707 04:37:24.662" endtime="20220707 04:37:25.600"/>
</if>
<status status="PASS" starttime="20220707 04:37:24.642" endtime="20220707 04:37:25.600"/>
</kw>
<kw name="Wait Until Location Is Atlassian's Login" library="LoginPage">
<doc>Waits for the page redirection when logging in.</doc>
<kw name="Wait Until Location Contains" library="SeleniumLibrary">
<arg>atlassian.com</arg>
<doc>Waits until the current URL contains ``expected``.</doc>
<status status="PASS" starttime="20220707 04:37:25.601" endtime="20220707 04:37:25.619"/>
</kw>
<status status="PASS" starttime="20220707 04:37:25.601" endtime="20220707 04:37:25.619"/>
</kw>
<kw name="Enter Password" library="LoginPage">
<arg>${password}</arg>
<doc>Take a password as argument and
enters it in the password_input</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<arg>timeout=${DEFAULT_TIMEOUT}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220707 04:37:25.620" endtime="20220707 04:37:25.686"/>
</kw>
<kw name="Input Password" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<arg>${password}</arg>
<doc>Types the given password into the text field identified by ``locator``.</doc>
<msg timestamp="20220707 04:37:25.686" level="INFO">Typing password into text field 'css:input#password'.</msg>
<msg timestamp="20220707 04:37:25.767" level="INFO">Temporally setting log level to: NONE</msg>
<msg timestamp="20220707 04:37:25.848" level="INFO">Log level changed from NONE to INFO.</msg>
<status status="PASS" starttime="20220707 04:37:25.686" endtime="20220707 04:37:25.848"/>
</kw>
<status status="PASS" starttime="20220707 04:37:25.619" endtime="20220707 04:37:25.848"/>
</kw>
<kw name="Click Login Button" library="LoginPage">
<doc>Clicks Trello's login button if in Trello's
login page, else it clicks Atlassian's</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220707 04:37:25.862" level="INFO">${url} = https://id.atlassian.com/login?application=trello&amp;continue=https%3A%2F%2Ftrello.com%2Fauth%2Fatlassian%2Fcallback%3FreturnUrl%3D%252F%26display%3D%26aaOnboarding%3D%26updateEmail%3D%26traceId%3D62c663...</msg>
<status status="PASS" starttime="20220707 04:37:25.849" endtime="20220707 04:37:25.862"/>
</kw>
<if>
<branch type="IF" condition="'${url}' == '${LOGIN_URL}'">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="NOT RUN" starttime="20220707 04:37:25.863" endtime="20220707 04:37:25.863"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<status status="NOT RUN" starttime="20220707 04:37:25.863" endtime="20220707 04:37:25.863"/>
</kw>
<status status="NOT RUN" starttime="20220707 04:37:25.863" endtime="20220707 04:37:25.863"/>
</branch>
<branch type="ELSE">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220707 04:37:25.863" endtime="20220707 04:37:25.942"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220707 04:37:25.943" level="INFO">Clicking button 'css:button#login-submit'.</msg>
<status status="PASS" starttime="20220707 04:37:25.942" endtime="20220707 04:37:26.045"/>
</kw>
<status status="PASS" starttime="20220707 04:37:25.863" endtime="20220707 04:37:26.045"/>
</branch>
<status status="PASS" starttime="20220707 04:37:25.862" endtime="20220707 04:37:26.045"/>
</if>
<status status="PASS" starttime="20220707 04:37:25.848" endtime="20220707 04:37:26.046"/>
</kw>
<status status="PASS" starttime="20220707 04:37:23.858" endtime="20220707 04:37:26.046"/>
</kw>
<kw name="Click New Board Button" library="BoardsPage">
<doc>Clicks the button that creates a new board.</doc>
<kw name="Wait Until Location Contains" library="SeleniumLibrary">
<arg>${BOARDS_PATH}</arg>
<doc>Waits until the current URL contains ``expected``.</doc>
<status status="PASS" starttime="20220707 04:37:26.046" endtime="20220707 04:37:29.084"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${DEFAULT_TIMEOUT}</arg>
<arg>${DEFAULT_INTERVAL}</arg>
<arg>Click Element</arg>
<arg>${CREATE_NEW_BOARD_BUTTON}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${CREATE_NEW_BOARD_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220707 04:37:29.085" level="INFO">Clicking element 'xpath://div[@class="boards-page-board-section mod-no-sidebar"]//div[@class="board-tile mod-add"]'.</msg>
<status status="PASS" starttime="20220707 04:37:29.085" endtime="20220707 04:37:29.238"/>
</kw>
<status status="PASS" starttime="20220707 04:37:29.084" endtime="20220707 04:37:29.238"/>
</kw>
<status status="PASS" starttime="20220707 04:37:26.046" endtime="20220707 04:37:29.238"/>
</kw>
<kw name="Set Name to Board" library="BoardsPage">
<arg>NewName</arg>
<doc>Set the name of the board and press the create button</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${BOARD_NAME_INPUT}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220707 04:37:29.238" endtime="20220707 04:37:29.562"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${BOARD_NAME_INPUT}</arg>
<arg>${name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220707 04:37:29.562" level="INFO">Typing text 'NewName' into text field 'xpath://div[@title='Create board']/ancestor::section//input[@type="text"]'.</msg>
<status status="PASS" starttime="20220707 04:37:29.562" endtime="20220707 04:37:29.729"/>
</kw>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${CREATE_BUTTON}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220707 04:37:29.729" endtime="20220707 04:37:29.789"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${CREATE_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220707 04:37:29.790" level="INFO">Clicking element 'xpath://div[@title='Create board']/ancestor::section//button[text()='Create']'.</msg>
<status status="PASS" starttime="20220707 04:37:29.790" endtime="20220707 04:37:29.880"/>
</kw>
<status status="PASS" starttime="20220707 04:37:29.238" endtime="20220707 04:37:29.880"/>
</kw>
<kw name="Verify Name of Board" library="UpperHorizontalMenu">
<arg>NewName</arg>
<doc>Verifies the name of a board</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${NAME_OF_BOARD}</arg>
<arg>${DEFAULT_TIMEOUT}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220707 04:37:29.881" endtime="20220707 04:37:31.145"/>
</kw>
<kw name="Element Text Should Be" library="SeleniumLibrary">
<arg>${NAME_OF_BOARD}</arg>
<arg>${name}</arg>
<doc>Verifies that element ``locator`` contains exact the text ``expected``.</doc>
<msg timestamp="20220707 04:37:31.146" level="INFO">Verifying element 'xpath://h1[contains(@class, 'js-board-editing-target')]' contains exact text 'NewName'.</msg>
<status status="PASS" starttime="20220707 04:37:31.146" endtime="20220707 04:37:31.235"/>
</kw>
<status status="PASS" starttime="20220707 04:37:29.880" endtime="20220707 04:37:31.235"/>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Open Show Menu</arg>
<arg>Delete Current Board</arg>
<arg>Close Browser</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Open Show Menu" library="UpperHorizontalMenu">
<doc>Open the Show Menu in the right side of the board page where multiple options are available</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${SHOW_MENU_BUTTON}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220707 04:37:31.236" endtime="20220707 04:37:31.299"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${SHOW_MENU_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220707 04:37:31.300" level="INFO">Clicking element 'xpath://div[contains(@class, 'board-header')]//a[contains(., 'Show menu')]'.</msg>
<status status="PASS" starttime="20220707 04:37:31.300" endtime="20220707 04:37:31.458"/>
</kw>
<status status="PASS" starttime="20220707 04:37:31.236" endtime="20220707 04:37:31.459"/>
</kw>
<kw name="Delete Current Board" library="ShownMenu">
<doc>Deletes the current board</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${MORE_BUTTON}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220707 04:37:31.459" endtime="20220707 04:37:31.547"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${MORE_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220707 04:37:31.548" level="INFO">Clicking element 'xpath://div[contains(@class, 'board-menu-content')]//a[contains(text(), 'More')]'.</msg>
<status status="PASS" starttime="20220707 04:37:31.547" endtime="20220707 04:37:31.736"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${CLOSE_BOARD_BUTTON}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220707 04:37:31.736" endtime="20220707 04:37:31.806"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${CLOSE_BOARD_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220707 04:37:31.806" level="INFO">Clicking element 'xpath://div[@class= 'board-menu-content-frame']//a[contains(text(), 'Close board')]'.</msg>
<status status="PASS" starttime="20220707 04:37:31.806" endtime="20220707 04:37:31.912"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${CLOSE_BUTTON}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220707 04:37:31.912" endtime="20220707 04:37:31.958"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${CLOSE_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220707 04:37:31.958" level="INFO">Clicking element 'xpath://div[@class= 'no-back']//input'.</msg>
<status status="PASS" starttime="20220707 04:37:31.958" endtime="20220707 04:37:32.073"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${PERMANENTLY_DELETE_BUTTON}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220707 04:37:32.074" endtime="20220707 04:37:32.379"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${PERMANENTLY_DELETE_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220707 04:37:32.380" level="INFO">Clicking element 'xpath://button[text()= 'Permanently delete board']'.</msg>
<status status="PASS" starttime="20220707 04:37:32.380" endtime="20220707 04:37:32.453"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${CONFIRM_DELETE_BUTTON}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220707 04:37:32.453" endtime="20220707 04:37:32.496"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${CONFIRM_DELETE_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220707 04:37:32.497" level="INFO">Clicking element 'xpath://section//button[text()= 'Delete']'.</msg>
<status status="PASS" starttime="20220707 04:37:32.497" endtime="20220707 04:37:32.556"/>
</kw>
<status status="PASS" starttime="20220707 04:37:31.459" endtime="20220707 04:37:32.556"/>
</kw>
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20220707 04:37:32.557" endtime="20220707 04:37:32.659"/>
</kw>
<status status="PASS" starttime="20220707 04:37:31.236" endtime="20220707 04:37:32.659"/>
</kw>
<doc>Verify that a board can be created through GUI</doc>
<tag>board.create</tag>
<tag>gui</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220707 04:37:21.827" endtime="20220707 04:37:32.659"/>
</test>
<test id="s1-s1-s1-t2" name="delete a board" line="26">
<kw name="Create A Board" library="Board">
<var>${BOARD}</var>
<arg>NewName</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220707 04:37:32.662" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220707 04:37:32.662" endtime="20220707 04:37:32.662"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220707 04:37:32.663" endtime="20220707 04:37:32.663"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 04:37:32.664" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220707 04:37:32.663" endtime="20220707 04:37:32.664"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220707 04:37:32.850" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 04:37:32.664" endtime="20220707 04:37:32.850"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 04:37:32.850" endtime="20220707 04:37:32.850"/>
</return>
<msg timestamp="20220707 04:37:32.850" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 04:37:32.662" endtime="20220707 04:37:32.850"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 04:37:32.850" endtime="20220707 04:37:32.851"/>
</return>
<msg timestamp="20220707 04:37:32.851" level="INFO">${BOARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 04:37:32.661" endtime="20220707 04:37:32.851"/>
</kw>
<kw name="Open Browser From Environment" library="CommonGUI">
<arg>${LOGIN_URL}</arg>
<doc>This keywords takes REMOTE and BROWSER variables
from the environment automatically and only needs a url</doc>
<if>
<branch type="IF" condition="${is_remote}">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${url}</arg>
<arg>${BROWSER}</arg>
<arg>remote_url=http://selenium-hub:4444</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20220707 04:37:32.852" level="INFO">Opening browser 'chrome' to base url 'https://trello.com/login' through remote server at 'http://selenium-hub:4444'.</msg>
<status status="PASS" starttime="20220707 04:37:32.852" endtime="20220707 04:37:33.845"/>
</kw>
<status status="PASS" starttime="20220707 04:37:32.851" endtime="20220707 04:37:33.845"/>
</branch>
<branch type="ELSE">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${url}</arg>
<arg>${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<status status="NOT RUN" starttime="20220707 04:37:33.845" endtime="20220707 04:37:33.846"/>
</kw>
<status status="NOT RUN" starttime="20220707 04:37:33.845" endtime="20220707 04:37:33.846"/>
</branch>
<status status="PASS" starttime="20220707 04:37:32.851" endtime="20220707 04:37:33.846"/>
</if>
<status status="PASS" starttime="20220707 04:37:32.851" endtime="20220707 04:37:33.846"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20220707 04:37:33.846" endtime="20220707 04:37:33.977"/>
</kw>
<kw name="Login To Trello" library="LoginPage">
<arg>${DEFAULT_EMAIL}</arg>
<arg>${DEFAULT_PASSWORD}</arg>
<doc>High-level keyword for logging in to Trello</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220707 04:37:33.993" level="INFO">${url} = https://trello.com/login</msg>
<status status="PASS" starttime="20220707 04:37:33.978" endtime="20220707 04:37:33.994"/>
</kw>
<if>
<branch type="IF" condition="'${url}' != '${LOGIN_URL}'">
<kw name="Go To" library="SeleniumLibrary">
<arg>${LOGIN_URL}</arg>
<doc>Navigates the current browser window to the provided ``url``.</doc>
<status status="NOT RUN" starttime="20220707 04:37:33.994" endtime="20220707 04:37:33.994"/>
</kw>
<status status="NOT RUN" starttime="20220707 04:37:33.994" endtime="20220707 04:37:33.994"/>
</branch>
<status status="PASS" starttime="20220707 04:37:33.994" endtime="20220707 04:37:33.994"/>
</if>
<kw name="Enter Username" library="LoginPage">
<arg>${username}</arg>
<doc>Take a username as argument and
enters it in the user_input</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${USER_INPUT}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220707 04:37:33.995" endtime="20220707 04:37:34.040"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${USER_INPUT}</arg>
<arg>${username}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220707 04:37:34.041" level="INFO">Typing text 'bootcamp04@mailinator.com' into text field 'css:input#user'.</msg>
<status status="PASS" starttime="20220707 04:37:34.041" endtime="20220707 04:37:34.158"/>
</kw>
<status status="PASS" starttime="20220707 04:37:33.994" endtime="20220707 04:37:34.158"/>
</kw>
<kw name="Wait Until Element Is Not Visible" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<doc>Waits until the element ``locator`` is not visible.</doc>
<status status="PASS" starttime="20220707 04:37:34.158" endtime="20220707 04:37:34.921"/>
</kw>
<kw name="Click Login Button" library="LoginPage">
<doc>Clicks Trello's login button if in Trello's
login page, else it clicks Atlassian's</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220707 04:37:34.931" level="INFO">${url} = https://trello.com/login</msg>
<status status="PASS" starttime="20220707 04:37:34.922" endtime="20220707 04:37:34.931"/>
</kw>
<if>
<branch type="IF" condition="'${url}' == '${LOGIN_URL}'">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220707 04:37:34.931" endtime="20220707 04:37:34.993"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220707 04:37:34.993" level="INFO">Clicking button 'css:input#login'.</msg>
<status status="PASS" starttime="20220707 04:37:34.993" endtime="20220707 04:37:35.748"/>
</kw>
<status status="PASS" starttime="20220707 04:37:34.931" endtime="20220707 04:37:35.748"/>
</branch>
<branch type="ELSE">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="NOT RUN" starttime="20220707 04:37:35.748" endtime="20220707 04:37:35.748"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<status status="NOT RUN" starttime="20220707 04:37:35.749" endtime="20220707 04:37:35.749"/>
</kw>
<status status="NOT RUN" starttime="20220707 04:37:35.748" endtime="20220707 04:37:35.749"/>
</branch>
<status status="PASS" starttime="20220707 04:37:34.931" endtime="20220707 04:37:35.749"/>
</if>
<status status="PASS" starttime="20220707 04:37:34.921" endtime="20220707 04:37:35.749"/>
</kw>
<kw name="Wait Until Location Is Atlassian's Login" library="LoginPage">
<doc>Waits for the page redirection when logging in.</doc>
<kw name="Wait Until Location Contains" library="SeleniumLibrary">
<arg>atlassian.com</arg>
<doc>Waits until the current URL contains ``expected``.</doc>
<status status="PASS" starttime="20220707 04:37:35.749" endtime="20220707 04:37:35.766"/>
</kw>
<status status="PASS" starttime="20220707 04:37:35.749" endtime="20220707 04:37:35.766"/>
</kw>
<kw name="Enter Password" library="LoginPage">
<arg>${password}</arg>
<doc>Take a password as argument and
enters it in the password_input</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<arg>timeout=${DEFAULT_TIMEOUT}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220707 04:37:35.767" endtime="20220707 04:37:36.056"/>
</kw>
<kw name="Input Password" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<arg>${password}</arg>
<doc>Types the given password into the text field identified by ``locator``.</doc>
<msg timestamp="20220707 04:37:36.057" level="INFO">Typing password into text field 'css:input#password'.</msg>
<msg timestamp="20220707 04:37:36.120" level="INFO">Temporally setting log level to: NONE</msg>
<msg timestamp="20220707 04:37:36.190" level="INFO">Log level changed from NONE to INFO.</msg>
<status status="PASS" starttime="20220707 04:37:36.056" endtime="20220707 04:37:36.190"/>
</kw>
<status status="PASS" starttime="20220707 04:37:35.766" endtime="20220707 04:37:36.191"/>
</kw>
<kw name="Click Login Button" library="LoginPage">
<doc>Clicks Trello's login button if in Trello's
login page, else it clicks Atlassian's</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220707 04:37:36.200" level="INFO">${url} = https://id.atlassian.com/login?application=trello&amp;continue=https%3A%2F%2Ftrello.com%2Fauth%2Fatlassian%2Fcallback%3FreturnUrl%3D%252F%26display%3D%26aaOnboarding%3D%26updateEmail%3D%26traceId%3D62c663...</msg>
<status status="PASS" starttime="20220707 04:37:36.191" endtime="20220707 04:37:36.200"/>
</kw>
<if>
<branch type="IF" condition="'${url}' == '${LOGIN_URL}'">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="NOT RUN" starttime="20220707 04:37:36.201" endtime="20220707 04:37:36.201"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<status status="NOT RUN" starttime="20220707 04:37:36.201" endtime="20220707 04:37:36.201"/>
</kw>
<status status="NOT RUN" starttime="20220707 04:37:36.201" endtime="20220707 04:37:36.201"/>
</branch>
<branch type="ELSE">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220707 04:37:36.201" endtime="20220707 04:37:36.259"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220707 04:37:36.259" level="INFO">Clicking button 'css:button#login-submit'.</msg>
<status status="PASS" starttime="20220707 04:37:36.259" endtime="20220707 04:37:36.383"/>
</kw>
<status status="PASS" starttime="20220707 04:37:36.201" endtime="20220707 04:37:36.383"/>
</branch>
<status status="PASS" starttime="20220707 04:37:36.200" endtime="20220707 04:37:36.383"/>
</if>
<status status="PASS" starttime="20220707 04:37:36.191" endtime="20220707 04:37:36.383"/>
</kw>
<status status="PASS" starttime="20220707 04:37:33.978" endtime="20220707 04:37:36.383"/>
</kw>
<kw name="Go To Board" library="BoardsPage">
<arg>NewName</arg>
<doc>Receives the board name and goes to that board's page.</doc>
<kw name="Format String" library="String">
<var>${locator}</var>
<arg>${BOARD_BUTTON}</arg>
<arg>${board_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 04:37:36.384" level="INFO">${locator} = //div[@title="NewName"]</msg>
<status status="PASS" starttime="20220707 04:37:36.384" endtime="20220707 04:37:36.384"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220707 04:37:36.384" endtime="20220707 04:37:39.205"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220707 04:37:39.205" level="INFO">Clicking element '//div[@title="NewName"]'.</msg>
<status status="PASS" starttime="20220707 04:37:39.205" endtime="20220707 04:37:39.601"/>
</kw>
<status status="PASS" starttime="20220707 04:37:36.383" endtime="20220707 04:37:39.602"/>
</kw>
<kw name="Verify Name of Board" library="UpperHorizontalMenu">
<arg>NewName</arg>
<doc>Verifies the name of a board</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${NAME_OF_BOARD}</arg>
<arg>${DEFAULT_TIMEOUT}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220707 04:37:39.602" endtime="20220707 04:37:40.098"/>
</kw>
<kw name="Element Text Should Be" library="SeleniumLibrary">
<arg>${NAME_OF_BOARD}</arg>
<arg>${name}</arg>
<doc>Verifies that element ``locator`` contains exact the text ``expected``.</doc>
<msg timestamp="20220707 04:37:40.098" level="INFO">Verifying element 'xpath://h1[contains(@class, 'js-board-editing-target')]' contains exact text 'NewName'.</msg>
<status status="PASS" starttime="20220707 04:37:40.098" endtime="20220707 04:37:40.216"/>
</kw>
<status status="PASS" starttime="20220707 04:37:39.602" endtime="20220707 04:37:40.216"/>
</kw>
<kw name="Open Show Menu" library="UpperHorizontalMenu">
<doc>Open the Show Menu in the right side of the board page where multiple options are available</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${SHOW_MENU_BUTTON}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220707 04:37:40.216" endtime="20220707 04:37:40.259"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${SHOW_MENU_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220707 04:37:40.259" level="INFO">Clicking element 'xpath://div[contains(@class, 'board-header')]//a[contains(., 'Show menu')]'.</msg>
<status status="PASS" starttime="20220707 04:37:40.259" endtime="20220707 04:37:40.325"/>
</kw>
<status status="PASS" starttime="20220707 04:37:40.216" endtime="20220707 04:37:40.325"/>
</kw>
<kw name="Delete Current Board" library="ShownMenu">
<doc>Deletes the current board</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${MORE_BUTTON}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220707 04:37:40.326" endtime="20220707 04:37:40.432"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${MORE_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220707 04:37:40.432" level="INFO">Clicking element 'xpath://div[contains(@class, 'board-menu-content')]//a[contains(text(), 'More')]'.</msg>
<status status="PASS" starttime="20220707 04:37:40.432" endtime="20220707 04:37:40.634"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${CLOSE_BOARD_BUTTON}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220707 04:37:40.634" endtime="20220707 04:37:40.915"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${CLOSE_BOARD_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220707 04:37:40.915" level="INFO">Clicking element 'xpath://div[@class= 'board-menu-content-frame']//a[contains(text(), 'Close board')]'.</msg>
<status status="PASS" starttime="20220707 04:37:40.915" endtime="20220707 04:37:40.995"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${CLOSE_BUTTON}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220707 04:37:40.995" endtime="20220707 04:37:41.036"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${CLOSE_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220707 04:37:41.036" level="INFO">Clicking element 'xpath://div[@class= 'no-back']//input'.</msg>
<status status="PASS" starttime="20220707 04:37:41.036" endtime="20220707 04:37:41.139"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${PERMANENTLY_DELETE_BUTTON}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220707 04:37:41.140" endtime="20220707 04:37:41.393"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${PERMANENTLY_DELETE_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220707 04:37:41.394" level="INFO">Clicking element 'xpath://button[text()= 'Permanently delete board']'.</msg>
<status status="PASS" starttime="20220707 04:37:41.393" endtime="20220707 04:37:41.472"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${CONFIRM_DELETE_BUTTON}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220707 04:37:41.472" endtime="20220707 04:37:41.518"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${CONFIRM_DELETE_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220707 04:37:41.518" level="INFO">Clicking element 'xpath://section//button[text()= 'Delete']'.</msg>
<status status="PASS" starttime="20220707 04:37:41.518" endtime="20220707 04:37:41.574"/>
</kw>
<status status="PASS" starttime="20220707 04:37:40.326" endtime="20220707 04:37:41.574"/>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Close Browser</arg>
<arg>AND</arg>
<arg>Run Keyword If Test Failed</arg>
<arg>Wait Until Keyword Succeeds</arg>
<arg>${DEFAULT_TIMEOUT}</arg>
<arg>${DEFAULT_INTERVAL}</arg>
<arg>Delete A Board</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20220707 04:37:41.575" endtime="20220707 04:37:41.673"/>
</kw>
<kw name="Run Keyword If Test Failed" library="BuiltIn">
<arg>Wait Until Keyword Succeeds</arg>
<arg>${DEFAULT_TIMEOUT}</arg>
<arg>${DEFAULT_INTERVAL}</arg>
<arg>Delete A Board</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Runs the given keyword with the given arguments, if the test failed.</doc>
<status status="PASS" starttime="20220707 04:37:41.674" endtime="20220707 04:37:41.674"/>
</kw>
<status status="PASS" starttime="20220707 04:37:41.575" endtime="20220707 04:37:41.674"/>
</kw>
<doc>Verify that a board can be deleted through GUI</doc>
<tag>board.delete</tag>
<tag>gui</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220707 04:37:32.660" endtime="20220707 04:37:41.674"/>
</test>
<test id="s1-s1-s1-t3" name="Update a board's description" line="41">
<kw name="Create A Board" library="Board">
<var>${BOARD}</var>
<arg>BoardNew</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220707 04:37:41.678" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220707 04:37:41.677" endtime="20220707 04:37:41.678"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220707 04:37:41.678" endtime="20220707 04:37:41.678"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 04:37:41.679" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220707 04:37:41.678" endtime="20220707 04:37:41.679"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220707 04:37:41.834" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 04:37:41.679" endtime="20220707 04:37:41.834"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 04:37:41.835" endtime="20220707 04:37:41.835"/>
</return>
<msg timestamp="20220707 04:37:41.835" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 04:37:41.677" endtime="20220707 04:37:41.835"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 04:37:41.835" endtime="20220707 04:37:41.835"/>
</return>
<msg timestamp="20220707 04:37:41.835" level="INFO">${BOARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 04:37:41.677" endtime="20220707 04:37:41.835"/>
</kw>
<kw name="Open Browser From Environment" library="CommonGUI">
<arg>${LOGIN_URL}</arg>
<doc>This keywords takes REMOTE and BROWSER variables
from the environment automatically and only needs a url</doc>
<if>
<branch type="IF" condition="${is_remote}">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${url}</arg>
<arg>${BROWSER}</arg>
<arg>remote_url=http://selenium-hub:4444</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20220707 04:37:41.836" level="INFO">Opening browser 'chrome' to base url 'https://trello.com/login' through remote server at 'http://selenium-hub:4444'.</msg>
<status status="PASS" starttime="20220707 04:37:41.836" endtime="20220707 04:37:42.808"/>
</kw>
<status status="PASS" starttime="20220707 04:37:41.836" endtime="20220707 04:37:42.808"/>
</branch>
<branch type="ELSE">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${url}</arg>
<arg>${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<status status="NOT RUN" starttime="20220707 04:37:42.808" endtime="20220707 04:37:42.808"/>
</kw>
<status status="NOT RUN" starttime="20220707 04:37:42.808" endtime="20220707 04:37:42.809"/>
</branch>
<status status="PASS" starttime="20220707 04:37:41.836" endtime="20220707 04:37:42.809"/>
</if>
<status status="PASS" starttime="20220707 04:37:41.835" endtime="20220707 04:37:42.809"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20220707 04:37:42.809" endtime="20220707 04:37:42.972"/>
</kw>
<kw name="Login To Trello" library="LoginPage">
<arg>${DEFAULT_EMAIL}</arg>
<arg>${DEFAULT_PASSWORD}</arg>
<doc>High-level keyword for logging in to Trello</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220707 04:37:42.983" level="INFO">${url} = https://trello.com/login</msg>
<status status="PASS" starttime="20220707 04:37:42.973" endtime="20220707 04:37:42.983"/>
</kw>
<if>
<branch type="IF" condition="'${url}' != '${LOGIN_URL}'">
<kw name="Go To" library="SeleniumLibrary">
<arg>${LOGIN_URL}</arg>
<doc>Navigates the current browser window to the provided ``url``.</doc>
<status status="NOT RUN" starttime="20220707 04:37:42.984" endtime="20220707 04:37:42.984"/>
</kw>
<status status="NOT RUN" starttime="20220707 04:37:42.983" endtime="20220707 04:37:42.984"/>
</branch>
<status status="PASS" starttime="20220707 04:37:42.983" endtime="20220707 04:37:42.984"/>
</if>
<kw name="Enter Username" library="LoginPage">
<arg>${username}</arg>
<doc>Take a username as argument and
enters it in the user_input</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${USER_INPUT}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220707 04:37:42.984" endtime="20220707 04:37:43.041"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${USER_INPUT}</arg>
<arg>${username}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220707 04:37:43.042" level="INFO">Typing text 'bootcamp04@mailinator.com' into text field 'css:input#user'.</msg>
<status status="PASS" starttime="20220707 04:37:43.042" endtime="20220707 04:37:43.180"/>
</kw>
<status status="PASS" starttime="20220707 04:37:42.984" endtime="20220707 04:37:43.180"/>
</kw>
<kw name="Wait Until Element Is Not Visible" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<doc>Waits until the element ``locator`` is not visible.</doc>
<status status="PASS" starttime="20220707 04:37:43.180" endtime="20220707 04:37:43.918"/>
</kw>
<kw name="Click Login Button" library="LoginPage">
<doc>Clicks Trello's login button if in Trello's
login page, else it clicks Atlassian's</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220707 04:37:43.930" level="INFO">${url} = https://trello.com/login</msg>
<status status="PASS" starttime="20220707 04:37:43.919" endtime="20220707 04:37:43.930"/>
</kw>
<if>
<branch type="IF" condition="'${url}' == '${LOGIN_URL}'">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220707 04:37:43.930" endtime="20220707 04:37:43.991"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220707 04:37:43.992" level="INFO">Clicking button 'css:input#login'.</msg>
<status status="PASS" starttime="20220707 04:37:43.991" endtime="20220707 04:37:44.765"/>
</kw>
<status status="PASS" starttime="20220707 04:37:43.930" endtime="20220707 04:37:44.765"/>
</branch>
<branch type="ELSE">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="NOT RUN" starttime="20220707 04:37:44.765" endtime="20220707 04:37:44.765"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<status status="NOT RUN" starttime="20220707 04:37:44.766" endtime="20220707 04:37:44.766"/>
</kw>
<status status="NOT RUN" starttime="20220707 04:37:44.765" endtime="20220707 04:37:44.766"/>
</branch>
<status status="PASS" starttime="20220707 04:37:43.930" endtime="20220707 04:37:44.766"/>
</if>
<status status="PASS" starttime="20220707 04:37:43.919" endtime="20220707 04:37:44.766"/>
</kw>
<kw name="Wait Until Location Is Atlassian's Login" library="LoginPage">
<doc>Waits for the page redirection when logging in.</doc>
<kw name="Wait Until Location Contains" library="SeleniumLibrary">
<arg>atlassian.com</arg>
<doc>Waits until the current URL contains ``expected``.</doc>
<status status="PASS" starttime="20220707 04:37:44.766" endtime="20220707 04:37:44.784"/>
</kw>
<status status="PASS" starttime="20220707 04:37:44.766" endtime="20220707 04:37:44.784"/>
</kw>
<kw name="Enter Password" library="LoginPage">
<arg>${password}</arg>
<doc>Take a password as argument and
enters it in the password_input</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<arg>timeout=${DEFAULT_TIMEOUT}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220707 04:37:44.785" endtime="20220707 04:37:44.839"/>
</kw>
<kw name="Input Password" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<arg>${password}</arg>
<doc>Types the given password into the text field identified by ``locator``.</doc>
<msg timestamp="20220707 04:37:44.840" level="INFO">Typing password into text field 'css:input#password'.</msg>
<msg timestamp="20220707 04:37:44.897" level="INFO">Temporally setting log level to: NONE</msg>
<msg timestamp="20220707 04:37:44.964" level="INFO">Log level changed from NONE to INFO.</msg>
<status status="PASS" starttime="20220707 04:37:44.839" endtime="20220707 04:37:44.964"/>
</kw>
<status status="PASS" starttime="20220707 04:37:44.784" endtime="20220707 04:37:44.964"/>
</kw>
<kw name="Click Login Button" library="LoginPage">
<doc>Clicks Trello's login button if in Trello's
login page, else it clicks Atlassian's</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220707 04:37:44.975" level="INFO">${url} = https://id.atlassian.com/login?application=trello&amp;continue=https%3A%2F%2Ftrello.com%2Fauth%2Fatlassian%2Fcallback%3FreturnUrl%3D%252F%26display%3D%26aaOnboarding%3D%26updateEmail%3D%26traceId%3D62c663...</msg>
<status status="PASS" starttime="20220707 04:37:44.965" endtime="20220707 04:37:44.975"/>
</kw>
<if>
<branch type="IF" condition="'${url}' == '${LOGIN_URL}'">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="NOT RUN" starttime="20220707 04:37:44.976" endtime="20220707 04:37:44.976"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<status status="NOT RUN" starttime="20220707 04:37:44.976" endtime="20220707 04:37:44.976"/>
</kw>
<status status="NOT RUN" starttime="20220707 04:37:44.975" endtime="20220707 04:37:44.976"/>
</branch>
<branch type="ELSE">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220707 04:37:44.976" endtime="20220707 04:37:45.051"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220707 04:37:45.051" level="INFO">Clicking button 'css:button#login-submit'.</msg>
<status status="PASS" starttime="20220707 04:37:45.051" endtime="20220707 04:37:45.141"/>
</kw>
<status status="PASS" starttime="20220707 04:37:44.976" endtime="20220707 04:37:45.141"/>
</branch>
<status status="PASS" starttime="20220707 04:37:44.975" endtime="20220707 04:37:45.141"/>
</if>
<status status="PASS" starttime="20220707 04:37:44.964" endtime="20220707 04:37:45.141"/>
</kw>
<status status="PASS" starttime="20220707 04:37:42.972" endtime="20220707 04:37:45.141"/>
</kw>
<kw name="Go To Board" library="BoardsPage">
<arg>BoardNew</arg>
<doc>Receives the board name and goes to that board's page.</doc>
<kw name="Format String" library="String">
<var>${locator}</var>
<arg>${BOARD_BUTTON}</arg>
<arg>${board_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 04:37:45.142" level="INFO">${locator} = //div[@title="BoardNew"]</msg>
<status status="PASS" starttime="20220707 04:37:45.142" endtime="20220707 04:37:45.142"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220707 04:37:45.143" endtime="20220707 04:37:47.928"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220707 04:37:47.929" level="INFO">Clicking element '//div[@title="BoardNew"]'.</msg>
<status status="PASS" starttime="20220707 04:37:47.928" endtime="20220707 04:37:48.333"/>
</kw>
<status status="PASS" starttime="20220707 04:37:45.142" endtime="20220707 04:37:48.333"/>
</kw>
<kw name="Verify Name of Board" library="UpperHorizontalMenu">
<arg>BoardNew</arg>
<doc>Verifies the name of a board</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${NAME_OF_BOARD}</arg>
<arg>${DEFAULT_TIMEOUT}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220707 04:37:48.334" endtime="20220707 04:37:48.874"/>
</kw>
<kw name="Element Text Should Be" library="SeleniumLibrary">
<arg>${NAME_OF_BOARD}</arg>
<arg>${name}</arg>
<doc>Verifies that element ``locator`` contains exact the text ``expected``.</doc>
<msg timestamp="20220707 04:37:48.875" level="INFO">Verifying element 'xpath://h1[contains(@class, 'js-board-editing-target')]' contains exact text 'BoardNew'.</msg>
<status status="PASS" starttime="20220707 04:37:48.875" endtime="20220707 04:37:48.925"/>
</kw>
<status status="PASS" starttime="20220707 04:37:48.333" endtime="20220707 04:37:48.925"/>
</kw>
<kw name="Open Show Menu" library="UpperHorizontalMenu">
<doc>Open the Show Menu in the right side of the board page where multiple options are available</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${SHOW_MENU_BUTTON}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220707 04:37:48.925" endtime="20220707 04:37:48.966"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${SHOW_MENU_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220707 04:37:48.967" level="INFO">Clicking element 'xpath://div[contains(@class, 'board-header')]//a[contains(., 'Show menu')]'.</msg>
<status status="PASS" starttime="20220707 04:37:48.966" endtime="20220707 04:37:49.048"/>
</kw>
<status status="PASS" starttime="20220707 04:37:48.925" endtime="20220707 04:37:49.049"/>
</kw>
<kw name="Update Description of Board" library="ShownMenu">
<arg>UpdatedDescription</arg>
<doc>Updates the description of a board</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ABOUT_THIS_BOARD}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220707 04:37:49.049" endtime="20220707 04:37:49.122"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${ABOUT_THIS_BOARD}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220707 04:37:49.123" level="INFO">Clicking element 'xpath://div[contains(@class, 'board-menu-content')]//a[contains(text(), 'About')]'.</msg>
<status status="PASS" starttime="20220707 04:37:49.122" endtime="20220707 04:37:49.414"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DESCRIPTION}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220707 04:37:49.414" endtime="20220707 04:37:49.476"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${DESCRIPTION}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220707 04:37:49.477" level="INFO">Clicking element 'xpath://a[contains(@class, 'description-fake-text-area')]'.</msg>
<status status="PASS" starttime="20220707 04:37:49.476" endtime="20220707 04:37:49.558"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${DESC_TEXT_AREA}</arg>
<arg>${desc}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220707 04:37:49.559" level="INFO">Typing text 'UpdatedDescription' into text field 'xpath://div[contains(@class, 'board-menu-content')]//textarea'.</msg>
<status status="PASS" starttime="20220707 04:37:49.559" endtime="20220707 04:37:49.697"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${SAVE_DESC_BUTTON}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220707 04:37:49.697" endtime="20220707 04:37:49.740"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${SAVE_DESC_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220707 04:37:49.741" level="INFO">Clicking element 'xpath://div[contains(@class, 'board-menu-content')]//input[@value="Save"]'.</msg>
<status status="PASS" starttime="20220707 04:37:49.740" endtime="20220707 04:37:49.836"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${GO_BACK_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220707 04:37:49.837" level="INFO">Clicking element 'xpath://a[@title="Go back."]'.</msg>
<status status="PASS" starttime="20220707 04:37:49.836" endtime="20220707 04:37:49.930"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${CLOSE_SHOW_MENU}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220707 04:37:49.930" level="INFO">Clicking element 'xpath://a[@title="Close the board menu."]'.</msg>
<status status="PASS" starttime="20220707 04:37:49.930" endtime="20220707 04:37:50.017"/>
</kw>
<status status="PASS" starttime="20220707 04:37:49.049" endtime="20220707 04:37:50.017"/>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Close Browser</arg>
<arg>AND</arg>
<arg>Wait Until Keyword Succeeds</arg>
<arg>${DEFAULT_TIMEOUT}</arg>
<arg>${DEFAULT_INTERVAL}</arg>
<arg>Delete A Board</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20220707 04:37:50.018" endtime="20220707 04:37:50.112"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${DEFAULT_TIMEOUT}</arg>
<arg>${DEFAULT_INTERVAL}</arg>
<arg>Delete A Board</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${BOARD.json()}[id]</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 04:37:50.116" level="INFO">${url} = boards/62c66315e63c2057e8909374</msg>
<status status="PASS" starttime="20220707 04:37:50.116" endtime="20220707 04:37:50.116"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220707 04:37:50.416" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 04:37:50.116" endtime="20220707 04:37:50.416"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 04:37:50.416" endtime="20220707 04:37:50.416"/>
</return>
<msg timestamp="20220707 04:37:50.417" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 04:37:50.115" endtime="20220707 04:37:50.417"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 04:37:50.417" endtime="20220707 04:37:50.417"/>
</return>
<status status="PASS" starttime="20220707 04:37:50.113" endtime="20220707 04:37:50.417"/>
</kw>
<status status="PASS" starttime="20220707 04:37:50.113" endtime="20220707 04:37:50.417"/>
</kw>
<status status="PASS" starttime="20220707 04:37:50.018" endtime="20220707 04:37:50.417"/>
</kw>
<doc>Verify that a board's description can be updated through GUI</doc>
<tag>board.update.description</tag>
<tag>gui</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220707 04:37:41.676" endtime="20220707 04:37:50.417"/>
</test>
<test id="s1-s1-s1-t4" name="Update a board's name" line="56">
<kw name="Create A Board" library="Board">
<var>${BOARD}</var>
<arg>NewBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220707 04:37:50.420" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220707 04:37:50.420" endtime="20220707 04:37:50.420"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220707 04:37:50.420" endtime="20220707 04:37:50.420"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 04:37:50.421" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220707 04:37:50.420" endtime="20220707 04:37:50.421"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220707 04:37:50.599" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 04:37:50.422" endtime="20220707 04:37:50.599"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 04:37:50.599" endtime="20220707 04:37:50.599"/>
</return>
<msg timestamp="20220707 04:37:50.600" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 04:37:50.419" endtime="20220707 04:37:50.600"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 04:37:50.600" endtime="20220707 04:37:50.600"/>
</return>
<msg timestamp="20220707 04:37:50.600" level="INFO">${BOARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 04:37:50.419" endtime="20220707 04:37:50.600"/>
</kw>
<kw name="Open Browser From Environment" library="CommonGUI">
<arg>${LOGIN_URL}</arg>
<doc>This keywords takes REMOTE and BROWSER variables
from the environment automatically and only needs a url</doc>
<if>
<branch type="IF" condition="${is_remote}">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${url}</arg>
<arg>${BROWSER}</arg>
<arg>remote_url=http://selenium-hub:4444</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20220707 04:37:50.601" level="INFO">Opening browser 'chrome' to base url 'https://trello.com/login' through remote server at 'http://selenium-hub:4444'.</msg>
<status status="PASS" starttime="20220707 04:37:50.601" endtime="20220707 04:37:51.630"/>
</kw>
<status status="PASS" starttime="20220707 04:37:50.601" endtime="20220707 04:37:51.631"/>
</branch>
<branch type="ELSE">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${url}</arg>
<arg>${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<status status="NOT RUN" starttime="20220707 04:37:51.631" endtime="20220707 04:37:51.631"/>
</kw>
<status status="NOT RUN" starttime="20220707 04:37:51.631" endtime="20220707 04:37:51.631"/>
</branch>
<status status="PASS" starttime="20220707 04:37:50.600" endtime="20220707 04:37:51.631"/>
</if>
<status status="PASS" starttime="20220707 04:37:50.600" endtime="20220707 04:37:51.631"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20220707 04:37:51.631" endtime="20220707 04:37:51.744"/>
</kw>
<kw name="Login To Trello" library="LoginPage">
<arg>${DEFAULT_EMAIL}</arg>
<arg>${DEFAULT_PASSWORD}</arg>
<doc>High-level keyword for logging in to Trello</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220707 04:37:51.774" level="INFO">${url} = https://trello.com/login</msg>
<status status="PASS" starttime="20220707 04:37:51.745" endtime="20220707 04:37:51.774"/>
</kw>
<if>
<branch type="IF" condition="'${url}' != '${LOGIN_URL}'">
<kw name="Go To" library="SeleniumLibrary">
<arg>${LOGIN_URL}</arg>
<doc>Navigates the current browser window to the provided ``url``.</doc>
<status status="NOT RUN" starttime="20220707 04:37:51.774" endtime="20220707 04:37:51.775"/>
</kw>
<status status="NOT RUN" starttime="20220707 04:37:51.774" endtime="20220707 04:37:51.775"/>
</branch>
<status status="PASS" starttime="20220707 04:37:51.774" endtime="20220707 04:37:51.775"/>
</if>
<kw name="Enter Username" library="LoginPage">
<arg>${username}</arg>
<doc>Take a username as argument and
enters it in the user_input</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${USER_INPUT}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220707 04:37:51.775" endtime="20220707 04:37:51.841"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${USER_INPUT}</arg>
<arg>${username}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220707 04:37:51.841" level="INFO">Typing text 'bootcamp04@mailinator.com' into text field 'css:input#user'.</msg>
<status status="PASS" starttime="20220707 04:37:51.841" endtime="20220707 04:37:51.945"/>
</kw>
<status status="PASS" starttime="20220707 04:37:51.775" endtime="20220707 04:37:51.946"/>
</kw>
<kw name="Wait Until Element Is Not Visible" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<doc>Waits until the element ``locator`` is not visible.</doc>
<status status="PASS" starttime="20220707 04:37:51.946" endtime="20220707 04:37:52.679"/>
</kw>
<kw name="Click Login Button" library="LoginPage">
<doc>Clicks Trello's login button if in Trello's
login page, else it clicks Atlassian's</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220707 04:37:52.689" level="INFO">${url} = https://trello.com/login</msg>
<status status="PASS" starttime="20220707 04:37:52.679" endtime="20220707 04:37:52.689"/>
</kw>
<if>
<branch type="IF" condition="'${url}' == '${LOGIN_URL}'">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220707 04:37:52.689" endtime="20220707 04:37:52.738"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220707 04:37:52.738" level="INFO">Clicking button 'css:input#login'.</msg>
<status status="PASS" starttime="20220707 04:37:52.738" endtime="20220707 04:37:53.528"/>
</kw>
<status status="PASS" starttime="20220707 04:37:52.689" endtime="20220707 04:37:53.528"/>
</branch>
<branch type="ELSE">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="NOT RUN" starttime="20220707 04:37:53.528" endtime="20220707 04:37:53.529"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<status status="NOT RUN" starttime="20220707 04:37:53.529" endtime="20220707 04:37:53.529"/>
</kw>
<status status="NOT RUN" starttime="20220707 04:37:53.528" endtime="20220707 04:37:53.529"/>
</branch>
<status status="PASS" starttime="20220707 04:37:52.689" endtime="20220707 04:37:53.529"/>
</if>
<status status="PASS" starttime="20220707 04:37:52.679" endtime="20220707 04:37:53.529"/>
</kw>
<kw name="Wait Until Location Is Atlassian's Login" library="LoginPage">
<doc>Waits for the page redirection when logging in.</doc>
<kw name="Wait Until Location Contains" library="SeleniumLibrary">
<arg>atlassian.com</arg>
<doc>Waits until the current URL contains ``expected``.</doc>
<status status="PASS" starttime="20220707 04:37:53.529" endtime="20220707 04:37:53.546"/>
</kw>
<status status="PASS" starttime="20220707 04:37:53.529" endtime="20220707 04:37:53.546"/>
</kw>
<kw name="Enter Password" library="LoginPage">
<arg>${password}</arg>
<doc>Take a password as argument and
enters it in the password_input</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<arg>timeout=${DEFAULT_TIMEOUT}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220707 04:37:53.547" endtime="20220707 04:37:53.592"/>
</kw>
<kw name="Input Password" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<arg>${password}</arg>
<doc>Types the given password into the text field identified by ``locator``.</doc>
<msg timestamp="20220707 04:37:53.593" level="INFO">Typing password into text field 'css:input#password'.</msg>
<msg timestamp="20220707 04:37:53.642" level="INFO">Temporally setting log level to: NONE</msg>
<msg timestamp="20220707 04:37:53.720" level="INFO">Log level changed from NONE to INFO.</msg>
<status status="PASS" starttime="20220707 04:37:53.593" endtime="20220707 04:37:53.720"/>
</kw>
<status status="PASS" starttime="20220707 04:37:53.547" endtime="20220707 04:37:53.720"/>
</kw>
<kw name="Click Login Button" library="LoginPage">
<doc>Clicks Trello's login button if in Trello's
login page, else it clicks Atlassian's</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220707 04:37:53.737" level="INFO">${url} = https://id.atlassian.com/login?application=trello&amp;continue=https%3A%2F%2Ftrello.com%2Fauth%2Fatlassian%2Fcallback%3FreturnUrl%3D%252F%26display%3D%26aaOnboarding%3D%26updateEmail%3D%26traceId%3D62c663...</msg>
<status status="PASS" starttime="20220707 04:37:53.721" endtime="20220707 04:37:53.737"/>
</kw>
<if>
<branch type="IF" condition="'${url}' == '${LOGIN_URL}'">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="NOT RUN" starttime="20220707 04:37:53.737" endtime="20220707 04:37:53.737"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<status status="NOT RUN" starttime="20220707 04:37:53.737" endtime="20220707 04:37:53.737"/>
</kw>
<status status="NOT RUN" starttime="20220707 04:37:53.737" endtime="20220707 04:37:53.737"/>
</branch>
<branch type="ELSE">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220707 04:37:53.738" endtime="20220707 04:37:53.802"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220707 04:37:53.803" level="INFO">Clicking button 'css:button#login-submit'.</msg>
<status status="PASS" starttime="20220707 04:37:53.803" endtime="20220707 04:37:53.883"/>
</kw>
<status status="PASS" starttime="20220707 04:37:53.738" endtime="20220707 04:37:53.883"/>
</branch>
<status status="PASS" starttime="20220707 04:37:53.737" endtime="20220707 04:37:53.883"/>
</if>
<status status="PASS" starttime="20220707 04:37:53.720" endtime="20220707 04:37:53.883"/>
</kw>
<status status="PASS" starttime="20220707 04:37:51.744" endtime="20220707 04:37:53.883"/>
</kw>
<kw name="Go To Board" library="BoardsPage">
<arg>NewBoard</arg>
<doc>Receives the board name and goes to that board's page.</doc>
<kw name="Format String" library="String">
<var>${locator}</var>
<arg>${BOARD_BUTTON}</arg>
<arg>${board_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 04:37:53.884" level="INFO">${locator} = //div[@title="NewBoard"]</msg>
<status status="PASS" starttime="20220707 04:37:53.884" endtime="20220707 04:37:53.884"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220707 04:37:53.885" endtime="20220707 04:37:56.723"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220707 04:37:56.724" level="INFO">Clicking element '//div[@title="NewBoard"]'.</msg>
<status status="PASS" starttime="20220707 04:37:56.723" endtime="20220707 04:37:57.118"/>
</kw>
<status status="PASS" starttime="20220707 04:37:53.884" endtime="20220707 04:37:57.118"/>
</kw>
<kw name="Verify Name of Board" library="UpperHorizontalMenu">
<arg>NewBoard</arg>
<doc>Verifies the name of a board</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${NAME_OF_BOARD}</arg>
<arg>${DEFAULT_TIMEOUT}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220707 04:37:57.119" endtime="20220707 04:37:57.575"/>
</kw>
<kw name="Element Text Should Be" library="SeleniumLibrary">
<arg>${NAME_OF_BOARD}</arg>
<arg>${name}</arg>
<doc>Verifies that element ``locator`` contains exact the text ``expected``.</doc>
<msg timestamp="20220707 04:37:57.575" level="INFO">Verifying element 'xpath://h1[contains(@class, 'js-board-editing-target')]' contains exact text 'NewBoard'.</msg>
<status status="PASS" starttime="20220707 04:37:57.575" endtime="20220707 04:37:57.671"/>
</kw>
<status status="PASS" starttime="20220707 04:37:57.118" endtime="20220707 04:37:57.671"/>
</kw>
<kw name="Update Name of Board" library="UpperHorizontalMenu">
<arg>UpdatedName</arg>
<doc>Updates the name of a board
it takes the Length of the boards's name in order to press the delete key
as many times as the name's length</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${NAME_OF_BOARD}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220707 04:37:57.672" endtime="20220707 04:37:57.709"/>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<var>${response}</var>
<arg>${NAME_OF_BOARD}</arg>
<doc>Returns the text value of the element identified by ``locator``.</doc>
<msg timestamp="20220707 04:37:57.749" level="INFO">${response} = NewBoard</msg>
<status status="PASS" starttime="20220707 04:37:57.709" endtime="20220707 04:37:57.749"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${names_lenght}</var>
<arg>${response}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20220707 04:37:57.749" level="INFO">Length is 8</msg>
<msg timestamp="20220707 04:37:57.749" level="INFO">${names_lenght} = 8</msg>
<status status="PASS" starttime="20220707 04:37:57.749" endtime="20220707 04:37:57.749"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${NAME_OF_BOARD}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220707 04:37:57.750" level="INFO">Clicking element 'xpath://h1[contains(@class, 'js-board-editing-target')]'.</msg>
<status status="PASS" starttime="20220707 04:37:57.750" endtime="20220707 04:37:57.826"/>
</kw>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>${NAME_OF_BOARD_INPUT}</arg>
<arg>\ue011</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20220707 04:37:57.827" level="INFO">Sending key(s) ('\ue011',) to xpath://input[contains(@class, 'board-name-input')] element.</msg>
<msg timestamp="20220707 04:37:58.126" level="INFO">Sending key </msg>
<status status="PASS" starttime="20220707 04:37:57.826" endtime="20220707 04:37:58.140"/>
</kw>
<kw name="Repeat Keyword" library="BuiltIn">
<arg>${names_lenght}</arg>
<arg>Press Keys</arg>
<arg>${NAME_OF_BOARD_INPUT}</arg>
<arg>\ue017</arg>
<doc>Executes the specified keyword multiple times.</doc>
<msg timestamp="20220707 04:37:58.141" level="INFO">Repeating keyword, round 1/8.</msg>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>${NAME_OF_BOARD_INPUT}</arg>
<arg>\ue017</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20220707 04:37:58.141" level="INFO">Sending key(s) ('\ue017',) to xpath://input[contains(@class, 'board-name-input')] element.</msg>
<msg timestamp="20220707 04:37:58.423" level="INFO">Sending key </msg>
<status status="PASS" starttime="20220707 04:37:58.141" endtime="20220707 04:37:58.437"/>
</kw>
<msg timestamp="20220707 04:37:58.437" level="INFO">Repeating keyword, round 2/8.</msg>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>${NAME_OF_BOARD_INPUT}</arg>
<arg>\ue017</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20220707 04:37:58.438" level="INFO">Sending key(s) ('\ue017',) to xpath://input[contains(@class, 'board-name-input')] element.</msg>
<msg timestamp="20220707 04:37:58.717" level="INFO">Sending key </msg>
<status status="PASS" starttime="20220707 04:37:58.437" endtime="20220707 04:37:58.742"/>
</kw>
<msg timestamp="20220707 04:37:58.742" level="INFO">Repeating keyword, round 3/8.</msg>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>${NAME_OF_BOARD_INPUT}</arg>
<arg>\ue017</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20220707 04:37:58.743" level="INFO">Sending key(s) ('\ue017',) to xpath://input[contains(@class, 'board-name-input')] element.</msg>
<msg timestamp="20220707 04:37:59.028" level="INFO">Sending key </msg>
<status status="PASS" starttime="20220707 04:37:58.742" endtime="20220707 04:37:59.049"/>
</kw>
<msg timestamp="20220707 04:37:59.049" level="INFO">Repeating keyword, round 4/8.</msg>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>${NAME_OF_BOARD_INPUT}</arg>
<arg>\ue017</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20220707 04:37:59.050" level="INFO">Sending key(s) ('\ue017',) to xpath://input[contains(@class, 'board-name-input')] element.</msg>
<msg timestamp="20220707 04:37:59.344" level="INFO">Sending key </msg>
<status status="PASS" starttime="20220707 04:37:59.049" endtime="20220707 04:37:59.356"/>
</kw>
<msg timestamp="20220707 04:37:59.356" level="INFO">Repeating keyword, round 5/8.</msg>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>${NAME_OF_BOARD_INPUT}</arg>
<arg>\ue017</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20220707 04:37:59.357" level="INFO">Sending key(s) ('\ue017',) to xpath://input[contains(@class, 'board-name-input')] element.</msg>
<msg timestamp="20220707 04:37:59.656" level="INFO">Sending key </msg>
<status status="PASS" starttime="20220707 04:37:59.357" endtime="20220707 04:37:59.670"/>
</kw>
<msg timestamp="20220707 04:37:59.670" level="INFO">Repeating keyword, round 6/8.</msg>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>${NAME_OF_BOARD_INPUT}</arg>
<arg>\ue017</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20220707 04:37:59.671" level="INFO">Sending key(s) ('\ue017',) to xpath://input[contains(@class, 'board-name-input')] element.</msg>
<msg timestamp="20220707 04:37:59.972" level="INFO">Sending key </msg>
<status status="PASS" starttime="20220707 04:37:59.671" endtime="20220707 04:37:59.990"/>
</kw>
<msg timestamp="20220707 04:37:59.990" level="INFO">Repeating keyword, round 7/8.</msg>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>${NAME_OF_BOARD_INPUT}</arg>
<arg>\ue017</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20220707 04:37:59.990" level="INFO">Sending key(s) ('\ue017',) to xpath://input[contains(@class, 'board-name-input')] element.</msg>
<msg timestamp="20220707 04:38:00.275" level="INFO">Sending key </msg>
<status status="PASS" starttime="20220707 04:37:59.990" endtime="20220707 04:38:00.304"/>
</kw>
<msg timestamp="20220707 04:38:00.304" level="INFO">Repeating keyword, round 8/8.</msg>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>${NAME_OF_BOARD_INPUT}</arg>
<arg>\ue017</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20220707 04:38:00.305" level="INFO">Sending key(s) ('\ue017',) to xpath://input[contains(@class, 'board-name-input')] element.</msg>
<msg timestamp="20220707 04:38:00.580" level="INFO">Sending key </msg>
<status status="PASS" starttime="20220707 04:38:00.304" endtime="20220707 04:38:00.592"/>
</kw>
<status status="PASS" starttime="20220707 04:37:58.141" endtime="20220707 04:38:00.592"/>
</kw>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>${NAME_OF_BOARD_INPUT}</arg>
<arg>${name}</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20220707 04:38:00.592" level="INFO">Sending key(s) ('UpdatedName',) to xpath://input[contains(@class, 'board-name-input')] element.</msg>
<msg timestamp="20220707 04:38:00.871" level="INFO">Sending keys UpdatedName</msg>
<status status="PASS" starttime="20220707 04:38:00.592" endtime="20220707 04:38:00.926"/>
</kw>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>${NAME_OF_BOARD_INPUT}</arg>
<arg>\ue007</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20220707 04:38:00.927" level="INFO">Sending key(s) ('\ue007',) to xpath://input[contains(@class, 'board-name-input')] element.</msg>
<msg timestamp="20220707 04:38:01.214" level="INFO">Sending key </msg>
<status status="PASS" starttime="20220707 04:38:00.926" endtime="20220707 04:38:01.348"/>
</kw>
<status status="PASS" starttime="20220707 04:37:57.672" endtime="20220707 04:38:01.348"/>
</kw>
<kw name="Verify Name of Board" library="UpperHorizontalMenu">
<arg>UpdatedName</arg>
<doc>Verifies the name of a board</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${NAME_OF_BOARD}</arg>
<arg>${DEFAULT_TIMEOUT}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220707 04:38:01.349" endtime="20220707 04:38:01.386"/>
</kw>
<kw name="Element Text Should Be" library="SeleniumLibrary">
<arg>${NAME_OF_BOARD}</arg>
<arg>${name}</arg>
<doc>Verifies that element ``locator`` contains exact the text ``expected``.</doc>
<msg timestamp="20220707 04:38:01.386" level="INFO">Verifying element 'xpath://h1[contains(@class, 'js-board-editing-target')]' contains exact text 'UpdatedName'.</msg>
<status status="PASS" starttime="20220707 04:38:01.386" endtime="20220707 04:38:01.426"/>
</kw>
<status status="PASS" starttime="20220707 04:38:01.348" endtime="20220707 04:38:01.426"/>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Close Browser</arg>
<arg>AND</arg>
<arg>Wait Until Keyword Succeeds</arg>
<arg>${DEFAULT_TIMEOUT}</arg>
<arg>${DEFAULT_INTERVAL}</arg>
<arg>Delete A Board</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20220707 04:38:01.427" endtime="20220707 04:38:01.523"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${DEFAULT_TIMEOUT}</arg>
<arg>${DEFAULT_INTERVAL}</arg>
<arg>Delete A Board</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${BOARD.json()}[id]</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 04:38:01.527" level="INFO">${url} = boards/62c6631e287cc048ea1cda00</msg>
<status status="PASS" starttime="20220707 04:38:01.527" endtime="20220707 04:38:01.527"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220707 04:38:01.850" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 04:38:01.527" endtime="20220707 04:38:01.851"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 04:38:01.851" endtime="20220707 04:38:01.851"/>
</return>
<msg timestamp="20220707 04:38:01.851" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 04:38:01.526" endtime="20220707 04:38:01.851"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 04:38:01.851" endtime="20220707 04:38:01.851"/>
</return>
<status status="PASS" starttime="20220707 04:38:01.524" endtime="20220707 04:38:01.851"/>
</kw>
<status status="PASS" starttime="20220707 04:38:01.524" endtime="20220707 04:38:01.851"/>
</kw>
<status status="PASS" starttime="20220707 04:38:01.427" endtime="20220707 04:38:01.851"/>
</kw>
<doc>Verify that a board's name can be updated through GUI</doc>
<tag>board.update.name</tag>
<tag>gui</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220707 04:37:50.418" endtime="20220707 04:38:01.851"/>
</test>
<kw name="Boards Suite Teardown" type="TEARDOWN">
<doc>Deletes the Trello sesion that had been created</doc>
<kw name="Delete All Sessions" library="request_own_library">
<status status="PASS" starttime="20220707 04:38:01.853" endtime="20220707 04:38:01.854"/>
</kw>
<status status="PASS" starttime="20220707 04:38:01.852" endtime="20220707 04:38:01.854"/>
</kw>
<doc>Board Tests</doc>
<status status="PASS" starttime="20220707 04:37:21.586" endtime="20220707 04:38:01.854"/>
</suite>
<suite id="s1-s1-s2" name="Trello Gui Cards" source="/trello/gui/trello_gui_cards.robot">
<kw name="Cards Suite Setup" type="SETUP">
<doc>Creates a new board through API, then Opens a Browser
Login to Trello, and Go to the created board's page.</doc>
<kw name="Create Trello Session" library="TrelloAPI">
<doc>Creates a Trello Session</doc>
<kw name="Create Session" library="request_own_library">
<arg>${API_BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<status status="PASS" starttime="20220707 04:38:01.870" endtime="20220707 04:38:01.870"/>
</kw>
<status status="PASS" starttime="20220707 04:38:01.870" endtime="20220707 04:38:01.870"/>
</kw>
<kw name="Create A Board" library="Board">
<var>${BOARD}</var>
<arg>CardTestBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220707 04:38:01.871" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220707 04:38:01.871" endtime="20220707 04:38:01.871"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220707 04:38:01.871" endtime="20220707 04:38:01.872"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 04:38:01.873" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220707 04:38:01.872" endtime="20220707 04:38:01.873"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220707 04:38:02.089" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 04:38:01.873" endtime="20220707 04:38:02.089"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 04:38:02.089" endtime="20220707 04:38:02.089"/>
</return>
<msg timestamp="20220707 04:38:02.089" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 04:38:01.871" endtime="20220707 04:38:02.089"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 04:38:02.089" endtime="20220707 04:38:02.089"/>
</return>
<msg timestamp="20220707 04:38:02.089" level="INFO">${BOARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 04:38:01.870" endtime="20220707 04:38:02.089"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_BOARD_ID}</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220707 04:38:02.091" level="INFO">${TEST_SUITE_BOARD_ID} = 62c66329c4a443358fe5885a</msg>
<status status="PASS" starttime="20220707 04:38:02.090" endtime="20220707 04:38:02.091"/>
</kw>
<kw name="Open Browser From Environment" library="CommonGUI">
<arg>${LOGIN_URL}</arg>
<doc>This keywords takes REMOTE and BROWSER variables
from the environment automatically and only needs a url</doc>
<if>
<branch type="IF" condition="${is_remote}">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${url}</arg>
<arg>${BROWSER}</arg>
<arg>remote_url=http://selenium-hub:4444</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20220707 04:38:02.092" level="INFO">Opening browser 'chrome' to base url 'https://trello.com/login' through remote server at 'http://selenium-hub:4444'.</msg>
<status status="PASS" starttime="20220707 04:38:02.092" endtime="20220707 04:38:02.979"/>
</kw>
<status status="PASS" starttime="20220707 04:38:02.092" endtime="20220707 04:38:02.979"/>
</branch>
<branch type="ELSE">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${url}</arg>
<arg>${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<status status="NOT RUN" starttime="20220707 04:38:02.979" endtime="20220707 04:38:02.979"/>
</kw>
<status status="NOT RUN" starttime="20220707 04:38:02.979" endtime="20220707 04:38:02.979"/>
</branch>
<status status="PASS" starttime="20220707 04:38:02.092" endtime="20220707 04:38:02.979"/>
</if>
<status status="PASS" starttime="20220707 04:38:02.091" endtime="20220707 04:38:02.979"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20220707 04:38:02.979" endtime="20220707 04:38:03.094"/>
</kw>
<kw name="Login To Trello" library="LoginPage">
<arg>${DEFAULT_EMAIL}</arg>
<arg>${DEFAULT_PASSWORD}</arg>
<doc>High-level keyword for logging in to Trello</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220707 04:38:03.103" level="INFO">${url} = https://trello.com/login</msg>
<status status="PASS" starttime="20220707 04:38:03.094" endtime="20220707 04:38:03.103"/>
</kw>
<if>
<branch type="IF" condition="'${url}' != '${LOGIN_URL}'">
<kw name="Go To" library="SeleniumLibrary">
<arg>${LOGIN_URL}</arg>
<doc>Navigates the current browser window to the provided ``url``.</doc>
<status status="NOT RUN" starttime="20220707 04:38:03.103" endtime="20220707 04:38:03.103"/>
</kw>
<status status="NOT RUN" starttime="20220707 04:38:03.103" endtime="20220707 04:38:03.103"/>
</branch>
<status status="PASS" starttime="20220707 04:38:03.103" endtime="20220707 04:38:03.103"/>
</if>
<kw name="Enter Username" library="LoginPage">
<arg>${username}</arg>
<doc>Take a username as argument and
enters it in the user_input</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${USER_INPUT}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220707 04:38:03.104" endtime="20220707 04:38:03.136"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${USER_INPUT}</arg>
<arg>${username}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220707 04:38:03.136" level="INFO">Typing text 'bootcamp04@mailinator.com' into text field 'css:input#user'.</msg>
<status status="PASS" starttime="20220707 04:38:03.136" endtime="20220707 04:38:03.262"/>
</kw>
<status status="PASS" starttime="20220707 04:38:03.104" endtime="20220707 04:38:03.262"/>
</kw>
<kw name="Wait Until Element Is Not Visible" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<doc>Waits until the element ``locator`` is not visible.</doc>
<status status="PASS" starttime="20220707 04:38:03.262" endtime="20220707 04:38:03.984"/>
</kw>
<kw name="Click Login Button" library="LoginPage">
<doc>Clicks Trello's login button if in Trello's
login page, else it clicks Atlassian's</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220707 04:38:03.997" level="INFO">${url} = https://trello.com/login</msg>
<status status="PASS" starttime="20220707 04:38:03.984" endtime="20220707 04:38:03.997"/>
</kw>
<if>
<branch type="IF" condition="'${url}' == '${LOGIN_URL}'">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220707 04:38:03.997" endtime="20220707 04:38:04.051"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220707 04:38:04.052" level="INFO">Clicking button 'css:input#login'.</msg>
<status status="PASS" starttime="20220707 04:38:04.052" endtime="20220707 04:38:04.868"/>
</kw>
<status status="PASS" starttime="20220707 04:38:03.997" endtime="20220707 04:38:04.868"/>
</branch>
<branch type="ELSE">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="NOT RUN" starttime="20220707 04:38:04.868" endtime="20220707 04:38:04.868"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<status status="NOT RUN" starttime="20220707 04:38:04.868" endtime="20220707 04:38:04.868"/>
</kw>
<status status="NOT RUN" starttime="20220707 04:38:04.868" endtime="20220707 04:38:04.868"/>
</branch>
<status status="PASS" starttime="20220707 04:38:03.997" endtime="20220707 04:38:04.868"/>
</if>
<status status="PASS" starttime="20220707 04:38:03.984" endtime="20220707 04:38:04.868"/>
</kw>
<kw name="Wait Until Location Is Atlassian's Login" library="LoginPage">
<doc>Waits for the page redirection when logging in.</doc>
<kw name="Wait Until Location Contains" library="SeleniumLibrary">
<arg>atlassian.com</arg>
<doc>Waits until the current URL contains ``expected``.</doc>
<status status="PASS" starttime="20220707 04:38:04.869" endtime="20220707 04:38:04.882"/>
</kw>
<status status="PASS" starttime="20220707 04:38:04.869" endtime="20220707 04:38:04.882"/>
</kw>
<kw name="Enter Password" library="LoginPage">
<arg>${password}</arg>
<doc>Take a password as argument and
enters it in the password_input</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<arg>timeout=${DEFAULT_TIMEOUT}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220707 04:38:04.883" endtime="20220707 04:38:04.939"/>
</kw>
<kw name="Input Password" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<arg>${password}</arg>
<doc>Types the given password into the text field identified by ``locator``.</doc>
<msg timestamp="20220707 04:38:04.940" level="INFO">Typing password into text field 'css:input#password'.</msg>
<msg timestamp="20220707 04:38:04.986" level="INFO">Temporally setting log level to: NONE</msg>
<msg timestamp="20220707 04:38:05.060" level="INFO">Log level changed from NONE to INFO.</msg>
<status status="PASS" starttime="20220707 04:38:04.940" endtime="20220707 04:38:05.060"/>
</kw>
<status status="PASS" starttime="20220707 04:38:04.883" endtime="20220707 04:38:05.060"/>
</kw>
<kw name="Click Login Button" library="LoginPage">
<doc>Clicks Trello's login button if in Trello's
login page, else it clicks Atlassian's</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220707 04:38:05.073" level="INFO">${url} = https://id.atlassian.com/login?application=trello&amp;continue=https%3A%2F%2Ftrello.com%2Fauth%2Fatlassian%2Fcallback%3FreturnUrl%3D%252F%26display%3D%26aaOnboarding%3D%26updateEmail%3D%26traceId%3D62c663...</msg>
<status status="PASS" starttime="20220707 04:38:05.060" endtime="20220707 04:38:05.073"/>
</kw>
<if>
<branch type="IF" condition="'${url}' == '${LOGIN_URL}'">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="NOT RUN" starttime="20220707 04:38:05.074" endtime="20220707 04:38:05.074"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<status status="NOT RUN" starttime="20220707 04:38:05.074" endtime="20220707 04:38:05.074"/>
</kw>
<status status="NOT RUN" starttime="20220707 04:38:05.074" endtime="20220707 04:38:05.074"/>
</branch>
<branch type="ELSE">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220707 04:38:05.074" endtime="20220707 04:38:05.141"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220707 04:38:05.141" level="INFO">Clicking button 'css:button#login-submit'.</msg>
<status status="PASS" starttime="20220707 04:38:05.141" endtime="20220707 04:38:05.230"/>
</kw>
<status status="PASS" starttime="20220707 04:38:05.074" endtime="20220707 04:38:05.230"/>
</branch>
<status status="PASS" starttime="20220707 04:38:05.073" endtime="20220707 04:38:05.230"/>
</if>
<status status="PASS" starttime="20220707 04:38:05.060" endtime="20220707 04:38:05.230"/>
</kw>
<status status="PASS" starttime="20220707 04:38:03.094" endtime="20220707 04:38:05.230"/>
</kw>
<kw name="Go To Board" library="BoardsPage">
<arg>CardTestBoard</arg>
<doc>Receives the board name and goes to that board's page.</doc>
<kw name="Format String" library="String">
<var>${locator}</var>
<arg>${BOARD_BUTTON}</arg>
<arg>${board_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 04:38:05.231" level="INFO">${locator} = //div[@title="CardTestBoard"]</msg>
<status status="PASS" starttime="20220707 04:38:05.231" endtime="20220707 04:38:05.231"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220707 04:38:05.231" endtime="20220707 04:38:08.080"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220707 04:38:08.080" level="INFO">Clicking element '//div[@title="CardTestBoard"]'.</msg>
<status status="PASS" starttime="20220707 04:38:08.080" endtime="20220707 04:38:08.461"/>
</kw>
<status status="PASS" starttime="20220707 04:38:05.230" endtime="20220707 04:38:08.462"/>
</kw>
<status status="PASS" starttime="20220707 04:38:01.869" endtime="20220707 04:38:08.462"/>
</kw>
<test id="s1-s1-s2-t1" name="Verify A Card Can Be Created" line="12">
<kw name="Set Test Variable" library="BuiltIn">
<arg>\${list}</arg>
<arg>To Do</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220707 04:38:08.463" level="INFO">${list} = To Do</msg>
<status status="PASS" starttime="20220707 04:38:08.463" endtime="20220707 04:38:08.463"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>\${card}</arg>
<arg>Test Card</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220707 04:38:08.463" level="INFO">${card} = Test Card</msg>
<status status="PASS" starttime="20220707 04:38:08.463" endtime="20220707 04:38:08.463"/>
</kw>
<kw name="Create Card In List" library="ListComponent">
<arg>${list}</arg>
<arg>${card}</arg>
<doc>Create a new card in the given list
Required args: list_name, card_name</doc>
<kw name="Format String" library="String">
<var>${add_card_locator}</var>
<arg>${LIST_ADD_CARD}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 04:38:08.464" level="INFO">${add_card_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Add a card')]</msg>
<status status="PASS" starttime="20220707 04:38:08.464" endtime="20220707 04:38:08.464"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${add_card_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220707 04:38:08.465" endtime="20220707 04:38:08.938"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${add_card_locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220707 04:38:08.939" level="INFO">Clicking element '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Add a card')]'.</msg>
<status status="PASS" starttime="20220707 04:38:08.939" endtime="20220707 04:38:09.047"/>
</kw>
<kw name="Format String" library="String">
<var>${textarea_locator}</var>
<arg>${CARD_TITLE_INPUT}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 04:38:09.048" level="INFO">${textarea_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//textarea[contains(@class, 'list-card-composer-textarea')]</msg>
<status status="PASS" starttime="20220707 04:38:09.048" endtime="20220707 04:38:09.048"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220707 04:38:09.048" endtime="20220707 04:38:09.093"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220707 04:38:09.093" level="INFO">Clicking element '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//textarea[contains(@class, 'list-card-composer-textarea')]'.</msg>
<status status="PASS" starttime="20220707 04:38:09.093" endtime="20220707 04:38:09.139"/>
</kw>
<kw name="Clear Element Text" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<doc>Clears the value of the text-input-element identified by ``locator``.</doc>
<status status="PASS" starttime="20220707 04:38:09.139" endtime="20220707 04:38:09.179"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<arg>${card_name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220707 04:38:09.180" level="INFO">Typing text 'Test Card' into text field '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//textarea[contains(@class, 'list-card-composer-textarea')]'.</msg>
<status status="PASS" starttime="20220707 04:38:09.179" endtime="20220707 04:38:09.365"/>
</kw>
<kw name="Format String" library="String">
<var>${confirm_locator}</var>
<arg>${CONFIRM_ADD_CARD}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 04:38:09.366" level="INFO">${confirm_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//input[@value='Add card']</msg>
<status status="PASS" starttime="20220707 04:38:09.365" endtime="20220707 04:38:09.366"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${confirm_locator}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220707 04:38:09.366" level="INFO">Clicking button '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//input[@value='Add card']'.</msg>
<status status="PASS" starttime="20220707 04:38:09.366" endtime="20220707 04:38:09.435"/>
</kw>
<status status="PASS" starttime="20220707 04:38:08.464" endtime="20220707 04:38:09.435"/>
</kw>
<kw name="Verify Card Exists" library="ListComponent">
<arg>${list}</arg>
<arg>${card}</arg>
<doc>Verify that the card with card_name exists in the given list.</doc>
<kw name="Format String" library="String">
<var>${card_name_locator}</var>
<arg>${LIST_CARD_NAME}</arg>
<arg>list_name=${list_name}</arg>
<arg>card_name=${card_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 04:38:09.436" level="INFO">${card_name_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Test Card')]</msg>
<status status="PASS" starttime="20220707 04:38:09.436" endtime="20220707 04:38:09.436"/>
</kw>
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<arg>${card_name_locator}</arg>
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<msg timestamp="20220707 04:38:09.500" level="INFO">Element '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Test Card')]' is displayed.</msg>
<status status="PASS" starttime="20220707 04:38:09.437" endtime="20220707 04:38:09.500"/>
</kw>
<status status="PASS" starttime="20220707 04:38:09.435" endtime="20220707 04:38:09.501"/>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Go To Card Modal</arg>
<arg>list_name=${list}</arg>
<arg>card_name=${card}</arg>
<arg>AND</arg>
<arg>Delete Current Card</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Go To Card Modal" library="ListComponent">
<arg>list_name=${list}</arg>
<arg>card_name=${card}</arg>
<doc>It opens the modal for card_name in list_name</doc>
<kw name="Format String" library="String">
<var>${card_name_locator}</var>
<arg>${LIST_CARD_NAME}</arg>
<arg>list_name=${list_name}</arg>
<arg>card_name=${card_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 04:38:09.502" level="INFO">${card_name_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Test Card')]</msg>
<status status="PASS" starttime="20220707 04:38:09.502" endtime="20220707 04:38:09.502"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${card_name_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220707 04:38:09.502" endtime="20220707 04:38:09.535"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${card_name_locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220707 04:38:09.535" level="INFO">Clicking element '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Test Card')]'.</msg>
<status status="PASS" starttime="20220707 04:38:09.535" endtime="20220707 04:38:09.638"/>
</kw>
<status status="PASS" starttime="20220707 04:38:09.501" endtime="20220707 04:38:09.638"/>
</kw>
<kw name="Delete Current Card" library="CardModal">
<doc>The Keyword will first check if the card is archived,
if it's not, it will archive it to be able to delete it.</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${not_archived}</var>
<arg>Element Should Not Be Visible</arg>
<arg>${IS_ARCHIVED_MSG}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Element Should Not Be Visible" library="SeleniumLibrary">
<arg>${IS_ARCHIVED_MSG}</arg>
<doc>Verifies that the element identified by ``locator`` is NOT visible.</doc>
<msg timestamp="20220707 04:38:09.672" level="INFO">Element '//p[text()='This card is archived.']' did not exist.</msg>
<status status="PASS" starttime="20220707 04:38:09.639" endtime="20220707 04:38:09.672"/>
</kw>
<msg timestamp="20220707 04:38:09.672" level="INFO">${not_archived} = True</msg>
<status status="PASS" starttime="20220707 04:38:09.639" endtime="20220707 04:38:09.672"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${not_archived}</arg>
<arg>Archive Current Card</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Archive Current Card" library="CardModal">
<doc>Archives the current card from inside the modal.</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ARCHIVE_BUTTON}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220707 04:38:09.673" endtime="20220707 04:38:10.010"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${ARCHIVE_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220707 04:38:10.010" level="INFO">Clicking element '//span[@title='Archive']'.</msg>
<status status="PASS" starttime="20220707 04:38:10.010" endtime="20220707 04:38:10.115"/>
</kw>
<status status="PASS" starttime="20220707 04:38:09.673" endtime="20220707 04:38:10.115"/>
</kw>
<status status="PASS" starttime="20220707 04:38:09.673" endtime="20220707 04:38:10.115"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${DEFAULT_TIMEOUT}</arg>
<arg>${DEFAULT_INTERVAL}</arg>
<arg>Click Element</arg>
<arg>${DELETE_BUTTON}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${DELETE_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220707 04:38:10.116" level="INFO">Clicking element '//a[@title='Delete']'.</msg>
<status status="PASS" starttime="20220707 04:38:10.116" endtime="20220707 04:38:10.192"/>
</kw>
<status status="PASS" starttime="20220707 04:38:10.116" endtime="20220707 04:38:10.192"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${DELETE_CONFIRM}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220707 04:38:10.193" level="INFO">Clicking element '//input[@value='Delete']'.</msg>
<status status="PASS" starttime="20220707 04:38:10.192" endtime="20220707 04:38:10.385"/>
</kw>
<status status="PASS" starttime="20220707 04:38:09.638" endtime="20220707 04:38:10.386"/>
</kw>
<status status="PASS" starttime="20220707 04:38:09.501" endtime="20220707 04:38:10.386"/>
</kw>
<doc>Verify that it is possible to create a new
card through Trello's GUI.</doc>
<tag>card.create</tag>
<tag>gui</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220707 04:38:08.462" endtime="20220707 04:38:10.386"/>
</test>
<test id="s1-s1-s2-t2" name="Modify A Card's Name From The Board Page" line="24">
<kw name="Set Test Variable" library="BuiltIn">
<arg>\${list}</arg>
<arg>To Do</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220707 04:38:10.389" level="INFO">${list} = To Do</msg>
<status status="PASS" starttime="20220707 04:38:10.388" endtime="20220707 04:38:10.389"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>\${card}</arg>
<arg>Test Card</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220707 04:38:10.389" level="INFO">${card} = Test Card</msg>
<status status="PASS" starttime="20220707 04:38:10.389" endtime="20220707 04:38:10.389"/>
</kw>
<kw name="Create Card In List" library="ListComponent">
<arg>${list}</arg>
<arg>${card}</arg>
<doc>Create a new card in the given list
Required args: list_name, card_name</doc>
<kw name="Format String" library="String">
<var>${add_card_locator}</var>
<arg>${LIST_ADD_CARD}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 04:38:10.390" level="INFO">${add_card_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Add a card')]</msg>
<status status="PASS" starttime="20220707 04:38:10.390" endtime="20220707 04:38:10.390"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${add_card_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220707 04:38:10.390" endtime="20220707 04:38:10.424"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${add_card_locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220707 04:38:10.425" level="INFO">Clicking element '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Add a card')]'.</msg>
<status status="PASS" starttime="20220707 04:38:10.424" endtime="20220707 04:38:10.478"/>
</kw>
<kw name="Format String" library="String">
<var>${textarea_locator}</var>
<arg>${CARD_TITLE_INPUT}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 04:38:10.479" level="INFO">${textarea_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//textarea[contains(@class, 'list-card-composer-textarea')]</msg>
<status status="PASS" starttime="20220707 04:38:10.478" endtime="20220707 04:38:10.479"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220707 04:38:10.479" endtime="20220707 04:38:10.559"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220707 04:38:10.560" level="INFO">Clicking element '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//textarea[contains(@class, 'list-card-composer-textarea')]'.</msg>
<status status="PASS" starttime="20220707 04:38:10.560" endtime="20220707 04:38:10.623"/>
</kw>
<kw name="Clear Element Text" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<doc>Clears the value of the text-input-element identified by ``locator``.</doc>
<status status="PASS" starttime="20220707 04:38:10.624" endtime="20220707 04:38:10.657"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<arg>${card_name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220707 04:38:10.657" level="INFO">Typing text 'Test Card' into text field '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//textarea[contains(@class, 'list-card-composer-textarea')]'.</msg>
<status status="PASS" starttime="20220707 04:38:10.657" endtime="20220707 04:38:10.759"/>
</kw>
<kw name="Format String" library="String">
<var>${confirm_locator}</var>
<arg>${CONFIRM_ADD_CARD}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 04:38:10.760" level="INFO">${confirm_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//input[@value='Add card']</msg>
<status status="PASS" starttime="20220707 04:38:10.759" endtime="20220707 04:38:10.760"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${confirm_locator}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220707 04:38:10.760" level="INFO">Clicking button '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//input[@value='Add card']'.</msg>
<status status="PASS" starttime="20220707 04:38:10.760" endtime="20220707 04:38:10.834"/>
</kw>
<status status="PASS" starttime="20220707 04:38:10.389" endtime="20220707 04:38:10.834"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>\${new_name}</arg>
<arg>New Name</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220707 04:38:10.835" level="INFO">${new_name} = New Name</msg>
<status status="PASS" starttime="20220707 04:38:10.834" endtime="20220707 04:38:10.835"/>
</kw>
<kw name="Edit Card Title Using Pencil Icon" library="ListComponent">
<arg>${list}</arg>
<arg>${card}</arg>
<arg>${new_name}</arg>
<doc>Modifies the title of the given card, using the pencil icon
required: list_name, card_name, new_title</doc>
<kw name="Format String" library="String">
<var>${card_element}</var>
<arg>${LIST_CARD_NAME}</arg>
<arg>list_name=${list_name}</arg>
<arg>card_name=${card_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 04:38:10.836" level="INFO">${card_element} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Test Card')]</msg>
<status status="PASS" starttime="20220707 04:38:10.835" endtime="20220707 04:38:10.836"/>
</kw>
<kw name="Format String" library="String">
<var>${pencil_locator}</var>
<arg>${PENCIL_ICON}</arg>
<arg>list_name=${list_name}</arg>
<arg>card_name=${card_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 04:38:10.836" level="INFO">${pencil_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Test Card')]//span[contains(@class, 'icon-edit')]</msg>
<status status="PASS" starttime="20220707 04:38:10.836" endtime="20220707 04:38:10.836"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${card_element}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220707 04:38:10.837" endtime="20220707 04:38:10.884"/>
</kw>
<kw name="Mouse Over" library="SeleniumLibrary">
<arg>${card_element}</arg>
<doc>Simulates hovering the mouse over the element ``locator``.</doc>
<msg timestamp="20220707 04:38:10.884" level="INFO">Simulating Mouse Over on element '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Test Card')]'.</msg>
<status status="PASS" starttime="20220707 04:38:10.884" endtime="20220707 04:38:11.174"/>
</kw>
<kw name="Wait Until Page Contains Element" library="SeleniumLibrary">
<arg>${pencil_locator}</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" starttime="20220707 04:38:11.174" endtime="20220707 04:38:11.188"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${pencil_locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220707 04:38:11.189" level="INFO">Clicking element '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Test Card')]//span[contains(@class, 'icon-edit')]'.</msg>
<status status="PASS" starttime="20220707 04:38:11.189" endtime="20220707 04:38:11.260"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${CARD_EDIT_TITLE}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220707 04:38:11.260" endtime="20220707 04:38:11.308"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${CARD_EDIT_TITLE}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220707 04:38:11.308" level="INFO">Clicking element 'css:textarea.list-card-edit-title'.</msg>
<status status="PASS" starttime="20220707 04:38:11.308" endtime="20220707 04:38:11.377"/>
</kw>
<kw name="Clear Element Text" library="SeleniumLibrary">
<arg>${CARD_EDIT_TITLE}</arg>
<doc>Clears the value of the text-input-element identified by ``locator``.</doc>
<status status="PASS" starttime="20220707 04:38:11.377" endtime="20220707 04:38:11.420"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${CARD_EDIT_TITLE}</arg>
<arg>${new_title}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220707 04:38:11.420" level="INFO">Typing text 'New Name' into text field 'css:textarea.list-card-edit-title'.</msg>
<status status="PASS" starttime="20220707 04:38:11.420" endtime="20220707 04:38:11.548"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${CARD_EDIT_TITLE_SAVE}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220707 04:38:11.549" level="INFO">Clicking element '//input[@value='Save']'.</msg>
<status status="PASS" starttime="20220707 04:38:11.548" endtime="20220707 04:38:11.618"/>
</kw>
<status status="PASS" starttime="20220707 04:38:10.835" endtime="20220707 04:38:11.618"/>
</kw>
<kw name="Verify Card Exists" library="ListComponent">
<arg>${list}</arg>
<arg>${new_name}</arg>
<doc>Verify that the card with card_name exists in the given list.</doc>
<kw name="Format String" library="String">
<var>${card_name_locator}</var>
<arg>${LIST_CARD_NAME}</arg>
<arg>list_name=${list_name}</arg>
<arg>card_name=${card_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 04:38:11.619" level="INFO">${card_name_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'New Name')]</msg>
<status status="PASS" starttime="20220707 04:38:11.618" endtime="20220707 04:38:11.619"/>
</kw>
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<arg>${card_name_locator}</arg>
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<msg timestamp="20220707 04:38:11.674" level="INFO">Element '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'New Name')]' is displayed.</msg>
<status status="PASS" starttime="20220707 04:38:11.619" endtime="20220707 04:38:11.674"/>
</kw>
<status status="PASS" starttime="20220707 04:38:11.618" endtime="20220707 04:38:11.674"/>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Go To Card Modal</arg>
<arg>list_name=${list}</arg>
<arg>card_name=${new_name}</arg>
<arg>AND</arg>
<arg>Delete Current Card</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Go To Card Modal" library="ListComponent">
<arg>list_name=${list}</arg>
<arg>card_name=${new_name}</arg>
<doc>It opens the modal for card_name in list_name</doc>
<kw name="Format String" library="String">
<var>${card_name_locator}</var>
<arg>${LIST_CARD_NAME}</arg>
<arg>list_name=${list_name}</arg>
<arg>card_name=${card_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 04:38:11.676" level="INFO">${card_name_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'New Name')]</msg>
<status status="PASS" starttime="20220707 04:38:11.675" endtime="20220707 04:38:11.676"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${card_name_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220707 04:38:11.676" endtime="20220707 04:38:11.725"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${card_name_locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220707 04:38:11.726" level="INFO">Clicking element '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'New Name')]'.</msg>
<status status="PASS" starttime="20220707 04:38:11.726" endtime="20220707 04:38:11.787"/>
</kw>
<status status="PASS" starttime="20220707 04:38:11.675" endtime="20220707 04:38:11.787"/>
</kw>
<kw name="Delete Current Card" library="CardModal">
<doc>The Keyword will first check if the card is archived,
if it's not, it will archive it to be able to delete it.</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${not_archived}</var>
<arg>Element Should Not Be Visible</arg>
<arg>${IS_ARCHIVED_MSG}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Element Should Not Be Visible" library="SeleniumLibrary">
<arg>${IS_ARCHIVED_MSG}</arg>
<doc>Verifies that the element identified by ``locator`` is NOT visible.</doc>
<msg timestamp="20220707 04:38:12.020" level="INFO">Element '//p[text()='This card is archived.']' did not exist.</msg>
<status status="PASS" starttime="20220707 04:38:11.788" endtime="20220707 04:38:12.020"/>
</kw>
<msg timestamp="20220707 04:38:12.020" level="INFO">${not_archived} = True</msg>
<status status="PASS" starttime="20220707 04:38:11.788" endtime="20220707 04:38:12.020"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${not_archived}</arg>
<arg>Archive Current Card</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Archive Current Card" library="CardModal">
<doc>Archives the current card from inside the modal.</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ARCHIVE_BUTTON}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220707 04:38:12.021" endtime="20220707 04:38:12.053"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${ARCHIVE_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220707 04:38:12.053" level="INFO">Clicking element '//span[@title='Archive']'.</msg>
<status status="PASS" starttime="20220707 04:38:12.053" endtime="20220707 04:38:12.142"/>
</kw>
<status status="PASS" starttime="20220707 04:38:12.021" endtime="20220707 04:38:12.142"/>
</kw>
<status status="PASS" starttime="20220707 04:38:12.020" endtime="20220707 04:38:12.142"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${DEFAULT_TIMEOUT}</arg>
<arg>${DEFAULT_INTERVAL}</arg>
<arg>Click Element</arg>
<arg>${DELETE_BUTTON}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${DELETE_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220707 04:38:12.143" level="INFO">Clicking element '//a[@title='Delete']'.</msg>
<status status="PASS" starttime="20220707 04:38:12.143" endtime="20220707 04:38:12.209"/>
</kw>
<status status="PASS" starttime="20220707 04:38:12.142" endtime="20220707 04:38:12.209"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${DELETE_CONFIRM}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220707 04:38:12.209" level="INFO">Clicking element '//input[@value='Delete']'.</msg>
<status status="PASS" starttime="20220707 04:38:12.209" endtime="20220707 04:38:12.395"/>
</kw>
<status status="PASS" starttime="20220707 04:38:11.787" endtime="20220707 04:38:12.395"/>
</kw>
<status status="PASS" starttime="20220707 04:38:11.674" endtime="20220707 04:38:12.395"/>
</kw>
<doc>Verify that it is possible to edit a card's Name
using the pencil icon in the board page.</doc>
<tag>card.title_board</tag>
<tag>gui</tag>
<tag>regression</tag>
<status status="PASS" starttime="20220707 04:38:10.387" endtime="20220707 04:38:12.395"/>
</test>
<test id="s1-s1-s2-t3" name="Leave A Comment On A Card" line="38">
<kw name="Set Test Variable" library="BuiltIn">
<arg>\${list}</arg>
<arg>To Do</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220707 04:38:12.397" level="INFO">${list} = To Do</msg>
<status status="PASS" starttime="20220707 04:38:12.397" endtime="20220707 04:38:12.397"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>\${card}</arg>
<arg>Test Card</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220707 04:38:12.397" level="INFO">${card} = Test Card</msg>
<status status="PASS" starttime="20220707 04:38:12.397" endtime="20220707 04:38:12.397"/>
</kw>
<kw name="Create Card In List" library="ListComponent">
<arg>${list}</arg>
<arg>${card}</arg>
<doc>Create a new card in the given list
Required args: list_name, card_name</doc>
<kw name="Format String" library="String">
<var>${add_card_locator}</var>
<arg>${LIST_ADD_CARD}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 04:38:12.398" level="INFO">${add_card_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Add a card')]</msg>
<status status="PASS" starttime="20220707 04:38:12.398" endtime="20220707 04:38:12.398"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${add_card_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220707 04:38:12.398" endtime="20220707 04:38:12.455"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${add_card_locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220707 04:38:12.456" level="INFO">Clicking element '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Add a card')]'.</msg>
<status status="PASS" starttime="20220707 04:38:12.455" endtime="20220707 04:38:12.523"/>
</kw>
<kw name="Format String" library="String">
<var>${textarea_locator}</var>
<arg>${CARD_TITLE_INPUT}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 04:38:12.523" level="INFO">${textarea_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//textarea[contains(@class, 'list-card-composer-textarea')]</msg>
<status status="PASS" starttime="20220707 04:38:12.523" endtime="20220707 04:38:12.523"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220707 04:38:12.523" endtime="20220707 04:38:12.662"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220707 04:38:12.662" level="INFO">Clicking element '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//textarea[contains(@class, 'list-card-composer-textarea')]'.</msg>
<status status="PASS" starttime="20220707 04:38:12.662" endtime="20220707 04:38:12.717"/>
</kw>
<kw name="Clear Element Text" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<doc>Clears the value of the text-input-element identified by ``locator``.</doc>
<status status="PASS" starttime="20220707 04:38:12.717" endtime="20220707 04:38:12.750"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<arg>${card_name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220707 04:38:12.751" level="INFO">Typing text 'Test Card' into text field '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//textarea[contains(@class, 'list-card-composer-textarea')]'.</msg>
<status status="PASS" starttime="20220707 04:38:12.750" endtime="20220707 04:38:12.834"/>
</kw>
<kw name="Format String" library="String">
<var>${confirm_locator}</var>
<arg>${CONFIRM_ADD_CARD}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 04:38:12.835" level="INFO">${confirm_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//input[@value='Add card']</msg>
<status status="PASS" starttime="20220707 04:38:12.834" endtime="20220707 04:38:12.835"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${confirm_locator}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220707 04:38:12.835" level="INFO">Clicking button '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//input[@value='Add card']'.</msg>
<status status="PASS" starttime="20220707 04:38:12.835" endtime="20220707 04:38:12.904"/>
</kw>
<status status="PASS" starttime="20220707 04:38:12.397" endtime="20220707 04:38:12.905"/>
</kw>
<kw name="Go To Card Modal" library="ListComponent">
<arg>${list}</arg>
<arg>${card}</arg>
<doc>It opens the modal for card_name in list_name</doc>
<kw name="Format String" library="String">
<var>${card_name_locator}</var>
<arg>${LIST_CARD_NAME}</arg>
<arg>list_name=${list_name}</arg>
<arg>card_name=${card_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 04:38:12.906" level="INFO">${card_name_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Test Card')]</msg>
<status status="PASS" starttime="20220707 04:38:12.905" endtime="20220707 04:38:12.906"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${card_name_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220707 04:38:12.906" endtime="20220707 04:38:12.952"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${card_name_locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220707 04:38:12.952" level="INFO">Clicking element '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Test Card')]'.</msg>
<status status="PASS" starttime="20220707 04:38:12.952" endtime="20220707 04:38:13.002"/>
</kw>
<status status="PASS" starttime="20220707 04:38:12.905" endtime="20220707 04:38:13.002"/>
</kw>
<kw name="Get Number Of Comments" library="CardModal">
<var>${comments_before}</var>
<doc>Return the number of comments present in the modal.</doc>
<kw name="Get Element Count" library="SeleniumLibrary">
<var>${n}</var>
<arg>${COMMENT_DIV}</arg>
<doc>Returns the number of elements matching ``locator``.</doc>
<msg timestamp="20220707 04:38:13.240" level="INFO">${n} = 0</msg>
<status status="PASS" starttime="20220707 04:38:13.003" endtime="20220707 04:38:13.240"/>
</kw>
<return>
<value>${n}</value>
<status status="PASS" starttime="20220707 04:38:13.240" endtime="20220707 04:38:13.240"/>
</return>
<msg timestamp="20220707 04:38:13.241" level="INFO">${comments_before} = 0</msg>
<status status="PASS" starttime="20220707 04:38:13.002" endtime="20220707 04:38:13.241"/>
</kw>
<kw name="Send A Comment" library="CardModal">
<arg>This is a test comment</arg>
<doc>Sends a comment under the "activity" section of the modal
required: comment</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${COMMENT_BOX_INPUT}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220707 04:38:13.241" endtime="20220707 04:38:13.280"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${COMMENT_BOX_INPUT}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220707 04:38:13.281" level="INFO">Clicking element '//div[@class='comment-box']/textarea'.</msg>
<status status="PASS" starttime="20220707 04:38:13.281" endtime="20220707 04:38:13.357"/>
</kw>
<kw name="Clear Element Text" library="SeleniumLibrary">
<arg>${COMMENT_BOX_INPUT}</arg>
<doc>Clears the value of the text-input-element identified by ``locator``.</doc>
<status status="PASS" starttime="20220707 04:38:13.357" endtime="20220707 04:38:13.402"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${COMMENT_BOX_INPUT}</arg>
<arg>${comment}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220707 04:38:13.402" level="INFO">Typing text 'This is a test comment' into text field '//div[@class='comment-box']/textarea'.</msg>
<status status="PASS" starttime="20220707 04:38:13.402" endtime="20220707 04:38:13.558"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${SAVE_COMMENT}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220707 04:38:13.559" level="INFO">Clicking element '//div[contains(@class, 'comment-controls')]//input[@value='Save']'.</msg>
<status status="PASS" starttime="20220707 04:38:13.558" endtime="20220707 04:38:13.709"/>
</kw>
<status status="PASS" starttime="20220707 04:38:13.241" endtime="20220707 04:38:13.709"/>
</kw>
<kw name="Get Number Of Comments" library="CardModal">
<var>${comments_after}</var>
<doc>Return the number of comments present in the modal.</doc>
<kw name="Get Element Count" library="SeleniumLibrary">
<var>${n}</var>
<arg>${COMMENT_DIV}</arg>
<doc>Returns the number of elements matching ``locator``.</doc>
<msg timestamp="20220707 04:38:13.735" level="INFO">${n} = 1</msg>
<status status="PASS" starttime="20220707 04:38:13.709" endtime="20220707 04:38:13.735"/>
</kw>
<return>
<value>${n}</value>
<status status="PASS" starttime="20220707 04:38:13.735" endtime="20220707 04:38:13.735"/>
</return>
<msg timestamp="20220707 04:38:13.736" level="INFO">${comments_after} = 1</msg>
<status status="PASS" starttime="20220707 04:38:13.709" endtime="20220707 04:38:13.736"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${comments_after} == ${comments_before}+${1}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220707 04:38:13.736" endtime="20220707 04:38:13.737"/>
</kw>
<kw name="Delete Current Card" library="CardModal" type="TEARDOWN">
<doc>The Keyword will first check if the card is archived,
if it's not, it will archive it to be able to delete it.</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${not_archived}</var>
<arg>Element Should Not Be Visible</arg>
<arg>${IS_ARCHIVED_MSG}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Element Should Not Be Visible" library="SeleniumLibrary">
<arg>${IS_ARCHIVED_MSG}</arg>
<doc>Verifies that the element identified by ``locator`` is NOT visible.</doc>
<msg timestamp="20220707 04:38:13.753" level="INFO">Element '//p[text()='This card is archived.']' did not exist.</msg>
<status status="PASS" starttime="20220707 04:38:13.738" endtime="20220707 04:38:13.753"/>
</kw>
<msg timestamp="20220707 04:38:13.753" level="INFO">${not_archived} = True</msg>
<status status="PASS" starttime="20220707 04:38:13.738" endtime="20220707 04:38:13.754"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${not_archived}</arg>
<arg>Archive Current Card</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Archive Current Card" library="CardModal">
<doc>Archives the current card from inside the modal.</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ARCHIVE_BUTTON}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220707 04:38:13.754" endtime="20220707 04:38:13.829"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${ARCHIVE_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220707 04:38:13.830" level="INFO">Clicking element '//span[@title='Archive']'.</msg>
<status status="PASS" starttime="20220707 04:38:13.830" endtime="20220707 04:38:13.890"/>
</kw>
<status status="PASS" starttime="20220707 04:38:13.754" endtime="20220707 04:38:13.890"/>
</kw>
<status status="PASS" starttime="20220707 04:38:13.754" endtime="20220707 04:38:13.890"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${DEFAULT_TIMEOUT}</arg>
<arg>${DEFAULT_INTERVAL}</arg>
<arg>Click Element</arg>
<arg>${DELETE_BUTTON}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${DELETE_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220707 04:38:13.891" level="INFO">Clicking element '//a[@title='Delete']'.</msg>
<status status="PASS" starttime="20220707 04:38:13.891" endtime="20220707 04:38:13.960"/>
</kw>
<status status="PASS" starttime="20220707 04:38:13.890" endtime="20220707 04:38:13.960"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${DELETE_CONFIRM}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220707 04:38:13.961" level="INFO">Clicking element '//input[@value='Delete']'.</msg>
<status status="PASS" starttime="20220707 04:38:13.961" endtime="20220707 04:38:14.140"/>
</kw>
<status status="PASS" starttime="20220707 04:38:13.737" endtime="20220707 04:38:14.141"/>
</kw>
<doc>Verify that it is possible to write a comment
on a card, through the card modal.</doc>
<tag>card.comment</tag>
<tag>gui</tag>
<tag>regression</tag>
<status status="PASS" starttime="20220707 04:38:12.396" endtime="20220707 04:38:14.141"/>
</test>
<test id="s1-s1-s2-t4" name="Verify A Card Can Be Deleted" line="52">
<kw name="Set Test Variable" library="BuiltIn">
<arg>\${list}</arg>
<arg>To Do</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220707 04:38:14.143" level="INFO">${list} = To Do</msg>
<status status="PASS" starttime="20220707 04:38:14.142" endtime="20220707 04:38:14.143"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>\${card}</arg>
<arg>Test Card</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220707 04:38:14.143" level="INFO">${card} = Test Card</msg>
<status status="PASS" starttime="20220707 04:38:14.143" endtime="20220707 04:38:14.143"/>
</kw>
<kw name="Get Number Of Cards In List" library="ListComponent">
<var>${cards_before}</var>
<arg>${list}</arg>
<doc>Return the number of cards present in a given list.
required: list_name</doc>
<kw name="Format String" library="String">
<var>${card_anchor_locator}</var>
<arg>${CARD_ANCHORS}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 04:38:14.144" level="INFO">${card_anchor_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(@class, 'list-card')]</msg>
<status status="PASS" starttime="20220707 04:38:14.144" endtime="20220707 04:38:14.144"/>
</kw>
<kw name="Get Element Count" library="SeleniumLibrary">
<var>${n}</var>
<arg>${card_anchor_locator}</arg>
<doc>Returns the number of elements matching ``locator``.</doc>
<msg timestamp="20220707 04:38:14.164" level="INFO">${n} = 0</msg>
<status status="PASS" starttime="20220707 04:38:14.145" endtime="20220707 04:38:14.164"/>
</kw>
<return>
<value>${n}</value>
<status status="PASS" starttime="20220707 04:38:14.164" endtime="20220707 04:38:14.164"/>
</return>
<msg timestamp="20220707 04:38:14.164" level="INFO">${cards_before} = 0</msg>
<status status="PASS" starttime="20220707 04:38:14.143" endtime="20220707 04:38:14.164"/>
</kw>
<kw name="Create Card In List" library="ListComponent">
<arg>${list}</arg>
<arg>${card}</arg>
<doc>Create a new card in the given list
Required args: list_name, card_name</doc>
<kw name="Format String" library="String">
<var>${add_card_locator}</var>
<arg>${LIST_ADD_CARD}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 04:38:14.165" level="INFO">${add_card_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Add a card')]</msg>
<status status="PASS" starttime="20220707 04:38:14.165" endtime="20220707 04:38:14.165"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${add_card_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220707 04:38:14.165" endtime="20220707 04:38:14.190"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${add_card_locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220707 04:38:14.191" level="INFO">Clicking element '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Add a card')]'.</msg>
<status status="PASS" starttime="20220707 04:38:14.190" endtime="20220707 04:38:14.269"/>
</kw>
<kw name="Format String" library="String">
<var>${textarea_locator}</var>
<arg>${CARD_TITLE_INPUT}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 04:38:14.270" level="INFO">${textarea_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//textarea[contains(@class, 'list-card-composer-textarea')]</msg>
<status status="PASS" starttime="20220707 04:38:14.270" endtime="20220707 04:38:14.270"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220707 04:38:14.270" endtime="20220707 04:38:14.301"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220707 04:38:14.301" level="INFO">Clicking element '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//textarea[contains(@class, 'list-card-composer-textarea')]'.</msg>
<status status="PASS" starttime="20220707 04:38:14.301" endtime="20220707 04:38:14.351"/>
</kw>
<kw name="Clear Element Text" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<doc>Clears the value of the text-input-element identified by ``locator``.</doc>
<status status="PASS" starttime="20220707 04:38:14.351" endtime="20220707 04:38:14.382"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<arg>${card_name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220707 04:38:14.382" level="INFO">Typing text 'Test Card' into text field '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//textarea[contains(@class, 'list-card-composer-textarea')]'.</msg>
<status status="PASS" starttime="20220707 04:38:14.382" endtime="20220707 04:38:14.472"/>
</kw>
<kw name="Format String" library="String">
<var>${confirm_locator}</var>
<arg>${CONFIRM_ADD_CARD}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 04:38:14.472" level="INFO">${confirm_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//input[@value='Add card']</msg>
<status status="PASS" starttime="20220707 04:38:14.472" endtime="20220707 04:38:14.472"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${confirm_locator}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220707 04:38:14.473" level="INFO">Clicking button '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//input[@value='Add card']'.</msg>
<status status="PASS" starttime="20220707 04:38:14.472" endtime="20220707 04:38:14.535"/>
</kw>
<status status="PASS" starttime="20220707 04:38:14.164" endtime="20220707 04:38:14.535"/>
</kw>
<kw name="Go To Card Modal" library="ListComponent">
<arg>${list}</arg>
<arg>${card}</arg>
<doc>It opens the modal for card_name in list_name</doc>
<kw name="Format String" library="String">
<var>${card_name_locator}</var>
<arg>${LIST_CARD_NAME}</arg>
<arg>list_name=${list_name}</arg>
<arg>card_name=${card_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 04:38:14.536" level="INFO">${card_name_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Test Card')]</msg>
<status status="PASS" starttime="20220707 04:38:14.536" endtime="20220707 04:38:14.536"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${card_name_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220707 04:38:14.537" endtime="20220707 04:38:14.584"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${card_name_locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220707 04:38:14.585" level="INFO">Clicking element '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Test Card')]'.</msg>
<status status="PASS" starttime="20220707 04:38:14.585" endtime="20220707 04:38:14.653"/>
</kw>
<status status="PASS" starttime="20220707 04:38:14.535" endtime="20220707 04:38:14.654"/>
</kw>
<kw name="Delete Current Card" library="CardModal">
<doc>The Keyword will first check if the card is archived,
if it's not, it will archive it to be able to delete it.</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${not_archived}</var>
<arg>Element Should Not Be Visible</arg>
<arg>${IS_ARCHIVED_MSG}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Element Should Not Be Visible" library="SeleniumLibrary">
<arg>${IS_ARCHIVED_MSG}</arg>
<doc>Verifies that the element identified by ``locator`` is NOT visible.</doc>
<msg timestamp="20220707 04:38:14.837" level="INFO">Element '//p[text()='This card is archived.']' did not exist.</msg>
<status status="PASS" starttime="20220707 04:38:14.654" endtime="20220707 04:38:14.837"/>
</kw>
<msg timestamp="20220707 04:38:14.837" level="INFO">${not_archived} = True</msg>
<status status="PASS" starttime="20220707 04:38:14.654" endtime="20220707 04:38:14.837"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${not_archived}</arg>
<arg>Archive Current Card</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Archive Current Card" library="CardModal">
<doc>Archives the current card from inside the modal.</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ARCHIVE_BUTTON}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220707 04:38:14.838" endtime="20220707 04:38:14.887"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${ARCHIVE_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220707 04:38:14.888" level="INFO">Clicking element '//span[@title='Archive']'.</msg>
<status status="PASS" starttime="20220707 04:38:14.888" endtime="20220707 04:38:14.973"/>
</kw>
<status status="PASS" starttime="20220707 04:38:14.838" endtime="20220707 04:38:14.973"/>
</kw>
<status status="PASS" starttime="20220707 04:38:14.837" endtime="20220707 04:38:14.973"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${DEFAULT_TIMEOUT}</arg>
<arg>${DEFAULT_INTERVAL}</arg>
<arg>Click Element</arg>
<arg>${DELETE_BUTTON}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${DELETE_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220707 04:38:14.974" level="INFO">Clicking element '//a[@title='Delete']'.</msg>
<status status="PASS" starttime="20220707 04:38:14.974" endtime="20220707 04:38:15.048"/>
</kw>
<status status="PASS" starttime="20220707 04:38:14.973" endtime="20220707 04:38:15.048"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${DELETE_CONFIRM}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220707 04:38:15.048" level="INFO">Clicking element '//input[@value='Delete']'.</msg>
<status status="PASS" starttime="20220707 04:38:15.048" endtime="20220707 04:38:15.200"/>
</kw>
<status status="PASS" starttime="20220707 04:38:14.654" endtime="20220707 04:38:15.200"/>
</kw>
<kw name="Get Number Of Cards In List" library="ListComponent">
<var>${cards_after}</var>
<arg>${list}</arg>
<doc>Return the number of cards present in a given list.
required: list_name</doc>
<kw name="Format String" library="String">
<var>${card_anchor_locator}</var>
<arg>${CARD_ANCHORS}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 04:38:15.201" level="INFO">${card_anchor_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(@class, 'list-card')]</msg>
<status status="PASS" starttime="20220707 04:38:15.201" endtime="20220707 04:38:15.201"/>
</kw>
<kw name="Get Element Count" library="SeleniumLibrary">
<var>${n}</var>
<arg>${card_anchor_locator}</arg>
<doc>Returns the number of elements matching ``locator``.</doc>
<msg timestamp="20220707 04:38:15.226" level="INFO">${n} = 0</msg>
<status status="PASS" starttime="20220707 04:38:15.201" endtime="20220707 04:38:15.226"/>
</kw>
<return>
<value>${n}</value>
<status status="PASS" starttime="20220707 04:38:15.226" endtime="20220707 04:38:15.226"/>
</return>
<msg timestamp="20220707 04:38:15.226" level="INFO">${cards_after} = 0</msg>
<status status="PASS" starttime="20220707 04:38:15.200" endtime="20220707 04:38:15.226"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${cards_before} == ${cards_after}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220707 04:38:15.226" endtime="20220707 04:38:15.227"/>
</kw>
<doc>Verify that it is possible to delete a card
from inside the card modal.</doc>
<tag>card.delete</tag>
<tag>gui</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220707 04:38:14.141" endtime="20220707 04:38:15.227"/>
</test>
<test id="s1-s1-s2-t5" name="Card Can Be Dragged To Another List" line="65">
<kw name="Set Test Variable" library="BuiltIn">
<arg>\${list}</arg>
<arg>To Do</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220707 04:38:15.229" level="INFO">${list} = To Do</msg>
<status status="PASS" starttime="20220707 04:38:15.228" endtime="20220707 04:38:15.229"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>\${card}</arg>
<arg>Test Card</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220707 04:38:15.229" level="INFO">${card} = Test Card</msg>
<status status="PASS" starttime="20220707 04:38:15.229" endtime="20220707 04:38:15.229"/>
</kw>
<kw name="Create Card In List" library="ListComponent">
<arg>${list}</arg>
<arg>${card}</arg>
<doc>Create a new card in the given list
Required args: list_name, card_name</doc>
<kw name="Format String" library="String">
<var>${add_card_locator}</var>
<arg>${LIST_ADD_CARD}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 04:38:15.230" level="INFO">${add_card_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Add a card')]</msg>
<status status="PASS" starttime="20220707 04:38:15.230" endtime="20220707 04:38:15.230"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${add_card_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220707 04:38:15.230" endtime="20220707 04:38:15.260"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${add_card_locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220707 04:38:15.260" level="INFO">Clicking element '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Add a card')]'.</msg>
<status status="PASS" starttime="20220707 04:38:15.260" endtime="20220707 04:38:15.314"/>
</kw>
<kw name="Format String" library="String">
<var>${textarea_locator}</var>
<arg>${CARD_TITLE_INPUT}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 04:38:15.314" level="INFO">${textarea_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//textarea[contains(@class, 'list-card-composer-textarea')]</msg>
<status status="PASS" starttime="20220707 04:38:15.314" endtime="20220707 04:38:15.315"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220707 04:38:15.315" endtime="20220707 04:38:15.357"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220707 04:38:15.357" level="INFO">Clicking element '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//textarea[contains(@class, 'list-card-composer-textarea')]'.</msg>
<status status="PASS" starttime="20220707 04:38:15.357" endtime="20220707 04:38:15.431"/>
</kw>
<kw name="Clear Element Text" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<doc>Clears the value of the text-input-element identified by ``locator``.</doc>
<status status="PASS" starttime="20220707 04:38:15.431" endtime="20220707 04:38:15.477"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<arg>${card_name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220707 04:38:15.478" level="INFO">Typing text 'Test Card' into text field '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//textarea[contains(@class, 'list-card-composer-textarea')]'.</msg>
<status status="PASS" starttime="20220707 04:38:15.478" endtime="20220707 04:38:15.667"/>
</kw>
<kw name="Format String" library="String">
<var>${confirm_locator}</var>
<arg>${CONFIRM_ADD_CARD}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 04:38:15.668" level="INFO">${confirm_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//input[@value='Add card']</msg>
<status status="PASS" starttime="20220707 04:38:15.667" endtime="20220707 04:38:15.668"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${confirm_locator}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220707 04:38:15.668" level="INFO">Clicking button '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//input[@value='Add card']'.</msg>
<status status="PASS" starttime="20220707 04:38:15.668" endtime="20220707 04:38:15.928"/>
</kw>
<status status="PASS" starttime="20220707 04:38:15.229" endtime="20220707 04:38:15.928"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>\${list2}</arg>
<arg>Doing</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220707 04:38:15.928" level="INFO">${list2} = Doing</msg>
<status status="PASS" starttime="20220707 04:38:15.928" endtime="20220707 04:38:15.928"/>
</kw>
<kw name="Drag Card From One List To Another" library="ListComponent">
<arg>${card}</arg>
<arg>${list}</arg>
<arg>${list2}</arg>
<doc>required: card_name, source_list_name, target_list_name</doc>
<kw name="Format String" library="String">
<var>${card_locator}</var>
<arg>${LIST_CARD_NAME}</arg>
<arg>list_name=${list1_name}</arg>
<arg>card_name=${card_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 04:38:15.930" level="INFO">${card_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Test Card')]</msg>
<status status="PASS" starttime="20220707 04:38:15.929" endtime="20220707 04:38:15.930"/>
</kw>
<kw name="Format String" library="String">
<var>${list2_locator}</var>
<arg>${LIST_DIV}</arg>
<arg>list_name=${list2_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 04:38:15.930" level="INFO">${list2_locator} = //h2[text()='Doing']//ancestor::div[contains(@class, 'list-content')]</msg>
<status status="PASS" starttime="20220707 04:38:15.930" endtime="20220707 04:38:15.930"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${card_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220707 04:38:15.931" endtime="20220707 04:38:16.003"/>
</kw>
<kw name="Drag And Drop" library="SeleniumLibrary">
<arg>${card_locator}</arg>
<arg>${list2_locator}</arg>
<doc>Drags the element identified by ``locator`` into the ``target`` element.</doc>
<status status="PASS" starttime="20220707 04:38:16.003" endtime="20220707 04:38:16.597"/>
</kw>
<status status="PASS" starttime="20220707 04:38:15.929" endtime="20220707 04:38:16.598"/>
</kw>
<kw name="Card Should Be In List" library="ListComponent">
<arg>${card}</arg>
<arg>${list2}</arg>
<doc>Check that a card is visible and in the given list
required: card_name, list_name</doc>
<kw name="Format String" library="String">
<var>${card_locator}</var>
<arg>${LIST_CARD_NAME}</arg>
<arg>list_name=${list_name}</arg>
<arg>card_name=${card_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 04:38:16.599" level="INFO">${card_locator} = //h2[text()='Doing']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Test Card')]</msg>
<status status="PASS" starttime="20220707 04:38:16.598" endtime="20220707 04:38:16.599"/>
</kw>
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<arg>${card_locator}</arg>
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<msg timestamp="20220707 04:38:16.648" level="INFO">Element '//h2[text()='Doing']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Test Card')]' is displayed.</msg>
<status status="PASS" starttime="20220707 04:38:16.599" endtime="20220707 04:38:16.648"/>
</kw>
<status status="PASS" starttime="20220707 04:38:16.598" endtime="20220707 04:38:16.648"/>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Go To Card Modal</arg>
<arg>${list2}</arg>
<arg>${card}</arg>
<arg>AND</arg>
<arg>Delete Current Card</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Go To Card Modal" library="ListComponent">
<arg>${list2}</arg>
<arg>${card}</arg>
<doc>It opens the modal for card_name in list_name</doc>
<kw name="Format String" library="String">
<var>${card_name_locator}</var>
<arg>${LIST_CARD_NAME}</arg>
<arg>list_name=${list_name}</arg>
<arg>card_name=${card_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 04:38:16.650" level="INFO">${card_name_locator} = //h2[text()='Doing']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Test Card')]</msg>
<status status="PASS" starttime="20220707 04:38:16.649" endtime="20220707 04:38:16.650"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${card_name_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220707 04:38:16.650" endtime="20220707 04:38:16.675"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${card_name_locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220707 04:38:16.675" level="INFO">Clicking element '//h2[text()='Doing']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Test Card')]'.</msg>
<status status="PASS" starttime="20220707 04:38:16.675" endtime="20220707 04:38:16.723"/>
</kw>
<status status="PASS" starttime="20220707 04:38:16.649" endtime="20220707 04:38:16.724"/>
</kw>
<kw name="Delete Current Card" library="CardModal">
<doc>The Keyword will first check if the card is archived,
if it's not, it will archive it to be able to delete it.</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${not_archived}</var>
<arg>Element Should Not Be Visible</arg>
<arg>${IS_ARCHIVED_MSG}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Element Should Not Be Visible" library="SeleniumLibrary">
<arg>${IS_ARCHIVED_MSG}</arg>
<doc>Verifies that the element identified by ``locator`` is NOT visible.</doc>
<msg timestamp="20220707 04:38:16.910" level="INFO">Element '//p[text()='This card is archived.']' did not exist.</msg>
<status status="PASS" starttime="20220707 04:38:16.724" endtime="20220707 04:38:16.910"/>
</kw>
<msg timestamp="20220707 04:38:16.910" level="INFO">${not_archived} = True</msg>
<status status="PASS" starttime="20220707 04:38:16.724" endtime="20220707 04:38:16.910"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${not_archived}</arg>
<arg>Archive Current Card</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Archive Current Card" library="CardModal">
<doc>Archives the current card from inside the modal.</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ARCHIVE_BUTTON}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220707 04:38:16.911" endtime="20220707 04:38:16.947"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${ARCHIVE_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220707 04:38:16.948" level="INFO">Clicking element '//span[@title='Archive']'.</msg>
<status status="PASS" starttime="20220707 04:38:16.947" endtime="20220707 04:38:17.034"/>
</kw>
<status status="PASS" starttime="20220707 04:38:16.911" endtime="20220707 04:38:17.034"/>
</kw>
<status status="PASS" starttime="20220707 04:38:16.910" endtime="20220707 04:38:17.034"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${DEFAULT_TIMEOUT}</arg>
<arg>${DEFAULT_INTERVAL}</arg>
<arg>Click Element</arg>
<arg>${DELETE_BUTTON}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${DELETE_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220707 04:38:17.035" level="INFO">Clicking element '//a[@title='Delete']'.</msg>
<status status="PASS" starttime="20220707 04:38:17.034" endtime="20220707 04:38:17.123"/>
</kw>
<status status="PASS" starttime="20220707 04:38:17.034" endtime="20220707 04:38:17.123"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${DELETE_CONFIRM}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220707 04:38:17.123" level="INFO">Clicking element '//input[@value='Delete']'.</msg>
<status status="PASS" starttime="20220707 04:38:17.123" endtime="20220707 04:38:17.306"/>
</kw>
<status status="PASS" starttime="20220707 04:38:16.724" endtime="20220707 04:38:17.306"/>
</kw>
<status status="PASS" starttime="20220707 04:38:16.648" endtime="20220707 04:38:17.306"/>
</kw>
<doc>Verify that a card can be dragged from one list to another.</doc>
<tag>card.drag</tag>
<tag>gui</tag>
<tag>regression</tag>
<status status="PASS" starttime="20220707 04:38:15.228" endtime="20220707 04:38:17.306"/>
</test>
<test id="s1-s1-s2-t6" name="Card Can Be Moved To Another Board" line="79">
<kw name="Create A Board" library="Board">
<var>${board2}</var>
<arg>CardTestBoard2</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220707 04:38:17.309" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220707 04:38:17.308" endtime="20220707 04:38:17.309"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220707 04:38:17.309" endtime="20220707 04:38:17.309"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 04:38:17.310" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220707 04:38:17.309" endtime="20220707 04:38:17.310"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220707 04:38:17.507" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 04:38:17.311" endtime="20220707 04:38:17.507"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 04:38:17.507" endtime="20220707 04:38:17.507"/>
</return>
<msg timestamp="20220707 04:38:17.507" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 04:38:17.308" endtime="20220707 04:38:17.507"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 04:38:17.507" endtime="20220707 04:38:17.507"/>
</return>
<msg timestamp="20220707 04:38:17.507" level="INFO">${board2} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 04:38:17.308" endtime="20220707 04:38:17.507"/>
</kw>
<kw name="Go Home" library="TrelloUpperMenu">
<doc>it goes to the gome page</doc>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${TRELLO_ICON}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220707 04:38:17.508" endtime="20220707 04:38:17.602"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${TRELLO_ICON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220707 04:38:17.602" level="INFO">Clicking element 'xpath://a[@aria-label='Back to home']'.</msg>
<status status="PASS" starttime="20220707 04:38:17.602" endtime="20220707 04:38:17.811"/>
</kw>
<status status="PASS" starttime="20220707 04:38:17.508" endtime="20220707 04:38:17.811"/>
</kw>
<kw name="Go To Board" library="BoardsPage">
<arg>CardTestBoard2</arg>
<doc>Receives the board name and goes to that board's page.</doc>
<kw name="Format String" library="String">
<var>${locator}</var>
<arg>${BOARD_BUTTON}</arg>
<arg>${board_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 04:38:17.812" level="INFO">${locator} = //div[@title="CardTestBoard2"]</msg>
<status status="PASS" starttime="20220707 04:38:17.812" endtime="20220707 04:38:17.812"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220707 04:38:17.812" endtime="20220707 04:38:18.144"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220707 04:38:18.145" level="INFO">Clicking element '//div[@title="CardTestBoard2"]'.</msg>
<status status="PASS" starttime="20220707 04:38:18.144" endtime="20220707 04:38:18.372"/>
</kw>
<status status="PASS" starttime="20220707 04:38:17.811" endtime="20220707 04:38:18.372"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>\${list}</arg>
<arg>To Do</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220707 04:38:18.372" level="INFO">${list} = To Do</msg>
<status status="PASS" starttime="20220707 04:38:18.372" endtime="20220707 04:38:18.372"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>\${card}</arg>
<arg>Test Card2</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220707 04:38:18.373" level="INFO">${card} = Test Card2</msg>
<status status="PASS" starttime="20220707 04:38:18.372" endtime="20220707 04:38:18.373"/>
</kw>
<kw name="Create Card In List" library="ListComponent">
<arg>${list}</arg>
<arg>${card}</arg>
<doc>Create a new card in the given list
Required args: list_name, card_name</doc>
<kw name="Format String" library="String">
<var>${add_card_locator}</var>
<arg>${LIST_ADD_CARD}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 04:38:18.374" level="INFO">${add_card_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Add a card')]</msg>
<status status="PASS" starttime="20220707 04:38:18.373" endtime="20220707 04:38:18.374"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${add_card_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220707 04:38:18.374" endtime="20220707 04:38:19.040"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${add_card_locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220707 04:38:19.041" level="INFO">Clicking element '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Add a card')]'.</msg>
<status status="PASS" starttime="20220707 04:38:19.040" endtime="20220707 04:38:19.127"/>
</kw>
<kw name="Format String" library="String">
<var>${textarea_locator}</var>
<arg>${CARD_TITLE_INPUT}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 04:38:19.128" level="INFO">${textarea_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//textarea[contains(@class, 'list-card-composer-textarea')]</msg>
<status status="PASS" starttime="20220707 04:38:19.128" endtime="20220707 04:38:19.128"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220707 04:38:19.128" endtime="20220707 04:38:19.166"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220707 04:38:19.167" level="INFO">Clicking element '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//textarea[contains(@class, 'list-card-composer-textarea')]'.</msg>
<status status="PASS" starttime="20220707 04:38:19.166" endtime="20220707 04:38:19.223"/>
</kw>
<kw name="Clear Element Text" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<doc>Clears the value of the text-input-element identified by ``locator``.</doc>
<status status="PASS" starttime="20220707 04:38:19.223" endtime="20220707 04:38:19.279"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<arg>${card_name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220707 04:38:19.280" level="INFO">Typing text 'Test Card2' into text field '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//textarea[contains(@class, 'list-card-composer-textarea')]'.</msg>
<status status="PASS" starttime="20220707 04:38:19.279" endtime="20220707 04:38:19.458"/>
</kw>
<kw name="Format String" library="String">
<var>${confirm_locator}</var>
<arg>${CONFIRM_ADD_CARD}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 04:38:19.459" level="INFO">${confirm_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//input[@value='Add card']</msg>
<status status="PASS" starttime="20220707 04:38:19.458" endtime="20220707 04:38:19.459"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${confirm_locator}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220707 04:38:19.459" level="INFO">Clicking button '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//input[@value='Add card']'.</msg>
<status status="PASS" starttime="20220707 04:38:19.459" endtime="20220707 04:38:19.618"/>
</kw>
<status status="PASS" starttime="20220707 04:38:18.373" endtime="20220707 04:38:19.618"/>
</kw>
<kw name="Go To Card Modal" library="ListComponent">
<arg>${list}</arg>
<arg>${card}</arg>
<doc>It opens the modal for card_name in list_name</doc>
<kw name="Format String" library="String">
<var>${card_name_locator}</var>
<arg>${LIST_CARD_NAME}</arg>
<arg>list_name=${list_name}</arg>
<arg>card_name=${card_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 04:38:19.619" level="INFO">${card_name_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Test Card2')]</msg>
<status status="PASS" starttime="20220707 04:38:19.619" endtime="20220707 04:38:19.619"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${card_name_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220707 04:38:19.619" endtime="20220707 04:38:19.677"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${card_name_locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220707 04:38:19.677" level="INFO">Clicking element '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Test Card2')]'.</msg>
<status status="PASS" starttime="20220707 04:38:19.677" endtime="20220707 04:38:19.725"/>
</kw>
<status status="PASS" starttime="20220707 04:38:19.618" endtime="20220707 04:38:19.725"/>
</kw>
<kw name="Move Card To Another Board" library="CardModal">
<arg>CardTestBoard</arg>
<doc>Moves the card using the "name of destination board"
required: name (name of the destination board)</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${MOVE_BUTTON}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220707 04:38:19.725" endtime="20220707 04:38:20.127"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${MOVE_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220707 04:38:20.127" level="INFO">Clicking element '//a[@title='Move']'.</msg>
<status status="PASS" starttime="20220707 04:38:20.127" endtime="20220707 04:38:20.219"/>
</kw>
<kw name="Select From List By Label" library="SeleniumLibrary">
<arg>${SELECT_DESTINATION}</arg>
<arg>${name_of_destination_board}</arg>
<doc>Selects options from selection list ``locator`` by ``labels``.</doc>
<msg timestamp="20220707 04:38:20.220" level="INFO">Selecting options from selection list '//select[@data-test-id='move-board-select']' by label CardTestBoard.</msg>
<status status="PASS" starttime="20220707 04:38:20.219" endtime="20220707 04:38:20.378"/>
</kw>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${ACCEPT_MOVE_BUTTON}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220707 04:38:20.378" endtime="20220707 04:38:20.489"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${ACCEPT_MOVE_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220707 04:38:20.490" level="INFO">Clicking element '//input[@value="Move"]'.</msg>
<status status="PASS" starttime="20220707 04:38:20.489" endtime="20220707 04:38:20.691"/>
</kw>
<kw name="Wait Until Element Is Not Visible" library="SeleniumLibrary">
<arg>${ARCHIVE_BUTTON}</arg>
<doc>Waits until the element ``locator`` is not visible.</doc>
<status status="PASS" starttime="20220707 04:38:20.691" endtime="20220707 04:38:20.742"/>
</kw>
<status status="PASS" starttime="20220707 04:38:19.725" endtime="20220707 04:38:20.742"/>
</kw>
<kw name="Get Number Of Cards In List" library="ListComponent">
<var>${Cards_On_list}</var>
<arg>To Do</arg>
<doc>Return the number of cards present in a given list.
required: list_name</doc>
<kw name="Format String" library="String">
<var>${card_anchor_locator}</var>
<arg>${CARD_ANCHORS}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 04:38:20.743" level="INFO">${card_anchor_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(@class, 'list-card')]</msg>
<status status="PASS" starttime="20220707 04:38:20.743" endtime="20220707 04:38:20.743"/>
</kw>
<kw name="Get Element Count" library="SeleniumLibrary">
<var>${n}</var>
<arg>${card_anchor_locator}</arg>
<doc>Returns the number of elements matching ``locator``.</doc>
<msg timestamp="20220707 04:38:20.753" level="INFO">${n} = 0</msg>
<status status="PASS" starttime="20220707 04:38:20.743" endtime="20220707 04:38:20.753"/>
</kw>
<return>
<value>${n}</value>
<status status="PASS" starttime="20220707 04:38:20.754" endtime="20220707 04:38:20.754"/>
</return>
<msg timestamp="20220707 04:38:20.754" level="INFO">${Cards_On_list} = 0</msg>
<status status="PASS" starttime="20220707 04:38:20.742" endtime="20220707 04:38:20.754"/>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<var>${0}</var>
<arg>0</arg>
<doc>Converts the given item to an integer number.</doc>
<msg timestamp="20220707 04:38:20.754" level="INFO">${0} = 0</msg>
<status status="PASS" starttime="20220707 04:38:20.754" endtime="20220707 04:38:20.754"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${Cards_On_list}</arg>
<arg>${0}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220707 04:38:20.754" endtime="20220707 04:38:20.755"/>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Close Browser</arg>
<arg>AND</arg>
<arg>Wait Until Keyword Succeeds</arg>
<arg>${DEFAULT_TIMEOUT}</arg>
<arg>${DEFAULT_INTERVAL}</arg>
<arg>Delete A Board</arg>
<arg>${board2.json()}[id]</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20220707 04:38:20.755" endtime="20220707 04:38:20.865"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${DEFAULT_TIMEOUT}</arg>
<arg>${DEFAULT_INTERVAL}</arg>
<arg>Delete A Board</arg>
<arg>${board2.json()}[id]</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${board2.json()}[id]</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 04:38:20.868" level="INFO">${url} = boards/62c66339ab65716f6535e491</msg>
<status status="PASS" starttime="20220707 04:38:20.868" endtime="20220707 04:38:20.868"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220707 04:38:21.182" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 04:38:20.868" endtime="20220707 04:38:21.182"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 04:38:21.182" endtime="20220707 04:38:21.182"/>
</return>
<msg timestamp="20220707 04:38:21.182" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 04:38:20.867" endtime="20220707 04:38:21.182"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 04:38:21.183" endtime="20220707 04:38:21.183"/>
</return>
<status status="PASS" starttime="20220707 04:38:20.865" endtime="20220707 04:38:21.183"/>
</kw>
<status status="PASS" starttime="20220707 04:38:20.865" endtime="20220707 04:38:21.183"/>
</kw>
<status status="PASS" starttime="20220707 04:38:20.755" endtime="20220707 04:38:21.183"/>
</kw>
<doc>Creates a new board through API, then goes to the
second board, creates a card and moves it to the other board</doc>
<tag>card.move</tag>
<tag>gui</tag>
<tag>regression</tag>
<status status="PASS" starttime="20220707 04:38:17.307" endtime="20220707 04:38:21.183"/>
</test>
<kw name="Cards Suite Teardown" type="TEARDOWN">
<doc>Deletes the created board through API and closes all browsers.</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${DEFAULT_TIMEOUT}</arg>
<arg>${DEFAULT_INTERVAL}</arg>
<arg>Delete A Board</arg>
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 04:38:21.186" level="INFO">${url} = boards/62c66329c4a443358fe5885a</msg>
<status status="PASS" starttime="20220707 04:38:21.185" endtime="20220707 04:38:21.186"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220707 04:38:21.530" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 04:38:21.186" endtime="20220707 04:38:21.530"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 04:38:21.530" endtime="20220707 04:38:21.530"/>
</return>
<msg timestamp="20220707 04:38:21.531" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 04:38:21.185" endtime="20220707 04:38:21.531"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 04:38:21.531" endtime="20220707 04:38:21.531"/>
</return>
<status status="PASS" starttime="20220707 04:38:21.184" endtime="20220707 04:38:21.531"/>
</kw>
<status status="PASS" starttime="20220707 04:38:21.184" endtime="20220707 04:38:21.531"/>
</kw>
<kw name="Delete All Sessions" library="request_own_library">
<status status="PASS" starttime="20220707 04:38:21.531" endtime="20220707 04:38:21.532"/>
</kw>
<kw name="Close All Browsers" library="SeleniumLibrary">
<doc>Closes all open browsers and resets the browser cache.</doc>
<status status="PASS" starttime="20220707 04:38:21.532" endtime="20220707 04:38:21.533"/>
</kw>
<status status="PASS" starttime="20220707 04:38:21.184" endtime="20220707 04:38:21.533"/>
</kw>
<doc>Test Cases for Cards Feature</doc>
<status status="PASS" starttime="20220707 04:38:01.856" endtime="20220707 04:38:21.533"/>
</suite>
<suite id="s1-s1-s3" name="Trello Gui Labels" source="/trello/gui/trello_gui_labels.robot">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Create Trello Session</arg>
<arg>Setup Board</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Create Trello Session" library="TrelloAPI">
<doc>Creates a Trello Session</doc>
<kw name="Create Session" library="request_own_library">
<arg>${API_BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<status status="PASS" starttime="20220707 04:38:21.558" endtime="20220707 04:38:21.559"/>
</kw>
<status status="PASS" starttime="20220707 04:38:21.558" endtime="20220707 04:38:21.559"/>
</kw>
<kw name="Setup Board">
<doc>Creates a board and saves its ID</doc>
<kw name="Create A Board" library="Board">
<var>${BOARD}</var>
<arg>TestBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220707 04:38:21.560" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220707 04:38:21.560" endtime="20220707 04:38:21.560"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220707 04:38:21.560" endtime="20220707 04:38:21.560"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 04:38:21.561" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220707 04:38:21.560" endtime="20220707 04:38:21.561"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220707 04:38:21.755" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 04:38:21.562" endtime="20220707 04:38:21.755"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 04:38:21.755" endtime="20220707 04:38:21.756"/>
</return>
<msg timestamp="20220707 04:38:21.756" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 04:38:21.559" endtime="20220707 04:38:21.756"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 04:38:21.756" endtime="20220707 04:38:21.756"/>
</return>
<msg timestamp="20220707 04:38:21.756" level="INFO">${BOARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 04:38:21.559" endtime="20220707 04:38:21.756"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_BOARD_ID}</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220707 04:38:21.758" level="INFO">${TEST_SUITE_BOARD_ID} = 62c6633dfe7e5b47ef0393c1</msg>
<status status="PASS" starttime="20220707 04:38:21.756" endtime="20220707 04:38:21.758"/>
</kw>
<status status="PASS" starttime="20220707 04:38:21.559" endtime="20220707 04:38:21.758"/>
</kw>
<status status="PASS" starttime="20220707 04:38:21.558" endtime="20220707 04:38:21.758"/>
</kw>
<test id="s1-s1-s3-t1" name="filter label" line="21">
<kw name="Open Browser From Environment" library="CommonGUI">
<arg>${LOGIN_URL}</arg>
<doc>This keywords takes REMOTE and BROWSER variables
from the environment automatically and only needs a url</doc>
<if>
<branch type="IF" condition="${is_remote}">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${url}</arg>
<arg>${BROWSER}</arg>
<arg>remote_url=http://selenium-hub:4444</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20220707 04:38:21.762" level="INFO">Opening browser 'chrome' to base url 'https://trello.com/login' through remote server at 'http://selenium-hub:4444'.</msg>
<status status="PASS" starttime="20220707 04:38:21.760" endtime="20220707 04:38:22.896"/>
</kw>
<status status="PASS" starttime="20220707 04:38:21.760" endtime="20220707 04:38:22.896"/>
</branch>
<branch type="ELSE">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${url}</arg>
<arg>${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<status status="NOT RUN" starttime="20220707 04:38:22.897" endtime="20220707 04:38:22.897"/>
</kw>
<status status="NOT RUN" starttime="20220707 04:38:22.896" endtime="20220707 04:38:22.897"/>
</branch>
<status status="PASS" starttime="20220707 04:38:21.759" endtime="20220707 04:38:22.897"/>
</if>
<status status="PASS" starttime="20220707 04:38:21.759" endtime="20220707 04:38:22.897"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20220707 04:38:22.897" endtime="20220707 04:38:23.023"/>
</kw>
<kw name="Login To Trello" library="LoginPage">
<arg>${DEFAULT_EMAIL}</arg>
<arg>${DEFAULT_PASSWORD}</arg>
<doc>High-level keyword for logging in to Trello</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220707 04:38:23.037" level="INFO">${url} = https://trello.com/login</msg>
<status status="PASS" starttime="20220707 04:38:23.024" endtime="20220707 04:38:23.037"/>
</kw>
<if>
<branch type="IF" condition="'${url}' != '${LOGIN_URL}'">
<kw name="Go To" library="SeleniumLibrary">
<arg>${LOGIN_URL}</arg>
<doc>Navigates the current browser window to the provided ``url``.</doc>
<status status="NOT RUN" starttime="20220707 04:38:23.038" endtime="20220707 04:38:23.038"/>
</kw>
<status status="NOT RUN" starttime="20220707 04:38:23.038" endtime="20220707 04:38:23.038"/>
</branch>
<status status="PASS" starttime="20220707 04:38:23.038" endtime="20220707 04:38:23.038"/>
</if>
<kw name="Enter Username" library="LoginPage">
<arg>${username}</arg>
<doc>Take a username as argument and
enters it in the user_input</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${USER_INPUT}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220707 04:38:23.039" endtime="20220707 04:38:23.078"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${USER_INPUT}</arg>
<arg>${username}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220707 04:38:23.078" level="INFO">Typing text 'bootcamp04@mailinator.com' into text field 'css:input#user'.</msg>
<status status="PASS" starttime="20220707 04:38:23.078" endtime="20220707 04:38:23.174"/>
</kw>
<status status="PASS" starttime="20220707 04:38:23.038" endtime="20220707 04:38:23.175"/>
</kw>
<kw name="Wait Until Element Is Not Visible" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<doc>Waits until the element ``locator`` is not visible.</doc>
<status status="PASS" starttime="20220707 04:38:23.175" endtime="20220707 04:38:23.884"/>
</kw>
<kw name="Click Login Button" library="LoginPage">
<doc>Clicks Trello's login button if in Trello's
login page, else it clicks Atlassian's</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220707 04:38:23.897" level="INFO">${url} = https://trello.com/login</msg>
<status status="PASS" starttime="20220707 04:38:23.885" endtime="20220707 04:38:23.897"/>
</kw>
<if>
<branch type="IF" condition="'${url}' == '${LOGIN_URL}'">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220707 04:38:23.898" endtime="20220707 04:38:23.989"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220707 04:38:23.990" level="INFO">Clicking button 'css:input#login'.</msg>
<status status="PASS" starttime="20220707 04:38:23.989" endtime="20220707 04:38:24.834"/>
</kw>
<status status="PASS" starttime="20220707 04:38:23.897" endtime="20220707 04:38:24.834"/>
</branch>
<branch type="ELSE">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="NOT RUN" starttime="20220707 04:38:24.834" endtime="20220707 04:38:24.834"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<status status="NOT RUN" starttime="20220707 04:38:24.834" endtime="20220707 04:38:24.834"/>
</kw>
<status status="NOT RUN" starttime="20220707 04:38:24.834" endtime="20220707 04:38:24.834"/>
</branch>
<status status="PASS" starttime="20220707 04:38:23.897" endtime="20220707 04:38:24.834"/>
</if>
<status status="PASS" starttime="20220707 04:38:23.885" endtime="20220707 04:38:24.834"/>
</kw>
<kw name="Wait Until Location Is Atlassian's Login" library="LoginPage">
<doc>Waits for the page redirection when logging in.</doc>
<kw name="Wait Until Location Contains" library="SeleniumLibrary">
<arg>atlassian.com</arg>
<doc>Waits until the current URL contains ``expected``.</doc>
<status status="PASS" starttime="20220707 04:38:24.835" endtime="20220707 04:38:24.860"/>
</kw>
<status status="PASS" starttime="20220707 04:38:24.835" endtime="20220707 04:38:24.860"/>
</kw>
<kw name="Enter Password" library="LoginPage">
<arg>${password}</arg>
<doc>Take a password as argument and
enters it in the password_input</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<arg>timeout=${DEFAULT_TIMEOUT}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220707 04:38:24.860" endtime="20220707 04:38:24.906"/>
</kw>
<kw name="Input Password" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<arg>${password}</arg>
<doc>Types the given password into the text field identified by ``locator``.</doc>
<msg timestamp="20220707 04:38:24.906" level="INFO">Typing password into text field 'css:input#password'.</msg>
<msg timestamp="20220707 04:38:24.952" level="INFO">Temporally setting log level to: NONE</msg>
<msg timestamp="20220707 04:38:25.009" level="INFO">Log level changed from NONE to INFO.</msg>
<status status="PASS" starttime="20220707 04:38:24.906" endtime="20220707 04:38:25.009"/>
</kw>
<status status="PASS" starttime="20220707 04:38:24.860" endtime="20220707 04:38:25.010"/>
</kw>
<kw name="Click Login Button" library="LoginPage">
<doc>Clicks Trello's login button if in Trello's
login page, else it clicks Atlassian's</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220707 04:38:25.026" level="INFO">${url} = https://id.atlassian.com/login?application=trello&amp;continue=https%3A%2F%2Ftrello.com%2Fauth%2Fatlassian%2Fcallback%3FreturnUrl%3D%252F%26display%3D%26aaOnboarding%3D%26updateEmail%3D%26traceId%3D62c663...</msg>
<status status="PASS" starttime="20220707 04:38:25.010" endtime="20220707 04:38:25.026"/>
</kw>
<if>
<branch type="IF" condition="'${url}' == '${LOGIN_URL}'">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="NOT RUN" starttime="20220707 04:38:25.026" endtime="20220707 04:38:25.026"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<status status="NOT RUN" starttime="20220707 04:38:25.026" endtime="20220707 04:38:25.026"/>
</kw>
<status status="NOT RUN" starttime="20220707 04:38:25.026" endtime="20220707 04:38:25.026"/>
</branch>
<branch type="ELSE">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220707 04:38:25.026" endtime="20220707 04:38:25.077"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220707 04:38:25.078" level="INFO">Clicking button 'css:button#login-submit'.</msg>
<status status="PASS" starttime="20220707 04:38:25.077" endtime="20220707 04:38:25.161"/>
</kw>
<status status="PASS" starttime="20220707 04:38:25.026" endtime="20220707 04:38:25.161"/>
</branch>
<status status="PASS" starttime="20220707 04:38:25.026" endtime="20220707 04:38:25.161"/>
</if>
<status status="PASS" starttime="20220707 04:38:25.010" endtime="20220707 04:38:25.161"/>
</kw>
<status status="PASS" starttime="20220707 04:38:23.024" endtime="20220707 04:38:25.161"/>
</kw>
<kw name="Go To Board" library="BoardsPage">
<arg>TestBoard</arg>
<doc>Receives the board name and goes to that board's page.</doc>
<kw name="Format String" library="String">
<var>${locator}</var>
<arg>${BOARD_BUTTON}</arg>
<arg>${board_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 04:38:25.162" level="INFO">${locator} = //div[@title="TestBoard"]</msg>
<status status="PASS" starttime="20220707 04:38:25.162" endtime="20220707 04:38:25.162"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220707 04:38:25.162" endtime="20220707 04:38:28.056"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220707 04:38:28.057" level="INFO">Clicking element '//div[@title="TestBoard"]'.</msg>
<status status="PASS" starttime="20220707 04:38:28.057" endtime="20220707 04:38:28.459"/>
</kw>
<status status="PASS" starttime="20220707 04:38:25.161" endtime="20220707 04:38:28.459"/>
</kw>
<kw name="Create Card In List" library="ListComponent">
<arg>To Do</arg>
<arg>card1</arg>
<doc>Create a new card in the given list
Required args: list_name, card_name</doc>
<kw name="Format String" library="String">
<var>${add_card_locator}</var>
<arg>${LIST_ADD_CARD}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 04:38:28.460" level="INFO">${add_card_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Add a card')]</msg>
<status status="PASS" starttime="20220707 04:38:28.459" endtime="20220707 04:38:28.460"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${add_card_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220707 04:38:28.460" endtime="20220707 04:38:28.879"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${add_card_locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220707 04:38:28.879" level="INFO">Clicking element '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Add a card')]'.</msg>
<status status="PASS" starttime="20220707 04:38:28.879" endtime="20220707 04:38:29.028"/>
</kw>
<kw name="Format String" library="String">
<var>${textarea_locator}</var>
<arg>${CARD_TITLE_INPUT}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 04:38:29.029" level="INFO">${textarea_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//textarea[contains(@class, 'list-card-composer-textarea')]</msg>
<status status="PASS" starttime="20220707 04:38:29.028" endtime="20220707 04:38:29.029"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220707 04:38:29.029" endtime="20220707 04:38:29.086"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220707 04:38:29.086" level="INFO">Clicking element '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//textarea[contains(@class, 'list-card-composer-textarea')]'.</msg>
<status status="PASS" starttime="20220707 04:38:29.086" endtime="20220707 04:38:29.131"/>
</kw>
<kw name="Clear Element Text" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<doc>Clears the value of the text-input-element identified by ``locator``.</doc>
<status status="PASS" starttime="20220707 04:38:29.131" endtime="20220707 04:38:29.169"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<arg>${card_name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220707 04:38:29.170" level="INFO">Typing text 'card1' into text field '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//textarea[contains(@class, 'list-card-composer-textarea')]'.</msg>
<status status="PASS" starttime="20220707 04:38:29.170" endtime="20220707 04:38:29.240"/>
</kw>
<kw name="Format String" library="String">
<var>${confirm_locator}</var>
<arg>${CONFIRM_ADD_CARD}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 04:38:29.240" level="INFO">${confirm_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//input[@value='Add card']</msg>
<status status="PASS" starttime="20220707 04:38:29.240" endtime="20220707 04:38:29.241"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${confirm_locator}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220707 04:38:29.241" level="INFO">Clicking button '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//input[@value='Add card']'.</msg>
<status status="PASS" starttime="20220707 04:38:29.241" endtime="20220707 04:38:29.399"/>
</kw>
<status status="PASS" starttime="20220707 04:38:28.459" endtime="20220707 04:38:29.399"/>
</kw>
<kw name="Click pencil menu" library="ListComponent">
<arg>To Do</arg>
<arg>card1</arg>
<doc>Adds a label to an specific card</doc>
<kw name="Format String" library="String">
<var>${card_element}</var>
<arg>${LIST_CARD_NAME}</arg>
<arg>list_name=${list_name}</arg>
<arg>card_name=${card_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 04:38:29.400" level="INFO">${card_element} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'card1')]</msg>
<status status="PASS" starttime="20220707 04:38:29.400" endtime="20220707 04:38:29.400"/>
</kw>
<kw name="Format String" library="String">
<var>${pencil_locator}</var>
<arg>${PENCIL_ICON}</arg>
<arg>list_name=${list_name}</arg>
<arg>card_name=${card_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 04:38:29.401" level="INFO">${pencil_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'card1')]//span[contains(@class, 'icon-edit')]</msg>
<status status="PASS" starttime="20220707 04:38:29.400" endtime="20220707 04:38:29.401"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${card_element}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220707 04:38:29.401" endtime="20220707 04:38:29.456"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20220707 04:38:34.456" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20220707 04:38:29.456" endtime="20220707 04:38:34.457"/>
</kw>
<kw name="Mouse Over" library="SeleniumLibrary">
<arg>${card_element}</arg>
<doc>Simulates hovering the mouse over the element ``locator``.</doc>
<msg timestamp="20220707 04:38:34.458" level="INFO">Simulating Mouse Over on element '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'card1')]'.</msg>
<status status="PASS" starttime="20220707 04:38:34.457" endtime="20220707 04:38:34.772"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20220707 04:38:39.772" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20220707 04:38:34.772" endtime="20220707 04:38:39.773"/>
</kw>
<kw name="Wait Until Page Contains Element" library="SeleniumLibrary">
<arg>${pencil_locator}</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" starttime="20220707 04:38:39.773" endtime="20220707 04:38:39.788"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${pencil_locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220707 04:38:39.788" level="INFO">Clicking element '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'card1')]//span[contains(@class, 'icon-edit')]'.</msg>
<status status="PASS" starttime="20220707 04:38:39.788" endtime="20220707 04:38:39.868"/>
</kw>
<status status="PASS" starttime="20220707 04:38:29.399" endtime="20220707 04:38:39.868"/>
</kw>
<kw name="Add Color Label In Card" library="CardModal">
<arg>yellow</arg>
<doc>add label of a given color to a list</doc>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${EDIT_LABEL}</arg>
<arg>timeout=${DEFAULT_TIMEOUT}s</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220707 04:38:39.869" endtime="20220707 04:38:39.919"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${EDIT_LABEL}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220707 04:38:39.920" level="INFO">Clicking element '//a[contains(@class,'js-edit-labels')]'.</msg>
<status status="PASS" starttime="20220707 04:38:39.920" endtime="20220707 04:38:39.992"/>
</kw>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LABEL_INPUT}</arg>
<arg>timeout=${DEFAULT_TIMEOUT}s</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220707 04:38:39.992" endtime="20220707 04:38:40.036"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${LABEL_INPUT}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220707 04:38:40.036" level="INFO">Clicking element '//input[contains(@class,"js-autofocus")]'.</msg>
<status status="PASS" starttime="20220707 04:38:40.036" endtime="20220707 04:38:40.092"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${LABEL_INPUT}</arg>
<arg>${color}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220707 04:38:40.092" level="INFO">Typing text 'yellow' into text field '//input[contains(@class,"js-autofocus")]'.</msg>
<status status="PASS" starttime="20220707 04:38:40.092" endtime="20220707 04:38:40.187"/>
</kw>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LABEL_INPUT}</arg>
<arg>timeout=${DEFAULT_TIMEOUT}s</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220707 04:38:40.188" endtime="20220707 04:38:40.235"/>
</kw>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>${LABEL_INPUT}</arg>
<arg>RETURN</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20220707 04:38:40.236" level="INFO">Sending key(s) ('RETURN',) to //input[contains(@class,"js-autofocus")] element.</msg>
<msg timestamp="20220707 04:38:40.511" level="INFO">Pressing special key RETURN to element.</msg>
<msg timestamp="20220707 04:38:40.511" level="INFO">Releasing special key RETURN.</msg>
<status status="PASS" starttime="20220707 04:38:40.235" endtime="20220707 04:38:40.542"/>
</kw>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>None</arg>
<arg>ESCAPE</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20220707 04:38:40.543" level="INFO">Sending key(s) ('ESCAPE',) to page.</msg>
<msg timestamp="20220707 04:38:40.543" level="INFO">Pressing special key ESCAPE to browser.</msg>
<msg timestamp="20220707 04:38:40.543" level="INFO">Releasing special key ESCAPE.</msg>
<status status="PASS" starttime="20220707 04:38:40.543" endtime="20220707 04:38:40.558"/>
</kw>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>None</arg>
<arg>ESCAPE</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20220707 04:38:40.559" level="INFO">Sending key(s) ('ESCAPE',) to page.</msg>
<msg timestamp="20220707 04:38:40.559" level="INFO">Pressing special key ESCAPE to browser.</msg>
<msg timestamp="20220707 04:38:40.559" level="INFO">Releasing special key ESCAPE.</msg>
<status status="PASS" starttime="20220707 04:38:40.559" endtime="20220707 04:38:40.583"/>
</kw>
<status status="PASS" starttime="20220707 04:38:39.869" endtime="20220707 04:38:40.583"/>
</kw>
<kw name="Create Card In List" library="ListComponent">
<arg>Doing</arg>
<arg>card2</arg>
<doc>Create a new card in the given list
Required args: list_name, card_name</doc>
<kw name="Format String" library="String">
<var>${add_card_locator}</var>
<arg>${LIST_ADD_CARD}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 04:38:40.584" level="INFO">${add_card_locator} = //h2[text()='Doing']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Add a card')]</msg>
<status status="PASS" starttime="20220707 04:38:40.583" endtime="20220707 04:38:40.584"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${add_card_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220707 04:38:40.584" endtime="20220707 04:38:40.613"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${add_card_locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220707 04:38:40.613" level="INFO">Clicking element '//h2[text()='Doing']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Add a card')]'.</msg>
<status status="PASS" starttime="20220707 04:38:40.613" endtime="20220707 04:38:40.697"/>
</kw>
<kw name="Format String" library="String">
<var>${textarea_locator}</var>
<arg>${CARD_TITLE_INPUT}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 04:38:40.698" level="INFO">${textarea_locator} = //h2[text()='Doing']//ancestor::div[contains(@class, 'list-content')]//textarea[contains(@class, 'list-card-composer-textarea')]</msg>
<status status="PASS" starttime="20220707 04:38:40.697" endtime="20220707 04:38:40.698"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220707 04:38:40.698" endtime="20220707 04:38:40.734"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220707 04:38:40.735" level="INFO">Clicking element '//h2[text()='Doing']//ancestor::div[contains(@class, 'list-content')]//textarea[contains(@class, 'list-card-composer-textarea')]'.</msg>
<status status="PASS" starttime="20220707 04:38:40.734" endtime="20220707 04:38:40.778"/>
</kw>
<kw name="Clear Element Text" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<doc>Clears the value of the text-input-element identified by ``locator``.</doc>
<status status="PASS" starttime="20220707 04:38:40.778" endtime="20220707 04:38:40.807"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<arg>${card_name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220707 04:38:40.808" level="INFO">Typing text 'card2' into text field '//h2[text()='Doing']//ancestor::div[contains(@class, 'list-content')]//textarea[contains(@class, 'list-card-composer-textarea')]'.</msg>
<status status="PASS" starttime="20220707 04:38:40.807" endtime="20220707 04:38:40.867"/>
</kw>
<kw name="Format String" library="String">
<var>${confirm_locator}</var>
<arg>${CONFIRM_ADD_CARD}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 04:38:40.868" level="INFO">${confirm_locator} = //h2[text()='Doing']//ancestor::div[contains(@class, 'list-content')]//input[@value='Add card']</msg>
<status status="PASS" starttime="20220707 04:38:40.867" endtime="20220707 04:38:40.868"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${confirm_locator}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220707 04:38:40.868" level="INFO">Clicking button '//h2[text()='Doing']//ancestor::div[contains(@class, 'list-content')]//input[@value='Add card']'.</msg>
<status status="PASS" starttime="20220707 04:38:40.868" endtime="20220707 04:38:40.940"/>
</kw>
<status status="PASS" starttime="20220707 04:38:40.583" endtime="20220707 04:38:40.940"/>
</kw>
<kw name="Create Card In List" library="ListComponent">
<arg>Done</arg>
<arg>card3</arg>
<doc>Create a new card in the given list
Required args: list_name, card_name</doc>
<kw name="Format String" library="String">
<var>${add_card_locator}</var>
<arg>${LIST_ADD_CARD}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 04:38:40.941" level="INFO">${add_card_locator} = //h2[text()='Done']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Add a card')]</msg>
<status status="PASS" starttime="20220707 04:38:40.940" endtime="20220707 04:38:40.941"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${add_card_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220707 04:38:40.941" endtime="20220707 04:38:40.989"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${add_card_locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220707 04:38:40.989" level="INFO">Clicking element '//h2[text()='Done']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Add a card')]'.</msg>
<status status="PASS" starttime="20220707 04:38:40.989" endtime="20220707 04:38:41.048"/>
</kw>
<kw name="Format String" library="String">
<var>${textarea_locator}</var>
<arg>${CARD_TITLE_INPUT}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 04:38:41.049" level="INFO">${textarea_locator} = //h2[text()='Done']//ancestor::div[contains(@class, 'list-content')]//textarea[contains(@class, 'list-card-composer-textarea')]</msg>
<status status="PASS" starttime="20220707 04:38:41.048" endtime="20220707 04:38:41.049"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220707 04:38:41.049" endtime="20220707 04:38:41.079"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220707 04:38:41.079" level="INFO">Clicking element '//h2[text()='Done']//ancestor::div[contains(@class, 'list-content')]//textarea[contains(@class, 'list-card-composer-textarea')]'.</msg>
<status status="PASS" starttime="20220707 04:38:41.079" endtime="20220707 04:38:41.149"/>
</kw>
<kw name="Clear Element Text" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<doc>Clears the value of the text-input-element identified by ``locator``.</doc>
<status status="PASS" starttime="20220707 04:38:41.149" endtime="20220707 04:38:41.188"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<arg>${card_name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220707 04:38:41.188" level="INFO">Typing text 'card3' into text field '//h2[text()='Done']//ancestor::div[contains(@class, 'list-content')]//textarea[contains(@class, 'list-card-composer-textarea')]'.</msg>
<status status="PASS" starttime="20220707 04:38:41.188" endtime="20220707 04:38:41.259"/>
</kw>
<kw name="Format String" library="String">
<var>${confirm_locator}</var>
<arg>${CONFIRM_ADD_CARD}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 04:38:41.259" level="INFO">${confirm_locator} = //h2[text()='Done']//ancestor::div[contains(@class, 'list-content')]//input[@value='Add card']</msg>
<status status="PASS" starttime="20220707 04:38:41.259" endtime="20220707 04:38:41.259"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${confirm_locator}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220707 04:38:41.260" level="INFO">Clicking button '//h2[text()='Done']//ancestor::div[contains(@class, 'list-content')]//input[@value='Add card']'.</msg>
<status status="PASS" starttime="20220707 04:38:41.259" endtime="20220707 04:38:41.326"/>
</kw>
<status status="PASS" starttime="20220707 04:38:40.940" endtime="20220707 04:38:41.326"/>
</kw>
<kw name="Enter To Filter Menu" library="TopBar">
<doc>accesing to the filter menu</doc>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${FILTER_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220707 04:38:41.327" level="INFO">Clicking element 'xpath://button[@data-test-id='filter-popover-button']'.</msg>
<status status="PASS" starttime="20220707 04:38:41.327" endtime="20220707 04:38:41.429"/>
</kw>
<status status="PASS" starttime="20220707 04:38:41.326" endtime="20220707 04:38:41.429"/>
</kw>
<kw name="Click no labels filter" library="FilterModal">
<doc>filters all cards with labes</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${NO_LABELS_FILTER}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220707 04:38:41.429" endtime="20220707 04:38:41.522"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${NO_LABELS_FILTER}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220707 04:38:41.523" level="INFO">Clicking element '//span[@aria-label='LabelIcon']'.</msg>
<status status="PASS" starttime="20220707 04:38:41.522" endtime="20220707 04:38:41.715"/>
</kw>
<status status="PASS" starttime="20220707 04:38:41.429" endtime="20220707 04:38:41.715"/>
</kw>
<kw name="Card Should Not Be In List" library="ListComponent">
<arg>card1</arg>
<arg>To Do</arg>
<doc>Check that a card is visible and in the given list
required: card_name, list_name</doc>
<kw name="Format String" library="String">
<var>${card_locator}</var>
<arg>${LIST_CARD_NAME}</arg>
<arg>list_name=${list_name}</arg>
<arg>card_name=${card_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 04:38:41.716" level="INFO">${card_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'card1')]</msg>
<status status="PASS" starttime="20220707 04:38:41.715" endtime="20220707 04:38:41.716"/>
</kw>
<kw name="Element Should Not Be Visible" library="SeleniumLibrary">
<arg>${card_locator}</arg>
<doc>Verifies that the element identified by ``locator`` is NOT visible.</doc>
<msg timestamp="20220707 04:38:41.796" level="INFO">Element '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'card1')]' exists but is not displayed.</msg>
<status status="PASS" starttime="20220707 04:38:41.716" endtime="20220707 04:38:41.796"/>
</kw>
<status status="PASS" starttime="20220707 04:38:41.715" endtime="20220707 04:38:41.797"/>
</kw>
<kw name="Click no labels filter" library="FilterModal">
<doc>filters all cards with labes</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${NO_LABELS_FILTER}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220707 04:38:41.797" endtime="20220707 04:38:41.830"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${NO_LABELS_FILTER}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220707 04:38:41.831" level="INFO">Clicking element '//span[@aria-label='LabelIcon']'.</msg>
<status status="PASS" starttime="20220707 04:38:41.830" endtime="20220707 04:38:41.926"/>
</kw>
<status status="PASS" starttime="20220707 04:38:41.797" endtime="20220707 04:38:41.926"/>
</kw>
<kw name="Card Should Be In List" library="ListComponent">
<arg>card1</arg>
<arg>To Do</arg>
<doc>Check that a card is visible and in the given list
required: card_name, list_name</doc>
<kw name="Format String" library="String">
<var>${card_locator}</var>
<arg>${LIST_CARD_NAME}</arg>
<arg>list_name=${list_name}</arg>
<arg>card_name=${card_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 04:38:41.927" level="INFO">${card_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'card1')]</msg>
<status status="PASS" starttime="20220707 04:38:41.927" endtime="20220707 04:38:41.927"/>
</kw>
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<arg>${card_locator}</arg>
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<msg timestamp="20220707 04:38:41.956" level="INFO">Element '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'card1')]' is displayed.</msg>
<status status="PASS" starttime="20220707 04:38:41.928" endtime="20220707 04:38:41.956"/>
</kw>
<status status="PASS" starttime="20220707 04:38:41.926" endtime="20220707 04:38:41.956"/>
</kw>
<kw name="Close Browser" library="SeleniumLibrary" type="TEARDOWN">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20220707 04:38:41.957" endtime="20220707 04:38:42.058"/>
</kw>
<doc>check filter card by label function</doc>
<tag>gui</tag>
<tag>list.create</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220707 04:38:21.758" endtime="20220707 04:38:42.058"/>
</test>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Teardown Board</arg>
<arg>Delete All Sessions</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Teardown Board">
<doc>Deletes used board for teardown</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${DEFAULT_TIMEOUT}</arg>
<arg>${DEFAULT_INTERVAL}</arg>
<arg>Delete A Board</arg>
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 04:38:42.061" level="INFO">${url} = boards/62c6633dfe7e5b47ef0393c1</msg>
<status status="PASS" starttime="20220707 04:38:42.061" endtime="20220707 04:38:42.061"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220707 04:38:42.463" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 04:38:42.061" endtime="20220707 04:38:42.463"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 04:38:42.463" endtime="20220707 04:38:42.463"/>
</return>
<msg timestamp="20220707 04:38:42.463" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 04:38:42.060" endtime="20220707 04:38:42.463"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 04:38:42.463" endtime="20220707 04:38:42.464"/>
</return>
<status status="PASS" starttime="20220707 04:38:42.060" endtime="20220707 04:38:42.464"/>
</kw>
<status status="PASS" starttime="20220707 04:38:42.060" endtime="20220707 04:38:42.464"/>
</kw>
<status status="PASS" starttime="20220707 04:38:42.059" endtime="20220707 04:38:42.464"/>
</kw>
<kw name="Delete All Sessions" library="request_own_library">
<status status="PASS" starttime="20220707 04:38:42.464" endtime="20220707 04:38:42.465"/>
</kw>
<status status="PASS" starttime="20220707 04:38:42.059" endtime="20220707 04:38:42.465"/>
</kw>
<doc>Label Tests</doc>
<status status="PASS" starttime="20220707 04:38:21.535" endtime="20220707 04:38:42.465"/>
</suite>
<suite id="s1-s1-s4" name="Trello Gui Lists" source="/trello/gui/trello_gui_lists.robot">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Create Trello Session</arg>
<arg>Setup Board</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Create Trello Session" library="TrelloAPI">
<doc>Creates a Trello Session</doc>
<kw name="Create Session" library="request_own_library">
<arg>${API_BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<status status="PASS" starttime="20220707 04:38:42.479" endtime="20220707 04:38:42.479"/>
</kw>
<status status="PASS" starttime="20220707 04:38:42.479" endtime="20220707 04:38:42.479"/>
</kw>
<kw name="Setup Board">
<doc>Creates a board and saves its ID</doc>
<kw name="Create A Board" library="Board">
<var>${BOARD}</var>
<arg>TestBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220707 04:38:42.481" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220707 04:38:42.480" endtime="20220707 04:38:42.481"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220707 04:38:42.481" endtime="20220707 04:38:42.481"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 04:38:42.482" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220707 04:38:42.481" endtime="20220707 04:38:42.482"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220707 04:38:42.708" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 04:38:42.482" endtime="20220707 04:38:42.708"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 04:38:42.708" endtime="20220707 04:38:42.708"/>
</return>
<msg timestamp="20220707 04:38:42.708" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 04:38:42.480" endtime="20220707 04:38:42.708"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 04:38:42.708" endtime="20220707 04:38:42.708"/>
</return>
<msg timestamp="20220707 04:38:42.708" level="INFO">${BOARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 04:38:42.480" endtime="20220707 04:38:42.708"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_BOARD_ID}</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220707 04:38:42.710" level="INFO">${TEST_SUITE_BOARD_ID} = 62c663523913768a5c0d8842</msg>
<status status="PASS" starttime="20220707 04:38:42.709" endtime="20220707 04:38:42.710"/>
</kw>
<status status="PASS" starttime="20220707 04:38:42.479" endtime="20220707 04:38:42.710"/>
</kw>
<status status="PASS" starttime="20220707 04:38:42.479" endtime="20220707 04:38:42.710"/>
</kw>
<test id="s1-s1-s4-t1" name="create list" line="18">
<kw name="Open Browser From Environment" library="CommonGUI">
<arg>${LOGIN_URL}</arg>
<doc>This keywords takes REMOTE and BROWSER variables
from the environment automatically and only needs a url</doc>
<if>
<branch type="IF" condition="${is_remote}">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${url}</arg>
<arg>${BROWSER}</arg>
<arg>remote_url=http://selenium-hub:4444</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20220707 04:38:42.712" level="INFO">Opening browser 'chrome' to base url 'https://trello.com/login' through remote server at 'http://selenium-hub:4444'.</msg>
<status status="PASS" starttime="20220707 04:38:42.712" endtime="20220707 04:38:43.804"/>
</kw>
<status status="PASS" starttime="20220707 04:38:42.712" endtime="20220707 04:38:43.804"/>
</branch>
<branch type="ELSE">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${url}</arg>
<arg>${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<status status="NOT RUN" starttime="20220707 04:38:43.805" endtime="20220707 04:38:43.805"/>
</kw>
<status status="NOT RUN" starttime="20220707 04:38:43.804" endtime="20220707 04:38:43.805"/>
</branch>
<status status="PASS" starttime="20220707 04:38:42.712" endtime="20220707 04:38:43.805"/>
</if>
<status status="PASS" starttime="20220707 04:38:42.711" endtime="20220707 04:38:43.805"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20220707 04:38:43.805" endtime="20220707 04:38:43.912"/>
</kw>
<kw name="Login To Trello" library="LoginPage">
<arg>${DEFAULT_EMAIL}</arg>
<arg>${DEFAULT_PASSWORD}</arg>
<doc>High-level keyword for logging in to Trello</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220707 04:38:43.923" level="INFO">${url} = https://trello.com/login</msg>
<status status="PASS" starttime="20220707 04:38:43.913" endtime="20220707 04:38:43.923"/>
</kw>
<if>
<branch type="IF" condition="'${url}' != '${LOGIN_URL}'">
<kw name="Go To" library="SeleniumLibrary">
<arg>${LOGIN_URL}</arg>
<doc>Navigates the current browser window to the provided ``url``.</doc>
<status status="NOT RUN" starttime="20220707 04:38:43.923" endtime="20220707 04:38:43.923"/>
</kw>
<status status="NOT RUN" starttime="20220707 04:38:43.923" endtime="20220707 04:38:43.923"/>
</branch>
<status status="PASS" starttime="20220707 04:38:43.923" endtime="20220707 04:38:43.923"/>
</if>
<kw name="Enter Username" library="LoginPage">
<arg>${username}</arg>
<doc>Take a username as argument and
enters it in the user_input</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${USER_INPUT}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220707 04:38:43.924" endtime="20220707 04:38:43.968"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${USER_INPUT}</arg>
<arg>${username}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220707 04:38:43.969" level="INFO">Typing text 'bootcamp04@mailinator.com' into text field 'css:input#user'.</msg>
<status status="PASS" starttime="20220707 04:38:43.968" endtime="20220707 04:38:44.063"/>
</kw>
<status status="PASS" starttime="20220707 04:38:43.923" endtime="20220707 04:38:44.063"/>
</kw>
<kw name="Wait Until Element Is Not Visible" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<doc>Waits until the element ``locator`` is not visible.</doc>
<status status="PASS" starttime="20220707 04:38:44.063" endtime="20220707 04:38:44.784"/>
</kw>
<kw name="Click Login Button" library="LoginPage">
<doc>Clicks Trello's login button if in Trello's
login page, else it clicks Atlassian's</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220707 04:38:44.790" level="INFO">${url} = https://trello.com/login</msg>
<status status="PASS" starttime="20220707 04:38:44.785" endtime="20220707 04:38:44.790"/>
</kw>
<if>
<branch type="IF" condition="'${url}' == '${LOGIN_URL}'">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220707 04:38:44.791" endtime="20220707 04:38:44.833"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220707 04:38:44.833" level="INFO">Clicking button 'css:input#login'.</msg>
<status status="PASS" starttime="20220707 04:38:44.833" endtime="20220707 04:38:45.607"/>
</kw>
<status status="PASS" starttime="20220707 04:38:44.791" endtime="20220707 04:38:45.607"/>
</branch>
<branch type="ELSE">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="NOT RUN" starttime="20220707 04:38:45.608" endtime="20220707 04:38:45.608"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<status status="NOT RUN" starttime="20220707 04:38:45.608" endtime="20220707 04:38:45.608"/>
</kw>
<status status="NOT RUN" starttime="20220707 04:38:45.607" endtime="20220707 04:38:45.608"/>
</branch>
<status status="PASS" starttime="20220707 04:38:44.791" endtime="20220707 04:38:45.608"/>
</if>
<status status="PASS" starttime="20220707 04:38:44.785" endtime="20220707 04:38:45.608"/>
</kw>
<kw name="Wait Until Location Is Atlassian's Login" library="LoginPage">
<doc>Waits for the page redirection when logging in.</doc>
<kw name="Wait Until Location Contains" library="SeleniumLibrary">
<arg>atlassian.com</arg>
<doc>Waits until the current URL contains ``expected``.</doc>
<status status="PASS" starttime="20220707 04:38:45.608" endtime="20220707 04:38:45.629"/>
</kw>
<status status="PASS" starttime="20220707 04:38:45.608" endtime="20220707 04:38:45.629"/>
</kw>
<kw name="Enter Password" library="LoginPage">
<arg>${password}</arg>
<doc>Take a password as argument and
enters it in the password_input</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<arg>timeout=${DEFAULT_TIMEOUT}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220707 04:38:45.629" endtime="20220707 04:38:45.676"/>
</kw>
<kw name="Input Password" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<arg>${password}</arg>
<doc>Types the given password into the text field identified by ``locator``.</doc>
<msg timestamp="20220707 04:38:45.677" level="INFO">Typing password into text field 'css:input#password'.</msg>
<msg timestamp="20220707 04:38:45.721" level="INFO">Temporally setting log level to: NONE</msg>
<msg timestamp="20220707 04:38:45.806" level="INFO">Log level changed from NONE to INFO.</msg>
<status status="PASS" starttime="20220707 04:38:45.676" endtime="20220707 04:38:45.806"/>
</kw>
<status status="PASS" starttime="20220707 04:38:45.629" endtime="20220707 04:38:45.806"/>
</kw>
<kw name="Click Login Button" library="LoginPage">
<doc>Clicks Trello's login button if in Trello's
login page, else it clicks Atlassian's</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220707 04:38:45.819" level="INFO">${url} = https://id.atlassian.com/login?application=trello&amp;continue=https%3A%2F%2Ftrello.com%2Fauth%2Fatlassian%2Fcallback%3FreturnUrl%3D%252F%26display%3D%26aaOnboarding%3D%26updateEmail%3D%26traceId%3D62c663...</msg>
<status status="PASS" starttime="20220707 04:38:45.807" endtime="20220707 04:38:45.820"/>
</kw>
<if>
<branch type="IF" condition="'${url}' == '${LOGIN_URL}'">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="NOT RUN" starttime="20220707 04:38:45.820" endtime="20220707 04:38:45.820"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<status status="NOT RUN" starttime="20220707 04:38:45.820" endtime="20220707 04:38:45.820"/>
</kw>
<status status="NOT RUN" starttime="20220707 04:38:45.820" endtime="20220707 04:38:45.820"/>
</branch>
<branch type="ELSE">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220707 04:38:45.821" endtime="20220707 04:38:45.876"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220707 04:38:45.877" level="INFO">Clicking button 'css:button#login-submit'.</msg>
<status status="PASS" starttime="20220707 04:38:45.877" endtime="20220707 04:38:45.964"/>
</kw>
<status status="PASS" starttime="20220707 04:38:45.820" endtime="20220707 04:38:45.964"/>
</branch>
<status status="PASS" starttime="20220707 04:38:45.820" endtime="20220707 04:38:45.964"/>
</if>
<status status="PASS" starttime="20220707 04:38:45.806" endtime="20220707 04:38:45.964"/>
</kw>
<status status="PASS" starttime="20220707 04:38:43.913" endtime="20220707 04:38:45.964"/>
</kw>
<kw name="Go To Board" library="BoardsPage">
<arg>TestBoard</arg>
<doc>Receives the board name and goes to that board's page.</doc>
<kw name="Format String" library="String">
<var>${locator}</var>
<arg>${BOARD_BUTTON}</arg>
<arg>${board_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 04:38:45.965" level="INFO">${locator} = //div[@title="TestBoard"]</msg>
<status status="PASS" starttime="20220707 04:38:45.965" endtime="20220707 04:38:45.965"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220707 04:38:45.965" endtime="20220707 04:38:49.079"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220707 04:38:49.080" level="INFO">Clicking element '//div[@title="TestBoard"]'.</msg>
<status status="PASS" starttime="20220707 04:38:49.079" endtime="20220707 04:38:49.451"/>
</kw>
<status status="PASS" starttime="20220707 04:38:45.964" endtime="20220707 04:38:49.451"/>
</kw>
<kw name="Create new list with the name" library="ListComponent">
<arg>NEW_TEST_LIST</arg>
<doc>Create a new list with the given name</doc>
<kw name="Wait Until Page Contains Element" library="SeleniumLibrary">
<arg>${ADD_LIST_BUTTON}</arg>
<arg>timeout=${DEFAULT_TIMEOUT}s</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" starttime="20220707 04:38:49.452" endtime="20220707 04:38:49.869"/>
</kw>
<kw name="Click Link" library="SeleniumLibrary">
<arg>${ADD_LIST_BUTTON}</arg>
<doc>Clicks a link identified by ``locator``.</doc>
<msg timestamp="20220707 04:38:49.869" level="INFO">Clicking link 'xpath://a[contains(@Class, 'open-add-list')]'.</msg>
<status status="PASS" starttime="20220707 04:38:49.869" endtime="20220707 04:38:50.021"/>
</kw>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LIST_NAME_INPUT}</arg>
<arg>timeout=${DEFAULT_TIMEOUT}s</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220707 04:38:50.022" endtime="20220707 04:38:50.149"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${LIST_NAME_INPUT}</arg>
<arg>${list_name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220707 04:38:50.150" level="INFO">Typing text 'NEW_TEST_LIST' into text field 'xpath://input[@class="list-name-input"]'.</msg>
<status status="PASS" starttime="20220707 04:38:50.150" endtime="20220707 04:38:50.307"/>
</kw>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>${LIST_NAME_INPUT}</arg>
<arg>RETURN</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20220707 04:38:50.308" level="INFO">Sending key(s) ('RETURN',) to xpath://input[@class="list-name-input"] element.</msg>
<msg timestamp="20220707 04:38:50.604" level="INFO">Pressing special key RETURN to element.</msg>
<msg timestamp="20220707 04:38:50.604" level="INFO">Releasing special key RETURN.</msg>
<status status="PASS" starttime="20220707 04:38:50.307" endtime="20220707 04:38:50.634"/>
</kw>
<status status="PASS" starttime="20220707 04:38:49.451" endtime="20220707 04:38:50.634"/>
</kw>
<kw name="Verify That The List Exists" library="ListComponent">
<arg>NEW_TEST_LIST</arg>
<doc>Verify that a given header of a list matches</doc>
<kw name="Format String" library="String">
<var>${list_name_locator}</var>
<arg>${LIST_DIV}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 04:38:50.635" level="INFO">${list_name_locator} = //h2[text()='NEW_TEST_LIST']//ancestor::div[contains(@class, 'list-content')]</msg>
<status status="PASS" starttime="20220707 04:38:50.635" endtime="20220707 04:38:50.635"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${list_name_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220707 04:38:50.635" endtime="20220707 04:38:50.667"/>
</kw>
<kw name="Page Should Contain Element" library="SeleniumLibrary">
<arg>${list_name_locator}</arg>
<doc>Verifies that element ``locator`` is found on the current page.</doc>
<msg timestamp="20220707 04:38:50.676" level="INFO">Current page contains element '//h2[text()='NEW_TEST_LIST']//ancestor::div[contains(@class, 'list-content')]'.</msg>
<status status="PASS" starttime="20220707 04:38:50.667" endtime="20220707 04:38:50.677"/>
</kw>
<status status="PASS" starttime="20220707 04:38:50.634" endtime="20220707 04:38:50.677"/>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Wait Until Keyword Succeeds</arg>
<arg>${DEFAULT_REPEAT}</arg>
<arg>${DEFAULT_INTERVAL} seconds</arg>
<arg>Close a list</arg>
<arg>AND</arg>
<arg>Close Browser</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${DEFAULT_REPEAT}</arg>
<arg>${DEFAULT_INTERVAL} seconds</arg>
<arg>Close a list</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Close a list" library="ListComponent">
<doc>archives a list</doc>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LIST_ACTIONS_BUTTON}</arg>
<arg>timeout=${DEFAULT_TIMEOUT}s</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220707 04:38:50.678" endtime="20220707 04:38:50.744"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${DEFAULT_REPEAT}</arg>
<arg>${DEFAULT_INTERVAL} seconds</arg>
<arg>Click Link</arg>
<arg>${LIST_ACTIONS_BUTTON}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Click Link" library="SeleniumLibrary">
<arg>${LIST_ACTIONS_BUTTON}</arg>
<doc>Clicks a link identified by ``locator``.</doc>
<msg timestamp="20220707 04:38:50.745" level="INFO">Clicking link 'xpath://div[@class='js-list list-wrapper'][last()]//a[@aria-label="List actions"]'.</msg>
<status status="PASS" starttime="20220707 04:38:50.745" endtime="20220707 04:38:50.810"/>
</kw>
<status status="PASS" starttime="20220707 04:38:50.744" endtime="20220707 04:38:50.810"/>
</kw>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${CLOSE_LIST_BUTTON}</arg>
<arg>timeout=${DEFAULT_TIMEOUT}s</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220707 04:38:50.811" endtime="20220707 04:38:50.865"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${DEFAULT_TIMEOUT}</arg>
<arg>${DEFAULT_INTERVAL}</arg>
<arg>Click Link</arg>
<arg>${CLOSE_LIST_BUTTON}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Click Link" library="SeleniumLibrary">
<arg>${CLOSE_LIST_BUTTON}</arg>
<doc>Clicks a link identified by ``locator``.</doc>
<msg timestamp="20220707 04:38:50.866" level="INFO">Clicking link 'xpath://li//a[@class='js-close-list']'.</msg>
<status status="PASS" starttime="20220707 04:38:50.866" endtime="20220707 04:38:50.951"/>
</kw>
<status status="PASS" starttime="20220707 04:38:50.865" endtime="20220707 04:38:50.951"/>
</kw>
<status status="PASS" starttime="20220707 04:38:50.678" endtime="20220707 04:38:50.951"/>
</kw>
<status status="PASS" starttime="20220707 04:38:50.677" endtime="20220707 04:38:50.951"/>
</kw>
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20220707 04:38:50.951" endtime="20220707 04:38:51.036"/>
</kw>
<status status="PASS" starttime="20220707 04:38:50.677" endtime="20220707 04:38:51.036"/>
</kw>
<doc>verify that a list can be created in GUI</doc>
<tag>gui</tag>
<tag>list.create</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220707 04:38:42.711" endtime="20220707 04:38:51.036"/>
</test>
<test id="s1-s1-s4-t2" name="modify name of a list" line="31">
<kw name="Open Browser From Environment" library="CommonGUI">
<arg>${LOGIN_URL}</arg>
<doc>This keywords takes REMOTE and BROWSER variables
from the environment automatically and only needs a url</doc>
<if>
<branch type="IF" condition="${is_remote}">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${url}</arg>
<arg>${BROWSER}</arg>
<arg>remote_url=http://selenium-hub:4444</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20220707 04:38:51.039" level="INFO">Opening browser 'chrome' to base url 'https://trello.com/login' through remote server at 'http://selenium-hub:4444'.</msg>
<status status="PASS" starttime="20220707 04:38:51.039" endtime="20220707 04:38:51.946"/>
</kw>
<status status="PASS" starttime="20220707 04:38:51.038" endtime="20220707 04:38:51.946"/>
</branch>
<branch type="ELSE">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${url}</arg>
<arg>${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<status status="NOT RUN" starttime="20220707 04:38:51.946" endtime="20220707 04:38:51.947"/>
</kw>
<status status="NOT RUN" starttime="20220707 04:38:51.946" endtime="20220707 04:38:51.947"/>
</branch>
<status status="PASS" starttime="20220707 04:38:51.038" endtime="20220707 04:38:51.947"/>
</if>
<status status="PASS" starttime="20220707 04:38:51.038" endtime="20220707 04:38:51.947"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20220707 04:38:51.947" endtime="20220707 04:38:52.057"/>
</kw>
<kw name="Login To Trello" library="LoginPage">
<arg>${DEFAULT_EMAIL}</arg>
<arg>${DEFAULT_PASSWORD}</arg>
<doc>High-level keyword for logging in to Trello</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220707 04:38:52.065" level="INFO">${url} = https://trello.com/login</msg>
<status status="PASS" starttime="20220707 04:38:52.057" endtime="20220707 04:38:52.065"/>
</kw>
<if>
<branch type="IF" condition="'${url}' != '${LOGIN_URL}'">
<kw name="Go To" library="SeleniumLibrary">
<arg>${LOGIN_URL}</arg>
<doc>Navigates the current browser window to the provided ``url``.</doc>
<status status="NOT RUN" starttime="20220707 04:38:52.065" endtime="20220707 04:38:52.065"/>
</kw>
<status status="NOT RUN" starttime="20220707 04:38:52.065" endtime="20220707 04:38:52.065"/>
</branch>
<status status="PASS" starttime="20220707 04:38:52.065" endtime="20220707 04:38:52.065"/>
</if>
<kw name="Enter Username" library="LoginPage">
<arg>${username}</arg>
<doc>Take a username as argument and
enters it in the user_input</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${USER_INPUT}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220707 04:38:52.066" endtime="20220707 04:38:52.100"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${USER_INPUT}</arg>
<arg>${username}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220707 04:38:52.101" level="INFO">Typing text 'bootcamp04@mailinator.com' into text field 'css:input#user'.</msg>
<status status="PASS" starttime="20220707 04:38:52.100" endtime="20220707 04:38:52.206"/>
</kw>
<status status="PASS" starttime="20220707 04:38:52.065" endtime="20220707 04:38:52.206"/>
</kw>
<kw name="Wait Until Element Is Not Visible" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<doc>Waits until the element ``locator`` is not visible.</doc>
<status status="PASS" starttime="20220707 04:38:52.206" endtime="20220707 04:38:52.911"/>
</kw>
<kw name="Click Login Button" library="LoginPage">
<doc>Clicks Trello's login button if in Trello's
login page, else it clicks Atlassian's</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220707 04:38:52.927" level="INFO">${url} = https://trello.com/login</msg>
<status status="PASS" starttime="20220707 04:38:52.912" endtime="20220707 04:38:52.927"/>
</kw>
<if>
<branch type="IF" condition="'${url}' == '${LOGIN_URL}'">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220707 04:38:52.927" endtime="20220707 04:38:52.981"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220707 04:38:52.981" level="INFO">Clicking button 'css:input#login'.</msg>
<status status="PASS" starttime="20220707 04:38:52.981" endtime="20220707 04:38:53.729"/>
</kw>
<status status="PASS" starttime="20220707 04:38:52.927" endtime="20220707 04:38:53.729"/>
</branch>
<branch type="ELSE">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="NOT RUN" starttime="20220707 04:38:53.730" endtime="20220707 04:38:53.730"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<status status="NOT RUN" starttime="20220707 04:38:53.730" endtime="20220707 04:38:53.730"/>
</kw>
<status status="NOT RUN" starttime="20220707 04:38:53.730" endtime="20220707 04:38:53.730"/>
</branch>
<status status="PASS" starttime="20220707 04:38:52.927" endtime="20220707 04:38:53.730"/>
</if>
<status status="PASS" starttime="20220707 04:38:52.912" endtime="20220707 04:38:53.730"/>
</kw>
<kw name="Wait Until Location Is Atlassian's Login" library="LoginPage">
<doc>Waits for the page redirection when logging in.</doc>
<kw name="Wait Until Location Contains" library="SeleniumLibrary">
<arg>atlassian.com</arg>
<doc>Waits until the current URL contains ``expected``.</doc>
<status status="PASS" starttime="20220707 04:38:53.731" endtime="20220707 04:38:53.756"/>
</kw>
<status status="PASS" starttime="20220707 04:38:53.730" endtime="20220707 04:38:53.757"/>
</kw>
<kw name="Enter Password" library="LoginPage">
<arg>${password}</arg>
<doc>Take a password as argument and
enters it in the password_input</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<arg>timeout=${DEFAULT_TIMEOUT}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220707 04:38:53.757" endtime="20220707 04:38:53.836"/>
</kw>
<kw name="Input Password" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<arg>${password}</arg>
<doc>Types the given password into the text field identified by ``locator``.</doc>
<msg timestamp="20220707 04:38:53.836" level="INFO">Typing password into text field 'css:input#password'.</msg>
<msg timestamp="20220707 04:38:53.889" level="INFO">Temporally setting log level to: NONE</msg>
<msg timestamp="20220707 04:38:53.952" level="INFO">Log level changed from NONE to INFO.</msg>
<status status="PASS" starttime="20220707 04:38:53.836" endtime="20220707 04:38:53.953"/>
</kw>
<status status="PASS" starttime="20220707 04:38:53.757" endtime="20220707 04:38:53.953"/>
</kw>
<kw name="Click Login Button" library="LoginPage">
<doc>Clicks Trello's login button if in Trello's
login page, else it clicks Atlassian's</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220707 04:38:53.966" level="INFO">${url} = https://id.atlassian.com/login?application=trello&amp;continue=https%3A%2F%2Ftrello.com%2Fauth%2Fatlassian%2Fcallback%3FreturnUrl%3D%252F%26display%3D%26aaOnboarding%3D%26updateEmail%3D%26traceId%3D62c663...</msg>
<status status="PASS" starttime="20220707 04:38:53.953" endtime="20220707 04:38:53.966"/>
</kw>
<if>
<branch type="IF" condition="'${url}' == '${LOGIN_URL}'">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="NOT RUN" starttime="20220707 04:38:53.966" endtime="20220707 04:38:53.966"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<status status="NOT RUN" starttime="20220707 04:38:53.966" endtime="20220707 04:38:53.966"/>
</kw>
<status status="NOT RUN" starttime="20220707 04:38:53.966" endtime="20220707 04:38:53.966"/>
</branch>
<branch type="ELSE">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220707 04:38:53.967" endtime="20220707 04:38:54.008"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220707 04:38:54.008" level="INFO">Clicking button 'css:button#login-submit'.</msg>
<status status="PASS" starttime="20220707 04:38:54.008" endtime="20220707 04:38:54.101"/>
</kw>
<status status="PASS" starttime="20220707 04:38:53.966" endtime="20220707 04:38:54.101"/>
</branch>
<status status="PASS" starttime="20220707 04:38:53.966" endtime="20220707 04:38:54.101"/>
</if>
<status status="PASS" starttime="20220707 04:38:53.953" endtime="20220707 04:38:54.101"/>
</kw>
<status status="PASS" starttime="20220707 04:38:52.057" endtime="20220707 04:38:54.102"/>
</kw>
<kw name="Go To Board" library="BoardsPage">
<arg>TestBoard</arg>
<doc>Receives the board name and goes to that board's page.</doc>
<kw name="Format String" library="String">
<var>${locator}</var>
<arg>${BOARD_BUTTON}</arg>
<arg>${board_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 04:38:54.103" level="INFO">${locator} = //div[@title="TestBoard"]</msg>
<status status="PASS" starttime="20220707 04:38:54.102" endtime="20220707 04:38:54.103"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220707 04:38:54.103" endtime="20220707 04:38:56.900"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220707 04:38:56.900" level="INFO">Clicking element '//div[@title="TestBoard"]'.</msg>
<status status="PASS" starttime="20220707 04:38:56.900" endtime="20220707 04:38:57.296"/>
</kw>
<status status="PASS" starttime="20220707 04:38:54.102" endtime="20220707 04:38:57.296"/>
</kw>
<kw name="Create new list with the name" library="ListComponent">
<arg>TO_MODIFY</arg>
<doc>Create a new list with the given name</doc>
<kw name="Wait Until Page Contains Element" library="SeleniumLibrary">
<arg>${ADD_LIST_BUTTON}</arg>
<arg>timeout=${DEFAULT_TIMEOUT}s</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" starttime="20220707 04:38:57.297" endtime="20220707 04:38:57.708"/>
</kw>
<kw name="Click Link" library="SeleniumLibrary">
<arg>${ADD_LIST_BUTTON}</arg>
<doc>Clicks a link identified by ``locator``.</doc>
<msg timestamp="20220707 04:38:57.708" level="INFO">Clicking link 'xpath://a[contains(@Class, 'open-add-list')]'.</msg>
<status status="PASS" starttime="20220707 04:38:57.708" endtime="20220707 04:38:57.899"/>
</kw>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LIST_NAME_INPUT}</arg>
<arg>timeout=${DEFAULT_TIMEOUT}s</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220707 04:38:57.899" endtime="20220707 04:38:57.966"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${LIST_NAME_INPUT}</arg>
<arg>${list_name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220707 04:38:57.967" level="INFO">Typing text 'TO_MODIFY' into text field 'xpath://input[@class="list-name-input"]'.</msg>
<status status="PASS" starttime="20220707 04:38:57.966" endtime="20220707 04:38:58.063"/>
</kw>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>${LIST_NAME_INPUT}</arg>
<arg>RETURN</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20220707 04:38:58.064" level="INFO">Sending key(s) ('RETURN',) to xpath://input[@class="list-name-input"] element.</msg>
<msg timestamp="20220707 04:38:58.393" level="INFO">Pressing special key RETURN to element.</msg>
<msg timestamp="20220707 04:38:58.393" level="INFO">Releasing special key RETURN.</msg>
<status status="PASS" starttime="20220707 04:38:58.063" endtime="20220707 04:38:58.428"/>
</kw>
<status status="PASS" starttime="20220707 04:38:57.297" endtime="20220707 04:38:58.429"/>
</kw>
<kw name="Modify the name of a list with" library="ListComponent">
<arg>TO_MODIFY</arg>
<arg>MODIFIED_LIST</arg>
<doc>Modify the name of an existent list</doc>
<kw name="Format String" library="String">
<var>${name_header_instance}</var>
<arg>${LIST_NAME_HEADER}</arg>
<arg>old_name=${old_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 04:38:58.430" level="INFO">${name_header_instance} = xpath://div[@class='list-header js-list-header u-clearfix is-menu-shown' and contains(.,'TO_MODIFY')]</msg>
<status status="PASS" starttime="20220707 04:38:58.429" endtime="20220707 04:38:58.430"/>
</kw>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${name_header_instance}</arg>
<arg>timeout=${DEFAULT_TIMEOUT}s</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220707 04:38:58.430" endtime="20220707 04:38:58.489"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${name_header_instance}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220707 04:38:58.490" level="INFO">Clicking element 'xpath://div[@class='list-header js-list-header u-clearfix is-menu-shown' and contains(.,'TO_MODIFY')]'.</msg>
<status status="PASS" starttime="20220707 04:38:58.489" endtime="20220707 04:38:58.550"/>
</kw>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LIST_NAME_INPUT}</arg>
<arg>timeout=${DEFAULT_TIMEOUT}s</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220707 04:38:58.550" endtime="20220707 04:38:58.589"/>
</kw>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>${LIST_NAME_INPUT}</arg>
<arg>BACKSPACE</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20220707 04:38:58.590" level="INFO">Sending key(s) ('BACKSPACE',) to xpath://input[@class="list-name-input"] element.</msg>
<msg timestamp="20220707 04:38:58.892" level="INFO">Pressing special key BACKSPACE to element.</msg>
<msg timestamp="20220707 04:38:58.892" level="INFO">Releasing special key BACKSPACE.</msg>
<status status="PASS" starttime="20220707 04:38:58.589" endtime="20220707 04:38:58.901"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${LIST_TEXT_AREA_NAME}</arg>
<arg>${new_name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220707 04:38:58.901" level="INFO">Typing text 'MODIFIED_LIST' into text field 'xpath://div[@class='js-list list-wrapper'][last()]//textarea'.</msg>
<status status="PASS" starttime="20220707 04:38:58.901" endtime="20220707 04:38:59.007"/>
</kw>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>None</arg>
<arg>RETURN</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20220707 04:38:59.008" level="INFO">Sending key(s) ('RETURN',) to page.</msg>
<msg timestamp="20220707 04:38:59.008" level="INFO">Pressing special key RETURN to browser.</msg>
<msg timestamp="20220707 04:38:59.008" level="INFO">Releasing special key RETURN.</msg>
<status status="PASS" starttime="20220707 04:38:59.007" endtime="20220707 04:38:59.025"/>
</kw>
<status status="PASS" starttime="20220707 04:38:58.429" endtime="20220707 04:38:59.025"/>
</kw>
<kw name="Verify That The List Exists" library="ListComponent">
<arg>MODIFIED_LIST</arg>
<doc>Verify that a given header of a list matches</doc>
<kw name="Format String" library="String">
<var>${list_name_locator}</var>
<arg>${LIST_DIV}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 04:38:59.026" level="INFO">${list_name_locator} = //h2[text()='MODIFIED_LIST']//ancestor::div[contains(@class, 'list-content')]</msg>
<status status="PASS" starttime="20220707 04:38:59.026" endtime="20220707 04:38:59.026"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${list_name_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220707 04:38:59.026" endtime="20220707 04:38:59.076"/>
</kw>
<kw name="Page Should Contain Element" library="SeleniumLibrary">
<arg>${list_name_locator}</arg>
<doc>Verifies that element ``locator`` is found on the current page.</doc>
<msg timestamp="20220707 04:38:59.092" level="INFO">Current page contains element '//h2[text()='MODIFIED_LIST']//ancestor::div[contains(@class, 'list-content')]'.</msg>
<status status="PASS" starttime="20220707 04:38:59.076" endtime="20220707 04:38:59.092"/>
</kw>
<status status="PASS" starttime="20220707 04:38:59.025" endtime="20220707 04:38:59.092"/>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Wait Until Keyword Succeeds</arg>
<arg>${DEFAULT_REPEAT}</arg>
<arg>${DEFAULT_INTERVAL} seconds</arg>
<arg>Close a list</arg>
<arg>AND</arg>
<arg>Close Browser</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${DEFAULT_REPEAT}</arg>
<arg>${DEFAULT_INTERVAL} seconds</arg>
<arg>Close a list</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Close a list" library="ListComponent">
<doc>archives a list</doc>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LIST_ACTIONS_BUTTON}</arg>
<arg>timeout=${DEFAULT_TIMEOUT}s</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220707 04:38:59.093" endtime="20220707 04:38:59.140"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${DEFAULT_REPEAT}</arg>
<arg>${DEFAULT_INTERVAL} seconds</arg>
<arg>Click Link</arg>
<arg>${LIST_ACTIONS_BUTTON}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Click Link" library="SeleniumLibrary">
<arg>${LIST_ACTIONS_BUTTON}</arg>
<doc>Clicks a link identified by ``locator``.</doc>
<msg timestamp="20220707 04:38:59.141" level="INFO">Clicking link 'xpath://div[@class='js-list list-wrapper'][last()]//a[@aria-label="List actions"]'.</msg>
<status status="PASS" starttime="20220707 04:38:59.141" endtime="20220707 04:38:59.212"/>
</kw>
<status status="PASS" starttime="20220707 04:38:59.141" endtime="20220707 04:38:59.212"/>
</kw>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${CLOSE_LIST_BUTTON}</arg>
<arg>timeout=${DEFAULT_TIMEOUT}s</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220707 04:38:59.213" endtime="20220707 04:38:59.274"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${DEFAULT_TIMEOUT}</arg>
<arg>${DEFAULT_INTERVAL}</arg>
<arg>Click Link</arg>
<arg>${CLOSE_LIST_BUTTON}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Click Link" library="SeleniumLibrary">
<arg>${CLOSE_LIST_BUTTON}</arg>
<doc>Clicks a link identified by ``locator``.</doc>
<msg timestamp="20220707 04:38:59.275" level="INFO">Clicking link 'xpath://li//a[@class='js-close-list']'.</msg>
<status status="PASS" starttime="20220707 04:38:59.275" endtime="20220707 04:38:59.357"/>
</kw>
<status status="PASS" starttime="20220707 04:38:59.275" endtime="20220707 04:38:59.357"/>
</kw>
<status status="PASS" starttime="20220707 04:38:59.093" endtime="20220707 04:38:59.357"/>
</kw>
<status status="PASS" starttime="20220707 04:38:59.093" endtime="20220707 04:38:59.357"/>
</kw>
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20220707 04:38:59.357" endtime="20220707 04:38:59.446"/>
</kw>
<status status="PASS" starttime="20220707 04:38:59.092" endtime="20220707 04:38:59.447"/>
</kw>
<doc>verify that a list name can be modified in GUI</doc>
<tag>gui</tag>
<tag>list.update</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220707 04:38:51.037" endtime="20220707 04:38:59.447"/>
</test>
<test id="s1-s1-s4-t3" name="archive a list" line="45">
<kw name="Open Browser From Environment" library="CommonGUI">
<arg>${LOGIN_URL}</arg>
<doc>This keywords takes REMOTE and BROWSER variables
from the environment automatically and only needs a url</doc>
<if>
<branch type="IF" condition="${is_remote}">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${url}</arg>
<arg>${BROWSER}</arg>
<arg>remote_url=http://selenium-hub:4444</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20220707 04:38:59.449" level="INFO">Opening browser 'chrome' to base url 'https://trello.com/login' through remote server at 'http://selenium-hub:4444'.</msg>
<status status="PASS" starttime="20220707 04:38:59.449" endtime="20220707 04:39:00.410"/>
</kw>
<status status="PASS" starttime="20220707 04:38:59.449" endtime="20220707 04:39:00.410"/>
</branch>
<branch type="ELSE">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${url}</arg>
<arg>${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<status status="NOT RUN" starttime="20220707 04:39:00.410" endtime="20220707 04:39:00.410"/>
</kw>
<status status="NOT RUN" starttime="20220707 04:39:00.410" endtime="20220707 04:39:00.410"/>
</branch>
<status status="PASS" starttime="20220707 04:38:59.449" endtime="20220707 04:39:00.410"/>
</if>
<status status="PASS" starttime="20220707 04:38:59.448" endtime="20220707 04:39:00.410"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20220707 04:39:00.410" endtime="20220707 04:39:00.518"/>
</kw>
<kw name="Login To Trello" library="LoginPage">
<arg>${DEFAULT_EMAIL}</arg>
<arg>${DEFAULT_PASSWORD}</arg>
<doc>High-level keyword for logging in to Trello</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220707 04:39:00.526" level="INFO">${url} = https://trello.com/login</msg>
<status status="PASS" starttime="20220707 04:39:00.519" endtime="20220707 04:39:00.526"/>
</kw>
<if>
<branch type="IF" condition="'${url}' != '${LOGIN_URL}'">
<kw name="Go To" library="SeleniumLibrary">
<arg>${LOGIN_URL}</arg>
<doc>Navigates the current browser window to the provided ``url``.</doc>
<status status="NOT RUN" starttime="20220707 04:39:00.527" endtime="20220707 04:39:00.527"/>
</kw>
<status status="NOT RUN" starttime="20220707 04:39:00.526" endtime="20220707 04:39:00.527"/>
</branch>
<status status="PASS" starttime="20220707 04:39:00.526" endtime="20220707 04:39:00.527"/>
</if>
<kw name="Enter Username" library="LoginPage">
<arg>${username}</arg>
<doc>Take a username as argument and
enters it in the user_input</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${USER_INPUT}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220707 04:39:00.527" endtime="20220707 04:39:00.561"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${USER_INPUT}</arg>
<arg>${username}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220707 04:39:00.562" level="INFO">Typing text 'bootcamp04@mailinator.com' into text field 'css:input#user'.</msg>
<status status="PASS" starttime="20220707 04:39:00.561" endtime="20220707 04:39:00.705"/>
</kw>
<status status="PASS" starttime="20220707 04:39:00.527" endtime="20220707 04:39:00.705"/>
</kw>
<kw name="Wait Until Element Is Not Visible" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<doc>Waits until the element ``locator`` is not visible.</doc>
<status status="PASS" starttime="20220707 04:39:00.705" endtime="20220707 04:39:01.412"/>
</kw>
<kw name="Click Login Button" library="LoginPage">
<doc>Clicks Trello's login button if in Trello's
login page, else it clicks Atlassian's</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220707 04:39:01.423" level="INFO">${url} = https://trello.com/login</msg>
<status status="PASS" starttime="20220707 04:39:01.413" endtime="20220707 04:39:01.423"/>
</kw>
<if>
<branch type="IF" condition="'${url}' == '${LOGIN_URL}'">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220707 04:39:01.424" endtime="20220707 04:39:01.463"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220707 04:39:01.463" level="INFO">Clicking button 'css:input#login'.</msg>
<status status="PASS" starttime="20220707 04:39:01.463" endtime="20220707 04:39:02.266"/>
</kw>
<status status="PASS" starttime="20220707 04:39:01.424" endtime="20220707 04:39:02.266"/>
</branch>
<branch type="ELSE">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="NOT RUN" starttime="20220707 04:39:02.267" endtime="20220707 04:39:02.267"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<status status="NOT RUN" starttime="20220707 04:39:02.267" endtime="20220707 04:39:02.267"/>
</kw>
<status status="NOT RUN" starttime="20220707 04:39:02.266" endtime="20220707 04:39:02.267"/>
</branch>
<status status="PASS" starttime="20220707 04:39:01.423" endtime="20220707 04:39:02.267"/>
</if>
<status status="PASS" starttime="20220707 04:39:01.412" endtime="20220707 04:39:02.267"/>
</kw>
<kw name="Wait Until Location Is Atlassian's Login" library="LoginPage">
<doc>Waits for the page redirection when logging in.</doc>
<kw name="Wait Until Location Contains" library="SeleniumLibrary">
<arg>atlassian.com</arg>
<doc>Waits until the current URL contains ``expected``.</doc>
<status status="PASS" starttime="20220707 04:39:02.267" endtime="20220707 04:39:02.278"/>
</kw>
<status status="PASS" starttime="20220707 04:39:02.267" endtime="20220707 04:39:02.278"/>
</kw>
<kw name="Enter Password" library="LoginPage">
<arg>${password}</arg>
<doc>Take a password as argument and
enters it in the password_input</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<arg>timeout=${DEFAULT_TIMEOUT}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220707 04:39:02.278" endtime="20220707 04:39:02.322"/>
</kw>
<kw name="Input Password" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<arg>${password}</arg>
<doc>Types the given password into the text field identified by ``locator``.</doc>
<msg timestamp="20220707 04:39:02.322" level="INFO">Typing password into text field 'css:input#password'.</msg>
<msg timestamp="20220707 04:39:02.370" level="INFO">Temporally setting log level to: NONE</msg>
<msg timestamp="20220707 04:39:02.440" level="INFO">Log level changed from NONE to INFO.</msg>
<status status="PASS" starttime="20220707 04:39:02.322" endtime="20220707 04:39:02.440"/>
</kw>
<status status="PASS" starttime="20220707 04:39:02.278" endtime="20220707 04:39:02.441"/>
</kw>
<kw name="Click Login Button" library="LoginPage">
<doc>Clicks Trello's login button if in Trello's
login page, else it clicks Atlassian's</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220707 04:39:02.456" level="INFO">${url} = https://id.atlassian.com/login?application=trello&amp;continue=https%3A%2F%2Ftrello.com%2Fauth%2Fatlassian%2Fcallback%3FreturnUrl%3D%252F%26display%3D%26aaOnboarding%3D%26updateEmail%3D%26traceId%3D62c663...</msg>
<status status="PASS" starttime="20220707 04:39:02.441" endtime="20220707 04:39:02.456"/>
</kw>
<if>
<branch type="IF" condition="'${url}' == '${LOGIN_URL}'">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="NOT RUN" starttime="20220707 04:39:02.456" endtime="20220707 04:39:02.456"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<status status="NOT RUN" starttime="20220707 04:39:02.456" endtime="20220707 04:39:02.456"/>
</kw>
<status status="NOT RUN" starttime="20220707 04:39:02.456" endtime="20220707 04:39:02.456"/>
</branch>
<branch type="ELSE">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220707 04:39:02.457" endtime="20220707 04:39:02.521"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220707 04:39:02.522" level="INFO">Clicking button 'css:button#login-submit'.</msg>
<status status="PASS" starttime="20220707 04:39:02.521" endtime="20220707 04:39:02.628"/>
</kw>
<status status="PASS" starttime="20220707 04:39:02.456" endtime="20220707 04:39:02.628"/>
</branch>
<status status="PASS" starttime="20220707 04:39:02.456" endtime="20220707 04:39:02.628"/>
</if>
<status status="PASS" starttime="20220707 04:39:02.441" endtime="20220707 04:39:02.629"/>
</kw>
<status status="PASS" starttime="20220707 04:39:00.519" endtime="20220707 04:39:02.629"/>
</kw>
<kw name="Go To Board" library="BoardsPage">
<arg>TestBoard</arg>
<doc>Receives the board name and goes to that board's page.</doc>
<kw name="Format String" library="String">
<var>${locator}</var>
<arg>${BOARD_BUTTON}</arg>
<arg>${board_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 04:39:02.630" level="INFO">${locator} = //div[@title="TestBoard"]</msg>
<status status="PASS" starttime="20220707 04:39:02.629" endtime="20220707 04:39:02.630"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220707 04:39:02.630" endtime="20220707 04:39:05.478"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220707 04:39:05.479" level="INFO">Clicking element '//div[@title="TestBoard"]'.</msg>
<status status="PASS" starttime="20220707 04:39:05.478" endtime="20220707 04:39:05.850"/>
</kw>
<status status="PASS" starttime="20220707 04:39:02.629" endtime="20220707 04:39:05.850"/>
</kw>
<kw name="Create new list with the name" library="ListComponent">
<arg>TO_ARCHIVE</arg>
<doc>Create a new list with the given name</doc>
<kw name="Wait Until Page Contains Element" library="SeleniumLibrary">
<arg>${ADD_LIST_BUTTON}</arg>
<arg>timeout=${DEFAULT_TIMEOUT}s</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" starttime="20220707 04:39:05.851" endtime="20220707 04:39:06.242"/>
</kw>
<kw name="Click Link" library="SeleniumLibrary">
<arg>${ADD_LIST_BUTTON}</arg>
<doc>Clicks a link identified by ``locator``.</doc>
<msg timestamp="20220707 04:39:06.243" level="INFO">Clicking link 'xpath://a[contains(@Class, 'open-add-list')]'.</msg>
<status status="PASS" starttime="20220707 04:39:06.242" endtime="20220707 04:39:06.442"/>
</kw>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LIST_NAME_INPUT}</arg>
<arg>timeout=${DEFAULT_TIMEOUT}s</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220707 04:39:06.442" endtime="20220707 04:39:06.508"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${LIST_NAME_INPUT}</arg>
<arg>${list_name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220707 04:39:06.509" level="INFO">Typing text 'TO_ARCHIVE' into text field 'xpath://input[@class="list-name-input"]'.</msg>
<status status="PASS" starttime="20220707 04:39:06.508" endtime="20220707 04:39:06.639"/>
</kw>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>${LIST_NAME_INPUT}</arg>
<arg>RETURN</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20220707 04:39:06.639" level="INFO">Sending key(s) ('RETURN',) to xpath://input[@class="list-name-input"] element.</msg>
<msg timestamp="20220707 04:39:06.992" level="INFO">Pressing special key RETURN to element.</msg>
<msg timestamp="20220707 04:39:06.992" level="INFO">Releasing special key RETURN.</msg>
<status status="PASS" starttime="20220707 04:39:06.639" endtime="20220707 04:39:07.018"/>
</kw>
<status status="PASS" starttime="20220707 04:39:05.850" endtime="20220707 04:39:07.018"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${DEFAULT_REPEAT}</arg>
<arg>${DEFAULT_INTERVAL} seconds</arg>
<arg>Close a list</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Close a list" library="ListComponent">
<doc>archives a list</doc>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LIST_ACTIONS_BUTTON}</arg>
<arg>timeout=${DEFAULT_TIMEOUT}s</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220707 04:39:07.019" endtime="20220707 04:39:07.066"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${DEFAULT_REPEAT}</arg>
<arg>${DEFAULT_INTERVAL} seconds</arg>
<arg>Click Link</arg>
<arg>${LIST_ACTIONS_BUTTON}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Click Link" library="SeleniumLibrary">
<arg>${LIST_ACTIONS_BUTTON}</arg>
<doc>Clicks a link identified by ``locator``.</doc>
<msg timestamp="20220707 04:39:07.067" level="INFO">Clicking link 'xpath://div[@class='js-list list-wrapper'][last()]//a[@aria-label="List actions"]'.</msg>
<status status="PASS" starttime="20220707 04:39:07.067" endtime="20220707 04:39:07.143"/>
</kw>
<status status="PASS" starttime="20220707 04:39:07.066" endtime="20220707 04:39:07.144"/>
</kw>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${CLOSE_LIST_BUTTON}</arg>
<arg>timeout=${DEFAULT_TIMEOUT}s</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220707 04:39:07.144" endtime="20220707 04:39:07.219"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${DEFAULT_TIMEOUT}</arg>
<arg>${DEFAULT_INTERVAL}</arg>
<arg>Click Link</arg>
<arg>${CLOSE_LIST_BUTTON}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Click Link" library="SeleniumLibrary">
<arg>${CLOSE_LIST_BUTTON}</arg>
<doc>Clicks a link identified by ``locator``.</doc>
<msg timestamp="20220707 04:39:07.220" level="INFO">Clicking link 'xpath://li//a[@class='js-close-list']'.</msg>
<status status="PASS" starttime="20220707 04:39:07.219" endtime="20220707 04:39:07.294"/>
</kw>
<status status="PASS" starttime="20220707 04:39:07.219" endtime="20220707 04:39:07.294"/>
</kw>
<status status="PASS" starttime="20220707 04:39:07.019" endtime="20220707 04:39:07.294"/>
</kw>
<status status="PASS" starttime="20220707 04:39:07.018" endtime="20220707 04:39:07.295"/>
</kw>
<kw name="Enter to the side menu" library="TopBar">
<doc>accesing to the archive menu in the sidebar</doc>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${SHOW_MENU_BUTTON}</arg>
<arg>timeout=${DEFAULT_TIMEOUT}s</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220707 04:39:07.295" endtime="20220707 04:39:07.336"/>
</kw>
<kw name="Click Link" library="SeleniumLibrary">
<arg>${SHOW_MENU_BUTTON}</arg>
<doc>Clicks a link identified by ``locator``.</doc>
<msg timestamp="20220707 04:39:07.336" level="INFO">Clicking link 'xpath://div[contains(@class, 'board-header')]//a[contains(., 'Show menu')]'.</msg>
<status status="PASS" starttime="20220707 04:39:07.336" endtime="20220707 04:39:07.421"/>
</kw>
<status status="PASS" starttime="20220707 04:39:07.295" endtime="20220707 04:39:07.421"/>
</kw>
<kw name="Enter to the list archive" library="ShownMenu">
<doc>accesing to the archive menu in the sidebar</doc>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${MORE_OPTIONS_SIDEBAR}</arg>
<arg>timeout=${DEFAULT_TIMEOUT}s</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220707 04:39:07.422" endtime="20220707 04:39:07.503"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${DEFAULT_TIMEOUT}</arg>
<arg>${DEFAULT_INTERVAL}</arg>
<arg>Click Link</arg>
<arg>${MORE_OPTIONS_SIDEBAR}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Click Link" library="SeleniumLibrary">
<arg>${MORE_OPTIONS_SIDEBAR}</arg>
<doc>Clicks a link identified by ``locator``.</doc>
<msg timestamp="20220707 04:39:07.504" level="INFO">Clicking link 'xpath://a[contains(@class,'board-menu-navigation-item-link') and contains(.,'More')]'.</msg>
<status status="PASS" starttime="20220707 04:39:07.504" endtime="20220707 04:39:07.644"/>
</kw>
<status status="PASS" starttime="20220707 04:39:07.503" endtime="20220707 04:39:07.644"/>
</kw>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${ARCHIVED_ITEMS_BUTTON}</arg>
<arg>timeout=${DEFAULT_TIMEOUT}s</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220707 04:39:07.644" endtime="20220707 04:39:07.688"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${DEFAULT_TIMEOUT}</arg>
<arg>${DEFAULT_INTERVAL}</arg>
<arg>Click Link</arg>
<arg>${ARCHIVED_ITEMS_BUTTON}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Click Link" library="SeleniumLibrary">
<arg>${ARCHIVED_ITEMS_BUTTON}</arg>
<doc>Clicks a link identified by ``locator``.</doc>
<msg timestamp="20220707 04:39:07.689" level="INFO">Clicking link 'xpath://a[contains(@class, 'js-open-archive')]'.</msg>
<status status="PASS" starttime="20220707 04:39:07.689" endtime="20220707 04:39:07.757"/>
</kw>
<status status="PASS" starttime="20220707 04:39:07.688" endtime="20220707 04:39:07.757"/>
</kw>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${SWITCH_TO_LIST_BUTTON}</arg>
<arg>timeout=${DEFAULT_TIMEOUT}s</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220707 04:39:07.757" endtime="20220707 04:39:07.803"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${DEFAULT_TIMEOUT}</arg>
<arg>${DEFAULT_INTERVAL}</arg>
<arg>Click Link</arg>
<arg>${SWITCH_TO_LIST_BUTTON}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Click Link" library="SeleniumLibrary">
<arg>${SWITCH_TO_LIST_BUTTON}</arg>
<doc>Clicks a link identified by ``locator``.</doc>
<msg timestamp="20220707 04:39:07.804" level="INFO">Clicking link 'xpath://div[@class='archive-controls']/a[contains(.,'Switch to lists')]'.</msg>
<status status="PASS" starttime="20220707 04:39:07.804" endtime="20220707 04:39:07.862"/>
</kw>
<status status="PASS" starttime="20220707 04:39:07.803" endtime="20220707 04:39:07.862"/>
</kw>
<status status="PASS" starttime="20220707 04:39:07.422" endtime="20220707 04:39:07.862"/>
</kw>
<kw name="Verify That A List Is In The Archive" library="ShownMenu">
<arg>TO_ARCHIVE</arg>
<doc>Verify that a given header of a list matches</doc>
<kw name="Format String" library="String">
<var>${list_name_locator_archive}</var>
<arg>${ARCHIVED_LIST_NAME_FIELD}</arg>
<arg>archived_list_title=${archived_list_title}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 04:39:07.863" level="INFO">${list_name_locator_archive} = xpath://div[@class='item-name']/span[.='TO_ARCHIVE']</msg>
<status status="PASS" starttime="20220707 04:39:07.863" endtime="20220707 04:39:07.863"/>
</kw>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${list_name_locator_archive}</arg>
<arg>timeout=${DEFAULT_TIMEOUT}s</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220707 04:39:07.863" endtime="20220707 04:39:08.126"/>
</kw>
<kw name="Page Should Contain Element" library="SeleniumLibrary">
<arg>${list_name_locator_archive}</arg>
<doc>Verifies that element ``locator`` is found on the current page.</doc>
<msg timestamp="20220707 04:39:08.166" level="INFO">Current page contains element 'xpath://div[@class='item-name']/span[.='TO_ARCHIVE']'.</msg>
<status status="PASS" starttime="20220707 04:39:08.126" endtime="20220707 04:39:08.166"/>
</kw>
<status status="PASS" starttime="20220707 04:39:07.862" endtime="20220707 04:39:08.167"/>
</kw>
<kw name="Close archive tab" library="ShownMenu">
<doc>close sidebar tab</doc>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${CLOSE_SHOW_MENU}</arg>
<arg>timeout=${DEFAULT_TIMEOUT}s</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220707 04:39:08.167" endtime="20220707 04:39:08.200"/>
</kw>
<kw name="Click Link" library="SeleniumLibrary">
<arg>${CLOSE_SHOW_MENU}</arg>
<doc>Clicks a link identified by ``locator``.</doc>
<msg timestamp="20220707 04:39:08.201" level="INFO">Clicking link 'xpath://a[@title="Close the board menu."]'.</msg>
<status status="PASS" starttime="20220707 04:39:08.200" endtime="20220707 04:39:08.259"/>
</kw>
<status status="PASS" starttime="20220707 04:39:08.167" endtime="20220707 04:39:08.259"/>
</kw>
<kw name="Close Browser" library="SeleniumLibrary" type="TEARDOWN">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20220707 04:39:08.260" endtime="20220707 04:39:08.364"/>
</kw>
<doc>verify that a list can be archived in GUI</doc>
<tag>gui</tag>
<tag>list.archive</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220707 04:38:59.448" endtime="20220707 04:39:08.364"/>
</test>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Teardown Board</arg>
<arg>Delete All Sessions</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Teardown Board">
<doc>Deletes used board for teardown</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${DEFAULT_TIMEOUT}</arg>
<arg>${DEFAULT_INTERVAL}</arg>
<arg>Delete A Board</arg>
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 04:39:08.368" level="INFO">${url} = boards/62c663523913768a5c0d8842</msg>
<status status="PASS" starttime="20220707 04:39:08.368" endtime="20220707 04:39:08.368"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220707 04:39:08.675" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 04:39:08.368" endtime="20220707 04:39:08.675"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 04:39:08.675" endtime="20220707 04:39:08.675"/>
</return>
<msg timestamp="20220707 04:39:08.675" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 04:39:08.367" endtime="20220707 04:39:08.675"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 04:39:08.675" endtime="20220707 04:39:08.675"/>
</return>
<status status="PASS" starttime="20220707 04:39:08.367" endtime="20220707 04:39:08.675"/>
</kw>
<status status="PASS" starttime="20220707 04:39:08.367" endtime="20220707 04:39:08.676"/>
</kw>
<status status="PASS" starttime="20220707 04:39:08.367" endtime="20220707 04:39:08.676"/>
</kw>
<kw name="Delete All Sessions" library="request_own_library">
<status status="PASS" starttime="20220707 04:39:08.676" endtime="20220707 04:39:08.677"/>
</kw>
<status status="PASS" starttime="20220707 04:39:08.366" endtime="20220707 04:39:08.677"/>
</kw>
<doc>List Tests</doc>
<status status="PASS" starttime="20220707 04:38:42.467" endtime="20220707 04:39:08.677"/>
</suite>
<suite id="s1-s1-s5" name="Trello Gui Login" source="/trello/gui/trello_gui_login.robot">
<test id="s1-s1-s5-t1" name="Login With A Valid User and Password" line="7">
<kw name="Open Browser From Environment" library="CommonGUI">
<arg>${LOGIN_URL}</arg>
<doc>This keywords takes REMOTE and BROWSER variables
from the environment automatically and only needs a url</doc>
<if>
<branch type="IF" condition="${is_remote}">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${url}</arg>
<arg>${BROWSER}</arg>
<arg>remote_url=http://selenium-hub:4444</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20220707 04:39:08.686" level="INFO">Opening browser 'chrome' to base url 'https://trello.com/login' through remote server at 'http://selenium-hub:4444'.</msg>
<status status="PASS" starttime="20220707 04:39:08.686" endtime="20220707 04:39:09.657"/>
</kw>
<status status="PASS" starttime="20220707 04:39:08.686" endtime="20220707 04:39:09.657"/>
</branch>
<branch type="ELSE">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${url}</arg>
<arg>${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<status status="NOT RUN" starttime="20220707 04:39:09.657" endtime="20220707 04:39:09.657"/>
</kw>
<status status="NOT RUN" starttime="20220707 04:39:09.657" endtime="20220707 04:39:09.657"/>
</branch>
<status status="PASS" starttime="20220707 04:39:08.686" endtime="20220707 04:39:09.657"/>
</if>
<status status="PASS" starttime="20220707 04:39:08.685" endtime="20220707 04:39:09.657"/>
</kw>
<kw name="Enter Username" library="LoginPage">
<arg>${DEFAULT_EMAIL}</arg>
<doc>Take a username as argument and
enters it in the user_input</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${USER_INPUT}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220707 04:39:09.658" endtime="20220707 04:39:09.704"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${USER_INPUT}</arg>
<arg>${username}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220707 04:39:09.705" level="INFO">Typing text 'bootcamp04@mailinator.com' into text field 'css:input#user'.</msg>
<status status="PASS" starttime="20220707 04:39:09.704" endtime="20220707 04:39:09.802"/>
</kw>
<status status="PASS" starttime="20220707 04:39:09.657" endtime="20220707 04:39:09.802"/>
</kw>
<kw name="Wait Until Element Is Not Visible" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<doc>Waits until the element ``locator`` is not visible.</doc>
<status status="PASS" starttime="20220707 04:39:09.802" endtime="20220707 04:39:10.529"/>
</kw>
<kw name="Click Login Button" library="LoginPage">
<doc>Clicks Trello's login button if in Trello's
login page, else it clicks Atlassian's</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220707 04:39:10.536" level="INFO">${url} = https://trello.com/login</msg>
<status status="PASS" starttime="20220707 04:39:10.529" endtime="20220707 04:39:10.536"/>
</kw>
<if>
<branch type="IF" condition="'${url}' == '${LOGIN_URL}'">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220707 04:39:10.536" endtime="20220707 04:39:10.581"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220707 04:39:10.582" level="INFO">Clicking button 'css:input#login'.</msg>
<status status="PASS" starttime="20220707 04:39:10.581" endtime="20220707 04:39:11.346"/>
</kw>
<status status="PASS" starttime="20220707 04:39:10.536" endtime="20220707 04:39:11.346"/>
</branch>
<branch type="ELSE">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="NOT RUN" starttime="20220707 04:39:11.347" endtime="20220707 04:39:11.347"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<status status="NOT RUN" starttime="20220707 04:39:11.347" endtime="20220707 04:39:11.347"/>
</kw>
<status status="NOT RUN" starttime="20220707 04:39:11.347" endtime="20220707 04:39:11.347"/>
</branch>
<status status="PASS" starttime="20220707 04:39:10.536" endtime="20220707 04:39:11.347"/>
</if>
<status status="PASS" starttime="20220707 04:39:10.529" endtime="20220707 04:39:11.347"/>
</kw>
<kw name="Wait Until Location Is Atlassian's Login" library="LoginPage">
<doc>Waits for the page redirection when logging in.</doc>
<kw name="Wait Until Location Contains" library="SeleniumLibrary">
<arg>atlassian.com</arg>
<doc>Waits until the current URL contains ``expected``.</doc>
<status status="PASS" starttime="20220707 04:39:11.347" endtime="20220707 04:39:11.385"/>
</kw>
<status status="PASS" starttime="20220707 04:39:11.347" endtime="20220707 04:39:11.385"/>
</kw>
<kw name="Enter Password" library="LoginPage">
<arg>${DEFAULT_PASSWORD}</arg>
<doc>Take a password as argument and
enters it in the password_input</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<arg>timeout=${DEFAULT_TIMEOUT}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220707 04:39:11.386" endtime="20220707 04:39:11.420"/>
</kw>
<kw name="Input Password" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<arg>${password}</arg>
<doc>Types the given password into the text field identified by ``locator``.</doc>
<msg timestamp="20220707 04:39:11.420" level="INFO">Typing password into text field 'css:input#password'.</msg>
<msg timestamp="20220707 04:39:11.488" level="INFO">Temporally setting log level to: NONE</msg>
<msg timestamp="20220707 04:39:11.553" level="INFO">Log level changed from NONE to INFO.</msg>
<status status="PASS" starttime="20220707 04:39:11.420" endtime="20220707 04:39:11.554"/>
</kw>
<status status="PASS" starttime="20220707 04:39:11.385" endtime="20220707 04:39:11.554"/>
</kw>
<kw name="Click Login Button" library="LoginPage">
<doc>Clicks Trello's login button if in Trello's
login page, else it clicks Atlassian's</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220707 04:39:11.561" level="INFO">${url} = https://id.atlassian.com/login?application=trello&amp;continue=https%3A%2F%2Ftrello.com%2Fauth%2Fatlassian%2Fcallback%3FreturnUrl%3D%252F%26display%3D%26aaOnboarding%3D%26updateEmail%3D%26traceId%3D62c663...</msg>
<status status="PASS" starttime="20220707 04:39:11.554" endtime="20220707 04:39:11.561"/>
</kw>
<if>
<branch type="IF" condition="'${url}' == '${LOGIN_URL}'">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="NOT RUN" starttime="20220707 04:39:11.561" endtime="20220707 04:39:11.561"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<status status="NOT RUN" starttime="20220707 04:39:11.561" endtime="20220707 04:39:11.561"/>
</kw>
<status status="NOT RUN" starttime="20220707 04:39:11.561" endtime="20220707 04:39:11.561"/>
</branch>
<branch type="ELSE">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220707 04:39:11.561" endtime="20220707 04:39:11.608"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220707 04:39:11.609" level="INFO">Clicking button 'css:button#login-submit'.</msg>
<status status="PASS" starttime="20220707 04:39:11.608" endtime="20220707 04:39:11.705"/>
</kw>
<status status="PASS" starttime="20220707 04:39:11.561" endtime="20220707 04:39:11.705"/>
</branch>
<status status="PASS" starttime="20220707 04:39:11.561" endtime="20220707 04:39:11.705"/>
</if>
<status status="PASS" starttime="20220707 04:39:11.554" endtime="20220707 04:39:11.706"/>
</kw>
<kw name="Verify Current Page Is Boards Page" library="BoardsPage">
<doc>Assert that the browser is showing the boards page.</doc>
<kw name="Wait Until Location Contains" library="SeleniumLibrary">
<arg>${BOARDS_PATH}</arg>
<doc>Waits until the current URL contains ``expected``.</doc>
<status status="PASS" starttime="20220707 04:39:11.706" endtime="20220707 04:39:14.471"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${YOUR_WORKSPACES}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220707 04:39:14.471" endtime="20220707 04:39:14.506"/>
</kw>
<kw name="Element Text Should Be" library="SeleniumLibrary">
<arg>${YOUR_WORKSPACES}</arg>
<arg>YOUR WORKSPACES</arg>
<doc>Verifies that element ``locator`` contains exact the text ``expected``.</doc>
<msg timestamp="20220707 04:39:14.507" level="INFO">Verifying element 'css:h3.boards-page-section-header-name' contains exact text 'YOUR WORKSPACES'.</msg>
<status status="PASS" starttime="20220707 04:39:14.507" endtime="20220707 04:39:14.534"/>
</kw>
<status status="PASS" starttime="20220707 04:39:11.706" endtime="20220707 04:39:14.534"/>
</kw>
<kw name="Close Browser" library="SeleniumLibrary" type="TEARDOWN">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20220707 04:39:14.535" endtime="20220707 04:39:14.621"/>
</kw>
<doc>Verify that it is possible to login through
Trello's GUI using a valid email and password.</doc>
<tag>gui</tag>
<tag>login</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220707 04:39:08.685" endtime="20220707 04:39:14.621"/>
</test>
<doc>Example Trello Login Test</doc>
<status status="PASS" starttime="20220707 04:39:08.679" endtime="20220707 04:39:14.622"/>
</suite>
<status status="PASS" starttime="20220707 04:37:21.584" endtime="20220707 04:39:14.623"/>
</suite>
<status status="PASS" starttime="20220707 04:37:21.567" endtime="20220707 04:39:14.626"/>
</suite>
<statistics>
<total>
<stat pass="15" fail="0" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="1" fail="0" skip="0">board.create</stat>
<stat pass="1" fail="0" skip="0">board.delete</stat>
<stat pass="1" fail="0" skip="0">board.update.description</stat>
<stat pass="1" fail="0" skip="0">board.update.name</stat>
<stat pass="1" fail="0" skip="0">card.comment</stat>
<stat pass="1" fail="0" skip="0">card.create</stat>
<stat pass="1" fail="0" skip="0">card.delete</stat>
<stat pass="1" fail="0" skip="0">card.drag</stat>
<stat pass="1" fail="0" skip="0">card.move</stat>
<stat pass="1" fail="0" skip="0">card.title_board</stat>
<stat pass="15" fail="0" skip="0">gui</stat>
<stat pass="1" fail="0" skip="0">list.archive</stat>
<stat pass="2" fail="0" skip="0">list.create</stat>
<stat pass="1" fail="0" skip="0">list.update</stat>
<stat pass="1" fail="0" skip="0">login</stat>
<stat pass="4" fail="0" skip="0">regression</stat>
<stat pass="11" fail="0" skip="0">smoke</stat>
</tag>
<suite>
<stat pass="15" fail="0" skip="0" id="s1" name="Trello">Trello</stat>
<stat pass="15" fail="0" skip="0" id="s1-s1" name="Gui">Trello.Gui</stat>
<stat pass="4" fail="0" skip="0" id="s1-s1-s1" name="Trello Gui Board">Trello.Gui.Trello Gui Board</stat>
<stat pass="6" fail="0" skip="0" id="s1-s1-s2" name="Trello Gui Cards">Trello.Gui.Trello Gui Cards</stat>
<stat pass="1" fail="0" skip="0" id="s1-s1-s3" name="Trello Gui Labels">Trello.Gui.Trello Gui Labels</stat>
<stat pass="3" fail="0" skip="0" id="s1-s1-s4" name="Trello Gui Lists">Trello.Gui.Trello Gui Lists</stat>
<stat pass="1" fail="0" skip="0" id="s1-s1-s5" name="Trello Gui Login">Trello.Gui.Trello Gui Login</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
