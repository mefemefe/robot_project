<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 5.0.1 (Python 3.10.5 on linux)" generated="20220707 04:36:34.554" rpa="false" schemaversion="3">
<suite id="s1" name="Trello" source="/trello">
<suite id="s1-s1" name="Api" source="/trello/api">
<suite id="s1-s1-s1" name="Trello Api Boards Tests" source="/trello/api/trello_api_boards_tests.robot">
<kw name="Create Trello Session" library="TrelloAPI" type="SETUP">
<doc>Creates a Trello Session</doc>
<kw name="Create Session" library="request_own_library">
<arg>${API_BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<status status="PASS" starttime="20220707 04:36:34.676" endtime="20220707 04:36:34.676"/>
</kw>
<status status="PASS" starttime="20220707 04:36:34.675" endtime="20220707 04:36:34.677"/>
</kw>
<test id="s1-s1-s1-t1" name="CREATE a board" line="9">
<kw name="Create A Board" library="Board">
<var>${response}</var>
<arg>NewBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220707 04:36:34.678" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220707 04:36:34.678" endtime="20220707 04:36:34.678"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220707 04:36:34.678" endtime="20220707 04:36:34.679"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 04:36:34.679" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220707 04:36:34.679" endtime="20220707 04:36:34.679"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220707 04:36:34.919" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 04:36:34.680" endtime="20220707 04:36:34.920"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 04:36:34.920" endtime="20220707 04:36:34.920"/>
</return>
<msg timestamp="20220707 04:36:34.920" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 04:36:34.678" endtime="20220707 04:36:34.920"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 04:36:34.920" endtime="20220707 04:36:34.920"/>
</return>
<msg timestamp="20220707 04:36:34.920" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 04:36:34.677" endtime="20220707 04:36:34.920"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>board</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220707 04:36:34.921" endtime="20220707 04:36:34.926"/>
</kw>
<status status="PASS" starttime="20220707 04:36:34.920" endtime="20220707 04:36:34.926"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${response.json()}[id]</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${response.json()}[id]</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 04:36:34.928" level="INFO">${url} = boards/62c662d2977509490cc0c7d7</msg>
<status status="PASS" starttime="20220707 04:36:34.928" endtime="20220707 04:36:34.929"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220707 04:36:35.232" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 04:36:34.929" endtime="20220707 04:36:35.232"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 04:36:35.232" endtime="20220707 04:36:35.232"/>
</return>
<msg timestamp="20220707 04:36:35.232" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 04:36:34.928" endtime="20220707 04:36:35.232"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 04:36:35.232" endtime="20220707 04:36:35.232"/>
</return>
<status status="PASS" starttime="20220707 04:36:34.927" endtime="20220707 04:36:35.232"/>
</kw>
<status status="PASS" starttime="20220707 04:36:34.927" endtime="20220707 04:36:35.232"/>
</kw>
<doc>Verify that a board can be create through API</doc>
<tag>api</tag>
<tag>board.create</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220707 04:36:34.677" endtime="20220707 04:36:35.232"/>
</test>
<test id="s1-s1-s1-t2" name="UPDATE a Board's name" line="16">
<kw name="Create A Board" library="Board">
<var>${response}</var>
<arg>NewBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220707 04:36:35.235" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220707 04:36:35.235" endtime="20220707 04:36:35.235"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220707 04:36:35.235" endtime="20220707 04:36:35.235"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 04:36:35.236" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220707 04:36:35.235" endtime="20220707 04:36:35.236"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220707 04:36:35.422" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 04:36:35.236" endtime="20220707 04:36:35.422"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 04:36:35.422" endtime="20220707 04:36:35.422"/>
</return>
<msg timestamp="20220707 04:36:35.422" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 04:36:35.234" endtime="20220707 04:36:35.422"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 04:36:35.422" endtime="20220707 04:36:35.422"/>
</return>
<msg timestamp="20220707 04:36:35.423" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 04:36:35.234" endtime="20220707 04:36:35.423"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>board</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220707 04:36:35.423" endtime="20220707 04:36:35.428"/>
</kw>
<status status="PASS" starttime="20220707 04:36:35.423" endtime="20220707 04:36:35.428"/>
</kw>
<kw name="Update A Board" library="Board">
<arg>${response.json()}[id]</arg>
<arg>name</arg>
<arg>NewName</arg>
<doc>Updates the board with the given ID
optional_args: name, desc, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220707 04:36:35.429" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220707 04:36:35.429" endtime="20220707 04:36:35.429"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220707 04:36:35.430" endtime="20220707 04:36:35.430"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 04:36:35.430" level="INFO">${url} = boards/62c662d35b278f4c5cba32a5</msg>
<status status="PASS" starttime="20220707 04:36:35.430" endtime="20220707 04:36:35.430"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220707 04:36:35.517" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 04:36:35.430" endtime="20220707 04:36:35.517"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 04:36:35.517" endtime="20220707 04:36:35.517"/>
</return>
<msg timestamp="20220707 04:36:35.518" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 04:36:35.429" endtime="20220707 04:36:35.518"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 04:36:35.518" endtime="20220707 04:36:35.518"/>
</return>
<status status="PASS" starttime="20220707 04:36:35.428" endtime="20220707 04:36:35.518"/>
</kw>
<kw name="Get A Board" library="Board">
<var>${new_response}</var>
<arg>${response.json()}[id]</arg>
<doc>Gets the Board with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 04:36:35.520" level="INFO">${url} = boards/62c662d35b278f4c5cba32a5</msg>
<status status="PASS" starttime="20220707 04:36:35.519" endtime="20220707 04:36:35.520"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220707 04:36:35.579" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 04:36:35.520" endtime="20220707 04:36:35.579"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 04:36:35.579" endtime="20220707 04:36:35.579"/>
</return>
<msg timestamp="20220707 04:36:35.579" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 04:36:35.519" endtime="20220707 04:36:35.579"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 04:36:35.579" endtime="20220707 04:36:35.579"/>
</return>
<msg timestamp="20220707 04:36:35.579" level="INFO">${new_response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 04:36:35.518" endtime="20220707 04:36:35.580"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${new_response}</arg>
<arg>board</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220707 04:36:35.580" endtime="20220707 04:36:35.584"/>
</kw>
<status status="PASS" starttime="20220707 04:36:35.580" endtime="20220707 04:36:35.584"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${new_response.json()}[name]</arg>
<arg>NewName</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220707 04:36:35.584" endtime="20220707 04:36:35.585"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${response.json()}[id]</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${response.json()}[id]</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 04:36:35.587" level="INFO">${url} = boards/62c662d35b278f4c5cba32a5</msg>
<status status="PASS" starttime="20220707 04:36:35.586" endtime="20220707 04:36:35.587"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220707 04:36:35.882" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 04:36:35.587" endtime="20220707 04:36:35.882"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 04:36:35.882" endtime="20220707 04:36:35.882"/>
</return>
<msg timestamp="20220707 04:36:35.883" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 04:36:35.586" endtime="20220707 04:36:35.883"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 04:36:35.883" endtime="20220707 04:36:35.883"/>
</return>
<status status="PASS" starttime="20220707 04:36:35.585" endtime="20220707 04:36:35.883"/>
</kw>
<status status="PASS" starttime="20220707 04:36:35.585" endtime="20220707 04:36:35.883"/>
</kw>
<doc>Verify that a board's name can be updated through API</doc>
<tag>api</tag>
<tag>board.update</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220707 04:36:35.233" endtime="20220707 04:36:35.883"/>
</test>
<test id="s1-s1-s1-t3" name="DELETE A Board" line="27">
<kw name="Create A Board" library="Board">
<var>${response}</var>
<arg>NewBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220707 04:36:35.885" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220707 04:36:35.885" endtime="20220707 04:36:35.885"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220707 04:36:35.885" endtime="20220707 04:36:35.886"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 04:36:35.886" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220707 04:36:35.886" endtime="20220707 04:36:35.887"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220707 04:36:36.055" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 04:36:35.887" endtime="20220707 04:36:36.055"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 04:36:36.055" endtime="20220707 04:36:36.055"/>
</return>
<msg timestamp="20220707 04:36:36.055" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 04:36:35.885" endtime="20220707 04:36:36.055"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 04:36:36.055" endtime="20220707 04:36:36.055"/>
</return>
<msg timestamp="20220707 04:36:36.056" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 04:36:35.884" endtime="20220707 04:36:36.056"/>
</kw>
<kw name="Delete A Board" library="Board">
<arg>${response.json()}[id]</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 04:36:36.058" level="INFO">${url} = boards/62c662d39a098c5fafe64788</msg>
<status status="PASS" starttime="20220707 04:36:36.057" endtime="20220707 04:36:36.058"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220707 04:36:36.365" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 04:36:36.058" endtime="20220707 04:36:36.365"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 04:36:36.365" endtime="20220707 04:36:36.365"/>
</return>
<msg timestamp="20220707 04:36:36.366" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 04:36:36.057" endtime="20220707 04:36:36.366"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 04:36:36.366" endtime="20220707 04:36:36.366"/>
</return>
<status status="PASS" starttime="20220707 04:36:36.056" endtime="20220707 04:36:36.366"/>
</kw>
<kw name="Get A Board" library="Board">
<arg>${response.json()}[id]</arg>
<arg>status_code=404</arg>
<doc>Gets the Board with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 04:36:36.368" level="INFO">${url} = boards/62c662d39a098c5fafe64788</msg>
<status status="PASS" starttime="20220707 04:36:36.367" endtime="20220707 04:36:36.368"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220707 04:36:36.403" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220707 04:36:36.368" endtime="20220707 04:36:36.403"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 04:36:36.403" endtime="20220707 04:36:36.403"/>
</return>
<msg timestamp="20220707 04:36:36.403" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220707 04:36:36.367" endtime="20220707 04:36:36.403"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 04:36:36.403" endtime="20220707 04:36:36.403"/>
</return>
<status status="PASS" starttime="20220707 04:36:36.366" endtime="20220707 04:36:36.404"/>
</kw>
<doc>Verify that a board can be deleted through API</doc>
<tag>api</tag>
<tag>board.delete</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220707 04:36:35.884" endtime="20220707 04:36:36.404"/>
</test>
<test id="s1-s1-s1-t4" name="GET Information of A Board" line="34">
<kw name="Create A Board" library="Board">
<var>${response}</var>
<arg>BoardTest</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220707 04:36:36.406" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220707 04:36:36.405" endtime="20220707 04:36:36.406"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220707 04:36:36.406" endtime="20220707 04:36:36.406"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 04:36:36.407" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220707 04:36:36.406" endtime="20220707 04:36:36.407"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220707 04:36:36.567" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 04:36:36.407" endtime="20220707 04:36:36.567"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 04:36:36.567" endtime="20220707 04:36:36.567"/>
</return>
<msg timestamp="20220707 04:36:36.567" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 04:36:36.405" endtime="20220707 04:36:36.567"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 04:36:36.567" endtime="20220707 04:36:36.567"/>
</return>
<msg timestamp="20220707 04:36:36.568" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 04:36:36.405" endtime="20220707 04:36:36.568"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>board</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220707 04:36:36.568" endtime="20220707 04:36:36.572"/>
</kw>
<status status="PASS" starttime="20220707 04:36:36.568" endtime="20220707 04:36:36.573"/>
</kw>
<kw name="Get A Board" library="Board">
<var>${response2}</var>
<arg>${response.json()}[id]</arg>
<doc>Gets the Board with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 04:36:36.574" level="INFO">${url} = boards/62c662d4e4eed1474b1d76c9</msg>
<status status="PASS" starttime="20220707 04:36:36.574" endtime="20220707 04:36:36.574"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220707 04:36:36.620" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 04:36:36.575" endtime="20220707 04:36:36.620"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 04:36:36.620" endtime="20220707 04:36:36.620"/>
</return>
<msg timestamp="20220707 04:36:36.620" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 04:36:36.574" endtime="20220707 04:36:36.620"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 04:36:36.620" endtime="20220707 04:36:36.620"/>
</return>
<msg timestamp="20220707 04:36:36.620" level="INFO">${response2} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 04:36:36.573" endtime="20220707 04:36:36.620"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response2}</arg>
<arg>board</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220707 04:36:36.621" endtime="20220707 04:36:36.625"/>
</kw>
<status status="PASS" starttime="20220707 04:36:36.620" endtime="20220707 04:36:36.625"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${response2.json()}[name]</arg>
<arg>BoardTest</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220707 04:36:36.625" endtime="20220707 04:36:36.626"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${response.json()}[id]</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${response.json()}[id]</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 04:36:36.628" level="INFO">${url} = boards/62c662d4e4eed1474b1d76c9</msg>
<status status="PASS" starttime="20220707 04:36:36.628" endtime="20220707 04:36:36.628"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220707 04:36:36.941" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 04:36:36.628" endtime="20220707 04:36:36.942"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 04:36:36.942" endtime="20220707 04:36:36.942"/>
</return>
<msg timestamp="20220707 04:36:36.942" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 04:36:36.627" endtime="20220707 04:36:36.942"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 04:36:36.942" endtime="20220707 04:36:36.942"/>
</return>
<status status="PASS" starttime="20220707 04:36:36.626" endtime="20220707 04:36:36.942"/>
</kw>
<status status="PASS" starttime="20220707 04:36:36.626" endtime="20220707 04:36:36.942"/>
</kw>
<doc>Verify that a board's information can be accesed through API</doc>
<tag>api</tag>
<tag>board.get</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220707 04:36:36.404" endtime="20220707 04:36:36.943"/>
</test>
<test id="s1-s1-s1-t5" name="UPDATE a Board's description" line="45">
<kw name="Create A Board" library="Board">
<var>${response}</var>
<arg>NewBoardForTest</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220707 04:36:36.945" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220707 04:36:36.944" endtime="20220707 04:36:36.945"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220707 04:36:36.945" endtime="20220707 04:36:36.945"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 04:36:36.946" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220707 04:36:36.945" endtime="20220707 04:36:36.946"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220707 04:36:37.099" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 04:36:36.946" endtime="20220707 04:36:37.099"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 04:36:37.099" endtime="20220707 04:36:37.099"/>
</return>
<msg timestamp="20220707 04:36:37.099" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 04:36:36.944" endtime="20220707 04:36:37.099"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 04:36:37.099" endtime="20220707 04:36:37.099"/>
</return>
<msg timestamp="20220707 04:36:37.099" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 04:36:36.943" endtime="20220707 04:36:37.099"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>board</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220707 04:36:37.100" endtime="20220707 04:36:37.104"/>
</kw>
<status status="PASS" starttime="20220707 04:36:37.099" endtime="20220707 04:36:37.104"/>
</kw>
<kw name="Update A Board" library="Board">
<arg>${response.json()}[id]</arg>
<arg>desc</arg>
<arg>sampleDescription</arg>
<doc>Updates the board with the given ID
optional_args: name, desc, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220707 04:36:37.106" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220707 04:36:37.106" endtime="20220707 04:36:37.106"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220707 04:36:37.106" endtime="20220707 04:36:37.106"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 04:36:37.107" level="INFO">${url} = boards/62c662d481348c5b0ea7a8c8</msg>
<status status="PASS" starttime="20220707 04:36:37.107" endtime="20220707 04:36:37.107"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220707 04:36:37.205" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 04:36:37.107" endtime="20220707 04:36:37.205"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 04:36:37.205" endtime="20220707 04:36:37.205"/>
</return>
<msg timestamp="20220707 04:36:37.205" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 04:36:37.105" endtime="20220707 04:36:37.205"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 04:36:37.205" endtime="20220707 04:36:37.205"/>
</return>
<status status="PASS" starttime="20220707 04:36:37.105" endtime="20220707 04:36:37.205"/>
</kw>
<kw name="Get A Board" library="Board">
<var>${new_response}</var>
<arg>${response.json()}[id]</arg>
<doc>Gets the Board with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 04:36:37.207" level="INFO">${url} = boards/62c662d481348c5b0ea7a8c8</msg>
<status status="PASS" starttime="20220707 04:36:37.207" endtime="20220707 04:36:37.207"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220707 04:36:37.248" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 04:36:37.207" endtime="20220707 04:36:37.248"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 04:36:37.248" endtime="20220707 04:36:37.248"/>
</return>
<msg timestamp="20220707 04:36:37.248" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 04:36:37.206" endtime="20220707 04:36:37.248"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 04:36:37.248" endtime="20220707 04:36:37.248"/>
</return>
<msg timestamp="20220707 04:36:37.248" level="INFO">${new_response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 04:36:37.205" endtime="20220707 04:36:37.248"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${new_response.json()}[desc]</arg>
<arg>sampleDescription</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220707 04:36:37.248" endtime="20220707 04:36:37.249"/>
</kw>
<kw name="Update A Board" library="Board">
<arg>${response.json()}[id]</arg>
<arg>desc</arg>
<arg>updatedDescription</arg>
<doc>Updates the board with the given ID
optional_args: name, desc, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220707 04:36:37.251" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220707 04:36:37.251" endtime="20220707 04:36:37.251"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220707 04:36:37.251" endtime="20220707 04:36:37.251"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 04:36:37.251" level="INFO">${url} = boards/62c662d481348c5b0ea7a8c8</msg>
<status status="PASS" starttime="20220707 04:36:37.251" endtime="20220707 04:36:37.251"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220707 04:36:37.338" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 04:36:37.252" endtime="20220707 04:36:37.339"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 04:36:37.339" endtime="20220707 04:36:37.339"/>
</return>
<msg timestamp="20220707 04:36:37.339" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 04:36:37.250" endtime="20220707 04:36:37.339"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 04:36:37.339" endtime="20220707 04:36:37.339"/>
</return>
<status status="PASS" starttime="20220707 04:36:37.249" endtime="20220707 04:36:37.339"/>
</kw>
<kw name="Get A Board" library="Board">
<var>${new_response2}</var>
<arg>${response.json()}[id]</arg>
<doc>Gets the Board with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 04:36:37.341" level="INFO">${url} = boards/62c662d481348c5b0ea7a8c8</msg>
<status status="PASS" starttime="20220707 04:36:37.341" endtime="20220707 04:36:37.341"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220707 04:36:37.384" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 04:36:37.341" endtime="20220707 04:36:37.384"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 04:36:37.384" endtime="20220707 04:36:37.384"/>
</return>
<msg timestamp="20220707 04:36:37.384" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 04:36:37.340" endtime="20220707 04:36:37.385"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 04:36:37.385" endtime="20220707 04:36:37.385"/>
</return>
<msg timestamp="20220707 04:36:37.385" level="INFO">${new_response2} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 04:36:37.339" endtime="20220707 04:36:37.385"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${new_response2.json()}[desc]</arg>
<arg>updatedDescription</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220707 04:36:37.385" endtime="20220707 04:36:37.386"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${response.json()}[id]</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${response.json()}[id]</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 04:36:37.388" level="INFO">${url} = boards/62c662d481348c5b0ea7a8c8</msg>
<status status="PASS" starttime="20220707 04:36:37.388" endtime="20220707 04:36:37.388"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220707 04:36:37.723" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 04:36:37.388" endtime="20220707 04:36:37.723"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 04:36:37.723" endtime="20220707 04:36:37.723"/>
</return>
<msg timestamp="20220707 04:36:37.723" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 04:36:37.387" endtime="20220707 04:36:37.723"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 04:36:37.723" endtime="20220707 04:36:37.723"/>
</return>
<status status="PASS" starttime="20220707 04:36:37.386" endtime="20220707 04:36:37.724"/>
</kw>
<status status="PASS" starttime="20220707 04:36:37.386" endtime="20220707 04:36:37.724"/>
</kw>
<doc>Verify that a board's description can be updated through API</doc>
<tag>api</tag>
<tag>board.update</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220707 04:36:36.943" endtime="20220707 04:36:37.724"/>
</test>
<kw name="Delete All Sessions" library="request_own_library" type="TEARDOWN">
<status status="PASS" starttime="20220707 04:36:37.725" endtime="20220707 04:36:37.726"/>
</kw>
<doc>Example Test with Trello API Boards</doc>
<status status="PASS" starttime="20220707 04:36:34.573" endtime="20220707 04:36:37.726"/>
</suite>
<suite id="s1-s1-s2" name="Trello Api Cards Tests" source="/trello/api/trello_api_cards_tests.robot">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Create Trello Session</arg>
<arg>Setup Board And List</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Create Trello Session" library="TrelloAPI">
<doc>Creates a Trello Session</doc>
<kw name="Create Session" library="request_own_library">
<arg>${API_BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<status status="PASS" starttime="20220707 04:36:37.737" endtime="20220707 04:36:37.737"/>
</kw>
<status status="PASS" starttime="20220707 04:36:37.736" endtime="20220707 04:36:37.737"/>
</kw>
<kw name="Setup Board And List">
<doc>Create a board and save its ID and its first list's ID</doc>
<kw name="Create A Board" library="Board">
<var>${BOARD}</var>
<arg>TestBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220707 04:36:37.738" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220707 04:36:37.738" endtime="20220707 04:36:37.738"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220707 04:36:37.738" endtime="20220707 04:36:37.738"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 04:36:37.739" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220707 04:36:37.738" endtime="20220707 04:36:37.739"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220707 04:36:37.911" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 04:36:37.739" endtime="20220707 04:36:37.911"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 04:36:37.911" endtime="20220707 04:36:37.912"/>
</return>
<msg timestamp="20220707 04:36:37.912" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 04:36:37.737" endtime="20220707 04:36:37.912"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 04:36:37.912" endtime="20220707 04:36:37.912"/>
</return>
<msg timestamp="20220707 04:36:37.912" level="INFO">${BOARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 04:36:37.737" endtime="20220707 04:36:37.912"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_BOARD_ID}</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220707 04:36:37.913" level="INFO">${TEST_SUITE_BOARD_ID} = 62c662d53f61fa8f8fcd5efd</msg>
<status status="PASS" starttime="20220707 04:36:37.912" endtime="20220707 04:36:37.913"/>
</kw>
<kw name="Get Lists On A Board" library="Board">
<var>${LISTS}</var>
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Get all the lists in a board</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>lists_on_board</arg>
<arg>${id}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 04:36:37.914" level="INFO">${url} = boards/62c662d53f61fa8f8fcd5efd/lists/</msg>
<status status="PASS" starttime="20220707 04:36:37.914" endtime="20220707 04:36:37.914"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220707 04:36:37.953" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 04:36:37.914" endtime="20220707 04:36:37.953"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 04:36:37.953" endtime="20220707 04:36:37.953"/>
</return>
<msg timestamp="20220707 04:36:37.953" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 04:36:37.914" endtime="20220707 04:36:37.953"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 04:36:37.953" endtime="20220707 04:36:37.953"/>
</return>
<msg timestamp="20220707 04:36:37.954" level="INFO">${LISTS} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 04:36:37.913" endtime="20220707 04:36:37.954"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_LIST_ID}</arg>
<arg>${LISTS.json()}[0][id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220707 04:36:37.955" level="INFO">${TEST_SUITE_LIST_ID} = 62c662d53f61fa8f8fcd5f04</msg>
<status status="PASS" starttime="20220707 04:36:37.954" endtime="20220707 04:36:37.955"/>
</kw>
<status status="PASS" starttime="20220707 04:36:37.737" endtime="20220707 04:36:37.955"/>
</kw>
<status status="PASS" starttime="20220707 04:36:37.736" endtime="20220707 04:36:37.955"/>
</kw>
<test id="s1-s1-s2-t1" name="Verify A Card Can Be Created" line="13">
<kw name="Create A Card" library="Card">
<var>${response}</var>
<arg>name</arg>
<arg>RFCard2</arg>
<doc>Creates a new card in the given list.
required_args: listId
optional_args: name, desc, pos, idCardSource, idLabels, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>@{optional_args}</arg>
<arg>idList</arg>
<arg>${idList}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220707 04:36:37.957" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220707 04:36:37.957" endtime="20220707 04:36:37.957"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220707 04:36:37.957" endtime="20220707 04:36:37.957"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 04:36:37.958" level="INFO">${url} = cards/</msg>
<status status="PASS" starttime="20220707 04:36:37.957" endtime="20220707 04:36:37.958"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220707 04:36:38.142" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 04:36:37.958" endtime="20220707 04:36:38.142"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 04:36:38.142" endtime="20220707 04:36:38.142"/>
</return>
<msg timestamp="20220707 04:36:38.142" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 04:36:37.956" endtime="20220707 04:36:38.142"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 04:36:38.142" endtime="20220707 04:36:38.142"/>
</return>
<msg timestamp="20220707 04:36:38.142" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 04:36:37.956" endtime="20220707 04:36:38.143"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>card</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220707 04:36:38.143" endtime="20220707 04:36:38.148"/>
</kw>
<status status="PASS" starttime="20220707 04:36:38.143" endtime="20220707 04:36:38.148"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220707 04:36:38.148" endtime="20220707 04:36:38.148"/>
</return>
<msg timestamp="20220707 04:36:38.149" level="INFO">${CARD_ID} = 62c662d69ff02a7dc7f85e9a</msg>
<status status="PASS" starttime="20220707 04:36:38.148" endtime="20220707 04:36:38.149"/>
</kw>
<kw name="Get A Card" library="Card">
<var>${response}</var>
<arg>${CARD_ID}</arg>
<doc>Gets the card with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 04:36:38.150" level="INFO">${url} = cards/62c662d69ff02a7dc7f85e9a</msg>
<status status="PASS" starttime="20220707 04:36:38.150" endtime="20220707 04:36:38.150"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220707 04:36:38.241" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 04:36:38.150" endtime="20220707 04:36:38.241"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 04:36:38.241" endtime="20220707 04:36:38.241"/>
</return>
<msg timestamp="20220707 04:36:38.241" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 04:36:38.149" endtime="20220707 04:36:38.241"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 04:36:38.241" endtime="20220707 04:36:38.241"/>
</return>
<msg timestamp="20220707 04:36:38.241" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 04:36:38.149" endtime="20220707 04:36:38.241"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_NAME}</var>
<arg>${response}</arg>
<arg>name</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220707 04:36:38.242" endtime="20220707 04:36:38.242"/>
</return>
<msg timestamp="20220707 04:36:38.243" level="INFO">${CARD_NAME} = RFCard2</msg>
<status status="PASS" starttime="20220707 04:36:38.241" endtime="20220707 04:36:38.243"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${CARD_NAME}</arg>
<arg>RFCard2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220707 04:36:38.243" endtime="20220707 04:36:38.243"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Card</arg>
<arg>${CARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Card" library="Card">
<arg>${CARD_ID}</arg>
<doc>Deletes the card with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 04:36:38.245" level="INFO">${url} = cards/62c662d69ff02a7dc7f85e9a</msg>
<status status="PASS" starttime="20220707 04:36:38.244" endtime="20220707 04:36:38.245"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220707 04:36:38.381" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 04:36:38.245" endtime="20220707 04:36:38.381"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 04:36:38.381" endtime="20220707 04:36:38.381"/>
</return>
<msg timestamp="20220707 04:36:38.381" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 04:36:38.244" endtime="20220707 04:36:38.381"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 04:36:38.381" endtime="20220707 04:36:38.381"/>
</return>
<status status="PASS" starttime="20220707 04:36:38.244" endtime="20220707 04:36:38.381"/>
</kw>
<status status="PASS" starttime="20220707 04:36:38.243" endtime="20220707 04:36:38.381"/>
</kw>
<doc>Verify that a card can be created through API</doc>
<tag>api</tag>
<tag>card.create</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220707 04:36:37.955" endtime="20220707 04:36:38.382"/>
</test>
<test id="s1-s1-s2-t2" name="Verify A Card Can Be Closed" line="24">
<kw name="Create A Card" library="Card">
<var>${response}</var>
<doc>Creates a new card in the given list.
required_args: listId
optional_args: name, desc, pos, idCardSource, idLabels, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>@{optional_args}</arg>
<arg>idList</arg>
<arg>${idList}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220707 04:36:38.384" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220707 04:36:38.384" endtime="20220707 04:36:38.384"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220707 04:36:38.384" endtime="20220707 04:36:38.385"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 04:36:38.385" level="INFO">${url} = cards/</msg>
<status status="PASS" starttime="20220707 04:36:38.385" endtime="20220707 04:36:38.386"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220707 04:36:38.508" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 04:36:38.386" endtime="20220707 04:36:38.508"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 04:36:38.508" endtime="20220707 04:36:38.508"/>
</return>
<msg timestamp="20220707 04:36:38.508" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 04:36:38.383" endtime="20220707 04:36:38.508"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 04:36:38.508" endtime="20220707 04:36:38.508"/>
</return>
<msg timestamp="20220707 04:36:38.508" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 04:36:38.383" endtime="20220707 04:36:38.508"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220707 04:36:38.509" endtime="20220707 04:36:38.509"/>
</return>
<msg timestamp="20220707 04:36:38.510" level="INFO">${CARD_ID} = 62c662d6892faf2e9121a470</msg>
<status status="PASS" starttime="20220707 04:36:38.509" endtime="20220707 04:36:38.510"/>
</kw>
<kw name="Archive A Card" library="Card">
<arg>${CARD_ID}</arg>
<doc>Modifies the card status to closed.</doc>
<kw name="Update A Card" library="Card">
<var>${response}</var>
<arg>${id}</arg>
<arg>closed</arg>
<arg>true</arg>
<arg>status_code=${status_code}</arg>
<doc>Updates the card with the given ID
optional_args: name, desc, closed, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<arg>status_code=${status_code}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220707 04:36:38.512" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220707 04:36:38.511" endtime="20220707 04:36:38.512"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220707 04:36:38.512" endtime="20220707 04:36:38.512"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 04:36:38.512" level="INFO">${url} = cards/62c662d6892faf2e9121a470</msg>
<status status="PASS" starttime="20220707 04:36:38.512" endtime="20220707 04:36:38.512"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220707 04:36:38.681" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 04:36:38.512" endtime="20220707 04:36:38.681"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 04:36:38.681" endtime="20220707 04:36:38.681"/>
</return>
<msg timestamp="20220707 04:36:38.681" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 04:36:38.511" endtime="20220707 04:36:38.681"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 04:36:38.681" endtime="20220707 04:36:38.681"/>
</return>
<msg timestamp="20220707 04:36:38.681" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 04:36:38.510" endtime="20220707 04:36:38.681"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 04:36:38.681" endtime="20220707 04:36:38.681"/>
</return>
<status status="PASS" starttime="20220707 04:36:38.510" endtime="20220707 04:36:38.681"/>
</kw>
<kw name="Get A Card" library="Card">
<var>${response}</var>
<arg>${CARD_ID}</arg>
<doc>Gets the card with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 04:36:38.683" level="INFO">${url} = cards/62c662d6892faf2e9121a470</msg>
<status status="PASS" starttime="20220707 04:36:38.683" endtime="20220707 04:36:38.683"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220707 04:36:38.738" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 04:36:38.683" endtime="20220707 04:36:38.738"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 04:36:38.738" endtime="20220707 04:36:38.738"/>
</return>
<msg timestamp="20220707 04:36:38.738" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 04:36:38.682" endtime="20220707 04:36:38.738"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 04:36:38.738" endtime="20220707 04:36:38.738"/>
</return>
<msg timestamp="20220707 04:36:38.738" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 04:36:38.682" endtime="20220707 04:36:38.738"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_CLOSED}</var>
<arg>${response}</arg>
<arg>closed</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220707 04:36:38.739" endtime="20220707 04:36:38.739"/>
</return>
<msg timestamp="20220707 04:36:38.740" level="INFO">${CARD_CLOSED} = True</msg>
<status status="PASS" starttime="20220707 04:36:38.738" endtime="20220707 04:36:38.740"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${CARD_CLOSED}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220707 04:36:38.740" endtime="20220707 04:36:38.740"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Card</arg>
<arg>${CARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Card" library="Card">
<arg>${CARD_ID}</arg>
<doc>Deletes the card with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 04:36:38.742" level="INFO">${url} = cards/62c662d6892faf2e9121a470</msg>
<status status="PASS" starttime="20220707 04:36:38.741" endtime="20220707 04:36:38.742"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220707 04:36:38.873" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 04:36:38.742" endtime="20220707 04:36:38.874"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 04:36:38.874" endtime="20220707 04:36:38.874"/>
</return>
<msg timestamp="20220707 04:36:38.874" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 04:36:38.741" endtime="20220707 04:36:38.874"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 04:36:38.874" endtime="20220707 04:36:38.874"/>
</return>
<status status="PASS" starttime="20220707 04:36:38.740" endtime="20220707 04:36:38.874"/>
</kw>
<status status="PASS" starttime="20220707 04:36:38.740" endtime="20220707 04:36:38.874"/>
</kw>
<doc>Verify that a card can be closed through API</doc>
<tag>api</tag>
<tag>card.close</tag>
<tag>regression</tag>
<status status="PASS" starttime="20220707 04:36:38.382" endtime="20220707 04:36:38.874"/>
</test>
<test id="s1-s1-s2-t3" name="Verify A Card Can Be Deleted" line="35">
<kw name="Create A Card" library="Card">
<var>${response}</var>
<doc>Creates a new card in the given list.
required_args: listId
optional_args: name, desc, pos, idCardSource, idLabels, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>@{optional_args}</arg>
<arg>idList</arg>
<arg>${idList}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220707 04:36:38.877" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220707 04:36:38.876" endtime="20220707 04:36:38.877"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220707 04:36:38.877" endtime="20220707 04:36:38.877"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 04:36:38.878" level="INFO">${url} = cards/</msg>
<status status="PASS" starttime="20220707 04:36:38.877" endtime="20220707 04:36:38.878"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220707 04:36:39.013" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 04:36:38.878" endtime="20220707 04:36:39.013"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 04:36:39.013" endtime="20220707 04:36:39.013"/>
</return>
<msg timestamp="20220707 04:36:39.013" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 04:36:38.875" endtime="20220707 04:36:39.013"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 04:36:39.013" endtime="20220707 04:36:39.013"/>
</return>
<msg timestamp="20220707 04:36:39.013" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 04:36:38.875" endtime="20220707 04:36:39.013"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220707 04:36:39.014" endtime="20220707 04:36:39.014"/>
</return>
<msg timestamp="20220707 04:36:39.015" level="INFO">${CARD_ID} = 62c662d609b6161994f8a91d</msg>
<status status="PASS" starttime="20220707 04:36:39.014" endtime="20220707 04:36:39.015"/>
</kw>
<kw name="Delete A Card" library="Card">
<var>${response}</var>
<arg>${CARD_ID}</arg>
<doc>Deletes the card with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 04:36:39.016" level="INFO">${url} = cards/62c662d609b6161994f8a91d</msg>
<status status="PASS" starttime="20220707 04:36:39.016" endtime="20220707 04:36:39.016"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220707 04:36:39.171" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 04:36:39.016" endtime="20220707 04:36:39.171"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 04:36:39.171" endtime="20220707 04:36:39.171"/>
</return>
<msg timestamp="20220707 04:36:39.172" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 04:36:39.015" endtime="20220707 04:36:39.172"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 04:36:39.172" endtime="20220707 04:36:39.172"/>
</return>
<msg timestamp="20220707 04:36:39.172" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 04:36:39.015" endtime="20220707 04:36:39.172"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>delete</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220707 04:36:39.173" endtime="20220707 04:36:39.174"/>
</kw>
<status status="PASS" starttime="20220707 04:36:39.172" endtime="20220707 04:36:39.175"/>
</kw>
<kw name="Get A Card" library="Card">
<arg>${CARD_ID}</arg>
<arg>status_code=404</arg>
<doc>Gets the card with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 04:36:39.176" level="INFO">${url} = cards/62c662d609b6161994f8a91d</msg>
<status status="PASS" starttime="20220707 04:36:39.176" endtime="20220707 04:36:39.176"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220707 04:36:39.212" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220707 04:36:39.176" endtime="20220707 04:36:39.212"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 04:36:39.212" endtime="20220707 04:36:39.212"/>
</return>
<msg timestamp="20220707 04:36:39.212" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220707 04:36:39.175" endtime="20220707 04:36:39.212"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 04:36:39.213" endtime="20220707 04:36:39.213"/>
</return>
<status status="PASS" starttime="20220707 04:36:39.175" endtime="20220707 04:36:39.213"/>
</kw>
<doc>Verify that a card can be deleted through API</doc>
<tag>api</tag>
<tag>card.delete</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220707 04:36:38.875" endtime="20220707 04:36:39.213"/>
</test>
<test id="s1-s1-s2-t4" name="Verify A Card Can Be Updated" line="44">
<kw name="Create A Card" library="Card">
<var>${response}</var>
<arg>name</arg>
<arg>RFCard4</arg>
<doc>Creates a new card in the given list.
required_args: listId
optional_args: name, desc, pos, idCardSource, idLabels, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>@{optional_args}</arg>
<arg>idList</arg>
<arg>${idList}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220707 04:36:39.215" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220707 04:36:39.215" endtime="20220707 04:36:39.215"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220707 04:36:39.215" endtime="20220707 04:36:39.215"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 04:36:39.216" level="INFO">${url} = cards/</msg>
<status status="PASS" starttime="20220707 04:36:39.215" endtime="20220707 04:36:39.216"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220707 04:36:39.367" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 04:36:39.216" endtime="20220707 04:36:39.367"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 04:36:39.367" endtime="20220707 04:36:39.367"/>
</return>
<msg timestamp="20220707 04:36:39.367" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 04:36:39.214" endtime="20220707 04:36:39.367"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 04:36:39.367" endtime="20220707 04:36:39.367"/>
</return>
<msg timestamp="20220707 04:36:39.368" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 04:36:39.214" endtime="20220707 04:36:39.368"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220707 04:36:39.368" endtime="20220707 04:36:39.368"/>
</return>
<msg timestamp="20220707 04:36:39.369" level="INFO">${CARD_ID} = 62c662d73a879761fecef3fc</msg>
<status status="PASS" starttime="20220707 04:36:39.368" endtime="20220707 04:36:39.369"/>
</kw>
<kw name="Update A Card" library="Card">
<var>${response}</var>
<arg>${CARD_ID}</arg>
<arg>name</arg>
<arg>RFCard5</arg>
<arg>desc</arg>
<arg>Description</arg>
<doc>Updates the card with the given ID
optional_args: name, desc, closed, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<arg>status_code=${status_code}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220707 04:36:39.370" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220707 04:36:39.370" endtime="20220707 04:36:39.370"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220707 04:36:39.371" endtime="20220707 04:36:39.371"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 04:36:39.371" level="INFO">${url} = cards/62c662d73a879761fecef3fc</msg>
<status status="PASS" starttime="20220707 04:36:39.371" endtime="20220707 04:36:39.371"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220707 04:36:39.528" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 04:36:39.371" endtime="20220707 04:36:39.528"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 04:36:39.528" endtime="20220707 04:36:39.528"/>
</return>
<msg timestamp="20220707 04:36:39.529" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 04:36:39.370" endtime="20220707 04:36:39.529"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 04:36:39.529" endtime="20220707 04:36:39.529"/>
</return>
<msg timestamp="20220707 04:36:39.529" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 04:36:39.369" endtime="20220707 04:36:39.529"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>card</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220707 04:36:39.529" endtime="20220707 04:36:39.535"/>
</kw>
<status status="PASS" starttime="20220707 04:36:39.529" endtime="20220707 04:36:39.535"/>
</kw>
<kw name="Get A Card" library="Card">
<var>${response}</var>
<arg>${CARD_ID}</arg>
<doc>Gets the card with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 04:36:39.536" level="INFO">${url} = cards/62c662d73a879761fecef3fc</msg>
<status status="PASS" starttime="20220707 04:36:39.536" endtime="20220707 04:36:39.536"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220707 04:36:39.583" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 04:36:39.536" endtime="20220707 04:36:39.583"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 04:36:39.583" endtime="20220707 04:36:39.583"/>
</return>
<msg timestamp="20220707 04:36:39.583" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 04:36:39.535" endtime="20220707 04:36:39.583"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 04:36:39.583" endtime="20220707 04:36:39.583"/>
</return>
<msg timestamp="20220707 04:36:39.583" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 04:36:39.535" endtime="20220707 04:36:39.583"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_NAME}</var>
<arg>${response}</arg>
<arg>name</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220707 04:36:39.584" endtime="20220707 04:36:39.584"/>
</return>
<msg timestamp="20220707 04:36:39.584" level="INFO">${CARD_NAME} = RFCard5</msg>
<status status="PASS" starttime="20220707 04:36:39.583" endtime="20220707 04:36:39.584"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_DESC}</var>
<arg>${response}</arg>
<arg>desc</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220707 04:36:39.585" endtime="20220707 04:36:39.585"/>
</return>
<msg timestamp="20220707 04:36:39.586" level="INFO">${CARD_DESC} = Description</msg>
<status status="PASS" starttime="20220707 04:36:39.585" endtime="20220707 04:36:39.586"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${CARD_NAME}</arg>
<arg>RFCard5</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220707 04:36:39.586" endtime="20220707 04:36:39.586"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${CARD_DESC}</arg>
<arg>Description</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220707 04:36:39.586" endtime="20220707 04:36:39.586"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Card</arg>
<arg>${CARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Card" library="Card">
<arg>${CARD_ID}</arg>
<doc>Deletes the card with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 04:36:39.588" level="INFO">${url} = cards/62c662d73a879761fecef3fc</msg>
<status status="PASS" starttime="20220707 04:36:39.587" endtime="20220707 04:36:39.588"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220707 04:36:39.739" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 04:36:39.588" endtime="20220707 04:36:39.739"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 04:36:39.740" endtime="20220707 04:36:39.740"/>
</return>
<msg timestamp="20220707 04:36:39.740" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 04:36:39.587" endtime="20220707 04:36:39.740"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 04:36:39.740" endtime="20220707 04:36:39.740"/>
</return>
<status status="PASS" starttime="20220707 04:36:39.587" endtime="20220707 04:36:39.740"/>
</kw>
<status status="PASS" starttime="20220707 04:36:39.586" endtime="20220707 04:36:39.740"/>
</kw>
<doc>Verify that a card's name and Description can be updated through API</doc>
<tag>api</tag>
<tag>card.update</tag>
<tag>regression</tag>
<status status="PASS" starttime="20220707 04:36:39.213" endtime="20220707 04:36:39.740"/>
</test>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Teardown Board</arg>
<arg>Delete All Sessions</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Teardown Board">
<doc>Delete the board created for this suite</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 04:36:39.744" level="INFO">${url} = boards/62c662d53f61fa8f8fcd5efd</msg>
<status status="PASS" starttime="20220707 04:36:39.743" endtime="20220707 04:36:39.744"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220707 04:36:40.134" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 04:36:39.744" endtime="20220707 04:36:40.134"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 04:36:40.134" endtime="20220707 04:36:40.134"/>
</return>
<msg timestamp="20220707 04:36:40.134" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 04:36:39.743" endtime="20220707 04:36:40.135"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 04:36:40.135" endtime="20220707 04:36:40.135"/>
</return>
<status status="PASS" starttime="20220707 04:36:39.742" endtime="20220707 04:36:40.135"/>
</kw>
<status status="PASS" starttime="20220707 04:36:39.742" endtime="20220707 04:36:40.135"/>
</kw>
<status status="PASS" starttime="20220707 04:36:39.742" endtime="20220707 04:36:40.135"/>
</kw>
<kw name="Delete All Sessions" library="request_own_library">
<status status="PASS" starttime="20220707 04:36:40.135" endtime="20220707 04:36:40.136"/>
</kw>
<status status="PASS" starttime="20220707 04:36:39.741" endtime="20220707 04:36:40.136"/>
</kw>
<doc>Example Test with Trello API Cards</doc>
<status status="PASS" starttime="20220707 04:36:37.727" endtime="20220707 04:36:40.136"/>
</suite>
<suite id="s1-s1-s3" name="Trello Api Checklists Tests" source="/trello/api/trello_api_checklists_tests.robot">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Create Trello Session</arg>
<arg>Setup Board, List And Card</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Create Trello Session" library="TrelloAPI">
<doc>Creates a Trello Session</doc>
<kw name="Create Session" library="request_own_library">
<arg>${API_BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<status status="PASS" starttime="20220707 04:36:40.148" endtime="20220707 04:36:40.148"/>
</kw>
<status status="PASS" starttime="20220707 04:36:40.148" endtime="20220707 04:36:40.148"/>
</kw>
<kw name="Setup Board, List And Card">
<doc>Create a board and save its ID and its first list's ID</doc>
<kw name="Create A Board" library="Board">
<var>${BOARD}</var>
<arg>TestBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220707 04:36:40.149" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220707 04:36:40.149" endtime="20220707 04:36:40.150"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220707 04:36:40.150" endtime="20220707 04:36:40.150"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 04:36:40.151" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220707 04:36:40.150" endtime="20220707 04:36:40.151"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220707 04:36:40.323" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 04:36:40.151" endtime="20220707 04:36:40.323"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 04:36:40.323" endtime="20220707 04:36:40.323"/>
</return>
<msg timestamp="20220707 04:36:40.323" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 04:36:40.149" endtime="20220707 04:36:40.324"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 04:36:40.324" endtime="20220707 04:36:40.324"/>
</return>
<msg timestamp="20220707 04:36:40.324" level="INFO">${BOARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 04:36:40.149" endtime="20220707 04:36:40.324"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_BOARD_ID}</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220707 04:36:40.325" level="INFO">${TEST_SUITE_BOARD_ID} = 62c662d8621d0b51aef4d348</msg>
<status status="PASS" starttime="20220707 04:36:40.324" endtime="20220707 04:36:40.325"/>
</kw>
<kw name="Get Lists On A Board" library="Board">
<var>${LISTS}</var>
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Get all the lists in a board</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>lists_on_board</arg>
<arg>${id}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 04:36:40.326" level="INFO">${url} = boards/62c662d8621d0b51aef4d348/lists/</msg>
<status status="PASS" starttime="20220707 04:36:40.326" endtime="20220707 04:36:40.326"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220707 04:36:40.373" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 04:36:40.326" endtime="20220707 04:36:40.373"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 04:36:40.373" endtime="20220707 04:36:40.373"/>
</return>
<msg timestamp="20220707 04:36:40.373" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 04:36:40.325" endtime="20220707 04:36:40.373"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 04:36:40.373" endtime="20220707 04:36:40.373"/>
</return>
<msg timestamp="20220707 04:36:40.373" level="INFO">${LISTS} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 04:36:40.325" endtime="20220707 04:36:40.373"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_LIST_ID}</arg>
<arg>${LISTS.json()}[0][id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220707 04:36:40.374" level="INFO">${TEST_SUITE_LIST_ID} = 62c662d8621d0b51aef4d34f</msg>
<status status="PASS" starttime="20220707 04:36:40.373" endtime="20220707 04:36:40.374"/>
</kw>
<kw name="Create A Card" library="Card">
<var>${CARD}</var>
<arg>name</arg>
<arg>TestCard</arg>
<doc>Creates a new card in the given list.
required_args: listId
optional_args: name, desc, pos, idCardSource, idLabels, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>@{optional_args}</arg>
<arg>idList</arg>
<arg>${idList}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220707 04:36:40.376" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220707 04:36:40.376" endtime="20220707 04:36:40.376"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220707 04:36:40.376" endtime="20220707 04:36:40.376"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 04:36:40.377" level="INFO">${url} = cards/</msg>
<status status="PASS" starttime="20220707 04:36:40.376" endtime="20220707 04:36:40.377"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220707 04:36:40.557" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 04:36:40.377" endtime="20220707 04:36:40.558"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 04:36:40.558" endtime="20220707 04:36:40.558"/>
</return>
<msg timestamp="20220707 04:36:40.558" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 04:36:40.375" endtime="20220707 04:36:40.558"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 04:36:40.558" endtime="20220707 04:36:40.558"/>
</return>
<msg timestamp="20220707 04:36:40.558" level="INFO">${CARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 04:36:40.374" endtime="20220707 04:36:40.558"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_CARD_ID}</arg>
<arg>${CARD.json()}[id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220707 04:36:40.559" level="INFO">${TEST_SUITE_CARD_ID} = 62c662d8b2b8088947118e73</msg>
<status status="PASS" starttime="20220707 04:36:40.558" endtime="20220707 04:36:40.559"/>
</kw>
<status status="PASS" starttime="20220707 04:36:40.149" endtime="20220707 04:36:40.559"/>
</kw>
<status status="PASS" starttime="20220707 04:36:40.148" endtime="20220707 04:36:40.560"/>
</kw>
<test id="s1-s1-s3-t1" name="Verify A Checklist Can Be Created" line="14">
<kw name="Create A Checklist" library="Checklist">
<var>${response}</var>
<arg>name</arg>
<arg>TestChecklist</arg>
<arg>idCard=${TEST_SUITE_CARD_ID}</arg>
<doc>Creates a new checklist in the given card.
required_args: idCard
optional_args: name, pos, idChecklistSource
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>@{optional_args}</arg>
<arg>idCard</arg>
<arg>${idCard}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220707 04:36:40.561" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220707 04:36:40.561" endtime="20220707 04:36:40.561"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220707 04:36:40.562" endtime="20220707 04:36:40.562"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 04:36:40.563" level="INFO">${url} = checklists/</msg>
<status status="PASS" starttime="20220707 04:36:40.562" endtime="20220707 04:36:40.563"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220707 04:36:40.675" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 04:36:40.563" endtime="20220707 04:36:40.675"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 04:36:40.675" endtime="20220707 04:36:40.675"/>
</return>
<msg timestamp="20220707 04:36:40.676" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 04:36:40.561" endtime="20220707 04:36:40.676"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 04:36:40.676" endtime="20220707 04:36:40.676"/>
</return>
<msg timestamp="20220707 04:36:40.676" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 04:36:40.560" endtime="20220707 04:36:40.676"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${checklist_id}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220707 04:36:40.676" endtime="20220707 04:36:40.676"/>
</return>
<msg timestamp="20220707 04:36:40.677" level="INFO">${checklist_id} = 62c662d8bd1dbf575c83424c</msg>
<status status="PASS" starttime="20220707 04:36:40.676" endtime="20220707 04:36:40.677"/>
</kw>
<kw name="Get A Checklist" library="Checklist">
<var>${response}</var>
<arg>${checklist_id}</arg>
<doc>Gets the checklist with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 04:36:40.679" level="INFO">${url} = checklists/62c662d8bd1dbf575c83424c</msg>
<status status="PASS" starttime="20220707 04:36:40.678" endtime="20220707 04:36:40.679"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220707 04:36:40.731" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 04:36:40.679" endtime="20220707 04:36:40.731"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 04:36:40.731" endtime="20220707 04:36:40.731"/>
</return>
<msg timestamp="20220707 04:36:40.731" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 04:36:40.678" endtime="20220707 04:36:40.731"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 04:36:40.731" endtime="20220707 04:36:40.731"/>
</return>
<msg timestamp="20220707 04:36:40.732" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 04:36:40.677" endtime="20220707 04:36:40.732"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${checklist_name}</var>
<arg>${response}</arg>
<arg>name</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220707 04:36:40.732" endtime="20220707 04:36:40.732"/>
</return>
<msg timestamp="20220707 04:36:40.733" level="INFO">${checklist_name} = TestChecklist</msg>
<status status="PASS" starttime="20220707 04:36:40.732" endtime="20220707 04:36:40.733"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${checklist_name}</arg>
<arg>TestChecklist</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220707 04:36:40.733" endtime="20220707 04:36:40.733"/>
</kw>
<kw name="Delete A Checklist" library="Checklist" type="TEARDOWN">
<arg>${checklist_id}</arg>
<doc>Deletes the checklist with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 04:36:40.734" level="INFO">${url} = checklists/62c662d8bd1dbf575c83424c</msg>
<status status="PASS" starttime="20220707 04:36:40.734" endtime="20220707 04:36:40.734"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220707 04:36:40.834" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 04:36:40.735" endtime="20220707 04:36:40.835"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 04:36:40.835" endtime="20220707 04:36:40.835"/>
</return>
<msg timestamp="20220707 04:36:40.835" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 04:36:40.734" endtime="20220707 04:36:40.835"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 04:36:40.835" endtime="20220707 04:36:40.835"/>
</return>
<status status="PASS" starttime="20220707 04:36:40.733" endtime="20220707 04:36:40.835"/>
</kw>
<doc>Verify that a checklist can be created through API</doc>
<tag>api</tag>
<tag>checklist.create</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220707 04:36:40.560" endtime="20220707 04:36:40.835"/>
</test>
<test id="s1-s1-s3-t2" name="Verify A Checklist Can Be Deleted" line="24">
<kw name="Create A Checklist" library="Checklist">
<var>${response}</var>
<arg>name</arg>
<arg>TestChecklist</arg>
<arg>idCard=${TEST_SUITE_CARD_ID}</arg>
<doc>Creates a new checklist in the given card.
required_args: idCard
optional_args: name, pos, idChecklistSource
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>@{optional_args}</arg>
<arg>idCard</arg>
<arg>${idCard}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220707 04:36:40.837" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220707 04:36:40.837" endtime="20220707 04:36:40.837"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220707 04:36:40.838" endtime="20220707 04:36:40.838"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 04:36:40.839" level="INFO">${url} = checklists/</msg>
<status status="PASS" starttime="20220707 04:36:40.838" endtime="20220707 04:36:40.839"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220707 04:36:40.949" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 04:36:40.839" endtime="20220707 04:36:40.949"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 04:36:40.949" endtime="20220707 04:36:40.949"/>
</return>
<msg timestamp="20220707 04:36:40.949" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 04:36:40.837" endtime="20220707 04:36:40.949"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 04:36:40.949" endtime="20220707 04:36:40.949"/>
</return>
<msg timestamp="20220707 04:36:40.949" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 04:36:40.836" endtime="20220707 04:36:40.949"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${checklist_id}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220707 04:36:40.950" endtime="20220707 04:36:40.950"/>
</return>
<msg timestamp="20220707 04:36:40.951" level="INFO">${checklist_id} = 62c662d89e40a804cefc8b1d</msg>
<status status="PASS" starttime="20220707 04:36:40.950" endtime="20220707 04:36:40.951"/>
</kw>
<kw name="Delete A Checklist" library="Checklist">
<var>${response}</var>
<arg>${checklist_id}</arg>
<doc>Deletes the checklist with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 04:36:40.952" level="INFO">${url} = checklists/62c662d89e40a804cefc8b1d</msg>
<status status="PASS" starttime="20220707 04:36:40.952" endtime="20220707 04:36:40.952"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220707 04:36:41.078" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 04:36:40.952" endtime="20220707 04:36:41.078"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 04:36:41.078" endtime="20220707 04:36:41.078"/>
</return>
<msg timestamp="20220707 04:36:41.078" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 04:36:40.952" endtime="20220707 04:36:41.078"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 04:36:41.078" endtime="20220707 04:36:41.078"/>
</return>
<msg timestamp="20220707 04:36:41.078" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 04:36:40.951" endtime="20220707 04:36:41.078"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>delete</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220707 04:36:41.079" endtime="20220707 04:36:41.081"/>
</kw>
<status status="PASS" starttime="20220707 04:36:41.078" endtime="20220707 04:36:41.081"/>
</kw>
<kw name="Get A Checklist" library="Checklist">
<arg>${checklist_id}</arg>
<arg>status_code=404</arg>
<doc>Gets the checklist with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 04:36:41.082" level="INFO">${url} = checklists/62c662d89e40a804cefc8b1d</msg>
<status status="PASS" starttime="20220707 04:36:41.082" endtime="20220707 04:36:41.082"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220707 04:36:41.116" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220707 04:36:41.082" endtime="20220707 04:36:41.116"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 04:36:41.116" endtime="20220707 04:36:41.116"/>
</return>
<msg timestamp="20220707 04:36:41.116" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220707 04:36:41.081" endtime="20220707 04:36:41.116"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 04:36:41.117" endtime="20220707 04:36:41.117"/>
</return>
<status status="PASS" starttime="20220707 04:36:41.081" endtime="20220707 04:36:41.117"/>
</kw>
<doc>Verify that a checklist can be deleted through API</doc>
<tag>api</tag>
<tag>checklist.delete</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220707 04:36:40.836" endtime="20220707 04:36:41.117"/>
</test>
<test id="s1-s1-s3-t3" name="Verify A Checklist Can Be Updated" line="33">
<kw name="Create A Checklist" library="Checklist">
<var>${response}</var>
<arg>name</arg>
<arg>TestChecklist</arg>
<arg>idCard=${TEST_SUITE_CARD_ID}</arg>
<doc>Creates a new checklist in the given card.
required_args: idCard
optional_args: name, pos, idChecklistSource
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>@{optional_args}</arg>
<arg>idCard</arg>
<arg>${idCard}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220707 04:36:41.121" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220707 04:36:41.119" endtime="20220707 04:36:41.121"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220707 04:36:41.121" endtime="20220707 04:36:41.121"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 04:36:41.122" level="INFO">${url} = checklists/</msg>
<status status="PASS" starttime="20220707 04:36:41.121" endtime="20220707 04:36:41.122"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220707 04:36:41.221" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 04:36:41.122" endtime="20220707 04:36:41.221"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 04:36:41.221" endtime="20220707 04:36:41.221"/>
</return>
<msg timestamp="20220707 04:36:41.221" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 04:36:41.119" endtime="20220707 04:36:41.221"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 04:36:41.221" endtime="20220707 04:36:41.221"/>
</return>
<msg timestamp="20220707 04:36:41.222" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 04:36:41.118" endtime="20220707 04:36:41.222"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${checklist_id}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220707 04:36:41.222" endtime="20220707 04:36:41.222"/>
</return>
<msg timestamp="20220707 04:36:41.223" level="INFO">${checklist_id} = 62c662d92c72e75efa94f926</msg>
<status status="PASS" starttime="20220707 04:36:41.222" endtime="20220707 04:36:41.223"/>
</kw>
<kw name="Update A Checklist" library="Checklist">
<var>${response}</var>
<arg>${checklist_id}</arg>
<arg>name</arg>
<arg>TestChecklist2</arg>
<doc>Updates the checklist with the given ID
optional_args: name, pos
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<arg>status_code=${status_code}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220707 04:36:41.224" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220707 04:36:41.224" endtime="20220707 04:36:41.224"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220707 04:36:41.224" endtime="20220707 04:36:41.225"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 04:36:41.225" level="INFO">${url} = checklists/62c662d92c72e75efa94f926</msg>
<status status="PASS" starttime="20220707 04:36:41.225" endtime="20220707 04:36:41.225"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220707 04:36:41.328" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 04:36:41.225" endtime="20220707 04:36:41.328"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 04:36:41.328" endtime="20220707 04:36:41.328"/>
</return>
<msg timestamp="20220707 04:36:41.328" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 04:36:41.223" endtime="20220707 04:36:41.328"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 04:36:41.328" endtime="20220707 04:36:41.328"/>
</return>
<msg timestamp="20220707 04:36:41.328" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 04:36:41.223" endtime="20220707 04:36:41.328"/>
</kw>
<kw name="Get A Checklist" library="Checklist">
<var>${response}</var>
<arg>${checklist_id}</arg>
<doc>Gets the checklist with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 04:36:41.330" level="INFO">${url} = checklists/62c662d92c72e75efa94f926</msg>
<status status="PASS" starttime="20220707 04:36:41.329" endtime="20220707 04:36:41.330"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220707 04:36:41.380" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 04:36:41.330" endtime="20220707 04:36:41.380"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 04:36:41.380" endtime="20220707 04:36:41.380"/>
</return>
<msg timestamp="20220707 04:36:41.381" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 04:36:41.329" endtime="20220707 04:36:41.381"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 04:36:41.381" endtime="20220707 04:36:41.381"/>
</return>
<msg timestamp="20220707 04:36:41.381" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 04:36:41.328" endtime="20220707 04:36:41.381"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${checklist_name}</var>
<arg>${response}</arg>
<arg>name</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220707 04:36:41.381" endtime="20220707 04:36:41.381"/>
</return>
<msg timestamp="20220707 04:36:41.382" level="INFO">${checklist_name} = TestChecklist2</msg>
<status status="PASS" starttime="20220707 04:36:41.381" endtime="20220707 04:36:41.382"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${checklist_name}</arg>
<arg>TestChecklist2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220707 04:36:41.382" endtime="20220707 04:36:41.383"/>
</kw>
<kw name="Delete A Checklist" library="Checklist" type="TEARDOWN">
<arg>${checklist_id}</arg>
<doc>Deletes the checklist with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 04:36:41.395" level="INFO">${url} = checklists/62c662d92c72e75efa94f926</msg>
<status status="PASS" starttime="20220707 04:36:41.394" endtime="20220707 04:36:41.395"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220707 04:36:41.491" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 04:36:41.395" endtime="20220707 04:36:41.491"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 04:36:41.491" endtime="20220707 04:36:41.491"/>
</return>
<msg timestamp="20220707 04:36:41.491" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 04:36:41.394" endtime="20220707 04:36:41.491"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 04:36:41.491" endtime="20220707 04:36:41.491"/>
</return>
<status status="PASS" starttime="20220707 04:36:41.383" endtime="20220707 04:36:41.491"/>
</kw>
<doc>Verify that a checklist's name can be updated through API</doc>
<tag>api</tag>
<tag>checklist.update</tag>
<tag>regression</tag>
<status status="PASS" starttime="20220707 04:36:41.117" endtime="20220707 04:36:41.491"/>
</test>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Teardown Board</arg>
<arg>Delete All Sessions</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Teardown Board">
<doc>Delete the board created for this suite</doc>
<kw name="Delete A Board" library="Board">
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 04:36:41.493" level="INFO">${url} = boards/62c662d8621d0b51aef4d348</msg>
<status status="PASS" starttime="20220707 04:36:41.493" endtime="20220707 04:36:41.493"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220707 04:36:41.876" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 04:36:41.494" endtime="20220707 04:36:41.876"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 04:36:41.876" endtime="20220707 04:36:41.876"/>
</return>
<msg timestamp="20220707 04:36:41.877" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 04:36:41.493" endtime="20220707 04:36:41.877"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 04:36:41.877" endtime="20220707 04:36:41.877"/>
</return>
<status status="PASS" starttime="20220707 04:36:41.492" endtime="20220707 04:36:41.877"/>
</kw>
<status status="PASS" starttime="20220707 04:36:41.492" endtime="20220707 04:36:41.877"/>
</kw>
<kw name="Delete All Sessions" library="request_own_library">
<status status="PASS" starttime="20220707 04:36:41.877" endtime="20220707 04:36:41.878"/>
</kw>
<status status="PASS" starttime="20220707 04:36:41.492" endtime="20220707 04:36:41.879"/>
</kw>
<doc>Example Test with Trello API Checklists</doc>
<status status="PASS" starttime="20220707 04:36:40.139" endtime="20220707 04:36:41.879"/>
</suite>
<suite id="s1-s1-s4" name="Trello Api Labels Tests" source="/trello/api/trello_api_labels_tests.robot">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Create Trello Session</arg>
<arg>Setup Board And List</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Create Trello Session" library="TrelloAPI">
<doc>Creates a Trello Session</doc>
<kw name="Create Session" library="request_own_library">
<arg>${API_BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<status status="PASS" starttime="20220707 04:36:41.888" endtime="20220707 04:36:41.889"/>
</kw>
<status status="PASS" starttime="20220707 04:36:41.888" endtime="20220707 04:36:41.889"/>
</kw>
<kw name="Setup Board And List">
<doc>Create a board and save its ID and its first list's ID</doc>
<kw name="Create A Board" library="Board">
<var>${BOARD}</var>
<arg>TestBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220707 04:36:41.890" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220707 04:36:41.890" endtime="20220707 04:36:41.890"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220707 04:36:41.890" endtime="20220707 04:36:41.890"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 04:36:41.891" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220707 04:36:41.890" endtime="20220707 04:36:41.891"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220707 04:36:42.170" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 04:36:41.891" endtime="20220707 04:36:42.170"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 04:36:42.170" endtime="20220707 04:36:42.170"/>
</return>
<msg timestamp="20220707 04:36:42.170" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 04:36:41.889" endtime="20220707 04:36:42.170"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 04:36:42.170" endtime="20220707 04:36:42.170"/>
</return>
<msg timestamp="20220707 04:36:42.170" level="INFO">${BOARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 04:36:41.889" endtime="20220707 04:36:42.171"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_BOARD_ID}</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220707 04:36:42.172" level="INFO">${TEST_SUITE_BOARD_ID} = 62c662d9ca3d6847c22598be</msg>
<status status="PASS" starttime="20220707 04:36:42.171" endtime="20220707 04:36:42.172"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${LISTS}</var>
<arg>boards/${TEST_SUITE_BOARD_ID}/lists</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220707 04:36:42.219" level="INFO">${LISTS} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 04:36:42.172" endtime="20220707 04:36:42.219"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_LIST_ID}</arg>
<arg>${LISTS.json()}[0][id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220707 04:36:42.220" level="INFO">${TEST_SUITE_LIST_ID} = 62c662d9ca3d6847c22598c5</msg>
<status status="PASS" starttime="20220707 04:36:42.219" endtime="20220707 04:36:42.220"/>
</kw>
<status status="PASS" starttime="20220707 04:36:41.889" endtime="20220707 04:36:42.221"/>
</kw>
<status status="PASS" starttime="20220707 04:36:41.888" endtime="20220707 04:36:42.221"/>
</kw>
<test id="s1-s1-s4-t1" name="Create and get label on board" line="14">
<kw name="Create A Label" library="Label">
<var>${response}</var>
<arg>name</arg>
<arg>label2</arg>
<arg>color</arg>
<arg>yellow</arg>
<doc>Creates a new label in the given board.
required_args: idBoard
optional_args: name, color
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>idBoard</arg>
<arg>${idBoard}</arg>
<arg>@{optional_args}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220707 04:36:42.223" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220707 04:36:42.222" endtime="20220707 04:36:42.223"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220707 04:36:42.223" endtime="20220707 04:36:42.223"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 04:36:42.224" level="INFO">${url} = labels/</msg>
<status status="PASS" starttime="20220707 04:36:42.223" endtime="20220707 04:36:42.224"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220707 04:36:42.307" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 04:36:42.224" endtime="20220707 04:36:42.307"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 04:36:42.307" endtime="20220707 04:36:42.307"/>
</return>
<msg timestamp="20220707 04:36:42.307" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 04:36:42.222" endtime="20220707 04:36:42.308"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 04:36:42.308" endtime="20220707 04:36:42.308"/>
</return>
<msg timestamp="20220707 04:36:42.308" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 04:36:42.221" endtime="20220707 04:36:42.308"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>label</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220707 04:36:42.308" endtime="20220707 04:36:42.310"/>
</kw>
<status status="PASS" starttime="20220707 04:36:42.308" endtime="20220707 04:36:42.310"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${LABEL_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220707 04:36:42.311" endtime="20220707 04:36:42.311"/>
</return>
<msg timestamp="20220707 04:36:42.311" level="INFO">${LABEL_ID} = 62c662da6146ee17560761ce</msg>
<status status="PASS" starttime="20220707 04:36:42.310" endtime="20220707 04:36:42.311"/>
</kw>
<kw name="Get A Label" library="Label">
<var>${response}</var>
<arg>${LABEL_ID}</arg>
<doc>Gets the label with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 04:36:42.312" level="INFO">${url} = labels/62c662da6146ee17560761ce</msg>
<status status="PASS" starttime="20220707 04:36:42.312" endtime="20220707 04:36:42.312"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220707 04:36:42.359" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 04:36:42.313" endtime="20220707 04:36:42.359"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 04:36:42.359" endtime="20220707 04:36:42.359"/>
</return>
<msg timestamp="20220707 04:36:42.360" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 04:36:42.312" endtime="20220707 04:36:42.360"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 04:36:42.360" endtime="20220707 04:36:42.360"/>
</return>
<msg timestamp="20220707 04:36:42.360" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 04:36:42.311" endtime="20220707 04:36:42.360"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${LABEL_COLOR}</var>
<arg>${response}</arg>
<arg>color</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220707 04:36:42.360" endtime="20220707 04:36:42.360"/>
</return>
<msg timestamp="20220707 04:36:42.361" level="INFO">${LABEL_COLOR} = yellow</msg>
<status status="PASS" starttime="20220707 04:36:42.360" endtime="20220707 04:36:42.361"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${LABEL_NAME}</var>
<arg>${response}</arg>
<arg>name</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220707 04:36:42.362" endtime="20220707 04:36:42.362"/>
</return>
<msg timestamp="20220707 04:36:42.362" level="INFO">${LABEL_NAME} = label2</msg>
<status status="PASS" starttime="20220707 04:36:42.361" endtime="20220707 04:36:42.362"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${LABEL_COLOR}</arg>
<arg>yellow</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220707 04:36:42.362" endtime="20220707 04:36:42.363"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${LABEL_NAME}</arg>
<arg>label2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220707 04:36:42.363" endtime="20220707 04:36:42.363"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Label</arg>
<arg>${LABEL_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Label" library="Label">
<arg>${LABEL_ID}</arg>
<doc>Deletes the label with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 04:36:42.365" level="INFO">${url} = labels/62c662da6146ee17560761ce</msg>
<status status="PASS" starttime="20220707 04:36:42.364" endtime="20220707 04:36:42.365"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220707 04:36:42.476" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 04:36:42.365" endtime="20220707 04:36:42.476"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 04:36:42.476" endtime="20220707 04:36:42.476"/>
</return>
<msg timestamp="20220707 04:36:42.476" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 04:36:42.364" endtime="20220707 04:36:42.476"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 04:36:42.476" endtime="20220707 04:36:42.476"/>
</return>
<status status="PASS" starttime="20220707 04:36:42.363" endtime="20220707 04:36:42.476"/>
</kw>
<status status="PASS" starttime="20220707 04:36:42.363" endtime="20220707 04:36:42.476"/>
</kw>
<doc>Verify that a label can be created through API</doc>
<tag>api</tag>
<tag>label.create</tag>
<tag>label.get</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220707 04:36:42.221" endtime="20220707 04:36:42.477"/>
</test>
<test id="s1-s1-s4-t2" name="Update label on board" line="28">
<kw name="Create A Label" library="Label">
<var>${response}</var>
<arg>name</arg>
<arg>label2</arg>
<arg>color</arg>
<arg>yellow</arg>
<doc>Creates a new label in the given board.
required_args: idBoard
optional_args: name, color
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>idBoard</arg>
<arg>${idBoard}</arg>
<arg>@{optional_args}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220707 04:36:42.479" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220707 04:36:42.479" endtime="20220707 04:36:42.479"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220707 04:36:42.479" endtime="20220707 04:36:42.480"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 04:36:42.480" level="INFO">${url} = labels/</msg>
<status status="PASS" starttime="20220707 04:36:42.480" endtime="20220707 04:36:42.480"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220707 04:36:42.591" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 04:36:42.481" endtime="20220707 04:36:42.591"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 04:36:42.591" endtime="20220707 04:36:42.591"/>
</return>
<msg timestamp="20220707 04:36:42.591" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 04:36:42.479" endtime="20220707 04:36:42.591"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 04:36:42.591" endtime="20220707 04:36:42.591"/>
</return>
<msg timestamp="20220707 04:36:42.591" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 04:36:42.478" endtime="20220707 04:36:42.591"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>label</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220707 04:36:42.592" endtime="20220707 04:36:42.593"/>
</kw>
<status status="PASS" starttime="20220707 04:36:42.592" endtime="20220707 04:36:42.594"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${LABEL_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220707 04:36:42.594" endtime="20220707 04:36:42.594"/>
</return>
<msg timestamp="20220707 04:36:42.595" level="INFO">${LABEL_ID} = 62c662da83569c62197f7ea7</msg>
<status status="PASS" starttime="20220707 04:36:42.594" endtime="20220707 04:36:42.595"/>
</kw>
<kw name="Update A Label" library="Label">
<var>${new_response}</var>
<arg>${LABEL_ID}</arg>
<arg>name</arg>
<arg>label3</arg>
<arg>color</arg>
<arg>orange</arg>
<doc>Updates the label with the given ID
optional_args: name, color
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220707 04:36:42.596" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220707 04:36:42.596" endtime="20220707 04:36:42.596"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220707 04:36:42.596" endtime="20220707 04:36:42.596"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 04:36:42.596" level="INFO">${url} = labels/62c662da83569c62197f7ea7</msg>
<status status="PASS" starttime="20220707 04:36:42.596" endtime="20220707 04:36:42.596"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220707 04:36:42.699" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 04:36:42.596" endtime="20220707 04:36:42.699"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 04:36:42.699" endtime="20220707 04:36:42.699"/>
</return>
<msg timestamp="20220707 04:36:42.699" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 04:36:42.595" endtime="20220707 04:36:42.699"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 04:36:42.699" endtime="20220707 04:36:42.700"/>
</return>
<msg timestamp="20220707 04:36:42.700" level="INFO">${new_response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 04:36:42.595" endtime="20220707 04:36:42.700"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${NEW_LABEL_COLOR}</var>
<arg>${new_response}</arg>
<arg>color</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220707 04:36:42.700" endtime="20220707 04:36:42.700"/>
</return>
<msg timestamp="20220707 04:36:42.701" level="INFO">${NEW_LABEL_COLOR} = orange</msg>
<status status="PASS" starttime="20220707 04:36:42.700" endtime="20220707 04:36:42.701"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${NEW_LABEL_NAME}</var>
<arg>${new_response}</arg>
<arg>name</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220707 04:36:42.701" endtime="20220707 04:36:42.701"/>
</return>
<msg timestamp="20220707 04:36:42.702" level="INFO">${NEW_LABEL_NAME} = label3</msg>
<status status="PASS" starttime="20220707 04:36:42.701" endtime="20220707 04:36:42.702"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${NEW_LABEL_COLOR}</arg>
<arg>orange</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220707 04:36:42.702" endtime="20220707 04:36:42.703"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${NEW_LABEL_NAME}</arg>
<arg>label3</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220707 04:36:42.703" endtime="20220707 04:36:42.703"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Label</arg>
<arg>${LABEL_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Label" library="Label">
<arg>${LABEL_ID}</arg>
<doc>Deletes the label with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 04:36:42.705" level="INFO">${url} = labels/62c662da83569c62197f7ea7</msg>
<status status="PASS" starttime="20220707 04:36:42.704" endtime="20220707 04:36:42.705"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220707 04:36:42.812" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 04:36:42.705" endtime="20220707 04:36:42.812"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 04:36:42.812" endtime="20220707 04:36:42.812"/>
</return>
<msg timestamp="20220707 04:36:42.812" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 04:36:42.704" endtime="20220707 04:36:42.812"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 04:36:42.812" endtime="20220707 04:36:42.812"/>
</return>
<status status="PASS" starttime="20220707 04:36:42.703" endtime="20220707 04:36:42.813"/>
</kw>
<status status="PASS" starttime="20220707 04:36:42.703" endtime="20220707 04:36:42.813"/>
</kw>
<doc>Verify that a label's name and color can be updated through API</doc>
<tag>api</tag>
<tag>label.update</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220707 04:36:42.477" endtime="20220707 04:36:42.813"/>
</test>
<test id="s1-s1-s4-t3" name="Delete label on board" line="41">
<kw name="Create A Label" library="Label">
<var>${response}</var>
<arg>name</arg>
<arg>label2</arg>
<arg>color</arg>
<arg>yellow</arg>
<doc>Creates a new label in the given board.
required_args: idBoard
optional_args: name, color
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>idBoard</arg>
<arg>${idBoard}</arg>
<arg>@{optional_args}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220707 04:36:42.815" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220707 04:36:42.815" endtime="20220707 04:36:42.815"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220707 04:36:42.815" endtime="20220707 04:36:42.815"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 04:36:42.816" level="INFO">${url} = labels/</msg>
<status status="PASS" starttime="20220707 04:36:42.815" endtime="20220707 04:36:42.816"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220707 04:36:42.898" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 04:36:42.816" endtime="20220707 04:36:42.898"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 04:36:42.898" endtime="20220707 04:36:42.898"/>
</return>
<msg timestamp="20220707 04:36:42.899" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 04:36:42.814" endtime="20220707 04:36:42.899"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 04:36:42.899" endtime="20220707 04:36:42.899"/>
</return>
<msg timestamp="20220707 04:36:42.899" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 04:36:42.814" endtime="20220707 04:36:42.899"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${LABEL_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220707 04:36:42.899" endtime="20220707 04:36:42.899"/>
</return>
<msg timestamp="20220707 04:36:42.900" level="INFO">${LABEL_ID} = 62c662da4b48477fc0f43a9a</msg>
<status status="PASS" starttime="20220707 04:36:42.899" endtime="20220707 04:36:42.900"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Label</arg>
<arg>${LABEL_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Label" library="Label">
<arg>${LABEL_ID}</arg>
<doc>Deletes the label with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 04:36:42.902" level="INFO">${url} = labels/62c662da4b48477fc0f43a9a</msg>
<status status="PASS" starttime="20220707 04:36:42.902" endtime="20220707 04:36:42.902"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220707 04:36:43.003" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 04:36:42.902" endtime="20220707 04:36:43.003"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 04:36:43.003" endtime="20220707 04:36:43.003"/>
</return>
<msg timestamp="20220707 04:36:43.003" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 04:36:42.901" endtime="20220707 04:36:43.003"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 04:36:43.003" endtime="20220707 04:36:43.003"/>
</return>
<status status="PASS" starttime="20220707 04:36:42.901" endtime="20220707 04:36:43.003"/>
</kw>
<status status="PASS" starttime="20220707 04:36:42.900" endtime="20220707 04:36:43.003"/>
</kw>
<kw name="Get A Label" library="Label">
<arg>${LABEL_ID}</arg>
<arg>status_code=404</arg>
<doc>Gets the label with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 04:36:43.005" level="INFO">${url} = labels/62c662da4b48477fc0f43a9a</msg>
<status status="PASS" starttime="20220707 04:36:43.004" endtime="20220707 04:36:43.005"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220707 04:36:43.038" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220707 04:36:43.005" endtime="20220707 04:36:43.038"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 04:36:43.038" endtime="20220707 04:36:43.038"/>
</return>
<msg timestamp="20220707 04:36:43.038" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220707 04:36:43.004" endtime="20220707 04:36:43.038"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 04:36:43.038" endtime="20220707 04:36:43.038"/>
</return>
<status status="PASS" starttime="20220707 04:36:43.003" endtime="20220707 04:36:43.039"/>
</kw>
<doc>Verify that a label can be deleted through API</doc>
<tag>api</tag>
<tag>label.delete</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220707 04:36:42.813" endtime="20220707 04:36:43.039"/>
</test>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Teardown Board</arg>
<arg>Delete All Sessions</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Teardown Board">
<doc>Delete the board created for this session.</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 04:36:43.041" level="INFO">${url} = boards/62c662d9ca3d6847c22598be</msg>
<status status="PASS" starttime="20220707 04:36:43.041" endtime="20220707 04:36:43.042"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220707 04:36:43.348" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 04:36:43.042" endtime="20220707 04:36:43.348"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 04:36:43.349" endtime="20220707 04:36:43.349"/>
</return>
<msg timestamp="20220707 04:36:43.349" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 04:36:43.041" endtime="20220707 04:36:43.349"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 04:36:43.349" endtime="20220707 04:36:43.349"/>
</return>
<status status="PASS" starttime="20220707 04:36:43.040" endtime="20220707 04:36:43.349"/>
</kw>
<status status="PASS" starttime="20220707 04:36:43.040" endtime="20220707 04:36:43.349"/>
</kw>
<status status="PASS" starttime="20220707 04:36:43.040" endtime="20220707 04:36:43.349"/>
</kw>
<kw name="Delete All Sessions" library="request_own_library">
<status status="PASS" starttime="20220707 04:36:43.349" endtime="20220707 04:36:43.350"/>
</kw>
<status status="PASS" starttime="20220707 04:36:43.039" endtime="20220707 04:36:43.350"/>
</kw>
<doc>Example Test with Trello API Cards</doc>
<status status="PASS" starttime="20220707 04:36:41.880" endtime="20220707 04:36:43.350"/>
</suite>
<suite id="s1-s1-s5" name="Trello Api Lists Tests" source="/trello/api/trello_api_lists_tests.robot">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Create Trello Session</arg>
<arg>Setup Board</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Create Trello Session" library="TrelloAPI">
<doc>Creates a Trello Session</doc>
<kw name="Create Session" library="request_own_library">
<arg>${API_BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<status status="PASS" starttime="20220707 04:36:43.360" endtime="20220707 04:36:43.360"/>
</kw>
<status status="PASS" starttime="20220707 04:36:43.360" endtime="20220707 04:36:43.360"/>
</kw>
<kw name="Setup Board">
<doc>Create a board and save it's id for the suite</doc>
<kw name="Create A Board" library="Board">
<var>${BOARD}</var>
<arg>TestBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220707 04:36:43.361" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220707 04:36:43.361" endtime="20220707 04:36:43.361"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220707 04:36:43.361" endtime="20220707 04:36:43.362"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 04:36:43.362" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220707 04:36:43.362" endtime="20220707 04:36:43.362"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220707 04:36:43.534" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 04:36:43.362" endtime="20220707 04:36:43.534"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 04:36:43.534" endtime="20220707 04:36:43.534"/>
</return>
<msg timestamp="20220707 04:36:43.534" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 04:36:43.361" endtime="20220707 04:36:43.534"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 04:36:43.534" endtime="20220707 04:36:43.534"/>
</return>
<msg timestamp="20220707 04:36:43.534" level="INFO">${BOARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 04:36:43.361" endtime="20220707 04:36:43.534"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Set Suite Variable</arg>
<arg>\${TEST_SUITE_BOARD_ID}</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_BOARD_ID}</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220707 04:36:43.536" level="INFO">${TEST_SUITE_BOARD_ID} = 62c662db17c1665bfe9a0b41</msg>
<status status="PASS" starttime="20220707 04:36:43.535" endtime="20220707 04:36:43.536"/>
</kw>
<status status="PASS" starttime="20220707 04:36:43.535" endtime="20220707 04:36:43.536"/>
</kw>
<status status="PASS" starttime="20220707 04:36:43.360" endtime="20220707 04:36:43.536"/>
</kw>
<status status="PASS" starttime="20220707 04:36:43.359" endtime="20220707 04:36:43.536"/>
</kw>
<test id="s1-s1-s5-t1" name="CREATE a list" line="13">
<kw name="Create A List" library="List">
<var>${response}</var>
<arg>NewList</arg>
<doc>Creates a new List
board id
name the list will have
optional_args: idListSource, pos, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>list</arg>
<arg>name</arg>
<arg>${name}</arg>
<arg>idBoard</arg>
<arg>${idBoard}</arg>
<arg>@{optional_args}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220707 04:36:43.538" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220707 04:36:43.538" endtime="20220707 04:36:43.538"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220707 04:36:43.538" endtime="20220707 04:36:43.538"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 04:36:43.539" level="INFO">${url} = lists/</msg>
<status status="PASS" starttime="20220707 04:36:43.539" endtime="20220707 04:36:43.539"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220707 04:36:43.621" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 04:36:43.539" endtime="20220707 04:36:43.621"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 04:36:43.621" endtime="20220707 04:36:43.621"/>
</return>
<msg timestamp="20220707 04:36:43.621" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 04:36:43.537" endtime="20220707 04:36:43.621"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 04:36:43.622" endtime="20220707 04:36:43.622"/>
</return>
<msg timestamp="20220707 04:36:43.622" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 04:36:43.537" endtime="20220707 04:36:43.622"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>list</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220707 04:36:43.622" endtime="20220707 04:36:43.624"/>
</kw>
<status status="PASS" starttime="20220707 04:36:43.622" endtime="20220707 04:36:43.624"/>
</kw>
<doc>Verify that a list can be created through API</doc>
<tag>api</tag>
<tag>list.create</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220707 04:36:43.536" endtime="20220707 04:36:43.624"/>
</test>
<test id="s1-s1-s5-t2" name="UPDATE a list" line="19">
<kw name="Create A List" library="List">
<var>${response}</var>
<arg>NewList</arg>
<doc>Creates a new List
board id
name the list will have
optional_args: idListSource, pos, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>list</arg>
<arg>name</arg>
<arg>${name}</arg>
<arg>idBoard</arg>
<arg>${idBoard}</arg>
<arg>@{optional_args}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220707 04:36:43.626" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220707 04:36:43.626" endtime="20220707 04:36:43.626"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220707 04:36:43.627" endtime="20220707 04:36:43.627"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 04:36:43.628" level="INFO">${url} = lists/</msg>
<status status="PASS" starttime="20220707 04:36:43.627" endtime="20220707 04:36:43.628"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220707 04:36:43.711" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 04:36:43.628" endtime="20220707 04:36:43.711"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 04:36:43.711" endtime="20220707 04:36:43.711"/>
</return>
<msg timestamp="20220707 04:36:43.712" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 04:36:43.626" endtime="20220707 04:36:43.712"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 04:36:43.712" endtime="20220707 04:36:43.712"/>
</return>
<msg timestamp="20220707 04:36:43.712" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 04:36:43.625" endtime="20220707 04:36:43.712"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>list</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220707 04:36:43.713" endtime="20220707 04:36:43.714"/>
</kw>
<status status="PASS" starttime="20220707 04:36:43.712" endtime="20220707 04:36:43.714"/>
</kw>
<kw name="Update A List" library="List">
<arg>${response.json()}[id]</arg>
<arg>name</arg>
<arg>NewName</arg>
<doc>Updates the board with the given ID
optional_args: name, idListSource, pos, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>list</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220707 04:36:43.716" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220707 04:36:43.716" endtime="20220707 04:36:43.716"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220707 04:36:43.716" endtime="20220707 04:36:43.716"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 04:36:43.717" level="INFO">${url} = lists/62c662dbbdc7bb2a6fdc120e</msg>
<status status="PASS" starttime="20220707 04:36:43.716" endtime="20220707 04:36:43.717"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220707 04:36:43.793" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 04:36:43.717" endtime="20220707 04:36:43.793"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 04:36:43.793" endtime="20220707 04:36:43.793"/>
</return>
<msg timestamp="20220707 04:36:43.793" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 04:36:43.715" endtime="20220707 04:36:43.793"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 04:36:43.793" endtime="20220707 04:36:43.793"/>
</return>
<status status="PASS" starttime="20220707 04:36:43.714" endtime="20220707 04:36:43.794"/>
</kw>
<kw name="Get A List" library="List">
<var>${new_response}</var>
<arg>${response.json()}[id]</arg>
<doc>Gets the List with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>list</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 04:36:43.795" level="INFO">${url} = lists/62c662dbbdc7bb2a6fdc120e</msg>
<status status="PASS" starttime="20220707 04:36:43.795" endtime="20220707 04:36:43.795"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220707 04:36:43.836" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 04:36:43.795" endtime="20220707 04:36:43.836"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 04:36:43.836" endtime="20220707 04:36:43.836"/>
</return>
<msg timestamp="20220707 04:36:43.836" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 04:36:43.794" endtime="20220707 04:36:43.836"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 04:36:43.836" endtime="20220707 04:36:43.836"/>
</return>
<msg timestamp="20220707 04:36:43.836" level="INFO">${new_response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 04:36:43.794" endtime="20220707 04:36:43.837"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${new_response}</arg>
<arg>list</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220707 04:36:43.837" endtime="20220707 04:36:43.839"/>
</kw>
<status status="PASS" starttime="20220707 04:36:43.837" endtime="20220707 04:36:43.839"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${new_response.json()}[name]</arg>
<arg>NewName</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220707 04:36:43.839" endtime="20220707 04:36:43.840"/>
</kw>
<doc>Verify that a lists name can be updated through API</doc>
<tag>api</tag>
<tag>list.update</tag>
<tag>regression</tag>
<status status="PASS" starttime="20220707 04:36:43.625" endtime="20220707 04:36:43.840"/>
</test>
<test id="s1-s1-s5-t3" name="ARCHIVE A list" line="29">
<kw name="Create A List" library="List">
<var>${response}</var>
<arg>NewList</arg>
<doc>Creates a new List
board id
name the list will have
optional_args: idListSource, pos, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>list</arg>
<arg>name</arg>
<arg>${name}</arg>
<arg>idBoard</arg>
<arg>${idBoard}</arg>
<arg>@{optional_args}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220707 04:36:43.843" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220707 04:36:43.843" endtime="20220707 04:36:43.843"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220707 04:36:43.844" endtime="20220707 04:36:43.844"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 04:36:43.844" level="INFO">${url} = lists/</msg>
<status status="PASS" starttime="20220707 04:36:43.844" endtime="20220707 04:36:43.844"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220707 04:36:43.929" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 04:36:43.845" endtime="20220707 04:36:43.929"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 04:36:43.929" endtime="20220707 04:36:43.929"/>
</return>
<msg timestamp="20220707 04:36:43.929" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 04:36:43.843" endtime="20220707 04:36:43.929"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 04:36:43.929" endtime="20220707 04:36:43.929"/>
</return>
<msg timestamp="20220707 04:36:43.929" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 04:36:43.841" endtime="20220707 04:36:43.929"/>
</kw>
<kw name="Archive A List" library="List">
<arg>${response.json()}[id]</arg>
<doc>Deletes the list with the given ID</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>archive_list</arg>
<arg>${id}</arg>
<arg>value</arg>
<arg>true</arg>
<arg>status_code=${status_code}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220707 04:36:43.931" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220707 04:36:43.931" endtime="20220707 04:36:43.931"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220707 04:36:43.931" endtime="20220707 04:36:43.932"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 04:36:43.932" level="INFO">${url} = lists/62c662db69023c105a82e84f/closed</msg>
<status status="PASS" starttime="20220707 04:36:43.932" endtime="20220707 04:36:43.932"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220707 04:36:44.039" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 04:36:43.932" endtime="20220707 04:36:44.039"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 04:36:44.039" endtime="20220707 04:36:44.039"/>
</return>
<msg timestamp="20220707 04:36:44.039" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 04:36:43.930" endtime="20220707 04:36:44.039"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 04:36:44.039" endtime="20220707 04:36:44.039"/>
</return>
<status status="PASS" starttime="20220707 04:36:43.929" endtime="20220707 04:36:44.040"/>
</kw>
<kw name="Get A List" library="List">
<var>${new_response}</var>
<arg>${response.json()}[id]</arg>
<doc>Gets the List with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>list</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 04:36:44.042" level="INFO">${url} = lists/62c662db69023c105a82e84f</msg>
<status status="PASS" starttime="20220707 04:36:44.041" endtime="20220707 04:36:44.042"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220707 04:36:44.091" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 04:36:44.042" endtime="20220707 04:36:44.091"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 04:36:44.091" endtime="20220707 04:36:44.091"/>
</return>
<msg timestamp="20220707 04:36:44.092" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 04:36:44.041" endtime="20220707 04:36:44.092"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 04:36:44.092" endtime="20220707 04:36:44.092"/>
</return>
<msg timestamp="20220707 04:36:44.092" level="INFO">${new_response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 04:36:44.040" endtime="20220707 04:36:44.092"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${new_response.json()}[closed]</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220707 04:36:44.092" endtime="20220707 04:36:44.093"/>
</kw>
<doc>Verify that a list can be archived through API</doc>
<tag>api</tag>
<tag>list.archive</tag>
<tag>regression</tag>
<status status="PASS" starttime="20220707 04:36:43.840" endtime="20220707 04:36:44.093"/>
</test>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Teardown Board</arg>
<arg>Delete All Sessions</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Teardown Board">
<doc>Delete the board created for this suite.</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220707 04:36:44.096" level="INFO">${url} = boards/62c662db17c1665bfe9a0b41</msg>
<status status="PASS" starttime="20220707 04:36:44.096" endtime="20220707 04:36:44.096"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220707 04:36:44.438" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 04:36:44.096" endtime="20220707 04:36:44.438"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 04:36:44.438" endtime="20220707 04:36:44.439"/>
</return>
<msg timestamp="20220707 04:36:44.439" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220707 04:36:44.095" endtime="20220707 04:36:44.439"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220707 04:36:44.439" endtime="20220707 04:36:44.439"/>
</return>
<status status="PASS" starttime="20220707 04:36:44.095" endtime="20220707 04:36:44.439"/>
</kw>
<status status="PASS" starttime="20220707 04:36:44.095" endtime="20220707 04:36:44.439"/>
</kw>
<status status="PASS" starttime="20220707 04:36:44.094" endtime="20220707 04:36:44.439"/>
</kw>
<kw name="Delete All Sessions" library="request_own_library">
<status status="PASS" starttime="20220707 04:36:44.439" endtime="20220707 04:36:44.440"/>
</kw>
<status status="PASS" starttime="20220707 04:36:44.093" endtime="20220707 04:36:44.441"/>
</kw>
<doc>Example Test with Trello API lists</doc>
<status status="PASS" starttime="20220707 04:36:43.352" endtime="20220707 04:36:44.441"/>
</suite>
<status status="PASS" starttime="20220707 04:36:34.572" endtime="20220707 04:36:44.443"/>
</suite>
<status status="PASS" starttime="20220707 04:36:34.555" endtime="20220707 04:36:44.445"/>
</suite>
<statistics>
<total>
<stat pass="18" fail="0" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="18" fail="0" skip="0">api</stat>
<stat pass="1" fail="0" skip="0">board.create</stat>
<stat pass="1" fail="0" skip="0">board.delete</stat>
<stat pass="1" fail="0" skip="0">board.get</stat>
<stat pass="2" fail="0" skip="0">board.update</stat>
<stat pass="1" fail="0" skip="0">card.close</stat>
<stat pass="1" fail="0" skip="0">card.create</stat>
<stat pass="1" fail="0" skip="0">card.delete</stat>
<stat pass="1" fail="0" skip="0">card.update</stat>
<stat pass="1" fail="0" skip="0">checklist.create</stat>
<stat pass="1" fail="0" skip="0">checklist.delete</stat>
<stat pass="1" fail="0" skip="0">checklist.update</stat>
<stat pass="1" fail="0" skip="0">label.create</stat>
<stat pass="1" fail="0" skip="0">label.delete</stat>
<stat pass="1" fail="0" skip="0">label.get</stat>
<stat pass="1" fail="0" skip="0">label.update</stat>
<stat pass="1" fail="0" skip="0">list.archive</stat>
<stat pass="1" fail="0" skip="0">list.create</stat>
<stat pass="1" fail="0" skip="0">list.update</stat>
<stat pass="5" fail="0" skip="0">regression</stat>
<stat pass="13" fail="0" skip="0">smoke</stat>
</tag>
<suite>
<stat pass="18" fail="0" skip="0" id="s1" name="Trello">Trello</stat>
<stat pass="18" fail="0" skip="0" id="s1-s1" name="Api">Trello.Api</stat>
<stat pass="5" fail="0" skip="0" id="s1-s1-s1" name="Trello Api Boards Tests">Trello.Api.Trello Api Boards Tests</stat>
<stat pass="4" fail="0" skip="0" id="s1-s1-s2" name="Trello Api Cards Tests">Trello.Api.Trello Api Cards Tests</stat>
<stat pass="3" fail="0" skip="0" id="s1-s1-s3" name="Trello Api Checklists Tests">Trello.Api.Trello Api Checklists Tests</stat>
<stat pass="3" fail="0" skip="0" id="s1-s1-s4" name="Trello Api Labels Tests">Trello.Api.Trello Api Labels Tests</stat>
<stat pass="3" fail="0" skip="0" id="s1-s1-s5" name="Trello Api Lists Tests">Trello.Api.Trello Api Lists Tests</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
