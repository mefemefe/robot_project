<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 5.0.1 (Python 3.10.5 on linux)" generated="20220705 15:30:55.524" rpa="false" schemaversion="3">
<suite id="s1" name="Trello" source="/trello">
<suite id="s1-s1" name="Api" source="/trello/api">
<suite id="s1-s1-s1" name="Trello Api Boards Tests" source="/trello/api/trello_api_boards_tests.robot">
<kw name="Create Trello Session" library="TrelloAPI" type="SETUP">
<doc>Creates a Trello Session</doc>
<kw name="Create Session" library="request_own_library">
<arg>${API_BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<status status="PASS" starttime="20220705 15:30:55.646" endtime="20220705 15:30:55.646"/>
</kw>
<status status="PASS" starttime="20220705 15:30:55.645" endtime="20220705 15:30:55.647"/>
</kw>
<test id="s1-s1-s1-t1" name="CREATE a board" line="9">
<kw name="Create A Board" library="Board">
<var>${response}</var>
<arg>NewBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 15:30:55.649" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 15:30:55.648" endtime="20220705 15:30:55.649"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 15:30:55.649" endtime="20220705 15:30:55.649"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 15:30:55.650" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220705 15:30:55.649" endtime="20220705 15:30:55.650"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 15:30:56.001" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 15:30:55.650" endtime="20220705 15:30:56.001"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 15:30:56.001" endtime="20220705 15:30:56.001"/>
</return>
<msg timestamp="20220705 15:30:56.002" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 15:30:55.648" endtime="20220705 15:30:56.002"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 15:30:56.002" endtime="20220705 15:30:56.002"/>
</return>
<msg timestamp="20220705 15:30:56.002" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 15:30:55.648" endtime="20220705 15:30:56.002"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>board</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 15:30:56.002" endtime="20220705 15:30:56.007"/>
</kw>
<status status="PASS" starttime="20220705 15:30:56.002" endtime="20220705 15:30:56.007"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${response.json()}[id]</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${response.json()}[id]</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 15:30:56.009" level="INFO">${url} = boards/62c4592f2ed01313e3c01356</msg>
<status status="PASS" starttime="20220705 15:30:56.009" endtime="20220705 15:30:56.009"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 15:30:56.420" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 15:30:56.009" endtime="20220705 15:30:56.420"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 15:30:56.420" endtime="20220705 15:30:56.420"/>
</return>
<msg timestamp="20220705 15:30:56.420" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 15:30:56.008" endtime="20220705 15:30:56.420"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 15:30:56.420" endtime="20220705 15:30:56.420"/>
</return>
<status status="PASS" starttime="20220705 15:30:56.007" endtime="20220705 15:30:56.421"/>
</kw>
<status status="PASS" starttime="20220705 15:30:56.007" endtime="20220705 15:30:56.421"/>
</kw>
<doc>Verify that a board can be create through API</doc>
<tag>api</tag>
<tag>board.create</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220705 15:30:55.647" endtime="20220705 15:30:56.421"/>
</test>
<test id="s1-s1-s1-t2" name="UPDATE a Board's name" line="16">
<kw name="Create A Board" library="Board">
<var>${response}</var>
<arg>NewBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 15:30:56.423" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 15:30:56.423" endtime="20220705 15:30:56.423"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 15:30:56.423" endtime="20220705 15:30:56.423"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 15:30:56.424" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220705 15:30:56.423" endtime="20220705 15:30:56.424"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 15:30:56.683" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 15:30:56.424" endtime="20220705 15:30:56.683"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 15:30:56.683" endtime="20220705 15:30:56.683"/>
</return>
<msg timestamp="20220705 15:30:56.683" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 15:30:56.422" endtime="20220705 15:30:56.683"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 15:30:56.683" endtime="20220705 15:30:56.683"/>
</return>
<msg timestamp="20220705 15:30:56.683" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 15:30:56.422" endtime="20220705 15:30:56.683"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>board</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 15:30:56.684" endtime="20220705 15:30:56.688"/>
</kw>
<status status="PASS" starttime="20220705 15:30:56.683" endtime="20220705 15:30:56.688"/>
</kw>
<kw name="Update A Board" library="Board">
<arg>${response.json()}[id]</arg>
<arg>name</arg>
<arg>NewName</arg>
<doc>Updates the board with the given ID
optional_args: name, desc, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 15:30:56.690" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 15:30:56.689" endtime="20220705 15:30:56.690"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 15:30:56.690" endtime="20220705 15:30:56.690"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 15:30:56.690" level="INFO">${url} = boards/62c45930750b5d2471594eca</msg>
<status status="PASS" starttime="20220705 15:30:56.690" endtime="20220705 15:30:56.690"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 15:30:56.868" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 15:30:56.690" endtime="20220705 15:30:56.868"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 15:30:56.868" endtime="20220705 15:30:56.868"/>
</return>
<msg timestamp="20220705 15:30:56.869" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 15:30:56.689" endtime="20220705 15:30:56.869"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 15:30:56.869" endtime="20220705 15:30:56.869"/>
</return>
<status status="PASS" starttime="20220705 15:30:56.688" endtime="20220705 15:30:56.869"/>
</kw>
<kw name="Get A Board" library="Board">
<var>${new_response}</var>
<arg>${response.json()}[id]</arg>
<doc>Gets the Board with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 15:30:56.871" level="INFO">${url} = boards/62c45930750b5d2471594eca</msg>
<status status="PASS" starttime="20220705 15:30:56.870" endtime="20220705 15:30:56.871"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 15:30:56.990" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 15:30:56.871" endtime="20220705 15:30:56.990"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 15:30:56.990" endtime="20220705 15:30:56.990"/>
</return>
<msg timestamp="20220705 15:30:56.991" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 15:30:56.870" endtime="20220705 15:30:56.991"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 15:30:56.991" endtime="20220705 15:30:56.991"/>
</return>
<msg timestamp="20220705 15:30:56.991" level="INFO">${new_response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 15:30:56.869" endtime="20220705 15:30:56.991"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${new_response}</arg>
<arg>board</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 15:30:56.991" endtime="20220705 15:30:56.995"/>
</kw>
<status status="PASS" starttime="20220705 15:30:56.991" endtime="20220705 15:30:56.995"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${new_response.json()}[name]</arg>
<arg>NewName</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220705 15:30:56.995" endtime="20220705 15:30:56.996"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${response.json()}[id]</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${response.json()}[id]</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 15:30:56.998" level="INFO">${url} = boards/62c45930750b5d2471594eca</msg>
<status status="PASS" starttime="20220705 15:30:56.998" endtime="20220705 15:30:56.998"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 15:30:57.525" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 15:30:56.998" endtime="20220705 15:30:57.525"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 15:30:57.525" endtime="20220705 15:30:57.526"/>
</return>
<msg timestamp="20220705 15:30:57.526" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 15:30:56.997" endtime="20220705 15:30:57.526"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 15:30:57.526" endtime="20220705 15:30:57.526"/>
</return>
<status status="PASS" starttime="20220705 15:30:56.996" endtime="20220705 15:30:57.526"/>
</kw>
<status status="PASS" starttime="20220705 15:30:56.996" endtime="20220705 15:30:57.526"/>
</kw>
<doc>Verify that a board's name can be updated through API</doc>
<tag>api</tag>
<tag>board.update</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220705 15:30:56.421" endtime="20220705 15:30:57.526"/>
</test>
<test id="s1-s1-s1-t3" name="DELETE A Board" line="27">
<kw name="Create A Board" library="Board">
<var>${response}</var>
<arg>NewBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 15:30:57.528" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 15:30:57.528" endtime="20220705 15:30:57.528"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 15:30:57.528" endtime="20220705 15:30:57.528"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 15:30:57.529" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220705 15:30:57.528" endtime="20220705 15:30:57.529"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 15:30:57.766" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 15:30:57.529" endtime="20220705 15:30:57.766"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 15:30:57.766" endtime="20220705 15:30:57.766"/>
</return>
<msg timestamp="20220705 15:30:57.767" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 15:30:57.527" endtime="20220705 15:30:57.767"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 15:30:57.767" endtime="20220705 15:30:57.767"/>
</return>
<msg timestamp="20220705 15:30:57.767" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 15:30:57.527" endtime="20220705 15:30:57.767"/>
</kw>
<kw name="Delete A Board" library="Board">
<arg>${response.json()}[id]</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 15:30:57.769" level="INFO">${url} = boards/62c4593153df370e8e6a1445</msg>
<status status="PASS" starttime="20220705 15:30:57.768" endtime="20220705 15:30:57.769"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 15:30:58.193" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 15:30:57.769" endtime="20220705 15:30:58.193"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 15:30:58.194" endtime="20220705 15:30:58.194"/>
</return>
<msg timestamp="20220705 15:30:58.194" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 15:30:57.768" endtime="20220705 15:30:58.194"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 15:30:58.194" endtime="20220705 15:30:58.194"/>
</return>
<status status="PASS" starttime="20220705 15:30:57.767" endtime="20220705 15:30:58.194"/>
</kw>
<kw name="Get A Board" library="Board">
<arg>${response.json()}[id]</arg>
<arg>status_code=404</arg>
<doc>Gets the Board with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 15:30:58.196" level="INFO">${url} = boards/62c4593153df370e8e6a1445</msg>
<status status="PASS" starttime="20220705 15:30:58.196" endtime="20220705 15:30:58.196"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 15:30:58.298" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220705 15:30:58.196" endtime="20220705 15:30:58.299"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 15:30:58.299" endtime="20220705 15:30:58.299"/>
</return>
<msg timestamp="20220705 15:30:58.299" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220705 15:30:58.195" endtime="20220705 15:30:58.299"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 15:30:58.299" endtime="20220705 15:30:58.299"/>
</return>
<status status="PASS" starttime="20220705 15:30:58.194" endtime="20220705 15:30:58.299"/>
</kw>
<doc>Verify that a board can be deleted through API</doc>
<tag>api</tag>
<tag>board.delete</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220705 15:30:57.526" endtime="20220705 15:30:58.299"/>
</test>
<test id="s1-s1-s1-t4" name="GET Information of A Board" line="34">
<kw name="Create A Board" library="Board">
<var>${response}</var>
<arg>BoardTest</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 15:30:58.302" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 15:30:58.301" endtime="20220705 15:30:58.302"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 15:30:58.302" endtime="20220705 15:30:58.302"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 15:30:58.303" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220705 15:30:58.302" endtime="20220705 15:30:58.303"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 15:30:58.550" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 15:30:58.303" endtime="20220705 15:30:58.550"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 15:30:58.550" endtime="20220705 15:30:58.550"/>
</return>
<msg timestamp="20220705 15:30:58.550" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 15:30:58.301" endtime="20220705 15:30:58.550"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 15:30:58.550" endtime="20220705 15:30:58.550"/>
</return>
<msg timestamp="20220705 15:30:58.550" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 15:30:58.301" endtime="20220705 15:30:58.551"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>board</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 15:30:58.551" endtime="20220705 15:30:58.555"/>
</kw>
<status status="PASS" starttime="20220705 15:30:58.551" endtime="20220705 15:30:58.555"/>
</kw>
<kw name="Get A Board" library="Board">
<var>${response2}</var>
<arg>${response.json()}[id]</arg>
<doc>Gets the Board with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 15:30:58.557" level="INFO">${url} = boards/62c45932f0176c291323f8ba</msg>
<status status="PASS" starttime="20220705 15:30:58.556" endtime="20220705 15:30:58.557"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 15:30:58.678" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 15:30:58.557" endtime="20220705 15:30:58.678"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 15:30:58.678" endtime="20220705 15:30:58.679"/>
</return>
<msg timestamp="20220705 15:30:58.679" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 15:30:58.556" endtime="20220705 15:30:58.679"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 15:30:58.679" endtime="20220705 15:30:58.679"/>
</return>
<msg timestamp="20220705 15:30:58.679" level="INFO">${response2} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 15:30:58.555" endtime="20220705 15:30:58.679"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response2}</arg>
<arg>board</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 15:30:58.680" endtime="20220705 15:30:58.684"/>
</kw>
<status status="PASS" starttime="20220705 15:30:58.680" endtime="20220705 15:30:58.684"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${response2.json()}[name]</arg>
<arg>BoardTest</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220705 15:30:58.684" endtime="20220705 15:30:58.685"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${response.json()}[id]</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${response.json()}[id]</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 15:30:58.687" level="INFO">${url} = boards/62c45932f0176c291323f8ba</msg>
<status status="PASS" starttime="20220705 15:30:58.686" endtime="20220705 15:30:58.687"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 15:31:01.111" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 15:30:58.687" endtime="20220705 15:31:01.111"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 15:31:01.111" endtime="20220705 15:31:01.111"/>
</return>
<msg timestamp="20220705 15:31:01.111" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 15:30:58.686" endtime="20220705 15:31:01.111"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 15:31:01.111" endtime="20220705 15:31:01.111"/>
</return>
<status status="PASS" starttime="20220705 15:30:58.685" endtime="20220705 15:31:01.112"/>
</kw>
<status status="PASS" starttime="20220705 15:30:58.685" endtime="20220705 15:31:01.112"/>
</kw>
<doc>Verify that a board's information can be accesed through API</doc>
<tag>api</tag>
<tag>board.get</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220705 15:30:58.300" endtime="20220705 15:31:01.112"/>
</test>
<test id="s1-s1-s1-t5" name="UPDATE a Board's description" line="45">
<kw name="Create A Board" library="Board">
<var>${response}</var>
<arg>NewBoardForTest</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 15:31:01.114" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 15:31:01.113" endtime="20220705 15:31:01.114"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 15:31:01.114" endtime="20220705 15:31:01.114"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 15:31:01.115" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220705 15:31:01.114" endtime="20220705 15:31:01.115"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 15:31:01.341" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 15:31:01.115" endtime="20220705 15:31:01.341"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 15:31:01.341" endtime="20220705 15:31:01.341"/>
</return>
<msg timestamp="20220705 15:31:01.341" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 15:31:01.113" endtime="20220705 15:31:01.342"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 15:31:01.342" endtime="20220705 15:31:01.342"/>
</return>
<msg timestamp="20220705 15:31:01.342" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 15:31:01.113" endtime="20220705 15:31:01.342"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>board</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 15:31:01.342" endtime="20220705 15:31:01.346"/>
</kw>
<status status="PASS" starttime="20220705 15:31:01.342" endtime="20220705 15:31:01.346"/>
</kw>
<kw name="Update A Board" library="Board">
<arg>${response.json()}[id]</arg>
<arg>desc</arg>
<arg>sampleDescription</arg>
<doc>Updates the board with the given ID
optional_args: name, desc, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 15:31:01.348" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 15:31:01.348" endtime="20220705 15:31:01.348"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 15:31:01.348" endtime="20220705 15:31:01.348"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 15:31:01.348" level="INFO">${url} = boards/62c4593501094745e70843f1</msg>
<status status="PASS" starttime="20220705 15:31:01.348" endtime="20220705 15:31:01.348"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 15:31:01.531" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 15:31:01.348" endtime="20220705 15:31:01.531"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 15:31:01.531" endtime="20220705 15:31:01.531"/>
</return>
<msg timestamp="20220705 15:31:01.531" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 15:31:01.347" endtime="20220705 15:31:01.531"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 15:31:01.531" endtime="20220705 15:31:01.531"/>
</return>
<status status="PASS" starttime="20220705 15:31:01.346" endtime="20220705 15:31:01.531"/>
</kw>
<kw name="Get A Board" library="Board">
<var>${new_response}</var>
<arg>${response.json()}[id]</arg>
<doc>Gets the Board with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 15:31:01.533" level="INFO">${url} = boards/62c4593501094745e70843f1</msg>
<status status="PASS" starttime="20220705 15:31:01.533" endtime="20220705 15:31:01.533"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 15:31:01.661" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 15:31:01.533" endtime="20220705 15:31:01.661"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 15:31:01.661" endtime="20220705 15:31:01.661"/>
</return>
<msg timestamp="20220705 15:31:01.661" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 15:31:01.532" endtime="20220705 15:31:01.661"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 15:31:01.661" endtime="20220705 15:31:01.661"/>
</return>
<msg timestamp="20220705 15:31:01.661" level="INFO">${new_response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 15:31:01.531" endtime="20220705 15:31:01.661"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${new_response.json()}[desc]</arg>
<arg>sampleDescription</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220705 15:31:01.662" endtime="20220705 15:31:01.662"/>
</kw>
<kw name="Update A Board" library="Board">
<arg>${response.json()}[id]</arg>
<arg>desc</arg>
<arg>updatedDescription</arg>
<doc>Updates the board with the given ID
optional_args: name, desc, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 15:31:01.664" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 15:31:01.664" endtime="20220705 15:31:01.664"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 15:31:01.664" endtime="20220705 15:31:01.664"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 15:31:01.665" level="INFO">${url} = boards/62c4593501094745e70843f1</msg>
<status status="PASS" starttime="20220705 15:31:01.664" endtime="20220705 15:31:01.665"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 15:31:01.843" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 15:31:01.665" endtime="20220705 15:31:01.843"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 15:31:01.843" endtime="20220705 15:31:01.843"/>
</return>
<msg timestamp="20220705 15:31:01.844" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 15:31:01.663" endtime="20220705 15:31:01.844"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 15:31:01.844" endtime="20220705 15:31:01.844"/>
</return>
<status status="PASS" starttime="20220705 15:31:01.662" endtime="20220705 15:31:01.844"/>
</kw>
<kw name="Get A Board" library="Board">
<var>${new_response2}</var>
<arg>${response.json()}[id]</arg>
<doc>Gets the Board with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 15:31:01.846" level="INFO">${url} = boards/62c4593501094745e70843f1</msg>
<status status="PASS" starttime="20220705 15:31:01.845" endtime="20220705 15:31:01.846"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 15:31:01.969" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 15:31:01.846" endtime="20220705 15:31:01.969"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 15:31:01.969" endtime="20220705 15:31:01.969"/>
</return>
<msg timestamp="20220705 15:31:01.969" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 15:31:01.845" endtime="20220705 15:31:01.969"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 15:31:01.969" endtime="20220705 15:31:01.969"/>
</return>
<msg timestamp="20220705 15:31:01.970" level="INFO">${new_response2} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 15:31:01.844" endtime="20220705 15:31:01.970"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${new_response2.json()}[desc]</arg>
<arg>updatedDescription</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220705 15:31:01.970" endtime="20220705 15:31:01.970"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${response.json()}[id]</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${response.json()}[id]</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 15:31:01.972" level="INFO">${url} = boards/62c4593501094745e70843f1</msg>
<status status="PASS" starttime="20220705 15:31:01.972" endtime="20220705 15:31:01.972"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 15:31:03.183" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 15:31:01.973" endtime="20220705 15:31:03.183"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 15:31:03.183" endtime="20220705 15:31:03.183"/>
</return>
<msg timestamp="20220705 15:31:03.184" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 15:31:01.972" endtime="20220705 15:31:03.184"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 15:31:03.184" endtime="20220705 15:31:03.184"/>
</return>
<status status="PASS" starttime="20220705 15:31:01.971" endtime="20220705 15:31:03.184"/>
</kw>
<status status="PASS" starttime="20220705 15:31:01.971" endtime="20220705 15:31:03.184"/>
</kw>
<doc>Verify that a board's description can be updated through API</doc>
<tag>api</tag>
<tag>board.update</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220705 15:31:01.112" endtime="20220705 15:31:03.184"/>
</test>
<kw name="Delete All Sessions" library="request_own_library" type="TEARDOWN">
<status status="PASS" starttime="20220705 15:31:03.185" endtime="20220705 15:31:03.186"/>
</kw>
<doc>Example Test with Trello API Boards</doc>
<status status="PASS" starttime="20220705 15:30:55.542" endtime="20220705 15:31:03.186"/>
</suite>
<suite id="s1-s1-s2" name="Trello Api Cards Tests" source="/trello/api/trello_api_cards_tests.robot">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Create Trello Session</arg>
<arg>Setup Board And List</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Create Trello Session" library="TrelloAPI">
<doc>Creates a Trello Session</doc>
<kw name="Create Session" library="request_own_library">
<arg>${API_BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<status status="PASS" starttime="20220705 15:31:03.197" endtime="20220705 15:31:03.197"/>
</kw>
<status status="PASS" starttime="20220705 15:31:03.196" endtime="20220705 15:31:03.197"/>
</kw>
<kw name="Setup Board And List">
<doc>Create a board and save its ID and its first list's ID</doc>
<kw name="Create A Board" library="Board">
<var>${BOARD}</var>
<arg>TestBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 15:31:03.198" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 15:31:03.198" endtime="20220705 15:31:03.198"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 15:31:03.198" endtime="20220705 15:31:03.198"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 15:31:03.199" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220705 15:31:03.198" endtime="20220705 15:31:03.199"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 15:31:03.509" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 15:31:03.199" endtime="20220705 15:31:03.509"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 15:31:03.509" endtime="20220705 15:31:03.509"/>
</return>
<msg timestamp="20220705 15:31:03.509" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 15:31:03.197" endtime="20220705 15:31:03.509"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 15:31:03.510" endtime="20220705 15:31:03.510"/>
</return>
<msg timestamp="20220705 15:31:03.510" level="INFO">${BOARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 15:31:03.197" endtime="20220705 15:31:03.510"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_BOARD_ID}</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220705 15:31:03.511" level="INFO">${TEST_SUITE_BOARD_ID} = 62c45937d59d9e5af63d7278</msg>
<status status="PASS" starttime="20220705 15:31:03.510" endtime="20220705 15:31:03.511"/>
</kw>
<kw name="Get Lists On A Board" library="Board">
<var>${LISTS}</var>
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Get all the lists in a board</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>lists_on_board</arg>
<arg>${id}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 15:31:03.512" level="INFO">${url} = boards/62c45937d59d9e5af63d7278/lists/</msg>
<status status="PASS" starttime="20220705 15:31:03.511" endtime="20220705 15:31:03.512"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 15:31:03.632" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 15:31:03.512" endtime="20220705 15:31:03.632"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 15:31:03.632" endtime="20220705 15:31:03.632"/>
</return>
<msg timestamp="20220705 15:31:03.632" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 15:31:03.511" endtime="20220705 15:31:03.632"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 15:31:03.632" endtime="20220705 15:31:03.632"/>
</return>
<msg timestamp="20220705 15:31:03.632" level="INFO">${LISTS} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 15:31:03.511" endtime="20220705 15:31:03.632"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_LIST_ID}</arg>
<arg>${LISTS.json()}[0][id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220705 15:31:03.633" level="INFO">${TEST_SUITE_LIST_ID} = 62c45937d59d9e5af63d727f</msg>
<status status="PASS" starttime="20220705 15:31:03.632" endtime="20220705 15:31:03.633"/>
</kw>
<status status="PASS" starttime="20220705 15:31:03.197" endtime="20220705 15:31:03.633"/>
</kw>
<status status="PASS" starttime="20220705 15:31:03.196" endtime="20220705 15:31:03.633"/>
</kw>
<test id="s1-s1-s2-t1" name="Verify A Card Can Be Created" line="13">
<kw name="Create A Card" library="Card">
<var>${response}</var>
<arg>name</arg>
<arg>RFCard2</arg>
<doc>Creates a new card in the given list.
required_args: listId
optional_args: name, desc, pos, idCardSource, idLabels, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>@{optional_args}</arg>
<arg>idList</arg>
<arg>${idList}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 15:31:03.635" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 15:31:03.635" endtime="20220705 15:31:03.635"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 15:31:03.635" endtime="20220705 15:31:03.635"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 15:31:03.636" level="INFO">${url} = cards/</msg>
<status status="PASS" starttime="20220705 15:31:03.636" endtime="20220705 15:31:03.636"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 15:31:03.871" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 15:31:03.636" endtime="20220705 15:31:03.871"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 15:31:03.871" endtime="20220705 15:31:03.871"/>
</return>
<msg timestamp="20220705 15:31:03.871" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 15:31:03.634" endtime="20220705 15:31:03.871"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 15:31:03.871" endtime="20220705 15:31:03.871"/>
</return>
<msg timestamp="20220705 15:31:03.871" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 15:31:03.634" endtime="20220705 15:31:03.871"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>card</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 15:31:03.872" endtime="20220705 15:31:03.877"/>
</kw>
<status status="PASS" starttime="20220705 15:31:03.871" endtime="20220705 15:31:03.877"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 15:31:03.877" endtime="20220705 15:31:03.877"/>
</return>
<msg timestamp="20220705 15:31:03.878" level="INFO">${CARD_ID} = 62c459375c1c1306fd361549</msg>
<status status="PASS" starttime="20220705 15:31:03.877" endtime="20220705 15:31:03.878"/>
</kw>
<kw name="Get A Card" library="Card">
<var>${response}</var>
<arg>${CARD_ID}</arg>
<doc>Gets the card with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 15:31:03.879" level="INFO">${url} = cards/62c459375c1c1306fd361549</msg>
<status status="PASS" starttime="20220705 15:31:03.879" endtime="20220705 15:31:03.879"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 15:31:04.031" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 15:31:03.879" endtime="20220705 15:31:04.031"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 15:31:04.031" endtime="20220705 15:31:04.031"/>
</return>
<msg timestamp="20220705 15:31:04.031" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 15:31:03.878" endtime="20220705 15:31:04.031"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 15:31:04.032" endtime="20220705 15:31:04.032"/>
</return>
<msg timestamp="20220705 15:31:04.032" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 15:31:03.878" endtime="20220705 15:31:04.032"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_NAME}</var>
<arg>${response}</arg>
<arg>name</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 15:31:04.032" endtime="20220705 15:31:04.032"/>
</return>
<msg timestamp="20220705 15:31:04.033" level="INFO">${CARD_NAME} = RFCard2</msg>
<status status="PASS" starttime="20220705 15:31:04.032" endtime="20220705 15:31:04.033"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${CARD_NAME}</arg>
<arg>RFCard2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220705 15:31:04.033" endtime="20220705 15:31:04.033"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Card</arg>
<arg>${CARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Card" library="Card">
<arg>${CARD_ID}</arg>
<doc>Deletes the card with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 15:31:04.035" level="INFO">${url} = cards/62c459375c1c1306fd361549</msg>
<status status="PASS" starttime="20220705 15:31:04.035" endtime="20220705 15:31:04.035"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 15:31:04.330" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 15:31:04.035" endtime="20220705 15:31:04.330"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 15:31:04.330" endtime="20220705 15:31:04.330"/>
</return>
<msg timestamp="20220705 15:31:04.331" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 15:31:04.034" endtime="20220705 15:31:04.331"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 15:31:04.331" endtime="20220705 15:31:04.331"/>
</return>
<status status="PASS" starttime="20220705 15:31:04.034" endtime="20220705 15:31:04.331"/>
</kw>
<status status="PASS" starttime="20220705 15:31:04.034" endtime="20220705 15:31:04.331"/>
</kw>
<doc>Verify that a card can be created through API</doc>
<tag>api</tag>
<tag>card.create</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220705 15:31:03.634" endtime="20220705 15:31:04.331"/>
</test>
<test id="s1-s1-s2-t2" name="Verify A Card Can Be Closed" line="24">
<kw name="Create A Card" library="Card">
<var>${response}</var>
<doc>Creates a new card in the given list.
required_args: listId
optional_args: name, desc, pos, idCardSource, idLabels, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>@{optional_args}</arg>
<arg>idList</arg>
<arg>${idList}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 15:31:04.333" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 15:31:04.333" endtime="20220705 15:31:04.333"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 15:31:04.333" endtime="20220705 15:31:04.334"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 15:31:04.334" level="INFO">${url} = cards/</msg>
<status status="PASS" starttime="20220705 15:31:04.334" endtime="20220705 15:31:04.334"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 15:31:04.554" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 15:31:04.335" endtime="20220705 15:31:04.554"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 15:31:04.554" endtime="20220705 15:31:04.554"/>
</return>
<msg timestamp="20220705 15:31:04.554" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 15:31:04.333" endtime="20220705 15:31:04.554"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 15:31:04.554" endtime="20220705 15:31:04.554"/>
</return>
<msg timestamp="20220705 15:31:04.554" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 15:31:04.332" endtime="20220705 15:31:04.554"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 15:31:04.555" endtime="20220705 15:31:04.555"/>
</return>
<msg timestamp="20220705 15:31:04.555" level="INFO">${CARD_ID} = 62c45938ba1c05842b5a7690</msg>
<status status="PASS" starttime="20220705 15:31:04.554" endtime="20220705 15:31:04.555"/>
</kw>
<kw name="Archive A Card" library="Card">
<arg>${CARD_ID}</arg>
<doc>Modifies the card status to closed.</doc>
<kw name="Update A Card" library="Card">
<var>${response}</var>
<arg>${id}</arg>
<arg>closed</arg>
<arg>true</arg>
<arg>status_code=${status_code}</arg>
<doc>Updates the card with the given ID
optional_args: name, desc, closed, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<arg>status_code=${status_code}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 15:31:04.557" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 15:31:04.557" endtime="20220705 15:31:04.557"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 15:31:04.558" endtime="20220705 15:31:04.558"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 15:31:04.558" level="INFO">${url} = cards/62c45938ba1c05842b5a7690</msg>
<status status="PASS" starttime="20220705 15:31:04.558" endtime="20220705 15:31:04.558"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 15:31:04.758" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 15:31:04.558" endtime="20220705 15:31:04.758"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 15:31:04.758" endtime="20220705 15:31:04.758"/>
</return>
<msg timestamp="20220705 15:31:04.759" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 15:31:04.557" endtime="20220705 15:31:04.759"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 15:31:04.759" endtime="20220705 15:31:04.759"/>
</return>
<msg timestamp="20220705 15:31:04.759" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 15:31:04.556" endtime="20220705 15:31:04.759"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 15:31:04.759" endtime="20220705 15:31:04.759"/>
</return>
<status status="PASS" starttime="20220705 15:31:04.556" endtime="20220705 15:31:04.759"/>
</kw>
<kw name="Get A Card" library="Card">
<var>${response}</var>
<arg>${CARD_ID}</arg>
<doc>Gets the card with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 15:31:04.760" level="INFO">${url} = cards/62c45938ba1c05842b5a7690</msg>
<status status="PASS" starttime="20220705 15:31:04.760" endtime="20220705 15:31:04.760"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 15:31:04.882" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 15:31:04.761" endtime="20220705 15:31:04.882"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 15:31:04.882" endtime="20220705 15:31:04.882"/>
</return>
<msg timestamp="20220705 15:31:04.882" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 15:31:04.760" endtime="20220705 15:31:04.882"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 15:31:04.882" endtime="20220705 15:31:04.882"/>
</return>
<msg timestamp="20220705 15:31:04.882" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 15:31:04.759" endtime="20220705 15:31:04.882"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_CLOSED}</var>
<arg>${response}</arg>
<arg>closed</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 15:31:04.883" endtime="20220705 15:31:04.883"/>
</return>
<msg timestamp="20220705 15:31:04.884" level="INFO">${CARD_CLOSED} = True</msg>
<status status="PASS" starttime="20220705 15:31:04.882" endtime="20220705 15:31:04.884"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${CARD_CLOSED}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220705 15:31:04.884" endtime="20220705 15:31:04.884"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Card</arg>
<arg>${CARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Card" library="Card">
<arg>${CARD_ID}</arg>
<doc>Deletes the card with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 15:31:04.885" level="INFO">${url} = cards/62c45938ba1c05842b5a7690</msg>
<status status="PASS" starttime="20220705 15:31:04.885" endtime="20220705 15:31:04.885"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 15:31:05.097" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 15:31:04.885" endtime="20220705 15:31:05.097"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 15:31:05.097" endtime="20220705 15:31:05.097"/>
</return>
<msg timestamp="20220705 15:31:05.098" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 15:31:04.885" endtime="20220705 15:31:05.098"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 15:31:05.098" endtime="20220705 15:31:05.098"/>
</return>
<status status="PASS" starttime="20220705 15:31:04.884" endtime="20220705 15:31:05.098"/>
</kw>
<status status="PASS" starttime="20220705 15:31:04.884" endtime="20220705 15:31:05.098"/>
</kw>
<doc>Verify that a card can be closed through API</doc>
<tag>api</tag>
<tag>card.close</tag>
<tag>regression</tag>
<status status="PASS" starttime="20220705 15:31:04.331" endtime="20220705 15:31:05.098"/>
</test>
<test id="s1-s1-s2-t3" name="Verify A Card Can Be Deleted" line="35">
<kw name="Create A Card" library="Card">
<var>${response}</var>
<doc>Creates a new card in the given list.
required_args: listId
optional_args: name, desc, pos, idCardSource, idLabels, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>@{optional_args}</arg>
<arg>idList</arg>
<arg>${idList}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 15:31:05.101" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 15:31:05.100" endtime="20220705 15:31:05.101"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 15:31:05.101" endtime="20220705 15:31:05.101"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 15:31:05.102" level="INFO">${url} = cards/</msg>
<status status="PASS" starttime="20220705 15:31:05.101" endtime="20220705 15:31:05.102"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 15:31:05.334" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 15:31:05.102" endtime="20220705 15:31:05.334"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 15:31:05.334" endtime="20220705 15:31:05.334"/>
</return>
<msg timestamp="20220705 15:31:05.334" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 15:31:05.100" endtime="20220705 15:31:05.334"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 15:31:05.334" endtime="20220705 15:31:05.334"/>
</return>
<msg timestamp="20220705 15:31:05.335" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 15:31:05.099" endtime="20220705 15:31:05.335"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 15:31:05.335" endtime="20220705 15:31:05.335"/>
</return>
<msg timestamp="20220705 15:31:05.336" level="INFO">${CARD_ID} = 62c45939aafbce30229f7a27</msg>
<status status="PASS" starttime="20220705 15:31:05.335" endtime="20220705 15:31:05.336"/>
</kw>
<kw name="Delete A Card" library="Card">
<var>${response}</var>
<arg>${CARD_ID}</arg>
<doc>Deletes the card with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 15:31:05.337" level="INFO">${url} = cards/62c45939aafbce30229f7a27</msg>
<status status="PASS" starttime="20220705 15:31:05.337" endtime="20220705 15:31:05.337"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 15:31:05.606" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 15:31:05.337" endtime="20220705 15:31:05.606"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 15:31:05.606" endtime="20220705 15:31:05.606"/>
</return>
<msg timestamp="20220705 15:31:05.606" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 15:31:05.336" endtime="20220705 15:31:05.606"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 15:31:05.606" endtime="20220705 15:31:05.606"/>
</return>
<msg timestamp="20220705 15:31:05.606" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 15:31:05.336" endtime="20220705 15:31:05.606"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>delete</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 15:31:05.607" endtime="20220705 15:31:05.609"/>
</kw>
<status status="PASS" starttime="20220705 15:31:05.606" endtime="20220705 15:31:05.609"/>
</kw>
<kw name="Get A Card" library="Card">
<arg>${CARD_ID}</arg>
<arg>status_code=404</arg>
<doc>Gets the card with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 15:31:05.610" level="INFO">${url} = cards/62c45939aafbce30229f7a27</msg>
<status status="PASS" starttime="20220705 15:31:05.610" endtime="20220705 15:31:05.610"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 15:31:05.721" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220705 15:31:05.610" endtime="20220705 15:31:05.721"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 15:31:05.721" endtime="20220705 15:31:05.721"/>
</return>
<msg timestamp="20220705 15:31:05.722" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220705 15:31:05.609" endtime="20220705 15:31:05.722"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 15:31:05.722" endtime="20220705 15:31:05.722"/>
</return>
<status status="PASS" starttime="20220705 15:31:05.609" endtime="20220705 15:31:05.722"/>
</kw>
<doc>Verify that a card can be deleted through API</doc>
<tag>api</tag>
<tag>card.delete</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220705 15:31:05.098" endtime="20220705 15:31:05.722"/>
</test>
<test id="s1-s1-s2-t4" name="Verify A Card Can Be Updated" line="44">
<kw name="Create A Card" library="Card">
<var>${response}</var>
<arg>name</arg>
<arg>RFCard4</arg>
<doc>Creates a new card in the given list.
required_args: listId
optional_args: name, desc, pos, idCardSource, idLabels, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>@{optional_args}</arg>
<arg>idList</arg>
<arg>${idList}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 15:31:05.724" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 15:31:05.724" endtime="20220705 15:31:05.724"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 15:31:05.724" endtime="20220705 15:31:05.724"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 15:31:05.725" level="INFO">${url} = cards/</msg>
<status status="PASS" starttime="20220705 15:31:05.724" endtime="20220705 15:31:05.725"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 15:31:05.940" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 15:31:05.725" endtime="20220705 15:31:05.940"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 15:31:05.940" endtime="20220705 15:31:05.940"/>
</return>
<msg timestamp="20220705 15:31:05.941" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 15:31:05.723" endtime="20220705 15:31:05.941"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 15:31:05.941" endtime="20220705 15:31:05.941"/>
</return>
<msg timestamp="20220705 15:31:05.941" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 15:31:05.723" endtime="20220705 15:31:05.941"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 15:31:05.941" endtime="20220705 15:31:05.941"/>
</return>
<msg timestamp="20220705 15:31:05.942" level="INFO">${CARD_ID} = 62c4593918325115593f3472</msg>
<status status="PASS" starttime="20220705 15:31:05.941" endtime="20220705 15:31:05.942"/>
</kw>
<kw name="Update A Card" library="Card">
<var>${response}</var>
<arg>${CARD_ID}</arg>
<arg>name</arg>
<arg>RFCard5</arg>
<arg>desc</arg>
<arg>Description</arg>
<doc>Updates the card with the given ID
optional_args: name, desc, closed, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<arg>status_code=${status_code}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 15:31:05.943" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 15:31:05.943" endtime="20220705 15:31:05.943"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 15:31:05.944" endtime="20220705 15:31:05.944"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 15:31:05.944" level="INFO">${url} = cards/62c4593918325115593f3472</msg>
<status status="PASS" starttime="20220705 15:31:05.944" endtime="20220705 15:31:05.944"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 15:31:06.158" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 15:31:05.944" endtime="20220705 15:31:06.158"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 15:31:06.158" endtime="20220705 15:31:06.159"/>
</return>
<msg timestamp="20220705 15:31:06.159" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 15:31:05.943" endtime="20220705 15:31:06.159"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 15:31:06.159" endtime="20220705 15:31:06.159"/>
</return>
<msg timestamp="20220705 15:31:06.159" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 15:31:05.942" endtime="20220705 15:31:06.159"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>card</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 15:31:06.160" endtime="20220705 15:31:06.165"/>
</kw>
<status status="PASS" starttime="20220705 15:31:06.159" endtime="20220705 15:31:06.165"/>
</kw>
<kw name="Get A Card" library="Card">
<var>${response}</var>
<arg>${CARD_ID}</arg>
<doc>Gets the card with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 15:31:06.166" level="INFO">${url} = cards/62c4593918325115593f3472</msg>
<status status="PASS" starttime="20220705 15:31:06.166" endtime="20220705 15:31:06.166"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 15:31:06.299" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 15:31:06.166" endtime="20220705 15:31:06.299"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 15:31:06.299" endtime="20220705 15:31:06.299"/>
</return>
<msg timestamp="20220705 15:31:06.299" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 15:31:06.165" endtime="20220705 15:31:06.299"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 15:31:06.299" endtime="20220705 15:31:06.299"/>
</return>
<msg timestamp="20220705 15:31:06.299" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 15:31:06.165" endtime="20220705 15:31:06.299"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_NAME}</var>
<arg>${response}</arg>
<arg>name</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 15:31:06.300" endtime="20220705 15:31:06.300"/>
</return>
<msg timestamp="20220705 15:31:06.301" level="INFO">${CARD_NAME} = RFCard5</msg>
<status status="PASS" starttime="20220705 15:31:06.299" endtime="20220705 15:31:06.301"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_DESC}</var>
<arg>${response}</arg>
<arg>desc</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 15:31:06.301" endtime="20220705 15:31:06.301"/>
</return>
<msg timestamp="20220705 15:31:06.302" level="INFO">${CARD_DESC} = Description</msg>
<status status="PASS" starttime="20220705 15:31:06.301" endtime="20220705 15:31:06.302"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${CARD_NAME}</arg>
<arg>RFCard5</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220705 15:31:06.302" endtime="20220705 15:31:06.302"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${CARD_DESC}</arg>
<arg>Description</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220705 15:31:06.302" endtime="20220705 15:31:06.302"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Card</arg>
<arg>${CARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Card" library="Card">
<arg>${CARD_ID}</arg>
<doc>Deletes the card with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 15:31:06.304" level="INFO">${url} = cards/62c4593918325115593f3472</msg>
<status status="PASS" starttime="20220705 15:31:06.303" endtime="20220705 15:31:06.304"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 15:31:06.549" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 15:31:06.304" endtime="20220705 15:31:06.549"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 15:31:06.549" endtime="20220705 15:31:06.549"/>
</return>
<msg timestamp="20220705 15:31:06.549" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 15:31:06.303" endtime="20220705 15:31:06.549"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 15:31:06.549" endtime="20220705 15:31:06.549"/>
</return>
<status status="PASS" starttime="20220705 15:31:06.303" endtime="20220705 15:31:06.549"/>
</kw>
<status status="PASS" starttime="20220705 15:31:06.302" endtime="20220705 15:31:06.550"/>
</kw>
<doc>Verify that a card's name and Description can be updated through API</doc>
<tag>api</tag>
<tag>card.update</tag>
<tag>regression</tag>
<status status="PASS" starttime="20220705 15:31:05.722" endtime="20220705 15:31:06.550"/>
</test>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Teardown Board</arg>
<arg>Delete All Sessions</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Teardown Board">
<doc>Delete the board created for this suite</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 15:31:06.553" level="INFO">${url} = boards/62c45937d59d9e5af63d7278</msg>
<status status="PASS" starttime="20220705 15:31:06.552" endtime="20220705 15:31:06.553"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 15:31:06.978" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 15:31:06.553" endtime="20220705 15:31:06.978"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 15:31:06.979" endtime="20220705 15:31:06.979"/>
</return>
<msg timestamp="20220705 15:31:06.979" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 15:31:06.552" endtime="20220705 15:31:06.979"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 15:31:06.979" endtime="20220705 15:31:06.979"/>
</return>
<status status="PASS" starttime="20220705 15:31:06.551" endtime="20220705 15:31:06.979"/>
</kw>
<status status="PASS" starttime="20220705 15:31:06.551" endtime="20220705 15:31:06.979"/>
</kw>
<status status="PASS" starttime="20220705 15:31:06.551" endtime="20220705 15:31:06.979"/>
</kw>
<kw name="Delete All Sessions" library="request_own_library">
<status status="PASS" starttime="20220705 15:31:06.979" endtime="20220705 15:31:06.980"/>
</kw>
<status status="PASS" starttime="20220705 15:31:06.551" endtime="20220705 15:31:06.980"/>
</kw>
<doc>Example Test with Trello API Cards</doc>
<status status="PASS" starttime="20220705 15:31:03.187" endtime="20220705 15:31:06.980"/>
</suite>
<suite id="s1-s1-s3" name="Trello Api Checklists Tests" source="/trello/api/trello_api_checklists_tests.robot">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Create Trello Session</arg>
<arg>Setup Board, List And Card</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Create Trello Session" library="TrelloAPI">
<doc>Creates a Trello Session</doc>
<kw name="Create Session" library="request_own_library">
<arg>${API_BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<status status="PASS" starttime="20220705 15:31:06.991" endtime="20220705 15:31:06.991"/>
</kw>
<status status="PASS" starttime="20220705 15:31:06.990" endtime="20220705 15:31:06.991"/>
</kw>
<kw name="Setup Board, List And Card">
<doc>Create a board and save its ID and its first list's ID</doc>
<kw name="Create A Board" library="Board">
<var>${BOARD}</var>
<arg>TestBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 15:31:06.992" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 15:31:06.992" endtime="20220705 15:31:06.992"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 15:31:06.992" endtime="20220705 15:31:06.992"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 15:31:06.993" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220705 15:31:06.992" endtime="20220705 15:31:06.993"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 15:31:07.326" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 15:31:06.993" endtime="20220705 15:31:07.326"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 15:31:07.326" endtime="20220705 15:31:07.326"/>
</return>
<msg timestamp="20220705 15:31:07.327" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 15:31:06.991" endtime="20220705 15:31:07.327"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 15:31:07.327" endtime="20220705 15:31:07.327"/>
</return>
<msg timestamp="20220705 15:31:07.327" level="INFO">${BOARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 15:31:06.991" endtime="20220705 15:31:07.327"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_BOARD_ID}</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220705 15:31:07.328" level="INFO">${TEST_SUITE_BOARD_ID} = 62c4593b69a4e54e93582c79</msg>
<status status="PASS" starttime="20220705 15:31:07.327" endtime="20220705 15:31:07.328"/>
</kw>
<kw name="Get Lists On A Board" library="Board">
<var>${LISTS}</var>
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Get all the lists in a board</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>lists_on_board</arg>
<arg>${id}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 15:31:07.329" level="INFO">${url} = boards/62c4593b69a4e54e93582c79/lists/</msg>
<status status="PASS" starttime="20220705 15:31:07.329" endtime="20220705 15:31:07.329"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 15:31:07.455" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 15:31:07.329" endtime="20220705 15:31:07.455"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 15:31:07.455" endtime="20220705 15:31:07.455"/>
</return>
<msg timestamp="20220705 15:31:07.455" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 15:31:07.328" endtime="20220705 15:31:07.455"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 15:31:07.455" endtime="20220705 15:31:07.455"/>
</return>
<msg timestamp="20220705 15:31:07.456" level="INFO">${LISTS} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 15:31:07.328" endtime="20220705 15:31:07.456"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_LIST_ID}</arg>
<arg>${LISTS.json()}[0][id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220705 15:31:07.456" level="INFO">${TEST_SUITE_LIST_ID} = 62c4593b69a4e54e93582c80</msg>
<status status="PASS" starttime="20220705 15:31:07.456" endtime="20220705 15:31:07.456"/>
</kw>
<kw name="Create A Card" library="Card">
<var>${CARD}</var>
<arg>name</arg>
<arg>TestCard</arg>
<doc>Creates a new card in the given list.
required_args: listId
optional_args: name, desc, pos, idCardSource, idLabels, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>@{optional_args}</arg>
<arg>idList</arg>
<arg>${idList}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 15:31:07.458" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 15:31:07.458" endtime="20220705 15:31:07.458"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 15:31:07.458" endtime="20220705 15:31:07.458"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 15:31:07.459" level="INFO">${url} = cards/</msg>
<status status="PASS" starttime="20220705 15:31:07.458" endtime="20220705 15:31:07.459"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 15:31:07.722" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 15:31:07.459" endtime="20220705 15:31:07.722"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 15:31:07.722" endtime="20220705 15:31:07.722"/>
</return>
<msg timestamp="20220705 15:31:07.722" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 15:31:07.457" endtime="20220705 15:31:07.722"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 15:31:07.722" endtime="20220705 15:31:07.722"/>
</return>
<msg timestamp="20220705 15:31:07.722" level="INFO">${CARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 15:31:07.457" endtime="20220705 15:31:07.722"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_CARD_ID}</arg>
<arg>${CARD.json()}[id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220705 15:31:07.723" level="INFO">${TEST_SUITE_CARD_ID} = 62c4593b2bdbbc62908845aa</msg>
<status status="PASS" starttime="20220705 15:31:07.722" endtime="20220705 15:31:07.723"/>
</kw>
<status status="PASS" starttime="20220705 15:31:06.991" endtime="20220705 15:31:07.723"/>
</kw>
<status status="PASS" starttime="20220705 15:31:06.990" endtime="20220705 15:31:07.723"/>
</kw>
<test id="s1-s1-s3-t1" name="Verify A Checklist Can Be Created" line="14">
<kw name="Create A Checklist" library="Checklist">
<var>${response}</var>
<arg>name</arg>
<arg>TestChecklist</arg>
<arg>idCard=${TEST_SUITE_CARD_ID}</arg>
<doc>Creates a new checklist in the given card.
required_args: idCard
optional_args: name, pos, idChecklistSource
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>@{optional_args}</arg>
<arg>idCard</arg>
<arg>${idCard}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 15:31:07.725" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 15:31:07.725" endtime="20220705 15:31:07.725"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 15:31:07.725" endtime="20220705 15:31:07.726"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 15:31:07.726" level="INFO">${url} = checklists/</msg>
<status status="PASS" starttime="20220705 15:31:07.726" endtime="20220705 15:31:07.726"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 15:31:07.943" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 15:31:07.726" endtime="20220705 15:31:07.943"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 15:31:07.943" endtime="20220705 15:31:07.943"/>
</return>
<msg timestamp="20220705 15:31:07.943" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 15:31:07.725" endtime="20220705 15:31:07.943"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 15:31:07.943" endtime="20220705 15:31:07.943"/>
</return>
<msg timestamp="20220705 15:31:07.943" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 15:31:07.724" endtime="20220705 15:31:07.943"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${checklist_id}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 15:31:07.944" endtime="20220705 15:31:07.944"/>
</return>
<msg timestamp="20220705 15:31:07.945" level="INFO">${checklist_id} = 62c4593b61421e8ff8963933</msg>
<status status="PASS" starttime="20220705 15:31:07.944" endtime="20220705 15:31:07.945"/>
</kw>
<kw name="Get A Checklist" library="Checklist">
<var>${response}</var>
<arg>${checklist_id}</arg>
<doc>Gets the checklist with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 15:31:07.946" level="INFO">${url} = checklists/62c4593b61421e8ff8963933</msg>
<status status="PASS" starttime="20220705 15:31:07.945" endtime="20220705 15:31:07.946"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 15:31:08.078" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 15:31:07.946" endtime="20220705 15:31:08.078"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 15:31:08.078" endtime="20220705 15:31:08.078"/>
</return>
<msg timestamp="20220705 15:31:08.079" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 15:31:07.945" endtime="20220705 15:31:08.079"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 15:31:08.079" endtime="20220705 15:31:08.079"/>
</return>
<msg timestamp="20220705 15:31:08.079" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 15:31:07.945" endtime="20220705 15:31:08.079"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${checklist_name}</var>
<arg>${response}</arg>
<arg>name</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 15:31:08.080" endtime="20220705 15:31:08.080"/>
</return>
<msg timestamp="20220705 15:31:08.080" level="INFO">${checklist_name} = TestChecklist</msg>
<status status="PASS" starttime="20220705 15:31:08.079" endtime="20220705 15:31:08.080"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${checklist_name}</arg>
<arg>TestChecklist</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220705 15:31:08.080" endtime="20220705 15:31:08.081"/>
</kw>
<kw name="Delete A Checklist" library="Checklist" type="TEARDOWN">
<arg>${checklist_id}</arg>
<doc>Deletes the checklist with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 15:31:08.082" level="INFO">${url} = checklists/62c4593b61421e8ff8963933</msg>
<status status="PASS" starttime="20220705 15:31:08.082" endtime="20220705 15:31:08.082"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 15:31:08.271" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 15:31:08.082" endtime="20220705 15:31:08.271"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 15:31:08.271" endtime="20220705 15:31:08.271"/>
</return>
<msg timestamp="20220705 15:31:08.271" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 15:31:08.081" endtime="20220705 15:31:08.271"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 15:31:08.271" endtime="20220705 15:31:08.271"/>
</return>
<status status="PASS" starttime="20220705 15:31:08.081" endtime="20220705 15:31:08.271"/>
</kw>
<doc>Verify that a checklist can be created through API</doc>
<tag>api</tag>
<tag>checklist.create</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220705 15:31:07.724" endtime="20220705 15:31:08.271"/>
</test>
<test id="s1-s1-s3-t2" name="Verify A Checklist Can Be Deleted" line="24">
<kw name="Create A Checklist" library="Checklist">
<var>${response}</var>
<arg>name</arg>
<arg>TestChecklist</arg>
<arg>idCard=${TEST_SUITE_CARD_ID}</arg>
<doc>Creates a new checklist in the given card.
required_args: idCard
optional_args: name, pos, idChecklistSource
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>@{optional_args}</arg>
<arg>idCard</arg>
<arg>${idCard}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 15:31:08.273" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 15:31:08.273" endtime="20220705 15:31:08.273"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 15:31:08.273" endtime="20220705 15:31:08.274"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 15:31:08.274" level="INFO">${url} = checklists/</msg>
<status status="PASS" starttime="20220705 15:31:08.274" endtime="20220705 15:31:08.274"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 15:31:08.463" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 15:31:08.275" endtime="20220705 15:31:08.463"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 15:31:08.463" endtime="20220705 15:31:08.463"/>
</return>
<msg timestamp="20220705 15:31:08.464" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 15:31:08.273" endtime="20220705 15:31:08.464"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 15:31:08.464" endtime="20220705 15:31:08.464"/>
</return>
<msg timestamp="20220705 15:31:08.464" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 15:31:08.272" endtime="20220705 15:31:08.464"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${checklist_id}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 15:31:08.464" endtime="20220705 15:31:08.464"/>
</return>
<msg timestamp="20220705 15:31:08.465" level="INFO">${checklist_id} = 62c4593cf0efd97ea9589de3</msg>
<status status="PASS" starttime="20220705 15:31:08.464" endtime="20220705 15:31:08.465"/>
</kw>
<kw name="Delete A Checklist" library="Checklist">
<var>${response}</var>
<arg>${checklist_id}</arg>
<doc>Deletes the checklist with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 15:31:08.467" level="INFO">${url} = checklists/62c4593cf0efd97ea9589de3</msg>
<status status="PASS" starttime="20220705 15:31:08.466" endtime="20220705 15:31:08.467"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 15:31:08.671" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 15:31:08.467" endtime="20220705 15:31:08.671"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 15:31:08.671" endtime="20220705 15:31:08.671"/>
</return>
<msg timestamp="20220705 15:31:08.671" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 15:31:08.466" endtime="20220705 15:31:08.671"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 15:31:08.671" endtime="20220705 15:31:08.671"/>
</return>
<msg timestamp="20220705 15:31:08.672" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 15:31:08.466" endtime="20220705 15:31:08.672"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>delete</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 15:31:08.672" endtime="20220705 15:31:08.674"/>
</kw>
<status status="PASS" starttime="20220705 15:31:08.672" endtime="20220705 15:31:08.674"/>
</kw>
<kw name="Get A Checklist" library="Checklist">
<arg>${checklist_id}</arg>
<arg>status_code=404</arg>
<doc>Gets the checklist with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 15:31:08.675" level="INFO">${url} = checklists/62c4593cf0efd97ea9589de3</msg>
<status status="PASS" starttime="20220705 15:31:08.675" endtime="20220705 15:31:08.675"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 15:31:08.776" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220705 15:31:08.675" endtime="20220705 15:31:08.776"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 15:31:08.776" endtime="20220705 15:31:08.776"/>
</return>
<msg timestamp="20220705 15:31:08.777" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220705 15:31:08.674" endtime="20220705 15:31:08.777"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 15:31:08.777" endtime="20220705 15:31:08.777"/>
</return>
<status status="PASS" starttime="20220705 15:31:08.674" endtime="20220705 15:31:08.777"/>
</kw>
<doc>Verify that a checklist can be deleted through API</doc>
<tag>api</tag>
<tag>checklist.delete</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220705 15:31:08.272" endtime="20220705 15:31:08.777"/>
</test>
<test id="s1-s1-s3-t3" name="Verify A Checklist Can Be Updated" line="33">
<kw name="Create A Checklist" library="Checklist">
<var>${response}</var>
<arg>name</arg>
<arg>TestChecklist</arg>
<arg>idCard=${TEST_SUITE_CARD_ID}</arg>
<doc>Creates a new checklist in the given card.
required_args: idCard
optional_args: name, pos, idChecklistSource
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>@{optional_args}</arg>
<arg>idCard</arg>
<arg>${idCard}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 15:31:08.780" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 15:31:08.779" endtime="20220705 15:31:08.780"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 15:31:08.780" endtime="20220705 15:31:08.781"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 15:31:08.781" level="INFO">${url} = checklists/</msg>
<status status="PASS" starttime="20220705 15:31:08.781" endtime="20220705 15:31:08.781"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 15:31:08.973" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 15:31:08.781" endtime="20220705 15:31:08.973"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 15:31:08.973" endtime="20220705 15:31:08.973"/>
</return>
<msg timestamp="20220705 15:31:08.973" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 15:31:08.778" endtime="20220705 15:31:08.973"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 15:31:08.973" endtime="20220705 15:31:08.973"/>
</return>
<msg timestamp="20220705 15:31:08.974" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 15:31:08.778" endtime="20220705 15:31:08.974"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${checklist_id}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 15:31:08.974" endtime="20220705 15:31:08.974"/>
</return>
<msg timestamp="20220705 15:31:08.975" level="INFO">${checklist_id} = 62c4593c8e084456c3fe1f9e</msg>
<status status="PASS" starttime="20220705 15:31:08.974" endtime="20220705 15:31:08.975"/>
</kw>
<kw name="Update A Checklist" library="Checklist">
<var>${response}</var>
<arg>${checklist_id}</arg>
<arg>name</arg>
<arg>TestChecklist2</arg>
<doc>Updates the checklist with the given ID
optional_args: name, pos
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<arg>status_code=${status_code}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 15:31:08.976" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 15:31:08.976" endtime="20220705 15:31:08.976"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 15:31:08.976" endtime="20220705 15:31:08.976"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 15:31:08.977" level="INFO">${url} = checklists/62c4593c8e084456c3fe1f9e</msg>
<status status="PASS" starttime="20220705 15:31:08.976" endtime="20220705 15:31:08.977"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 15:31:09.136" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 15:31:08.977" endtime="20220705 15:31:09.136"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 15:31:09.137" endtime="20220705 15:31:09.137"/>
</return>
<msg timestamp="20220705 15:31:09.137" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 15:31:08.975" endtime="20220705 15:31:09.137"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 15:31:09.137" endtime="20220705 15:31:09.137"/>
</return>
<msg timestamp="20220705 15:31:09.137" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 15:31:08.975" endtime="20220705 15:31:09.137"/>
</kw>
<kw name="Get A Checklist" library="Checklist">
<var>${response}</var>
<arg>${checklist_id}</arg>
<doc>Gets the checklist with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 15:31:09.138" level="INFO">${url} = checklists/62c4593c8e084456c3fe1f9e</msg>
<status status="PASS" starttime="20220705 15:31:09.138" endtime="20220705 15:31:09.138"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 15:31:09.263" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 15:31:09.138" endtime="20220705 15:31:09.263"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 15:31:09.263" endtime="20220705 15:31:09.263"/>
</return>
<msg timestamp="20220705 15:31:09.263" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 15:31:09.138" endtime="20220705 15:31:09.263"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 15:31:09.263" endtime="20220705 15:31:09.263"/>
</return>
<msg timestamp="20220705 15:31:09.263" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 15:31:09.137" endtime="20220705 15:31:09.263"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${checklist_name}</var>
<arg>${response}</arg>
<arg>name</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 15:31:09.264" endtime="20220705 15:31:09.264"/>
</return>
<msg timestamp="20220705 15:31:09.264" level="INFO">${checklist_name} = TestChecklist2</msg>
<status status="PASS" starttime="20220705 15:31:09.263" endtime="20220705 15:31:09.264"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${checklist_name}</arg>
<arg>TestChecklist2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220705 15:31:09.265" endtime="20220705 15:31:09.265"/>
</kw>
<kw name="Delete A Checklist" library="Checklist" type="TEARDOWN">
<arg>${checklist_id}</arg>
<doc>Deletes the checklist with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 15:31:09.275" level="INFO">${url} = checklists/62c4593c8e084456c3fe1f9e</msg>
<status status="PASS" starttime="20220705 15:31:09.275" endtime="20220705 15:31:09.275"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 15:31:09.465" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 15:31:09.275" endtime="20220705 15:31:09.465"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 15:31:09.465" endtime="20220705 15:31:09.465"/>
</return>
<msg timestamp="20220705 15:31:09.466" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 15:31:09.274" endtime="20220705 15:31:09.466"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 15:31:09.466" endtime="20220705 15:31:09.466"/>
</return>
<status status="PASS" starttime="20220705 15:31:09.265" endtime="20220705 15:31:09.466"/>
</kw>
<doc>Verify that a checklist's name can be updated through API</doc>
<tag>api</tag>
<tag>checklist.update</tag>
<tag>regression</tag>
<status status="PASS" starttime="20220705 15:31:08.777" endtime="20220705 15:31:09.466"/>
</test>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Teardown Board</arg>
<arg>Delete All Sessions</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Teardown Board">
<doc>Delete the board created for this suite</doc>
<kw name="Delete A Board" library="Board">
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 15:31:09.468" level="INFO">${url} = boards/62c4593b69a4e54e93582c79</msg>
<status status="PASS" starttime="20220705 15:31:09.468" endtime="20220705 15:31:09.468"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 15:31:09.955" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 15:31:09.468" endtime="20220705 15:31:09.955"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 15:31:09.955" endtime="20220705 15:31:09.955"/>
</return>
<msg timestamp="20220705 15:31:09.955" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 15:31:09.467" endtime="20220705 15:31:09.955"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 15:31:09.955" endtime="20220705 15:31:09.955"/>
</return>
<status status="PASS" starttime="20220705 15:31:09.467" endtime="20220705 15:31:09.955"/>
</kw>
<status status="PASS" starttime="20220705 15:31:09.467" endtime="20220705 15:31:09.955"/>
</kw>
<kw name="Delete All Sessions" library="request_own_library">
<status status="PASS" starttime="20220705 15:31:09.956" endtime="20220705 15:31:09.956"/>
</kw>
<status status="PASS" starttime="20220705 15:31:09.467" endtime="20220705 15:31:09.956"/>
</kw>
<doc>Example Test with Trello API Checklists</doc>
<status status="PASS" starttime="20220705 15:31:06.982" endtime="20220705 15:31:09.957"/>
</suite>
<suite id="s1-s1-s4" name="Trello Api Labels Tests" source="/trello/api/trello_api_labels_tests.robot">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Create Trello Session</arg>
<arg>Setup Board And List</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Create Trello Session" library="TrelloAPI">
<doc>Creates a Trello Session</doc>
<kw name="Create Session" library="request_own_library">
<arg>${API_BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<status status="PASS" starttime="20220705 15:31:09.966" endtime="20220705 15:31:09.967"/>
</kw>
<status status="PASS" starttime="20220705 15:31:09.966" endtime="20220705 15:31:09.967"/>
</kw>
<kw name="Setup Board And List">
<doc>Create a board and save its ID and its first list's ID</doc>
<kw name="Create A Board" library="Board">
<var>${BOARD}</var>
<arg>TestBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 15:31:09.968" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 15:31:09.968" endtime="20220705 15:31:09.968"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 15:31:09.968" endtime="20220705 15:31:09.968"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 15:31:09.969" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220705 15:31:09.968" endtime="20220705 15:31:09.969"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 15:31:10.270" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 15:31:09.969" endtime="20220705 15:31:10.270"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 15:31:10.270" endtime="20220705 15:31:10.270"/>
</return>
<msg timestamp="20220705 15:31:10.270" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 15:31:09.967" endtime="20220705 15:31:10.270"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 15:31:10.270" endtime="20220705 15:31:10.270"/>
</return>
<msg timestamp="20220705 15:31:10.270" level="INFO">${BOARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 15:31:09.967" endtime="20220705 15:31:10.270"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_BOARD_ID}</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220705 15:31:10.271" level="INFO">${TEST_SUITE_BOARD_ID} = 62c4593e1ed10c615641e334</msg>
<status status="PASS" starttime="20220705 15:31:10.271" endtime="20220705 15:31:10.271"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${LISTS}</var>
<arg>boards/${TEST_SUITE_BOARD_ID}/lists</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 15:31:10.392" level="INFO">${LISTS} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 15:31:10.272" endtime="20220705 15:31:10.392"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_LIST_ID}</arg>
<arg>${LISTS.json()}[0][id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220705 15:31:10.393" level="INFO">${TEST_SUITE_LIST_ID} = 62c4593e1ed10c615641e33b</msg>
<status status="PASS" starttime="20220705 15:31:10.393" endtime="20220705 15:31:10.393"/>
</kw>
<status status="PASS" starttime="20220705 15:31:09.967" endtime="20220705 15:31:10.394"/>
</kw>
<status status="PASS" starttime="20220705 15:31:09.966" endtime="20220705 15:31:10.394"/>
</kw>
<test id="s1-s1-s4-t1" name="Create and get label on board" line="14">
<kw name="Create A Label" library="Label">
<var>${response}</var>
<arg>name</arg>
<arg>label2</arg>
<arg>color</arg>
<arg>yellow</arg>
<doc>Creates a new label in the given board.
required_args: idBoard
optional_args: name, color
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>idBoard</arg>
<arg>${idBoard}</arg>
<arg>@{optional_args}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 15:31:10.396" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 15:31:10.395" endtime="20220705 15:31:10.396"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 15:31:10.396" endtime="20220705 15:31:10.396"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 15:31:10.397" level="INFO">${url} = labels/</msg>
<status status="PASS" starttime="20220705 15:31:10.396" endtime="20220705 15:31:10.397"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 15:31:10.565" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 15:31:10.397" endtime="20220705 15:31:10.565"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 15:31:10.565" endtime="20220705 15:31:10.565"/>
</return>
<msg timestamp="20220705 15:31:10.565" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 15:31:10.395" endtime="20220705 15:31:10.565"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 15:31:10.565" endtime="20220705 15:31:10.565"/>
</return>
<msg timestamp="20220705 15:31:10.565" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 15:31:10.394" endtime="20220705 15:31:10.565"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>label</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 15:31:10.566" endtime="20220705 15:31:10.568"/>
</kw>
<status status="PASS" starttime="20220705 15:31:10.566" endtime="20220705 15:31:10.568"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${LABEL_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 15:31:10.568" endtime="20220705 15:31:10.568"/>
</return>
<msg timestamp="20220705 15:31:10.569" level="INFO">${LABEL_ID} = 62c4593ec164735724b421ce</msg>
<status status="PASS" starttime="20220705 15:31:10.568" endtime="20220705 15:31:10.569"/>
</kw>
<kw name="Get A Label" library="Label">
<var>${response}</var>
<arg>${LABEL_ID}</arg>
<doc>Gets the label with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 15:31:10.570" level="INFO">${url} = labels/62c4593ec164735724b421ce</msg>
<status status="PASS" starttime="20220705 15:31:10.570" endtime="20220705 15:31:10.570"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 15:31:10.693" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 15:31:10.570" endtime="20220705 15:31:10.693"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 15:31:10.693" endtime="20220705 15:31:10.693"/>
</return>
<msg timestamp="20220705 15:31:10.693" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 15:31:10.569" endtime="20220705 15:31:10.693"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 15:31:10.693" endtime="20220705 15:31:10.693"/>
</return>
<msg timestamp="20220705 15:31:10.694" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 15:31:10.569" endtime="20220705 15:31:10.694"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${LABEL_COLOR}</var>
<arg>${response}</arg>
<arg>color</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 15:31:10.694" endtime="20220705 15:31:10.694"/>
</return>
<msg timestamp="20220705 15:31:10.695" level="INFO">${LABEL_COLOR} = yellow</msg>
<status status="PASS" starttime="20220705 15:31:10.694" endtime="20220705 15:31:10.695"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${LABEL_NAME}</var>
<arg>${response}</arg>
<arg>name</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 15:31:10.695" endtime="20220705 15:31:10.695"/>
</return>
<msg timestamp="20220705 15:31:10.696" level="INFO">${LABEL_NAME} = label2</msg>
<status status="PASS" starttime="20220705 15:31:10.695" endtime="20220705 15:31:10.696"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${LABEL_COLOR}</arg>
<arg>yellow</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220705 15:31:10.696" endtime="20220705 15:31:10.696"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${LABEL_NAME}</arg>
<arg>label2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220705 15:31:10.696" endtime="20220705 15:31:10.697"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Label</arg>
<arg>${LABEL_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Label" library="Label">
<arg>${LABEL_ID}</arg>
<doc>Deletes the label with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 15:31:10.698" level="INFO">${url} = labels/62c4593ec164735724b421ce</msg>
<status status="PASS" starttime="20220705 15:31:10.698" endtime="20220705 15:31:10.698"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 15:31:11.114" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 15:31:10.698" endtime="20220705 15:31:11.114"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 15:31:11.114" endtime="20220705 15:31:11.114"/>
</return>
<msg timestamp="20220705 15:31:11.114" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 15:31:10.698" endtime="20220705 15:31:11.114"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 15:31:11.114" endtime="20220705 15:31:11.114"/>
</return>
<status status="PASS" starttime="20220705 15:31:10.697" endtime="20220705 15:31:11.114"/>
</kw>
<status status="PASS" starttime="20220705 15:31:10.697" endtime="20220705 15:31:11.114"/>
</kw>
<doc>Verify that a label can be created through API</doc>
<tag>api</tag>
<tag>label.create</tag>
<tag>label.get</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220705 15:31:10.394" endtime="20220705 15:31:11.114"/>
</test>
<test id="s1-s1-s4-t2" name="Update label on board" line="28">
<kw name="Create A Label" library="Label">
<var>${response}</var>
<arg>name</arg>
<arg>label2</arg>
<arg>color</arg>
<arg>yellow</arg>
<doc>Creates a new label in the given board.
required_args: idBoard
optional_args: name, color
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>idBoard</arg>
<arg>${idBoard}</arg>
<arg>@{optional_args}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 15:31:11.117" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 15:31:11.117" endtime="20220705 15:31:11.117"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 15:31:11.117" endtime="20220705 15:31:11.117"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 15:31:11.118" level="INFO">${url} = labels/</msg>
<status status="PASS" starttime="20220705 15:31:11.117" endtime="20220705 15:31:11.118"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 15:31:11.312" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 15:31:11.118" endtime="20220705 15:31:11.313"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 15:31:11.313" endtime="20220705 15:31:11.313"/>
</return>
<msg timestamp="20220705 15:31:11.313" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 15:31:11.116" endtime="20220705 15:31:11.313"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 15:31:11.313" endtime="20220705 15:31:11.313"/>
</return>
<msg timestamp="20220705 15:31:11.313" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 15:31:11.116" endtime="20220705 15:31:11.313"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>label</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 15:31:11.314" endtime="20220705 15:31:11.316"/>
</kw>
<status status="PASS" starttime="20220705 15:31:11.313" endtime="20220705 15:31:11.316"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${LABEL_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 15:31:11.316" endtime="20220705 15:31:11.316"/>
</return>
<msg timestamp="20220705 15:31:11.317" level="INFO">${LABEL_ID} = 62c4593ff6e0815bab32d4b6</msg>
<status status="PASS" starttime="20220705 15:31:11.316" endtime="20220705 15:31:11.317"/>
</kw>
<kw name="Update A Label" library="Label">
<var>${new_response}</var>
<arg>${LABEL_ID}</arg>
<arg>name</arg>
<arg>label3</arg>
<arg>color</arg>
<arg>orange</arg>
<doc>Updates the label with the given ID
optional_args: name, color
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 15:31:11.318" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 15:31:11.318" endtime="20220705 15:31:11.318"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 15:31:11.318" endtime="20220705 15:31:11.318"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 15:31:11.319" level="INFO">${url} = labels/62c4593ff6e0815bab32d4b6</msg>
<status status="PASS" starttime="20220705 15:31:11.318" endtime="20220705 15:31:11.319"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 15:31:11.484" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 15:31:11.319" endtime="20220705 15:31:11.484"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 15:31:11.485" endtime="20220705 15:31:11.485"/>
</return>
<msg timestamp="20220705 15:31:11.485" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 15:31:11.317" endtime="20220705 15:31:11.485"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 15:31:11.485" endtime="20220705 15:31:11.485"/>
</return>
<msg timestamp="20220705 15:31:11.485" level="INFO">${new_response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 15:31:11.317" endtime="20220705 15:31:11.485"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${NEW_LABEL_COLOR}</var>
<arg>${new_response}</arg>
<arg>color</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 15:31:11.486" endtime="20220705 15:31:11.486"/>
</return>
<msg timestamp="20220705 15:31:11.486" level="INFO">${NEW_LABEL_COLOR} = orange</msg>
<status status="PASS" starttime="20220705 15:31:11.485" endtime="20220705 15:31:11.486"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${NEW_LABEL_NAME}</var>
<arg>${new_response}</arg>
<arg>name</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 15:31:11.487" endtime="20220705 15:31:11.487"/>
</return>
<msg timestamp="20220705 15:31:11.487" level="INFO">${NEW_LABEL_NAME} = label3</msg>
<status status="PASS" starttime="20220705 15:31:11.486" endtime="20220705 15:31:11.487"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${NEW_LABEL_COLOR}</arg>
<arg>orange</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220705 15:31:11.488" endtime="20220705 15:31:11.488"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${NEW_LABEL_NAME}</arg>
<arg>label3</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220705 15:31:11.488" endtime="20220705 15:31:11.488"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Label</arg>
<arg>${LABEL_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Label" library="Label">
<arg>${LABEL_ID}</arg>
<doc>Deletes the label with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 15:31:11.490" level="INFO">${url} = labels/62c4593ff6e0815bab32d4b6</msg>
<status status="PASS" starttime="20220705 15:31:11.490" endtime="20220705 15:31:11.490"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 15:31:11.689" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 15:31:11.490" endtime="20220705 15:31:11.689"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 15:31:11.690" endtime="20220705 15:31:11.690"/>
</return>
<msg timestamp="20220705 15:31:11.690" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 15:31:11.489" endtime="20220705 15:31:11.690"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 15:31:11.690" endtime="20220705 15:31:11.690"/>
</return>
<status status="PASS" starttime="20220705 15:31:11.489" endtime="20220705 15:31:11.690"/>
</kw>
<status status="PASS" starttime="20220705 15:31:11.488" endtime="20220705 15:31:11.690"/>
</kw>
<doc>Verify that a label's name and color can be updated through API</doc>
<tag>api</tag>
<tag>label.update</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220705 15:31:11.115" endtime="20220705 15:31:11.690"/>
</test>
<test id="s1-s1-s4-t3" name="Delete label on board" line="41">
<kw name="Create A Label" library="Label">
<var>${response}</var>
<arg>name</arg>
<arg>label2</arg>
<arg>color</arg>
<arg>yellow</arg>
<doc>Creates a new label in the given board.
required_args: idBoard
optional_args: name, color
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>idBoard</arg>
<arg>${idBoard}</arg>
<arg>@{optional_args}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 15:31:11.692" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 15:31:11.692" endtime="20220705 15:31:11.692"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 15:31:11.693" endtime="20220705 15:31:11.693"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 15:31:11.693" level="INFO">${url} = labels/</msg>
<status status="PASS" starttime="20220705 15:31:11.693" endtime="20220705 15:31:11.693"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 15:31:11.857" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 15:31:11.694" endtime="20220705 15:31:11.857"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 15:31:11.857" endtime="20220705 15:31:11.857"/>
</return>
<msg timestamp="20220705 15:31:11.857" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 15:31:11.692" endtime="20220705 15:31:11.857"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 15:31:11.857" endtime="20220705 15:31:11.857"/>
</return>
<msg timestamp="20220705 15:31:11.857" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 15:31:11.691" endtime="20220705 15:31:11.858"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${LABEL_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 15:31:11.858" endtime="20220705 15:31:11.858"/>
</return>
<msg timestamp="20220705 15:31:11.859" level="INFO">${LABEL_ID} = 62c4593f7d749562988dc68d</msg>
<status status="PASS" starttime="20220705 15:31:11.858" endtime="20220705 15:31:11.859"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Label</arg>
<arg>${LABEL_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Label" library="Label">
<arg>${LABEL_ID}</arg>
<doc>Deletes the label with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 15:31:11.860" level="INFO">${url} = labels/62c4593f7d749562988dc68d</msg>
<status status="PASS" starttime="20220705 15:31:11.860" endtime="20220705 15:31:11.860"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 15:31:12.044" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 15:31:11.860" endtime="20220705 15:31:12.045"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 15:31:12.045" endtime="20220705 15:31:12.045"/>
</return>
<msg timestamp="20220705 15:31:12.045" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 15:31:11.859" endtime="20220705 15:31:12.045"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 15:31:12.045" endtime="20220705 15:31:12.045"/>
</return>
<status status="PASS" starttime="20220705 15:31:11.859" endtime="20220705 15:31:12.045"/>
</kw>
<status status="PASS" starttime="20220705 15:31:11.859" endtime="20220705 15:31:12.045"/>
</kw>
<kw name="Get A Label" library="Label">
<arg>${LABEL_ID}</arg>
<arg>status_code=404</arg>
<doc>Gets the label with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 15:31:12.046" level="INFO">${url} = labels/62c4593f7d749562988dc68d</msg>
<status status="PASS" starttime="20220705 15:31:12.046" endtime="20220705 15:31:12.046"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 15:31:12.153" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220705 15:31:12.047" endtime="20220705 15:31:12.153"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 15:31:12.153" endtime="20220705 15:31:12.153"/>
</return>
<msg timestamp="20220705 15:31:12.153" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220705 15:31:12.046" endtime="20220705 15:31:12.153"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 15:31:12.153" endtime="20220705 15:31:12.153"/>
</return>
<status status="PASS" starttime="20220705 15:31:12.045" endtime="20220705 15:31:12.153"/>
</kw>
<doc>Verify that a label can be deleted through API</doc>
<tag>api</tag>
<tag>label.delete</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220705 15:31:11.691" endtime="20220705 15:31:12.153"/>
</test>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Teardown Board</arg>
<arg>Delete All Sessions</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Teardown Board">
<doc>Delete the board created for this session.</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 15:31:12.155" level="INFO">${url} = boards/62c4593e1ed10c615641e334</msg>
<status status="PASS" starttime="20220705 15:31:12.155" endtime="20220705 15:31:12.155"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 15:31:12.573" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 15:31:12.156" endtime="20220705 15:31:12.573"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 15:31:12.573" endtime="20220705 15:31:12.573"/>
</return>
<msg timestamp="20220705 15:31:12.574" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 15:31:12.155" endtime="20220705 15:31:12.574"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 15:31:12.574" endtime="20220705 15:31:12.574"/>
</return>
<status status="PASS" starttime="20220705 15:31:12.154" endtime="20220705 15:31:12.574"/>
</kw>
<status status="PASS" starttime="20220705 15:31:12.154" endtime="20220705 15:31:12.574"/>
</kw>
<status status="PASS" starttime="20220705 15:31:12.154" endtime="20220705 15:31:12.574"/>
</kw>
<kw name="Delete All Sessions" library="request_own_library">
<status status="PASS" starttime="20220705 15:31:12.574" endtime="20220705 15:31:12.575"/>
</kw>
<status status="PASS" starttime="20220705 15:31:12.154" endtime="20220705 15:31:12.575"/>
</kw>
<doc>Example Test with Trello API Cards</doc>
<status status="PASS" starttime="20220705 15:31:09.958" endtime="20220705 15:31:12.575"/>
</suite>
<suite id="s1-s1-s5" name="Trello Api Lists Tests" source="/trello/api/trello_api_lists_tests.robot">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Create Trello Session</arg>
<arg>Setup Board</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Create Trello Session" library="TrelloAPI">
<doc>Creates a Trello Session</doc>
<kw name="Create Session" library="request_own_library">
<arg>${API_BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<status status="PASS" starttime="20220705 15:31:12.584" endtime="20220705 15:31:12.585"/>
</kw>
<status status="PASS" starttime="20220705 15:31:12.584" endtime="20220705 15:31:12.585"/>
</kw>
<kw name="Setup Board">
<doc>Create a board and save it's id for the suite</doc>
<kw name="Create A Board" library="Board">
<var>${BOARD}</var>
<arg>TestBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 15:31:12.586" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 15:31:12.586" endtime="20220705 15:31:12.586"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 15:31:12.586" endtime="20220705 15:31:12.586"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 15:31:12.587" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220705 15:31:12.586" endtime="20220705 15:31:12.587"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 15:31:12.892" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 15:31:12.587" endtime="20220705 15:31:12.892"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 15:31:12.892" endtime="20220705 15:31:12.893"/>
</return>
<msg timestamp="20220705 15:31:12.893" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 15:31:12.585" endtime="20220705 15:31:12.893"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 15:31:12.893" endtime="20220705 15:31:12.893"/>
</return>
<msg timestamp="20220705 15:31:12.893" level="INFO">${BOARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 15:31:12.585" endtime="20220705 15:31:12.893"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Set Suite Variable</arg>
<arg>\${TEST_SUITE_BOARD_ID}</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_BOARD_ID}</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220705 15:31:12.894" level="INFO">${TEST_SUITE_BOARD_ID} = 62c45940aaa9617c6ecd5f2a</msg>
<status status="PASS" starttime="20220705 15:31:12.893" endtime="20220705 15:31:12.894"/>
</kw>
<status status="PASS" starttime="20220705 15:31:12.893" endtime="20220705 15:31:12.894"/>
</kw>
<status status="PASS" starttime="20220705 15:31:12.585" endtime="20220705 15:31:12.894"/>
</kw>
<status status="PASS" starttime="20220705 15:31:12.584" endtime="20220705 15:31:12.894"/>
</kw>
<test id="s1-s1-s5-t1" name="CREATE a list" line="13">
<kw name="Create A List" library="List">
<var>${response}</var>
<arg>NewList</arg>
<doc>Creates a new List
board id
name the list will have
optional_args: idListSource, pos, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>list</arg>
<arg>name</arg>
<arg>${name}</arg>
<arg>idBoard</arg>
<arg>${idBoard}</arg>
<arg>@{optional_args}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 15:31:12.896" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 15:31:12.896" endtime="20220705 15:31:12.896"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 15:31:12.896" endtime="20220705 15:31:12.896"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 15:31:12.897" level="INFO">${url} = lists/</msg>
<status status="PASS" starttime="20220705 15:31:12.896" endtime="20220705 15:31:12.897"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 15:31:13.077" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 15:31:12.897" endtime="20220705 15:31:13.077"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 15:31:13.077" endtime="20220705 15:31:13.077"/>
</return>
<msg timestamp="20220705 15:31:13.077" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 15:31:12.895" endtime="20220705 15:31:13.077"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 15:31:13.077" endtime="20220705 15:31:13.077"/>
</return>
<msg timestamp="20220705 15:31:13.078" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 15:31:12.895" endtime="20220705 15:31:13.078"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>list</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 15:31:13.078" endtime="20220705 15:31:13.080"/>
</kw>
<status status="PASS" starttime="20220705 15:31:13.078" endtime="20220705 15:31:13.080"/>
</kw>
<doc>Verify that a list can be created through API</doc>
<tag>api</tag>
<tag>list.create</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220705 15:31:12.895" endtime="20220705 15:31:13.081"/>
</test>
<test id="s1-s1-s5-t2" name="UPDATE a list" line="19">
<kw name="Create A List" library="List">
<var>${response}</var>
<arg>NewList</arg>
<doc>Creates a new List
board id
name the list will have
optional_args: idListSource, pos, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>list</arg>
<arg>name</arg>
<arg>${name}</arg>
<arg>idBoard</arg>
<arg>${idBoard}</arg>
<arg>@{optional_args}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 15:31:13.082" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 15:31:13.082" endtime="20220705 15:31:13.082"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 15:31:13.082" endtime="20220705 15:31:13.083"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 15:31:13.083" level="INFO">${url} = lists/</msg>
<status status="PASS" starttime="20220705 15:31:13.083" endtime="20220705 15:31:13.083"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 15:31:13.256" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 15:31:13.084" endtime="20220705 15:31:13.256"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 15:31:13.256" endtime="20220705 15:31:13.256"/>
</return>
<msg timestamp="20220705 15:31:13.256" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 15:31:13.082" endtime="20220705 15:31:13.256"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 15:31:13.256" endtime="20220705 15:31:13.256"/>
</return>
<msg timestamp="20220705 15:31:13.256" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 15:31:13.081" endtime="20220705 15:31:13.256"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>list</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 15:31:13.257" endtime="20220705 15:31:13.258"/>
</kw>
<status status="PASS" starttime="20220705 15:31:13.256" endtime="20220705 15:31:13.258"/>
</kw>
<kw name="Update A List" library="List">
<arg>${response.json()}[id]</arg>
<arg>name</arg>
<arg>NewName</arg>
<doc>Updates the board with the given ID
optional_args: name, idListSource, pos, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>list</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 15:31:13.260" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 15:31:13.260" endtime="20220705 15:31:13.260"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 15:31:13.260" endtime="20220705 15:31:13.260"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 15:31:13.261" level="INFO">${url} = lists/62c45941dd59126578ce755a</msg>
<status status="PASS" starttime="20220705 15:31:13.261" endtime="20220705 15:31:13.261"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 15:31:13.417" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 15:31:13.261" endtime="20220705 15:31:13.417"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 15:31:13.418" endtime="20220705 15:31:13.418"/>
</return>
<msg timestamp="20220705 15:31:13.418" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 15:31:13.259" endtime="20220705 15:31:13.418"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 15:31:13.418" endtime="20220705 15:31:13.418"/>
</return>
<status status="PASS" starttime="20220705 15:31:13.259" endtime="20220705 15:31:13.418"/>
</kw>
<kw name="Get A List" library="List">
<var>${new_response}</var>
<arg>${response.json()}[id]</arg>
<doc>Gets the List with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>list</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 15:31:13.420" level="INFO">${url} = lists/62c45941dd59126578ce755a</msg>
<status status="PASS" starttime="20220705 15:31:13.420" endtime="20220705 15:31:13.420"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 15:31:13.544" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 15:31:13.420" endtime="20220705 15:31:13.544"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 15:31:13.544" endtime="20220705 15:31:13.545"/>
</return>
<msg timestamp="20220705 15:31:13.545" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 15:31:13.419" endtime="20220705 15:31:13.545"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 15:31:13.545" endtime="20220705 15:31:13.545"/>
</return>
<msg timestamp="20220705 15:31:13.545" level="INFO">${new_response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 15:31:13.418" endtime="20220705 15:31:13.545"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${new_response}</arg>
<arg>list</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 15:31:13.546" endtime="20220705 15:31:13.547"/>
</kw>
<status status="PASS" starttime="20220705 15:31:13.545" endtime="20220705 15:31:13.547"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${new_response.json()}[name]</arg>
<arg>NewName</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220705 15:31:13.547" endtime="20220705 15:31:13.548"/>
</kw>
<doc>Verify that a lists name can be updated through API</doc>
<tag>api</tag>
<tag>list.update</tag>
<tag>regression</tag>
<status status="PASS" starttime="20220705 15:31:13.081" endtime="20220705 15:31:13.548"/>
</test>
<test id="s1-s1-s5-t3" name="ARCHIVE A list" line="29">
<kw name="Create A List" library="List">
<var>${response}</var>
<arg>NewList</arg>
<doc>Creates a new List
board id
name the list will have
optional_args: idListSource, pos, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>list</arg>
<arg>name</arg>
<arg>${name}</arg>
<arg>idBoard</arg>
<arg>${idBoard}</arg>
<arg>@{optional_args}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 15:31:13.550" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 15:31:13.550" endtime="20220705 15:31:13.550"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 15:31:13.550" endtime="20220705 15:31:13.551"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 15:31:13.552" level="INFO">${url} = lists/</msg>
<status status="PASS" starttime="20220705 15:31:13.551" endtime="20220705 15:31:13.552"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 15:31:13.710" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 15:31:13.552" endtime="20220705 15:31:13.710"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 15:31:13.710" endtime="20220705 15:31:13.710"/>
</return>
<msg timestamp="20220705 15:31:13.711" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 15:31:13.549" endtime="20220705 15:31:13.711"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 15:31:13.711" endtime="20220705 15:31:13.711"/>
</return>
<msg timestamp="20220705 15:31:13.711" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 15:31:13.549" endtime="20220705 15:31:13.711"/>
</kw>
<kw name="Archive A List" library="List">
<arg>${response.json()}[id]</arg>
<doc>Deletes the list with the given ID</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>archive_list</arg>
<arg>${id}</arg>
<arg>value</arg>
<arg>true</arg>
<arg>status_code=${status_code}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 15:31:13.713" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 15:31:13.713" endtime="20220705 15:31:13.713"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 15:31:13.713" endtime="20220705 15:31:13.713"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 15:31:13.713" level="INFO">${url} = lists/62c45941c2d11d5451489bae/closed</msg>
<status status="PASS" starttime="20220705 15:31:13.713" endtime="20220705 15:31:13.713"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 15:31:13.886" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 15:31:13.713" endtime="20220705 15:31:13.886"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 15:31:13.886" endtime="20220705 15:31:13.886"/>
</return>
<msg timestamp="20220705 15:31:13.886" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 15:31:13.712" endtime="20220705 15:31:13.886"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 15:31:13.886" endtime="20220705 15:31:13.886"/>
</return>
<status status="PASS" starttime="20220705 15:31:13.711" endtime="20220705 15:31:13.886"/>
</kw>
<kw name="Get A List" library="List">
<var>${new_response}</var>
<arg>${response.json()}[id]</arg>
<doc>Gets the List with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>list</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 15:31:13.888" level="INFO">${url} = lists/62c45941c2d11d5451489bae</msg>
<status status="PASS" starttime="20220705 15:31:13.888" endtime="20220705 15:31:13.888"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 15:31:14.016" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 15:31:13.888" endtime="20220705 15:31:14.016"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 15:31:14.016" endtime="20220705 15:31:14.016"/>
</return>
<msg timestamp="20220705 15:31:14.016" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 15:31:13.887" endtime="20220705 15:31:14.016"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 15:31:14.017" endtime="20220705 15:31:14.017"/>
</return>
<msg timestamp="20220705 15:31:14.017" level="INFO">${new_response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 15:31:13.887" endtime="20220705 15:31:14.017"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${new_response.json()}[closed]</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220705 15:31:14.017" endtime="20220705 15:31:14.018"/>
</kw>
<doc>Verify that a list can be archived through API</doc>
<tag>api</tag>
<tag>list.archive</tag>
<tag>regression</tag>
<status status="PASS" starttime="20220705 15:31:13.548" endtime="20220705 15:31:14.018"/>
</test>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Teardown Board</arg>
<arg>Delete All Sessions</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Teardown Board">
<doc>Delete the board created for this suite.</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 15:31:14.020" level="INFO">${url} = boards/62c45940aaa9617c6ecd5f2a</msg>
<status status="PASS" starttime="20220705 15:31:14.020" endtime="20220705 15:31:14.020"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 15:31:14.459" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 15:31:14.020" endtime="20220705 15:31:14.459"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 15:31:14.459" endtime="20220705 15:31:14.459"/>
</return>
<msg timestamp="20220705 15:31:14.459" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 15:31:14.019" endtime="20220705 15:31:14.459"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 15:31:14.459" endtime="20220705 15:31:14.459"/>
</return>
<status status="PASS" starttime="20220705 15:31:14.019" endtime="20220705 15:31:14.460"/>
</kw>
<status status="PASS" starttime="20220705 15:31:14.019" endtime="20220705 15:31:14.460"/>
</kw>
<status status="PASS" starttime="20220705 15:31:14.018" endtime="20220705 15:31:14.460"/>
</kw>
<kw name="Delete All Sessions" library="request_own_library">
<status status="PASS" starttime="20220705 15:31:14.460" endtime="20220705 15:31:14.461"/>
</kw>
<status status="PASS" starttime="20220705 15:31:14.018" endtime="20220705 15:31:14.461"/>
</kw>
<doc>Example Test with Trello API lists</doc>
<status status="PASS" starttime="20220705 15:31:12.576" endtime="20220705 15:31:14.461"/>
</suite>
<status status="PASS" starttime="20220705 15:30:55.541" endtime="20220705 15:31:14.463"/>
</suite>
<status status="PASS" starttime="20220705 15:30:55.524" endtime="20220705 15:31:14.465"/>
</suite>
<statistics>
<total>
<stat pass="18" fail="0" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="18" fail="0" skip="0">api</stat>
<stat pass="1" fail="0" skip="0">board.create</stat>
<stat pass="1" fail="0" skip="0">board.delete</stat>
<stat pass="1" fail="0" skip="0">board.get</stat>
<stat pass="2" fail="0" skip="0">board.update</stat>
<stat pass="1" fail="0" skip="0">card.close</stat>
<stat pass="1" fail="0" skip="0">card.create</stat>
<stat pass="1" fail="0" skip="0">card.delete</stat>
<stat pass="1" fail="0" skip="0">card.update</stat>
<stat pass="1" fail="0" skip="0">checklist.create</stat>
<stat pass="1" fail="0" skip="0">checklist.delete</stat>
<stat pass="1" fail="0" skip="0">checklist.update</stat>
<stat pass="1" fail="0" skip="0">label.create</stat>
<stat pass="1" fail="0" skip="0">label.delete</stat>
<stat pass="1" fail="0" skip="0">label.get</stat>
<stat pass="1" fail="0" skip="0">label.update</stat>
<stat pass="1" fail="0" skip="0">list.archive</stat>
<stat pass="1" fail="0" skip="0">list.create</stat>
<stat pass="1" fail="0" skip="0">list.update</stat>
<stat pass="5" fail="0" skip="0">regression</stat>
<stat pass="13" fail="0" skip="0">smoke</stat>
</tag>
<suite>
<stat pass="18" fail="0" skip="0" id="s1" name="Trello">Trello</stat>
<stat pass="18" fail="0" skip="0" id="s1-s1" name="Api">Trello.Api</stat>
<stat pass="5" fail="0" skip="0" id="s1-s1-s1" name="Trello Api Boards Tests">Trello.Api.Trello Api Boards Tests</stat>
<stat pass="4" fail="0" skip="0" id="s1-s1-s2" name="Trello Api Cards Tests">Trello.Api.Trello Api Cards Tests</stat>
<stat pass="3" fail="0" skip="0" id="s1-s1-s3" name="Trello Api Checklists Tests">Trello.Api.Trello Api Checklists Tests</stat>
<stat pass="3" fail="0" skip="0" id="s1-s1-s4" name="Trello Api Labels Tests">Trello.Api.Trello Api Labels Tests</stat>
<stat pass="3" fail="0" skip="0" id="s1-s1-s5" name="Trello Api Lists Tests">Trello.Api.Trello Api Lists Tests</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
