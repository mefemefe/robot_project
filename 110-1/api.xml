<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 5.0.1 (Python 3.10.5 on linux)" generated="20220704 14:15:36.611" rpa="false" schemaversion="3">
<suite id="s1" name="Trello" source="/trello">
<suite id="s1-s1" name="Api" source="/trello/api">
<suite id="s1-s1-s1" name="Trello Api Boards Tests" source="/trello/api/trello_api_boards_tests.robot">
<kw name="Create Trello Session" library="TrelloAPI" type="SETUP">
<doc>Creates a Trello Session</doc>
<kw name="Create Session" library="request_own_library">
<arg>${API_BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<status status="PASS" starttime="20220704 14:15:36.737" endtime="20220704 14:15:36.737"/>
</kw>
<status status="PASS" starttime="20220704 14:15:36.736" endtime="20220704 14:15:36.737"/>
</kw>
<test id="s1-s1-s1-t1" name="CREATE a board" line="9">
<kw name="Create A Board" library="Board">
<var>${response}</var>
<arg>NewBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 14:15:36.739" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 14:15:36.739" endtime="20220704 14:15:36.739"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 14:15:36.739" endtime="20220704 14:15:36.740"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:15:36.740" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220704 14:15:36.740" endtime="20220704 14:15:36.740"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 14:15:37.121" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:36.741" endtime="20220704 14:15:37.121"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:15:37.121" endtime="20220704 14:15:37.121"/>
</return>
<msg timestamp="20220704 14:15:37.121" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:36.739" endtime="20220704 14:15:37.121"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:15:37.121" endtime="20220704 14:15:37.121"/>
</return>
<msg timestamp="20220704 14:15:37.121" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:36.738" endtime="20220704 14:15:37.121"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>board</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220704 14:15:37.122" endtime="20220704 14:15:37.126"/>
</kw>
<status status="PASS" starttime="20220704 14:15:37.121" endtime="20220704 14:15:37.126"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${response.json()}[id]</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${response.json()}[id]</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:15:37.129" level="INFO">${url} = boards/62c2f6088ca98b5e4aa92aa4</msg>
<status status="PASS" starttime="20220704 14:15:37.128" endtime="20220704 14:15:37.129"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 14:15:37.656" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:37.129" endtime="20220704 14:15:37.656"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:15:37.656" endtime="20220704 14:15:37.656"/>
</return>
<msg timestamp="20220704 14:15:37.656" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:37.128" endtime="20220704 14:15:37.656"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:15:37.657" endtime="20220704 14:15:37.657"/>
</return>
<status status="PASS" starttime="20220704 14:15:37.127" endtime="20220704 14:15:37.657"/>
</kw>
<status status="PASS" starttime="20220704 14:15:37.127" endtime="20220704 14:15:37.657"/>
</kw>
<doc>Verify that a board can be create through API</doc>
<tag>api</tag>
<tag>board.create</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220704 14:15:36.738" endtime="20220704 14:15:37.657"/>
</test>
<test id="s1-s1-s1-t2" name="UPDATE a Board's name" line="16">
<kw name="Create A Board" library="Board">
<var>${response}</var>
<arg>NewBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 14:15:37.660" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 14:15:37.660" endtime="20220704 14:15:37.660"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 14:15:37.660" endtime="20220704 14:15:37.660"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:15:37.661" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220704 14:15:37.660" endtime="20220704 14:15:37.661"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 14:15:37.923" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:37.661" endtime="20220704 14:15:37.923"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:15:37.923" endtime="20220704 14:15:37.923"/>
</return>
<msg timestamp="20220704 14:15:37.924" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:37.659" endtime="20220704 14:15:37.924"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:15:37.924" endtime="20220704 14:15:37.924"/>
</return>
<msg timestamp="20220704 14:15:37.924" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:37.658" endtime="20220704 14:15:37.924"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>board</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220704 14:15:37.924" endtime="20220704 14:15:37.928"/>
</kw>
<status status="PASS" starttime="20220704 14:15:37.924" endtime="20220704 14:15:37.928"/>
</kw>
<kw name="Update A Board" library="Board">
<arg>${response.json()}[id]</arg>
<arg>name</arg>
<arg>NewName</arg>
<doc>Updates the board with the given ID
optional_args: name, desc, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 14:15:37.930" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 14:15:37.930" endtime="20220704 14:15:37.930"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 14:15:37.930" endtime="20220704 14:15:37.930"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:15:37.931" level="INFO">${url} = boards/62c2f609ef3d4f2bf3e17a54</msg>
<status status="PASS" starttime="20220704 14:15:37.930" endtime="20220704 14:15:37.931"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 14:15:38.107" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:37.931" endtime="20220704 14:15:38.107"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:15:38.107" endtime="20220704 14:15:38.107"/>
</return>
<msg timestamp="20220704 14:15:38.107" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:37.929" endtime="20220704 14:15:38.107"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:15:38.107" endtime="20220704 14:15:38.107"/>
</return>
<status status="PASS" starttime="20220704 14:15:37.929" endtime="20220704 14:15:38.107"/>
</kw>
<kw name="Get A Board" library="Board">
<var>${new_response}</var>
<arg>${response.json()}[id]</arg>
<doc>Gets the Board with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:15:38.109" level="INFO">${url} = boards/62c2f609ef3d4f2bf3e17a54</msg>
<status status="PASS" starttime="20220704 14:15:38.109" endtime="20220704 14:15:38.109"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 14:15:38.248" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:38.109" endtime="20220704 14:15:38.248"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:15:38.248" endtime="20220704 14:15:38.248"/>
</return>
<msg timestamp="20220704 14:15:38.248" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:38.108" endtime="20220704 14:15:38.248"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:15:38.248" endtime="20220704 14:15:38.248"/>
</return>
<msg timestamp="20220704 14:15:38.249" level="INFO">${new_response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:38.107" endtime="20220704 14:15:38.249"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${new_response}</arg>
<arg>board</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220704 14:15:38.249" endtime="20220704 14:15:38.253"/>
</kw>
<status status="PASS" starttime="20220704 14:15:38.249" endtime="20220704 14:15:38.253"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${new_response.json()}[name]</arg>
<arg>NewName</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220704 14:15:38.253" endtime="20220704 14:15:38.254"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${response.json()}[id]</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${response.json()}[id]</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:15:38.256" level="INFO">${url} = boards/62c2f609ef3d4f2bf3e17a54</msg>
<status status="PASS" starttime="20220704 14:15:38.256" endtime="20220704 14:15:38.256"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 14:15:38.668" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:38.256" endtime="20220704 14:15:38.668"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:15:38.668" endtime="20220704 14:15:38.668"/>
</return>
<msg timestamp="20220704 14:15:38.668" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:38.255" endtime="20220704 14:15:38.668"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:15:38.668" endtime="20220704 14:15:38.668"/>
</return>
<status status="PASS" starttime="20220704 14:15:38.254" endtime="20220704 14:15:38.669"/>
</kw>
<status status="PASS" starttime="20220704 14:15:38.254" endtime="20220704 14:15:38.669"/>
</kw>
<doc>Verify that a board's name can be updated through API</doc>
<tag>api</tag>
<tag>board.update</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220704 14:15:37.657" endtime="20220704 14:15:38.669"/>
</test>
<test id="s1-s1-s1-t3" name="DELETE A Board" line="27">
<kw name="Create A Board" library="Board">
<var>${response}</var>
<arg>NewBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 14:15:38.671" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 14:15:38.671" endtime="20220704 14:15:38.671"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 14:15:38.671" endtime="20220704 14:15:38.671"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:15:38.672" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220704 14:15:38.671" endtime="20220704 14:15:38.672"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 14:15:38.988" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:38.672" endtime="20220704 14:15:38.988"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:15:38.988" endtime="20220704 14:15:38.988"/>
</return>
<msg timestamp="20220704 14:15:38.989" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:38.670" endtime="20220704 14:15:38.989"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:15:38.989" endtime="20220704 14:15:38.989"/>
</return>
<msg timestamp="20220704 14:15:38.989" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:38.670" endtime="20220704 14:15:38.989"/>
</kw>
<kw name="Delete A Board" library="Board">
<arg>${response.json()}[id]</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:15:38.991" level="INFO">${url} = boards/62c2f60aef5e0e3f1f91adbd</msg>
<status status="PASS" starttime="20220704 14:15:38.991" endtime="20220704 14:15:38.991"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 14:15:39.647" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:38.991" endtime="20220704 14:15:39.647"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:15:39.648" endtime="20220704 14:15:39.648"/>
</return>
<msg timestamp="20220704 14:15:39.648" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:38.990" endtime="20220704 14:15:39.648"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:15:39.648" endtime="20220704 14:15:39.648"/>
</return>
<status status="PASS" starttime="20220704 14:15:38.989" endtime="20220704 14:15:39.648"/>
</kw>
<kw name="Get A Board" library="Board">
<arg>${response.json()}[id]</arg>
<arg>status_code=404</arg>
<doc>Gets the Board with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:15:39.650" level="INFO">${url} = boards/62c2f60aef5e0e3f1f91adbd</msg>
<status status="PASS" starttime="20220704 14:15:39.650" endtime="20220704 14:15:39.650"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 14:15:39.773" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220704 14:15:39.650" endtime="20220704 14:15:39.773"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:15:39.774" endtime="20220704 14:15:39.774"/>
</return>
<msg timestamp="20220704 14:15:39.774" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220704 14:15:39.649" endtime="20220704 14:15:39.774"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:15:39.774" endtime="20220704 14:15:39.774"/>
</return>
<status status="PASS" starttime="20220704 14:15:39.648" endtime="20220704 14:15:39.774"/>
</kw>
<doc>Verify that a board can be deleted through API</doc>
<tag>api</tag>
<tag>board.delete</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220704 14:15:38.669" endtime="20220704 14:15:39.774"/>
</test>
<test id="s1-s1-s1-t4" name="GET Information of A Board" line="34">
<kw name="Create A Board" library="Board">
<var>${response}</var>
<arg>BoardTest</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 14:15:39.777" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 14:15:39.777" endtime="20220704 14:15:39.777"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 14:15:39.777" endtime="20220704 14:15:39.778"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:15:39.779" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220704 14:15:39.778" endtime="20220704 14:15:39.779"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 14:15:40.029" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:39.779" endtime="20220704 14:15:40.029"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:15:40.029" endtime="20220704 14:15:40.029"/>
</return>
<msg timestamp="20220704 14:15:40.029" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:39.777" endtime="20220704 14:15:40.029"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:15:40.029" endtime="20220704 14:15:40.029"/>
</return>
<msg timestamp="20220704 14:15:40.029" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:39.776" endtime="20220704 14:15:40.030"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>board</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220704 14:15:40.030" endtime="20220704 14:15:40.034"/>
</kw>
<status status="PASS" starttime="20220704 14:15:40.030" endtime="20220704 14:15:40.035"/>
</kw>
<kw name="Get A Board" library="Board">
<var>${response2}</var>
<arg>${response.json()}[id]</arg>
<doc>Gets the Board with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:15:40.036" level="INFO">${url} = boards/62c2f60b87c6192d8cdf6ed2</msg>
<status status="PASS" starttime="20220704 14:15:40.036" endtime="20220704 14:15:40.036"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 14:15:40.174" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:40.037" endtime="20220704 14:15:40.174"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:15:40.174" endtime="20220704 14:15:40.174"/>
</return>
<msg timestamp="20220704 14:15:40.175" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:40.036" endtime="20220704 14:15:40.175"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:15:40.175" endtime="20220704 14:15:40.175"/>
</return>
<msg timestamp="20220704 14:15:40.175" level="INFO">${response2} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:40.035" endtime="20220704 14:15:40.175"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response2}</arg>
<arg>board</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220704 14:15:40.176" endtime="20220704 14:15:40.180"/>
</kw>
<status status="PASS" starttime="20220704 14:15:40.175" endtime="20220704 14:15:40.180"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${response2.json()}[name]</arg>
<arg>BoardTest</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220704 14:15:40.180" endtime="20220704 14:15:40.181"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${response.json()}[id]</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${response.json()}[id]</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:15:40.183" level="INFO">${url} = boards/62c2f60b87c6192d8cdf6ed2</msg>
<status status="PASS" starttime="20220704 14:15:40.182" endtime="20220704 14:15:40.183"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 14:15:40.691" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:40.183" endtime="20220704 14:15:40.691"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:15:40.691" endtime="20220704 14:15:40.691"/>
</return>
<msg timestamp="20220704 14:15:40.691" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:40.182" endtime="20220704 14:15:40.691"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:15:40.691" endtime="20220704 14:15:40.691"/>
</return>
<status status="PASS" starttime="20220704 14:15:40.181" endtime="20220704 14:15:40.691"/>
</kw>
<status status="PASS" starttime="20220704 14:15:40.181" endtime="20220704 14:15:40.692"/>
</kw>
<doc>Verify that a board's information can be accesed through API</doc>
<tag>api</tag>
<tag>board.get</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220704 14:15:39.775" endtime="20220704 14:15:40.692"/>
</test>
<test id="s1-s1-s1-t5" name="UPDATE a Board's description" line="45">
<kw name="Create A Board" library="Board">
<var>${response}</var>
<arg>NewBoardForTest</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 14:15:40.694" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 14:15:40.694" endtime="20220704 14:15:40.694"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 14:15:40.694" endtime="20220704 14:15:40.694"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:15:40.695" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220704 14:15:40.694" endtime="20220704 14:15:40.695"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 14:15:40.971" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:40.695" endtime="20220704 14:15:40.971"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:15:40.971" endtime="20220704 14:15:40.971"/>
</return>
<msg timestamp="20220704 14:15:40.972" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:40.693" endtime="20220704 14:15:40.972"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:15:40.972" endtime="20220704 14:15:40.972"/>
</return>
<msg timestamp="20220704 14:15:40.972" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:40.693" endtime="20220704 14:15:40.972"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>board</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220704 14:15:40.972" endtime="20220704 14:15:40.977"/>
</kw>
<status status="PASS" starttime="20220704 14:15:40.972" endtime="20220704 14:15:40.977"/>
</kw>
<kw name="Update A Board" library="Board">
<arg>${response.json()}[id]</arg>
<arg>desc</arg>
<arg>sampleDescription</arg>
<doc>Updates the board with the given ID
optional_args: name, desc, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 14:15:40.979" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 14:15:40.979" endtime="20220704 14:15:40.979"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 14:15:40.979" endtime="20220704 14:15:40.979"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:15:40.980" level="INFO">${url} = boards/62c2f60c3cff9530c4d70d3d</msg>
<status status="PASS" starttime="20220704 14:15:40.979" endtime="20220704 14:15:40.980"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 14:15:41.155" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:40.980" endtime="20220704 14:15:41.155"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:15:41.155" endtime="20220704 14:15:41.156"/>
</return>
<msg timestamp="20220704 14:15:41.156" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:40.978" endtime="20220704 14:15:41.156"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:15:41.156" endtime="20220704 14:15:41.156"/>
</return>
<status status="PASS" starttime="20220704 14:15:40.977" endtime="20220704 14:15:41.156"/>
</kw>
<kw name="Get A Board" library="Board">
<var>${new_response}</var>
<arg>${response.json()}[id]</arg>
<doc>Gets the Board with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:15:41.158" level="INFO">${url} = boards/62c2f60c3cff9530c4d70d3d</msg>
<status status="PASS" starttime="20220704 14:15:41.158" endtime="20220704 14:15:41.158"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 14:15:41.320" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:41.158" endtime="20220704 14:15:41.320"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:15:41.320" endtime="20220704 14:15:41.320"/>
</return>
<msg timestamp="20220704 14:15:41.321" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:41.157" endtime="20220704 14:15:41.321"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:15:41.321" endtime="20220704 14:15:41.321"/>
</return>
<msg timestamp="20220704 14:15:41.321" level="INFO">${new_response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:41.156" endtime="20220704 14:15:41.321"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${new_response.json()}[desc]</arg>
<arg>sampleDescription</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220704 14:15:41.321" endtime="20220704 14:15:41.322"/>
</kw>
<kw name="Update A Board" library="Board">
<arg>${response.json()}[id]</arg>
<arg>desc</arg>
<arg>updatedDescription</arg>
<doc>Updates the board with the given ID
optional_args: name, desc, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 14:15:41.324" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 14:15:41.324" endtime="20220704 14:15:41.324"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 14:15:41.324" endtime="20220704 14:15:41.324"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:15:41.325" level="INFO">${url} = boards/62c2f60c3cff9530c4d70d3d</msg>
<status status="PASS" starttime="20220704 14:15:41.324" endtime="20220704 14:15:41.325"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 14:15:41.517" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:41.325" endtime="20220704 14:15:41.517"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:15:41.517" endtime="20220704 14:15:41.517"/>
</return>
<msg timestamp="20220704 14:15:41.517" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:41.323" endtime="20220704 14:15:41.517"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:15:41.517" endtime="20220704 14:15:41.517"/>
</return>
<status status="PASS" starttime="20220704 14:15:41.322" endtime="20220704 14:15:41.517"/>
</kw>
<kw name="Get A Board" library="Board">
<var>${new_response2}</var>
<arg>${response.json()}[id]</arg>
<doc>Gets the Board with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:15:41.519" level="INFO">${url} = boards/62c2f60c3cff9530c4d70d3d</msg>
<status status="PASS" starttime="20220704 14:15:41.519" endtime="20220704 14:15:41.519"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 14:15:41.657" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:41.519" endtime="20220704 14:15:41.657"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:15:41.657" endtime="20220704 14:15:41.657"/>
</return>
<msg timestamp="20220704 14:15:41.658" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:41.518" endtime="20220704 14:15:41.658"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:15:41.658" endtime="20220704 14:15:41.658"/>
</return>
<msg timestamp="20220704 14:15:41.658" level="INFO">${new_response2} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:41.518" endtime="20220704 14:15:41.658"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${new_response2.json()}[desc]</arg>
<arg>updatedDescription</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220704 14:15:41.658" endtime="20220704 14:15:41.659"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${response.json()}[id]</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${response.json()}[id]</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:15:41.661" level="INFO">${url} = boards/62c2f60c3cff9530c4d70d3d</msg>
<status status="PASS" starttime="20220704 14:15:41.661" endtime="20220704 14:15:41.661"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 14:15:42.083" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:41.662" endtime="20220704 14:15:42.083"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:15:42.083" endtime="20220704 14:15:42.084"/>
</return>
<msg timestamp="20220704 14:15:42.084" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:41.661" endtime="20220704 14:15:42.084"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:15:42.084" endtime="20220704 14:15:42.084"/>
</return>
<status status="PASS" starttime="20220704 14:15:41.660" endtime="20220704 14:15:42.084"/>
</kw>
<status status="PASS" starttime="20220704 14:15:41.659" endtime="20220704 14:15:42.084"/>
</kw>
<doc>Verify that a board's description can be updated through API</doc>
<tag>api</tag>
<tag>board.update</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220704 14:15:40.692" endtime="20220704 14:15:42.084"/>
</test>
<kw name="Delete All Sessions" library="request_own_library" type="TEARDOWN">
<status status="PASS" starttime="20220704 14:15:42.085" endtime="20220704 14:15:42.086"/>
</kw>
<doc>Example Test with Trello API Boards</doc>
<status status="PASS" starttime="20220704 14:15:36.631" endtime="20220704 14:15:42.087"/>
</suite>
<suite id="s1-s1-s2" name="Trello Api Cards Tests" source="/trello/api/trello_api_cards_tests.robot">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Create Trello Session</arg>
<arg>Setup Board And List</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Create Trello Session" library="TrelloAPI">
<doc>Creates a Trello Session</doc>
<kw name="Create Session" library="request_own_library">
<arg>${API_BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<status status="PASS" starttime="20220704 14:15:42.098" endtime="20220704 14:15:42.098"/>
</kw>
<status status="PASS" starttime="20220704 14:15:42.098" endtime="20220704 14:15:42.099"/>
</kw>
<kw name="Setup Board And List">
<doc>Create a board and save its ID and its first list's ID</doc>
<kw name="Create A Board" library="Board">
<var>${BOARD}</var>
<arg>TestBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 14:15:42.100" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 14:15:42.100" endtime="20220704 14:15:42.100"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 14:15:42.100" endtime="20220704 14:15:42.100"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:15:42.101" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220704 14:15:42.101" endtime="20220704 14:15:42.101"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 14:15:42.434" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:42.101" endtime="20220704 14:15:42.434"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:15:42.434" endtime="20220704 14:15:42.434"/>
</return>
<msg timestamp="20220704 14:15:42.434" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:42.100" endtime="20220704 14:15:42.434"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:15:42.434" endtime="20220704 14:15:42.434"/>
</return>
<msg timestamp="20220704 14:15:42.435" level="INFO">${BOARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:42.099" endtime="20220704 14:15:42.435"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_BOARD_ID}</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220704 14:15:42.436" level="INFO">${TEST_SUITE_BOARD_ID} = 62c2f60e66239270e28c98c1</msg>
<status status="PASS" starttime="20220704 14:15:42.435" endtime="20220704 14:15:42.436"/>
</kw>
<kw name="Get Lists On A Board" library="Board">
<var>${LISTS}</var>
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Get all the lists in a board</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>lists_on_board</arg>
<arg>${id}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:15:42.437" level="INFO">${url} = boards/62c2f60e66239270e28c98c1/lists/</msg>
<status status="PASS" starttime="20220704 14:15:42.436" endtime="20220704 14:15:42.437"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 14:15:42.578" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:42.437" endtime="20220704 14:15:42.578"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:15:42.578" endtime="20220704 14:15:42.578"/>
</return>
<msg timestamp="20220704 14:15:42.579" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:42.436" endtime="20220704 14:15:42.579"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:15:42.579" endtime="20220704 14:15:42.579"/>
</return>
<msg timestamp="20220704 14:15:42.579" level="INFO">${LISTS} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:42.436" endtime="20220704 14:15:42.579"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_LIST_ID}</arg>
<arg>${LISTS.json()}[0][id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220704 14:15:42.580" level="INFO">${TEST_SUITE_LIST_ID} = 62c2f60e66239270e28c98c8</msg>
<status status="PASS" starttime="20220704 14:15:42.579" endtime="20220704 14:15:42.580"/>
</kw>
<status status="PASS" starttime="20220704 14:15:42.099" endtime="20220704 14:15:42.580"/>
</kw>
<status status="PASS" starttime="20220704 14:15:42.098" endtime="20220704 14:15:42.580"/>
</kw>
<test id="s1-s1-s2-t1" name="Verify A Card Can Be Created" line="13">
<kw name="Create A Card" library="Card">
<var>${response}</var>
<arg>name</arg>
<arg>RFCard2</arg>
<doc>Creates a new card in the given list.
required_args: listId
optional_args: name, desc, pos, idCardSource, idLabels, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>@{optional_args}</arg>
<arg>idList</arg>
<arg>${idList}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 14:15:42.582" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 14:15:42.582" endtime="20220704 14:15:42.582"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 14:15:42.582" endtime="20220704 14:15:42.583"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:15:42.584" level="INFO">${url} = cards/</msg>
<status status="PASS" starttime="20220704 14:15:42.583" endtime="20220704 14:15:42.584"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 14:15:42.872" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:42.584" endtime="20220704 14:15:42.872"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:15:42.872" endtime="20220704 14:15:42.872"/>
</return>
<msg timestamp="20220704 14:15:42.872" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:42.582" endtime="20220704 14:15:42.872"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:15:42.872" endtime="20220704 14:15:42.872"/>
</return>
<msg timestamp="20220704 14:15:42.873" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:42.581" endtime="20220704 14:15:42.873"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>card</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220704 14:15:42.873" endtime="20220704 14:15:42.878"/>
</kw>
<status status="PASS" starttime="20220704 14:15:42.873" endtime="20220704 14:15:42.878"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 14:15:42.879" endtime="20220704 14:15:42.879"/>
</return>
<msg timestamp="20220704 14:15:42.879" level="INFO">${CARD_ID} = 62c2f60e621f4c3f1b093589</msg>
<status status="PASS" starttime="20220704 14:15:42.878" endtime="20220704 14:15:42.879"/>
</kw>
<kw name="Get A Card" library="Card">
<var>${response}</var>
<arg>${CARD_ID}</arg>
<doc>Gets the card with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:15:42.881" level="INFO">${url} = cards/62c2f60e621f4c3f1b093589</msg>
<status status="PASS" starttime="20220704 14:15:42.880" endtime="20220704 14:15:42.881"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 14:15:43.037" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:42.881" endtime="20220704 14:15:43.037"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:15:43.038" endtime="20220704 14:15:43.038"/>
</return>
<msg timestamp="20220704 14:15:43.038" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:42.880" endtime="20220704 14:15:43.038"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:15:43.038" endtime="20220704 14:15:43.038"/>
</return>
<msg timestamp="20220704 14:15:43.038" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:42.880" endtime="20220704 14:15:43.038"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_NAME}</var>
<arg>${response}</arg>
<arg>name</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 14:15:43.039" endtime="20220704 14:15:43.039"/>
</return>
<msg timestamp="20220704 14:15:43.039" level="INFO">${CARD_NAME} = RFCard2</msg>
<status status="PASS" starttime="20220704 14:15:43.038" endtime="20220704 14:15:43.039"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${CARD_NAME}</arg>
<arg>RFCard2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220704 14:15:43.040" endtime="20220704 14:15:43.040"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Card</arg>
<arg>${CARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Card" library="Card">
<arg>${CARD_ID}</arg>
<doc>Deletes the card with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:15:43.041" level="INFO">${url} = cards/62c2f60e621f4c3f1b093589</msg>
<status status="PASS" starttime="20220704 14:15:43.041" endtime="20220704 14:15:43.041"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 14:15:43.288" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:43.041" endtime="20220704 14:15:43.288"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:15:43.288" endtime="20220704 14:15:43.289"/>
</return>
<msg timestamp="20220704 14:15:43.289" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:43.041" endtime="20220704 14:15:43.289"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:15:43.289" endtime="20220704 14:15:43.289"/>
</return>
<status status="PASS" starttime="20220704 14:15:43.040" endtime="20220704 14:15:43.289"/>
</kw>
<status status="PASS" starttime="20220704 14:15:43.040" endtime="20220704 14:15:43.289"/>
</kw>
<doc>Verify that a card can be created through API</doc>
<tag>api</tag>
<tag>card.create</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220704 14:15:42.580" endtime="20220704 14:15:43.289"/>
</test>
<test id="s1-s1-s2-t2" name="Verify A Card Can Be Closed" line="24">
<kw name="Create A Card" library="Card">
<var>${response}</var>
<doc>Creates a new card in the given list.
required_args: listId
optional_args: name, desc, pos, idCardSource, idLabels, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>@{optional_args}</arg>
<arg>idList</arg>
<arg>${idList}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 14:15:43.292" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 14:15:43.292" endtime="20220704 14:15:43.292"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 14:15:43.293" endtime="20220704 14:15:43.293"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:15:43.294" level="INFO">${url} = cards/</msg>
<status status="PASS" starttime="20220704 14:15:43.293" endtime="20220704 14:15:43.294"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 14:15:43.522" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:43.294" endtime="20220704 14:15:43.523"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:15:43.523" endtime="20220704 14:15:43.523"/>
</return>
<msg timestamp="20220704 14:15:43.523" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:43.291" endtime="20220704 14:15:43.523"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:15:43.523" endtime="20220704 14:15:43.523"/>
</return>
<msg timestamp="20220704 14:15:43.523" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:43.291" endtime="20220704 14:15:43.523"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 14:15:43.524" endtime="20220704 14:15:43.524"/>
</return>
<msg timestamp="20220704 14:15:43.525" level="INFO">${CARD_ID} = 62c2f60feceeef71ca6108c3</msg>
<status status="PASS" starttime="20220704 14:15:43.523" endtime="20220704 14:15:43.525"/>
</kw>
<kw name="Archive A Card" library="Card">
<arg>${CARD_ID}</arg>
<doc>Modifies the card status to closed.</doc>
<kw name="Update A Card" library="Card">
<var>${response}</var>
<arg>${id}</arg>
<arg>closed</arg>
<arg>true</arg>
<arg>status_code=${status_code}</arg>
<doc>Updates the card with the given ID
optional_args: name, desc, closed, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<arg>status_code=${status_code}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 14:15:43.527" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 14:15:43.527" endtime="20220704 14:15:43.527"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 14:15:43.527" endtime="20220704 14:15:43.527"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:15:43.528" level="INFO">${url} = cards/62c2f60feceeef71ca6108c3</msg>
<status status="PASS" starttime="20220704 14:15:43.527" endtime="20220704 14:15:43.528"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 14:15:43.745" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:43.528" endtime="20220704 14:15:43.745"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:15:43.745" endtime="20220704 14:15:43.746"/>
</return>
<msg timestamp="20220704 14:15:43.746" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:43.526" endtime="20220704 14:15:43.746"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:15:43.746" endtime="20220704 14:15:43.746"/>
</return>
<msg timestamp="20220704 14:15:43.746" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:43.525" endtime="20220704 14:15:43.746"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:15:43.746" endtime="20220704 14:15:43.746"/>
</return>
<status status="PASS" starttime="20220704 14:15:43.525" endtime="20220704 14:15:43.746"/>
</kw>
<kw name="Get A Card" library="Card">
<var>${response}</var>
<arg>${CARD_ID}</arg>
<doc>Gets the card with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:15:43.748" level="INFO">${url} = cards/62c2f60feceeef71ca6108c3</msg>
<status status="PASS" starttime="20220704 14:15:43.748" endtime="20220704 14:15:43.748"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 14:15:43.898" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:43.748" endtime="20220704 14:15:43.898"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:15:43.898" endtime="20220704 14:15:43.899"/>
</return>
<msg timestamp="20220704 14:15:43.899" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:43.747" endtime="20220704 14:15:43.899"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:15:43.899" endtime="20220704 14:15:43.899"/>
</return>
<msg timestamp="20220704 14:15:43.899" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:43.747" endtime="20220704 14:15:43.899"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_CLOSED}</var>
<arg>${response}</arg>
<arg>closed</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 14:15:43.900" endtime="20220704 14:15:43.900"/>
</return>
<msg timestamp="20220704 14:15:43.901" level="INFO">${CARD_CLOSED} = True</msg>
<status status="PASS" starttime="20220704 14:15:43.899" endtime="20220704 14:15:43.901"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${CARD_CLOSED}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220704 14:15:43.901" endtime="20220704 14:15:43.901"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Card</arg>
<arg>${CARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Card" library="Card">
<arg>${CARD_ID}</arg>
<doc>Deletes the card with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:15:43.903" level="INFO">${url} = cards/62c2f60feceeef71ca6108c3</msg>
<status status="PASS" starttime="20220704 14:15:43.903" endtime="20220704 14:15:43.903"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 14:15:44.120" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:43.903" endtime="20220704 14:15:44.120"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:15:44.120" endtime="20220704 14:15:44.120"/>
</return>
<msg timestamp="20220704 14:15:44.120" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:43.902" endtime="20220704 14:15:44.120"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:15:44.120" endtime="20220704 14:15:44.120"/>
</return>
<status status="PASS" starttime="20220704 14:15:43.902" endtime="20220704 14:15:44.120"/>
</kw>
<status status="PASS" starttime="20220704 14:15:43.901" endtime="20220704 14:15:44.121"/>
</kw>
<doc>Verify that a card can be closed through API</doc>
<tag>api</tag>
<tag>card.close</tag>
<tag>regression</tag>
<status status="PASS" starttime="20220704 14:15:43.290" endtime="20220704 14:15:44.121"/>
</test>
<test id="s1-s1-s2-t3" name="Verify A Card Can Be Deleted" line="35">
<kw name="Create A Card" library="Card">
<var>${response}</var>
<doc>Creates a new card in the given list.
required_args: listId
optional_args: name, desc, pos, idCardSource, idLabels, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>@{optional_args}</arg>
<arg>idList</arg>
<arg>${idList}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 14:15:44.123" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 14:15:44.123" endtime="20220704 14:15:44.123"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 14:15:44.123" endtime="20220704 14:15:44.124"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:15:44.124" level="INFO">${url} = cards/</msg>
<status status="PASS" starttime="20220704 14:15:44.124" endtime="20220704 14:15:44.124"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 14:15:44.378" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:44.124" endtime="20220704 14:15:44.378"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:15:44.378" endtime="20220704 14:15:44.378"/>
</return>
<msg timestamp="20220704 14:15:44.378" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:44.122" endtime="20220704 14:15:44.378"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:15:44.378" endtime="20220704 14:15:44.378"/>
</return>
<msg timestamp="20220704 14:15:44.379" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:44.122" endtime="20220704 14:15:44.379"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 14:15:44.379" endtime="20220704 14:15:44.379"/>
</return>
<msg timestamp="20220704 14:15:44.380" level="INFO">${CARD_ID} = 62c2f610efeb805844e45510</msg>
<status status="PASS" starttime="20220704 14:15:44.379" endtime="20220704 14:15:44.380"/>
</kw>
<kw name="Delete A Card" library="Card">
<var>${response}</var>
<arg>${CARD_ID}</arg>
<doc>Deletes the card with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:15:44.381" level="INFO">${url} = cards/62c2f610efeb805844e45510</msg>
<status status="PASS" starttime="20220704 14:15:44.381" endtime="20220704 14:15:44.381"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 14:15:44.636" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:44.381" endtime="20220704 14:15:44.636"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:15:44.636" endtime="20220704 14:15:44.636"/>
</return>
<msg timestamp="20220704 14:15:44.637" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:44.381" endtime="20220704 14:15:44.637"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:15:44.637" endtime="20220704 14:15:44.637"/>
</return>
<msg timestamp="20220704 14:15:44.637" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:44.380" endtime="20220704 14:15:44.637"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>delete</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220704 14:15:44.638" endtime="20220704 14:15:44.640"/>
</kw>
<status status="PASS" starttime="20220704 14:15:44.637" endtime="20220704 14:15:44.640"/>
</kw>
<kw name="Get A Card" library="Card">
<arg>${CARD_ID}</arg>
<arg>status_code=404</arg>
<doc>Gets the card with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:15:44.641" level="INFO">${url} = cards/62c2f610efeb805844e45510</msg>
<status status="PASS" starttime="20220704 14:15:44.641" endtime="20220704 14:15:44.641"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 14:15:44.771" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220704 14:15:44.641" endtime="20220704 14:15:44.771"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:15:44.771" endtime="20220704 14:15:44.772"/>
</return>
<msg timestamp="20220704 14:15:44.772" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220704 14:15:44.640" endtime="20220704 14:15:44.772"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:15:44.772" endtime="20220704 14:15:44.772"/>
</return>
<status status="PASS" starttime="20220704 14:15:44.640" endtime="20220704 14:15:44.772"/>
</kw>
<doc>Verify that a card can be deleted through API</doc>
<tag>api</tag>
<tag>card.delete</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220704 14:15:44.121" endtime="20220704 14:15:44.772"/>
</test>
<test id="s1-s1-s2-t4" name="Verify A Card Can Be Updated" line="44">
<kw name="Create A Card" library="Card">
<var>${response}</var>
<arg>name</arg>
<arg>RFCard4</arg>
<doc>Creates a new card in the given list.
required_args: listId
optional_args: name, desc, pos, idCardSource, idLabels, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>@{optional_args}</arg>
<arg>idList</arg>
<arg>${idList}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 14:15:44.775" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 14:15:44.774" endtime="20220704 14:15:44.775"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 14:15:44.775" endtime="20220704 14:15:44.775"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:15:44.776" level="INFO">${url} = cards/</msg>
<status status="PASS" starttime="20220704 14:15:44.775" endtime="20220704 14:15:44.776"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 14:15:45.010" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:44.776" endtime="20220704 14:15:45.010"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:15:45.010" endtime="20220704 14:15:45.010"/>
</return>
<msg timestamp="20220704 14:15:45.011" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:44.774" endtime="20220704 14:15:45.011"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:15:45.011" endtime="20220704 14:15:45.011"/>
</return>
<msg timestamp="20220704 14:15:45.011" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:44.773" endtime="20220704 14:15:45.011"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 14:15:45.012" endtime="20220704 14:15:45.012"/>
</return>
<msg timestamp="20220704 14:15:45.012" level="INFO">${CARD_ID} = 62c2f6100cbd9053d3f04455</msg>
<status status="PASS" starttime="20220704 14:15:45.011" endtime="20220704 14:15:45.012"/>
</kw>
<kw name="Update A Card" library="Card">
<var>${response}</var>
<arg>${CARD_ID}</arg>
<arg>name</arg>
<arg>RFCard5</arg>
<arg>desc</arg>
<arg>Description</arg>
<doc>Updates the card with the given ID
optional_args: name, desc, closed, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<arg>status_code=${status_code}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 14:15:45.014" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 14:15:45.014" endtime="20220704 14:15:45.014"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 14:15:45.014" endtime="20220704 14:15:45.014"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:15:45.015" level="INFO">${url} = cards/62c2f6100cbd9053d3f04455</msg>
<status status="PASS" starttime="20220704 14:15:45.014" endtime="20220704 14:15:45.015"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 14:15:45.262" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:45.015" endtime="20220704 14:15:45.262"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:15:45.262" endtime="20220704 14:15:45.262"/>
</return>
<msg timestamp="20220704 14:15:45.262" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:45.013" endtime="20220704 14:15:45.262"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:15:45.262" endtime="20220704 14:15:45.262"/>
</return>
<msg timestamp="20220704 14:15:45.262" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:45.013" endtime="20220704 14:15:45.263"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>card</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220704 14:15:45.263" endtime="20220704 14:15:45.268"/>
</kw>
<status status="PASS" starttime="20220704 14:15:45.263" endtime="20220704 14:15:45.269"/>
</kw>
<kw name="Get A Card" library="Card">
<var>${response}</var>
<arg>${CARD_ID}</arg>
<doc>Gets the card with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:15:45.270" level="INFO">${url} = cards/62c2f6100cbd9053d3f04455</msg>
<status status="PASS" starttime="20220704 14:15:45.270" endtime="20220704 14:15:45.270"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 14:15:45.423" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:45.270" endtime="20220704 14:15:45.423"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:15:45.423" endtime="20220704 14:15:45.423"/>
</return>
<msg timestamp="20220704 14:15:45.424" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:45.269" endtime="20220704 14:15:45.424"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:15:45.424" endtime="20220704 14:15:45.424"/>
</return>
<msg timestamp="20220704 14:15:45.424" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:45.269" endtime="20220704 14:15:45.424"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_NAME}</var>
<arg>${response}</arg>
<arg>name</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 14:15:45.424" endtime="20220704 14:15:45.425"/>
</return>
<msg timestamp="20220704 14:15:45.425" level="INFO">${CARD_NAME} = RFCard5</msg>
<status status="PASS" starttime="20220704 14:15:45.424" endtime="20220704 14:15:45.425"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_DESC}</var>
<arg>${response}</arg>
<arg>desc</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 14:15:45.426" endtime="20220704 14:15:45.426"/>
</return>
<msg timestamp="20220704 14:15:45.427" level="INFO">${CARD_DESC} = Description</msg>
<status status="PASS" starttime="20220704 14:15:45.426" endtime="20220704 14:15:45.427"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${CARD_NAME}</arg>
<arg>RFCard5</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220704 14:15:45.427" endtime="20220704 14:15:45.427"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${CARD_DESC}</arg>
<arg>Description</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220704 14:15:45.427" endtime="20220704 14:15:45.427"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Card</arg>
<arg>${CARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Card" library="Card">
<arg>${CARD_ID}</arg>
<doc>Deletes the card with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:15:45.429" level="INFO">${url} = cards/62c2f6100cbd9053d3f04455</msg>
<status status="PASS" starttime="20220704 14:15:45.429" endtime="20220704 14:15:45.429"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 14:15:45.689" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:45.429" endtime="20220704 14:15:45.689"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:15:45.689" endtime="20220704 14:15:45.689"/>
</return>
<msg timestamp="20220704 14:15:45.690" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:45.428" endtime="20220704 14:15:45.690"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:15:45.690" endtime="20220704 14:15:45.690"/>
</return>
<status status="PASS" starttime="20220704 14:15:45.428" endtime="20220704 14:15:45.690"/>
</kw>
<status status="PASS" starttime="20220704 14:15:45.428" endtime="20220704 14:15:45.690"/>
</kw>
<doc>Verify that a card's name and Description can be updated through API</doc>
<tag>api</tag>
<tag>card.update</tag>
<tag>regression</tag>
<status status="PASS" starttime="20220704 14:15:44.773" endtime="20220704 14:15:45.690"/>
</test>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Teardown Board</arg>
<arg>Delete All Sessions</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Teardown Board">
<doc>Delete the board created for this suite</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:15:45.693" level="INFO">${url} = boards/62c2f60e66239270e28c98c1</msg>
<status status="PASS" starttime="20220704 14:15:45.693" endtime="20220704 14:15:45.693"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 14:15:46.158" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:45.693" endtime="20220704 14:15:46.158"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:15:46.159" endtime="20220704 14:15:46.159"/>
</return>
<msg timestamp="20220704 14:15:46.159" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:45.692" endtime="20220704 14:15:46.159"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:15:46.159" endtime="20220704 14:15:46.159"/>
</return>
<status status="PASS" starttime="20220704 14:15:45.691" endtime="20220704 14:15:46.159"/>
</kw>
<status status="PASS" starttime="20220704 14:15:45.691" endtime="20220704 14:15:46.159"/>
</kw>
<status status="PASS" starttime="20220704 14:15:45.691" endtime="20220704 14:15:46.159"/>
</kw>
<kw name="Delete All Sessions" library="request_own_library">
<status status="PASS" starttime="20220704 14:15:46.160" endtime="20220704 14:15:46.161"/>
</kw>
<status status="PASS" starttime="20220704 14:15:45.691" endtime="20220704 14:15:46.161"/>
</kw>
<doc>Example Test with Trello API Cards</doc>
<status status="PASS" starttime="20220704 14:15:42.088" endtime="20220704 14:15:46.161"/>
</suite>
<suite id="s1-s1-s3" name="Trello Api Checklists Tests" source="/trello/api/trello_api_checklists_tests.robot">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Create Trello Session</arg>
<arg>Setup Board, List And Card</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Create Trello Session" library="TrelloAPI">
<doc>Creates a Trello Session</doc>
<kw name="Create Session" library="request_own_library">
<arg>${API_BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<status status="PASS" starttime="20220704 14:15:46.172" endtime="20220704 14:15:46.172"/>
</kw>
<status status="PASS" starttime="20220704 14:15:46.172" endtime="20220704 14:15:46.172"/>
</kw>
<kw name="Setup Board, List And Card">
<doc>Create a board and save its ID and its first list's ID</doc>
<kw name="Create A Board" library="Board">
<var>${BOARD}</var>
<arg>TestBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 14:15:46.173" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 14:15:46.173" endtime="20220704 14:15:46.173"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 14:15:46.173" endtime="20220704 14:15:46.174"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:15:46.174" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220704 14:15:46.174" endtime="20220704 14:15:46.174"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 14:15:46.553" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:46.174" endtime="20220704 14:15:46.553"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:15:46.553" endtime="20220704 14:15:46.553"/>
</return>
<msg timestamp="20220704 14:15:46.553" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:46.173" endtime="20220704 14:15:46.553"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:15:46.553" endtime="20220704 14:15:46.553"/>
</return>
<msg timestamp="20220704 14:15:46.553" level="INFO">${BOARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:46.172" endtime="20220704 14:15:46.554"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_BOARD_ID}</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220704 14:15:46.555" level="INFO">${TEST_SUITE_BOARD_ID} = 62c2f612eaf0e1105ae59184</msg>
<status status="PASS" starttime="20220704 14:15:46.554" endtime="20220704 14:15:46.555"/>
</kw>
<kw name="Get Lists On A Board" library="Board">
<var>${LISTS}</var>
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Get all the lists in a board</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>lists_on_board</arg>
<arg>${id}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:15:46.556" level="INFO">${url} = boards/62c2f612eaf0e1105ae59184/lists/</msg>
<status status="PASS" starttime="20220704 14:15:46.555" endtime="20220704 14:15:46.556"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 14:15:46.689" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:46.556" endtime="20220704 14:15:46.689"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:15:46.689" endtime="20220704 14:15:46.690"/>
</return>
<msg timestamp="20220704 14:15:46.690" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:46.555" endtime="20220704 14:15:46.690"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:15:46.690" endtime="20220704 14:15:46.690"/>
</return>
<msg timestamp="20220704 14:15:46.690" level="INFO">${LISTS} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:46.555" endtime="20220704 14:15:46.690"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_LIST_ID}</arg>
<arg>${LISTS.json()}[0][id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220704 14:15:46.691" level="INFO">${TEST_SUITE_LIST_ID} = 62c2f612eaf0e1105ae5918b</msg>
<status status="PASS" starttime="20220704 14:15:46.690" endtime="20220704 14:15:46.691"/>
</kw>
<kw name="Create A Card" library="Card">
<var>${CARD}</var>
<arg>name</arg>
<arg>TestCard</arg>
<doc>Creates a new card in the given list.
required_args: listId
optional_args: name, desc, pos, idCardSource, idLabels, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>@{optional_args}</arg>
<arg>idList</arg>
<arg>${idList}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 14:15:46.693" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 14:15:46.693" endtime="20220704 14:15:46.693"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 14:15:46.693" endtime="20220704 14:15:46.693"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:15:46.694" level="INFO">${url} = cards/</msg>
<status status="PASS" starttime="20220704 14:15:46.693" endtime="20220704 14:15:46.694"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 14:15:46.958" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:46.694" endtime="20220704 14:15:46.958"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:15:46.958" endtime="20220704 14:15:46.958"/>
</return>
<msg timestamp="20220704 14:15:46.958" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:46.692" endtime="20220704 14:15:46.958"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:15:46.958" endtime="20220704 14:15:46.958"/>
</return>
<msg timestamp="20220704 14:15:46.959" level="INFO">${CARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:46.691" endtime="20220704 14:15:46.959"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_CARD_ID}</arg>
<arg>${CARD.json()}[id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220704 14:15:46.960" level="INFO">${TEST_SUITE_CARD_ID} = 62c2f612d80ce88e0777f39f</msg>
<status status="PASS" starttime="20220704 14:15:46.959" endtime="20220704 14:15:46.960"/>
</kw>
<status status="PASS" starttime="20220704 14:15:46.172" endtime="20220704 14:15:46.960"/>
</kw>
<status status="PASS" starttime="20220704 14:15:46.171" endtime="20220704 14:15:46.960"/>
</kw>
<test id="s1-s1-s3-t1" name="Verify A Checklist Can Be Created" line="14">
<kw name="Create A Checklist" library="Checklist">
<var>${response}</var>
<arg>name</arg>
<arg>TestChecklist</arg>
<arg>idCard=${TEST_SUITE_CARD_ID}</arg>
<doc>Creates a new checklist in the given card.
required_args: idCard
optional_args: name, pos, idChecklistSource
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>@{optional_args}</arg>
<arg>idCard</arg>
<arg>${idCard}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 14:15:46.962" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 14:15:46.962" endtime="20220704 14:15:46.962"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 14:15:46.962" endtime="20220704 14:15:46.963"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:15:46.963" level="INFO">${url} = checklists/</msg>
<status status="PASS" starttime="20220704 14:15:46.963" endtime="20220704 14:15:46.963"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 14:15:47.176" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:46.964" endtime="20220704 14:15:47.176"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:15:47.176" endtime="20220704 14:15:47.176"/>
</return>
<msg timestamp="20220704 14:15:47.176" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:46.961" endtime="20220704 14:15:47.176"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:15:47.176" endtime="20220704 14:15:47.176"/>
</return>
<msg timestamp="20220704 14:15:47.176" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:46.961" endtime="20220704 14:15:47.176"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${checklist_id}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 14:15:47.177" endtime="20220704 14:15:47.177"/>
</return>
<msg timestamp="20220704 14:15:47.178" level="INFO">${checklist_id} = 62c2f613c701224edb14cad4</msg>
<status status="PASS" starttime="20220704 14:15:47.177" endtime="20220704 14:15:47.178"/>
</kw>
<kw name="Get A Checklist" library="Checklist">
<var>${response}</var>
<arg>${checklist_id}</arg>
<doc>Gets the checklist with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:15:47.179" level="INFO">${url} = checklists/62c2f613c701224edb14cad4</msg>
<status status="PASS" starttime="20220704 14:15:47.179" endtime="20220704 14:15:47.179"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 14:15:47.325" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:47.179" endtime="20220704 14:15:47.325"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:15:47.326" endtime="20220704 14:15:47.326"/>
</return>
<msg timestamp="20220704 14:15:47.326" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:47.178" endtime="20220704 14:15:47.326"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:15:47.326" endtime="20220704 14:15:47.326"/>
</return>
<msg timestamp="20220704 14:15:47.326" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:47.178" endtime="20220704 14:15:47.326"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${checklist_name}</var>
<arg>${response}</arg>
<arg>name</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 14:15:47.327" endtime="20220704 14:15:47.327"/>
</return>
<msg timestamp="20220704 14:15:47.328" level="INFO">${checklist_name} = TestChecklist</msg>
<status status="PASS" starttime="20220704 14:15:47.327" endtime="20220704 14:15:47.328"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${checklist_name}</arg>
<arg>TestChecklist</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220704 14:15:47.328" endtime="20220704 14:15:47.328"/>
</kw>
<kw name="Delete A Checklist" library="Checklist" type="TEARDOWN">
<arg>${checklist_id}</arg>
<doc>Deletes the checklist with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:15:47.330" level="INFO">${url} = checklists/62c2f613c701224edb14cad4</msg>
<status status="PASS" starttime="20220704 14:15:47.329" endtime="20220704 14:15:47.330"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 14:15:47.525" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:47.330" endtime="20220704 14:15:47.525"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:15:47.525" endtime="20220704 14:15:47.525"/>
</return>
<msg timestamp="20220704 14:15:47.525" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:47.329" endtime="20220704 14:15:47.525"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:15:47.525" endtime="20220704 14:15:47.525"/>
</return>
<status status="PASS" starttime="20220704 14:15:47.328" endtime="20220704 14:15:47.525"/>
</kw>
<doc>Verify that a checklist can be created through API</doc>
<tag>api</tag>
<tag>checklist.create</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220704 14:15:46.960" endtime="20220704 14:15:47.525"/>
</test>
<test id="s1-s1-s3-t2" name="Verify A Checklist Can Be Deleted" line="24">
<kw name="Create A Checklist" library="Checklist">
<var>${response}</var>
<arg>name</arg>
<arg>TestChecklist</arg>
<arg>idCard=${TEST_SUITE_CARD_ID}</arg>
<doc>Creates a new checklist in the given card.
required_args: idCard
optional_args: name, pos, idChecklistSource
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>@{optional_args}</arg>
<arg>idCard</arg>
<arg>${idCard}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 14:15:47.528" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 14:15:47.528" endtime="20220704 14:15:47.528"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 14:15:47.528" endtime="20220704 14:15:47.528"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:15:47.529" level="INFO">${url} = checklists/</msg>
<status status="PASS" starttime="20220704 14:15:47.528" endtime="20220704 14:15:47.529"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 14:15:47.752" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:47.529" endtime="20220704 14:15:47.752"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:15:47.752" endtime="20220704 14:15:47.752"/>
</return>
<msg timestamp="20220704 14:15:47.752" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:47.527" endtime="20220704 14:15:47.752"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:15:47.752" endtime="20220704 14:15:47.752"/>
</return>
<msg timestamp="20220704 14:15:47.753" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:47.526" endtime="20220704 14:15:47.753"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${checklist_id}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 14:15:47.753" endtime="20220704 14:15:47.753"/>
</return>
<msg timestamp="20220704 14:15:47.754" level="INFO">${checklist_id} = 62c2f613f364cd1bfea50c64</msg>
<status status="PASS" starttime="20220704 14:15:47.753" endtime="20220704 14:15:47.754"/>
</kw>
<kw name="Delete A Checklist" library="Checklist">
<var>${response}</var>
<arg>${checklist_id}</arg>
<doc>Deletes the checklist with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:15:47.756" level="INFO">${url} = checklists/62c2f613f364cd1bfea50c64</msg>
<status status="PASS" starttime="20220704 14:15:47.755" endtime="20220704 14:15:47.756"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 14:15:47.960" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:47.756" endtime="20220704 14:15:47.960"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:15:47.960" endtime="20220704 14:15:47.960"/>
</return>
<msg timestamp="20220704 14:15:47.960" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:47.755" endtime="20220704 14:15:47.960"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:15:47.960" endtime="20220704 14:15:47.960"/>
</return>
<msg timestamp="20220704 14:15:47.961" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:47.755" endtime="20220704 14:15:47.961"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>delete</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220704 14:15:47.961" endtime="20220704 14:15:47.963"/>
</kw>
<status status="PASS" starttime="20220704 14:15:47.961" endtime="20220704 14:15:47.963"/>
</kw>
<kw name="Get A Checklist" library="Checklist">
<arg>${checklist_id}</arg>
<arg>status_code=404</arg>
<doc>Gets the checklist with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:15:47.964" level="INFO">${url} = checklists/62c2f613f364cd1bfea50c64</msg>
<status status="PASS" starttime="20220704 14:15:47.964" endtime="20220704 14:15:47.964"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 14:15:48.090" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220704 14:15:47.965" endtime="20220704 14:15:48.090"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:15:48.090" endtime="20220704 14:15:48.090"/>
</return>
<msg timestamp="20220704 14:15:48.090" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220704 14:15:47.964" endtime="20220704 14:15:48.090"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:15:48.090" endtime="20220704 14:15:48.090"/>
</return>
<status status="PASS" starttime="20220704 14:15:47.963" endtime="20220704 14:15:48.090"/>
</kw>
<doc>Verify that a checklist can be deleted through API</doc>
<tag>api</tag>
<tag>checklist.delete</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220704 14:15:47.526" endtime="20220704 14:15:48.091"/>
</test>
<test id="s1-s1-s3-t3" name="Verify A Checklist Can Be Updated" line="33">
<kw name="Create A Checklist" library="Checklist">
<var>${response}</var>
<arg>name</arg>
<arg>TestChecklist</arg>
<arg>idCard=${TEST_SUITE_CARD_ID}</arg>
<doc>Creates a new checklist in the given card.
required_args: idCard
optional_args: name, pos, idChecklistSource
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>@{optional_args}</arg>
<arg>idCard</arg>
<arg>${idCard}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 14:15:48.095" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 14:15:48.093" endtime="20220704 14:15:48.095"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 14:15:48.095" endtime="20220704 14:15:48.095"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:15:48.096" level="INFO">${url} = checklists/</msg>
<status status="PASS" starttime="20220704 14:15:48.095" endtime="20220704 14:15:48.096"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 14:15:48.306" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:48.096" endtime="20220704 14:15:48.306"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:15:48.307" endtime="20220704 14:15:48.307"/>
</return>
<msg timestamp="20220704 14:15:48.307" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:48.092" endtime="20220704 14:15:48.307"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:15:48.307" endtime="20220704 14:15:48.307"/>
</return>
<msg timestamp="20220704 14:15:48.307" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:48.092" endtime="20220704 14:15:48.307"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${checklist_id}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 14:15:48.308" endtime="20220704 14:15:48.308"/>
</return>
<msg timestamp="20220704 14:15:48.309" level="INFO">${checklist_id} = 62c2f6147e89595227397c94</msg>
<status status="PASS" starttime="20220704 14:15:48.307" endtime="20220704 14:15:48.309"/>
</kw>
<kw name="Update A Checklist" library="Checklist">
<var>${response}</var>
<arg>${checklist_id}</arg>
<arg>name</arg>
<arg>TestChecklist2</arg>
<doc>Updates the checklist with the given ID
optional_args: name, pos
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<arg>status_code=${status_code}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 14:15:48.310" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 14:15:48.310" endtime="20220704 14:15:48.310"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 14:15:48.310" endtime="20220704 14:15:48.310"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:15:48.311" level="INFO">${url} = checklists/62c2f6147e89595227397c94</msg>
<status status="PASS" starttime="20220704 14:15:48.310" endtime="20220704 14:15:48.311"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 14:15:48.497" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:48.311" endtime="20220704 14:15:48.497"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:15:48.497" endtime="20220704 14:15:48.497"/>
</return>
<msg timestamp="20220704 14:15:48.497" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:48.309" endtime="20220704 14:15:48.497"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:15:48.497" endtime="20220704 14:15:48.497"/>
</return>
<msg timestamp="20220704 14:15:48.497" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:48.309" endtime="20220704 14:15:48.498"/>
</kw>
<kw name="Get A Checklist" library="Checklist">
<var>${response}</var>
<arg>${checklist_id}</arg>
<doc>Gets the checklist with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:15:48.499" level="INFO">${url} = checklists/62c2f6147e89595227397c94</msg>
<status status="PASS" starttime="20220704 14:15:48.499" endtime="20220704 14:15:48.499"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 14:15:48.638" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:48.499" endtime="20220704 14:15:48.638"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:15:48.638" endtime="20220704 14:15:48.638"/>
</return>
<msg timestamp="20220704 14:15:48.639" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:48.498" endtime="20220704 14:15:48.639"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:15:48.639" endtime="20220704 14:15:48.639"/>
</return>
<msg timestamp="20220704 14:15:48.639" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:48.498" endtime="20220704 14:15:48.639"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${checklist_name}</var>
<arg>${response}</arg>
<arg>name</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 14:15:48.640" endtime="20220704 14:15:48.640"/>
</return>
<msg timestamp="20220704 14:15:48.640" level="INFO">${checklist_name} = TestChecklist2</msg>
<status status="PASS" starttime="20220704 14:15:48.639" endtime="20220704 14:15:48.640"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${checklist_name}</arg>
<arg>TestChecklist2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220704 14:15:48.641" endtime="20220704 14:15:48.641"/>
</kw>
<kw name="Delete A Checklist" library="Checklist" type="TEARDOWN">
<arg>${checklist_id}</arg>
<doc>Deletes the checklist with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:15:48.657" level="INFO">${url} = checklists/62c2f6147e89595227397c94</msg>
<status status="PASS" starttime="20220704 14:15:48.656" endtime="20220704 14:15:48.657"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 14:15:48.855" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:48.657" endtime="20220704 14:15:48.855"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:15:48.855" endtime="20220704 14:15:48.855"/>
</return>
<msg timestamp="20220704 14:15:48.856" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:48.656" endtime="20220704 14:15:48.856"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:15:48.856" endtime="20220704 14:15:48.856"/>
</return>
<status status="PASS" starttime="20220704 14:15:48.641" endtime="20220704 14:15:48.856"/>
</kw>
<doc>Verify that a checklist's name can be updated through API</doc>
<tag>api</tag>
<tag>checklist.update</tag>
<tag>regression</tag>
<status status="PASS" starttime="20220704 14:15:48.091" endtime="20220704 14:15:48.856"/>
</test>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Teardown Board</arg>
<arg>Delete All Sessions</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Teardown Board">
<doc>Delete the board created for this suite</doc>
<kw name="Delete A Board" library="Board">
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:15:48.859" level="INFO">${url} = boards/62c2f612eaf0e1105ae59184</msg>
<status status="PASS" starttime="20220704 14:15:48.858" endtime="20220704 14:15:48.859"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 14:15:49.297" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:48.859" endtime="20220704 14:15:49.297"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:15:49.297" endtime="20220704 14:15:49.297"/>
</return>
<msg timestamp="20220704 14:15:49.298" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:48.858" endtime="20220704 14:15:49.298"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:15:49.298" endtime="20220704 14:15:49.298"/>
</return>
<status status="PASS" starttime="20220704 14:15:48.858" endtime="20220704 14:15:49.298"/>
</kw>
<status status="PASS" starttime="20220704 14:15:48.857" endtime="20220704 14:15:49.298"/>
</kw>
<kw name="Delete All Sessions" library="request_own_library">
<status status="PASS" starttime="20220704 14:15:49.298" endtime="20220704 14:15:49.300"/>
</kw>
<status status="PASS" starttime="20220704 14:15:48.857" endtime="20220704 14:15:49.300"/>
</kw>
<doc>Example Test with Trello API Checklists</doc>
<status status="PASS" starttime="20220704 14:15:46.162" endtime="20220704 14:15:49.300"/>
</suite>
<suite id="s1-s1-s4" name="Trello Api Labels Tests" source="/trello/api/trello_api_labels_tests.robot">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Create Trello Session</arg>
<arg>Setup Board And List</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Create Trello Session" library="TrelloAPI">
<doc>Creates a Trello Session</doc>
<kw name="Create Session" library="request_own_library">
<arg>${API_BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<status status="PASS" starttime="20220704 14:15:49.310" endtime="20220704 14:15:49.311"/>
</kw>
<status status="PASS" starttime="20220704 14:15:49.310" endtime="20220704 14:15:49.311"/>
</kw>
<kw name="Setup Board And List">
<doc>Create a board and save its ID and its first list's ID</doc>
<kw name="Create A Board" library="Board">
<var>${BOARD}</var>
<arg>TestBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 14:15:49.312" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 14:15:49.311" endtime="20220704 14:15:49.312"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 14:15:49.312" endtime="20220704 14:15:49.312"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:15:49.313" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220704 14:15:49.312" endtime="20220704 14:15:49.313"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 14:15:49.676" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:49.313" endtime="20220704 14:15:49.676"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:15:49.676" endtime="20220704 14:15:49.677"/>
</return>
<msg timestamp="20220704 14:15:49.677" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:49.311" endtime="20220704 14:15:49.677"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:15:49.677" endtime="20220704 14:15:49.677"/>
</return>
<msg timestamp="20220704 14:15:49.677" level="INFO">${BOARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:49.311" endtime="20220704 14:15:49.677"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_BOARD_ID}</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220704 14:15:49.678" level="INFO">${TEST_SUITE_BOARD_ID} = 62c2f61594fab625d8031a28</msg>
<status status="PASS" starttime="20220704 14:15:49.677" endtime="20220704 14:15:49.678"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${LISTS}</var>
<arg>boards/${TEST_SUITE_BOARD_ID}/lists</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 14:15:49.817" level="INFO">${LISTS} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:49.678" endtime="20220704 14:15:49.818"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_LIST_ID}</arg>
<arg>${LISTS.json()}[0][id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220704 14:15:49.819" level="INFO">${TEST_SUITE_LIST_ID} = 62c2f61594fab625d8031a2f</msg>
<status status="PASS" starttime="20220704 14:15:49.818" endtime="20220704 14:15:49.819"/>
</kw>
<status status="PASS" starttime="20220704 14:15:49.311" endtime="20220704 14:15:49.819"/>
</kw>
<status status="PASS" starttime="20220704 14:15:49.310" endtime="20220704 14:15:49.819"/>
</kw>
<test id="s1-s1-s4-t1" name="Create and get label on board" line="14">
<kw name="Create A Label" library="Label">
<var>${response}</var>
<arg>name</arg>
<arg>label2</arg>
<arg>color</arg>
<arg>yellow</arg>
<doc>Creates a new label in the given board.
required_args: idBoard
optional_args: name, color
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>idBoard</arg>
<arg>${idBoard}</arg>
<arg>@{optional_args}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 14:15:49.821" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 14:15:49.821" endtime="20220704 14:15:49.821"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 14:15:49.821" endtime="20220704 14:15:49.822"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:15:49.822" level="INFO">${url} = labels/</msg>
<status status="PASS" starttime="20220704 14:15:49.822" endtime="20220704 14:15:49.822"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 14:15:50.014" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:49.823" endtime="20220704 14:15:50.014"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:15:50.014" endtime="20220704 14:15:50.014"/>
</return>
<msg timestamp="20220704 14:15:50.015" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:49.821" endtime="20220704 14:15:50.015"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:15:50.015" endtime="20220704 14:15:50.015"/>
</return>
<msg timestamp="20220704 14:15:50.015" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:49.820" endtime="20220704 14:15:50.015"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>label</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220704 14:15:50.016" endtime="20220704 14:15:50.018"/>
</kw>
<status status="PASS" starttime="20220704 14:15:50.015" endtime="20220704 14:15:50.018"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${LABEL_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 14:15:50.018" endtime="20220704 14:15:50.018"/>
</return>
<msg timestamp="20220704 14:15:50.019" level="INFO">${LABEL_ID} = 62c2f615ced95e142e02ea22</msg>
<status status="PASS" starttime="20220704 14:15:50.018" endtime="20220704 14:15:50.019"/>
</kw>
<kw name="Get A Label" library="Label">
<var>${response}</var>
<arg>${LABEL_ID}</arg>
<doc>Gets the label with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:15:50.020" level="INFO">${url} = labels/62c2f615ced95e142e02ea22</msg>
<status status="PASS" starttime="20220704 14:15:50.020" endtime="20220704 14:15:50.020"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 14:15:50.157" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:50.020" endtime="20220704 14:15:50.157"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:15:50.157" endtime="20220704 14:15:50.157"/>
</return>
<msg timestamp="20220704 14:15:50.158" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:50.019" endtime="20220704 14:15:50.158"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:15:50.158" endtime="20220704 14:15:50.158"/>
</return>
<msg timestamp="20220704 14:15:50.158" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:50.019" endtime="20220704 14:15:50.158"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${LABEL_COLOR}</var>
<arg>${response}</arg>
<arg>color</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 14:15:50.159" endtime="20220704 14:15:50.159"/>
</return>
<msg timestamp="20220704 14:15:50.159" level="INFO">${LABEL_COLOR} = yellow</msg>
<status status="PASS" starttime="20220704 14:15:50.158" endtime="20220704 14:15:50.160"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${LABEL_NAME}</var>
<arg>${response}</arg>
<arg>name</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 14:15:50.160" endtime="20220704 14:15:50.160"/>
</return>
<msg timestamp="20220704 14:15:50.161" level="INFO">${LABEL_NAME} = label2</msg>
<status status="PASS" starttime="20220704 14:15:50.160" endtime="20220704 14:15:50.161"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${LABEL_COLOR}</arg>
<arg>yellow</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220704 14:15:50.161" endtime="20220704 14:15:50.161"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${LABEL_NAME}</arg>
<arg>label2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220704 14:15:50.161" endtime="20220704 14:15:50.162"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Label</arg>
<arg>${LABEL_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Label" library="Label">
<arg>${LABEL_ID}</arg>
<doc>Deletes the label with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:15:50.163" level="INFO">${url} = labels/62c2f615ced95e142e02ea22</msg>
<status status="PASS" starttime="20220704 14:15:50.163" endtime="20220704 14:15:50.163"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 14:15:50.367" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:50.163" endtime="20220704 14:15:50.367"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:15:50.367" endtime="20220704 14:15:50.367"/>
</return>
<msg timestamp="20220704 14:15:50.368" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:50.163" endtime="20220704 14:15:50.368"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:15:50.368" endtime="20220704 14:15:50.368"/>
</return>
<status status="PASS" starttime="20220704 14:15:50.162" endtime="20220704 14:15:50.368"/>
</kw>
<status status="PASS" starttime="20220704 14:15:50.162" endtime="20220704 14:15:50.368"/>
</kw>
<doc>Verify that a label can be created through API</doc>
<tag>api</tag>
<tag>label.create</tag>
<tag>label.get</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220704 14:15:49.819" endtime="20220704 14:15:50.368"/>
</test>
<test id="s1-s1-s4-t2" name="Update label on board" line="28">
<kw name="Create A Label" library="Label">
<var>${response}</var>
<arg>name</arg>
<arg>label2</arg>
<arg>color</arg>
<arg>yellow</arg>
<doc>Creates a new label in the given board.
required_args: idBoard
optional_args: name, color
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>idBoard</arg>
<arg>${idBoard}</arg>
<arg>@{optional_args}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 14:15:50.370" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 14:15:50.370" endtime="20220704 14:15:50.371"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 14:15:50.371" endtime="20220704 14:15:50.371"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:15:50.372" level="INFO">${url} = labels/</msg>
<status status="PASS" starttime="20220704 14:15:50.371" endtime="20220704 14:15:50.372"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 14:15:50.559" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:50.372" endtime="20220704 14:15:50.559"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:15:50.559" endtime="20220704 14:15:50.559"/>
</return>
<msg timestamp="20220704 14:15:50.559" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:50.370" endtime="20220704 14:15:50.559"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:15:50.559" endtime="20220704 14:15:50.559"/>
</return>
<msg timestamp="20220704 14:15:50.560" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:50.369" endtime="20220704 14:15:50.560"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>label</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220704 14:15:50.560" endtime="20220704 14:15:50.562"/>
</kw>
<status status="PASS" starttime="20220704 14:15:50.560" endtime="20220704 14:15:50.562"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${LABEL_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 14:15:50.563" endtime="20220704 14:15:50.563"/>
</return>
<msg timestamp="20220704 14:15:50.564" level="INFO">${LABEL_ID} = 62c2f616a01ae83684a262ad</msg>
<status status="PASS" starttime="20220704 14:15:50.563" endtime="20220704 14:15:50.564"/>
</kw>
<kw name="Update A Label" library="Label">
<var>${new_response}</var>
<arg>${LABEL_ID}</arg>
<arg>name</arg>
<arg>label3</arg>
<arg>color</arg>
<arg>orange</arg>
<doc>Updates the label with the given ID
optional_args: name, color
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 14:15:50.565" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 14:15:50.565" endtime="20220704 14:15:50.565"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 14:15:50.565" endtime="20220704 14:15:50.565"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:15:50.566" level="INFO">${url} = labels/62c2f616a01ae83684a262ad</msg>
<status status="PASS" starttime="20220704 14:15:50.565" endtime="20220704 14:15:50.566"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 14:15:50.756" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:50.566" endtime="20220704 14:15:50.756"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:15:50.757" endtime="20220704 14:15:50.757"/>
</return>
<msg timestamp="20220704 14:15:50.757" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:50.564" endtime="20220704 14:15:50.757"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:15:50.757" endtime="20220704 14:15:50.757"/>
</return>
<msg timestamp="20220704 14:15:50.757" level="INFO">${new_response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:50.564" endtime="20220704 14:15:50.757"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${NEW_LABEL_COLOR}</var>
<arg>${new_response}</arg>
<arg>color</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 14:15:50.758" endtime="20220704 14:15:50.758"/>
</return>
<msg timestamp="20220704 14:15:50.758" level="INFO">${NEW_LABEL_COLOR} = orange</msg>
<status status="PASS" starttime="20220704 14:15:50.757" endtime="20220704 14:15:50.759"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${NEW_LABEL_NAME}</var>
<arg>${new_response}</arg>
<arg>name</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 14:15:50.759" endtime="20220704 14:15:50.759"/>
</return>
<msg timestamp="20220704 14:15:50.760" level="INFO">${NEW_LABEL_NAME} = label3</msg>
<status status="PASS" starttime="20220704 14:15:50.759" endtime="20220704 14:15:50.760"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${NEW_LABEL_COLOR}</arg>
<arg>orange</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220704 14:15:50.760" endtime="20220704 14:15:50.760"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${NEW_LABEL_NAME}</arg>
<arg>label3</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220704 14:15:50.760" endtime="20220704 14:15:50.761"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Label</arg>
<arg>${LABEL_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Label" library="Label">
<arg>${LABEL_ID}</arg>
<doc>Deletes the label with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:15:50.762" level="INFO">${url} = labels/62c2f616a01ae83684a262ad</msg>
<status status="PASS" starttime="20220704 14:15:50.762" endtime="20220704 14:15:50.762"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 14:15:50.964" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:50.762" endtime="20220704 14:15:50.964"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:15:50.964" endtime="20220704 14:15:50.964"/>
</return>
<msg timestamp="20220704 14:15:50.964" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:50.761" endtime="20220704 14:15:50.964"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:15:50.964" endtime="20220704 14:15:50.964"/>
</return>
<status status="PASS" starttime="20220704 14:15:50.761" endtime="20220704 14:15:50.965"/>
</kw>
<status status="PASS" starttime="20220704 14:15:50.761" endtime="20220704 14:15:50.965"/>
</kw>
<doc>Verify that a label's name and color can be updated through API</doc>
<tag>api</tag>
<tag>label.update</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220704 14:15:50.368" endtime="20220704 14:15:50.965"/>
</test>
<test id="s1-s1-s4-t3" name="Delete label on board" line="41">
<kw name="Create A Label" library="Label">
<var>${response}</var>
<arg>name</arg>
<arg>label2</arg>
<arg>color</arg>
<arg>yellow</arg>
<doc>Creates a new label in the given board.
required_args: idBoard
optional_args: name, color
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>idBoard</arg>
<arg>${idBoard}</arg>
<arg>@{optional_args}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 14:15:50.967" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 14:15:50.967" endtime="20220704 14:15:50.967"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 14:15:50.967" endtime="20220704 14:15:50.967"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:15:50.968" level="INFO">${url} = labels/</msg>
<status status="PASS" starttime="20220704 14:15:50.968" endtime="20220704 14:15:50.968"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 14:15:51.144" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:50.968" endtime="20220704 14:15:51.144"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:15:51.144" endtime="20220704 14:15:51.144"/>
</return>
<msg timestamp="20220704 14:15:51.145" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:50.966" endtime="20220704 14:15:51.145"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:15:51.145" endtime="20220704 14:15:51.145"/>
</return>
<msg timestamp="20220704 14:15:51.145" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:50.966" endtime="20220704 14:15:51.145"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${LABEL_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 14:15:51.146" endtime="20220704 14:15:51.146"/>
</return>
<msg timestamp="20220704 14:15:51.146" level="INFO">${LABEL_ID} = 62c2f617eb9e8d2e1029cb9b</msg>
<status status="PASS" starttime="20220704 14:15:51.145" endtime="20220704 14:15:51.146"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Label</arg>
<arg>${LABEL_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Label" library="Label">
<arg>${LABEL_ID}</arg>
<doc>Deletes the label with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:15:51.148" level="INFO">${url} = labels/62c2f617eb9e8d2e1029cb9b</msg>
<status status="PASS" starttime="20220704 14:15:51.148" endtime="20220704 14:15:51.148"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 14:15:51.339" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:51.148" endtime="20220704 14:15:51.339"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:15:51.339" endtime="20220704 14:15:51.339"/>
</return>
<msg timestamp="20220704 14:15:51.340" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:51.147" endtime="20220704 14:15:51.340"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:15:51.340" endtime="20220704 14:15:51.340"/>
</return>
<status status="PASS" starttime="20220704 14:15:51.147" endtime="20220704 14:15:51.340"/>
</kw>
<status status="PASS" starttime="20220704 14:15:51.147" endtime="20220704 14:15:51.340"/>
</kw>
<kw name="Get A Label" library="Label">
<arg>${LABEL_ID}</arg>
<arg>status_code=404</arg>
<doc>Gets the label with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:15:51.341" level="INFO">${url} = labels/62c2f617eb9e8d2e1029cb9b</msg>
<status status="PASS" starttime="20220704 14:15:51.341" endtime="20220704 14:15:51.341"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 14:15:51.468" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220704 14:15:51.342" endtime="20220704 14:15:51.468"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:15:51.468" endtime="20220704 14:15:51.469"/>
</return>
<msg timestamp="20220704 14:15:51.469" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220704 14:15:51.341" endtime="20220704 14:15:51.469"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:15:51.469" endtime="20220704 14:15:51.469"/>
</return>
<status status="PASS" starttime="20220704 14:15:51.340" endtime="20220704 14:15:51.469"/>
</kw>
<doc>Verify that a label can be deleted through API</doc>
<tag>api</tag>
<tag>label.delete</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220704 14:15:50.965" endtime="20220704 14:15:51.469"/>
</test>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Teardown Board</arg>
<arg>Delete All Sessions</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Teardown Board">
<doc>Delete the board created for this session.</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:15:51.472" level="INFO">${url} = boards/62c2f61594fab625d8031a28</msg>
<status status="PASS" starttime="20220704 14:15:51.472" endtime="20220704 14:15:51.472"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 14:15:51.967" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:51.473" endtime="20220704 14:15:51.967"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:15:51.967" endtime="20220704 14:15:51.967"/>
</return>
<msg timestamp="20220704 14:15:51.968" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:51.472" endtime="20220704 14:15:51.968"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:15:51.968" endtime="20220704 14:15:51.968"/>
</return>
<status status="PASS" starttime="20220704 14:15:51.471" endtime="20220704 14:15:51.968"/>
</kw>
<status status="PASS" starttime="20220704 14:15:51.471" endtime="20220704 14:15:51.968"/>
</kw>
<status status="PASS" starttime="20220704 14:15:51.471" endtime="20220704 14:15:51.968"/>
</kw>
<kw name="Delete All Sessions" library="request_own_library">
<status status="PASS" starttime="20220704 14:15:51.968" endtime="20220704 14:15:51.970"/>
</kw>
<status status="PASS" starttime="20220704 14:15:51.470" endtime="20220704 14:15:51.970"/>
</kw>
<doc>Example Test with Trello API Cards</doc>
<status status="PASS" starttime="20220704 14:15:49.301" endtime="20220704 14:15:51.970"/>
</suite>
<suite id="s1-s1-s5" name="Trello Api Lists Tests" source="/trello/api/trello_api_lists_tests.robot">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Create Trello Session</arg>
<arg>Setup Board</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Create Trello Session" library="TrelloAPI">
<doc>Creates a Trello Session</doc>
<kw name="Create Session" library="request_own_library">
<arg>${API_BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<status status="PASS" starttime="20220704 14:15:51.980" endtime="20220704 14:15:51.980"/>
</kw>
<status status="PASS" starttime="20220704 14:15:51.980" endtime="20220704 14:15:51.980"/>
</kw>
<kw name="Setup Board">
<doc>Create a board and save it's id for the suite</doc>
<kw name="Create A Board" library="Board">
<var>${BOARD}</var>
<arg>TestBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 14:15:51.982" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 14:15:51.981" endtime="20220704 14:15:51.982"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 14:15:51.982" endtime="20220704 14:15:51.982"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:15:51.983" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220704 14:15:51.982" endtime="20220704 14:15:51.983"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 14:15:52.349" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:51.983" endtime="20220704 14:15:52.349"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:15:52.349" endtime="20220704 14:15:52.349"/>
</return>
<msg timestamp="20220704 14:15:52.349" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:51.981" endtime="20220704 14:15:52.349"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:15:52.349" endtime="20220704 14:15:52.349"/>
</return>
<msg timestamp="20220704 14:15:52.349" level="INFO">${BOARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:51.981" endtime="20220704 14:15:52.349"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Set Suite Variable</arg>
<arg>\${TEST_SUITE_BOARD_ID}</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_BOARD_ID}</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220704 14:15:52.351" level="INFO">${TEST_SUITE_BOARD_ID} = 62c2f618806686216e3b1a23</msg>
<status status="PASS" starttime="20220704 14:15:52.350" endtime="20220704 14:15:52.351"/>
</kw>
<status status="PASS" starttime="20220704 14:15:52.350" endtime="20220704 14:15:52.351"/>
</kw>
<status status="PASS" starttime="20220704 14:15:51.980" endtime="20220704 14:15:52.351"/>
</kw>
<status status="PASS" starttime="20220704 14:15:51.979" endtime="20220704 14:15:52.351"/>
</kw>
<test id="s1-s1-s5-t1" name="CREATE a list" line="13">
<kw name="Create A List" library="List">
<var>${response}</var>
<arg>NewList</arg>
<doc>Creates a new List
board id
name the list will have
optional_args: idListSource, pos, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>list</arg>
<arg>name</arg>
<arg>${name}</arg>
<arg>idBoard</arg>
<arg>${idBoard}</arg>
<arg>@{optional_args}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 14:15:52.353" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 14:15:52.353" endtime="20220704 14:15:52.353"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 14:15:52.353" endtime="20220704 14:15:52.353"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:15:52.354" level="INFO">${url} = lists/</msg>
<status status="PASS" starttime="20220704 14:15:52.354" endtime="20220704 14:15:52.354"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 14:15:52.563" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:52.354" endtime="20220704 14:15:52.563"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:15:52.563" endtime="20220704 14:15:52.563"/>
</return>
<msg timestamp="20220704 14:15:52.563" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:52.352" endtime="20220704 14:15:52.563"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:15:52.563" endtime="20220704 14:15:52.563"/>
</return>
<msg timestamp="20220704 14:15:52.564" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:52.352" endtime="20220704 14:15:52.564"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>list</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220704 14:15:52.564" endtime="20220704 14:15:52.566"/>
</kw>
<status status="PASS" starttime="20220704 14:15:52.564" endtime="20220704 14:15:52.566"/>
</kw>
<doc>Verify that a list can be created through API</doc>
<tag>api</tag>
<tag>list.create</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220704 14:15:52.351" endtime="20220704 14:15:52.567"/>
</test>
<test id="s1-s1-s5-t2" name="UPDATE a list" line="19">
<kw name="Create A List" library="List">
<var>${response}</var>
<arg>NewList</arg>
<doc>Creates a new List
board id
name the list will have
optional_args: idListSource, pos, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>list</arg>
<arg>name</arg>
<arg>${name}</arg>
<arg>idBoard</arg>
<arg>${idBoard}</arg>
<arg>@{optional_args}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 14:15:52.569" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 14:15:52.568" endtime="20220704 14:15:52.569"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 14:15:52.569" endtime="20220704 14:15:52.569"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:15:52.570" level="INFO">${url} = lists/</msg>
<status status="PASS" starttime="20220704 14:15:52.569" endtime="20220704 14:15:52.570"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 14:15:52.744" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:52.570" endtime="20220704 14:15:52.744"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:15:52.745" endtime="20220704 14:15:52.745"/>
</return>
<msg timestamp="20220704 14:15:52.745" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:52.568" endtime="20220704 14:15:52.745"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:15:52.745" endtime="20220704 14:15:52.745"/>
</return>
<msg timestamp="20220704 14:15:52.745" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:52.568" endtime="20220704 14:15:52.745"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>list</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220704 14:15:52.746" endtime="20220704 14:15:52.748"/>
</kw>
<status status="PASS" starttime="20220704 14:15:52.745" endtime="20220704 14:15:52.748"/>
</kw>
<kw name="Update A List" library="List">
<arg>${response.json()}[id]</arg>
<arg>name</arg>
<arg>NewName</arg>
<doc>Updates the board with the given ID
optional_args: name, idListSource, pos, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>list</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 14:15:52.750" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 14:15:52.749" endtime="20220704 14:15:52.750"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 14:15:52.750" endtime="20220704 14:15:52.750"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:15:52.750" level="INFO">${url} = lists/62c2f618487de50b9657cf63</msg>
<status status="PASS" starttime="20220704 14:15:52.750" endtime="20220704 14:15:52.750"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 14:15:52.912" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:52.751" endtime="20220704 14:15:52.912"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:15:52.912" endtime="20220704 14:15:52.912"/>
</return>
<msg timestamp="20220704 14:15:52.912" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:52.749" endtime="20220704 14:15:52.912"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:15:52.912" endtime="20220704 14:15:52.912"/>
</return>
<status status="PASS" starttime="20220704 14:15:52.748" endtime="20220704 14:15:52.913"/>
</kw>
<kw name="Get A List" library="List">
<var>${new_response}</var>
<arg>${response.json()}[id]</arg>
<doc>Gets the List with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>list</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:15:52.915" level="INFO">${url} = lists/62c2f618487de50b9657cf63</msg>
<status status="PASS" starttime="20220704 14:15:52.914" endtime="20220704 14:15:52.915"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 14:15:53.045" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:52.915" endtime="20220704 14:15:53.045"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:15:53.045" endtime="20220704 14:15:53.045"/>
</return>
<msg timestamp="20220704 14:15:53.045" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:52.914" endtime="20220704 14:15:53.046"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:15:53.046" endtime="20220704 14:15:53.046"/>
</return>
<msg timestamp="20220704 14:15:53.046" level="INFO">${new_response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:52.913" endtime="20220704 14:15:53.046"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${new_response}</arg>
<arg>list</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220704 14:15:53.046" endtime="20220704 14:15:53.048"/>
</kw>
<status status="PASS" starttime="20220704 14:15:53.046" endtime="20220704 14:15:53.048"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${new_response.json()}[name]</arg>
<arg>NewName</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220704 14:15:53.048" endtime="20220704 14:15:53.049"/>
</kw>
<doc>Verify that a lists name can be updated through API</doc>
<tag>api</tag>
<tag>list.update</tag>
<tag>regression</tag>
<status status="PASS" starttime="20220704 14:15:52.567" endtime="20220704 14:15:53.049"/>
</test>
<test id="s1-s1-s5-t3" name="ARCHIVE A list" line="29">
<kw name="Create A List" library="List">
<var>${response}</var>
<arg>NewList</arg>
<doc>Creates a new List
board id
name the list will have
optional_args: idListSource, pos, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>list</arg>
<arg>name</arg>
<arg>${name}</arg>
<arg>idBoard</arg>
<arg>${idBoard}</arg>
<arg>@{optional_args}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 14:15:53.051" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 14:15:53.051" endtime="20220704 14:15:53.051"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 14:15:53.051" endtime="20220704 14:15:53.052"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:15:53.053" level="INFO">${url} = lists/</msg>
<status status="PASS" starttime="20220704 14:15:53.053" endtime="20220704 14:15:53.053"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 14:15:53.253" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:53.053" endtime="20220704 14:15:53.253"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:15:53.253" endtime="20220704 14:15:53.253"/>
</return>
<msg timestamp="20220704 14:15:53.254" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:53.050" endtime="20220704 14:15:53.254"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:15:53.254" endtime="20220704 14:15:53.254"/>
</return>
<msg timestamp="20220704 14:15:53.254" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:53.050" endtime="20220704 14:15:53.254"/>
</kw>
<kw name="Archive A List" library="List">
<arg>${response.json()}[id]</arg>
<doc>Deletes the list with the given ID</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>archive_list</arg>
<arg>${id}</arg>
<arg>value</arg>
<arg>true</arg>
<arg>status_code=${status_code}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 14:15:53.256" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 14:15:53.256" endtime="20220704 14:15:53.256"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 14:15:53.256" endtime="20220704 14:15:53.256"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:15:53.257" level="INFO">${url} = lists/62c2f61930f45b3d85a7aeda/closed</msg>
<status status="PASS" starttime="20220704 14:15:53.257" endtime="20220704 14:15:53.257"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 14:15:53.448" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:53.257" endtime="20220704 14:15:53.448"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:15:53.448" endtime="20220704 14:15:53.448"/>
</return>
<msg timestamp="20220704 14:15:53.448" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:53.255" endtime="20220704 14:15:53.448"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:15:53.448" endtime="20220704 14:15:53.448"/>
</return>
<status status="PASS" starttime="20220704 14:15:53.254" endtime="20220704 14:15:53.449"/>
</kw>
<kw name="Get A List" library="List">
<var>${new_response}</var>
<arg>${response.json()}[id]</arg>
<doc>Gets the List with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>list</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:15:53.451" level="INFO">${url} = lists/62c2f61930f45b3d85a7aeda</msg>
<status status="PASS" starttime="20220704 14:15:53.450" endtime="20220704 14:15:53.451"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 14:15:53.618" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:53.451" endtime="20220704 14:15:53.618"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:15:53.618" endtime="20220704 14:15:53.618"/>
</return>
<msg timestamp="20220704 14:15:53.619" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:53.450" endtime="20220704 14:15:53.619"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:15:53.619" endtime="20220704 14:15:53.619"/>
</return>
<msg timestamp="20220704 14:15:53.619" level="INFO">${new_response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:53.449" endtime="20220704 14:15:53.619"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${new_response.json()}[closed]</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220704 14:15:53.619" endtime="20220704 14:15:53.620"/>
</kw>
<doc>Verify that a list can be archived through API</doc>
<tag>api</tag>
<tag>list.archive</tag>
<tag>regression</tag>
<status status="PASS" starttime="20220704 14:15:53.049" endtime="20220704 14:15:53.620"/>
</test>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Teardown Board</arg>
<arg>Delete All Sessions</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Teardown Board">
<doc>Delete the board created for this suite.</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:15:53.623" level="INFO">${url} = boards/62c2f618806686216e3b1a23</msg>
<status status="PASS" starttime="20220704 14:15:53.623" endtime="20220704 14:15:53.623"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 14:15:54.055" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:53.623" endtime="20220704 14:15:54.055"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:15:54.055" endtime="20220704 14:15:54.055"/>
</return>
<msg timestamp="20220704 14:15:54.056" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:53.622" endtime="20220704 14:15:54.056"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:15:54.056" endtime="20220704 14:15:54.056"/>
</return>
<status status="PASS" starttime="20220704 14:15:53.621" endtime="20220704 14:15:54.056"/>
</kw>
<status status="PASS" starttime="20220704 14:15:53.621" endtime="20220704 14:15:54.056"/>
</kw>
<status status="PASS" starttime="20220704 14:15:53.621" endtime="20220704 14:15:54.056"/>
</kw>
<kw name="Delete All Sessions" library="request_own_library">
<status status="PASS" starttime="20220704 14:15:54.056" endtime="20220704 14:15:54.057"/>
</kw>
<status status="PASS" starttime="20220704 14:15:53.621" endtime="20220704 14:15:54.057"/>
</kw>
<doc>Example Test with Trello API lists</doc>
<status status="PASS" starttime="20220704 14:15:51.971" endtime="20220704 14:15:54.057"/>
</suite>
<status status="PASS" starttime="20220704 14:15:36.629" endtime="20220704 14:15:54.060"/>
</suite>
<status status="PASS" starttime="20220704 14:15:36.612" endtime="20220704 14:15:54.063"/>
</suite>
<statistics>
<total>
<stat pass="18" fail="0" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="18" fail="0" skip="0">api</stat>
<stat pass="1" fail="0" skip="0">board.create</stat>
<stat pass="1" fail="0" skip="0">board.delete</stat>
<stat pass="1" fail="0" skip="0">board.get</stat>
<stat pass="2" fail="0" skip="0">board.update</stat>
<stat pass="1" fail="0" skip="0">card.close</stat>
<stat pass="1" fail="0" skip="0">card.create</stat>
<stat pass="1" fail="0" skip="0">card.delete</stat>
<stat pass="1" fail="0" skip="0">card.update</stat>
<stat pass="1" fail="0" skip="0">checklist.create</stat>
<stat pass="1" fail="0" skip="0">checklist.delete</stat>
<stat pass="1" fail="0" skip="0">checklist.update</stat>
<stat pass="1" fail="0" skip="0">label.create</stat>
<stat pass="1" fail="0" skip="0">label.delete</stat>
<stat pass="1" fail="0" skip="0">label.get</stat>
<stat pass="1" fail="0" skip="0">label.update</stat>
<stat pass="1" fail="0" skip="0">list.archive</stat>
<stat pass="1" fail="0" skip="0">list.create</stat>
<stat pass="1" fail="0" skip="0">list.update</stat>
<stat pass="5" fail="0" skip="0">regression</stat>
<stat pass="13" fail="0" skip="0">smoke</stat>
</tag>
<suite>
<stat pass="18" fail="0" skip="0" id="s1" name="Trello">Trello</stat>
<stat pass="18" fail="0" skip="0" id="s1-s1" name="Api">Trello.Api</stat>
<stat pass="5" fail="0" skip="0" id="s1-s1-s1" name="Trello Api Boards Tests">Trello.Api.Trello Api Boards Tests</stat>
<stat pass="4" fail="0" skip="0" id="s1-s1-s2" name="Trello Api Cards Tests">Trello.Api.Trello Api Cards Tests</stat>
<stat pass="3" fail="0" skip="0" id="s1-s1-s3" name="Trello Api Checklists Tests">Trello.Api.Trello Api Checklists Tests</stat>
<stat pass="3" fail="0" skip="0" id="s1-s1-s4" name="Trello Api Labels Tests">Trello.Api.Trello Api Labels Tests</stat>
<stat pass="3" fail="0" skip="0" id="s1-s1-s5" name="Trello Api Lists Tests">Trello.Api.Trello Api Lists Tests</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
