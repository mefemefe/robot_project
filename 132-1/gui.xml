<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 5.0.1 (Python 3.10.5 on linux)" generated="20220704 23:43:09.698" rpa="false" schemaversion="3">
<suite id="s1" name="Trello" source="/trello">
<suite id="s1-s1" name="Gui" source="/trello/gui">
<suite id="s1-s1-s1" name="Trello Gui Board" source="/trello/gui/trello_gui_board.robot">
<kw name="Boards Suite Setup" type="SETUP">
<doc>Creates a Trello Sesion in order to use api's keywords.</doc>
<kw name="Create Trello Session" library="TrelloAPI">
<doc>Creates a Trello Session</doc>
<kw name="Create Session" library="request_own_library">
<arg>${API_BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<status status="PASS" starttime="20220704 23:43:10.010" endtime="20220704 23:43:10.010"/>
</kw>
<status status="PASS" starttime="20220704 23:43:10.010" endtime="20220704 23:43:10.011"/>
</kw>
<status status="PASS" starttime="20220704 23:43:10.009" endtime="20220704 23:43:10.011"/>
</kw>
<test id="s1-s1-s1-t1" name="create a board" line="12">
<kw name="Open Browser From Environment" library="CommonGUI">
<arg>${LOGIN_URL}</arg>
<doc>This keywords takes REMOTE and BROWSER variables
from the environment automatically and only needs a url</doc>
<if>
<branch type="IF" condition="${is_remote}">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${url}</arg>
<arg>${BROWSER}</arg>
<arg>remote_url=http://selenium-hub:4444</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20220704 23:43:10.013" level="INFO">Opening browser 'chrome' to base url 'https://trello.com/login' through remote server at 'http://selenium-hub:4444'.</msg>
<status status="PASS" starttime="20220704 23:43:10.013" endtime="20220704 23:43:12.421"/>
</kw>
<status status="PASS" starttime="20220704 23:43:10.013" endtime="20220704 23:43:12.421"/>
</branch>
<branch type="ELSE">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${url}</arg>
<arg>${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<status status="NOT RUN" starttime="20220704 23:43:12.421" endtime="20220704 23:43:12.421"/>
</kw>
<status status="NOT RUN" starttime="20220704 23:43:12.421" endtime="20220704 23:43:12.421"/>
</branch>
<status status="PASS" starttime="20220704 23:43:10.012" endtime="20220704 23:43:12.421"/>
</if>
<status status="PASS" starttime="20220704 23:43:10.012" endtime="20220704 23:43:12.422"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20220704 23:43:12.422" endtime="20220704 23:43:12.551"/>
</kw>
<kw name="Login To Trello" library="LoginPage">
<arg>${DEFAULT_EMAIL}</arg>
<arg>${DEFAULT_PASSWORD}</arg>
<doc>High-level keyword for logging in to Trello</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220704 23:43:12.574" level="INFO">${url} = https://trello.com/login</msg>
<status status="PASS" starttime="20220704 23:43:12.552" endtime="20220704 23:43:12.574"/>
</kw>
<if>
<branch type="IF" condition="'${url}' != '${LOGIN_URL}'">
<kw name="Go To" library="SeleniumLibrary">
<arg>${LOGIN_URL}</arg>
<doc>Navigates the current browser window to the provided ``url``.</doc>
<status status="NOT RUN" starttime="20220704 23:43:12.575" endtime="20220704 23:43:12.575"/>
</kw>
<status status="NOT RUN" starttime="20220704 23:43:12.575" endtime="20220704 23:43:12.575"/>
</branch>
<status status="PASS" starttime="20220704 23:43:12.574" endtime="20220704 23:43:12.575"/>
</if>
<kw name="Enter Username" library="LoginPage">
<arg>${username}</arg>
<doc>Take a username as argument and
enters it in the user_input</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${USER_INPUT}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 23:43:12.575" endtime="20220704 23:43:12.645"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${USER_INPUT}</arg>
<arg>${username}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220704 23:43:12.645" level="INFO">Typing text 'bootcamp04@mailinator.com' into text field 'css:input#user'.</msg>
<status status="PASS" starttime="20220704 23:43:12.645" endtime="20220704 23:43:12.829"/>
</kw>
<status status="PASS" starttime="20220704 23:43:12.575" endtime="20220704 23:43:12.829"/>
</kw>
<kw name="Wait Until Element Is Not Visible" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<doc>Waits until the element ``locator`` is not visible.</doc>
<status status="PASS" starttime="20220704 23:43:12.829" endtime="20220704 23:43:13.652"/>
</kw>
<kw name="Click Login Button" library="LoginPage">
<doc>Clicks Trello's login button if in Trello's
login page, else it clicks Atlassian's</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220704 23:43:13.674" level="INFO">${url} = https://trello.com/login</msg>
<status status="PASS" starttime="20220704 23:43:13.653" endtime="20220704 23:43:13.674"/>
</kw>
<if>
<branch type="IF" condition="'${url}' == '${LOGIN_URL}'">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220704 23:43:13.674" endtime="20220704 23:43:13.746"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220704 23:43:13.746" level="INFO">Clicking button 'css:input#login'.</msg>
<status status="PASS" starttime="20220704 23:43:13.746" endtime="20220704 23:43:15.012"/>
</kw>
<status status="PASS" starttime="20220704 23:43:13.674" endtime="20220704 23:43:15.012"/>
</branch>
<branch type="ELSE">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="NOT RUN" starttime="20220704 23:43:15.012" endtime="20220704 23:43:15.012"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<status status="NOT RUN" starttime="20220704 23:43:15.012" endtime="20220704 23:43:15.012"/>
</kw>
<status status="NOT RUN" starttime="20220704 23:43:15.012" endtime="20220704 23:43:15.012"/>
</branch>
<status status="PASS" starttime="20220704 23:43:13.674" endtime="20220704 23:43:15.012"/>
</if>
<status status="PASS" starttime="20220704 23:43:13.652" endtime="20220704 23:43:15.012"/>
</kw>
<kw name="Wait Until Location Is Atlassian's Login" library="LoginPage">
<doc>Waits for the page redirection when logging in.</doc>
<kw name="Wait Until Location Contains" library="SeleniumLibrary">
<arg>atlassian.com</arg>
<doc>Waits until the current URL contains ``expected``.</doc>
<status status="PASS" starttime="20220704 23:43:15.013" endtime="20220704 23:43:15.035"/>
</kw>
<status status="PASS" starttime="20220704 23:43:15.013" endtime="20220704 23:43:15.036"/>
</kw>
<kw name="Enter Password" library="LoginPage">
<arg>${password}</arg>
<doc>Take a password as argument and
enters it in the password_input</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<arg>timeout=${DEFAULT_TIMEOUT}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 23:43:15.036" endtime="20220704 23:43:15.113"/>
</kw>
<kw name="Input Password" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<arg>${password}</arg>
<doc>Types the given password into the text field identified by ``locator``.</doc>
<msg timestamp="20220704 23:43:15.113" level="INFO">Typing password into text field 'css:input#password'.</msg>
<msg timestamp="20220704 23:43:15.264" level="INFO">Temporally setting log level to: NONE</msg>
<msg timestamp="20220704 23:43:15.351" level="INFO">Log level changed from NONE to INFO.</msg>
<status status="PASS" starttime="20220704 23:43:15.113" endtime="20220704 23:43:15.351"/>
</kw>
<status status="PASS" starttime="20220704 23:43:15.036" endtime="20220704 23:43:15.351"/>
</kw>
<kw name="Click Login Button" library="LoginPage">
<doc>Clicks Trello's login button if in Trello's
login page, else it clicks Atlassian's</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220704 23:43:15.367" level="INFO">${url} = https://id.atlassian.com/login?application=trello&amp;continue=https%3A%2F%2Ftrello.com%2Fauth%2Fatlassian%2Fcallback%3FreturnUrl%3D%252F%26display%3D%26aaOnboarding%3D%26updateEmail%3D%26traceId%3D62c37b...</msg>
<status status="PASS" starttime="20220704 23:43:15.353" endtime="20220704 23:43:15.367"/>
</kw>
<if>
<branch type="IF" condition="'${url}' == '${LOGIN_URL}'">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="NOT RUN" starttime="20220704 23:43:15.367" endtime="20220704 23:43:15.367"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<status status="NOT RUN" starttime="20220704 23:43:15.367" endtime="20220704 23:43:15.367"/>
</kw>
<status status="NOT RUN" starttime="20220704 23:43:15.367" endtime="20220704 23:43:15.368"/>
</branch>
<branch type="ELSE">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220704 23:43:15.368" endtime="20220704 23:43:15.441"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220704 23:43:15.441" level="INFO">Clicking button 'css:button#login-submit'.</msg>
<status status="PASS" starttime="20220704 23:43:15.441" endtime="20220704 23:43:15.572"/>
</kw>
<status status="PASS" starttime="20220704 23:43:15.368" endtime="20220704 23:43:15.572"/>
</branch>
<status status="PASS" starttime="20220704 23:43:15.367" endtime="20220704 23:43:15.572"/>
</if>
<status status="PASS" starttime="20220704 23:43:15.352" endtime="20220704 23:43:15.572"/>
</kw>
<status status="PASS" starttime="20220704 23:43:12.551" endtime="20220704 23:43:15.572"/>
</kw>
<kw name="Click New Board Button" library="BoardsPage">
<doc>Clicks the button that creates a new board.</doc>
<kw name="Wait Until Location Contains" library="SeleniumLibrary">
<arg>${BOARDS_PATH}</arg>
<doc>Waits until the current URL contains ``expected``.</doc>
<status status="PASS" starttime="20220704 23:43:15.573" endtime="20220704 23:43:19.557"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${DEFAULT_TIMEOUT}</arg>
<arg>${DEFAULT_INTERVAL}</arg>
<arg>Click Element</arg>
<arg>${CREATE_NEW_BOARD_BUTTON}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${CREATE_NEW_BOARD_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 23:43:19.558" level="INFO">Clicking element 'xpath://div[@class="boards-page-board-section mod-no-sidebar"]//div[@class="board-tile mod-add"]'.</msg>
<status status="PASS" starttime="20220704 23:43:19.558" endtime="20220704 23:43:19.704"/>
</kw>
<status status="PASS" starttime="20220704 23:43:19.557" endtime="20220704 23:43:19.704"/>
</kw>
<status status="PASS" starttime="20220704 23:43:15.572" endtime="20220704 23:43:19.705"/>
</kw>
<kw name="Set Name to Board" library="BoardsPage">
<arg>NewName</arg>
<doc>Set the name of the board and press the create button</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${BOARD_NAME_INPUT}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 23:43:19.705" endtime="20220704 23:43:20.004"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${BOARD_NAME_INPUT}</arg>
<arg>${name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220704 23:43:20.005" level="INFO">Typing text 'NewName' into text field 'xpath://div[@title='Create board']/ancestor::section//input[@type="text"]'.</msg>
<status status="PASS" starttime="20220704 23:43:20.004" endtime="20220704 23:43:20.235"/>
</kw>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${CREATE_BUTTON}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220704 23:43:20.235" endtime="20220704 23:43:20.366"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${CREATE_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 23:43:20.367" level="INFO">Clicking element 'xpath://div[@title='Create board']/ancestor::section//button[text()='Create']'.</msg>
<status status="PASS" starttime="20220704 23:43:20.366" endtime="20220704 23:43:20.488"/>
</kw>
<status status="PASS" starttime="20220704 23:43:19.705" endtime="20220704 23:43:20.488"/>
</kw>
<kw name="Verify Name of Board" library="UpperHorizontalMenu">
<arg>NewName</arg>
<doc>Verifies the name of a board</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${NAME_OF_BOARD}</arg>
<arg>${DEFAULT_TIMEOUT}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 23:43:20.489" endtime="20220704 23:43:21.855"/>
</kw>
<kw name="Element Text Should Be" library="SeleniumLibrary">
<arg>${NAME_OF_BOARD}</arg>
<arg>${name}</arg>
<doc>Verifies that element ``locator`` contains exact the text ``expected``.</doc>
<msg timestamp="20220704 23:43:21.855" level="INFO">Verifying element 'xpath://h1[contains(@class, 'js-board-editing-target')]' contains exact text 'NewName'.</msg>
<status status="PASS" starttime="20220704 23:43:21.855" endtime="20220704 23:43:21.968"/>
</kw>
<status status="PASS" starttime="20220704 23:43:20.488" endtime="20220704 23:43:21.968"/>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Open Show Menu</arg>
<arg>Delete Current Board</arg>
<arg>Close Browser</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Open Show Menu" library="UpperHorizontalMenu">
<doc>Open the Show Menu in the right side of the board page where multiple options are available</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${SHOW_MENU_BUTTON}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 23:43:21.970" endtime="20220704 23:43:22.013"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${SHOW_MENU_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 23:43:22.014" level="INFO">Clicking element 'xpath://div[contains(@class, 'board-header')]//a[contains(., 'Show menu')]'.</msg>
<status status="PASS" starttime="20220704 23:43:22.013" endtime="20220704 23:43:22.148"/>
</kw>
<status status="PASS" starttime="20220704 23:43:21.969" endtime="20220704 23:43:22.149"/>
</kw>
<kw name="Delete Current Board" library="ShownMenu">
<doc>Deletes the current board</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${MORE_BUTTON}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 23:43:22.149" endtime="20220704 23:43:22.307"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${MORE_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 23:43:22.308" level="INFO">Clicking element 'xpath://div[contains(@class, 'board-menu-content')]//a[contains(text(), 'More')]'.</msg>
<status status="PASS" starttime="20220704 23:43:22.307" endtime="20220704 23:43:22.467"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${CLOSE_BOARD_BUTTON}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 23:43:22.468" endtime="20220704 23:43:22.548"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${CLOSE_BOARD_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 23:43:22.549" level="INFO">Clicking element 'xpath://div[@class= 'board-menu-content-frame']//a[contains(text(), 'Close board')]'.</msg>
<status status="PASS" starttime="20220704 23:43:22.549" endtime="20220704 23:43:22.635"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${CLOSE_BUTTON}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 23:43:22.635" endtime="20220704 23:43:22.697"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${CLOSE_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 23:43:22.698" level="INFO">Clicking element 'xpath://div[@class= 'no-back']//input'.</msg>
<status status="PASS" starttime="20220704 23:43:22.698" endtime="20220704 23:43:22.852"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${PERMANENTLY_DELETE_BUTTON}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 23:43:22.852" endtime="20220704 23:43:23.182"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${PERMANENTLY_DELETE_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 23:43:23.182" level="INFO">Clicking element 'xpath://button[text()= 'Permanently delete board']'.</msg>
<status status="PASS" starttime="20220704 23:43:23.182" endtime="20220704 23:43:23.266"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${CONFIRM_DELETE_BUTTON}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 23:43:23.266" endtime="20220704 23:43:23.324"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${CONFIRM_DELETE_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 23:43:23.325" level="INFO">Clicking element 'xpath://section//button[text()= 'Delete']'.</msg>
<status status="PASS" starttime="20220704 23:43:23.325" endtime="20220704 23:43:23.395"/>
</kw>
<status status="PASS" starttime="20220704 23:43:22.149" endtime="20220704 23:43:23.395"/>
</kw>
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20220704 23:43:23.396" endtime="20220704 23:43:23.491"/>
</kw>
<status status="PASS" starttime="20220704 23:43:21.969" endtime="20220704 23:43:23.491"/>
</kw>
<doc>Verify that a board can be created through GUI</doc>
<tag>board.create</tag>
<tag>gui</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220704 23:43:10.011" endtime="20220704 23:43:23.491"/>
</test>
<test id="s1-s1-s1-t2" name="delete a board" line="26">
<kw name="Create A Board" library="Board">
<var>${BOARD}</var>
<arg>NewName</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 23:43:23.496" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 23:43:23.496" endtime="20220704 23:43:23.496"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 23:43:23.496" endtime="20220704 23:43:23.497"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 23:43:23.498" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220704 23:43:23.497" endtime="20220704 23:43:23.498"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 23:43:23.804" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 23:43:23.498" endtime="20220704 23:43:23.804"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 23:43:23.804" endtime="20220704 23:43:23.804"/>
</return>
<msg timestamp="20220704 23:43:23.804" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 23:43:23.495" endtime="20220704 23:43:23.804"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 23:43:23.804" endtime="20220704 23:43:23.804"/>
</return>
<msg timestamp="20220704 23:43:23.805" level="INFO">${BOARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 23:43:23.495" endtime="20220704 23:43:23.805"/>
</kw>
<kw name="Open Browser From Environment" library="CommonGUI">
<arg>${LOGIN_URL}</arg>
<doc>This keywords takes REMOTE and BROWSER variables
from the environment automatically and only needs a url</doc>
<if>
<branch type="IF" condition="${is_remote}">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${url}</arg>
<arg>${BROWSER}</arg>
<arg>remote_url=http://selenium-hub:4444</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20220704 23:43:23.806" level="INFO">Opening browser 'chrome' to base url 'https://trello.com/login' through remote server at 'http://selenium-hub:4444'.</msg>
<status status="PASS" starttime="20220704 23:43:23.806" endtime="20220704 23:43:25.035"/>
</kw>
<status status="PASS" starttime="20220704 23:43:23.806" endtime="20220704 23:43:25.035"/>
</branch>
<branch type="ELSE">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${url}</arg>
<arg>${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<status status="NOT RUN" starttime="20220704 23:43:25.036" endtime="20220704 23:43:25.036"/>
</kw>
<status status="NOT RUN" starttime="20220704 23:43:25.035" endtime="20220704 23:43:25.036"/>
</branch>
<status status="PASS" starttime="20220704 23:43:23.805" endtime="20220704 23:43:25.036"/>
</if>
<status status="PASS" starttime="20220704 23:43:23.805" endtime="20220704 23:43:25.036"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20220704 23:43:25.036" endtime="20220704 23:43:25.158"/>
</kw>
<kw name="Login To Trello" library="LoginPage">
<arg>${DEFAULT_EMAIL}</arg>
<arg>${DEFAULT_PASSWORD}</arg>
<doc>High-level keyword for logging in to Trello</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220704 23:43:25.181" level="INFO">${url} = https://trello.com/login</msg>
<status status="PASS" starttime="20220704 23:43:25.159" endtime="20220704 23:43:25.181"/>
</kw>
<if>
<branch type="IF" condition="'${url}' != '${LOGIN_URL}'">
<kw name="Go To" library="SeleniumLibrary">
<arg>${LOGIN_URL}</arg>
<doc>Navigates the current browser window to the provided ``url``.</doc>
<status status="NOT RUN" starttime="20220704 23:43:25.181" endtime="20220704 23:43:25.181"/>
</kw>
<status status="NOT RUN" starttime="20220704 23:43:25.181" endtime="20220704 23:43:25.181"/>
</branch>
<status status="PASS" starttime="20220704 23:43:25.181" endtime="20220704 23:43:25.182"/>
</if>
<kw name="Enter Username" library="LoginPage">
<arg>${username}</arg>
<doc>Take a username as argument and
enters it in the user_input</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${USER_INPUT}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 23:43:25.182" endtime="20220704 23:43:25.252"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${USER_INPUT}</arg>
<arg>${username}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220704 23:43:25.253" level="INFO">Typing text 'bootcamp04@mailinator.com' into text field 'css:input#user'.</msg>
<status status="PASS" starttime="20220704 23:43:25.252" endtime="20220704 23:43:25.429"/>
</kw>
<status status="PASS" starttime="20220704 23:43:25.182" endtime="20220704 23:43:25.429"/>
</kw>
<kw name="Wait Until Element Is Not Visible" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<doc>Waits until the element ``locator`` is not visible.</doc>
<status status="PASS" starttime="20220704 23:43:25.429" endtime="20220704 23:43:26.222"/>
</kw>
<kw name="Click Login Button" library="LoginPage">
<doc>Clicks Trello's login button if in Trello's
login page, else it clicks Atlassian's</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220704 23:43:26.237" level="INFO">${url} = https://trello.com/login</msg>
<status status="PASS" starttime="20220704 23:43:26.223" endtime="20220704 23:43:26.237"/>
</kw>
<if>
<branch type="IF" condition="'${url}' == '${LOGIN_URL}'">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220704 23:43:26.238" endtime="20220704 23:43:26.362"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220704 23:43:26.362" level="INFO">Clicking button 'css:input#login'.</msg>
<status status="PASS" starttime="20220704 23:43:26.362" endtime="20220704 23:43:27.499"/>
</kw>
<status status="PASS" starttime="20220704 23:43:26.238" endtime="20220704 23:43:27.499"/>
</branch>
<branch type="ELSE">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="NOT RUN" starttime="20220704 23:43:27.500" endtime="20220704 23:43:27.500"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<status status="NOT RUN" starttime="20220704 23:43:27.500" endtime="20220704 23:43:27.500"/>
</kw>
<status status="NOT RUN" starttime="20220704 23:43:27.499" endtime="20220704 23:43:27.500"/>
</branch>
<status status="PASS" starttime="20220704 23:43:26.238" endtime="20220704 23:43:27.500"/>
</if>
<status status="PASS" starttime="20220704 23:43:26.223" endtime="20220704 23:43:27.500"/>
</kw>
<kw name="Wait Until Location Is Atlassian's Login" library="LoginPage">
<doc>Waits for the page redirection when logging in.</doc>
<kw name="Wait Until Location Contains" library="SeleniumLibrary">
<arg>atlassian.com</arg>
<doc>Waits until the current URL contains ``expected``.</doc>
<status status="PASS" starttime="20220704 23:43:27.501" endtime="20220704 23:43:27.517"/>
</kw>
<status status="PASS" starttime="20220704 23:43:27.500" endtime="20220704 23:43:27.517"/>
</kw>
<kw name="Enter Password" library="LoginPage">
<arg>${password}</arg>
<doc>Take a password as argument and
enters it in the password_input</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<arg>timeout=${DEFAULT_TIMEOUT}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 23:43:27.518" endtime="20220704 23:43:27.587"/>
</kw>
<kw name="Input Password" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<arg>${password}</arg>
<doc>Types the given password into the text field identified by ``locator``.</doc>
<msg timestamp="20220704 23:43:27.587" level="INFO">Typing password into text field 'css:input#password'.</msg>
<msg timestamp="20220704 23:43:27.653" level="INFO">Temporally setting log level to: NONE</msg>
<msg timestamp="20220704 23:43:27.731" level="INFO">Log level changed from NONE to INFO.</msg>
<status status="PASS" starttime="20220704 23:43:27.587" endtime="20220704 23:43:27.732"/>
</kw>
<status status="PASS" starttime="20220704 23:43:27.517" endtime="20220704 23:43:27.732"/>
</kw>
<kw name="Click Login Button" library="LoginPage">
<doc>Clicks Trello's login button if in Trello's
login page, else it clicks Atlassian's</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220704 23:43:27.752" level="INFO">${url} = https://id.atlassian.com/login?application=trello&amp;continue=https%3A%2F%2Ftrello.com%2Fauth%2Fatlassian%2Fcallback%3FreturnUrl%3D%252F%26display%3D%26aaOnboarding%3D%26updateEmail%3D%26traceId%3D62c37b...</msg>
<status status="PASS" starttime="20220704 23:43:27.732" endtime="20220704 23:43:27.752"/>
</kw>
<if>
<branch type="IF" condition="'${url}' == '${LOGIN_URL}'">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="NOT RUN" starttime="20220704 23:43:27.752" endtime="20220704 23:43:27.752"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<status status="NOT RUN" starttime="20220704 23:43:27.752" endtime="20220704 23:43:27.753"/>
</kw>
<status status="NOT RUN" starttime="20220704 23:43:27.752" endtime="20220704 23:43:27.753"/>
</branch>
<branch type="ELSE">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220704 23:43:27.753" endtime="20220704 23:43:27.822"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220704 23:43:27.823" level="INFO">Clicking button 'css:button#login-submit'.</msg>
<status status="PASS" starttime="20220704 23:43:27.823" endtime="20220704 23:43:27.949"/>
</kw>
<status status="PASS" starttime="20220704 23:43:27.753" endtime="20220704 23:43:27.949"/>
</branch>
<status status="PASS" starttime="20220704 23:43:27.752" endtime="20220704 23:43:27.949"/>
</if>
<status status="PASS" starttime="20220704 23:43:27.732" endtime="20220704 23:43:27.950"/>
</kw>
<status status="PASS" starttime="20220704 23:43:25.158" endtime="20220704 23:43:27.950"/>
</kw>
<kw name="Go To Board" library="BoardsPage">
<arg>NewName</arg>
<doc>Receives the board name and goes to that board's page.</doc>
<kw name="Format String" library="String">
<var>${locator}</var>
<arg>${BOARD_BUTTON}</arg>
<arg>${board_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 23:43:27.951" level="INFO">${locator} = //div[@title="NewName"]</msg>
<status status="PASS" starttime="20220704 23:43:27.950" endtime="20220704 23:43:27.951"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 23:43:27.951" endtime="20220704 23:43:31.884"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 23:43:31.885" level="INFO">Clicking element '//div[@title="NewName"]'.</msg>
<status status="PASS" starttime="20220704 23:43:31.884" endtime="20220704 23:43:32.310"/>
</kw>
<status status="PASS" starttime="20220704 23:43:27.950" endtime="20220704 23:43:32.310"/>
</kw>
<kw name="Verify Name of Board" library="UpperHorizontalMenu">
<arg>NewName</arg>
<doc>Verifies the name of a board</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${NAME_OF_BOARD}</arg>
<arg>${DEFAULT_TIMEOUT}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 23:43:32.311" endtime="20220704 23:43:32.922"/>
</kw>
<kw name="Element Text Should Be" library="SeleniumLibrary">
<arg>${NAME_OF_BOARD}</arg>
<arg>${name}</arg>
<doc>Verifies that element ``locator`` contains exact the text ``expected``.</doc>
<msg timestamp="20220704 23:43:32.922" level="INFO">Verifying element 'xpath://h1[contains(@class, 'js-board-editing-target')]' contains exact text 'NewName'.</msg>
<status status="PASS" starttime="20220704 23:43:32.922" endtime="20220704 23:43:32.992"/>
</kw>
<status status="PASS" starttime="20220704 23:43:32.310" endtime="20220704 23:43:32.992"/>
</kw>
<kw name="Open Show Menu" library="UpperHorizontalMenu">
<doc>Open the Show Menu in the right side of the board page where multiple options are available</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${SHOW_MENU_BUTTON}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 23:43:32.993" endtime="20220704 23:43:33.095"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${SHOW_MENU_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 23:43:33.096" level="INFO">Clicking element 'xpath://div[contains(@class, 'board-header')]//a[contains(., 'Show menu')]'.</msg>
<status status="PASS" starttime="20220704 23:43:33.095" endtime="20220704 23:43:33.195"/>
</kw>
<status status="PASS" starttime="20220704 23:43:32.992" endtime="20220704 23:43:33.195"/>
</kw>
<kw name="Delete Current Board" library="ShownMenu">
<doc>Deletes the current board</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${MORE_BUTTON}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 23:43:33.196" endtime="20220704 23:43:33.256"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${MORE_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 23:43:33.256" level="INFO">Clicking element 'xpath://div[contains(@class, 'board-menu-content')]//a[contains(text(), 'More')]'.</msg>
<status status="PASS" starttime="20220704 23:43:33.256" endtime="20220704 23:43:33.611"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${CLOSE_BOARD_BUTTON}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 23:43:33.611" endtime="20220704 23:43:33.670"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${CLOSE_BOARD_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 23:43:33.670" level="INFO">Clicking element 'xpath://div[@class= 'board-menu-content-frame']//a[contains(text(), 'Close board')]'.</msg>
<status status="PASS" starttime="20220704 23:43:33.670" endtime="20220704 23:43:33.761"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${CLOSE_BUTTON}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 23:43:33.761" endtime="20220704 23:43:33.812"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${CLOSE_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 23:43:33.813" level="INFO">Clicking element 'xpath://div[@class= 'no-back']//input'.</msg>
<status status="PASS" starttime="20220704 23:43:33.813" endtime="20220704 23:43:33.941"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${PERMANENTLY_DELETE_BUTTON}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 23:43:33.941" endtime="20220704 23:43:34.254"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${PERMANENTLY_DELETE_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 23:43:34.254" level="INFO">Clicking element 'xpath://button[text()= 'Permanently delete board']'.</msg>
<status status="PASS" starttime="20220704 23:43:34.254" endtime="20220704 23:43:34.361"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${CONFIRM_DELETE_BUTTON}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 23:43:34.361" endtime="20220704 23:43:34.414"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${CONFIRM_DELETE_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 23:43:34.414" level="INFO">Clicking element 'xpath://section//button[text()= 'Delete']'.</msg>
<status status="PASS" starttime="20220704 23:43:34.414" endtime="20220704 23:43:34.483"/>
</kw>
<status status="PASS" starttime="20220704 23:43:33.195" endtime="20220704 23:43:34.484"/>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Close Browser</arg>
<arg>AND</arg>
<arg>Run Keyword If Test Failed</arg>
<arg>Wait Until Keyword Succeeds</arg>
<arg>${DEFAULT_TIMEOUT}</arg>
<arg>${DEFAULT_INTERVAL}</arg>
<arg>Delete A Board</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20220704 23:43:34.484" endtime="20220704 23:43:34.601"/>
</kw>
<kw name="Run Keyword If Test Failed" library="BuiltIn">
<arg>Wait Until Keyword Succeeds</arg>
<arg>${DEFAULT_TIMEOUT}</arg>
<arg>${DEFAULT_INTERVAL}</arg>
<arg>Delete A Board</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Runs the given keyword with the given arguments, if the test failed.</doc>
<status status="PASS" starttime="20220704 23:43:34.601" endtime="20220704 23:43:34.602"/>
</kw>
<status status="PASS" starttime="20220704 23:43:34.484" endtime="20220704 23:43:34.602"/>
</kw>
<doc>Verify that a board can be deleted through GUI</doc>
<tag>board.delete</tag>
<tag>gui</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220704 23:43:23.494" endtime="20220704 23:43:34.602"/>
</test>
<test id="s1-s1-s1-t3" name="Update a board's description" line="41">
<kw name="Create A Board" library="Board">
<var>${BOARD}</var>
<arg>BoardNew</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 23:43:34.606" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 23:43:34.606" endtime="20220704 23:43:34.606"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 23:43:34.606" endtime="20220704 23:43:34.606"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 23:43:34.611" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220704 23:43:34.607" endtime="20220704 23:43:34.611"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 23:43:34.838" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 23:43:34.611" endtime="20220704 23:43:34.838"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 23:43:34.838" endtime="20220704 23:43:34.838"/>
</return>
<msg timestamp="20220704 23:43:34.839" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 23:43:34.605" endtime="20220704 23:43:34.839"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 23:43:34.839" endtime="20220704 23:43:34.839"/>
</return>
<msg timestamp="20220704 23:43:34.839" level="INFO">${BOARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 23:43:34.605" endtime="20220704 23:43:34.839"/>
</kw>
<kw name="Open Browser From Environment" library="CommonGUI">
<arg>${LOGIN_URL}</arg>
<doc>This keywords takes REMOTE and BROWSER variables
from the environment automatically and only needs a url</doc>
<if>
<branch type="IF" condition="${is_remote}">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${url}</arg>
<arg>${BROWSER}</arg>
<arg>remote_url=http://selenium-hub:4444</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20220704 23:43:34.841" level="INFO">Opening browser 'chrome' to base url 'https://trello.com/login' through remote server at 'http://selenium-hub:4444'.</msg>
<status status="PASS" starttime="20220704 23:43:34.841" endtime="20220704 23:43:36.087"/>
</kw>
<status status="PASS" starttime="20220704 23:43:34.840" endtime="20220704 23:43:36.087"/>
</branch>
<branch type="ELSE">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${url}</arg>
<arg>${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<status status="NOT RUN" starttime="20220704 23:43:36.087" endtime="20220704 23:43:36.087"/>
</kw>
<status status="NOT RUN" starttime="20220704 23:43:36.087" endtime="20220704 23:43:36.087"/>
</branch>
<status status="PASS" starttime="20220704 23:43:34.840" endtime="20220704 23:43:36.087"/>
</if>
<status status="PASS" starttime="20220704 23:43:34.839" endtime="20220704 23:43:36.087"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20220704 23:43:36.088" endtime="20220704 23:43:36.231"/>
</kw>
<kw name="Login To Trello" library="LoginPage">
<arg>${DEFAULT_EMAIL}</arg>
<arg>${DEFAULT_PASSWORD}</arg>
<doc>High-level keyword for logging in to Trello</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220704 23:43:36.243" level="INFO">${url} = https://trello.com/login</msg>
<status status="PASS" starttime="20220704 23:43:36.232" endtime="20220704 23:43:36.243"/>
</kw>
<if>
<branch type="IF" condition="'${url}' != '${LOGIN_URL}'">
<kw name="Go To" library="SeleniumLibrary">
<arg>${LOGIN_URL}</arg>
<doc>Navigates the current browser window to the provided ``url``.</doc>
<status status="NOT RUN" starttime="20220704 23:43:36.244" endtime="20220704 23:43:36.244"/>
</kw>
<status status="NOT RUN" starttime="20220704 23:43:36.243" endtime="20220704 23:43:36.244"/>
</branch>
<status status="PASS" starttime="20220704 23:43:36.243" endtime="20220704 23:43:36.244"/>
</if>
<kw name="Enter Username" library="LoginPage">
<arg>${username}</arg>
<doc>Take a username as argument and
enters it in the user_input</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${USER_INPUT}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 23:43:36.244" endtime="20220704 23:43:36.305"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${USER_INPUT}</arg>
<arg>${username}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220704 23:43:36.306" level="INFO">Typing text 'bootcamp04@mailinator.com' into text field 'css:input#user'.</msg>
<status status="PASS" starttime="20220704 23:43:36.305" endtime="20220704 23:43:36.432"/>
</kw>
<status status="PASS" starttime="20220704 23:43:36.244" endtime="20220704 23:43:36.433"/>
</kw>
<kw name="Wait Until Element Is Not Visible" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<doc>Waits until the element ``locator`` is not visible.</doc>
<status status="PASS" starttime="20220704 23:43:36.433" endtime="20220704 23:43:37.209"/>
</kw>
<kw name="Click Login Button" library="LoginPage">
<doc>Clicks Trello's login button if in Trello's
login page, else it clicks Atlassian's</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220704 23:43:37.219" level="INFO">${url} = https://trello.com/login</msg>
<status status="PASS" starttime="20220704 23:43:37.209" endtime="20220704 23:43:37.219"/>
</kw>
<if>
<branch type="IF" condition="'${url}' == '${LOGIN_URL}'">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220704 23:43:37.220" endtime="20220704 23:43:37.285"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220704 23:43:37.285" level="INFO">Clicking button 'css:input#login'.</msg>
<status status="PASS" starttime="20220704 23:43:37.285" endtime="20220704 23:43:38.381"/>
</kw>
<status status="PASS" starttime="20220704 23:43:37.220" endtime="20220704 23:43:38.381"/>
</branch>
<branch type="ELSE">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="NOT RUN" starttime="20220704 23:43:38.381" endtime="20220704 23:43:38.381"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<status status="NOT RUN" starttime="20220704 23:43:38.381" endtime="20220704 23:43:38.381"/>
</kw>
<status status="NOT RUN" starttime="20220704 23:43:38.381" endtime="20220704 23:43:38.382"/>
</branch>
<status status="PASS" starttime="20220704 23:43:37.219" endtime="20220704 23:43:38.382"/>
</if>
<status status="PASS" starttime="20220704 23:43:37.209" endtime="20220704 23:43:38.382"/>
</kw>
<kw name="Wait Until Location Is Atlassian's Login" library="LoginPage">
<doc>Waits for the page redirection when logging in.</doc>
<kw name="Wait Until Location Contains" library="SeleniumLibrary">
<arg>atlassian.com</arg>
<doc>Waits until the current URL contains ``expected``.</doc>
<status status="PASS" starttime="20220704 23:43:38.382" endtime="20220704 23:43:38.427"/>
</kw>
<status status="PASS" starttime="20220704 23:43:38.382" endtime="20220704 23:43:38.428"/>
</kw>
<kw name="Enter Password" library="LoginPage">
<arg>${password}</arg>
<doc>Take a password as argument and
enters it in the password_input</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<arg>timeout=${DEFAULT_TIMEOUT}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 23:43:38.428" endtime="20220704 23:43:38.486"/>
</kw>
<kw name="Input Password" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<arg>${password}</arg>
<doc>Types the given password into the text field identified by ``locator``.</doc>
<msg timestamp="20220704 23:43:38.487" level="INFO">Typing password into text field 'css:input#password'.</msg>
<msg timestamp="20220704 23:43:38.546" level="INFO">Temporally setting log level to: NONE</msg>
<msg timestamp="20220704 23:43:38.625" level="INFO">Log level changed from NONE to INFO.</msg>
<status status="PASS" starttime="20220704 23:43:38.487" endtime="20220704 23:43:38.625"/>
</kw>
<status status="PASS" starttime="20220704 23:43:38.428" endtime="20220704 23:43:38.625"/>
</kw>
<kw name="Click Login Button" library="LoginPage">
<doc>Clicks Trello's login button if in Trello's
login page, else it clicks Atlassian's</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220704 23:43:38.637" level="INFO">${url} = https://id.atlassian.com/login?application=trello&amp;continue=https%3A%2F%2Ftrello.com%2Fauth%2Fatlassian%2Fcallback%3FreturnUrl%3D%252F%26display%3D%26aaOnboarding%3D%26updateEmail%3D%26traceId%3D62c37b...</msg>
<status status="PASS" starttime="20220704 23:43:38.626" endtime="20220704 23:43:38.637"/>
</kw>
<if>
<branch type="IF" condition="'${url}' == '${LOGIN_URL}'">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="NOT RUN" starttime="20220704 23:43:38.638" endtime="20220704 23:43:38.638"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<status status="NOT RUN" starttime="20220704 23:43:38.638" endtime="20220704 23:43:38.638"/>
</kw>
<status status="NOT RUN" starttime="20220704 23:43:38.638" endtime="20220704 23:43:38.638"/>
</branch>
<branch type="ELSE">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220704 23:43:38.638" endtime="20220704 23:43:38.702"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220704 23:43:38.703" level="INFO">Clicking button 'css:button#login-submit'.</msg>
<status status="PASS" starttime="20220704 23:43:38.703" endtime="20220704 23:43:38.882"/>
</kw>
<status status="PASS" starttime="20220704 23:43:38.638" endtime="20220704 23:43:38.883"/>
</branch>
<status status="PASS" starttime="20220704 23:43:38.637" endtime="20220704 23:43:38.883"/>
</if>
<status status="PASS" starttime="20220704 23:43:38.625" endtime="20220704 23:43:38.883"/>
</kw>
<status status="PASS" starttime="20220704 23:43:36.232" endtime="20220704 23:43:38.883"/>
</kw>
<kw name="Go To Board" library="BoardsPage">
<arg>BoardNew</arg>
<doc>Receives the board name and goes to that board's page.</doc>
<kw name="Format String" library="String">
<var>${locator}</var>
<arg>${BOARD_BUTTON}</arg>
<arg>${board_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 23:43:38.884" level="INFO">${locator} = //div[@title="BoardNew"]</msg>
<status status="PASS" starttime="20220704 23:43:38.884" endtime="20220704 23:43:38.884"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 23:43:38.884" endtime="20220704 23:43:42.857"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 23:43:42.858" level="INFO">Clicking element '//div[@title="BoardNew"]'.</msg>
<status status="PASS" starttime="20220704 23:43:42.857" endtime="20220704 23:43:43.270"/>
</kw>
<status status="PASS" starttime="20220704 23:43:38.883" endtime="20220704 23:43:43.270"/>
</kw>
<kw name="Verify Name of Board" library="UpperHorizontalMenu">
<arg>BoardNew</arg>
<doc>Verifies the name of a board</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${NAME_OF_BOARD}</arg>
<arg>${DEFAULT_TIMEOUT}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 23:43:43.271" endtime="20220704 23:43:43.858"/>
</kw>
<kw name="Element Text Should Be" library="SeleniumLibrary">
<arg>${NAME_OF_BOARD}</arg>
<arg>${name}</arg>
<doc>Verifies that element ``locator`` contains exact the text ``expected``.</doc>
<msg timestamp="20220704 23:43:43.859" level="INFO">Verifying element 'xpath://h1[contains(@class, 'js-board-editing-target')]' contains exact text 'BoardNew'.</msg>
<status status="PASS" starttime="20220704 23:43:43.858" endtime="20220704 23:43:43.945"/>
</kw>
<status status="PASS" starttime="20220704 23:43:43.271" endtime="20220704 23:43:43.945"/>
</kw>
<kw name="Open Show Menu" library="UpperHorizontalMenu">
<doc>Open the Show Menu in the right side of the board page where multiple options are available</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${SHOW_MENU_BUTTON}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 23:43:43.946" endtime="20220704 23:43:43.999"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${SHOW_MENU_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 23:43:44.000" level="INFO">Clicking element 'xpath://div[contains(@class, 'board-header')]//a[contains(., 'Show menu')]'.</msg>
<status status="PASS" starttime="20220704 23:43:43.999" endtime="20220704 23:43:44.086"/>
</kw>
<status status="PASS" starttime="20220704 23:43:43.945" endtime="20220704 23:43:44.086"/>
</kw>
<kw name="Update Description of Board" library="ShownMenu">
<arg>UpdatedDescription</arg>
<doc>Updates the description of a board</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ABOUT_THIS_BOARD}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 23:43:44.087" endtime="20220704 23:43:44.180"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${ABOUT_THIS_BOARD}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 23:43:44.181" level="INFO">Clicking element 'xpath://div[contains(@class, 'board-menu-content')]//a[contains(text(), 'About')]'.</msg>
<status status="PASS" starttime="20220704 23:43:44.181" endtime="20220704 23:43:44.401"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DESCRIPTION}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 23:43:44.402" endtime="20220704 23:43:44.467"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${DESCRIPTION}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 23:43:44.468" level="INFO">Clicking element 'xpath://a[contains(@class, 'description-fake-text-area')]'.</msg>
<status status="PASS" starttime="20220704 23:43:44.468" endtime="20220704 23:43:44.602"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${DESC_TEXT_AREA}</arg>
<arg>${desc}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220704 23:43:44.603" level="INFO">Typing text 'UpdatedDescription' into text field 'xpath://div[contains(@class, 'board-menu-content')]//textarea'.</msg>
<status status="PASS" starttime="20220704 23:43:44.602" endtime="20220704 23:43:44.768"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${SAVE_DESC_BUTTON}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 23:43:44.768" endtime="20220704 23:43:44.810"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${SAVE_DESC_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 23:43:44.811" level="INFO">Clicking element 'xpath://div[contains(@class, 'board-menu-content')]//input[@value="Save"]'.</msg>
<status status="PASS" starttime="20220704 23:43:44.811" endtime="20220704 23:43:44.936"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${GO_BACK_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 23:43:44.936" level="INFO">Clicking element 'xpath://a[@title="Go back."]'.</msg>
<status status="PASS" starttime="20220704 23:43:44.936" endtime="20220704 23:43:45.085"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${CLOSE_SHOW_MENU}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 23:43:45.085" level="INFO">Clicking element 'xpath://a[@title="Close the board menu."]'.</msg>
<status status="PASS" starttime="20220704 23:43:45.085" endtime="20220704 23:43:45.200"/>
</kw>
<status status="PASS" starttime="20220704 23:43:44.087" endtime="20220704 23:43:45.200"/>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Close Browser</arg>
<arg>AND</arg>
<arg>Wait Until Keyword Succeeds</arg>
<arg>${DEFAULT_TIMEOUT}</arg>
<arg>${DEFAULT_INTERVAL}</arg>
<arg>Delete A Board</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20220704 23:43:45.201" endtime="20220704 23:43:45.321"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${DEFAULT_TIMEOUT}</arg>
<arg>${DEFAULT_INTERVAL}</arg>
<arg>Delete A Board</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${BOARD.json()}[id]</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 23:43:45.325" level="INFO">${url} = boards/62c37b2603fc9755ae2ec65f</msg>
<status status="PASS" starttime="20220704 23:43:45.324" endtime="20220704 23:43:45.325"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 23:43:45.764" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 23:43:45.325" endtime="20220704 23:43:45.764"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 23:43:45.764" endtime="20220704 23:43:45.764"/>
</return>
<msg timestamp="20220704 23:43:45.765" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 23:43:45.324" endtime="20220704 23:43:45.765"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 23:43:45.765" endtime="20220704 23:43:45.765"/>
</return>
<status status="PASS" starttime="20220704 23:43:45.322" endtime="20220704 23:43:45.765"/>
</kw>
<status status="PASS" starttime="20220704 23:43:45.321" endtime="20220704 23:43:45.765"/>
</kw>
<status status="PASS" starttime="20220704 23:43:45.200" endtime="20220704 23:43:45.765"/>
</kw>
<doc>Verify that a board's description can be updated through GUI</doc>
<tag>board.update.description</tag>
<tag>gui</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220704 23:43:34.604" endtime="20220704 23:43:45.765"/>
</test>
<test id="s1-s1-s1-t4" name="Update a board's name" line="56">
<kw name="Create A Board" library="Board">
<var>${BOARD}</var>
<arg>NewBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 23:43:45.771" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 23:43:45.770" endtime="20220704 23:43:45.771"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 23:43:45.771" endtime="20220704 23:43:45.771"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 23:43:45.773" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220704 23:43:45.771" endtime="20220704 23:43:45.773"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 23:43:45.945" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 23:43:45.773" endtime="20220704 23:43:45.946"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 23:43:45.946" endtime="20220704 23:43:45.946"/>
</return>
<msg timestamp="20220704 23:43:45.946" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 23:43:45.769" endtime="20220704 23:43:45.946"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 23:43:45.946" endtime="20220704 23:43:45.946"/>
</return>
<msg timestamp="20220704 23:43:45.947" level="INFO">${BOARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 23:43:45.769" endtime="20220704 23:43:45.947"/>
</kw>
<kw name="Open Browser From Environment" library="CommonGUI">
<arg>${LOGIN_URL}</arg>
<doc>This keywords takes REMOTE and BROWSER variables
from the environment automatically and only needs a url</doc>
<if>
<branch type="IF" condition="${is_remote}">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${url}</arg>
<arg>${BROWSER}</arg>
<arg>remote_url=http://selenium-hub:4444</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20220704 23:43:45.949" level="INFO">Opening browser 'chrome' to base url 'https://trello.com/login' through remote server at 'http://selenium-hub:4444'.</msg>
<status status="PASS" starttime="20220704 23:43:45.948" endtime="20220704 23:43:47.251"/>
</kw>
<status status="PASS" starttime="20220704 23:43:45.948" endtime="20220704 23:43:47.251"/>
</branch>
<branch type="ELSE">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${url}</arg>
<arg>${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<status status="NOT RUN" starttime="20220704 23:43:47.252" endtime="20220704 23:43:47.252"/>
</kw>
<status status="NOT RUN" starttime="20220704 23:43:47.251" endtime="20220704 23:43:47.252"/>
</branch>
<status status="PASS" starttime="20220704 23:43:45.947" endtime="20220704 23:43:47.252"/>
</if>
<status status="PASS" starttime="20220704 23:43:45.947" endtime="20220704 23:43:47.252"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20220704 23:43:47.252" endtime="20220704 23:43:47.396"/>
</kw>
<kw name="Login To Trello" library="LoginPage">
<arg>${DEFAULT_EMAIL}</arg>
<arg>${DEFAULT_PASSWORD}</arg>
<doc>High-level keyword for logging in to Trello</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220704 23:43:47.424" level="INFO">${url} = https://trello.com/login</msg>
<status status="PASS" starttime="20220704 23:43:47.397" endtime="20220704 23:43:47.424"/>
</kw>
<if>
<branch type="IF" condition="'${url}' != '${LOGIN_URL}'">
<kw name="Go To" library="SeleniumLibrary">
<arg>${LOGIN_URL}</arg>
<doc>Navigates the current browser window to the provided ``url``.</doc>
<status status="NOT RUN" starttime="20220704 23:43:47.425" endtime="20220704 23:43:47.425"/>
</kw>
<status status="NOT RUN" starttime="20220704 23:43:47.425" endtime="20220704 23:43:47.425"/>
</branch>
<status status="PASS" starttime="20220704 23:43:47.424" endtime="20220704 23:43:47.425"/>
</if>
<kw name="Enter Username" library="LoginPage">
<arg>${username}</arg>
<doc>Take a username as argument and
enters it in the user_input</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${USER_INPUT}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 23:43:47.426" endtime="20220704 23:43:47.483"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${USER_INPUT}</arg>
<arg>${username}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220704 23:43:47.483" level="INFO">Typing text 'bootcamp04@mailinator.com' into text field 'css:input#user'.</msg>
<status status="PASS" starttime="20220704 23:43:47.483" endtime="20220704 23:43:47.623"/>
</kw>
<status status="PASS" starttime="20220704 23:43:47.425" endtime="20220704 23:43:47.623"/>
</kw>
<kw name="Wait Until Element Is Not Visible" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<doc>Waits until the element ``locator`` is not visible.</doc>
<status status="PASS" starttime="20220704 23:43:47.623" endtime="20220704 23:43:48.380"/>
</kw>
<kw name="Click Login Button" library="LoginPage">
<doc>Clicks Trello's login button if in Trello's
login page, else it clicks Atlassian's</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220704 23:43:48.401" level="INFO">${url} = https://trello.com/login</msg>
<status status="PASS" starttime="20220704 23:43:48.381" endtime="20220704 23:43:48.401"/>
</kw>
<if>
<branch type="IF" condition="'${url}' == '${LOGIN_URL}'">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220704 23:43:48.402" endtime="20220704 23:43:48.456"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220704 23:43:48.457" level="INFO">Clicking button 'css:input#login'.</msg>
<status status="PASS" starttime="20220704 23:43:48.456" endtime="20220704 23:43:49.597"/>
</kw>
<status status="PASS" starttime="20220704 23:43:48.401" endtime="20220704 23:43:49.597"/>
</branch>
<branch type="ELSE">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="NOT RUN" starttime="20220704 23:43:49.598" endtime="20220704 23:43:49.598"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<status status="NOT RUN" starttime="20220704 23:43:49.598" endtime="20220704 23:43:49.598"/>
</kw>
<status status="NOT RUN" starttime="20220704 23:43:49.597" endtime="20220704 23:43:49.598"/>
</branch>
<status status="PASS" starttime="20220704 23:43:48.401" endtime="20220704 23:43:49.598"/>
</if>
<status status="PASS" starttime="20220704 23:43:48.381" endtime="20220704 23:43:49.598"/>
</kw>
<kw name="Wait Until Location Is Atlassian's Login" library="LoginPage">
<doc>Waits for the page redirection when logging in.</doc>
<kw name="Wait Until Location Contains" library="SeleniumLibrary">
<arg>atlassian.com</arg>
<doc>Waits until the current URL contains ``expected``.</doc>
<status status="PASS" starttime="20220704 23:43:49.598" endtime="20220704 23:43:49.625"/>
</kw>
<status status="PASS" starttime="20220704 23:43:49.598" endtime="20220704 23:43:49.626"/>
</kw>
<kw name="Enter Password" library="LoginPage">
<arg>${password}</arg>
<doc>Take a password as argument and
enters it in the password_input</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<arg>timeout=${DEFAULT_TIMEOUT}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 23:43:49.626" endtime="20220704 23:43:49.716"/>
</kw>
<kw name="Input Password" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<arg>${password}</arg>
<doc>Types the given password into the text field identified by ``locator``.</doc>
<msg timestamp="20220704 23:43:49.717" level="INFO">Typing password into text field 'css:input#password'.</msg>
<msg timestamp="20220704 23:43:49.781" level="INFO">Temporally setting log level to: NONE</msg>
<msg timestamp="20220704 23:43:49.854" level="INFO">Log level changed from NONE to INFO.</msg>
<status status="PASS" starttime="20220704 23:43:49.716" endtime="20220704 23:43:49.854"/>
</kw>
<status status="PASS" starttime="20220704 23:43:49.626" endtime="20220704 23:43:49.854"/>
</kw>
<kw name="Click Login Button" library="LoginPage">
<doc>Clicks Trello's login button if in Trello's
login page, else it clicks Atlassian's</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220704 23:43:49.865" level="INFO">${url} = https://id.atlassian.com/login?application=trello&amp;continue=https%3A%2F%2Ftrello.com%2Fauth%2Fatlassian%2Fcallback%3FreturnUrl%3D%252F%26display%3D%26aaOnboarding%3D%26updateEmail%3D%26traceId%3D62c37b...</msg>
<status status="PASS" starttime="20220704 23:43:49.855" endtime="20220704 23:43:49.865"/>
</kw>
<if>
<branch type="IF" condition="'${url}' == '${LOGIN_URL}'">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="NOT RUN" starttime="20220704 23:43:49.865" endtime="20220704 23:43:49.865"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<status status="NOT RUN" starttime="20220704 23:43:49.865" endtime="20220704 23:43:49.865"/>
</kw>
<status status="NOT RUN" starttime="20220704 23:43:49.865" endtime="20220704 23:43:49.866"/>
</branch>
<branch type="ELSE">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220704 23:43:49.866" endtime="20220704 23:43:49.923"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220704 23:43:49.923" level="INFO">Clicking button 'css:button#login-submit'.</msg>
<status status="PASS" starttime="20220704 23:43:49.923" endtime="20220704 23:43:50.027"/>
</kw>
<status status="PASS" starttime="20220704 23:43:49.866" endtime="20220704 23:43:50.027"/>
</branch>
<status status="PASS" starttime="20220704 23:43:49.865" endtime="20220704 23:43:50.027"/>
</if>
<status status="PASS" starttime="20220704 23:43:49.855" endtime="20220704 23:43:50.027"/>
</kw>
<status status="PASS" starttime="20220704 23:43:47.396" endtime="20220704 23:43:50.027"/>
</kw>
<kw name="Go To Board" library="BoardsPage">
<arg>NewBoard</arg>
<doc>Receives the board name and goes to that board's page.</doc>
<kw name="Format String" library="String">
<var>${locator}</var>
<arg>${BOARD_BUTTON}</arg>
<arg>${board_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 23:43:50.029" level="INFO">${locator} = //div[@title="NewBoard"]</msg>
<status status="PASS" starttime="20220704 23:43:50.028" endtime="20220704 23:43:50.029"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 23:43:50.029" endtime="20220704 23:43:53.811"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 23:43:53.812" level="INFO">Clicking element '//div[@title="NewBoard"]'.</msg>
<status status="PASS" starttime="20220704 23:43:53.811" endtime="20220704 23:43:54.234"/>
</kw>
<status status="PASS" starttime="20220704 23:43:50.028" endtime="20220704 23:43:54.234"/>
</kw>
<kw name="Verify Name of Board" library="UpperHorizontalMenu">
<arg>NewBoard</arg>
<doc>Verifies the name of a board</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${NAME_OF_BOARD}</arg>
<arg>${DEFAULT_TIMEOUT}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 23:43:54.235" endtime="20220704 23:43:54.807"/>
</kw>
<kw name="Element Text Should Be" library="SeleniumLibrary">
<arg>${NAME_OF_BOARD}</arg>
<arg>${name}</arg>
<doc>Verifies that element ``locator`` contains exact the text ``expected``.</doc>
<msg timestamp="20220704 23:43:54.808" level="INFO">Verifying element 'xpath://h1[contains(@class, 'js-board-editing-target')]' contains exact text 'NewBoard'.</msg>
<status status="PASS" starttime="20220704 23:43:54.808" endtime="20220704 23:43:54.888"/>
</kw>
<status status="PASS" starttime="20220704 23:43:54.234" endtime="20220704 23:43:54.888"/>
</kw>
<kw name="Update Name of Board" library="UpperHorizontalMenu">
<arg>UpdatedName</arg>
<doc>Updates the name of a board
it takes the Length of the boards's name in order to press the delete key
as many times as the name's length</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${NAME_OF_BOARD}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 23:43:54.889" endtime="20220704 23:43:54.932"/>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<var>${response}</var>
<arg>${NAME_OF_BOARD}</arg>
<doc>Returns the text value of the element identified by ``locator``.</doc>
<msg timestamp="20220704 23:43:54.961" level="INFO">${response} = NewBoard</msg>
<status status="PASS" starttime="20220704 23:43:54.933" endtime="20220704 23:43:54.961"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${names_lenght}</var>
<arg>${response}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20220704 23:43:54.961" level="INFO">Length is 8</msg>
<msg timestamp="20220704 23:43:54.962" level="INFO">${names_lenght} = 8</msg>
<status status="PASS" starttime="20220704 23:43:54.961" endtime="20220704 23:43:54.962"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${NAME_OF_BOARD}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 23:43:54.962" level="INFO">Clicking element 'xpath://h1[contains(@class, 'js-board-editing-target')]'.</msg>
<status status="PASS" starttime="20220704 23:43:54.962" endtime="20220704 23:43:55.026"/>
</kw>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>${NAME_OF_BOARD_INPUT}</arg>
<arg>\ue011</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20220704 23:43:55.027" level="INFO">Sending key(s) ('\ue011',) to xpath://input[contains(@class, 'board-name-input')] element.</msg>
<msg timestamp="20220704 23:43:55.375" level="INFO">Sending key </msg>
<status status="PASS" starttime="20220704 23:43:55.026" endtime="20220704 23:43:55.396"/>
</kw>
<kw name="Repeat Keyword" library="BuiltIn">
<arg>${names_lenght}</arg>
<arg>Press Keys</arg>
<arg>${NAME_OF_BOARD_INPUT}</arg>
<arg>\ue017</arg>
<doc>Executes the specified keyword multiple times.</doc>
<msg timestamp="20220704 23:43:55.396" level="INFO">Repeating keyword, round 1/8.</msg>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>${NAME_OF_BOARD_INPUT}</arg>
<arg>\ue017</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20220704 23:43:55.397" level="INFO">Sending key(s) ('\ue017',) to xpath://input[contains(@class, 'board-name-input')] element.</msg>
<msg timestamp="20220704 23:43:55.695" level="INFO">Sending key </msg>
<status status="PASS" starttime="20220704 23:43:55.397" endtime="20220704 23:43:55.712"/>
</kw>
<msg timestamp="20220704 23:43:55.712" level="INFO">Repeating keyword, round 2/8.</msg>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>${NAME_OF_BOARD_INPUT}</arg>
<arg>\ue017</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20220704 23:43:55.713" level="INFO">Sending key(s) ('\ue017',) to xpath://input[contains(@class, 'board-name-input')] element.</msg>
<msg timestamp="20220704 23:43:55.998" level="INFO">Sending key </msg>
<status status="PASS" starttime="20220704 23:43:55.712" endtime="20220704 23:43:56.035"/>
</kw>
<msg timestamp="20220704 23:43:56.035" level="INFO">Repeating keyword, round 3/8.</msg>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>${NAME_OF_BOARD_INPUT}</arg>
<arg>\ue017</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20220704 23:43:56.036" level="INFO">Sending key(s) ('\ue017',) to xpath://input[contains(@class, 'board-name-input')] element.</msg>
<msg timestamp="20220704 23:43:56.333" level="INFO">Sending key </msg>
<status status="PASS" starttime="20220704 23:43:56.036" endtime="20220704 23:43:56.355"/>
</kw>
<msg timestamp="20220704 23:43:56.355" level="INFO">Repeating keyword, round 4/8.</msg>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>${NAME_OF_BOARD_INPUT}</arg>
<arg>\ue017</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20220704 23:43:56.356" level="INFO">Sending key(s) ('\ue017',) to xpath://input[contains(@class, 'board-name-input')] element.</msg>
<msg timestamp="20220704 23:43:56.651" level="INFO">Sending key </msg>
<status status="PASS" starttime="20220704 23:43:56.355" endtime="20220704 23:43:56.668"/>
</kw>
<msg timestamp="20220704 23:43:56.668" level="INFO">Repeating keyword, round 5/8.</msg>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>${NAME_OF_BOARD_INPUT}</arg>
<arg>\ue017</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20220704 23:43:56.669" level="INFO">Sending key(s) ('\ue017',) to xpath://input[contains(@class, 'board-name-input')] element.</msg>
<msg timestamp="20220704 23:43:56.963" level="INFO">Sending key </msg>
<status status="PASS" starttime="20220704 23:43:56.669" endtime="20220704 23:43:56.978"/>
</kw>
<msg timestamp="20220704 23:43:56.978" level="INFO">Repeating keyword, round 6/8.</msg>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>${NAME_OF_BOARD_INPUT}</arg>
<arg>\ue017</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20220704 23:43:56.979" level="INFO">Sending key(s) ('\ue017',) to xpath://input[contains(@class, 'board-name-input')] element.</msg>
<msg timestamp="20220704 23:43:57.270" level="INFO">Sending key </msg>
<status status="PASS" starttime="20220704 23:43:56.978" endtime="20220704 23:43:57.285"/>
</kw>
<msg timestamp="20220704 23:43:57.285" level="INFO">Repeating keyword, round 7/8.</msg>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>${NAME_OF_BOARD_INPUT}</arg>
<arg>\ue017</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20220704 23:43:57.287" level="INFO">Sending key(s) ('\ue017',) to xpath://input[contains(@class, 'board-name-input')] element.</msg>
<msg timestamp="20220704 23:43:57.570" level="INFO">Sending key </msg>
<status status="PASS" starttime="20220704 23:43:57.286" endtime="20220704 23:43:57.583"/>
</kw>
<msg timestamp="20220704 23:43:57.583" level="INFO">Repeating keyword, round 8/8.</msg>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>${NAME_OF_BOARD_INPUT}</arg>
<arg>\ue017</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20220704 23:43:57.584" level="INFO">Sending key(s) ('\ue017',) to xpath://input[contains(@class, 'board-name-input')] element.</msg>
<msg timestamp="20220704 23:43:57.895" level="INFO">Sending key </msg>
<status status="PASS" starttime="20220704 23:43:57.584" endtime="20220704 23:43:57.919"/>
</kw>
<status status="PASS" starttime="20220704 23:43:55.396" endtime="20220704 23:43:57.919"/>
</kw>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>${NAME_OF_BOARD_INPUT}</arg>
<arg>${name}</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20220704 23:43:57.920" level="INFO">Sending key(s) ('UpdatedName',) to xpath://input[contains(@class, 'board-name-input')] element.</msg>
<msg timestamp="20220704 23:43:58.209" level="INFO">Sending keys UpdatedName</msg>
<status status="PASS" starttime="20220704 23:43:57.919" endtime="20220704 23:43:58.284"/>
</kw>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>${NAME_OF_BOARD_INPUT}</arg>
<arg>\ue007</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20220704 23:43:58.285" level="INFO">Sending key(s) ('\ue007',) to xpath://input[contains(@class, 'board-name-input')] element.</msg>
<msg timestamp="20220704 23:43:58.590" level="INFO">Sending key </msg>
<status status="PASS" starttime="20220704 23:43:58.284" endtime="20220704 23:43:58.650"/>
</kw>
<status status="PASS" starttime="20220704 23:43:54.889" endtime="20220704 23:43:58.651"/>
</kw>
<kw name="Verify Name of Board" library="UpperHorizontalMenu">
<arg>UpdatedName</arg>
<doc>Verifies the name of a board</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${NAME_OF_BOARD}</arg>
<arg>${DEFAULT_TIMEOUT}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 23:43:58.651" endtime="20220704 23:43:58.704"/>
</kw>
<kw name="Element Text Should Be" library="SeleniumLibrary">
<arg>${NAME_OF_BOARD}</arg>
<arg>${name}</arg>
<doc>Verifies that element ``locator`` contains exact the text ``expected``.</doc>
<msg timestamp="20220704 23:43:58.705" level="INFO">Verifying element 'xpath://h1[contains(@class, 'js-board-editing-target')]' contains exact text 'UpdatedName'.</msg>
<status status="PASS" starttime="20220704 23:43:58.704" endtime="20220704 23:43:58.737"/>
</kw>
<status status="PASS" starttime="20220704 23:43:58.651" endtime="20220704 23:43:58.737"/>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Close Browser</arg>
<arg>AND</arg>
<arg>Wait Until Keyword Succeeds</arg>
<arg>${DEFAULT_TIMEOUT}</arg>
<arg>${DEFAULT_INTERVAL}</arg>
<arg>Delete A Board</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20220704 23:43:58.738" endtime="20220704 23:43:58.849"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${DEFAULT_TIMEOUT}</arg>
<arg>${DEFAULT_INTERVAL}</arg>
<arg>Delete A Board</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${BOARD.json()}[id]</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 23:43:58.853" level="INFO">${url} = boards/62c37b311b34df613043a164</msg>
<status status="PASS" starttime="20220704 23:43:58.852" endtime="20220704 23:43:58.853"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 23:43:59.187" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 23:43:58.853" endtime="20220704 23:43:59.187"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 23:43:59.187" endtime="20220704 23:43:59.187"/>
</return>
<msg timestamp="20220704 23:43:59.188" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 23:43:58.852" endtime="20220704 23:43:59.188"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 23:43:59.188" endtime="20220704 23:43:59.188"/>
</return>
<status status="PASS" starttime="20220704 23:43:58.850" endtime="20220704 23:43:59.188"/>
</kw>
<status status="PASS" starttime="20220704 23:43:58.849" endtime="20220704 23:43:59.188"/>
</kw>
<status status="PASS" starttime="20220704 23:43:58.737" endtime="20220704 23:43:59.188"/>
</kw>
<doc>Verify that a board's name can be updated through GUI</doc>
<tag>board.update.name</tag>
<tag>gui</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220704 23:43:45.767" endtime="20220704 23:43:59.188"/>
</test>
<kw name="Boards Suite Teardown" type="TEARDOWN">
<doc>Deletes the Trello sesion that had been created</doc>
<kw name="Delete All Sessions" library="request_own_library">
<status status="PASS" starttime="20220704 23:43:59.191" endtime="20220704 23:43:59.192"/>
</kw>
<status status="PASS" starttime="20220704 23:43:59.190" endtime="20220704 23:43:59.192"/>
</kw>
<doc>Board Tests</doc>
<status status="PASS" starttime="20220704 23:43:09.722" endtime="20220704 23:43:59.192"/>
</suite>
<suite id="s1-s1-s2" name="Trello Gui Cards" source="/trello/gui/trello_gui_cards.robot">
<kw name="Cards Suite Setup" type="SETUP">
<doc>Creates a new board through API, then Opens a Browser
Login to Trello, and Go to the created board's page.</doc>
<kw name="Create Trello Session" library="TrelloAPI">
<doc>Creates a Trello Session</doc>
<kw name="Create Session" library="request_own_library">
<arg>${API_BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<status status="PASS" starttime="20220704 23:43:59.212" endtime="20220704 23:43:59.212"/>
</kw>
<status status="PASS" starttime="20220704 23:43:59.212" endtime="20220704 23:43:59.212"/>
</kw>
<kw name="Create A Board" library="Board">
<var>${BOARD}</var>
<arg>CardTestBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 23:43:59.214" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 23:43:59.213" endtime="20220704 23:43:59.214"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 23:43:59.214" endtime="20220704 23:43:59.214"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 23:43:59.216" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220704 23:43:59.214" endtime="20220704 23:43:59.216"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 23:43:59.509" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 23:43:59.216" endtime="20220704 23:43:59.509"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 23:43:59.509" endtime="20220704 23:43:59.509"/>
</return>
<msg timestamp="20220704 23:43:59.510" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 23:43:59.213" endtime="20220704 23:43:59.510"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 23:43:59.510" endtime="20220704 23:43:59.510"/>
</return>
<msg timestamp="20220704 23:43:59.510" level="INFO">${BOARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 23:43:59.213" endtime="20220704 23:43:59.510"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_BOARD_ID}</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220704 23:43:59.513" level="INFO">${TEST_SUITE_BOARD_ID} = 62c37b3f8ccb7215250d7a0d</msg>
<status status="PASS" starttime="20220704 23:43:59.511" endtime="20220704 23:43:59.514"/>
</kw>
<kw name="Open Browser From Environment" library="CommonGUI">
<arg>${LOGIN_URL}</arg>
<doc>This keywords takes REMOTE and BROWSER variables
from the environment automatically and only needs a url</doc>
<if>
<branch type="IF" condition="${is_remote}">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${url}</arg>
<arg>${BROWSER}</arg>
<arg>remote_url=http://selenium-hub:4444</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20220704 23:43:59.515" level="INFO">Opening browser 'chrome' to base url 'https://trello.com/login' through remote server at 'http://selenium-hub:4444'.</msg>
<status status="PASS" starttime="20220704 23:43:59.515" endtime="20220704 23:44:00.927"/>
</kw>
<status status="PASS" starttime="20220704 23:43:59.515" endtime="20220704 23:44:00.927"/>
</branch>
<branch type="ELSE">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${url}</arg>
<arg>${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<status status="NOT RUN" starttime="20220704 23:44:00.928" endtime="20220704 23:44:00.928"/>
</kw>
<status status="NOT RUN" starttime="20220704 23:44:00.927" endtime="20220704 23:44:00.928"/>
</branch>
<status status="PASS" starttime="20220704 23:43:59.514" endtime="20220704 23:44:00.928"/>
</if>
<status status="PASS" starttime="20220704 23:43:59.514" endtime="20220704 23:44:00.928"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20220704 23:44:00.928" endtime="20220704 23:44:01.041"/>
</kw>
<kw name="Login To Trello" library="LoginPage">
<arg>${DEFAULT_EMAIL}</arg>
<arg>${DEFAULT_PASSWORD}</arg>
<doc>High-level keyword for logging in to Trello</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220704 23:44:01.050" level="INFO">${url} = https://trello.com/login</msg>
<status status="PASS" starttime="20220704 23:44:01.042" endtime="20220704 23:44:01.051"/>
</kw>
<if>
<branch type="IF" condition="'${url}' != '${LOGIN_URL}'">
<kw name="Go To" library="SeleniumLibrary">
<arg>${LOGIN_URL}</arg>
<doc>Navigates the current browser window to the provided ``url``.</doc>
<status status="NOT RUN" starttime="20220704 23:44:01.051" endtime="20220704 23:44:01.051"/>
</kw>
<status status="NOT RUN" starttime="20220704 23:44:01.051" endtime="20220704 23:44:01.051"/>
</branch>
<status status="PASS" starttime="20220704 23:44:01.051" endtime="20220704 23:44:01.051"/>
</if>
<kw name="Enter Username" library="LoginPage">
<arg>${username}</arg>
<doc>Take a username as argument and
enters it in the user_input</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${USER_INPUT}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 23:44:01.052" endtime="20220704 23:44:01.091"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${USER_INPUT}</arg>
<arg>${username}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220704 23:44:01.092" level="INFO">Typing text 'bootcamp04@mailinator.com' into text field 'css:input#user'.</msg>
<status status="PASS" starttime="20220704 23:44:01.091" endtime="20220704 23:44:01.233"/>
</kw>
<status status="PASS" starttime="20220704 23:44:01.051" endtime="20220704 23:44:01.234"/>
</kw>
<kw name="Wait Until Element Is Not Visible" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<doc>Waits until the element ``locator`` is not visible.</doc>
<status status="PASS" starttime="20220704 23:44:01.234" endtime="20220704 23:44:01.983"/>
</kw>
<kw name="Click Login Button" library="LoginPage">
<doc>Clicks Trello's login button if in Trello's
login page, else it clicks Atlassian's</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220704 23:44:01.997" level="INFO">${url} = https://trello.com/login</msg>
<status status="PASS" starttime="20220704 23:44:01.984" endtime="20220704 23:44:01.997"/>
</kw>
<if>
<branch type="IF" condition="'${url}' == '${LOGIN_URL}'">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220704 23:44:01.997" endtime="20220704 23:44:02.054"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220704 23:44:02.054" level="INFO">Clicking button 'css:input#login'.</msg>
<status status="PASS" starttime="20220704 23:44:02.054" endtime="20220704 23:44:03.229"/>
</kw>
<status status="PASS" starttime="20220704 23:44:01.997" endtime="20220704 23:44:03.229"/>
</branch>
<branch type="ELSE">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="NOT RUN" starttime="20220704 23:44:03.229" endtime="20220704 23:44:03.229"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<status status="NOT RUN" starttime="20220704 23:44:03.229" endtime="20220704 23:44:03.230"/>
</kw>
<status status="NOT RUN" starttime="20220704 23:44:03.229" endtime="20220704 23:44:03.230"/>
</branch>
<status status="PASS" starttime="20220704 23:44:01.997" endtime="20220704 23:44:03.230"/>
</if>
<status status="PASS" starttime="20220704 23:44:01.983" endtime="20220704 23:44:03.230"/>
</kw>
<kw name="Wait Until Location Is Atlassian's Login" library="LoginPage">
<doc>Waits for the page redirection when logging in.</doc>
<kw name="Wait Until Location Contains" library="SeleniumLibrary">
<arg>atlassian.com</arg>
<doc>Waits until the current URL contains ``expected``.</doc>
<status status="PASS" starttime="20220704 23:44:03.230" endtime="20220704 23:44:03.260"/>
</kw>
<status status="PASS" starttime="20220704 23:44:03.230" endtime="20220704 23:44:03.260"/>
</kw>
<kw name="Enter Password" library="LoginPage">
<arg>${password}</arg>
<doc>Take a password as argument and
enters it in the password_input</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<arg>timeout=${DEFAULT_TIMEOUT}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 23:44:03.261" endtime="20220704 23:44:03.314"/>
</kw>
<kw name="Input Password" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<arg>${password}</arg>
<doc>Types the given password into the text field identified by ``locator``.</doc>
<msg timestamp="20220704 23:44:03.315" level="INFO">Typing password into text field 'css:input#password'.</msg>
<msg timestamp="20220704 23:44:03.420" level="INFO">Temporally setting log level to: NONE</msg>
<msg timestamp="20220704 23:44:03.542" level="INFO">Log level changed from NONE to INFO.</msg>
<status status="PASS" starttime="20220704 23:44:03.314" endtime="20220704 23:44:03.542"/>
</kw>
<status status="PASS" starttime="20220704 23:44:03.260" endtime="20220704 23:44:03.542"/>
</kw>
<kw name="Click Login Button" library="LoginPage">
<doc>Clicks Trello's login button if in Trello's
login page, else it clicks Atlassian's</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220704 23:44:03.552" level="INFO">${url} = https://id.atlassian.com/login?application=trello&amp;continue=https%3A%2F%2Ftrello.com%2Fauth%2Fatlassian%2Fcallback%3FreturnUrl%3D%252F%26display%3D%26aaOnboarding%3D%26updateEmail%3D%26traceId%3D62c37b...</msg>
<status status="PASS" starttime="20220704 23:44:03.543" endtime="20220704 23:44:03.552"/>
</kw>
<if>
<branch type="IF" condition="'${url}' == '${LOGIN_URL}'">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="NOT RUN" starttime="20220704 23:44:03.553" endtime="20220704 23:44:03.553"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<status status="NOT RUN" starttime="20220704 23:44:03.553" endtime="20220704 23:44:03.553"/>
</kw>
<status status="NOT RUN" starttime="20220704 23:44:03.552" endtime="20220704 23:44:03.553"/>
</branch>
<branch type="ELSE">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220704 23:44:03.553" endtime="20220704 23:44:03.634"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220704 23:44:03.635" level="INFO">Clicking button 'css:button#login-submit'.</msg>
<status status="PASS" starttime="20220704 23:44:03.635" endtime="20220704 23:44:03.751"/>
</kw>
<status status="PASS" starttime="20220704 23:44:03.553" endtime="20220704 23:44:03.751"/>
</branch>
<status status="PASS" starttime="20220704 23:44:03.552" endtime="20220704 23:44:03.751"/>
</if>
<status status="PASS" starttime="20220704 23:44:03.542" endtime="20220704 23:44:03.751"/>
</kw>
<status status="PASS" starttime="20220704 23:44:01.041" endtime="20220704 23:44:03.751"/>
</kw>
<kw name="Go To Board" library="BoardsPage">
<arg>CardTestBoard</arg>
<doc>Receives the board name and goes to that board's page.</doc>
<kw name="Format String" library="String">
<var>${locator}</var>
<arg>${BOARD_BUTTON}</arg>
<arg>${board_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 23:44:03.752" level="INFO">${locator} = //div[@title="CardTestBoard"]</msg>
<status status="PASS" starttime="20220704 23:44:03.752" endtime="20220704 23:44:03.752"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 23:44:03.753" endtime="20220704 23:44:07.755"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 23:44:07.755" level="INFO">Clicking element '//div[@title="CardTestBoard"]'.</msg>
<status status="PASS" starttime="20220704 23:44:07.755" endtime="20220704 23:44:08.178"/>
</kw>
<status status="PASS" starttime="20220704 23:44:03.751" endtime="20220704 23:44:08.178"/>
</kw>
<status status="PASS" starttime="20220704 23:43:59.211" endtime="20220704 23:44:08.178"/>
</kw>
<test id="s1-s1-s2-t1" name="Verify A Card Can Be Created" line="12">
<kw name="Set Test Variable" library="BuiltIn">
<arg>\${list}</arg>
<arg>To Do</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220704 23:44:08.180" level="INFO">${list} = To Do</msg>
<status status="PASS" starttime="20220704 23:44:08.179" endtime="20220704 23:44:08.180"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>\${card}</arg>
<arg>Test Card</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220704 23:44:08.180" level="INFO">${card} = Test Card</msg>
<status status="PASS" starttime="20220704 23:44:08.180" endtime="20220704 23:44:08.180"/>
</kw>
<kw name="Create Card In List" library="ListComponent">
<arg>${list}</arg>
<arg>${card}</arg>
<doc>Create a new card in the given list
Required args: list_name, card_name</doc>
<kw name="Format String" library="String">
<var>${add_card_locator}</var>
<arg>${LIST_ADD_CARD}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 23:44:08.181" level="INFO">${add_card_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Add a card')]</msg>
<status status="PASS" starttime="20220704 23:44:08.181" endtime="20220704 23:44:08.181"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${add_card_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 23:44:08.181" endtime="20220704 23:44:08.728"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${add_card_locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 23:44:08.729" level="INFO">Clicking element '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Add a card')]'.</msg>
<status status="PASS" starttime="20220704 23:44:08.728" endtime="20220704 23:44:08.889"/>
</kw>
<kw name="Format String" library="String">
<var>${textarea_locator}</var>
<arg>${CARD_TITLE_INPUT}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 23:44:08.890" level="INFO">${textarea_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//textarea[contains(@class, 'list-card-composer-textarea')]</msg>
<status status="PASS" starttime="20220704 23:44:08.889" endtime="20220704 23:44:08.890"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 23:44:08.890" endtime="20220704 23:44:08.962"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 23:44:08.962" level="INFO">Clicking element '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//textarea[contains(@class, 'list-card-composer-textarea')]'.</msg>
<status status="PASS" starttime="20220704 23:44:08.962" endtime="20220704 23:44:09.032"/>
</kw>
<kw name="Clear Element Text" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<doc>Clears the value of the text-input-element identified by ``locator``.</doc>
<status status="PASS" starttime="20220704 23:44:09.032" endtime="20220704 23:44:09.125"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<arg>${card_name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220704 23:44:09.125" level="INFO">Typing text 'Test Card' into text field '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//textarea[contains(@class, 'list-card-composer-textarea')]'.</msg>
<status status="PASS" starttime="20220704 23:44:09.125" endtime="20220704 23:44:09.343"/>
</kw>
<kw name="Format String" library="String">
<var>${confirm_locator}</var>
<arg>${CONFIRM_ADD_CARD}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 23:44:09.344" level="INFO">${confirm_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//input[@value='Add card']</msg>
<status status="PASS" starttime="20220704 23:44:09.343" endtime="20220704 23:44:09.344"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${confirm_locator}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220704 23:44:09.345" level="INFO">Clicking button '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//input[@value='Add card']'.</msg>
<status status="PASS" starttime="20220704 23:44:09.344" endtime="20220704 23:44:09.454"/>
</kw>
<status status="PASS" starttime="20220704 23:44:08.180" endtime="20220704 23:44:09.454"/>
</kw>
<kw name="Verify Card Exists" library="ListComponent">
<arg>${list}</arg>
<arg>${card}</arg>
<doc>Verify that the card with card_name exists in the given list.</doc>
<kw name="Format String" library="String">
<var>${card_name_locator}</var>
<arg>${LIST_CARD_NAME}</arg>
<arg>list_name=${list_name}</arg>
<arg>card_name=${card_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 23:44:09.456" level="INFO">${card_name_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Test Card')]</msg>
<status status="PASS" starttime="20220704 23:44:09.455" endtime="20220704 23:44:09.456"/>
</kw>
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<arg>${card_name_locator}</arg>
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<msg timestamp="20220704 23:44:09.521" level="INFO">Element '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Test Card')]' is displayed.</msg>
<status status="PASS" starttime="20220704 23:44:09.456" endtime="20220704 23:44:09.521"/>
</kw>
<status status="PASS" starttime="20220704 23:44:09.454" endtime="20220704 23:44:09.521"/>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Go To Card Modal</arg>
<arg>list_name=${list}</arg>
<arg>card_name=${card}</arg>
<arg>AND</arg>
<arg>Delete Current Card</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Go To Card Modal" library="ListComponent">
<arg>list_name=${list}</arg>
<arg>card_name=${card}</arg>
<doc>It opens the modal for card_name in list_name</doc>
<kw name="Format String" library="String">
<var>${card_name_locator}</var>
<arg>${LIST_CARD_NAME}</arg>
<arg>list_name=${list_name}</arg>
<arg>card_name=${card_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 23:44:09.523" level="INFO">${card_name_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Test Card')]</msg>
<status status="PASS" starttime="20220704 23:44:09.522" endtime="20220704 23:44:09.523"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${card_name_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 23:44:09.523" endtime="20220704 23:44:09.550"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${card_name_locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 23:44:09.551" level="INFO">Clicking element '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Test Card')]'.</msg>
<status status="PASS" starttime="20220704 23:44:09.551" endtime="20220704 23:44:09.617"/>
</kw>
<status status="PASS" starttime="20220704 23:44:09.522" endtime="20220704 23:44:09.617"/>
</kw>
<kw name="Delete Current Card" library="CardModal">
<doc>The Keyword will first check if the card is archived,
if it's not, it will archive it to be able to delete it.</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${not_archived}</var>
<arg>Element Should Not Be Visible</arg>
<arg>${IS_ARCHIVED_MSG}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Element Should Not Be Visible" library="SeleniumLibrary">
<arg>${IS_ARCHIVED_MSG}</arg>
<doc>Verifies that the element identified by ``locator`` is NOT visible.</doc>
<msg timestamp="20220704 23:44:09.696" level="INFO">Element '//p[text()='This card is archived.']' did not exist.</msg>
<status status="PASS" starttime="20220704 23:44:09.618" endtime="20220704 23:44:09.696"/>
</kw>
<msg timestamp="20220704 23:44:09.696" level="INFO">${not_archived} = True</msg>
<status status="PASS" starttime="20220704 23:44:09.618" endtime="20220704 23:44:09.696"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${not_archived}</arg>
<arg>Archive Current Card</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Archive Current Card" library="CardModal">
<doc>Archives the current card from inside the modal.</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ARCHIVE_BUTTON}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 23:44:09.697" endtime="20220704 23:44:10.101"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${ARCHIVE_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 23:44:10.102" level="INFO">Clicking element '//span[@title='Archive']'.</msg>
<status status="PASS" starttime="20220704 23:44:10.102" endtime="20220704 23:44:10.252"/>
</kw>
<status status="PASS" starttime="20220704 23:44:09.697" endtime="20220704 23:44:10.253"/>
</kw>
<status status="PASS" starttime="20220704 23:44:09.697" endtime="20220704 23:44:10.253"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${DEFAULT_TIMEOUT}</arg>
<arg>${DEFAULT_INTERVAL}</arg>
<arg>Click Element</arg>
<arg>${DELETE_BUTTON}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${DELETE_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 23:44:10.254" level="INFO">Clicking element '//a[@title='Delete']'.</msg>
<status status="PASS" starttime="20220704 23:44:10.253" endtime="20220704 23:44:10.365"/>
</kw>
<status status="PASS" starttime="20220704 23:44:10.253" endtime="20220704 23:44:10.365"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${DELETE_CONFIRM}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 23:44:10.366" level="INFO">Clicking element '//input[@value='Delete']'.</msg>
<status status="PASS" starttime="20220704 23:44:10.365" endtime="20220704 23:44:10.607"/>
</kw>
<status status="PASS" starttime="20220704 23:44:09.617" endtime="20220704 23:44:10.607"/>
</kw>
<status status="PASS" starttime="20220704 23:44:09.521" endtime="20220704 23:44:10.607"/>
</kw>
<doc>Verify that it is possible to create a new
card through Trello's GUI.</doc>
<tag>card.create</tag>
<tag>gui</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220704 23:44:08.178" endtime="20220704 23:44:10.607"/>
</test>
<test id="s1-s1-s2-t2" name="Modify A Card's Name From The Board Page" line="24">
<kw name="Set Test Variable" library="BuiltIn">
<arg>\${list}</arg>
<arg>To Do</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220704 23:44:10.611" level="INFO">${list} = To Do</msg>
<status status="PASS" starttime="20220704 23:44:10.610" endtime="20220704 23:44:10.611"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>\${card}</arg>
<arg>Test Card</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220704 23:44:10.611" level="INFO">${card} = Test Card</msg>
<status status="PASS" starttime="20220704 23:44:10.611" endtime="20220704 23:44:10.611"/>
</kw>
<kw name="Create Card In List" library="ListComponent">
<arg>${list}</arg>
<arg>${card}</arg>
<doc>Create a new card in the given list
Required args: list_name, card_name</doc>
<kw name="Format String" library="String">
<var>${add_card_locator}</var>
<arg>${LIST_ADD_CARD}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 23:44:10.612" level="INFO">${add_card_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Add a card')]</msg>
<status status="PASS" starttime="20220704 23:44:10.612" endtime="20220704 23:44:10.612"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${add_card_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 23:44:10.612" endtime="20220704 23:44:10.650"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${add_card_locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 23:44:10.651" level="INFO">Clicking element '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Add a card')]'.</msg>
<status status="PASS" starttime="20220704 23:44:10.650" endtime="20220704 23:44:10.727"/>
</kw>
<kw name="Format String" library="String">
<var>${textarea_locator}</var>
<arg>${CARD_TITLE_INPUT}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 23:44:10.728" level="INFO">${textarea_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//textarea[contains(@class, 'list-card-composer-textarea')]</msg>
<status status="PASS" starttime="20220704 23:44:10.727" endtime="20220704 23:44:10.728"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 23:44:10.728" endtime="20220704 23:44:10.763"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 23:44:10.764" level="INFO">Clicking element '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//textarea[contains(@class, 'list-card-composer-textarea')]'.</msg>
<status status="PASS" starttime="20220704 23:44:10.764" endtime="20220704 23:44:10.823"/>
</kw>
<kw name="Clear Element Text" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<doc>Clears the value of the text-input-element identified by ``locator``.</doc>
<status status="PASS" starttime="20220704 23:44:10.824" endtime="20220704 23:44:10.868"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<arg>${card_name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220704 23:44:10.869" level="INFO">Typing text 'Test Card' into text field '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//textarea[contains(@class, 'list-card-composer-textarea')]'.</msg>
<status status="PASS" starttime="20220704 23:44:10.869" endtime="20220704 23:44:10.968"/>
</kw>
<kw name="Format String" library="String">
<var>${confirm_locator}</var>
<arg>${CONFIRM_ADD_CARD}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 23:44:10.969" level="INFO">${confirm_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//input[@value='Add card']</msg>
<status status="PASS" starttime="20220704 23:44:10.968" endtime="20220704 23:44:10.969"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${confirm_locator}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220704 23:44:10.969" level="INFO">Clicking button '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//input[@value='Add card']'.</msg>
<status status="PASS" starttime="20220704 23:44:10.969" endtime="20220704 23:44:11.103"/>
</kw>
<status status="PASS" starttime="20220704 23:44:10.611" endtime="20220704 23:44:11.104"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>\${new_name}</arg>
<arg>New Name</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220704 23:44:11.104" level="INFO">${new_name} = New Name</msg>
<status status="PASS" starttime="20220704 23:44:11.104" endtime="20220704 23:44:11.104"/>
</kw>
<kw name="Edit Card Title Using Pencil Icon" library="ListComponent">
<arg>${list}</arg>
<arg>${card}</arg>
<arg>${new_name}</arg>
<doc>Modifies the title of the given card, using the pencil icon
required: list_name, card_name, new_title</doc>
<kw name="Format String" library="String">
<var>${card_element}</var>
<arg>${LIST_CARD_NAME}</arg>
<arg>list_name=${list_name}</arg>
<arg>card_name=${card_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 23:44:11.106" level="INFO">${card_element} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Test Card')]</msg>
<status status="PASS" starttime="20220704 23:44:11.105" endtime="20220704 23:44:11.106"/>
</kw>
<kw name="Format String" library="String">
<var>${pencil_locator}</var>
<arg>${PENCIL_ICON}</arg>
<arg>list_name=${list_name}</arg>
<arg>card_name=${card_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 23:44:11.106" level="INFO">${pencil_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Test Card')]//span[contains(@class, 'icon-edit')]</msg>
<status status="PASS" starttime="20220704 23:44:11.106" endtime="20220704 23:44:11.106"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${card_element}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 23:44:11.107" endtime="20220704 23:44:11.156"/>
</kw>
<kw name="Mouse Over" library="SeleniumLibrary">
<arg>${card_element}</arg>
<doc>Simulates hovering the mouse over the element ``locator``.</doc>
<msg timestamp="20220704 23:44:11.157" level="INFO">Simulating Mouse Over on element '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Test Card')]'.</msg>
<status status="PASS" starttime="20220704 23:44:11.157" endtime="20220704 23:44:11.444"/>
</kw>
<kw name="Wait Until Page Contains Element" library="SeleniumLibrary">
<arg>${pencil_locator}</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" starttime="20220704 23:44:11.445" endtime="20220704 23:44:11.465"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${pencil_locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 23:44:11.466" level="INFO">Clicking element '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Test Card')]//span[contains(@class, 'icon-edit')]'.</msg>
<status status="PASS" starttime="20220704 23:44:11.466" endtime="20220704 23:44:11.564"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${CARD_EDIT_TITLE}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 23:44:11.564" endtime="20220704 23:44:11.611"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${CARD_EDIT_TITLE}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 23:44:11.612" level="INFO">Clicking element 'css:textarea.list-card-edit-title'.</msg>
<status status="PASS" starttime="20220704 23:44:11.611" endtime="20220704 23:44:11.675"/>
</kw>
<kw name="Clear Element Text" library="SeleniumLibrary">
<arg>${CARD_EDIT_TITLE}</arg>
<doc>Clears the value of the text-input-element identified by ``locator``.</doc>
<status status="PASS" starttime="20220704 23:44:11.676" endtime="20220704 23:44:11.741"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${CARD_EDIT_TITLE}</arg>
<arg>${new_title}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220704 23:44:11.741" level="INFO">Typing text 'New Name' into text field 'css:textarea.list-card-edit-title'.</msg>
<status status="PASS" starttime="20220704 23:44:11.741" endtime="20220704 23:44:11.854"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${CARD_EDIT_TITLE_SAVE}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 23:44:11.855" level="INFO">Clicking element '//input[@value='Save']'.</msg>
<status status="PASS" starttime="20220704 23:44:11.854" endtime="20220704 23:44:11.949"/>
</kw>
<status status="PASS" starttime="20220704 23:44:11.105" endtime="20220704 23:44:11.949"/>
</kw>
<kw name="Verify Card Exists" library="ListComponent">
<arg>${list}</arg>
<arg>${new_name}</arg>
<doc>Verify that the card with card_name exists in the given list.</doc>
<kw name="Format String" library="String">
<var>${card_name_locator}</var>
<arg>${LIST_CARD_NAME}</arg>
<arg>list_name=${list_name}</arg>
<arg>card_name=${card_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 23:44:11.951" level="INFO">${card_name_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'New Name')]</msg>
<status status="PASS" starttime="20220704 23:44:11.950" endtime="20220704 23:44:11.951"/>
</kw>
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<arg>${card_name_locator}</arg>
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<msg timestamp="20220704 23:44:11.999" level="INFO">Element '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'New Name')]' is displayed.</msg>
<status status="PASS" starttime="20220704 23:44:11.951" endtime="20220704 23:44:11.999"/>
</kw>
<status status="PASS" starttime="20220704 23:44:11.950" endtime="20220704 23:44:11.999"/>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Go To Card Modal</arg>
<arg>list_name=${list}</arg>
<arg>card_name=${new_name}</arg>
<arg>AND</arg>
<arg>Delete Current Card</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Go To Card Modal" library="ListComponent">
<arg>list_name=${list}</arg>
<arg>card_name=${new_name}</arg>
<doc>It opens the modal for card_name in list_name</doc>
<kw name="Format String" library="String">
<var>${card_name_locator}</var>
<arg>${LIST_CARD_NAME}</arg>
<arg>list_name=${list_name}</arg>
<arg>card_name=${card_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 23:44:12.001" level="INFO">${card_name_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'New Name')]</msg>
<status status="PASS" starttime="20220704 23:44:12.001" endtime="20220704 23:44:12.001"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${card_name_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 23:44:12.001" endtime="20220704 23:44:12.050"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${card_name_locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 23:44:12.050" level="INFO">Clicking element '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'New Name')]'.</msg>
<status status="PASS" starttime="20220704 23:44:12.050" endtime="20220704 23:44:12.131"/>
</kw>
<status status="PASS" starttime="20220704 23:44:12.000" endtime="20220704 23:44:12.132"/>
</kw>
<kw name="Delete Current Card" library="CardModal">
<doc>The Keyword will first check if the card is archived,
if it's not, it will archive it to be able to delete it.</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${not_archived}</var>
<arg>Element Should Not Be Visible</arg>
<arg>${IS_ARCHIVED_MSG}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Element Should Not Be Visible" library="SeleniumLibrary">
<arg>${IS_ARCHIVED_MSG}</arg>
<doc>Verifies that the element identified by ``locator`` is NOT visible.</doc>
<msg timestamp="20220704 23:44:12.360" level="INFO">Element '//p[text()='This card is archived.']' did not exist.</msg>
<status status="PASS" starttime="20220704 23:44:12.133" endtime="20220704 23:44:12.360"/>
</kw>
<msg timestamp="20220704 23:44:12.360" level="INFO">${not_archived} = True</msg>
<status status="PASS" starttime="20220704 23:44:12.133" endtime="20220704 23:44:12.360"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${not_archived}</arg>
<arg>Archive Current Card</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Archive Current Card" library="CardModal">
<doc>Archives the current card from inside the modal.</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ARCHIVE_BUTTON}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 23:44:12.361" endtime="20220704 23:44:12.400"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${ARCHIVE_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 23:44:12.400" level="INFO">Clicking element '//span[@title='Archive']'.</msg>
<status status="PASS" starttime="20220704 23:44:12.400" endtime="20220704 23:44:12.490"/>
</kw>
<status status="PASS" starttime="20220704 23:44:12.361" endtime="20220704 23:44:12.490"/>
</kw>
<status status="PASS" starttime="20220704 23:44:12.361" endtime="20220704 23:44:12.490"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${DEFAULT_TIMEOUT}</arg>
<arg>${DEFAULT_INTERVAL}</arg>
<arg>Click Element</arg>
<arg>${DELETE_BUTTON}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${DELETE_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 23:44:12.491" level="INFO">Clicking element '//a[@title='Delete']'.</msg>
<status status="PASS" starttime="20220704 23:44:12.491" endtime="20220704 23:44:12.577"/>
</kw>
<status status="PASS" starttime="20220704 23:44:12.490" endtime="20220704 23:44:12.577"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${DELETE_CONFIRM}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 23:44:12.578" level="INFO">Clicking element '//input[@value='Delete']'.</msg>
<status status="PASS" starttime="20220704 23:44:12.577" endtime="20220704 23:44:12.828"/>
</kw>
<status status="PASS" starttime="20220704 23:44:12.132" endtime="20220704 23:44:12.828"/>
</kw>
<status status="PASS" starttime="20220704 23:44:12.000" endtime="20220704 23:44:12.828"/>
</kw>
<doc>Verify that it is possible to edit a card's Name
using the pencil icon in the board page.</doc>
<tag>card.title_board</tag>
<tag>gui</tag>
<tag>regression</tag>
<status status="PASS" starttime="20220704 23:44:10.609" endtime="20220704 23:44:12.828"/>
</test>
<test id="s1-s1-s2-t3" name="Leave A Comment On A Card" line="38">
<kw name="Set Test Variable" library="BuiltIn">
<arg>\${list}</arg>
<arg>To Do</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220704 23:44:12.830" level="INFO">${list} = To Do</msg>
<status status="PASS" starttime="20220704 23:44:12.830" endtime="20220704 23:44:12.830"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>\${card}</arg>
<arg>Test Card</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220704 23:44:12.831" level="INFO">${card} = Test Card</msg>
<status status="PASS" starttime="20220704 23:44:12.831" endtime="20220704 23:44:12.831"/>
</kw>
<kw name="Create Card In List" library="ListComponent">
<arg>${list}</arg>
<arg>${card}</arg>
<doc>Create a new card in the given list
Required args: list_name, card_name</doc>
<kw name="Format String" library="String">
<var>${add_card_locator}</var>
<arg>${LIST_ADD_CARD}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 23:44:12.832" level="INFO">${add_card_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Add a card')]</msg>
<status status="PASS" starttime="20220704 23:44:12.831" endtime="20220704 23:44:12.832"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${add_card_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 23:44:12.832" endtime="20220704 23:44:12.874"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${add_card_locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 23:44:12.875" level="INFO">Clicking element '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Add a card')]'.</msg>
<status status="PASS" starttime="20220704 23:44:12.874" endtime="20220704 23:44:12.942"/>
</kw>
<kw name="Format String" library="String">
<var>${textarea_locator}</var>
<arg>${CARD_TITLE_INPUT}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 23:44:12.943" level="INFO">${textarea_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//textarea[contains(@class, 'list-card-composer-textarea')]</msg>
<status status="PASS" starttime="20220704 23:44:12.943" endtime="20220704 23:44:12.943"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 23:44:12.943" endtime="20220704 23:44:12.999"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 23:44:12.999" level="INFO">Clicking element '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//textarea[contains(@class, 'list-card-composer-textarea')]'.</msg>
<status status="PASS" starttime="20220704 23:44:12.999" endtime="20220704 23:44:13.065"/>
</kw>
<kw name="Clear Element Text" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<doc>Clears the value of the text-input-element identified by ``locator``.</doc>
<status status="PASS" starttime="20220704 23:44:13.065" endtime="20220704 23:44:13.120"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<arg>${card_name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220704 23:44:13.121" level="INFO">Typing text 'Test Card' into text field '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//textarea[contains(@class, 'list-card-composer-textarea')]'.</msg>
<status status="PASS" starttime="20220704 23:44:13.120" endtime="20220704 23:44:13.238"/>
</kw>
<kw name="Format String" library="String">
<var>${confirm_locator}</var>
<arg>${CONFIRM_ADD_CARD}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 23:44:13.239" level="INFO">${confirm_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//input[@value='Add card']</msg>
<status status="PASS" starttime="20220704 23:44:13.239" endtime="20220704 23:44:13.239"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${confirm_locator}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220704 23:44:13.240" level="INFO">Clicking button '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//input[@value='Add card']'.</msg>
<status status="PASS" starttime="20220704 23:44:13.239" endtime="20220704 23:44:13.320"/>
</kw>
<status status="PASS" starttime="20220704 23:44:12.831" endtime="20220704 23:44:13.320"/>
</kw>
<kw name="Go To Card Modal" library="ListComponent">
<arg>${list}</arg>
<arg>${card}</arg>
<doc>It opens the modal for card_name in list_name</doc>
<kw name="Format String" library="String">
<var>${card_name_locator}</var>
<arg>${LIST_CARD_NAME}</arg>
<arg>list_name=${list_name}</arg>
<arg>card_name=${card_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 23:44:13.321" level="INFO">${card_name_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Test Card')]</msg>
<status status="PASS" starttime="20220704 23:44:13.321" endtime="20220704 23:44:13.322"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${card_name_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 23:44:13.322" endtime="20220704 23:44:13.382"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${card_name_locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 23:44:13.383" level="INFO">Clicking element '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Test Card')]'.</msg>
<status status="PASS" starttime="20220704 23:44:13.383" endtime="20220704 23:44:13.527"/>
</kw>
<status status="PASS" starttime="20220704 23:44:13.320" endtime="20220704 23:44:13.528"/>
</kw>
<kw name="Get Number Of Comments" library="CardModal">
<var>${comments_before}</var>
<doc>Return the number of comments present in the modal.</doc>
<kw name="Get Element Count" library="SeleniumLibrary">
<var>${n}</var>
<arg>${COMMENT_DIV}</arg>
<doc>Returns the number of elements matching ``locator``.</doc>
<msg timestamp="20220704 23:44:13.752" level="INFO">${n} = 0</msg>
<status status="PASS" starttime="20220704 23:44:13.528" endtime="20220704 23:44:13.752"/>
</kw>
<return>
<value>${n}</value>
<status status="PASS" starttime="20220704 23:44:13.752" endtime="20220704 23:44:13.752"/>
</return>
<msg timestamp="20220704 23:44:13.752" level="INFO">${comments_before} = 0</msg>
<status status="PASS" starttime="20220704 23:44:13.528" endtime="20220704 23:44:13.752"/>
</kw>
<kw name="Send A Comment" library="CardModal">
<arg>This is a test comment</arg>
<doc>Sends a comment under the "activity" section of the modal
required: comment</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${COMMENT_BOX_INPUT}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 23:44:13.753" endtime="20220704 23:44:13.814"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${COMMENT_BOX_INPUT}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 23:44:13.815" level="INFO">Clicking element '//div[@class='comment-box']/textarea'.</msg>
<status status="PASS" starttime="20220704 23:44:13.814" endtime="20220704 23:44:13.896"/>
</kw>
<kw name="Clear Element Text" library="SeleniumLibrary">
<arg>${COMMENT_BOX_INPUT}</arg>
<doc>Clears the value of the text-input-element identified by ``locator``.</doc>
<status status="PASS" starttime="20220704 23:44:13.896" endtime="20220704 23:44:13.948"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${COMMENT_BOX_INPUT}</arg>
<arg>${comment}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220704 23:44:13.948" level="INFO">Typing text 'This is a test comment' into text field '//div[@class='comment-box']/textarea'.</msg>
<status status="PASS" starttime="20220704 23:44:13.948" endtime="20220704 23:44:14.104"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${SAVE_COMMENT}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 23:44:14.105" level="INFO">Clicking element '//div[contains(@class, 'comment-controls')]//input[@value='Save']'.</msg>
<status status="PASS" starttime="20220704 23:44:14.104" endtime="20220704 23:44:14.296"/>
</kw>
<status status="PASS" starttime="20220704 23:44:13.752" endtime="20220704 23:44:14.296"/>
</kw>
<kw name="Get Number Of Comments" library="CardModal">
<var>${comments_after}</var>
<doc>Return the number of comments present in the modal.</doc>
<kw name="Get Element Count" library="SeleniumLibrary">
<var>${n}</var>
<arg>${COMMENT_DIV}</arg>
<doc>Returns the number of elements matching ``locator``.</doc>
<msg timestamp="20220704 23:44:14.331" level="INFO">${n} = 1</msg>
<status status="PASS" starttime="20220704 23:44:14.297" endtime="20220704 23:44:14.331"/>
</kw>
<return>
<value>${n}</value>
<status status="PASS" starttime="20220704 23:44:14.331" endtime="20220704 23:44:14.331"/>
</return>
<msg timestamp="20220704 23:44:14.332" level="INFO">${comments_after} = 1</msg>
<status status="PASS" starttime="20220704 23:44:14.297" endtime="20220704 23:44:14.332"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${comments_after} == ${comments_before}+${1}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220704 23:44:14.332" endtime="20220704 23:44:14.333"/>
</kw>
<kw name="Delete Current Card" library="CardModal" type="TEARDOWN">
<doc>The Keyword will first check if the card is archived,
if it's not, it will archive it to be able to delete it.</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${not_archived}</var>
<arg>Element Should Not Be Visible</arg>
<arg>${IS_ARCHIVED_MSG}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Element Should Not Be Visible" library="SeleniumLibrary">
<arg>${IS_ARCHIVED_MSG}</arg>
<doc>Verifies that the element identified by ``locator`` is NOT visible.</doc>
<msg timestamp="20220704 23:44:14.353" level="INFO">Element '//p[text()='This card is archived.']' did not exist.</msg>
<status status="PASS" starttime="20220704 23:44:14.334" endtime="20220704 23:44:14.353"/>
</kw>
<msg timestamp="20220704 23:44:14.353" level="INFO">${not_archived} = True</msg>
<status status="PASS" starttime="20220704 23:44:14.334" endtime="20220704 23:44:14.353"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${not_archived}</arg>
<arg>Archive Current Card</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Archive Current Card" library="CardModal">
<doc>Archives the current card from inside the modal.</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ARCHIVE_BUTTON}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 23:44:14.354" endtime="20220704 23:44:14.434"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${ARCHIVE_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 23:44:14.435" level="INFO">Clicking element '//span[@title='Archive']'.</msg>
<status status="PASS" starttime="20220704 23:44:14.434" endtime="20220704 23:44:14.529"/>
</kw>
<status status="PASS" starttime="20220704 23:44:14.353" endtime="20220704 23:44:14.529"/>
</kw>
<status status="PASS" starttime="20220704 23:44:14.353" endtime="20220704 23:44:14.529"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${DEFAULT_TIMEOUT}</arg>
<arg>${DEFAULT_INTERVAL}</arg>
<arg>Click Element</arg>
<arg>${DELETE_BUTTON}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${DELETE_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 23:44:14.530" level="INFO">Clicking element '//a[@title='Delete']'.</msg>
<status status="PASS" starttime="20220704 23:44:14.530" endtime="20220704 23:44:14.615"/>
</kw>
<status status="PASS" starttime="20220704 23:44:14.529" endtime="20220704 23:44:14.615"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${DELETE_CONFIRM}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 23:44:14.616" level="INFO">Clicking element '//input[@value='Delete']'.</msg>
<status status="PASS" starttime="20220704 23:44:14.615" endtime="20220704 23:44:14.796"/>
</kw>
<status status="PASS" starttime="20220704 23:44:14.334" endtime="20220704 23:44:14.796"/>
</kw>
<doc>Verify that it is possible to write a comment
on a card, through the card modal.</doc>
<tag>card.comment</tag>
<tag>gui</tag>
<tag>regression</tag>
<status status="PASS" starttime="20220704 23:44:12.829" endtime="20220704 23:44:14.796"/>
</test>
<test id="s1-s1-s2-t4" name="Verify A Card Can Be Deleted" line="52">
<kw name="Set Test Variable" library="BuiltIn">
<arg>\${list}</arg>
<arg>To Do</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220704 23:44:14.799" level="INFO">${list} = To Do</msg>
<status status="PASS" starttime="20220704 23:44:14.799" endtime="20220704 23:44:14.799"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>\${card}</arg>
<arg>Test Card</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220704 23:44:14.800" level="INFO">${card} = Test Card</msg>
<status status="PASS" starttime="20220704 23:44:14.800" endtime="20220704 23:44:14.800"/>
</kw>
<kw name="Get Number Of Cards In List" library="ListComponent">
<var>${cards_before}</var>
<arg>${list}</arg>
<doc>Return the number of cards present in a given list.
required: list_name</doc>
<kw name="Format String" library="String">
<var>${card_anchor_locator}</var>
<arg>${CARD_ANCHORS}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 23:44:14.801" level="INFO">${card_anchor_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(@class, 'list-card')]</msg>
<status status="PASS" starttime="20220704 23:44:14.801" endtime="20220704 23:44:14.801"/>
</kw>
<kw name="Get Element Count" library="SeleniumLibrary">
<var>${n}</var>
<arg>${card_anchor_locator}</arg>
<doc>Returns the number of elements matching ``locator``.</doc>
<msg timestamp="20220704 23:44:14.830" level="INFO">${n} = 0</msg>
<status status="PASS" starttime="20220704 23:44:14.802" endtime="20220704 23:44:14.830"/>
</kw>
<return>
<value>${n}</value>
<status status="PASS" starttime="20220704 23:44:14.830" endtime="20220704 23:44:14.830"/>
</return>
<msg timestamp="20220704 23:44:14.830" level="INFO">${cards_before} = 0</msg>
<status status="PASS" starttime="20220704 23:44:14.800" endtime="20220704 23:44:14.830"/>
</kw>
<kw name="Create Card In List" library="ListComponent">
<arg>${list}</arg>
<arg>${card}</arg>
<doc>Create a new card in the given list
Required args: list_name, card_name</doc>
<kw name="Format String" library="String">
<var>${add_card_locator}</var>
<arg>${LIST_ADD_CARD}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 23:44:14.831" level="INFO">${add_card_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Add a card')]</msg>
<status status="PASS" starttime="20220704 23:44:14.831" endtime="20220704 23:44:14.832"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${add_card_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 23:44:14.832" endtime="20220704 23:44:14.885"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${add_card_locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 23:44:14.886" level="INFO">Clicking element '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Add a card')]'.</msg>
<status status="PASS" starttime="20220704 23:44:14.885" endtime="20220704 23:44:14.960"/>
</kw>
<kw name="Format String" library="String">
<var>${textarea_locator}</var>
<arg>${CARD_TITLE_INPUT}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 23:44:14.961" level="INFO">${textarea_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//textarea[contains(@class, 'list-card-composer-textarea')]</msg>
<status status="PASS" starttime="20220704 23:44:14.960" endtime="20220704 23:44:14.961"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 23:44:14.961" endtime="20220704 23:44:15.009"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 23:44:15.010" level="INFO">Clicking element '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//textarea[contains(@class, 'list-card-composer-textarea')]'.</msg>
<status status="PASS" starttime="20220704 23:44:15.010" endtime="20220704 23:44:15.062"/>
</kw>
<kw name="Clear Element Text" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<doc>Clears the value of the text-input-element identified by ``locator``.</doc>
<status status="PASS" starttime="20220704 23:44:15.062" endtime="20220704 23:44:15.105"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<arg>${card_name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220704 23:44:15.106" level="INFO">Typing text 'Test Card' into text field '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//textarea[contains(@class, 'list-card-composer-textarea')]'.</msg>
<status status="PASS" starttime="20220704 23:44:15.105" endtime="20220704 23:44:15.204"/>
</kw>
<kw name="Format String" library="String">
<var>${confirm_locator}</var>
<arg>${CONFIRM_ADD_CARD}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 23:44:15.205" level="INFO">${confirm_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//input[@value='Add card']</msg>
<status status="PASS" starttime="20220704 23:44:15.204" endtime="20220704 23:44:15.205"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${confirm_locator}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220704 23:44:15.205" level="INFO">Clicking button '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//input[@value='Add card']'.</msg>
<status status="PASS" starttime="20220704 23:44:15.205" endtime="20220704 23:44:15.282"/>
</kw>
<status status="PASS" starttime="20220704 23:44:14.830" endtime="20220704 23:44:15.283"/>
</kw>
<kw name="Go To Card Modal" library="ListComponent">
<arg>${list}</arg>
<arg>${card}</arg>
<doc>It opens the modal for card_name in list_name</doc>
<kw name="Format String" library="String">
<var>${card_name_locator}</var>
<arg>${LIST_CARD_NAME}</arg>
<arg>list_name=${list_name}</arg>
<arg>card_name=${card_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 23:44:15.284" level="INFO">${card_name_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Test Card')]</msg>
<status status="PASS" starttime="20220704 23:44:15.283" endtime="20220704 23:44:15.284"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${card_name_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 23:44:15.284" endtime="20220704 23:44:15.337"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${card_name_locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 23:44:15.338" level="INFO">Clicking element '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Test Card')]'.</msg>
<status status="PASS" starttime="20220704 23:44:15.338" endtime="20220704 23:44:15.397"/>
</kw>
<status status="PASS" starttime="20220704 23:44:15.283" endtime="20220704 23:44:15.397"/>
</kw>
<kw name="Delete Current Card" library="CardModal">
<doc>The Keyword will first check if the card is archived,
if it's not, it will archive it to be able to delete it.</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${not_archived}</var>
<arg>Element Should Not Be Visible</arg>
<arg>${IS_ARCHIVED_MSG}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Element Should Not Be Visible" library="SeleniumLibrary">
<arg>${IS_ARCHIVED_MSG}</arg>
<doc>Verifies that the element identified by ``locator`` is NOT visible.</doc>
<msg timestamp="20220704 23:44:15.647" level="INFO">Element '//p[text()='This card is archived.']' did not exist.</msg>
<status status="PASS" starttime="20220704 23:44:15.398" endtime="20220704 23:44:15.647"/>
</kw>
<msg timestamp="20220704 23:44:15.647" level="INFO">${not_archived} = True</msg>
<status status="PASS" starttime="20220704 23:44:15.398" endtime="20220704 23:44:15.647"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${not_archived}</arg>
<arg>Archive Current Card</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Archive Current Card" library="CardModal">
<doc>Archives the current card from inside the modal.</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ARCHIVE_BUTTON}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 23:44:15.648" endtime="20220704 23:44:15.733"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${ARCHIVE_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 23:44:15.733" level="INFO">Clicking element '//span[@title='Archive']'.</msg>
<status status="PASS" starttime="20220704 23:44:15.733" endtime="20220704 23:44:15.816"/>
</kw>
<status status="PASS" starttime="20220704 23:44:15.648" endtime="20220704 23:44:15.816"/>
</kw>
<status status="PASS" starttime="20220704 23:44:15.648" endtime="20220704 23:44:15.816"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${DEFAULT_TIMEOUT}</arg>
<arg>${DEFAULT_INTERVAL}</arg>
<arg>Click Element</arg>
<arg>${DELETE_BUTTON}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${DELETE_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 23:44:15.817" level="INFO">Clicking element '//a[@title='Delete']'.</msg>
<status status="PASS" starttime="20220704 23:44:15.817" endtime="20220704 23:44:15.897"/>
</kw>
<status status="PASS" starttime="20220704 23:44:15.817" endtime="20220704 23:44:15.897"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${DELETE_CONFIRM}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 23:44:15.898" level="INFO">Clicking element '//input[@value='Delete']'.</msg>
<status status="PASS" starttime="20220704 23:44:15.897" endtime="20220704 23:44:16.140"/>
</kw>
<status status="PASS" starttime="20220704 23:44:15.398" endtime="20220704 23:44:16.140"/>
</kw>
<kw name="Get Number Of Cards In List" library="ListComponent">
<var>${cards_after}</var>
<arg>${list}</arg>
<doc>Return the number of cards present in a given list.
required: list_name</doc>
<kw name="Format String" library="String">
<var>${card_anchor_locator}</var>
<arg>${CARD_ANCHORS}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 23:44:16.141" level="INFO">${card_anchor_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(@class, 'list-card')]</msg>
<status status="PASS" starttime="20220704 23:44:16.141" endtime="20220704 23:44:16.141"/>
</kw>
<kw name="Get Element Count" library="SeleniumLibrary">
<var>${n}</var>
<arg>${card_anchor_locator}</arg>
<doc>Returns the number of elements matching ``locator``.</doc>
<msg timestamp="20220704 23:44:16.179" level="INFO">${n} = 0</msg>
<status status="PASS" starttime="20220704 23:44:16.141" endtime="20220704 23:44:16.179"/>
</kw>
<return>
<value>${n}</value>
<status status="PASS" starttime="20220704 23:44:16.179" endtime="20220704 23:44:16.179"/>
</return>
<msg timestamp="20220704 23:44:16.179" level="INFO">${cards_after} = 0</msg>
<status status="PASS" starttime="20220704 23:44:16.140" endtime="20220704 23:44:16.179"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${cards_before} == ${cards_after}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220704 23:44:16.180" endtime="20220704 23:44:16.180"/>
</kw>
<doc>Verify that it is possible to delete a card
from inside the card modal.</doc>
<tag>card.delete</tag>
<tag>gui</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220704 23:44:14.798" endtime="20220704 23:44:16.180"/>
</test>
<test id="s1-s1-s2-t5" name="Card Can Be Dragged To Another List" line="65">
<kw name="Set Test Variable" library="BuiltIn">
<arg>\${list}</arg>
<arg>To Do</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220704 23:44:16.182" level="INFO">${list} = To Do</msg>
<status status="PASS" starttime="20220704 23:44:16.182" endtime="20220704 23:44:16.182"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>\${card}</arg>
<arg>Test Card</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220704 23:44:16.182" level="INFO">${card} = Test Card</msg>
<status status="PASS" starttime="20220704 23:44:16.182" endtime="20220704 23:44:16.182"/>
</kw>
<kw name="Create Card In List" library="ListComponent">
<arg>${list}</arg>
<arg>${card}</arg>
<doc>Create a new card in the given list
Required args: list_name, card_name</doc>
<kw name="Format String" library="String">
<var>${add_card_locator}</var>
<arg>${LIST_ADD_CARD}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 23:44:16.183" level="INFO">${add_card_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Add a card')]</msg>
<status status="PASS" starttime="20220704 23:44:16.183" endtime="20220704 23:44:16.184"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${add_card_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 23:44:16.184" endtime="20220704 23:44:16.225"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${add_card_locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 23:44:16.226" level="INFO">Clicking element '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Add a card')]'.</msg>
<status status="PASS" starttime="20220704 23:44:16.225" endtime="20220704 23:44:16.346"/>
</kw>
<kw name="Format String" library="String">
<var>${textarea_locator}</var>
<arg>${CARD_TITLE_INPUT}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 23:44:16.346" level="INFO">${textarea_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//textarea[contains(@class, 'list-card-composer-textarea')]</msg>
<status status="PASS" starttime="20220704 23:44:16.346" endtime="20220704 23:44:16.346"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 23:44:16.347" endtime="20220704 23:44:16.487"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 23:44:16.487" level="INFO">Clicking element '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//textarea[contains(@class, 'list-card-composer-textarea')]'.</msg>
<status status="PASS" starttime="20220704 23:44:16.487" endtime="20220704 23:44:16.654"/>
</kw>
<kw name="Clear Element Text" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<doc>Clears the value of the text-input-element identified by ``locator``.</doc>
<status status="PASS" starttime="20220704 23:44:16.654" endtime="20220704 23:44:16.695"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<arg>${card_name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220704 23:44:16.696" level="INFO">Typing text 'Test Card' into text field '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//textarea[contains(@class, 'list-card-composer-textarea')]'.</msg>
<status status="PASS" starttime="20220704 23:44:16.696" endtime="20220704 23:44:16.901"/>
</kw>
<kw name="Format String" library="String">
<var>${confirm_locator}</var>
<arg>${CONFIRM_ADD_CARD}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 23:44:16.902" level="INFO">${confirm_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//input[@value='Add card']</msg>
<status status="PASS" starttime="20220704 23:44:16.901" endtime="20220704 23:44:16.902"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${confirm_locator}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220704 23:44:16.902" level="INFO">Clicking button '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//input[@value='Add card']'.</msg>
<status status="PASS" starttime="20220704 23:44:16.902" endtime="20220704 23:44:17.027"/>
</kw>
<status status="PASS" starttime="20220704 23:44:16.183" endtime="20220704 23:44:17.027"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>\${list2}</arg>
<arg>Doing</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220704 23:44:17.028" level="INFO">${list2} = Doing</msg>
<status status="PASS" starttime="20220704 23:44:17.027" endtime="20220704 23:44:17.028"/>
</kw>
<kw name="Drag Card From One List To Another" library="ListComponent">
<arg>${card}</arg>
<arg>${list}</arg>
<arg>${list2}</arg>
<doc>required: card_name, source_list_name, target_list_name</doc>
<kw name="Format String" library="String">
<var>${card_locator}</var>
<arg>${LIST_CARD_NAME}</arg>
<arg>list_name=${list1_name}</arg>
<arg>card_name=${card_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 23:44:17.029" level="INFO">${card_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Test Card')]</msg>
<status status="PASS" starttime="20220704 23:44:17.029" endtime="20220704 23:44:17.029"/>
</kw>
<kw name="Format String" library="String">
<var>${list2_locator}</var>
<arg>${LIST_DIV}</arg>
<arg>list_name=${list2_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 23:44:17.030" level="INFO">${list2_locator} = //h2[text()='Doing']//ancestor::div[contains(@class, 'list-content')]</msg>
<status status="PASS" starttime="20220704 23:44:17.030" endtime="20220704 23:44:17.030"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${card_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 23:44:17.030" endtime="20220704 23:44:17.140"/>
</kw>
<kw name="Drag And Drop" library="SeleniumLibrary">
<arg>${card_locator}</arg>
<arg>${list2_locator}</arg>
<doc>Drags the element identified by ``locator`` into the ``target`` element.</doc>
<status status="PASS" starttime="20220704 23:44:17.140" endtime="20220704 23:44:17.762"/>
</kw>
<status status="PASS" starttime="20220704 23:44:17.028" endtime="20220704 23:44:17.763"/>
</kw>
<kw name="Card Should Be In List" library="ListComponent">
<arg>${card}</arg>
<arg>${list2}</arg>
<doc>Check that a card is visible and in the given list
required: card_name, list_name</doc>
<kw name="Format String" library="String">
<var>${card_locator}</var>
<arg>${LIST_CARD_NAME}</arg>
<arg>list_name=${list_name}</arg>
<arg>card_name=${card_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 23:44:17.764" level="INFO">${card_locator} = //h2[text()='Doing']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Test Card')]</msg>
<status status="PASS" starttime="20220704 23:44:17.763" endtime="20220704 23:44:17.764"/>
</kw>
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<arg>${card_locator}</arg>
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<msg timestamp="20220704 23:44:17.882" level="INFO">Element '//h2[text()='Doing']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Test Card')]' is displayed.</msg>
<status status="PASS" starttime="20220704 23:44:17.764" endtime="20220704 23:44:17.882"/>
</kw>
<status status="PASS" starttime="20220704 23:44:17.763" endtime="20220704 23:44:17.882"/>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Go To Card Modal</arg>
<arg>${list2}</arg>
<arg>${card}</arg>
<arg>AND</arg>
<arg>Delete Current Card</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Go To Card Modal" library="ListComponent">
<arg>${list2}</arg>
<arg>${card}</arg>
<doc>It opens the modal for card_name in list_name</doc>
<kw name="Format String" library="String">
<var>${card_name_locator}</var>
<arg>${LIST_CARD_NAME}</arg>
<arg>list_name=${list_name}</arg>
<arg>card_name=${card_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 23:44:17.884" level="INFO">${card_name_locator} = //h2[text()='Doing']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Test Card')]</msg>
<status status="PASS" starttime="20220704 23:44:17.883" endtime="20220704 23:44:17.884"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${card_name_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 23:44:17.884" endtime="20220704 23:44:17.958"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${card_name_locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 23:44:17.958" level="INFO">Clicking element '//h2[text()='Doing']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Test Card')]'.</msg>
<status status="PASS" starttime="20220704 23:44:17.958" endtime="20220704 23:44:18.114"/>
</kw>
<status status="PASS" starttime="20220704 23:44:17.883" endtime="20220704 23:44:18.114"/>
</kw>
<kw name="Delete Current Card" library="CardModal">
<doc>The Keyword will first check if the card is archived,
if it's not, it will archive it to be able to delete it.</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${not_archived}</var>
<arg>Element Should Not Be Visible</arg>
<arg>${IS_ARCHIVED_MSG}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Element Should Not Be Visible" library="SeleniumLibrary">
<arg>${IS_ARCHIVED_MSG}</arg>
<doc>Verifies that the element identified by ``locator`` is NOT visible.</doc>
<msg timestamp="20220704 23:44:18.807" level="INFO">Element '//p[text()='This card is archived.']' did not exist.</msg>
<status status="PASS" starttime="20220704 23:44:18.115" endtime="20220704 23:44:18.807"/>
</kw>
<msg timestamp="20220704 23:44:18.807" level="INFO">${not_archived} = True</msg>
<status status="PASS" starttime="20220704 23:44:18.115" endtime="20220704 23:44:18.807"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${not_archived}</arg>
<arg>Archive Current Card</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Archive Current Card" library="CardModal">
<doc>Archives the current card from inside the modal.</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ARCHIVE_BUTTON}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 23:44:18.808" endtime="20220704 23:44:18.858"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${ARCHIVE_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 23:44:18.858" level="INFO">Clicking element '//span[@title='Archive']'.</msg>
<status status="PASS" starttime="20220704 23:44:18.858" endtime="20220704 23:44:19.025"/>
</kw>
<status status="PASS" starttime="20220704 23:44:18.808" endtime="20220704 23:44:19.025"/>
</kw>
<status status="PASS" starttime="20220704 23:44:18.807" endtime="20220704 23:44:19.025"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${DEFAULT_TIMEOUT}</arg>
<arg>${DEFAULT_INTERVAL}</arg>
<arg>Click Element</arg>
<arg>${DELETE_BUTTON}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${DELETE_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 23:44:19.026" level="INFO">Clicking element '//a[@title='Delete']'.</msg>
<status status="PASS" starttime="20220704 23:44:19.026" endtime="20220704 23:44:19.129"/>
</kw>
<status status="PASS" starttime="20220704 23:44:19.026" endtime="20220704 23:44:19.129"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${DELETE_CONFIRM}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 23:44:19.130" level="INFO">Clicking element '//input[@value='Delete']'.</msg>
<status status="PASS" starttime="20220704 23:44:19.129" endtime="20220704 23:44:19.402"/>
</kw>
<status status="PASS" starttime="20220704 23:44:18.114" endtime="20220704 23:44:19.403"/>
</kw>
<status status="PASS" starttime="20220704 23:44:17.882" endtime="20220704 23:44:19.403"/>
</kw>
<doc>Verify that a card can be dragged from one list to another.</doc>
<tag>card.drag</tag>
<tag>gui</tag>
<tag>regression</tag>
<status status="PASS" starttime="20220704 23:44:16.181" endtime="20220704 23:44:19.403"/>
</test>
<test id="s1-s1-s2-t6" name="Card Can Be Moved To Another Board" line="79">
<kw name="Create A Board" library="Board">
<var>${board2}</var>
<arg>CardTestBoard2</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 23:44:19.408" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 23:44:19.408" endtime="20220704 23:44:19.408"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 23:44:19.408" endtime="20220704 23:44:19.409"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 23:44:19.411" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220704 23:44:19.409" endtime="20220704 23:44:19.411"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 23:44:19.608" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 23:44:19.411" endtime="20220704 23:44:19.608"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 23:44:19.608" endtime="20220704 23:44:19.608"/>
</return>
<msg timestamp="20220704 23:44:19.608" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 23:44:19.406" endtime="20220704 23:44:19.608"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 23:44:19.608" endtime="20220704 23:44:19.608"/>
</return>
<msg timestamp="20220704 23:44:19.609" level="INFO">${board2} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 23:44:19.406" endtime="20220704 23:44:19.609"/>
</kw>
<kw name="Go Home" library="TrelloUpperMenu">
<doc>it goes to the gome page</doc>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${TRELLO_ICON}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220704 23:44:19.610" endtime="20220704 23:44:19.706"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${TRELLO_ICON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 23:44:19.707" level="INFO">Clicking element 'xpath://a[@aria-label='Back to home']'.</msg>
<status status="PASS" starttime="20220704 23:44:19.706" endtime="20220704 23:44:20.013"/>
</kw>
<status status="PASS" starttime="20220704 23:44:19.609" endtime="20220704 23:44:20.013"/>
</kw>
<kw name="Go To Board" library="BoardsPage">
<arg>CardTestBoard2</arg>
<doc>Receives the board name and goes to that board's page.</doc>
<kw name="Format String" library="String">
<var>${locator}</var>
<arg>${BOARD_BUTTON}</arg>
<arg>${board_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 23:44:20.014" level="INFO">${locator} = //div[@title="CardTestBoard2"]</msg>
<status status="PASS" starttime="20220704 23:44:20.014" endtime="20220704 23:44:20.014"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 23:44:20.014" endtime="20220704 23:44:20.486"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 23:44:20.487" level="INFO">Clicking element '//div[@title="CardTestBoard2"]'.</msg>
<status status="PASS" starttime="20220704 23:44:20.487" endtime="20220704 23:44:20.703"/>
</kw>
<status status="PASS" starttime="20220704 23:44:20.013" endtime="20220704 23:44:20.704"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>\${list}</arg>
<arg>To Do</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220704 23:44:20.704" level="INFO">${list} = To Do</msg>
<status status="PASS" starttime="20220704 23:44:20.704" endtime="20220704 23:44:20.704"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>\${card}</arg>
<arg>Test Card2</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220704 23:44:20.705" level="INFO">${card} = Test Card2</msg>
<status status="PASS" starttime="20220704 23:44:20.705" endtime="20220704 23:44:20.705"/>
</kw>
<kw name="Create Card In List" library="ListComponent">
<arg>${list}</arg>
<arg>${card}</arg>
<doc>Create a new card in the given list
Required args: list_name, card_name</doc>
<kw name="Format String" library="String">
<var>${add_card_locator}</var>
<arg>${LIST_ADD_CARD}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 23:44:20.706" level="INFO">${add_card_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Add a card')]</msg>
<status status="PASS" starttime="20220704 23:44:20.705" endtime="20220704 23:44:20.706"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${add_card_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 23:44:20.706" endtime="20220704 23:44:21.434"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${add_card_locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 23:44:21.434" level="INFO">Clicking element '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Add a card')]'.</msg>
<status status="PASS" starttime="20220704 23:44:21.434" endtime="20220704 23:44:21.631"/>
</kw>
<kw name="Format String" library="String">
<var>${textarea_locator}</var>
<arg>${CARD_TITLE_INPUT}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 23:44:21.632" level="INFO">${textarea_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//textarea[contains(@class, 'list-card-composer-textarea')]</msg>
<status status="PASS" starttime="20220704 23:44:21.631" endtime="20220704 23:44:21.632"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 23:44:21.632" endtime="20220704 23:44:21.712"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 23:44:21.713" level="INFO">Clicking element '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//textarea[contains(@class, 'list-card-composer-textarea')]'.</msg>
<status status="PASS" starttime="20220704 23:44:21.713" endtime="20220704 23:44:21.853"/>
</kw>
<kw name="Clear Element Text" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<doc>Clears the value of the text-input-element identified by ``locator``.</doc>
<status status="PASS" starttime="20220704 23:44:21.854" endtime="20220704 23:44:21.924"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<arg>${card_name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220704 23:44:21.924" level="INFO">Typing text 'Test Card2' into text field '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//textarea[contains(@class, 'list-card-composer-textarea')]'.</msg>
<status status="PASS" starttime="20220704 23:44:21.924" endtime="20220704 23:44:22.140"/>
</kw>
<kw name="Format String" library="String">
<var>${confirm_locator}</var>
<arg>${CONFIRM_ADD_CARD}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 23:44:22.141" level="INFO">${confirm_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//input[@value='Add card']</msg>
<status status="PASS" starttime="20220704 23:44:22.141" endtime="20220704 23:44:22.141"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${confirm_locator}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220704 23:44:22.142" level="INFO">Clicking button '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//input[@value='Add card']'.</msg>
<status status="PASS" starttime="20220704 23:44:22.142" endtime="20220704 23:44:22.219"/>
</kw>
<status status="PASS" starttime="20220704 23:44:20.705" endtime="20220704 23:44:22.219"/>
</kw>
<kw name="Go To Card Modal" library="ListComponent">
<arg>${list}</arg>
<arg>${card}</arg>
<doc>It opens the modal for card_name in list_name</doc>
<kw name="Format String" library="String">
<var>${card_name_locator}</var>
<arg>${LIST_CARD_NAME}</arg>
<arg>list_name=${list_name}</arg>
<arg>card_name=${card_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 23:44:22.221" level="INFO">${card_name_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Test Card2')]</msg>
<status status="PASS" starttime="20220704 23:44:22.220" endtime="20220704 23:44:22.221"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${card_name_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 23:44:22.221" endtime="20220704 23:44:22.276"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${card_name_locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 23:44:22.277" level="INFO">Clicking element '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Test Card2')]'.</msg>
<status status="PASS" starttime="20220704 23:44:22.277" endtime="20220704 23:44:22.338"/>
</kw>
<status status="PASS" starttime="20220704 23:44:22.219" endtime="20220704 23:44:22.339"/>
</kw>
<kw name="Move Card To Another Board" library="CardModal">
<arg>CardTestBoard</arg>
<doc>Moves the card using the "name of destination board"
required: name (name of the destination board)</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${MOVE_BUTTON}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 23:44:22.339" endtime="20220704 23:44:22.649"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${MOVE_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 23:44:22.650" level="INFO">Clicking element '//a[@title='Move']'.</msg>
<status status="PASS" starttime="20220704 23:44:22.650" endtime="20220704 23:44:22.749"/>
</kw>
<kw name="Select From List By Label" library="SeleniumLibrary">
<arg>${SELECT_DESTINATION}</arg>
<arg>${name_of_destination_board}</arg>
<doc>Selects options from selection list ``locator`` by ``labels``.</doc>
<msg timestamp="20220704 23:44:22.749" level="INFO">Selecting options from selection list '//select[@data-test-id='move-board-select']' by label CardTestBoard.</msg>
<status status="PASS" starttime="20220704 23:44:22.749" endtime="20220704 23:44:22.860"/>
</kw>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${ACCEPT_MOVE_BUTTON}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220704 23:44:22.860" endtime="20220704 23:44:23.143"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${ACCEPT_MOVE_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 23:44:23.144" level="INFO">Clicking element '//input[@value="Move"]'.</msg>
<status status="PASS" starttime="20220704 23:44:23.143" endtime="20220704 23:44:23.304"/>
</kw>
<kw name="Wait Until Element Is Not Visible" library="SeleniumLibrary">
<arg>${ARCHIVE_BUTTON}</arg>
<doc>Waits until the element ``locator`` is not visible.</doc>
<status status="PASS" starttime="20220704 23:44:23.304" endtime="20220704 23:44:23.319"/>
</kw>
<status status="PASS" starttime="20220704 23:44:22.339" endtime="20220704 23:44:23.319"/>
</kw>
<kw name="Get Number Of Cards In List" library="ListComponent">
<var>${Cards_On_list}</var>
<arg>To Do</arg>
<doc>Return the number of cards present in a given list.
required: list_name</doc>
<kw name="Format String" library="String">
<var>${card_anchor_locator}</var>
<arg>${CARD_ANCHORS}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 23:44:23.320" level="INFO">${card_anchor_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(@class, 'list-card')]</msg>
<status status="PASS" starttime="20220704 23:44:23.320" endtime="20220704 23:44:23.320"/>
</kw>
<kw name="Get Element Count" library="SeleniumLibrary">
<var>${n}</var>
<arg>${card_anchor_locator}</arg>
<doc>Returns the number of elements matching ``locator``.</doc>
<msg timestamp="20220704 23:44:23.332" level="INFO">${n} = 0</msg>
<status status="PASS" starttime="20220704 23:44:23.321" endtime="20220704 23:44:23.332"/>
</kw>
<return>
<value>${n}</value>
<status status="PASS" starttime="20220704 23:44:23.332" endtime="20220704 23:44:23.332"/>
</return>
<msg timestamp="20220704 23:44:23.332" level="INFO">${Cards_On_list} = 0</msg>
<status status="PASS" starttime="20220704 23:44:23.319" endtime="20220704 23:44:23.332"/>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<var>${0}</var>
<arg>0</arg>
<doc>Converts the given item to an integer number.</doc>
<msg timestamp="20220704 23:44:23.333" level="INFO">${0} = 0</msg>
<status status="PASS" starttime="20220704 23:44:23.332" endtime="20220704 23:44:23.333"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${Cards_On_list}</arg>
<arg>${0}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220704 23:44:23.333" endtime="20220704 23:44:23.333"/>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Close Browser</arg>
<arg>AND</arg>
<arg>Wait Until Keyword Succeeds</arg>
<arg>${DEFAULT_TIMEOUT}</arg>
<arg>${DEFAULT_INTERVAL}</arg>
<arg>Delete A Board</arg>
<arg>${board2.json()}[id]</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20220704 23:44:23.334" endtime="20220704 23:44:23.427"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${DEFAULT_TIMEOUT}</arg>
<arg>${DEFAULT_INTERVAL}</arg>
<arg>Delete A Board</arg>
<arg>${board2.json()}[id]</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${board2.json()}[id]</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 23:44:23.431" level="INFO">${url} = boards/62c37b53a9abb93e3215a941</msg>
<status status="PASS" starttime="20220704 23:44:23.431" endtime="20220704 23:44:23.431"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 23:44:23.516" level="INFO">${response} = None</msg>
<msg timestamp="20220704 23:44:23.516" level="FAIL">InvalidExpectedStatus: it was expected the status 200 but the status was 429</msg>
<status status="FAIL" starttime="20220704 23:44:23.431" endtime="20220704 23:44:23.517"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 23:44:23.517" endtime="20220704 23:44:23.517"/>
</return>
<msg timestamp="20220704 23:44:23.518" level="INFO">${response} = None</msg>
<status status="FAIL" starttime="20220704 23:44:23.430" endtime="20220704 23:44:23.518"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 23:44:23.518" endtime="20220704 23:44:23.518"/>
</return>
<status status="FAIL" starttime="20220704 23:44:23.428" endtime="20220704 23:44:23.518"/>
</kw>
<kw name="Delete A Board" library="Board">
<arg>${board2.json()}[id]</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 23:44:26.524" level="INFO">${url} = boards/62c37b53a9abb93e3215a941</msg>
<status status="PASS" starttime="20220704 23:44:26.523" endtime="20220704 23:44:26.524"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 23:44:26.850" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 23:44:26.524" endtime="20220704 23:44:26.850"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 23:44:26.851" endtime="20220704 23:44:26.851"/>
</return>
<msg timestamp="20220704 23:44:26.851" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 23:44:26.522" endtime="20220704 23:44:26.851"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 23:44:26.851" endtime="20220704 23:44:26.851"/>
</return>
<status status="PASS" starttime="20220704 23:44:26.519" endtime="20220704 23:44:26.851"/>
</kw>
<status status="PASS" starttime="20220704 23:44:23.427" endtime="20220704 23:44:26.851"/>
</kw>
<status status="PASS" starttime="20220704 23:44:23.333" endtime="20220704 23:44:26.852"/>
</kw>
<doc>Creates a new board through API, then goes to the
second board, creates a card and moves it to the other board</doc>
<tag>card.move</tag>
<tag>gui</tag>
<tag>regression</tag>
<status status="PASS" starttime="20220704 23:44:19.405" endtime="20220704 23:44:26.852"/>
</test>
<kw name="Cards Suite Teardown" type="TEARDOWN">
<doc>Deletes the created board through API and closes all browsers.</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${DEFAULT_TIMEOUT}</arg>
<arg>${DEFAULT_INTERVAL}</arg>
<arg>Delete A Board</arg>
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 23:44:26.856" level="INFO">${url} = boards/62c37b3f8ccb7215250d7a0d</msg>
<status status="PASS" starttime="20220704 23:44:26.856" endtime="20220704 23:44:26.856"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 23:44:27.234" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 23:44:26.856" endtime="20220704 23:44:27.234"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 23:44:27.234" endtime="20220704 23:44:27.234"/>
</return>
<msg timestamp="20220704 23:44:27.234" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 23:44:26.855" endtime="20220704 23:44:27.234"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 23:44:27.234" endtime="20220704 23:44:27.234"/>
</return>
<status status="PASS" starttime="20220704 23:44:26.854" endtime="20220704 23:44:27.234"/>
</kw>
<status status="PASS" starttime="20220704 23:44:26.853" endtime="20220704 23:44:27.234"/>
</kw>
<kw name="Delete All Sessions" library="request_own_library">
<status status="PASS" starttime="20220704 23:44:27.235" endtime="20220704 23:44:27.236"/>
</kw>
<kw name="Close All Browsers" library="SeleniumLibrary">
<doc>Closes all open browsers and resets the browser cache.</doc>
<status status="PASS" starttime="20220704 23:44:27.236" endtime="20220704 23:44:27.236"/>
</kw>
<status status="PASS" starttime="20220704 23:44:26.853" endtime="20220704 23:44:27.236"/>
</kw>
<doc>Test Cases for Cards Feature</doc>
<status status="PASS" starttime="20220704 23:43:59.195" endtime="20220704 23:44:27.236"/>
</suite>
<suite id="s1-s1-s3" name="Trello Gui Labels" source="/trello/gui/trello_gui_labels.robot">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Create Trello Session</arg>
<arg>Setup Board</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Create Trello Session" library="TrelloAPI">
<doc>Creates a Trello Session</doc>
<kw name="Create Session" library="request_own_library">
<arg>${API_BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<status status="PASS" starttime="20220704 23:44:27.259" endtime="20220704 23:44:27.259"/>
</kw>
<status status="PASS" starttime="20220704 23:44:27.259" endtime="20220704 23:44:27.260"/>
</kw>
<kw name="Setup Board">
<doc>Creates a board and saves its ID</doc>
<kw name="Create A Board" library="Board">
<var>${BOARD}</var>
<arg>TestBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 23:44:27.261" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 23:44:27.261" endtime="20220704 23:44:27.261"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 23:44:27.261" endtime="20220704 23:44:27.261"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 23:44:27.263" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220704 23:44:27.262" endtime="20220704 23:44:27.263"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 23:44:27.575" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 23:44:27.263" endtime="20220704 23:44:27.575"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 23:44:27.576" endtime="20220704 23:44:27.576"/>
</return>
<msg timestamp="20220704 23:44:27.576" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 23:44:27.260" endtime="20220704 23:44:27.576"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 23:44:27.576" endtime="20220704 23:44:27.576"/>
</return>
<msg timestamp="20220704 23:44:27.577" level="INFO">${BOARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 23:44:27.260" endtime="20220704 23:44:27.577"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_BOARD_ID}</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220704 23:44:27.579" level="INFO">${TEST_SUITE_BOARD_ID} = 62c37b5bd13f7e21b5d845c4</msg>
<status status="PASS" starttime="20220704 23:44:27.577" endtime="20220704 23:44:27.579"/>
</kw>
<status status="PASS" starttime="20220704 23:44:27.260" endtime="20220704 23:44:27.579"/>
</kw>
<status status="PASS" starttime="20220704 23:44:27.259" endtime="20220704 23:44:27.579"/>
</kw>
<test id="s1-s1-s3-t1" name="filter label" line="21">
<kw name="Open Browser From Environment" library="CommonGUI">
<arg>${LOGIN_URL}</arg>
<doc>This keywords takes REMOTE and BROWSER variables
from the environment automatically and only needs a url</doc>
<if>
<branch type="IF" condition="${is_remote}">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${url}</arg>
<arg>${BROWSER}</arg>
<arg>remote_url=http://selenium-hub:4444</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20220704 23:44:27.582" level="INFO">Opening browser 'chrome' to base url 'https://trello.com/login' through remote server at 'http://selenium-hub:4444'.</msg>
<status status="PASS" starttime="20220704 23:44:27.581" endtime="20220704 23:44:28.998"/>
</kw>
<status status="PASS" starttime="20220704 23:44:27.581" endtime="20220704 23:44:28.998"/>
</branch>
<branch type="ELSE">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${url}</arg>
<arg>${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<status status="NOT RUN" starttime="20220704 23:44:28.998" endtime="20220704 23:44:28.998"/>
</kw>
<status status="NOT RUN" starttime="20220704 23:44:28.998" endtime="20220704 23:44:28.998"/>
</branch>
<status status="PASS" starttime="20220704 23:44:27.581" endtime="20220704 23:44:28.998"/>
</if>
<status status="PASS" starttime="20220704 23:44:27.580" endtime="20220704 23:44:28.998"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20220704 23:44:28.999" endtime="20220704 23:44:29.119"/>
</kw>
<kw name="Login To Trello" library="LoginPage">
<arg>${DEFAULT_EMAIL}</arg>
<arg>${DEFAULT_PASSWORD}</arg>
<doc>High-level keyword for logging in to Trello</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220704 23:44:29.132" level="INFO">${url} = https://trello.com/login</msg>
<status status="PASS" starttime="20220704 23:44:29.120" endtime="20220704 23:44:29.132"/>
</kw>
<if>
<branch type="IF" condition="'${url}' != '${LOGIN_URL}'">
<kw name="Go To" library="SeleniumLibrary">
<arg>${LOGIN_URL}</arg>
<doc>Navigates the current browser window to the provided ``url``.</doc>
<status status="NOT RUN" starttime="20220704 23:44:29.132" endtime="20220704 23:44:29.132"/>
</kw>
<status status="NOT RUN" starttime="20220704 23:44:29.132" endtime="20220704 23:44:29.132"/>
</branch>
<status status="PASS" starttime="20220704 23:44:29.132" endtime="20220704 23:44:29.132"/>
</if>
<kw name="Enter Username" library="LoginPage">
<arg>${username}</arg>
<doc>Take a username as argument and
enters it in the user_input</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${USER_INPUT}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 23:44:29.133" endtime="20220704 23:44:29.174"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${USER_INPUT}</arg>
<arg>${username}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220704 23:44:29.174" level="INFO">Typing text 'bootcamp04@mailinator.com' into text field 'css:input#user'.</msg>
<status status="PASS" starttime="20220704 23:44:29.174" endtime="20220704 23:44:29.293"/>
</kw>
<status status="PASS" starttime="20220704 23:44:29.132" endtime="20220704 23:44:29.293"/>
</kw>
<kw name="Wait Until Element Is Not Visible" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<doc>Waits until the element ``locator`` is not visible.</doc>
<status status="PASS" starttime="20220704 23:44:29.293" endtime="20220704 23:44:30.027"/>
</kw>
<kw name="Click Login Button" library="LoginPage">
<doc>Clicks Trello's login button if in Trello's
login page, else it clicks Atlassian's</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220704 23:44:30.049" level="INFO">${url} = https://trello.com/login</msg>
<status status="PASS" starttime="20220704 23:44:30.028" endtime="20220704 23:44:30.049"/>
</kw>
<if>
<branch type="IF" condition="'${url}' == '${LOGIN_URL}'">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220704 23:44:30.049" endtime="20220704 23:44:30.118"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220704 23:44:30.118" level="INFO">Clicking button 'css:input#login'.</msg>
<status status="PASS" starttime="20220704 23:44:30.118" endtime="20220704 23:44:31.287"/>
</kw>
<status status="PASS" starttime="20220704 23:44:30.049" endtime="20220704 23:44:31.287"/>
</branch>
<branch type="ELSE">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="NOT RUN" starttime="20220704 23:44:31.287" endtime="20220704 23:44:31.287"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<status status="NOT RUN" starttime="20220704 23:44:31.287" endtime="20220704 23:44:31.288"/>
</kw>
<status status="NOT RUN" starttime="20220704 23:44:31.287" endtime="20220704 23:44:31.288"/>
</branch>
<status status="PASS" starttime="20220704 23:44:30.049" endtime="20220704 23:44:31.288"/>
</if>
<status status="PASS" starttime="20220704 23:44:30.027" endtime="20220704 23:44:31.288"/>
</kw>
<kw name="Wait Until Location Is Atlassian's Login" library="LoginPage">
<doc>Waits for the page redirection when logging in.</doc>
<kw name="Wait Until Location Contains" library="SeleniumLibrary">
<arg>atlassian.com</arg>
<doc>Waits until the current URL contains ``expected``.</doc>
<status status="PASS" starttime="20220704 23:44:31.288" endtime="20220704 23:44:31.306"/>
</kw>
<status status="PASS" starttime="20220704 23:44:31.288" endtime="20220704 23:44:31.306"/>
</kw>
<kw name="Enter Password" library="LoginPage">
<arg>${password}</arg>
<doc>Take a password as argument and
enters it in the password_input</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<arg>timeout=${DEFAULT_TIMEOUT}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 23:44:31.307" endtime="20220704 23:44:31.375"/>
</kw>
<kw name="Input Password" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<arg>${password}</arg>
<doc>Types the given password into the text field identified by ``locator``.</doc>
<msg timestamp="20220704 23:44:31.376" level="INFO">Typing password into text field 'css:input#password'.</msg>
<msg timestamp="20220704 23:44:31.433" level="INFO">Temporally setting log level to: NONE</msg>
<msg timestamp="20220704 23:44:31.524" level="INFO">Log level changed from NONE to INFO.</msg>
<status status="PASS" starttime="20220704 23:44:31.375" endtime="20220704 23:44:31.525"/>
</kw>
<status status="PASS" starttime="20220704 23:44:31.306" endtime="20220704 23:44:31.525"/>
</kw>
<kw name="Click Login Button" library="LoginPage">
<doc>Clicks Trello's login button if in Trello's
login page, else it clicks Atlassian's</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220704 23:44:31.533" level="INFO">${url} = https://id.atlassian.com/login?application=trello&amp;continue=https%3A%2F%2Ftrello.com%2Fauth%2Fatlassian%2Fcallback%3FreturnUrl%3D%252F%26display%3D%26aaOnboarding%3D%26updateEmail%3D%26traceId%3D62c37b...</msg>
<status status="PASS" starttime="20220704 23:44:31.525" endtime="20220704 23:44:31.533"/>
</kw>
<if>
<branch type="IF" condition="'${url}' == '${LOGIN_URL}'">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="NOT RUN" starttime="20220704 23:44:31.534" endtime="20220704 23:44:31.534"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<status status="NOT RUN" starttime="20220704 23:44:31.534" endtime="20220704 23:44:31.534"/>
</kw>
<status status="NOT RUN" starttime="20220704 23:44:31.534" endtime="20220704 23:44:31.534"/>
</branch>
<branch type="ELSE">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220704 23:44:31.534" endtime="20220704 23:44:31.617"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220704 23:44:31.617" level="INFO">Clicking button 'css:button#login-submit'.</msg>
<status status="PASS" starttime="20220704 23:44:31.617" endtime="20220704 23:44:31.774"/>
</kw>
<status status="PASS" starttime="20220704 23:44:31.534" endtime="20220704 23:44:31.774"/>
</branch>
<status status="PASS" starttime="20220704 23:44:31.533" endtime="20220704 23:44:31.774"/>
</if>
<status status="PASS" starttime="20220704 23:44:31.525" endtime="20220704 23:44:31.774"/>
</kw>
<status status="PASS" starttime="20220704 23:44:29.119" endtime="20220704 23:44:31.774"/>
</kw>
<kw name="Go To Board" library="BoardsPage">
<arg>TestBoard</arg>
<doc>Receives the board name and goes to that board's page.</doc>
<kw name="Format String" library="String">
<var>${locator}</var>
<arg>${BOARD_BUTTON}</arg>
<arg>${board_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 23:44:31.775" level="INFO">${locator} = //div[@title="TestBoard"]</msg>
<status status="PASS" starttime="20220704 23:44:31.775" endtime="20220704 23:44:31.775"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 23:44:31.776" endtime="20220704 23:44:36.220"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 23:44:36.221" level="INFO">Clicking element '//div[@title="TestBoard"]'.</msg>
<status status="PASS" starttime="20220704 23:44:36.221" endtime="20220704 23:44:36.653"/>
</kw>
<status status="PASS" starttime="20220704 23:44:31.774" endtime="20220704 23:44:36.654"/>
</kw>
<kw name="Create Card In List" library="ListComponent">
<arg>To Do</arg>
<arg>card1</arg>
<doc>Create a new card in the given list
Required args: list_name, card_name</doc>
<kw name="Format String" library="String">
<var>${add_card_locator}</var>
<arg>${LIST_ADD_CARD}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 23:44:36.655" level="INFO">${add_card_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Add a card')]</msg>
<status status="PASS" starttime="20220704 23:44:36.654" endtime="20220704 23:44:36.655"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${add_card_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 23:44:36.655" endtime="20220704 23:44:37.291"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${add_card_locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 23:44:37.292" level="INFO">Clicking element '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Add a card')]'.</msg>
<status status="PASS" starttime="20220704 23:44:37.291" endtime="20220704 23:44:37.398"/>
</kw>
<kw name="Format String" library="String">
<var>${textarea_locator}</var>
<arg>${CARD_TITLE_INPUT}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 23:44:37.399" level="INFO">${textarea_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//textarea[contains(@class, 'list-card-composer-textarea')]</msg>
<status status="PASS" starttime="20220704 23:44:37.399" endtime="20220704 23:44:37.399"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 23:44:37.399" endtime="20220704 23:44:37.456"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 23:44:37.456" level="INFO">Clicking element '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//textarea[contains(@class, 'list-card-composer-textarea')]'.</msg>
<status status="PASS" starttime="20220704 23:44:37.456" endtime="20220704 23:44:37.534"/>
</kw>
<kw name="Clear Element Text" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<doc>Clears the value of the text-input-element identified by ``locator``.</doc>
<status status="PASS" starttime="20220704 23:44:37.534" endtime="20220704 23:44:37.586"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<arg>${card_name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220704 23:44:37.587" level="INFO">Typing text 'card1' into text field '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//textarea[contains(@class, 'list-card-composer-textarea')]'.</msg>
<status status="PASS" starttime="20220704 23:44:37.587" endtime="20220704 23:44:37.705"/>
</kw>
<kw name="Format String" library="String">
<var>${confirm_locator}</var>
<arg>${CONFIRM_ADD_CARD}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 23:44:37.706" level="INFO">${confirm_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//input[@value='Add card']</msg>
<status status="PASS" starttime="20220704 23:44:37.706" endtime="20220704 23:44:37.706"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${confirm_locator}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220704 23:44:37.707" level="INFO">Clicking button '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//input[@value='Add card']'.</msg>
<status status="PASS" starttime="20220704 23:44:37.706" endtime="20220704 23:44:37.842"/>
</kw>
<status status="PASS" starttime="20220704 23:44:36.654" endtime="20220704 23:44:37.842"/>
</kw>
<kw name="Click pencil menu" library="ListComponent">
<arg>To Do</arg>
<arg>card1</arg>
<doc>Adds a label to an specific card</doc>
<kw name="Format String" library="String">
<var>${card_element}</var>
<arg>${LIST_CARD_NAME}</arg>
<arg>list_name=${list_name}</arg>
<arg>card_name=${card_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 23:44:37.844" level="INFO">${card_element} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'card1')]</msg>
<status status="PASS" starttime="20220704 23:44:37.843" endtime="20220704 23:44:37.844"/>
</kw>
<kw name="Format String" library="String">
<var>${pencil_locator}</var>
<arg>${PENCIL_ICON}</arg>
<arg>list_name=${list_name}</arg>
<arg>card_name=${card_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 23:44:37.844" level="INFO">${pencil_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'card1')]//span[contains(@class, 'icon-edit')]</msg>
<status status="PASS" starttime="20220704 23:44:37.844" endtime="20220704 23:44:37.844"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${card_element}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 23:44:37.845" endtime="20220704 23:44:37.914"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20220704 23:44:42.915" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20220704 23:44:37.914" endtime="20220704 23:44:42.915"/>
</kw>
<kw name="Mouse Over" library="SeleniumLibrary">
<arg>${card_element}</arg>
<doc>Simulates hovering the mouse over the element ``locator``.</doc>
<msg timestamp="20220704 23:44:42.917" level="INFO">Simulating Mouse Over on element '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'card1')]'.</msg>
<status status="PASS" starttime="20220704 23:44:42.915" endtime="20220704 23:44:43.261"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20220704 23:44:48.262" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20220704 23:44:43.262" endtime="20220704 23:44:48.262"/>
</kw>
<kw name="Wait Until Page Contains Element" library="SeleniumLibrary">
<arg>${pencil_locator}</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" starttime="20220704 23:44:48.263" endtime="20220704 23:44:48.283"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${pencil_locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 23:44:48.284" level="INFO">Clicking element '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'card1')]//span[contains(@class, 'icon-edit')]'.</msg>
<status status="PASS" starttime="20220704 23:44:48.283" endtime="20220704 23:44:48.401"/>
</kw>
<status status="PASS" starttime="20220704 23:44:37.843" endtime="20220704 23:44:48.401"/>
</kw>
<kw name="Add Color Label In Card" library="CardModal">
<arg>yellow</arg>
<doc>add label of a given color to a list</doc>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${EDIT_LABEL}</arg>
<arg>timeout=${DEFAULT_TIMEOUT}s</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220704 23:44:48.402" endtime="20220704 23:44:48.479"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${EDIT_LABEL}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 23:44:48.480" level="INFO">Clicking element '//a[contains(@class,'js-edit-labels')]'.</msg>
<status status="PASS" starttime="20220704 23:44:48.479" endtime="20220704 23:44:48.602"/>
</kw>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LABEL_INPUT}</arg>
<arg>timeout=${DEFAULT_TIMEOUT}s</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220704 23:44:48.602" endtime="20220704 23:44:48.662"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${LABEL_INPUT}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 23:44:48.662" level="INFO">Clicking element '//input[contains(@class,"js-autofocus")]'.</msg>
<status status="PASS" starttime="20220704 23:44:48.662" endtime="20220704 23:44:48.729"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${LABEL_INPUT}</arg>
<arg>${color}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220704 23:44:48.730" level="INFO">Typing text 'yellow' into text field '//input[contains(@class,"js-autofocus")]'.</msg>
<status status="PASS" starttime="20220704 23:44:48.729" endtime="20220704 23:44:48.833"/>
</kw>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LABEL_INPUT}</arg>
<arg>timeout=${DEFAULT_TIMEOUT}s</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220704 23:44:48.834" endtime="20220704 23:44:48.872"/>
</kw>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>${LABEL_INPUT}</arg>
<arg>RETURN</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20220704 23:44:48.873" level="INFO">Sending key(s) ('RETURN',) to //input[contains(@class,"js-autofocus")] element.</msg>
<msg timestamp="20220704 23:44:49.159" level="INFO">Pressing special key RETURN to element.</msg>
<msg timestamp="20220704 23:44:49.159" level="INFO">Releasing special key RETURN.</msg>
<status status="PASS" starttime="20220704 23:44:48.872" endtime="20220704 23:44:49.196"/>
</kw>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>None</arg>
<arg>ESCAPE</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20220704 23:44:49.197" level="INFO">Sending key(s) ('ESCAPE',) to page.</msg>
<msg timestamp="20220704 23:44:49.197" level="INFO">Pressing special key ESCAPE to browser.</msg>
<msg timestamp="20220704 23:44:49.197" level="INFO">Releasing special key ESCAPE.</msg>
<status status="PASS" starttime="20220704 23:44:49.196" endtime="20220704 23:44:49.213"/>
</kw>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>None</arg>
<arg>ESCAPE</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20220704 23:44:49.213" level="INFO">Sending key(s) ('ESCAPE',) to page.</msg>
<msg timestamp="20220704 23:44:49.214" level="INFO">Pressing special key ESCAPE to browser.</msg>
<msg timestamp="20220704 23:44:49.214" level="INFO">Releasing special key ESCAPE.</msg>
<status status="PASS" starttime="20220704 23:44:49.213" endtime="20220704 23:44:49.239"/>
</kw>
<status status="PASS" starttime="20220704 23:44:48.402" endtime="20220704 23:44:49.239"/>
</kw>
<kw name="Create Card In List" library="ListComponent">
<arg>Doing</arg>
<arg>card2</arg>
<doc>Create a new card in the given list
Required args: list_name, card_name</doc>
<kw name="Format String" library="String">
<var>${add_card_locator}</var>
<arg>${LIST_ADD_CARD}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 23:44:49.241" level="INFO">${add_card_locator} = //h2[text()='Doing']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Add a card')]</msg>
<status status="PASS" starttime="20220704 23:44:49.240" endtime="20220704 23:44:49.241"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${add_card_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 23:44:49.241" endtime="20220704 23:44:49.283"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${add_card_locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 23:44:49.283" level="INFO">Clicking element '//h2[text()='Doing']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Add a card')]'.</msg>
<status status="PASS" starttime="20220704 23:44:49.283" endtime="20220704 23:44:49.354"/>
</kw>
<kw name="Format String" library="String">
<var>${textarea_locator}</var>
<arg>${CARD_TITLE_INPUT}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 23:44:49.355" level="INFO">${textarea_locator} = //h2[text()='Doing']//ancestor::div[contains(@class, 'list-content')]//textarea[contains(@class, 'list-card-composer-textarea')]</msg>
<status status="PASS" starttime="20220704 23:44:49.354" endtime="20220704 23:44:49.355"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 23:44:49.355" endtime="20220704 23:44:49.415"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 23:44:49.416" level="INFO">Clicking element '//h2[text()='Doing']//ancestor::div[contains(@class, 'list-content')]//textarea[contains(@class, 'list-card-composer-textarea')]'.</msg>
<status status="PASS" starttime="20220704 23:44:49.416" endtime="20220704 23:44:49.468"/>
</kw>
<kw name="Clear Element Text" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<doc>Clears the value of the text-input-element identified by ``locator``.</doc>
<status status="PASS" starttime="20220704 23:44:49.469" endtime="20220704 23:44:49.523"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<arg>${card_name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220704 23:44:49.523" level="INFO">Typing text 'card2' into text field '//h2[text()='Doing']//ancestor::div[contains(@class, 'list-content')]//textarea[contains(@class, 'list-card-composer-textarea')]'.</msg>
<status status="PASS" starttime="20220704 23:44:49.523" endtime="20220704 23:44:49.595"/>
</kw>
<kw name="Format String" library="String">
<var>${confirm_locator}</var>
<arg>${CONFIRM_ADD_CARD}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 23:44:49.596" level="INFO">${confirm_locator} = //h2[text()='Doing']//ancestor::div[contains(@class, 'list-content')]//input[@value='Add card']</msg>
<status status="PASS" starttime="20220704 23:44:49.595" endtime="20220704 23:44:49.596"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${confirm_locator}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220704 23:44:49.596" level="INFO">Clicking button '//h2[text()='Doing']//ancestor::div[contains(@class, 'list-content')]//input[@value='Add card']'.</msg>
<status status="PASS" starttime="20220704 23:44:49.596" endtime="20220704 23:44:49.669"/>
</kw>
<status status="PASS" starttime="20220704 23:44:49.240" endtime="20220704 23:44:49.669"/>
</kw>
<kw name="Create Card In List" library="ListComponent">
<arg>Done</arg>
<arg>card3</arg>
<doc>Create a new card in the given list
Required args: list_name, card_name</doc>
<kw name="Format String" library="String">
<var>${add_card_locator}</var>
<arg>${LIST_ADD_CARD}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 23:44:49.671" level="INFO">${add_card_locator} = //h2[text()='Done']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Add a card')]</msg>
<status status="PASS" starttime="20220704 23:44:49.670" endtime="20220704 23:44:49.671"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${add_card_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 23:44:49.671" endtime="20220704 23:44:49.731"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${add_card_locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 23:44:49.732" level="INFO">Clicking element '//h2[text()='Done']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Add a card')]'.</msg>
<status status="PASS" starttime="20220704 23:44:49.732" endtime="20220704 23:44:49.818"/>
</kw>
<kw name="Format String" library="String">
<var>${textarea_locator}</var>
<arg>${CARD_TITLE_INPUT}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 23:44:49.819" level="INFO">${textarea_locator} = //h2[text()='Done']//ancestor::div[contains(@class, 'list-content')]//textarea[contains(@class, 'list-card-composer-textarea')]</msg>
<status status="PASS" starttime="20220704 23:44:49.818" endtime="20220704 23:44:49.819"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 23:44:49.819" endtime="20220704 23:44:49.861"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 23:44:49.862" level="INFO">Clicking element '//h2[text()='Done']//ancestor::div[contains(@class, 'list-content')]//textarea[contains(@class, 'list-card-composer-textarea')]'.</msg>
<status status="PASS" starttime="20220704 23:44:49.862" endtime="20220704 23:44:49.950"/>
</kw>
<kw name="Clear Element Text" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<doc>Clears the value of the text-input-element identified by ``locator``.</doc>
<status status="PASS" starttime="20220704 23:44:49.950" endtime="20220704 23:44:49.991"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<arg>${card_name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220704 23:44:49.992" level="INFO">Typing text 'card3' into text field '//h2[text()='Done']//ancestor::div[contains(@class, 'list-content')]//textarea[contains(@class, 'list-card-composer-textarea')]'.</msg>
<status status="PASS" starttime="20220704 23:44:49.992" endtime="20220704 23:44:50.077"/>
</kw>
<kw name="Format String" library="String">
<var>${confirm_locator}</var>
<arg>${CONFIRM_ADD_CARD}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 23:44:50.078" level="INFO">${confirm_locator} = //h2[text()='Done']//ancestor::div[contains(@class, 'list-content')]//input[@value='Add card']</msg>
<status status="PASS" starttime="20220704 23:44:50.077" endtime="20220704 23:44:50.078"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${confirm_locator}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220704 23:44:50.078" level="INFO">Clicking button '//h2[text()='Done']//ancestor::div[contains(@class, 'list-content')]//input[@value='Add card']'.</msg>
<status status="PASS" starttime="20220704 23:44:50.078" endtime="20220704 23:44:50.174"/>
</kw>
<status status="PASS" starttime="20220704 23:44:49.670" endtime="20220704 23:44:50.174"/>
</kw>
<kw name="Enter To Filter Menu" library="TopBar">
<doc>accesing to the filter menu</doc>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${FILTER_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 23:44:50.175" level="INFO">Clicking element 'xpath://button[@data-test-id='filter-popover-button']'.</msg>
<status status="PASS" starttime="20220704 23:44:50.175" endtime="20220704 23:44:50.294"/>
</kw>
<status status="PASS" starttime="20220704 23:44:50.174" endtime="20220704 23:44:50.294"/>
</kw>
<kw name="Click no labels filter" library="FilterModal">
<doc>filters all cards with labes</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${NO_LABELS_FILTER}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 23:44:50.295" endtime="20220704 23:44:50.466"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${NO_LABELS_FILTER}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 23:44:50.467" level="INFO">Clicking element '//span[@aria-label='LabelIcon']'.</msg>
<status status="PASS" starttime="20220704 23:44:50.466" endtime="20220704 23:44:50.638"/>
</kw>
<status status="PASS" starttime="20220704 23:44:50.294" endtime="20220704 23:44:50.639"/>
</kw>
<kw name="Card Should Not Be In List" library="ListComponent">
<arg>card1</arg>
<arg>To Do</arg>
<doc>Check that a card is visible and in the given list
required: card_name, list_name</doc>
<kw name="Format String" library="String">
<var>${card_locator}</var>
<arg>${LIST_CARD_NAME}</arg>
<arg>list_name=${list_name}</arg>
<arg>card_name=${card_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 23:44:50.640" level="INFO">${card_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'card1')]</msg>
<status status="PASS" starttime="20220704 23:44:50.640" endtime="20220704 23:44:50.640"/>
</kw>
<kw name="Element Should Not Be Visible" library="SeleniumLibrary">
<arg>${card_locator}</arg>
<doc>Verifies that the element identified by ``locator`` is NOT visible.</doc>
<msg timestamp="20220704 23:44:50.758" level="INFO">Element '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'card1')]' exists but is not displayed.</msg>
<status status="PASS" starttime="20220704 23:44:50.640" endtime="20220704 23:44:50.758"/>
</kw>
<status status="PASS" starttime="20220704 23:44:50.639" endtime="20220704 23:44:50.758"/>
</kw>
<kw name="Click no labels filter" library="FilterModal">
<doc>filters all cards with labes</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${NO_LABELS_FILTER}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 23:44:50.759" endtime="20220704 23:44:50.813"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${NO_LABELS_FILTER}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 23:44:50.814" level="INFO">Clicking element '//span[@aria-label='LabelIcon']'.</msg>
<status status="PASS" starttime="20220704 23:44:50.813" endtime="20220704 23:44:50.952"/>
</kw>
<status status="PASS" starttime="20220704 23:44:50.759" endtime="20220704 23:44:50.952"/>
</kw>
<kw name="Card Should Be In List" library="ListComponent">
<arg>card1</arg>
<arg>To Do</arg>
<doc>Check that a card is visible and in the given list
required: card_name, list_name</doc>
<kw name="Format String" library="String">
<var>${card_locator}</var>
<arg>${LIST_CARD_NAME}</arg>
<arg>list_name=${list_name}</arg>
<arg>card_name=${card_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 23:44:50.953" level="INFO">${card_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'card1')]</msg>
<status status="PASS" starttime="20220704 23:44:50.953" endtime="20220704 23:44:50.953"/>
</kw>
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<arg>${card_locator}</arg>
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<msg timestamp="20220704 23:44:50.992" level="INFO">Element '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'card1')]' is displayed.</msg>
<status status="PASS" starttime="20220704 23:44:50.954" endtime="20220704 23:44:50.992"/>
</kw>
<status status="PASS" starttime="20220704 23:44:50.952" endtime="20220704 23:44:50.992"/>
</kw>
<kw name="Close Browser" library="SeleniumLibrary" type="TEARDOWN">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20220704 23:44:50.992" endtime="20220704 23:44:51.087"/>
</kw>
<doc>check filter card by label function</doc>
<tag>gui</tag>
<tag>list.create</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220704 23:44:27.580" endtime="20220704 23:44:51.087"/>
</test>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Teardown Board</arg>
<arg>Delete All Sessions</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Teardown Board">
<doc>Deletes used board for teardown</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${DEFAULT_TIMEOUT}</arg>
<arg>${DEFAULT_INTERVAL}</arg>
<arg>Delete A Board</arg>
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 23:44:51.092" level="INFO">${url} = boards/62c37b5bd13f7e21b5d845c4</msg>
<status status="PASS" starttime="20220704 23:44:51.091" endtime="20220704 23:44:51.092"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 23:44:51.475" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 23:44:51.092" endtime="20220704 23:44:51.475"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 23:44:51.475" endtime="20220704 23:44:51.475"/>
</return>
<msg timestamp="20220704 23:44:51.475" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 23:44:51.091" endtime="20220704 23:44:51.476"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 23:44:51.476" endtime="20220704 23:44:51.476"/>
</return>
<status status="PASS" starttime="20220704 23:44:51.090" endtime="20220704 23:44:51.476"/>
</kw>
<status status="PASS" starttime="20220704 23:44:51.090" endtime="20220704 23:44:51.476"/>
</kw>
<status status="PASS" starttime="20220704 23:44:51.090" endtime="20220704 23:44:51.476"/>
</kw>
<kw name="Delete All Sessions" library="request_own_library">
<status status="PASS" starttime="20220704 23:44:51.476" endtime="20220704 23:44:51.477"/>
</kw>
<status status="PASS" starttime="20220704 23:44:51.089" endtime="20220704 23:44:51.478"/>
</kw>
<doc>Label Tests</doc>
<status status="PASS" starttime="20220704 23:44:27.239" endtime="20220704 23:44:51.478"/>
</suite>
<suite id="s1-s1-s4" name="Trello Gui Lists" source="/trello/gui/trello_gui_lists.robot">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Create Trello Session</arg>
<arg>Setup Board</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Create Trello Session" library="TrelloAPI">
<doc>Creates a Trello Session</doc>
<kw name="Create Session" library="request_own_library">
<arg>${API_BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<status status="PASS" starttime="20220704 23:44:51.494" endtime="20220704 23:44:51.494"/>
</kw>
<status status="PASS" starttime="20220704 23:44:51.494" endtime="20220704 23:44:51.494"/>
</kw>
<kw name="Setup Board">
<doc>Creates a board and saves its ID</doc>
<kw name="Create A Board" library="Board">
<var>${BOARD}</var>
<arg>TestBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 23:44:51.496" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 23:44:51.495" endtime="20220704 23:44:51.496"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 23:44:51.496" endtime="20220704 23:44:51.496"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 23:44:51.497" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220704 23:44:51.496" endtime="20220704 23:44:51.497"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 23:44:51.763" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 23:44:51.498" endtime="20220704 23:44:51.763"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 23:44:51.763" endtime="20220704 23:44:51.763"/>
</return>
<msg timestamp="20220704 23:44:51.763" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 23:44:51.495" endtime="20220704 23:44:51.763"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 23:44:51.763" endtime="20220704 23:44:51.764"/>
</return>
<msg timestamp="20220704 23:44:51.764" level="INFO">${BOARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 23:44:51.495" endtime="20220704 23:44:51.764"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_BOARD_ID}</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220704 23:44:51.767" level="INFO">${TEST_SUITE_BOARD_ID} = 62c37b73a387b88d028dc121</msg>
<status status="PASS" starttime="20220704 23:44:51.764" endtime="20220704 23:44:51.767"/>
</kw>
<status status="PASS" starttime="20220704 23:44:51.495" endtime="20220704 23:44:51.767"/>
</kw>
<status status="PASS" starttime="20220704 23:44:51.493" endtime="20220704 23:44:51.767"/>
</kw>
<test id="s1-s1-s4-t1" name="create list" line="18">
<kw name="Open Browser From Environment" library="CommonGUI">
<arg>${LOGIN_URL}</arg>
<doc>This keywords takes REMOTE and BROWSER variables
from the environment automatically and only needs a url</doc>
<if>
<branch type="IF" condition="${is_remote}">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${url}</arg>
<arg>${BROWSER}</arg>
<arg>remote_url=http://selenium-hub:4444</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20220704 23:44:51.770" level="INFO">Opening browser 'chrome' to base url 'https://trello.com/login' through remote server at 'http://selenium-hub:4444'.</msg>
<status status="PASS" starttime="20220704 23:44:51.769" endtime="20220704 23:44:53.045"/>
</kw>
<status status="PASS" starttime="20220704 23:44:51.769" endtime="20220704 23:44:53.045"/>
</branch>
<branch type="ELSE">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${url}</arg>
<arg>${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<status status="NOT RUN" starttime="20220704 23:44:53.046" endtime="20220704 23:44:53.046"/>
</kw>
<status status="NOT RUN" starttime="20220704 23:44:53.045" endtime="20220704 23:44:53.046"/>
</branch>
<status status="PASS" starttime="20220704 23:44:51.769" endtime="20220704 23:44:53.046"/>
</if>
<status status="PASS" starttime="20220704 23:44:51.768" endtime="20220704 23:44:53.046"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20220704 23:44:53.046" endtime="20220704 23:44:53.155"/>
</kw>
<kw name="Login To Trello" library="LoginPage">
<arg>${DEFAULT_EMAIL}</arg>
<arg>${DEFAULT_PASSWORD}</arg>
<doc>High-level keyword for logging in to Trello</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220704 23:44:53.164" level="INFO">${url} = https://trello.com/login</msg>
<status status="PASS" starttime="20220704 23:44:53.156" endtime="20220704 23:44:53.164"/>
</kw>
<if>
<branch type="IF" condition="'${url}' != '${LOGIN_URL}'">
<kw name="Go To" library="SeleniumLibrary">
<arg>${LOGIN_URL}</arg>
<doc>Navigates the current browser window to the provided ``url``.</doc>
<status status="NOT RUN" starttime="20220704 23:44:53.165" endtime="20220704 23:44:53.165"/>
</kw>
<status status="NOT RUN" starttime="20220704 23:44:53.165" endtime="20220704 23:44:53.165"/>
</branch>
<status status="PASS" starttime="20220704 23:44:53.164" endtime="20220704 23:44:53.165"/>
</if>
<kw name="Enter Username" library="LoginPage">
<arg>${username}</arg>
<doc>Take a username as argument and
enters it in the user_input</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${USER_INPUT}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 23:44:53.165" endtime="20220704 23:44:53.202"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${USER_INPUT}</arg>
<arg>${username}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220704 23:44:53.203" level="INFO">Typing text 'bootcamp04@mailinator.com' into text field 'css:input#user'.</msg>
<status status="PASS" starttime="20220704 23:44:53.202" endtime="20220704 23:44:53.344"/>
</kw>
<status status="PASS" starttime="20220704 23:44:53.165" endtime="20220704 23:44:53.344"/>
</kw>
<kw name="Wait Until Element Is Not Visible" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<doc>Waits until the element ``locator`` is not visible.</doc>
<status status="PASS" starttime="20220704 23:44:53.345" endtime="20220704 23:44:54.106"/>
</kw>
<kw name="Click Login Button" library="LoginPage">
<doc>Clicks Trello's login button if in Trello's
login page, else it clicks Atlassian's</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220704 23:44:54.121" level="INFO">${url} = https://trello.com/login</msg>
<status status="PASS" starttime="20220704 23:44:54.107" endtime="20220704 23:44:54.121"/>
</kw>
<if>
<branch type="IF" condition="'${url}' == '${LOGIN_URL}'">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220704 23:44:54.121" endtime="20220704 23:44:54.169"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220704 23:44:54.170" level="INFO">Clicking button 'css:input#login'.</msg>
<status status="PASS" starttime="20220704 23:44:54.170" endtime="20220704 23:44:55.324"/>
</kw>
<status status="PASS" starttime="20220704 23:44:54.121" endtime="20220704 23:44:55.324"/>
</branch>
<branch type="ELSE">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="NOT RUN" starttime="20220704 23:44:55.324" endtime="20220704 23:44:55.324"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<status status="NOT RUN" starttime="20220704 23:44:55.325" endtime="20220704 23:44:55.325"/>
</kw>
<status status="NOT RUN" starttime="20220704 23:44:55.324" endtime="20220704 23:44:55.325"/>
</branch>
<status status="PASS" starttime="20220704 23:44:54.121" endtime="20220704 23:44:55.325"/>
</if>
<status status="PASS" starttime="20220704 23:44:54.107" endtime="20220704 23:44:55.325"/>
</kw>
<kw name="Wait Until Location Is Atlassian's Login" library="LoginPage">
<doc>Waits for the page redirection when logging in.</doc>
<kw name="Wait Until Location Contains" library="SeleniumLibrary">
<arg>atlassian.com</arg>
<doc>Waits until the current URL contains ``expected``.</doc>
<status status="PASS" starttime="20220704 23:44:55.325" endtime="20220704 23:44:55.341"/>
</kw>
<status status="PASS" starttime="20220704 23:44:55.325" endtime="20220704 23:44:55.341"/>
</kw>
<kw name="Enter Password" library="LoginPage">
<arg>${password}</arg>
<doc>Take a password as argument and
enters it in the password_input</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<arg>timeout=${DEFAULT_TIMEOUT}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 23:44:55.342" endtime="20220704 23:44:55.432"/>
</kw>
<kw name="Input Password" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<arg>${password}</arg>
<doc>Types the given password into the text field identified by ``locator``.</doc>
<msg timestamp="20220704 23:44:55.433" level="INFO">Typing password into text field 'css:input#password'.</msg>
<msg timestamp="20220704 23:44:55.492" level="INFO">Temporally setting log level to: NONE</msg>
<msg timestamp="20220704 23:44:55.560" level="INFO">Log level changed from NONE to INFO.</msg>
<status status="PASS" starttime="20220704 23:44:55.433" endtime="20220704 23:44:55.560"/>
</kw>
<status status="PASS" starttime="20220704 23:44:55.342" endtime="20220704 23:44:55.561"/>
</kw>
<kw name="Click Login Button" library="LoginPage">
<doc>Clicks Trello's login button if in Trello's
login page, else it clicks Atlassian's</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220704 23:44:55.588" level="INFO">${url} = https://id.atlassian.com/login?application=trello&amp;continue=https%3A%2F%2Ftrello.com%2Fauth%2Fatlassian%2Fcallback%3FreturnUrl%3D%252F%26display%3D%26aaOnboarding%3D%26updateEmail%3D%26traceId%3D62c37b...</msg>
<status status="PASS" starttime="20220704 23:44:55.561" endtime="20220704 23:44:55.588"/>
</kw>
<if>
<branch type="IF" condition="'${url}' == '${LOGIN_URL}'">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="NOT RUN" starttime="20220704 23:44:55.589" endtime="20220704 23:44:55.589"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<status status="NOT RUN" starttime="20220704 23:44:55.589" endtime="20220704 23:44:55.589"/>
</kw>
<status status="NOT RUN" starttime="20220704 23:44:55.589" endtime="20220704 23:44:55.589"/>
</branch>
<branch type="ELSE">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220704 23:44:55.589" endtime="20220704 23:44:55.641"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220704 23:44:55.642" level="INFO">Clicking button 'css:button#login-submit'.</msg>
<status status="PASS" starttime="20220704 23:44:55.641" endtime="20220704 23:44:55.739"/>
</kw>
<status status="PASS" starttime="20220704 23:44:55.589" endtime="20220704 23:44:55.739"/>
</branch>
<status status="PASS" starttime="20220704 23:44:55.588" endtime="20220704 23:44:55.740"/>
</if>
<status status="PASS" starttime="20220704 23:44:55.561" endtime="20220704 23:44:55.740"/>
</kw>
<status status="PASS" starttime="20220704 23:44:53.155" endtime="20220704 23:44:55.740"/>
</kw>
<kw name="Go To Board" library="BoardsPage">
<arg>TestBoard</arg>
<doc>Receives the board name and goes to that board's page.</doc>
<kw name="Format String" library="String">
<var>${locator}</var>
<arg>${BOARD_BUTTON}</arg>
<arg>${board_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 23:44:55.741" level="INFO">${locator} = //div[@title="TestBoard"]</msg>
<status status="PASS" starttime="20220704 23:44:55.741" endtime="20220704 23:44:55.741"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 23:44:55.741" endtime="20220704 23:44:59.716"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 23:44:59.717" level="INFO">Clicking element '//div[@title="TestBoard"]'.</msg>
<status status="PASS" starttime="20220704 23:44:59.716" endtime="20220704 23:45:00.169"/>
</kw>
<status status="PASS" starttime="20220704 23:44:55.740" endtime="20220704 23:45:00.169"/>
</kw>
<kw name="Create new list with the name" library="ListComponent">
<arg>NEW_TEST_LIST</arg>
<doc>Create a new list with the given name</doc>
<kw name="Wait Until Page Contains Element" library="SeleniumLibrary">
<arg>${ADD_LIST_BUTTON}</arg>
<arg>timeout=${DEFAULT_TIMEOUT}s</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" starttime="20220704 23:45:00.170" endtime="20220704 23:45:00.759"/>
</kw>
<kw name="Click Link" library="SeleniumLibrary">
<arg>${ADD_LIST_BUTTON}</arg>
<doc>Clicks a link identified by ``locator``.</doc>
<msg timestamp="20220704 23:45:00.760" level="INFO">Clicking link 'xpath://a[contains(@Class, 'open-add-list')]'.</msg>
<status status="PASS" starttime="20220704 23:45:00.759" endtime="20220704 23:45:00.962"/>
</kw>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LIST_NAME_INPUT}</arg>
<arg>timeout=${DEFAULT_TIMEOUT}s</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220704 23:45:00.963" endtime="20220704 23:45:01.030"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${LIST_NAME_INPUT}</arg>
<arg>${list_name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220704 23:45:01.030" level="INFO">Typing text 'NEW_TEST_LIST' into text field 'xpath://input[@class="list-name-input"]'.</msg>
<status status="PASS" starttime="20220704 23:45:01.030" endtime="20220704 23:45:01.166"/>
</kw>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>${LIST_NAME_INPUT}</arg>
<arg>RETURN</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20220704 23:45:01.167" level="INFO">Sending key(s) ('RETURN',) to xpath://input[@class="list-name-input"] element.</msg>
<msg timestamp="20220704 23:45:01.548" level="INFO">Pressing special key RETURN to element.</msg>
<msg timestamp="20220704 23:45:01.548" level="INFO">Releasing special key RETURN.</msg>
<status status="PASS" starttime="20220704 23:45:01.167" endtime="20220704 23:45:01.593"/>
</kw>
<status status="PASS" starttime="20220704 23:45:00.169" endtime="20220704 23:45:01.593"/>
</kw>
<kw name="Verify That The List Exists" library="ListComponent">
<arg>NEW_TEST_LIST</arg>
<doc>Verify that a given header of a list matches</doc>
<kw name="Format String" library="String">
<var>${list_name_locator}</var>
<arg>${LIST_DIV}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 23:45:01.594" level="INFO">${list_name_locator} = //h2[text()='NEW_TEST_LIST']//ancestor::div[contains(@class, 'list-content')]</msg>
<status status="PASS" starttime="20220704 23:45:01.594" endtime="20220704 23:45:01.594"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${list_name_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 23:45:01.594" endtime="20220704 23:45:01.651"/>
</kw>
<kw name="Page Should Contain Element" library="SeleniumLibrary">
<arg>${list_name_locator}</arg>
<doc>Verifies that element ``locator`` is found on the current page.</doc>
<msg timestamp="20220704 23:45:01.662" level="INFO">Current page contains element '//h2[text()='NEW_TEST_LIST']//ancestor::div[contains(@class, 'list-content')]'.</msg>
<status status="PASS" starttime="20220704 23:45:01.652" endtime="20220704 23:45:01.663"/>
</kw>
<status status="PASS" starttime="20220704 23:45:01.593" endtime="20220704 23:45:01.663"/>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Wait Until Keyword Succeeds</arg>
<arg>${DEFAULT_REPEAT}</arg>
<arg>${DEFAULT_INTERVAL} seconds</arg>
<arg>Close a list</arg>
<arg>AND</arg>
<arg>Close Browser</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${DEFAULT_REPEAT}</arg>
<arg>${DEFAULT_INTERVAL} seconds</arg>
<arg>Close a list</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Close a list" library="ListComponent">
<doc>archives a list</doc>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LIST_ACTIONS_BUTTON}</arg>
<arg>timeout=${DEFAULT_TIMEOUT}s</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220704 23:45:01.664" endtime="20220704 23:45:01.720"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${DEFAULT_REPEAT}</arg>
<arg>${DEFAULT_INTERVAL} seconds</arg>
<arg>Click Link</arg>
<arg>${LIST_ACTIONS_BUTTON}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Click Link" library="SeleniumLibrary">
<arg>${LIST_ACTIONS_BUTTON}</arg>
<doc>Clicks a link identified by ``locator``.</doc>
<msg timestamp="20220704 23:45:01.721" level="INFO">Clicking link 'xpath://div[@class='js-list list-wrapper'][last()]//a[@aria-label="List actions"]'.</msg>
<status status="PASS" starttime="20220704 23:45:01.721" endtime="20220704 23:45:01.811"/>
</kw>
<status status="PASS" starttime="20220704 23:45:01.720" endtime="20220704 23:45:01.811"/>
</kw>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${CLOSE_LIST_BUTTON}</arg>
<arg>timeout=${DEFAULT_TIMEOUT}s</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220704 23:45:01.811" endtime="20220704 23:45:01.904"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${DEFAULT_TIMEOUT}</arg>
<arg>${DEFAULT_INTERVAL}</arg>
<arg>Click Link</arg>
<arg>${CLOSE_LIST_BUTTON}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Click Link" library="SeleniumLibrary">
<arg>${CLOSE_LIST_BUTTON}</arg>
<doc>Clicks a link identified by ``locator``.</doc>
<msg timestamp="20220704 23:45:01.905" level="INFO">Clicking link 'xpath://li//a[@class='js-close-list']'.</msg>
<status status="PASS" starttime="20220704 23:45:01.905" endtime="20220704 23:45:01.983"/>
</kw>
<status status="PASS" starttime="20220704 23:45:01.904" endtime="20220704 23:45:01.983"/>
</kw>
<status status="PASS" starttime="20220704 23:45:01.664" endtime="20220704 23:45:01.983"/>
</kw>
<status status="PASS" starttime="20220704 23:45:01.663" endtime="20220704 23:45:01.983"/>
</kw>
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20220704 23:45:01.983" endtime="20220704 23:45:02.094"/>
</kw>
<status status="PASS" starttime="20220704 23:45:01.663" endtime="20220704 23:45:02.094"/>
</kw>
<doc>verify that a list can be created in GUI</doc>
<tag>gui</tag>
<tag>list.create</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220704 23:44:51.767" endtime="20220704 23:45:02.094"/>
</test>
<test id="s1-s1-s4-t2" name="modify name of a list" line="31">
<kw name="Open Browser From Environment" library="CommonGUI">
<arg>${LOGIN_URL}</arg>
<doc>This keywords takes REMOTE and BROWSER variables
from the environment automatically and only needs a url</doc>
<if>
<branch type="IF" condition="${is_remote}">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${url}</arg>
<arg>${BROWSER}</arg>
<arg>remote_url=http://selenium-hub:4444</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20220704 23:45:02.098" level="INFO">Opening browser 'chrome' to base url 'https://trello.com/login' through remote server at 'http://selenium-hub:4444'.</msg>
<status status="PASS" starttime="20220704 23:45:02.097" endtime="20220704 23:45:03.527"/>
</kw>
<status status="PASS" starttime="20220704 23:45:02.097" endtime="20220704 23:45:03.527"/>
</branch>
<branch type="ELSE">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${url}</arg>
<arg>${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<status status="NOT RUN" starttime="20220704 23:45:03.527" endtime="20220704 23:45:03.527"/>
</kw>
<status status="NOT RUN" starttime="20220704 23:45:03.527" endtime="20220704 23:45:03.527"/>
</branch>
<status status="PASS" starttime="20220704 23:45:02.097" endtime="20220704 23:45:03.528"/>
</if>
<status status="PASS" starttime="20220704 23:45:02.096" endtime="20220704 23:45:03.528"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20220704 23:45:03.528" endtime="20220704 23:45:03.638"/>
</kw>
<kw name="Login To Trello" library="LoginPage">
<arg>${DEFAULT_EMAIL}</arg>
<arg>${DEFAULT_PASSWORD}</arg>
<doc>High-level keyword for logging in to Trello</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220704 23:45:03.650" level="INFO">${url} = https://trello.com/login</msg>
<status status="PASS" starttime="20220704 23:45:03.639" endtime="20220704 23:45:03.650"/>
</kw>
<if>
<branch type="IF" condition="'${url}' != '${LOGIN_URL}'">
<kw name="Go To" library="SeleniumLibrary">
<arg>${LOGIN_URL}</arg>
<doc>Navigates the current browser window to the provided ``url``.</doc>
<status status="NOT RUN" starttime="20220704 23:45:03.651" endtime="20220704 23:45:03.651"/>
</kw>
<status status="NOT RUN" starttime="20220704 23:45:03.650" endtime="20220704 23:45:03.651"/>
</branch>
<status status="PASS" starttime="20220704 23:45:03.650" endtime="20220704 23:45:03.651"/>
</if>
<kw name="Enter Username" library="LoginPage">
<arg>${username}</arg>
<doc>Take a username as argument and
enters it in the user_input</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${USER_INPUT}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 23:45:03.651" endtime="20220704 23:45:03.694"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${USER_INPUT}</arg>
<arg>${username}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220704 23:45:03.694" level="INFO">Typing text 'bootcamp04@mailinator.com' into text field 'css:input#user'.</msg>
<status status="PASS" starttime="20220704 23:45:03.694" endtime="20220704 23:45:03.834"/>
</kw>
<status status="PASS" starttime="20220704 23:45:03.651" endtime="20220704 23:45:03.834"/>
</kw>
<kw name="Wait Until Element Is Not Visible" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<doc>Waits until the element ``locator`` is not visible.</doc>
<status status="PASS" starttime="20220704 23:45:03.834" endtime="20220704 23:45:04.583"/>
</kw>
<kw name="Click Login Button" library="LoginPage">
<doc>Clicks Trello's login button if in Trello's
login page, else it clicks Atlassian's</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220704 23:45:04.590" level="INFO">${url} = https://trello.com/login</msg>
<status status="PASS" starttime="20220704 23:45:04.584" endtime="20220704 23:45:04.590"/>
</kw>
<if>
<branch type="IF" condition="'${url}' == '${LOGIN_URL}'">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220704 23:45:04.591" endtime="20220704 23:45:04.641"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220704 23:45:04.641" level="INFO">Clicking button 'css:input#login'.</msg>
<status status="PASS" starttime="20220704 23:45:04.641" endtime="20220704 23:45:05.798"/>
</kw>
<status status="PASS" starttime="20220704 23:45:04.591" endtime="20220704 23:45:05.798"/>
</branch>
<branch type="ELSE">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="NOT RUN" starttime="20220704 23:45:05.798" endtime="20220704 23:45:05.798"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<status status="NOT RUN" starttime="20220704 23:45:05.799" endtime="20220704 23:45:05.799"/>
</kw>
<status status="NOT RUN" starttime="20220704 23:45:05.798" endtime="20220704 23:45:05.799"/>
</branch>
<status status="PASS" starttime="20220704 23:45:04.590" endtime="20220704 23:45:05.799"/>
</if>
<status status="PASS" starttime="20220704 23:45:04.583" endtime="20220704 23:45:05.799"/>
</kw>
<kw name="Wait Until Location Is Atlassian's Login" library="LoginPage">
<doc>Waits for the page redirection when logging in.</doc>
<kw name="Wait Until Location Contains" library="SeleniumLibrary">
<arg>atlassian.com</arg>
<doc>Waits until the current URL contains ``expected``.</doc>
<status status="PASS" starttime="20220704 23:45:05.799" endtime="20220704 23:45:05.819"/>
</kw>
<status status="PASS" starttime="20220704 23:45:05.799" endtime="20220704 23:45:05.820"/>
</kw>
<kw name="Enter Password" library="LoginPage">
<arg>${password}</arg>
<doc>Take a password as argument and
enters it in the password_input</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<arg>timeout=${DEFAULT_TIMEOUT}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 23:45:05.820" endtime="20220704 23:45:05.912"/>
</kw>
<kw name="Input Password" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<arg>${password}</arg>
<doc>Types the given password into the text field identified by ``locator``.</doc>
<msg timestamp="20220704 23:45:05.912" level="INFO">Typing password into text field 'css:input#password'.</msg>
<msg timestamp="20220704 23:45:05.985" level="INFO">Temporally setting log level to: NONE</msg>
<msg timestamp="20220704 23:45:06.051" level="INFO">Log level changed from NONE to INFO.</msg>
<status status="PASS" starttime="20220704 23:45:05.912" endtime="20220704 23:45:06.051"/>
</kw>
<status status="PASS" starttime="20220704 23:45:05.820" endtime="20220704 23:45:06.051"/>
</kw>
<kw name="Click Login Button" library="LoginPage">
<doc>Clicks Trello's login button if in Trello's
login page, else it clicks Atlassian's</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220704 23:45:06.060" level="INFO">${url} = https://id.atlassian.com/login?application=trello&amp;continue=https%3A%2F%2Ftrello.com%2Fauth%2Fatlassian%2Fcallback%3FreturnUrl%3D%252F%26display%3D%26aaOnboarding%3D%26updateEmail%3D%26traceId%3D62c37b...</msg>
<status status="PASS" starttime="20220704 23:45:06.052" endtime="20220704 23:45:06.060"/>
</kw>
<if>
<branch type="IF" condition="'${url}' == '${LOGIN_URL}'">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="NOT RUN" starttime="20220704 23:45:06.060" endtime="20220704 23:45:06.061"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<status status="NOT RUN" starttime="20220704 23:45:06.061" endtime="20220704 23:45:06.061"/>
</kw>
<status status="NOT RUN" starttime="20220704 23:45:06.060" endtime="20220704 23:45:06.061"/>
</branch>
<branch type="ELSE">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220704 23:45:06.061" endtime="20220704 23:45:06.120"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220704 23:45:06.121" level="INFO">Clicking button 'css:button#login-submit'.</msg>
<status status="PASS" starttime="20220704 23:45:06.120" endtime="20220704 23:45:06.232"/>
</kw>
<status status="PASS" starttime="20220704 23:45:06.061" endtime="20220704 23:45:06.232"/>
</branch>
<status status="PASS" starttime="20220704 23:45:06.060" endtime="20220704 23:45:06.232"/>
</if>
<status status="PASS" starttime="20220704 23:45:06.052" endtime="20220704 23:45:06.232"/>
</kw>
<status status="PASS" starttime="20220704 23:45:03.638" endtime="20220704 23:45:06.232"/>
</kw>
<kw name="Go To Board" library="BoardsPage">
<arg>TestBoard</arg>
<doc>Receives the board name and goes to that board's page.</doc>
<kw name="Format String" library="String">
<var>${locator}</var>
<arg>${BOARD_BUTTON}</arg>
<arg>${board_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 23:45:06.233" level="INFO">${locator} = //div[@title="TestBoard"]</msg>
<status status="PASS" starttime="20220704 23:45:06.233" endtime="20220704 23:45:06.233"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 23:45:06.234" endtime="20220704 23:45:10.366"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 23:45:10.367" level="INFO">Clicking element '//div[@title="TestBoard"]'.</msg>
<status status="PASS" starttime="20220704 23:45:10.367" endtime="20220704 23:45:10.826"/>
</kw>
<status status="PASS" starttime="20220704 23:45:06.232" endtime="20220704 23:45:10.826"/>
</kw>
<kw name="Create new list with the name" library="ListComponent">
<arg>TO_MODIFY</arg>
<doc>Create a new list with the given name</doc>
<kw name="Wait Until Page Contains Element" library="SeleniumLibrary">
<arg>${ADD_LIST_BUTTON}</arg>
<arg>timeout=${DEFAULT_TIMEOUT}s</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" starttime="20220704 23:45:10.827" endtime="20220704 23:45:11.394"/>
</kw>
<kw name="Click Link" library="SeleniumLibrary">
<arg>${ADD_LIST_BUTTON}</arg>
<doc>Clicks a link identified by ``locator``.</doc>
<msg timestamp="20220704 23:45:11.395" level="INFO">Clicking link 'xpath://a[contains(@Class, 'open-add-list')]'.</msg>
<status status="PASS" starttime="20220704 23:45:11.394" endtime="20220704 23:45:11.602"/>
</kw>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LIST_NAME_INPUT}</arg>
<arg>timeout=${DEFAULT_TIMEOUT}s</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220704 23:45:11.602" endtime="20220704 23:45:11.664"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${LIST_NAME_INPUT}</arg>
<arg>${list_name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220704 23:45:11.665" level="INFO">Typing text 'TO_MODIFY' into text field 'xpath://input[@class="list-name-input"]'.</msg>
<status status="PASS" starttime="20220704 23:45:11.664" endtime="20220704 23:45:11.809"/>
</kw>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>${LIST_NAME_INPUT}</arg>
<arg>RETURN</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20220704 23:45:11.810" level="INFO">Sending key(s) ('RETURN',) to xpath://input[@class="list-name-input"] element.</msg>
<msg timestamp="20220704 23:45:12.177" level="INFO">Pressing special key RETURN to element.</msg>
<msg timestamp="20220704 23:45:12.177" level="INFO">Releasing special key RETURN.</msg>
<status status="PASS" starttime="20220704 23:45:11.809" endtime="20220704 23:45:12.213"/>
</kw>
<status status="PASS" starttime="20220704 23:45:10.826" endtime="20220704 23:45:12.213"/>
</kw>
<kw name="Modify the name of a list with" library="ListComponent">
<arg>TO_MODIFY</arg>
<arg>MODIFIED_LIST</arg>
<doc>Modify the name of an existent list</doc>
<kw name="Format String" library="String">
<var>${name_header_instance}</var>
<arg>${LIST_NAME_HEADER}</arg>
<arg>old_name=${old_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 23:45:12.214" level="INFO">${name_header_instance} = xpath://div[@class='list-header js-list-header u-clearfix is-menu-shown' and contains(.,'TO_MODIFY')]</msg>
<status status="PASS" starttime="20220704 23:45:12.213" endtime="20220704 23:45:12.214"/>
</kw>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${name_header_instance}</arg>
<arg>timeout=${DEFAULT_TIMEOUT}s</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220704 23:45:12.214" endtime="20220704 23:45:12.279"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${name_header_instance}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 23:45:12.280" level="INFO">Clicking element 'xpath://div[@class='list-header js-list-header u-clearfix is-menu-shown' and contains(.,'TO_MODIFY')]'.</msg>
<status status="PASS" starttime="20220704 23:45:12.279" endtime="20220704 23:45:12.347"/>
</kw>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LIST_NAME_INPUT}</arg>
<arg>timeout=${DEFAULT_TIMEOUT}s</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220704 23:45:12.348" endtime="20220704 23:45:12.448"/>
</kw>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>${LIST_NAME_INPUT}</arg>
<arg>BACKSPACE</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20220704 23:45:12.449" level="INFO">Sending key(s) ('BACKSPACE',) to xpath://input[@class="list-name-input"] element.</msg>
<msg timestamp="20220704 23:45:12.743" level="INFO">Pressing special key BACKSPACE to element.</msg>
<msg timestamp="20220704 23:45:12.743" level="INFO">Releasing special key BACKSPACE.</msg>
<status status="PASS" starttime="20220704 23:45:12.448" endtime="20220704 23:45:12.753"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${LIST_TEXT_AREA_NAME}</arg>
<arg>${new_name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220704 23:45:12.753" level="INFO">Typing text 'MODIFIED_LIST' into text field 'xpath://div[@class='js-list list-wrapper'][last()]//textarea'.</msg>
<status status="PASS" starttime="20220704 23:45:12.753" endtime="20220704 23:45:12.893"/>
</kw>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>None</arg>
<arg>RETURN</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20220704 23:45:12.894" level="INFO">Sending key(s) ('RETURN',) to page.</msg>
<msg timestamp="20220704 23:45:12.894" level="INFO">Pressing special key RETURN to browser.</msg>
<msg timestamp="20220704 23:45:12.894" level="INFO">Releasing special key RETURN.</msg>
<status status="PASS" starttime="20220704 23:45:12.893" endtime="20220704 23:45:12.919"/>
</kw>
<status status="PASS" starttime="20220704 23:45:12.213" endtime="20220704 23:45:12.919"/>
</kw>
<kw name="Verify That The List Exists" library="ListComponent">
<arg>MODIFIED_LIST</arg>
<doc>Verify that a given header of a list matches</doc>
<kw name="Format String" library="String">
<var>${list_name_locator}</var>
<arg>${LIST_DIV}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 23:45:12.920" level="INFO">${list_name_locator} = //h2[text()='MODIFIED_LIST']//ancestor::div[contains(@class, 'list-content')]</msg>
<status status="PASS" starttime="20220704 23:45:12.920" endtime="20220704 23:45:12.921"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${list_name_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 23:45:12.921" endtime="20220704 23:45:12.958"/>
</kw>
<kw name="Page Should Contain Element" library="SeleniumLibrary">
<arg>${list_name_locator}</arg>
<doc>Verifies that element ``locator`` is found on the current page.</doc>
<msg timestamp="20220704 23:45:12.971" level="INFO">Current page contains element '//h2[text()='MODIFIED_LIST']//ancestor::div[contains(@class, 'list-content')]'.</msg>
<status status="PASS" starttime="20220704 23:45:12.958" endtime="20220704 23:45:12.971"/>
</kw>
<status status="PASS" starttime="20220704 23:45:12.920" endtime="20220704 23:45:12.971"/>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Wait Until Keyword Succeeds</arg>
<arg>${DEFAULT_REPEAT}</arg>
<arg>${DEFAULT_INTERVAL} seconds</arg>
<arg>Close a list</arg>
<arg>AND</arg>
<arg>Close Browser</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${DEFAULT_REPEAT}</arg>
<arg>${DEFAULT_INTERVAL} seconds</arg>
<arg>Close a list</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Close a list" library="ListComponent">
<doc>archives a list</doc>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LIST_ACTIONS_BUTTON}</arg>
<arg>timeout=${DEFAULT_TIMEOUT}s</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220704 23:45:12.973" endtime="20220704 23:45:13.037"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${DEFAULT_REPEAT}</arg>
<arg>${DEFAULT_INTERVAL} seconds</arg>
<arg>Click Link</arg>
<arg>${LIST_ACTIONS_BUTTON}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Click Link" library="SeleniumLibrary">
<arg>${LIST_ACTIONS_BUTTON}</arg>
<doc>Clicks a link identified by ``locator``.</doc>
<msg timestamp="20220704 23:45:13.038" level="INFO">Clicking link 'xpath://div[@class='js-list list-wrapper'][last()]//a[@aria-label="List actions"]'.</msg>
<status status="PASS" starttime="20220704 23:45:13.038" endtime="20220704 23:45:13.145"/>
</kw>
<status status="PASS" starttime="20220704 23:45:13.037" endtime="20220704 23:45:13.145"/>
</kw>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${CLOSE_LIST_BUTTON}</arg>
<arg>timeout=${DEFAULT_TIMEOUT}s</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220704 23:45:13.145" endtime="20220704 23:45:13.216"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${DEFAULT_TIMEOUT}</arg>
<arg>${DEFAULT_INTERVAL}</arg>
<arg>Click Link</arg>
<arg>${CLOSE_LIST_BUTTON}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Click Link" library="SeleniumLibrary">
<arg>${CLOSE_LIST_BUTTON}</arg>
<doc>Clicks a link identified by ``locator``.</doc>
<msg timestamp="20220704 23:45:13.217" level="INFO">Clicking link 'xpath://li//a[@class='js-close-list']'.</msg>
<status status="PASS" starttime="20220704 23:45:13.217" endtime="20220704 23:45:13.334"/>
</kw>
<status status="PASS" starttime="20220704 23:45:13.217" endtime="20220704 23:45:13.334"/>
</kw>
<status status="PASS" starttime="20220704 23:45:12.973" endtime="20220704 23:45:13.334"/>
</kw>
<status status="PASS" starttime="20220704 23:45:12.972" endtime="20220704 23:45:13.334"/>
</kw>
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20220704 23:45:13.335" endtime="20220704 23:45:13.420"/>
</kw>
<status status="PASS" starttime="20220704 23:45:12.972" endtime="20220704 23:45:13.420"/>
</kw>
<doc>verify that a list name can be modified in GUI</doc>
<tag>gui</tag>
<tag>list.update</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220704 23:45:02.094" endtime="20220704 23:45:13.421"/>
</test>
<test id="s1-s1-s4-t3" name="archive a list" line="45">
<kw name="Open Browser From Environment" library="CommonGUI">
<arg>${LOGIN_URL}</arg>
<doc>This keywords takes REMOTE and BROWSER variables
from the environment automatically and only needs a url</doc>
<if>
<branch type="IF" condition="${is_remote}">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${url}</arg>
<arg>${BROWSER}</arg>
<arg>remote_url=http://selenium-hub:4444</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20220704 23:45:13.424" level="INFO">Opening browser 'chrome' to base url 'https://trello.com/login' through remote server at 'http://selenium-hub:4444'.</msg>
<status status="PASS" starttime="20220704 23:45:13.424" endtime="20220704 23:45:14.717"/>
</kw>
<status status="PASS" starttime="20220704 23:45:13.424" endtime="20220704 23:45:14.718"/>
</branch>
<branch type="ELSE">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${url}</arg>
<arg>${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<status status="NOT RUN" starttime="20220704 23:45:14.718" endtime="20220704 23:45:14.718"/>
</kw>
<status status="NOT RUN" starttime="20220704 23:45:14.718" endtime="20220704 23:45:14.718"/>
</branch>
<status status="PASS" starttime="20220704 23:45:13.423" endtime="20220704 23:45:14.718"/>
</if>
<status status="PASS" starttime="20220704 23:45:13.423" endtime="20220704 23:45:14.718"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20220704 23:45:14.718" endtime="20220704 23:45:14.836"/>
</kw>
<kw name="Login To Trello" library="LoginPage">
<arg>${DEFAULT_EMAIL}</arg>
<arg>${DEFAULT_PASSWORD}</arg>
<doc>High-level keyword for logging in to Trello</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220704 23:45:14.845" level="INFO">${url} = https://trello.com/login</msg>
<status status="PASS" starttime="20220704 23:45:14.837" endtime="20220704 23:45:14.845"/>
</kw>
<if>
<branch type="IF" condition="'${url}' != '${LOGIN_URL}'">
<kw name="Go To" library="SeleniumLibrary">
<arg>${LOGIN_URL}</arg>
<doc>Navigates the current browser window to the provided ``url``.</doc>
<status status="NOT RUN" starttime="20220704 23:45:14.845" endtime="20220704 23:45:14.845"/>
</kw>
<status status="NOT RUN" starttime="20220704 23:45:14.845" endtime="20220704 23:45:14.845"/>
</branch>
<status status="PASS" starttime="20220704 23:45:14.845" endtime="20220704 23:45:14.845"/>
</if>
<kw name="Enter Username" library="LoginPage">
<arg>${username}</arg>
<doc>Take a username as argument and
enters it in the user_input</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${USER_INPUT}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 23:45:14.846" endtime="20220704 23:45:14.908"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${USER_INPUT}</arg>
<arg>${username}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220704 23:45:14.909" level="INFO">Typing text 'bootcamp04@mailinator.com' into text field 'css:input#user'.</msg>
<status status="PASS" starttime="20220704 23:45:14.908" endtime="20220704 23:45:15.060"/>
</kw>
<status status="PASS" starttime="20220704 23:45:14.845" endtime="20220704 23:45:15.060"/>
</kw>
<kw name="Wait Until Element Is Not Visible" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<doc>Waits until the element ``locator`` is not visible.</doc>
<status status="PASS" starttime="20220704 23:45:15.061" endtime="20220704 23:45:15.785"/>
</kw>
<kw name="Click Login Button" library="LoginPage">
<doc>Clicks Trello's login button if in Trello's
login page, else it clicks Atlassian's</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220704 23:45:15.793" level="INFO">${url} = https://trello.com/login</msg>
<status status="PASS" starttime="20220704 23:45:15.786" endtime="20220704 23:45:15.793"/>
</kw>
<if>
<branch type="IF" condition="'${url}' == '${LOGIN_URL}'">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220704 23:45:15.794" endtime="20220704 23:45:15.863"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220704 23:45:15.863" level="INFO">Clicking button 'css:input#login'.</msg>
<status status="PASS" starttime="20220704 23:45:15.863" endtime="20220704 23:45:17.004"/>
</kw>
<status status="PASS" starttime="20220704 23:45:15.793" endtime="20220704 23:45:17.004"/>
</branch>
<branch type="ELSE">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="NOT RUN" starttime="20220704 23:45:17.005" endtime="20220704 23:45:17.005"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<status status="NOT RUN" starttime="20220704 23:45:17.005" endtime="20220704 23:45:17.005"/>
</kw>
<status status="NOT RUN" starttime="20220704 23:45:17.004" endtime="20220704 23:45:17.005"/>
</branch>
<status status="PASS" starttime="20220704 23:45:15.793" endtime="20220704 23:45:17.005"/>
</if>
<status status="PASS" starttime="20220704 23:45:15.786" endtime="20220704 23:45:17.005"/>
</kw>
<kw name="Wait Until Location Is Atlassian's Login" library="LoginPage">
<doc>Waits for the page redirection when logging in.</doc>
<kw name="Wait Until Location Contains" library="SeleniumLibrary">
<arg>atlassian.com</arg>
<doc>Waits until the current URL contains ``expected``.</doc>
<status status="PASS" starttime="20220704 23:45:17.006" endtime="20220704 23:45:17.031"/>
</kw>
<status status="PASS" starttime="20220704 23:45:17.005" endtime="20220704 23:45:17.031"/>
</kw>
<kw name="Enter Password" library="LoginPage">
<arg>${password}</arg>
<doc>Take a password as argument and
enters it in the password_input</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<arg>timeout=${DEFAULT_TIMEOUT}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 23:45:17.032" endtime="20220704 23:45:17.093"/>
</kw>
<kw name="Input Password" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<arg>${password}</arg>
<doc>Types the given password into the text field identified by ``locator``.</doc>
<msg timestamp="20220704 23:45:17.094" level="INFO">Typing password into text field 'css:input#password'.</msg>
<msg timestamp="20220704 23:45:17.175" level="INFO">Temporally setting log level to: NONE</msg>
<msg timestamp="20220704 23:45:17.265" level="INFO">Log level changed from NONE to INFO.</msg>
<status status="PASS" starttime="20220704 23:45:17.093" endtime="20220704 23:45:17.265"/>
</kw>
<status status="PASS" starttime="20220704 23:45:17.031" endtime="20220704 23:45:17.266"/>
</kw>
<kw name="Click Login Button" library="LoginPage">
<doc>Clicks Trello's login button if in Trello's
login page, else it clicks Atlassian's</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220704 23:45:17.275" level="INFO">${url} = https://id.atlassian.com/login?application=trello&amp;continue=https%3A%2F%2Ftrello.com%2Fauth%2Fatlassian%2Fcallback%3FreturnUrl%3D%252F%26display%3D%26aaOnboarding%3D%26updateEmail%3D%26traceId%3D62c37b...</msg>
<status status="PASS" starttime="20220704 23:45:17.266" endtime="20220704 23:45:17.275"/>
</kw>
<if>
<branch type="IF" condition="'${url}' == '${LOGIN_URL}'">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="NOT RUN" starttime="20220704 23:45:17.275" endtime="20220704 23:45:17.275"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<status status="NOT RUN" starttime="20220704 23:45:17.275" endtime="20220704 23:45:17.276"/>
</kw>
<status status="NOT RUN" starttime="20220704 23:45:17.275" endtime="20220704 23:45:17.276"/>
</branch>
<branch type="ELSE">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220704 23:45:17.276" endtime="20220704 23:45:17.325"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220704 23:45:17.326" level="INFO">Clicking button 'css:button#login-submit'.</msg>
<status status="PASS" starttime="20220704 23:45:17.325" endtime="20220704 23:45:17.430"/>
</kw>
<status status="PASS" starttime="20220704 23:45:17.276" endtime="20220704 23:45:17.430"/>
</branch>
<status status="PASS" starttime="20220704 23:45:17.275" endtime="20220704 23:45:17.430"/>
</if>
<status status="PASS" starttime="20220704 23:45:17.266" endtime="20220704 23:45:17.430"/>
</kw>
<status status="PASS" starttime="20220704 23:45:14.836" endtime="20220704 23:45:17.430"/>
</kw>
<kw name="Go To Board" library="BoardsPage">
<arg>TestBoard</arg>
<doc>Receives the board name and goes to that board's page.</doc>
<kw name="Format String" library="String">
<var>${locator}</var>
<arg>${BOARD_BUTTON}</arg>
<arg>${board_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 23:45:17.431" level="INFO">${locator} = //div[@title="TestBoard"]</msg>
<status status="PASS" starttime="20220704 23:45:17.431" endtime="20220704 23:45:17.431"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 23:45:17.432" endtime="20220704 23:45:21.792"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 23:45:21.793" level="INFO">Clicking element '//div[@title="TestBoard"]'.</msg>
<status status="PASS" starttime="20220704 23:45:21.793" endtime="20220704 23:45:22.310"/>
</kw>
<status status="PASS" starttime="20220704 23:45:17.431" endtime="20220704 23:45:22.311"/>
</kw>
<kw name="Create new list with the name" library="ListComponent">
<arg>TO_ARCHIVE</arg>
<doc>Create a new list with the given name</doc>
<kw name="Wait Until Page Contains Element" library="SeleniumLibrary">
<arg>${ADD_LIST_BUTTON}</arg>
<arg>timeout=${DEFAULT_TIMEOUT}s</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" starttime="20220704 23:45:22.311" endtime="20220704 23:45:22.859"/>
</kw>
<kw name="Click Link" library="SeleniumLibrary">
<arg>${ADD_LIST_BUTTON}</arg>
<doc>Clicks a link identified by ``locator``.</doc>
<msg timestamp="20220704 23:45:22.860" level="INFO">Clicking link 'xpath://a[contains(@Class, 'open-add-list')]'.</msg>
<status status="PASS" starttime="20220704 23:45:22.860" endtime="20220704 23:45:23.028"/>
</kw>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LIST_NAME_INPUT}</arg>
<arg>timeout=${DEFAULT_TIMEOUT}s</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220704 23:45:23.028" endtime="20220704 23:45:23.109"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${LIST_NAME_INPUT}</arg>
<arg>${list_name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220704 23:45:23.109" level="INFO">Typing text 'TO_ARCHIVE' into text field 'xpath://input[@class="list-name-input"]'.</msg>
<status status="PASS" starttime="20220704 23:45:23.109" endtime="20220704 23:45:23.223"/>
</kw>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>${LIST_NAME_INPUT}</arg>
<arg>RETURN</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20220704 23:45:23.224" level="INFO">Sending key(s) ('RETURN',) to xpath://input[@class="list-name-input"] element.</msg>
<msg timestamp="20220704 23:45:23.537" level="INFO">Pressing special key RETURN to element.</msg>
<msg timestamp="20220704 23:45:23.537" level="INFO">Releasing special key RETURN.</msg>
<status status="PASS" starttime="20220704 23:45:23.223" endtime="20220704 23:45:23.582"/>
</kw>
<status status="PASS" starttime="20220704 23:45:22.311" endtime="20220704 23:45:23.582"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${DEFAULT_REPEAT}</arg>
<arg>${DEFAULT_INTERVAL} seconds</arg>
<arg>Close a list</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Close a list" library="ListComponent">
<doc>archives a list</doc>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LIST_ACTIONS_BUTTON}</arg>
<arg>timeout=${DEFAULT_TIMEOUT}s</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220704 23:45:23.584" endtime="20220704 23:45:23.643"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${DEFAULT_REPEAT}</arg>
<arg>${DEFAULT_INTERVAL} seconds</arg>
<arg>Click Link</arg>
<arg>${LIST_ACTIONS_BUTTON}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Click Link" library="SeleniumLibrary">
<arg>${LIST_ACTIONS_BUTTON}</arg>
<doc>Clicks a link identified by ``locator``.</doc>
<msg timestamp="20220704 23:45:23.645" level="INFO">Clicking link 'xpath://div[@class='js-list list-wrapper'][last()]//a[@aria-label="List actions"]'.</msg>
<status status="PASS" starttime="20220704 23:45:23.644" endtime="20220704 23:45:23.757"/>
</kw>
<status status="PASS" starttime="20220704 23:45:23.644" endtime="20220704 23:45:23.757"/>
</kw>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${CLOSE_LIST_BUTTON}</arg>
<arg>timeout=${DEFAULT_TIMEOUT}s</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<msg timestamp="20220704 23:45:23.847" level="INFO">Suppressing StaleElementReferenceException from Selenium.</msg>
<kw name="Capture Page Screenshot" library="SeleniumLibrary">
<doc>Takes a screenshot of the current page and embeds it into a log file.</doc>
<msg timestamp="20220704 23:45:34.055" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="selenium-screenshot-1.png"&gt;&lt;img src="selenium-screenshot-1.png" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20220704 23:45:33.915" endtime="20220704 23:45:34.055"/>
</kw>
<msg timestamp="20220704 23:45:34.055" level="FAIL">Element with locator 'xpath://li//a[@class='js-close-list']' not found.</msg>
<status status="FAIL" starttime="20220704 23:45:23.758" endtime="20220704 23:45:34.056"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${DEFAULT_TIMEOUT}</arg>
<arg>${DEFAULT_INTERVAL}</arg>
<arg>Click Link</arg>
<arg>${CLOSE_LIST_BUTTON}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="NOT RUN" starttime="20220704 23:45:34.057" endtime="20220704 23:45:34.057"/>
</kw>
<status status="FAIL" starttime="20220704 23:45:23.583" endtime="20220704 23:45:34.057"/>
</kw>
<kw name="Close a list" library="ListComponent">
<doc>archives a list</doc>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LIST_ACTIONS_BUTTON}</arg>
<arg>timeout=${DEFAULT_TIMEOUT}s</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220704 23:45:37.059" endtime="20220704 23:45:37.099"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${DEFAULT_REPEAT}</arg>
<arg>${DEFAULT_INTERVAL} seconds</arg>
<arg>Click Link</arg>
<arg>${LIST_ACTIONS_BUTTON}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Click Link" library="SeleniumLibrary">
<arg>${LIST_ACTIONS_BUTTON}</arg>
<doc>Clicks a link identified by ``locator``.</doc>
<msg timestamp="20220704 23:45:37.100" level="INFO">Clicking link 'xpath://div[@class='js-list list-wrapper'][last()]//a[@aria-label="List actions"]'.</msg>
<status status="PASS" starttime="20220704 23:45:37.100" endtime="20220704 23:45:37.171"/>
</kw>
<status status="PASS" starttime="20220704 23:45:37.099" endtime="20220704 23:45:37.171"/>
</kw>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${CLOSE_LIST_BUTTON}</arg>
<arg>timeout=${DEFAULT_TIMEOUT}s</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220704 23:45:37.171" endtime="20220704 23:45:37.278"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${DEFAULT_TIMEOUT}</arg>
<arg>${DEFAULT_INTERVAL}</arg>
<arg>Click Link</arg>
<arg>${CLOSE_LIST_BUTTON}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Click Link" library="SeleniumLibrary">
<arg>${CLOSE_LIST_BUTTON}</arg>
<doc>Clicks a link identified by ``locator``.</doc>
<msg timestamp="20220704 23:45:37.280" level="INFO">Clicking link 'xpath://li//a[@class='js-close-list']'.</msg>
<status status="PASS" starttime="20220704 23:45:37.279" endtime="20220704 23:45:37.366"/>
</kw>
<status status="PASS" starttime="20220704 23:45:37.279" endtime="20220704 23:45:37.366"/>
</kw>
<status status="PASS" starttime="20220704 23:45:37.058" endtime="20220704 23:45:37.366"/>
</kw>
<status status="PASS" starttime="20220704 23:45:23.583" endtime="20220704 23:45:37.366"/>
</kw>
<kw name="Enter to the side menu" library="TopBar">
<doc>accesing to the archive menu in the sidebar</doc>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${SHOW_MENU_BUTTON}</arg>
<arg>timeout=${DEFAULT_TIMEOUT}s</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220704 23:45:37.367" endtime="20220704 23:45:37.413"/>
</kw>
<kw name="Click Link" library="SeleniumLibrary">
<arg>${SHOW_MENU_BUTTON}</arg>
<doc>Clicks a link identified by ``locator``.</doc>
<msg timestamp="20220704 23:45:37.414" level="INFO">Clicking link 'xpath://div[contains(@class, 'board-header')]//a[contains(., 'Show menu')]'.</msg>
<status status="PASS" starttime="20220704 23:45:37.414" endtime="20220704 23:45:37.498"/>
</kw>
<status status="PASS" starttime="20220704 23:45:37.366" endtime="20220704 23:45:37.498"/>
</kw>
<kw name="Enter to the list archive" library="ShownMenu">
<doc>accesing to the archive menu in the sidebar</doc>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${MORE_OPTIONS_SIDEBAR}</arg>
<arg>timeout=${DEFAULT_TIMEOUT}s</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220704 23:45:37.499" endtime="20220704 23:45:37.580"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${DEFAULT_TIMEOUT}</arg>
<arg>${DEFAULT_INTERVAL}</arg>
<arg>Click Link</arg>
<arg>${MORE_OPTIONS_SIDEBAR}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Click Link" library="SeleniumLibrary">
<arg>${MORE_OPTIONS_SIDEBAR}</arg>
<doc>Clicks a link identified by ``locator``.</doc>
<msg timestamp="20220704 23:45:37.582" level="INFO">Clicking link 'xpath://a[contains(@class,'board-menu-navigation-item-link') and contains(.,'More')]'.</msg>
<status status="PASS" starttime="20220704 23:45:37.581" endtime="20220704 23:45:37.716"/>
</kw>
<status status="PASS" starttime="20220704 23:45:37.581" endtime="20220704 23:45:37.716"/>
</kw>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${ARCHIVED_ITEMS_BUTTON}</arg>
<arg>timeout=${DEFAULT_TIMEOUT}s</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220704 23:45:37.716" endtime="20220704 23:45:37.776"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${DEFAULT_TIMEOUT}</arg>
<arg>${DEFAULT_INTERVAL}</arg>
<arg>Click Link</arg>
<arg>${ARCHIVED_ITEMS_BUTTON}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Click Link" library="SeleniumLibrary">
<arg>${ARCHIVED_ITEMS_BUTTON}</arg>
<doc>Clicks a link identified by ``locator``.</doc>
<msg timestamp="20220704 23:45:37.777" level="INFO">Clicking link 'xpath://a[contains(@class, 'js-open-archive')]'.</msg>
<status status="PASS" starttime="20220704 23:45:37.777" endtime="20220704 23:45:37.872"/>
</kw>
<status status="PASS" starttime="20220704 23:45:37.776" endtime="20220704 23:45:37.872"/>
</kw>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${SWITCH_TO_LIST_BUTTON}</arg>
<arg>timeout=${DEFAULT_TIMEOUT}s</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220704 23:45:37.873" endtime="20220704 23:45:37.943"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${DEFAULT_TIMEOUT}</arg>
<arg>${DEFAULT_INTERVAL}</arg>
<arg>Click Link</arg>
<arg>${SWITCH_TO_LIST_BUTTON}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Click Link" library="SeleniumLibrary">
<arg>${SWITCH_TO_LIST_BUTTON}</arg>
<doc>Clicks a link identified by ``locator``.</doc>
<msg timestamp="20220704 23:45:37.944" level="INFO">Clicking link 'xpath://div[@class='archive-controls']/a[contains(.,'Switch to lists')]'.</msg>
<status status="PASS" starttime="20220704 23:45:37.944" endtime="20220704 23:45:38.030"/>
</kw>
<status status="PASS" starttime="20220704 23:45:37.943" endtime="20220704 23:45:38.030"/>
</kw>
<status status="PASS" starttime="20220704 23:45:37.498" endtime="20220704 23:45:38.030"/>
</kw>
<kw name="Verify That A List Is In The Archive" library="ShownMenu">
<arg>TO_ARCHIVE</arg>
<doc>Verify that a given header of a list matches</doc>
<kw name="Format String" library="String">
<var>${list_name_locator_archive}</var>
<arg>${ARCHIVED_LIST_NAME_FIELD}</arg>
<arg>archived_list_title=${archived_list_title}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 23:45:38.031" level="INFO">${list_name_locator_archive} = xpath://div[@class='item-name']/span[.='TO_ARCHIVE']</msg>
<status status="PASS" starttime="20220704 23:45:38.031" endtime="20220704 23:45:38.031"/>
</kw>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${list_name_locator_archive}</arg>
<arg>timeout=${DEFAULT_TIMEOUT}s</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220704 23:45:38.031" endtime="20220704 23:45:38.303"/>
</kw>
<kw name="Page Should Contain Element" library="SeleniumLibrary">
<arg>${list_name_locator_archive}</arg>
<doc>Verifies that element ``locator`` is found on the current page.</doc>
<msg timestamp="20220704 23:45:38.314" level="INFO">Current page contains element 'xpath://div[@class='item-name']/span[.='TO_ARCHIVE']'.</msg>
<status status="PASS" starttime="20220704 23:45:38.303" endtime="20220704 23:45:38.314"/>
</kw>
<status status="PASS" starttime="20220704 23:45:38.030" endtime="20220704 23:45:38.314"/>
</kw>
<kw name="Close archive tab" library="ShownMenu">
<doc>close sidebar tab</doc>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${CLOSE_SHOW_MENU}</arg>
<arg>timeout=${DEFAULT_TIMEOUT}s</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220704 23:45:38.315" endtime="20220704 23:45:38.358"/>
</kw>
<kw name="Click Link" library="SeleniumLibrary">
<arg>${CLOSE_SHOW_MENU}</arg>
<doc>Clicks a link identified by ``locator``.</doc>
<msg timestamp="20220704 23:45:38.359" level="INFO">Clicking link 'xpath://a[@title="Close the board menu."]'.</msg>
<status status="PASS" starttime="20220704 23:45:38.358" endtime="20220704 23:45:38.447"/>
</kw>
<status status="PASS" starttime="20220704 23:45:38.314" endtime="20220704 23:45:38.448"/>
</kw>
<kw name="Close Browser" library="SeleniumLibrary" type="TEARDOWN">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20220704 23:45:38.448" endtime="20220704 23:45:38.542"/>
</kw>
<doc>verify that a list can be archived in GUI</doc>
<tag>gui</tag>
<tag>list.archive</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220704 23:45:13.422" endtime="20220704 23:45:38.542"/>
</test>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Teardown Board</arg>
<arg>Delete All Sessions</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Teardown Board">
<doc>Deletes used board for teardown</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${DEFAULT_TIMEOUT}</arg>
<arg>${DEFAULT_INTERVAL}</arg>
<arg>Delete A Board</arg>
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 23:45:38.546" level="INFO">${url} = boards/62c37b73a387b88d028dc121</msg>
<status status="PASS" starttime="20220704 23:45:38.545" endtime="20220704 23:45:38.546"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 23:45:38.863" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 23:45:38.546" endtime="20220704 23:45:38.863"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 23:45:38.863" endtime="20220704 23:45:38.863"/>
</return>
<msg timestamp="20220704 23:45:38.864" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 23:45:38.545" endtime="20220704 23:45:38.864"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 23:45:38.864" endtime="20220704 23:45:38.864"/>
</return>
<status status="PASS" starttime="20220704 23:45:38.545" endtime="20220704 23:45:38.864"/>
</kw>
<status status="PASS" starttime="20220704 23:45:38.544" endtime="20220704 23:45:38.864"/>
</kw>
<status status="PASS" starttime="20220704 23:45:38.544" endtime="20220704 23:45:38.865"/>
</kw>
<kw name="Delete All Sessions" library="request_own_library">
<status status="PASS" starttime="20220704 23:45:38.865" endtime="20220704 23:45:38.867"/>
</kw>
<status status="PASS" starttime="20220704 23:45:38.543" endtime="20220704 23:45:38.867"/>
</kw>
<doc>List Tests</doc>
<status status="PASS" starttime="20220704 23:44:51.479" endtime="20220704 23:45:38.867"/>
</suite>
<suite id="s1-s1-s5" name="Trello Gui Login" source="/trello/gui/trello_gui_login.robot">
<test id="s1-s1-s5-t1" name="Login With A Valid User and Password" line="7">
<kw name="Open Browser From Environment" library="CommonGUI">
<arg>${LOGIN_URL}</arg>
<doc>This keywords takes REMOTE and BROWSER variables
from the environment automatically and only needs a url</doc>
<if>
<branch type="IF" condition="${is_remote}">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${url}</arg>
<arg>${BROWSER}</arg>
<arg>remote_url=http://selenium-hub:4444</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20220704 23:45:38.878" level="INFO">Opening browser 'chrome' to base url 'https://trello.com/login' through remote server at 'http://selenium-hub:4444'.</msg>
<status status="PASS" starttime="20220704 23:45:38.878" endtime="20220704 23:45:40.325"/>
</kw>
<status status="PASS" starttime="20220704 23:45:38.877" endtime="20220704 23:45:40.325"/>
</branch>
<branch type="ELSE">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${url}</arg>
<arg>${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<status status="NOT RUN" starttime="20220704 23:45:40.325" endtime="20220704 23:45:40.325"/>
</kw>
<status status="NOT RUN" starttime="20220704 23:45:40.325" endtime="20220704 23:45:40.325"/>
</branch>
<status status="PASS" starttime="20220704 23:45:38.877" endtime="20220704 23:45:40.325"/>
</if>
<status status="PASS" starttime="20220704 23:45:38.877" endtime="20220704 23:45:40.325"/>
</kw>
<kw name="Enter Username" library="LoginPage">
<arg>${DEFAULT_EMAIL}</arg>
<doc>Take a username as argument and
enters it in the user_input</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${USER_INPUT}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 23:45:40.326" endtime="20220704 23:45:40.369"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${USER_INPUT}</arg>
<arg>${username}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220704 23:45:40.370" level="INFO">Typing text 'bootcamp04@mailinator.com' into text field 'css:input#user'.</msg>
<status status="PASS" starttime="20220704 23:45:40.369" endtime="20220704 23:45:40.508"/>
</kw>
<status status="PASS" starttime="20220704 23:45:40.326" endtime="20220704 23:45:40.508"/>
</kw>
<kw name="Wait Until Element Is Not Visible" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<doc>Waits until the element ``locator`` is not visible.</doc>
<status status="PASS" starttime="20220704 23:45:40.509" endtime="20220704 23:45:41.246"/>
</kw>
<kw name="Click Login Button" library="LoginPage">
<doc>Clicks Trello's login button if in Trello's
login page, else it clicks Atlassian's</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220704 23:45:41.273" level="INFO">${url} = https://trello.com/login</msg>
<status status="PASS" starttime="20220704 23:45:41.246" endtime="20220704 23:45:41.273"/>
</kw>
<if>
<branch type="IF" condition="'${url}' == '${LOGIN_URL}'">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220704 23:45:41.274" endtime="20220704 23:45:41.333"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220704 23:45:41.334" level="INFO">Clicking button 'css:input#login'.</msg>
<status status="PASS" starttime="20220704 23:45:41.333" endtime="20220704 23:45:42.526"/>
</kw>
<status status="PASS" starttime="20220704 23:45:41.274" endtime="20220704 23:45:42.526"/>
</branch>
<branch type="ELSE">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="NOT RUN" starttime="20220704 23:45:42.526" endtime="20220704 23:45:42.526"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<status status="NOT RUN" starttime="20220704 23:45:42.526" endtime="20220704 23:45:42.526"/>
</kw>
<status status="NOT RUN" starttime="20220704 23:45:42.526" endtime="20220704 23:45:42.526"/>
</branch>
<status status="PASS" starttime="20220704 23:45:41.274" endtime="20220704 23:45:42.526"/>
</if>
<status status="PASS" starttime="20220704 23:45:41.246" endtime="20220704 23:45:42.527"/>
</kw>
<kw name="Wait Until Location Is Atlassian's Login" library="LoginPage">
<doc>Waits for the page redirection when logging in.</doc>
<kw name="Wait Until Location Contains" library="SeleniumLibrary">
<arg>atlassian.com</arg>
<doc>Waits until the current URL contains ``expected``.</doc>
<status status="PASS" starttime="20220704 23:45:42.527" endtime="20220704 23:45:42.547"/>
</kw>
<status status="PASS" starttime="20220704 23:45:42.527" endtime="20220704 23:45:42.548"/>
</kw>
<kw name="Enter Password" library="LoginPage">
<arg>${DEFAULT_PASSWORD}</arg>
<doc>Take a password as argument and
enters it in the password_input</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<arg>timeout=${DEFAULT_TIMEOUT}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 23:45:42.548" endtime="20220704 23:45:42.597"/>
</kw>
<kw name="Input Password" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<arg>${password}</arg>
<doc>Types the given password into the text field identified by ``locator``.</doc>
<msg timestamp="20220704 23:45:42.597" level="INFO">Typing password into text field 'css:input#password'.</msg>
<msg timestamp="20220704 23:45:42.661" level="INFO">Temporally setting log level to: NONE</msg>
<msg timestamp="20220704 23:45:42.749" level="INFO">Log level changed from NONE to INFO.</msg>
<status status="PASS" starttime="20220704 23:45:42.597" endtime="20220704 23:45:42.749"/>
</kw>
<status status="PASS" starttime="20220704 23:45:42.548" endtime="20220704 23:45:42.749"/>
</kw>
<kw name="Click Login Button" library="LoginPage">
<doc>Clicks Trello's login button if in Trello's
login page, else it clicks Atlassian's</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220704 23:45:42.758" level="INFO">${url} = https://id.atlassian.com/login?application=trello&amp;continue=https%3A%2F%2Ftrello.com%2Fauth%2Fatlassian%2Fcallback%3FreturnUrl%3D%252F%26display%3D%26aaOnboarding%3D%26updateEmail%3D%26traceId%3D62c37b...</msg>
<status status="PASS" starttime="20220704 23:45:42.750" endtime="20220704 23:45:42.758"/>
</kw>
<if>
<branch type="IF" condition="'${url}' == '${LOGIN_URL}'">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="NOT RUN" starttime="20220704 23:45:42.759" endtime="20220704 23:45:42.759"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<status status="NOT RUN" starttime="20220704 23:45:42.759" endtime="20220704 23:45:42.759"/>
</kw>
<status status="NOT RUN" starttime="20220704 23:45:42.758" endtime="20220704 23:45:42.759"/>
</branch>
<branch type="ELSE">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220704 23:45:42.759" endtime="20220704 23:45:42.806"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220704 23:45:42.807" level="INFO">Clicking button 'css:button#login-submit'.</msg>
<status status="PASS" starttime="20220704 23:45:42.806" endtime="20220704 23:45:42.917"/>
</kw>
<status status="PASS" starttime="20220704 23:45:42.759" endtime="20220704 23:45:42.917"/>
</branch>
<status status="PASS" starttime="20220704 23:45:42.758" endtime="20220704 23:45:42.917"/>
</if>
<status status="PASS" starttime="20220704 23:45:42.749" endtime="20220704 23:45:42.917"/>
</kw>
<kw name="Verify Current Page Is Boards Page" library="BoardsPage">
<doc>Assert that the browser is showing the boards page.</doc>
<kw name="Wait Until Location Contains" library="SeleniumLibrary">
<arg>${BOARDS_PATH}</arg>
<doc>Waits until the current URL contains ``expected``.</doc>
<status status="PASS" starttime="20220704 23:45:42.918" endtime="20220704 23:45:47.091"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${YOUR_WORKSPACES}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 23:45:47.091" endtime="20220704 23:45:47.154"/>
</kw>
<kw name="Element Text Should Be" library="SeleniumLibrary">
<arg>${YOUR_WORKSPACES}</arg>
<arg>YOUR WORKSPACES</arg>
<doc>Verifies that element ``locator`` contains exact the text ``expected``.</doc>
<msg timestamp="20220704 23:45:47.155" level="INFO">Verifying element 'css:h3.boards-page-section-header-name' contains exact text 'YOUR WORKSPACES'.</msg>
<status status="PASS" starttime="20220704 23:45:47.154" endtime="20220704 23:45:47.193"/>
</kw>
<status status="PASS" starttime="20220704 23:45:42.917" endtime="20220704 23:45:47.193"/>
</kw>
<kw name="Close Browser" library="SeleniumLibrary" type="TEARDOWN">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20220704 23:45:47.194" endtime="20220704 23:45:47.277"/>
</kw>
<doc>Verify that it is possible to login through
Trello's GUI using a valid email and password.</doc>
<tag>gui</tag>
<tag>login</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220704 23:45:38.876" endtime="20220704 23:45:47.277"/>
</test>
<doc>Example Trello Login Test</doc>
<status status="PASS" starttime="20220704 23:45:38.870" endtime="20220704 23:45:47.278"/>
</suite>
<status status="PASS" starttime="20220704 23:43:09.720" endtime="20220704 23:45:47.280"/>
</suite>
<status status="PASS" starttime="20220704 23:43:09.699" endtime="20220704 23:45:47.283"/>
</suite>
<statistics>
<total>
<stat pass="15" fail="0" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="1" fail="0" skip="0">board.create</stat>
<stat pass="1" fail="0" skip="0">board.delete</stat>
<stat pass="1" fail="0" skip="0">board.update.description</stat>
<stat pass="1" fail="0" skip="0">board.update.name</stat>
<stat pass="1" fail="0" skip="0">card.comment</stat>
<stat pass="1" fail="0" skip="0">card.create</stat>
<stat pass="1" fail="0" skip="0">card.delete</stat>
<stat pass="1" fail="0" skip="0">card.drag</stat>
<stat pass="1" fail="0" skip="0">card.move</stat>
<stat pass="1" fail="0" skip="0">card.title_board</stat>
<stat pass="15" fail="0" skip="0">gui</stat>
<stat pass="1" fail="0" skip="0">list.archive</stat>
<stat pass="2" fail="0" skip="0">list.create</stat>
<stat pass="1" fail="0" skip="0">list.update</stat>
<stat pass="1" fail="0" skip="0">login</stat>
<stat pass="4" fail="0" skip="0">regression</stat>
<stat pass="11" fail="0" skip="0">smoke</stat>
</tag>
<suite>
<stat pass="15" fail="0" skip="0" id="s1" name="Trello">Trello</stat>
<stat pass="15" fail="0" skip="0" id="s1-s1" name="Gui">Trello.Gui</stat>
<stat pass="4" fail="0" skip="0" id="s1-s1-s1" name="Trello Gui Board">Trello.Gui.Trello Gui Board</stat>
<stat pass="6" fail="0" skip="0" id="s1-s1-s2" name="Trello Gui Cards">Trello.Gui.Trello Gui Cards</stat>
<stat pass="1" fail="0" skip="0" id="s1-s1-s3" name="Trello Gui Labels">Trello.Gui.Trello Gui Labels</stat>
<stat pass="3" fail="0" skip="0" id="s1-s1-s4" name="Trello Gui Lists">Trello.Gui.Trello Gui Lists</stat>
<stat pass="1" fail="0" skip="0" id="s1-s1-s5" name="Trello Gui Login">Trello.Gui.Trello Gui Login</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
