<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 5.0.1 (Python 3.10.5 on linux)" generated="20220704 23:42:10.633" rpa="false" schemaversion="3">
<suite id="s1" name="Trello" source="/trello">
<suite id="s1-s1" name="Api" source="/trello/api">
<suite id="s1-s1-s1" name="Trello Api Boards Tests" source="/trello/api/trello_api_boards_tests.robot">
<kw name="Create Trello Session" library="TrelloAPI" type="SETUP">
<doc>Creates a Trello Session</doc>
<kw name="Create Session" library="request_own_library">
<arg>${API_BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<status status="PASS" starttime="20220704 23:42:10.781" endtime="20220704 23:42:10.781"/>
</kw>
<status status="PASS" starttime="20220704 23:42:10.780" endtime="20220704 23:42:10.781"/>
</kw>
<test id="s1-s1-s1-t1" name="CREATE a board" line="9">
<kw name="Create A Board" library="Board">
<var>${response}</var>
<arg>NewBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 23:42:10.783" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 23:42:10.783" endtime="20220704 23:42:10.783"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 23:42:10.784" endtime="20220704 23:42:10.784"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 23:42:10.785" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220704 23:42:10.784" endtime="20220704 23:42:10.785"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 23:42:11.135" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 23:42:10.785" endtime="20220704 23:42:11.135"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 23:42:11.135" endtime="20220704 23:42:11.136"/>
</return>
<msg timestamp="20220704 23:42:11.136" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 23:42:10.783" endtime="20220704 23:42:11.136"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 23:42:11.136" endtime="20220704 23:42:11.136"/>
</return>
<msg timestamp="20220704 23:42:11.136" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 23:42:10.782" endtime="20220704 23:42:11.136"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>board</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220704 23:42:11.137" endtime="20220704 23:42:11.144"/>
</kw>
<status status="PASS" starttime="20220704 23:42:11.136" endtime="20220704 23:42:11.144"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${response.json()}[id]</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${response.json()}[id]</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 23:42:11.147" level="INFO">${url} = boards/62c37ad368cfb056feca62e1</msg>
<status status="PASS" starttime="20220704 23:42:11.147" endtime="20220704 23:42:11.147"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 23:42:11.497" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 23:42:11.148" endtime="20220704 23:42:11.497"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 23:42:11.497" endtime="20220704 23:42:11.497"/>
</return>
<msg timestamp="20220704 23:42:11.497" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 23:42:11.146" endtime="20220704 23:42:11.497"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 23:42:11.497" endtime="20220704 23:42:11.498"/>
</return>
<status status="PASS" starttime="20220704 23:42:11.145" endtime="20220704 23:42:11.498"/>
</kw>
<status status="PASS" starttime="20220704 23:42:11.144" endtime="20220704 23:42:11.498"/>
</kw>
<doc>Verify that a board can be create through API</doc>
<tag>api</tag>
<tag>board.create</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220704 23:42:10.782" endtime="20220704 23:42:11.498"/>
</test>
<test id="s1-s1-s1-t2" name="UPDATE a Board's name" line="16">
<kw name="Create A Board" library="Board">
<var>${response}</var>
<arg>NewBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 23:42:11.502" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 23:42:11.501" endtime="20220704 23:42:11.502"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 23:42:11.502" endtime="20220704 23:42:11.503"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 23:42:11.504" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220704 23:42:11.503" endtime="20220704 23:42:11.504"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 23:42:11.750" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 23:42:11.504" endtime="20220704 23:42:11.751"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 23:42:11.751" endtime="20220704 23:42:11.751"/>
</return>
<msg timestamp="20220704 23:42:11.751" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 23:42:11.501" endtime="20220704 23:42:11.751"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 23:42:11.751" endtime="20220704 23:42:11.751"/>
</return>
<msg timestamp="20220704 23:42:11.751" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 23:42:11.500" endtime="20220704 23:42:11.751"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>board</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220704 23:42:11.752" endtime="20220704 23:42:11.756"/>
</kw>
<status status="PASS" starttime="20220704 23:42:11.751" endtime="20220704 23:42:11.757"/>
</kw>
<kw name="Update A Board" library="Board">
<arg>${response.json()}[id]</arg>
<arg>name</arg>
<arg>NewName</arg>
<doc>Updates the board with the given ID
optional_args: name, desc, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 23:42:11.758" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 23:42:11.758" endtime="20220704 23:42:11.758"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 23:42:11.759" endtime="20220704 23:42:11.759"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 23:42:11.759" level="INFO">${url} = boards/62c37ad386b11a7b5ba386f7</msg>
<status status="PASS" starttime="20220704 23:42:11.759" endtime="20220704 23:42:11.759"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 23:42:11.877" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 23:42:11.759" endtime="20220704 23:42:11.877"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 23:42:11.878" endtime="20220704 23:42:11.878"/>
</return>
<msg timestamp="20220704 23:42:11.878" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 23:42:11.758" endtime="20220704 23:42:11.878"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 23:42:11.878" endtime="20220704 23:42:11.878"/>
</return>
<status status="PASS" starttime="20220704 23:42:11.757" endtime="20220704 23:42:11.879"/>
</kw>
<kw name="Get A Board" library="Board">
<var>${new_response}</var>
<arg>${response.json()}[id]</arg>
<doc>Gets the Board with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 23:42:11.881" level="INFO">${url} = boards/62c37ad386b11a7b5ba386f7</msg>
<status status="PASS" starttime="20220704 23:42:11.881" endtime="20220704 23:42:11.881"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 23:42:11.963" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 23:42:11.881" endtime="20220704 23:42:11.963"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 23:42:11.963" endtime="20220704 23:42:11.963"/>
</return>
<msg timestamp="20220704 23:42:11.964" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 23:42:11.880" endtime="20220704 23:42:11.964"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 23:42:11.964" endtime="20220704 23:42:11.964"/>
</return>
<msg timestamp="20220704 23:42:11.964" level="INFO">${new_response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 23:42:11.879" endtime="20220704 23:42:11.964"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${new_response}</arg>
<arg>board</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220704 23:42:11.964" endtime="20220704 23:42:11.969"/>
</kw>
<status status="PASS" starttime="20220704 23:42:11.964" endtime="20220704 23:42:11.969"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${new_response.json()}[name]</arg>
<arg>NewName</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220704 23:42:11.969" endtime="20220704 23:42:11.970"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${response.json()}[id]</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${response.json()}[id]</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 23:42:11.974" level="INFO">${url} = boards/62c37ad386b11a7b5ba386f7</msg>
<status status="PASS" starttime="20220704 23:42:11.972" endtime="20220704 23:42:11.974"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 23:42:12.299" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 23:42:11.974" endtime="20220704 23:42:12.299"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 23:42:12.299" endtime="20220704 23:42:12.299"/>
</return>
<msg timestamp="20220704 23:42:12.299" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 23:42:11.972" endtime="20220704 23:42:12.299"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 23:42:12.299" endtime="20220704 23:42:12.299"/>
</return>
<status status="PASS" starttime="20220704 23:42:11.971" endtime="20220704 23:42:12.300"/>
</kw>
<status status="PASS" starttime="20220704 23:42:11.970" endtime="20220704 23:42:12.300"/>
</kw>
<doc>Verify that a board's name can be updated through API</doc>
<tag>api</tag>
<tag>board.update</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220704 23:42:11.499" endtime="20220704 23:42:12.300"/>
</test>
<test id="s1-s1-s1-t3" name="DELETE A Board" line="27">
<kw name="Create A Board" library="Board">
<var>${response}</var>
<arg>NewBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 23:42:12.304" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 23:42:12.303" endtime="20220704 23:42:12.304"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 23:42:12.304" endtime="20220704 23:42:12.304"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 23:42:12.306" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220704 23:42:12.305" endtime="20220704 23:42:12.306"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 23:42:12.485" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 23:42:12.306" endtime="20220704 23:42:12.485"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 23:42:12.485" endtime="20220704 23:42:12.485"/>
</return>
<msg timestamp="20220704 23:42:12.485" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 23:42:12.302" endtime="20220704 23:42:12.485"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 23:42:12.485" endtime="20220704 23:42:12.486"/>
</return>
<msg timestamp="20220704 23:42:12.486" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 23:42:12.302" endtime="20220704 23:42:12.486"/>
</kw>
<kw name="Delete A Board" library="Board">
<arg>${response.json()}[id]</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 23:42:12.489" level="INFO">${url} = boards/62c37ad492aacc453c0b9912</msg>
<status status="PASS" starttime="20220704 23:42:12.488" endtime="20220704 23:42:12.489"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 23:42:12.876" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 23:42:12.489" endtime="20220704 23:42:12.876"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 23:42:12.876" endtime="20220704 23:42:12.876"/>
</return>
<msg timestamp="20220704 23:42:12.877" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 23:42:12.488" endtime="20220704 23:42:12.877"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 23:42:12.877" endtime="20220704 23:42:12.877"/>
</return>
<status status="PASS" starttime="20220704 23:42:12.486" endtime="20220704 23:42:12.877"/>
</kw>
<kw name="Get A Board" library="Board">
<arg>${response.json()}[id]</arg>
<arg>status_code=404</arg>
<doc>Gets the Board with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 23:42:12.880" level="INFO">${url} = boards/62c37ad492aacc453c0b9912</msg>
<status status="PASS" starttime="20220704 23:42:12.880" endtime="20220704 23:42:12.881"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 23:42:12.950" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220704 23:42:12.881" endtime="20220704 23:42:12.950"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 23:42:12.950" endtime="20220704 23:42:12.950"/>
</return>
<msg timestamp="20220704 23:42:12.950" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220704 23:42:12.879" endtime="20220704 23:42:12.950"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 23:42:12.950" endtime="20220704 23:42:12.950"/>
</return>
<status status="PASS" starttime="20220704 23:42:12.877" endtime="20220704 23:42:12.951"/>
</kw>
<doc>Verify that a board can be deleted through API</doc>
<tag>api</tag>
<tag>board.delete</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220704 23:42:12.301" endtime="20220704 23:42:12.951"/>
</test>
<test id="s1-s1-s1-t4" name="GET Information of A Board" line="34">
<kw name="Create A Board" library="Board">
<var>${response}</var>
<arg>BoardTest</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 23:42:12.954" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 23:42:12.954" endtime="20220704 23:42:12.954"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 23:42:12.954" endtime="20220704 23:42:12.955"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 23:42:12.956" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220704 23:42:12.955" endtime="20220704 23:42:12.956"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 23:42:13.129" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 23:42:12.956" endtime="20220704 23:42:13.129"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 23:42:13.129" endtime="20220704 23:42:13.129"/>
</return>
<msg timestamp="20220704 23:42:13.130" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 23:42:12.954" endtime="20220704 23:42:13.130"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 23:42:13.130" endtime="20220704 23:42:13.130"/>
</return>
<msg timestamp="20220704 23:42:13.130" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 23:42:12.953" endtime="20220704 23:42:13.130"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>board</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220704 23:42:13.131" endtime="20220704 23:42:13.137"/>
</kw>
<status status="PASS" starttime="20220704 23:42:13.130" endtime="20220704 23:42:13.138"/>
</kw>
<kw name="Get A Board" library="Board">
<var>${response2}</var>
<arg>${response.json()}[id]</arg>
<doc>Gets the Board with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 23:42:13.140" level="INFO">${url} = boards/62c37ad5efb117026612dce7</msg>
<status status="PASS" starttime="20220704 23:42:13.139" endtime="20220704 23:42:13.140"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 23:42:13.213" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 23:42:13.140" endtime="20220704 23:42:13.213"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 23:42:13.213" endtime="20220704 23:42:13.213"/>
</return>
<msg timestamp="20220704 23:42:13.214" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 23:42:13.139" endtime="20220704 23:42:13.214"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 23:42:13.214" endtime="20220704 23:42:13.214"/>
</return>
<msg timestamp="20220704 23:42:13.214" level="INFO">${response2} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 23:42:13.138" endtime="20220704 23:42:13.214"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response2}</arg>
<arg>board</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220704 23:42:13.215" endtime="20220704 23:42:13.220"/>
</kw>
<status status="PASS" starttime="20220704 23:42:13.214" endtime="20220704 23:42:13.220"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${response2.json()}[name]</arg>
<arg>BoardTest</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220704 23:42:13.220" endtime="20220704 23:42:13.221"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${response.json()}[id]</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${response.json()}[id]</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 23:42:13.224" level="INFO">${url} = boards/62c37ad5efb117026612dce7</msg>
<status status="PASS" starttime="20220704 23:42:13.223" endtime="20220704 23:42:13.224"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 23:42:13.525" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 23:42:13.224" endtime="20220704 23:42:13.525"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 23:42:13.525" endtime="20220704 23:42:13.525"/>
</return>
<msg timestamp="20220704 23:42:13.525" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 23:42:13.223" endtime="20220704 23:42:13.525"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 23:42:13.526" endtime="20220704 23:42:13.526"/>
</return>
<status status="PASS" starttime="20220704 23:42:13.222" endtime="20220704 23:42:13.526"/>
</kw>
<status status="PASS" starttime="20220704 23:42:13.222" endtime="20220704 23:42:13.526"/>
</kw>
<doc>Verify that a board's information can be accesed through API</doc>
<tag>api</tag>
<tag>board.get</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220704 23:42:12.952" endtime="20220704 23:42:13.526"/>
</test>
<test id="s1-s1-s1-t5" name="UPDATE a Board's description" line="45">
<kw name="Create A Board" library="Board">
<var>${response}</var>
<arg>NewBoardForTest</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 23:42:13.530" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 23:42:13.530" endtime="20220704 23:42:13.530"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 23:42:13.530" endtime="20220704 23:42:13.531"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 23:42:13.532" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220704 23:42:13.531" endtime="20220704 23:42:13.532"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 23:42:13.746" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 23:42:13.532" endtime="20220704 23:42:13.746"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 23:42:13.746" endtime="20220704 23:42:13.747"/>
</return>
<msg timestamp="20220704 23:42:13.747" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 23:42:13.529" endtime="20220704 23:42:13.747"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 23:42:13.747" endtime="20220704 23:42:13.747"/>
</return>
<msg timestamp="20220704 23:42:13.748" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 23:42:13.528" endtime="20220704 23:42:13.748"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>board</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220704 23:42:13.749" endtime="20220704 23:42:13.755"/>
</kw>
<status status="PASS" starttime="20220704 23:42:13.748" endtime="20220704 23:42:13.755"/>
</kw>
<kw name="Update A Board" library="Board">
<arg>${response.json()}[id]</arg>
<arg>desc</arg>
<arg>sampleDescription</arg>
<doc>Updates the board with the given ID
optional_args: name, desc, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 23:42:13.757" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 23:42:13.757" endtime="20220704 23:42:13.757"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 23:42:13.757" endtime="20220704 23:42:13.757"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 23:42:13.758" level="INFO">${url} = boards/62c37ad52f587d57d11bd0e3</msg>
<status status="PASS" starttime="20220704 23:42:13.757" endtime="20220704 23:42:13.758"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 23:42:13.871" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 23:42:13.758" endtime="20220704 23:42:13.871"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 23:42:13.871" endtime="20220704 23:42:13.871"/>
</return>
<msg timestamp="20220704 23:42:13.872" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 23:42:13.756" endtime="20220704 23:42:13.872"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 23:42:13.872" endtime="20220704 23:42:13.872"/>
</return>
<status status="PASS" starttime="20220704 23:42:13.755" endtime="20220704 23:42:13.872"/>
</kw>
<kw name="Get A Board" library="Board">
<var>${new_response}</var>
<arg>${response.json()}[id]</arg>
<doc>Gets the Board with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 23:42:13.875" level="INFO">${url} = boards/62c37ad52f587d57d11bd0e3</msg>
<status status="PASS" starttime="20220704 23:42:13.875" endtime="20220704 23:42:13.875"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 23:42:13.958" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 23:42:13.875" endtime="20220704 23:42:13.958"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 23:42:13.958" endtime="20220704 23:42:13.959"/>
</return>
<msg timestamp="20220704 23:42:13.959" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 23:42:13.874" endtime="20220704 23:42:13.959"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 23:42:13.959" endtime="20220704 23:42:13.959"/>
</return>
<msg timestamp="20220704 23:42:13.960" level="INFO">${new_response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 23:42:13.873" endtime="20220704 23:42:13.960"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${new_response.json()}[desc]</arg>
<arg>sampleDescription</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220704 23:42:13.960" endtime="20220704 23:42:13.962"/>
</kw>
<kw name="Update A Board" library="Board">
<arg>${response.json()}[id]</arg>
<arg>desc</arg>
<arg>updatedDescription</arg>
<doc>Updates the board with the given ID
optional_args: name, desc, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 23:42:13.965" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 23:42:13.965" endtime="20220704 23:42:13.965"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 23:42:13.965" endtime="20220704 23:42:13.966"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 23:42:13.966" level="INFO">${url} = boards/62c37ad52f587d57d11bd0e3</msg>
<status status="PASS" starttime="20220704 23:42:13.966" endtime="20220704 23:42:13.966"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 23:42:14.096" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 23:42:13.966" endtime="20220704 23:42:14.096"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 23:42:14.096" endtime="20220704 23:42:14.096"/>
</return>
<msg timestamp="20220704 23:42:14.097" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 23:42:13.963" endtime="20220704 23:42:14.097"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 23:42:14.097" endtime="20220704 23:42:14.097"/>
</return>
<status status="PASS" starttime="20220704 23:42:13.962" endtime="20220704 23:42:14.097"/>
</kw>
<kw name="Get A Board" library="Board">
<var>${new_response2}</var>
<arg>${response.json()}[id]</arg>
<doc>Gets the Board with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 23:42:14.099" level="INFO">${url} = boards/62c37ad52f587d57d11bd0e3</msg>
<status status="PASS" starttime="20220704 23:42:14.099" endtime="20220704 23:42:14.099"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 23:42:14.171" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 23:42:14.099" endtime="20220704 23:42:14.171"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 23:42:14.171" endtime="20220704 23:42:14.171"/>
</return>
<msg timestamp="20220704 23:42:14.172" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 23:42:14.098" endtime="20220704 23:42:14.172"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 23:42:14.172" endtime="20220704 23:42:14.172"/>
</return>
<msg timestamp="20220704 23:42:14.172" level="INFO">${new_response2} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 23:42:14.097" endtime="20220704 23:42:14.172"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${new_response2.json()}[desc]</arg>
<arg>updatedDescription</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220704 23:42:14.173" endtime="20220704 23:42:14.174"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${response.json()}[id]</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${response.json()}[id]</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 23:42:14.178" level="INFO">${url} = boards/62c37ad52f587d57d11bd0e3</msg>
<status status="PASS" starttime="20220704 23:42:14.178" endtime="20220704 23:42:14.178"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 23:42:14.500" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 23:42:14.178" endtime="20220704 23:42:14.500"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 23:42:14.501" endtime="20220704 23:42:14.501"/>
</return>
<msg timestamp="20220704 23:42:14.501" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 23:42:14.177" endtime="20220704 23:42:14.501"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 23:42:14.501" endtime="20220704 23:42:14.501"/>
</return>
<status status="PASS" starttime="20220704 23:42:14.175" endtime="20220704 23:42:14.501"/>
</kw>
<status status="PASS" starttime="20220704 23:42:14.174" endtime="20220704 23:42:14.501"/>
</kw>
<doc>Verify that a board's description can be updated through API</doc>
<tag>api</tag>
<tag>board.update</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220704 23:42:13.527" endtime="20220704 23:42:14.502"/>
</test>
<kw name="Delete All Sessions" library="request_own_library" type="TEARDOWN">
<status status="PASS" starttime="20220704 23:42:14.503" endtime="20220704 23:42:14.504"/>
</kw>
<doc>Example Test with Trello API Boards</doc>
<status status="PASS" starttime="20220704 23:42:10.655" endtime="20220704 23:42:14.504"/>
</suite>
<suite id="s1-s1-s2" name="Trello Api Cards Tests" source="/trello/api/trello_api_cards_tests.robot">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Create Trello Session</arg>
<arg>Setup Board And List</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Create Trello Session" library="TrelloAPI">
<doc>Creates a Trello Session</doc>
<kw name="Create Session" library="request_own_library">
<arg>${API_BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<status status="PASS" starttime="20220704 23:42:14.517" endtime="20220704 23:42:14.517"/>
</kw>
<status status="PASS" starttime="20220704 23:42:14.517" endtime="20220704 23:42:14.518"/>
</kw>
<kw name="Setup Board And List">
<doc>Create a board and save its ID and its first list's ID</doc>
<kw name="Create A Board" library="Board">
<var>${BOARD}</var>
<arg>TestBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 23:42:14.519" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 23:42:14.519" endtime="20220704 23:42:14.519"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 23:42:14.519" endtime="20220704 23:42:14.519"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 23:42:14.520" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220704 23:42:14.519" endtime="20220704 23:42:14.520"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 23:42:14.786" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 23:42:14.520" endtime="20220704 23:42:14.786"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 23:42:14.786" endtime="20220704 23:42:14.786"/>
</return>
<msg timestamp="20220704 23:42:14.787" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 23:42:14.518" endtime="20220704 23:42:14.787"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 23:42:14.787" endtime="20220704 23:42:14.787"/>
</return>
<msg timestamp="20220704 23:42:14.787" level="INFO">${BOARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 23:42:14.518" endtime="20220704 23:42:14.787"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_BOARD_ID}</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220704 23:42:14.789" level="INFO">${TEST_SUITE_BOARD_ID} = 62c37ad605302e4a1f2c6d20</msg>
<status status="PASS" starttime="20220704 23:42:14.788" endtime="20220704 23:42:14.789"/>
</kw>
<kw name="Get Lists On A Board" library="Board">
<var>${LISTS}</var>
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Get all the lists in a board</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>lists_on_board</arg>
<arg>${id}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 23:42:14.791" level="INFO">${url} = boards/62c37ad605302e4a1f2c6d20/lists/</msg>
<status status="PASS" starttime="20220704 23:42:14.791" endtime="20220704 23:42:14.791"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 23:42:14.870" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 23:42:14.792" endtime="20220704 23:42:14.870"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 23:42:14.870" endtime="20220704 23:42:14.870"/>
</return>
<msg timestamp="20220704 23:42:14.870" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 23:42:14.790" endtime="20220704 23:42:14.870"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 23:42:14.870" endtime="20220704 23:42:14.871"/>
</return>
<msg timestamp="20220704 23:42:14.871" level="INFO">${LISTS} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 23:42:14.790" endtime="20220704 23:42:14.871"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_LIST_ID}</arg>
<arg>${LISTS.json()}[0][id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220704 23:42:14.873" level="INFO">${TEST_SUITE_LIST_ID} = 62c37ad605302e4a1f2c6d27</msg>
<status status="PASS" starttime="20220704 23:42:14.871" endtime="20220704 23:42:14.873"/>
</kw>
<status status="PASS" starttime="20220704 23:42:14.518" endtime="20220704 23:42:14.873"/>
</kw>
<status status="PASS" starttime="20220704 23:42:14.517" endtime="20220704 23:42:14.873"/>
</kw>
<test id="s1-s1-s2-t1" name="Verify A Card Can Be Created" line="13">
<kw name="Create A Card" library="Card">
<var>${response}</var>
<arg>name</arg>
<arg>RFCard2</arg>
<doc>Creates a new card in the given list.
required_args: listId
optional_args: name, desc, pos, idCardSource, idLabels, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>@{optional_args}</arg>
<arg>idList</arg>
<arg>${idList}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 23:42:14.876" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 23:42:14.876" endtime="20220704 23:42:14.876"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 23:42:14.876" endtime="20220704 23:42:14.876"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 23:42:14.877" level="INFO">${url} = cards/</msg>
<status status="PASS" starttime="20220704 23:42:14.876" endtime="20220704 23:42:14.877"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 23:42:15.057" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 23:42:14.877" endtime="20220704 23:42:15.057"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 23:42:15.057" endtime="20220704 23:42:15.057"/>
</return>
<msg timestamp="20220704 23:42:15.058" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 23:42:14.875" endtime="20220704 23:42:15.058"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 23:42:15.058" endtime="20220704 23:42:15.058"/>
</return>
<msg timestamp="20220704 23:42:15.058" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 23:42:14.874" endtime="20220704 23:42:15.058"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>card</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220704 23:42:15.059" endtime="20220704 23:42:15.064"/>
</kw>
<status status="PASS" starttime="20220704 23:42:15.058" endtime="20220704 23:42:15.064"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 23:42:15.065" endtime="20220704 23:42:15.065"/>
</return>
<msg timestamp="20220704 23:42:15.066" level="INFO">${CARD_ID} = 62c37ad6b121494d3faeacbc</msg>
<status status="PASS" starttime="20220704 23:42:15.065" endtime="20220704 23:42:15.066"/>
</kw>
<kw name="Get A Card" library="Card">
<var>${response}</var>
<arg>${CARD_ID}</arg>
<doc>Gets the card with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 23:42:15.067" level="INFO">${url} = cards/62c37ad6b121494d3faeacbc</msg>
<status status="PASS" starttime="20220704 23:42:15.067" endtime="20220704 23:42:15.067"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 23:42:15.151" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 23:42:15.067" endtime="20220704 23:42:15.151"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 23:42:15.151" endtime="20220704 23:42:15.151"/>
</return>
<msg timestamp="20220704 23:42:15.152" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 23:42:15.066" endtime="20220704 23:42:15.152"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 23:42:15.152" endtime="20220704 23:42:15.152"/>
</return>
<msg timestamp="20220704 23:42:15.152" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 23:42:15.066" endtime="20220704 23:42:15.152"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_NAME}</var>
<arg>${response}</arg>
<arg>name</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 23:42:15.153" endtime="20220704 23:42:15.153"/>
</return>
<msg timestamp="20220704 23:42:15.155" level="INFO">${CARD_NAME} = RFCard2</msg>
<status status="PASS" starttime="20220704 23:42:15.153" endtime="20220704 23:42:15.155"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${CARD_NAME}</arg>
<arg>RFCard2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220704 23:42:15.155" endtime="20220704 23:42:15.155"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Card</arg>
<arg>${CARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Card" library="Card">
<arg>${CARD_ID}</arg>
<doc>Deletes the card with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 23:42:15.159" level="INFO">${url} = cards/62c37ad6b121494d3faeacbc</msg>
<status status="PASS" starttime="20220704 23:42:15.158" endtime="20220704 23:42:15.159"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 23:42:15.339" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 23:42:15.159" endtime="20220704 23:42:15.339"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 23:42:15.339" endtime="20220704 23:42:15.339"/>
</return>
<msg timestamp="20220704 23:42:15.340" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 23:42:15.157" endtime="20220704 23:42:15.340"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 23:42:15.340" endtime="20220704 23:42:15.340"/>
</return>
<status status="PASS" starttime="20220704 23:42:15.156" endtime="20220704 23:42:15.340"/>
</kw>
<status status="PASS" starttime="20220704 23:42:15.156" endtime="20220704 23:42:15.340"/>
</kw>
<doc>Verify that a card can be created through API</doc>
<tag>api</tag>
<tag>card.create</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220704 23:42:14.873" endtime="20220704 23:42:15.341"/>
</test>
<test id="s1-s1-s2-t2" name="Verify A Card Can Be Closed" line="24">
<kw name="Create A Card" library="Card">
<var>${response}</var>
<doc>Creates a new card in the given list.
required_args: listId
optional_args: name, desc, pos, idCardSource, idLabels, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>@{optional_args}</arg>
<arg>idList</arg>
<arg>${idList}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 23:42:15.343" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 23:42:15.343" endtime="20220704 23:42:15.343"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 23:42:15.343" endtime="20220704 23:42:15.343"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 23:42:15.344" level="INFO">${url} = cards/</msg>
<status status="PASS" starttime="20220704 23:42:15.343" endtime="20220704 23:42:15.344"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 23:42:15.517" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 23:42:15.344" endtime="20220704 23:42:15.517"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 23:42:15.517" endtime="20220704 23:42:15.517"/>
</return>
<msg timestamp="20220704 23:42:15.518" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 23:42:15.342" endtime="20220704 23:42:15.518"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 23:42:15.518" endtime="20220704 23:42:15.518"/>
</return>
<msg timestamp="20220704 23:42:15.518" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 23:42:15.341" endtime="20220704 23:42:15.518"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 23:42:15.519" endtime="20220704 23:42:15.519"/>
</return>
<msg timestamp="20220704 23:42:15.519" level="INFO">${CARD_ID} = 62c37ad744380e89d2726a8e</msg>
<status status="PASS" starttime="20220704 23:42:15.518" endtime="20220704 23:42:15.519"/>
</kw>
<kw name="Archive A Card" library="Card">
<arg>${CARD_ID}</arg>
<doc>Modifies the card status to closed.</doc>
<kw name="Update A Card" library="Card">
<var>${response}</var>
<arg>${id}</arg>
<arg>closed</arg>
<arg>true</arg>
<arg>status_code=${status_code}</arg>
<doc>Updates the card with the given ID
optional_args: name, desc, closed, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<arg>status_code=${status_code}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 23:42:15.522" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 23:42:15.522" endtime="20220704 23:42:15.522"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 23:42:15.522" endtime="20220704 23:42:15.523"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 23:42:15.523" level="INFO">${url} = cards/62c37ad744380e89d2726a8e</msg>
<status status="PASS" starttime="20220704 23:42:15.523" endtime="20220704 23:42:15.523"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 23:42:15.671" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 23:42:15.523" endtime="20220704 23:42:15.671"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 23:42:15.671" endtime="20220704 23:42:15.671"/>
</return>
<msg timestamp="20220704 23:42:15.672" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 23:42:15.521" endtime="20220704 23:42:15.672"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 23:42:15.672" endtime="20220704 23:42:15.672"/>
</return>
<msg timestamp="20220704 23:42:15.672" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 23:42:15.520" endtime="20220704 23:42:15.672"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 23:42:15.672" endtime="20220704 23:42:15.672"/>
</return>
<status status="PASS" starttime="20220704 23:42:15.520" endtime="20220704 23:42:15.673"/>
</kw>
<kw name="Get A Card" library="Card">
<var>${response}</var>
<arg>${CARD_ID}</arg>
<doc>Gets the card with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 23:42:15.675" level="INFO">${url} = cards/62c37ad744380e89d2726a8e</msg>
<status status="PASS" starttime="20220704 23:42:15.674" endtime="20220704 23:42:15.675"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 23:42:15.763" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 23:42:15.675" endtime="20220704 23:42:15.763"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 23:42:15.763" endtime="20220704 23:42:15.763"/>
</return>
<msg timestamp="20220704 23:42:15.764" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 23:42:15.674" endtime="20220704 23:42:15.764"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 23:42:15.764" endtime="20220704 23:42:15.764"/>
</return>
<msg timestamp="20220704 23:42:15.764" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 23:42:15.673" endtime="20220704 23:42:15.764"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_CLOSED}</var>
<arg>${response}</arg>
<arg>closed</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 23:42:15.765" endtime="20220704 23:42:15.765"/>
</return>
<msg timestamp="20220704 23:42:15.766" level="INFO">${CARD_CLOSED} = True</msg>
<status status="PASS" starttime="20220704 23:42:15.764" endtime="20220704 23:42:15.766"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${CARD_CLOSED}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220704 23:42:15.766" endtime="20220704 23:42:15.766"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Card</arg>
<arg>${CARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Card" library="Card">
<arg>${CARD_ID}</arg>
<doc>Deletes the card with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 23:42:15.770" level="INFO">${url} = cards/62c37ad744380e89d2726a8e</msg>
<status status="PASS" starttime="20220704 23:42:15.769" endtime="20220704 23:42:15.770"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 23:42:15.922" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 23:42:15.770" endtime="20220704 23:42:15.922"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 23:42:15.922" endtime="20220704 23:42:15.922"/>
</return>
<msg timestamp="20220704 23:42:15.923" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 23:42:15.768" endtime="20220704 23:42:15.923"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 23:42:15.923" endtime="20220704 23:42:15.923"/>
</return>
<status status="PASS" starttime="20220704 23:42:15.767" endtime="20220704 23:42:15.923"/>
</kw>
<status status="PASS" starttime="20220704 23:42:15.767" endtime="20220704 23:42:15.923"/>
</kw>
<doc>Verify that a card can be closed through API</doc>
<tag>api</tag>
<tag>card.close</tag>
<tag>regression</tag>
<status status="PASS" starttime="20220704 23:42:15.341" endtime="20220704 23:42:15.923"/>
</test>
<test id="s1-s1-s2-t3" name="Verify A Card Can Be Deleted" line="35">
<kw name="Create A Card" library="Card">
<var>${response}</var>
<doc>Creates a new card in the given list.
required_args: listId
optional_args: name, desc, pos, idCardSource, idLabels, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>@{optional_args}</arg>
<arg>idList</arg>
<arg>${idList}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 23:42:15.928" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 23:42:15.928" endtime="20220704 23:42:15.928"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 23:42:15.929" endtime="20220704 23:42:15.929"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 23:42:15.930" level="INFO">${url} = cards/</msg>
<status status="PASS" starttime="20220704 23:42:15.929" endtime="20220704 23:42:15.930"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 23:42:16.095" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 23:42:15.930" endtime="20220704 23:42:16.095"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 23:42:16.095" endtime="20220704 23:42:16.095"/>
</return>
<msg timestamp="20220704 23:42:16.095" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 23:42:15.927" endtime="20220704 23:42:16.096"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 23:42:16.096" endtime="20220704 23:42:16.096"/>
</return>
<msg timestamp="20220704 23:42:16.096" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 23:42:15.926" endtime="20220704 23:42:16.096"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 23:42:16.097" endtime="20220704 23:42:16.097"/>
</return>
<msg timestamp="20220704 23:42:16.098" level="INFO">${CARD_ID} = 62c37ad83f1ae57556674062</msg>
<status status="PASS" starttime="20220704 23:42:16.096" endtime="20220704 23:42:16.098"/>
</kw>
<kw name="Delete A Card" library="Card">
<var>${response}</var>
<arg>${CARD_ID}</arg>
<doc>Deletes the card with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 23:42:16.101" level="INFO">${url} = cards/62c37ad83f1ae57556674062</msg>
<status status="PASS" starttime="20220704 23:42:16.100" endtime="20220704 23:42:16.101"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 23:42:16.282" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 23:42:16.101" endtime="20220704 23:42:16.282"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 23:42:16.282" endtime="20220704 23:42:16.282"/>
</return>
<msg timestamp="20220704 23:42:16.283" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 23:42:16.099" endtime="20220704 23:42:16.283"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 23:42:16.283" endtime="20220704 23:42:16.283"/>
</return>
<msg timestamp="20220704 23:42:16.283" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 23:42:16.099" endtime="20220704 23:42:16.283"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>delete</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220704 23:42:16.284" endtime="20220704 23:42:16.286"/>
</kw>
<status status="PASS" starttime="20220704 23:42:16.283" endtime="20220704 23:42:16.286"/>
</kw>
<kw name="Get A Card" library="Card">
<arg>${CARD_ID}</arg>
<arg>status_code=404</arg>
<doc>Gets the card with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 23:42:16.287" level="INFO">${url} = cards/62c37ad83f1ae57556674062</msg>
<status status="PASS" starttime="20220704 23:42:16.287" endtime="20220704 23:42:16.287"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 23:42:16.359" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220704 23:42:16.287" endtime="20220704 23:42:16.359"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 23:42:16.360" endtime="20220704 23:42:16.360"/>
</return>
<msg timestamp="20220704 23:42:16.360" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220704 23:42:16.286" endtime="20220704 23:42:16.360"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 23:42:16.360" endtime="20220704 23:42:16.360"/>
</return>
<status status="PASS" starttime="20220704 23:42:16.286" endtime="20220704 23:42:16.361"/>
</kw>
<doc>Verify that a card can be deleted through API</doc>
<tag>api</tag>
<tag>card.delete</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220704 23:42:15.924" endtime="20220704 23:42:16.361"/>
</test>
<test id="s1-s1-s2-t4" name="Verify A Card Can Be Updated" line="44">
<kw name="Create A Card" library="Card">
<var>${response}</var>
<arg>name</arg>
<arg>RFCard4</arg>
<doc>Creates a new card in the given list.
required_args: listId
optional_args: name, desc, pos, idCardSource, idLabels, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>@{optional_args}</arg>
<arg>idList</arg>
<arg>${idList}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 23:42:16.365" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 23:42:16.365" endtime="20220704 23:42:16.365"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 23:42:16.365" endtime="20220704 23:42:16.365"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 23:42:16.366" level="INFO">${url} = cards/</msg>
<status status="PASS" starttime="20220704 23:42:16.366" endtime="20220704 23:42:16.366"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 23:42:16.531" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 23:42:16.367" endtime="20220704 23:42:16.531"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 23:42:16.531" endtime="20220704 23:42:16.531"/>
</return>
<msg timestamp="20220704 23:42:16.531" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 23:42:16.364" endtime="20220704 23:42:16.531"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 23:42:16.531" endtime="20220704 23:42:16.532"/>
</return>
<msg timestamp="20220704 23:42:16.532" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 23:42:16.363" endtime="20220704 23:42:16.532"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 23:42:16.533" endtime="20220704 23:42:16.533"/>
</return>
<msg timestamp="20220704 23:42:16.534" level="INFO">${CARD_ID} = 62c37ad8cac93932015e2289</msg>
<status status="PASS" starttime="20220704 23:42:16.532" endtime="20220704 23:42:16.534"/>
</kw>
<kw name="Update A Card" library="Card">
<var>${response}</var>
<arg>${CARD_ID}</arg>
<arg>name</arg>
<arg>RFCard5</arg>
<arg>desc</arg>
<arg>Description</arg>
<doc>Updates the card with the given ID
optional_args: name, desc, closed, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<arg>status_code=${status_code}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 23:42:16.536" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 23:42:16.536" endtime="20220704 23:42:16.537"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 23:42:16.537" endtime="20220704 23:42:16.537"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 23:42:16.537" level="INFO">${url} = cards/62c37ad8cac93932015e2289</msg>
<status status="PASS" starttime="20220704 23:42:16.537" endtime="20220704 23:42:16.537"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 23:42:16.721" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 23:42:16.537" endtime="20220704 23:42:16.722"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 23:42:16.722" endtime="20220704 23:42:16.722"/>
</return>
<msg timestamp="20220704 23:42:16.722" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 23:42:16.535" endtime="20220704 23:42:16.722"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 23:42:16.722" endtime="20220704 23:42:16.722"/>
</return>
<msg timestamp="20220704 23:42:16.723" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 23:42:16.534" endtime="20220704 23:42:16.723"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>card</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220704 23:42:16.724" endtime="20220704 23:42:16.732"/>
</kw>
<status status="PASS" starttime="20220704 23:42:16.723" endtime="20220704 23:42:16.732"/>
</kw>
<kw name="Get A Card" library="Card">
<var>${response}</var>
<arg>${CARD_ID}</arg>
<doc>Gets the card with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 23:42:16.733" level="INFO">${url} = cards/62c37ad8cac93932015e2289</msg>
<status status="PASS" starttime="20220704 23:42:16.733" endtime="20220704 23:42:16.733"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 23:42:16.817" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 23:42:16.734" endtime="20220704 23:42:16.818"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 23:42:16.818" endtime="20220704 23:42:16.818"/>
</return>
<msg timestamp="20220704 23:42:16.818" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 23:42:16.733" endtime="20220704 23:42:16.818"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 23:42:16.818" endtime="20220704 23:42:16.818"/>
</return>
<msg timestamp="20220704 23:42:16.819" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 23:42:16.732" endtime="20220704 23:42:16.819"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_NAME}</var>
<arg>${response}</arg>
<arg>name</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 23:42:16.819" endtime="20220704 23:42:16.820"/>
</return>
<msg timestamp="20220704 23:42:16.821" level="INFO">${CARD_NAME} = RFCard5</msg>
<status status="PASS" starttime="20220704 23:42:16.819" endtime="20220704 23:42:16.821"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_DESC}</var>
<arg>${response}</arg>
<arg>desc</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 23:42:16.821" endtime="20220704 23:42:16.822"/>
</return>
<msg timestamp="20220704 23:42:16.822" level="INFO">${CARD_DESC} = Description</msg>
<status status="PASS" starttime="20220704 23:42:16.821" endtime="20220704 23:42:16.822"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${CARD_NAME}</arg>
<arg>RFCard5</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220704 23:42:16.822" endtime="20220704 23:42:16.823"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${CARD_DESC}</arg>
<arg>Description</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220704 23:42:16.823" endtime="20220704 23:42:16.823"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Card</arg>
<arg>${CARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Card" library="Card">
<arg>${CARD_ID}</arg>
<doc>Deletes the card with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 23:42:16.825" level="INFO">${url} = cards/62c37ad8cac93932015e2289</msg>
<status status="PASS" starttime="20220704 23:42:16.825" endtime="20220704 23:42:16.825"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 23:42:17.022" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 23:42:16.825" endtime="20220704 23:42:17.022"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 23:42:17.022" endtime="20220704 23:42:17.022"/>
</return>
<msg timestamp="20220704 23:42:17.022" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 23:42:16.824" endtime="20220704 23:42:17.022"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 23:42:17.022" endtime="20220704 23:42:17.022"/>
</return>
<status status="PASS" starttime="20220704 23:42:16.824" endtime="20220704 23:42:17.023"/>
</kw>
<status status="PASS" starttime="20220704 23:42:16.823" endtime="20220704 23:42:17.023"/>
</kw>
<doc>Verify that a card's name and Description can be updated through API</doc>
<tag>api</tag>
<tag>card.update</tag>
<tag>regression</tag>
<status status="PASS" starttime="20220704 23:42:16.361" endtime="20220704 23:42:17.023"/>
</test>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Teardown Board</arg>
<arg>Delete All Sessions</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Teardown Board">
<doc>Delete the board created for this suite</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 23:42:17.027" level="INFO">${url} = boards/62c37ad605302e4a1f2c6d20</msg>
<status status="PASS" starttime="20220704 23:42:17.026" endtime="20220704 23:42:17.027"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 23:42:17.349" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 23:42:17.027" endtime="20220704 23:42:17.349"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 23:42:17.349" endtime="20220704 23:42:17.349"/>
</return>
<msg timestamp="20220704 23:42:17.349" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 23:42:17.026" endtime="20220704 23:42:17.349"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 23:42:17.349" endtime="20220704 23:42:17.349"/>
</return>
<status status="PASS" starttime="20220704 23:42:17.025" endtime="20220704 23:42:17.349"/>
</kw>
<status status="PASS" starttime="20220704 23:42:17.025" endtime="20220704 23:42:17.349"/>
</kw>
<status status="PASS" starttime="20220704 23:42:17.025" endtime="20220704 23:42:17.350"/>
</kw>
<kw name="Delete All Sessions" library="request_own_library">
<status status="PASS" starttime="20220704 23:42:17.350" endtime="20220704 23:42:17.351"/>
</kw>
<status status="PASS" starttime="20220704 23:42:17.024" endtime="20220704 23:42:17.351"/>
</kw>
<doc>Example Test with Trello API Cards</doc>
<status status="PASS" starttime="20220704 23:42:14.505" endtime="20220704 23:42:17.351"/>
</suite>
<suite id="s1-s1-s3" name="Trello Api Checklists Tests" source="/trello/api/trello_api_checklists_tests.robot">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Create Trello Session</arg>
<arg>Setup Board, List And Card</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Create Trello Session" library="TrelloAPI">
<doc>Creates a Trello Session</doc>
<kw name="Create Session" library="request_own_library">
<arg>${API_BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<status status="PASS" starttime="20220704 23:42:17.363" endtime="20220704 23:42:17.364"/>
</kw>
<status status="PASS" starttime="20220704 23:42:17.363" endtime="20220704 23:42:17.364"/>
</kw>
<kw name="Setup Board, List And Card">
<doc>Create a board and save its ID and its first list's ID</doc>
<kw name="Create A Board" library="Board">
<var>${BOARD}</var>
<arg>TestBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 23:42:17.365" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 23:42:17.365" endtime="20220704 23:42:17.365"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 23:42:17.365" endtime="20220704 23:42:17.366"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 23:42:17.367" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220704 23:42:17.366" endtime="20220704 23:42:17.367"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 23:42:17.647" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 23:42:17.367" endtime="20220704 23:42:17.647"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 23:42:17.647" endtime="20220704 23:42:17.647"/>
</return>
<msg timestamp="20220704 23:42:17.647" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 23:42:17.365" endtime="20220704 23:42:17.648"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 23:42:17.648" endtime="20220704 23:42:17.648"/>
</return>
<msg timestamp="20220704 23:42:17.648" level="INFO">${BOARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 23:42:17.364" endtime="20220704 23:42:17.648"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_BOARD_ID}</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220704 23:42:17.650" level="INFO">${TEST_SUITE_BOARD_ID} = 62c37ad9c9b4e26371a7adc1</msg>
<status status="PASS" starttime="20220704 23:42:17.648" endtime="20220704 23:42:17.650"/>
</kw>
<kw name="Get Lists On A Board" library="Board">
<var>${LISTS}</var>
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Get all the lists in a board</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>lists_on_board</arg>
<arg>${id}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 23:42:17.652" level="INFO">${url} = boards/62c37ad9c9b4e26371a7adc1/lists/</msg>
<status status="PASS" starttime="20220704 23:42:17.651" endtime="20220704 23:42:17.652"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 23:42:17.729" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 23:42:17.652" endtime="20220704 23:42:17.729"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 23:42:17.729" endtime="20220704 23:42:17.729"/>
</return>
<msg timestamp="20220704 23:42:17.730" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 23:42:17.651" endtime="20220704 23:42:17.730"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 23:42:17.730" endtime="20220704 23:42:17.730"/>
</return>
<msg timestamp="20220704 23:42:17.730" level="INFO">${LISTS} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 23:42:17.650" endtime="20220704 23:42:17.730"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_LIST_ID}</arg>
<arg>${LISTS.json()}[0][id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220704 23:42:17.732" level="INFO">${TEST_SUITE_LIST_ID} = 62c37ad9c9b4e26371a7adc8</msg>
<status status="PASS" starttime="20220704 23:42:17.730" endtime="20220704 23:42:17.732"/>
</kw>
<kw name="Create A Card" library="Card">
<var>${CARD}</var>
<arg>name</arg>
<arg>TestCard</arg>
<doc>Creates a new card in the given list.
required_args: listId
optional_args: name, desc, pos, idCardSource, idLabels, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>@{optional_args}</arg>
<arg>idList</arg>
<arg>${idList}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 23:42:17.734" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 23:42:17.734" endtime="20220704 23:42:17.734"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 23:42:17.734" endtime="20220704 23:42:17.734"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 23:42:17.735" level="INFO">${url} = cards/</msg>
<status status="PASS" starttime="20220704 23:42:17.734" endtime="20220704 23:42:17.735"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 23:42:17.937" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 23:42:17.735" endtime="20220704 23:42:17.937"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 23:42:17.937" endtime="20220704 23:42:17.937"/>
</return>
<msg timestamp="20220704 23:42:17.938" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 23:42:17.733" endtime="20220704 23:42:17.938"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 23:42:17.938" endtime="20220704 23:42:17.938"/>
</return>
<msg timestamp="20220704 23:42:17.938" level="INFO">${CARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 23:42:17.732" endtime="20220704 23:42:17.938"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_CARD_ID}</arg>
<arg>${CARD.json()}[id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220704 23:42:17.940" level="INFO">${TEST_SUITE_CARD_ID} = 62c37ad9cdf7cd6238f49662</msg>
<status status="PASS" starttime="20220704 23:42:17.938" endtime="20220704 23:42:17.940"/>
</kw>
<status status="PASS" starttime="20220704 23:42:17.364" endtime="20220704 23:42:17.940"/>
</kw>
<status status="PASS" starttime="20220704 23:42:17.363" endtime="20220704 23:42:17.940"/>
</kw>
<test id="s1-s1-s3-t1" name="Verify A Checklist Can Be Created" line="14">
<kw name="Create A Checklist" library="Checklist">
<var>${response}</var>
<arg>name</arg>
<arg>TestChecklist</arg>
<arg>idCard=${TEST_SUITE_CARD_ID}</arg>
<doc>Creates a new checklist in the given card.
required_args: idCard
optional_args: name, pos, idChecklistSource
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>@{optional_args}</arg>
<arg>idCard</arg>
<arg>${idCard}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 23:42:17.944" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 23:42:17.944" endtime="20220704 23:42:17.944"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 23:42:17.944" endtime="20220704 23:42:17.945"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 23:42:17.946" level="INFO">${url} = checklists/</msg>
<status status="PASS" starttime="20220704 23:42:17.945" endtime="20220704 23:42:17.946"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 23:42:18.082" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 23:42:17.946" endtime="20220704 23:42:18.082"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 23:42:18.082" endtime="20220704 23:42:18.082"/>
</return>
<msg timestamp="20220704 23:42:18.083" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 23:42:17.943" endtime="20220704 23:42:18.083"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 23:42:18.083" endtime="20220704 23:42:18.083"/>
</return>
<msg timestamp="20220704 23:42:18.083" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 23:42:17.942" endtime="20220704 23:42:18.083"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${checklist_id}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 23:42:18.084" endtime="20220704 23:42:18.084"/>
</return>
<msg timestamp="20220704 23:42:18.086" level="INFO">${checklist_id} = 62c37adad234e7662687e450</msg>
<status status="PASS" starttime="20220704 23:42:18.084" endtime="20220704 23:42:18.086"/>
</kw>
<kw name="Get A Checklist" library="Checklist">
<var>${response}</var>
<arg>${checklist_id}</arg>
<doc>Gets the checklist with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 23:42:18.088" level="INFO">${url} = checklists/62c37adad234e7662687e450</msg>
<status status="PASS" starttime="20220704 23:42:18.087" endtime="20220704 23:42:18.088"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 23:42:18.169" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 23:42:18.088" endtime="20220704 23:42:18.169"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 23:42:18.169" endtime="20220704 23:42:18.169"/>
</return>
<msg timestamp="20220704 23:42:18.169" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 23:42:18.087" endtime="20220704 23:42:18.169"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 23:42:18.169" endtime="20220704 23:42:18.169"/>
</return>
<msg timestamp="20220704 23:42:18.169" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 23:42:18.086" endtime="20220704 23:42:18.169"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${checklist_name}</var>
<arg>${response}</arg>
<arg>name</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 23:42:18.170" endtime="20220704 23:42:18.170"/>
</return>
<msg timestamp="20220704 23:42:18.171" level="INFO">${checklist_name} = TestChecklist</msg>
<status status="PASS" starttime="20220704 23:42:18.170" endtime="20220704 23:42:18.171"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${checklist_name}</arg>
<arg>TestChecklist</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220704 23:42:18.171" endtime="20220704 23:42:18.171"/>
</kw>
<kw name="Delete A Checklist" library="Checklist" type="TEARDOWN">
<arg>${checklist_id}</arg>
<doc>Deletes the checklist with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 23:42:18.173" level="INFO">${url} = checklists/62c37adad234e7662687e450</msg>
<status status="PASS" starttime="20220704 23:42:18.172" endtime="20220704 23:42:18.173"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 23:42:18.297" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 23:42:18.173" endtime="20220704 23:42:18.297"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 23:42:18.298" endtime="20220704 23:42:18.298"/>
</return>
<msg timestamp="20220704 23:42:18.298" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 23:42:18.172" endtime="20220704 23:42:18.298"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 23:42:18.298" endtime="20220704 23:42:18.298"/>
</return>
<status status="PASS" starttime="20220704 23:42:18.171" endtime="20220704 23:42:18.299"/>
</kw>
<doc>Verify that a checklist can be created through API</doc>
<tag>api</tag>
<tag>checklist.create</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220704 23:42:17.941" endtime="20220704 23:42:18.299"/>
</test>
<test id="s1-s1-s3-t2" name="Verify A Checklist Can Be Deleted" line="24">
<kw name="Create A Checklist" library="Checklist">
<var>${response}</var>
<arg>name</arg>
<arg>TestChecklist</arg>
<arg>idCard=${TEST_SUITE_CARD_ID}</arg>
<doc>Creates a new checklist in the given card.
required_args: idCard
optional_args: name, pos, idChecklistSource
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>@{optional_args}</arg>
<arg>idCard</arg>
<arg>${idCard}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 23:42:18.303" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 23:42:18.302" endtime="20220704 23:42:18.303"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 23:42:18.303" endtime="20220704 23:42:18.303"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 23:42:18.304" level="INFO">${url} = checklists/</msg>
<status status="PASS" starttime="20220704 23:42:18.303" endtime="20220704 23:42:18.304"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 23:42:18.435" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 23:42:18.304" endtime="20220704 23:42:18.435"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 23:42:18.435" endtime="20220704 23:42:18.435"/>
</return>
<msg timestamp="20220704 23:42:18.436" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 23:42:18.302" endtime="20220704 23:42:18.436"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 23:42:18.436" endtime="20220704 23:42:18.436"/>
</return>
<msg timestamp="20220704 23:42:18.437" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 23:42:18.301" endtime="20220704 23:42:18.437"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${checklist_id}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 23:42:18.438" endtime="20220704 23:42:18.438"/>
</return>
<msg timestamp="20220704 23:42:18.440" level="INFO">${checklist_id} = 62c37ada93e17f8747d11d91</msg>
<status status="PASS" starttime="20220704 23:42:18.437" endtime="20220704 23:42:18.440"/>
</kw>
<kw name="Delete A Checklist" library="Checklist">
<var>${response}</var>
<arg>${checklist_id}</arg>
<doc>Deletes the checklist with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 23:42:18.442" level="INFO">${url} = checklists/62c37ada93e17f8747d11d91</msg>
<status status="PASS" starttime="20220704 23:42:18.442" endtime="20220704 23:42:18.442"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 23:42:18.581" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 23:42:18.443" endtime="20220704 23:42:18.581"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 23:42:18.581" endtime="20220704 23:42:18.581"/>
</return>
<msg timestamp="20220704 23:42:18.582" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 23:42:18.441" endtime="20220704 23:42:18.582"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 23:42:18.582" endtime="20220704 23:42:18.582"/>
</return>
<msg timestamp="20220704 23:42:18.582" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 23:42:18.440" endtime="20220704 23:42:18.582"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>delete</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220704 23:42:18.583" endtime="20220704 23:42:18.586"/>
</kw>
<status status="PASS" starttime="20220704 23:42:18.582" endtime="20220704 23:42:18.586"/>
</kw>
<kw name="Get A Checklist" library="Checklist">
<arg>${checklist_id}</arg>
<arg>status_code=404</arg>
<doc>Gets the checklist with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 23:42:18.588" level="INFO">${url} = checklists/62c37ada93e17f8747d11d91</msg>
<status status="PASS" starttime="20220704 23:42:18.587" endtime="20220704 23:42:18.588"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 23:42:18.650" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220704 23:42:18.588" endtime="20220704 23:42:18.650"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 23:42:18.650" endtime="20220704 23:42:18.650"/>
</return>
<msg timestamp="20220704 23:42:18.650" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220704 23:42:18.586" endtime="20220704 23:42:18.650"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 23:42:18.650" endtime="20220704 23:42:18.650"/>
</return>
<status status="PASS" starttime="20220704 23:42:18.586" endtime="20220704 23:42:18.651"/>
</kw>
<doc>Verify that a checklist can be deleted through API</doc>
<tag>api</tag>
<tag>checklist.delete</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220704 23:42:18.299" endtime="20220704 23:42:18.651"/>
</test>
<test id="s1-s1-s3-t3" name="Verify A Checklist Can Be Updated" line="33">
<kw name="Create A Checklist" library="Checklist">
<var>${response}</var>
<arg>name</arg>
<arg>TestChecklist</arg>
<arg>idCard=${TEST_SUITE_CARD_ID}</arg>
<doc>Creates a new checklist in the given card.
required_args: idCard
optional_args: name, pos, idChecklistSource
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>@{optional_args}</arg>
<arg>idCard</arg>
<arg>${idCard}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 23:42:18.656" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 23:42:18.655" endtime="20220704 23:42:18.656"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 23:42:18.657" endtime="20220704 23:42:18.657"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 23:42:18.658" level="INFO">${url} = checklists/</msg>
<status status="PASS" starttime="20220704 23:42:18.657" endtime="20220704 23:42:18.658"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 23:42:18.790" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 23:42:18.658" endtime="20220704 23:42:18.790"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 23:42:18.790" endtime="20220704 23:42:18.791"/>
</return>
<msg timestamp="20220704 23:42:18.791" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 23:42:18.654" endtime="20220704 23:42:18.791"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 23:42:18.791" endtime="20220704 23:42:18.791"/>
</return>
<msg timestamp="20220704 23:42:18.791" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 23:42:18.653" endtime="20220704 23:42:18.791"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${checklist_id}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 23:42:18.792" endtime="20220704 23:42:18.792"/>
</return>
<msg timestamp="20220704 23:42:18.794" level="INFO">${checklist_id} = 62c37ada84e8cf8404ba2c3d</msg>
<status status="PASS" starttime="20220704 23:42:18.792" endtime="20220704 23:42:18.794"/>
</kw>
<kw name="Update A Checklist" library="Checklist">
<var>${response}</var>
<arg>${checklist_id}</arg>
<arg>name</arg>
<arg>TestChecklist2</arg>
<doc>Updates the checklist with the given ID
optional_args: name, pos
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<arg>status_code=${status_code}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 23:42:18.796" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 23:42:18.796" endtime="20220704 23:42:18.796"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 23:42:18.796" endtime="20220704 23:42:18.797"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 23:42:18.797" level="INFO">${url} = checklists/62c37ada84e8cf8404ba2c3d</msg>
<status status="PASS" starttime="20220704 23:42:18.797" endtime="20220704 23:42:18.797"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 23:42:18.909" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 23:42:18.797" endtime="20220704 23:42:18.909"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 23:42:18.909" endtime="20220704 23:42:18.910"/>
</return>
<msg timestamp="20220704 23:42:18.910" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 23:42:18.795" endtime="20220704 23:42:18.910"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 23:42:18.910" endtime="20220704 23:42:18.910"/>
</return>
<msg timestamp="20220704 23:42:18.910" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 23:42:18.794" endtime="20220704 23:42:18.910"/>
</kw>
<kw name="Get A Checklist" library="Checklist">
<var>${response}</var>
<arg>${checklist_id}</arg>
<doc>Gets the checklist with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 23:42:18.913" level="INFO">${url} = checklists/62c37ada84e8cf8404ba2c3d</msg>
<status status="PASS" starttime="20220704 23:42:18.912" endtime="20220704 23:42:18.913"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 23:42:18.994" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 23:42:18.913" endtime="20220704 23:42:18.994"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 23:42:18.994" endtime="20220704 23:42:18.995"/>
</return>
<msg timestamp="20220704 23:42:18.995" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 23:42:18.911" endtime="20220704 23:42:18.995"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 23:42:18.995" endtime="20220704 23:42:18.995"/>
</return>
<msg timestamp="20220704 23:42:18.995" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 23:42:18.911" endtime="20220704 23:42:18.996"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${checklist_name}</var>
<arg>${response}</arg>
<arg>name</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 23:42:18.996" endtime="20220704 23:42:18.996"/>
</return>
<msg timestamp="20220704 23:42:18.998" level="INFO">${checklist_name} = TestChecklist2</msg>
<status status="PASS" starttime="20220704 23:42:18.996" endtime="20220704 23:42:18.998"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${checklist_name}</arg>
<arg>TestChecklist2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220704 23:42:18.998" endtime="20220704 23:42:18.998"/>
</kw>
<kw name="Delete A Checklist" library="Checklist" type="TEARDOWN">
<arg>${checklist_id}</arg>
<doc>Deletes the checklist with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 23:42:19.012" level="INFO">${url} = checklists/62c37ada84e8cf8404ba2c3d</msg>
<status status="PASS" starttime="20220704 23:42:19.012" endtime="20220704 23:42:19.012"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 23:42:19.134" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 23:42:19.012" endtime="20220704 23:42:19.134"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 23:42:19.134" endtime="20220704 23:42:19.134"/>
</return>
<msg timestamp="20220704 23:42:19.134" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 23:42:19.011" endtime="20220704 23:42:19.134"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 23:42:19.135" endtime="20220704 23:42:19.135"/>
</return>
<status status="PASS" starttime="20220704 23:42:18.999" endtime="20220704 23:42:19.135"/>
</kw>
<doc>Verify that a checklist's name can be updated through API</doc>
<tag>api</tag>
<tag>checklist.update</tag>
<tag>regression</tag>
<status status="PASS" starttime="20220704 23:42:18.652" endtime="20220704 23:42:19.135"/>
</test>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Teardown Board</arg>
<arg>Delete All Sessions</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Teardown Board">
<doc>Delete the board created for this suite</doc>
<kw name="Delete A Board" library="Board">
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 23:42:19.139" level="INFO">${url} = boards/62c37ad9c9b4e26371a7adc1</msg>
<status status="PASS" starttime="20220704 23:42:19.138" endtime="20220704 23:42:19.139"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 23:42:19.470" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 23:42:19.139" endtime="20220704 23:42:19.471"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 23:42:19.471" endtime="20220704 23:42:19.471"/>
</return>
<msg timestamp="20220704 23:42:19.471" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 23:42:19.137" endtime="20220704 23:42:19.471"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 23:42:19.471" endtime="20220704 23:42:19.471"/>
</return>
<status status="PASS" starttime="20220704 23:42:19.137" endtime="20220704 23:42:19.472"/>
</kw>
<status status="PASS" starttime="20220704 23:42:19.136" endtime="20220704 23:42:19.472"/>
</kw>
<kw name="Delete All Sessions" library="request_own_library">
<status status="PASS" starttime="20220704 23:42:19.473" endtime="20220704 23:42:19.474"/>
</kw>
<status status="PASS" starttime="20220704 23:42:19.136" endtime="20220704 23:42:19.474"/>
</kw>
<doc>Example Test with Trello API Checklists</doc>
<status status="PASS" starttime="20220704 23:42:17.353" endtime="20220704 23:42:19.474"/>
</suite>
<suite id="s1-s1-s4" name="Trello Api Labels Tests" source="/trello/api/trello_api_labels_tests.robot">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Create Trello Session</arg>
<arg>Setup Board And List</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Create Trello Session" library="TrelloAPI">
<doc>Creates a Trello Session</doc>
<kw name="Create Session" library="request_own_library">
<arg>${API_BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<status status="PASS" starttime="20220704 23:42:19.487" endtime="20220704 23:42:19.488"/>
</kw>
<status status="PASS" starttime="20220704 23:42:19.487" endtime="20220704 23:42:19.488"/>
</kw>
<kw name="Setup Board And List">
<doc>Create a board and save its ID and its first list's ID</doc>
<kw name="Create A Board" library="Board">
<var>${BOARD}</var>
<arg>TestBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 23:42:19.489" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 23:42:19.489" endtime="20220704 23:42:19.489"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 23:42:19.489" endtime="20220704 23:42:19.490"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 23:42:19.491" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220704 23:42:19.490" endtime="20220704 23:42:19.491"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 23:42:19.754" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 23:42:19.491" endtime="20220704 23:42:19.754"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 23:42:19.755" endtime="20220704 23:42:19.755"/>
</return>
<msg timestamp="20220704 23:42:19.755" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 23:42:19.489" endtime="20220704 23:42:19.755"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 23:42:19.755" endtime="20220704 23:42:19.755"/>
</return>
<msg timestamp="20220704 23:42:19.756" level="INFO">${BOARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 23:42:19.488" endtime="20220704 23:42:19.756"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_BOARD_ID}</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220704 23:42:19.757" level="INFO">${TEST_SUITE_BOARD_ID} = 62c37adba04930320514954b</msg>
<status status="PASS" starttime="20220704 23:42:19.756" endtime="20220704 23:42:19.757"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${LISTS}</var>
<arg>boards/${TEST_SUITE_BOARD_ID}/lists</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 23:42:19.831" level="INFO">${LISTS} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 23:42:19.758" endtime="20220704 23:42:19.831"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_LIST_ID}</arg>
<arg>${LISTS.json()}[0][id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220704 23:42:19.832" level="INFO">${TEST_SUITE_LIST_ID} = 62c37adba049303205149552</msg>
<status status="PASS" starttime="20220704 23:42:19.831" endtime="20220704 23:42:19.833"/>
</kw>
<status status="PASS" starttime="20220704 23:42:19.488" endtime="20220704 23:42:19.833"/>
</kw>
<status status="PASS" starttime="20220704 23:42:19.487" endtime="20220704 23:42:19.833"/>
</kw>
<test id="s1-s1-s4-t1" name="Create and get label on board" line="14">
<kw name="Create A Label" library="Label">
<var>${response}</var>
<arg>name</arg>
<arg>label2</arg>
<arg>color</arg>
<arg>yellow</arg>
<doc>Creates a new label in the given board.
required_args: idBoard
optional_args: name, color
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>idBoard</arg>
<arg>${idBoard}</arg>
<arg>@{optional_args}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 23:42:19.836" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 23:42:19.835" endtime="20220704 23:42:19.836"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 23:42:19.836" endtime="20220704 23:42:19.836"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 23:42:19.837" level="INFO">${url} = labels/</msg>
<status status="PASS" starttime="20220704 23:42:19.836" endtime="20220704 23:42:19.837"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 23:42:19.948" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 23:42:19.837" endtime="20220704 23:42:19.948"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 23:42:19.948" endtime="20220704 23:42:19.948"/>
</return>
<msg timestamp="20220704 23:42:19.949" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 23:42:19.835" endtime="20220704 23:42:19.949"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 23:42:19.949" endtime="20220704 23:42:19.949"/>
</return>
<msg timestamp="20220704 23:42:19.949" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 23:42:19.834" endtime="20220704 23:42:19.949"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>label</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220704 23:42:19.950" endtime="20220704 23:42:19.953"/>
</kw>
<status status="PASS" starttime="20220704 23:42:19.950" endtime="20220704 23:42:19.953"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${LABEL_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 23:42:19.953" endtime="20220704 23:42:19.954"/>
</return>
<msg timestamp="20220704 23:42:19.954" level="INFO">${LABEL_ID} = 62c37adb6375436917954088</msg>
<status status="PASS" starttime="20220704 23:42:19.953" endtime="20220704 23:42:19.954"/>
</kw>
<kw name="Get A Label" library="Label">
<var>${response}</var>
<arg>${LABEL_ID}</arg>
<doc>Gets the label with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 23:42:19.956" level="INFO">${url} = labels/62c37adb6375436917954088</msg>
<status status="PASS" starttime="20220704 23:42:19.955" endtime="20220704 23:42:19.956"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 23:42:20.031" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 23:42:19.956" endtime="20220704 23:42:20.031"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 23:42:20.031" endtime="20220704 23:42:20.031"/>
</return>
<msg timestamp="20220704 23:42:20.031" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 23:42:19.955" endtime="20220704 23:42:20.032"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 23:42:20.032" endtime="20220704 23:42:20.032"/>
</return>
<msg timestamp="20220704 23:42:20.032" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 23:42:19.954" endtime="20220704 23:42:20.032"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${LABEL_COLOR}</var>
<arg>${response}</arg>
<arg>color</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 23:42:20.033" endtime="20220704 23:42:20.033"/>
</return>
<msg timestamp="20220704 23:42:20.034" level="INFO">${LABEL_COLOR} = yellow</msg>
<status status="PASS" starttime="20220704 23:42:20.032" endtime="20220704 23:42:20.034"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${LABEL_NAME}</var>
<arg>${response}</arg>
<arg>name</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 23:42:20.034" endtime="20220704 23:42:20.034"/>
</return>
<msg timestamp="20220704 23:42:20.035" level="INFO">${LABEL_NAME} = label2</msg>
<status status="PASS" starttime="20220704 23:42:20.034" endtime="20220704 23:42:20.035"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${LABEL_COLOR}</arg>
<arg>yellow</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220704 23:42:20.035" endtime="20220704 23:42:20.036"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${LABEL_NAME}</arg>
<arg>label2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220704 23:42:20.036" endtime="20220704 23:42:20.036"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Label</arg>
<arg>${LABEL_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Label" library="Label">
<arg>${LABEL_ID}</arg>
<doc>Deletes the label with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 23:42:20.038" level="INFO">${url} = labels/62c37adb6375436917954088</msg>
<status status="PASS" starttime="20220704 23:42:20.037" endtime="20220704 23:42:20.038"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 23:42:20.174" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 23:42:20.038" endtime="20220704 23:42:20.174"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 23:42:20.175" endtime="20220704 23:42:20.175"/>
</return>
<msg timestamp="20220704 23:42:20.175" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 23:42:20.037" endtime="20220704 23:42:20.175"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 23:42:20.175" endtime="20220704 23:42:20.175"/>
</return>
<status status="PASS" starttime="20220704 23:42:20.037" endtime="20220704 23:42:20.175"/>
</kw>
<status status="PASS" starttime="20220704 23:42:20.036" endtime="20220704 23:42:20.175"/>
</kw>
<doc>Verify that a label can be created through API</doc>
<tag>api</tag>
<tag>label.create</tag>
<tag>label.get</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220704 23:42:19.833" endtime="20220704 23:42:20.175"/>
</test>
<test id="s1-s1-s4-t2" name="Update label on board" line="28">
<kw name="Create A Label" library="Label">
<var>${response}</var>
<arg>name</arg>
<arg>label2</arg>
<arg>color</arg>
<arg>yellow</arg>
<doc>Creates a new label in the given board.
required_args: idBoard
optional_args: name, color
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>idBoard</arg>
<arg>${idBoard}</arg>
<arg>@{optional_args}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 23:42:20.178" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 23:42:20.178" endtime="20220704 23:42:20.179"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 23:42:20.179" endtime="20220704 23:42:20.179"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 23:42:20.180" level="INFO">${url} = labels/</msg>
<status status="PASS" starttime="20220704 23:42:20.179" endtime="20220704 23:42:20.180"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 23:42:20.289" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 23:42:20.180" endtime="20220704 23:42:20.289"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 23:42:20.289" endtime="20220704 23:42:20.289"/>
</return>
<msg timestamp="20220704 23:42:20.290" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 23:42:20.178" endtime="20220704 23:42:20.290"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 23:42:20.290" endtime="20220704 23:42:20.290"/>
</return>
<msg timestamp="20220704 23:42:20.290" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 23:42:20.177" endtime="20220704 23:42:20.290"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>label</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220704 23:42:20.291" endtime="20220704 23:42:20.295"/>
</kw>
<status status="PASS" starttime="20220704 23:42:20.291" endtime="20220704 23:42:20.295"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${LABEL_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 23:42:20.296" endtime="20220704 23:42:20.296"/>
</return>
<msg timestamp="20220704 23:42:20.297" level="INFO">${LABEL_ID} = 62c37adc5a465c8abbc1ec0a</msg>
<status status="PASS" starttime="20220704 23:42:20.295" endtime="20220704 23:42:20.297"/>
</kw>
<kw name="Update A Label" library="Label">
<var>${new_response}</var>
<arg>${LABEL_ID}</arg>
<arg>name</arg>
<arg>label3</arg>
<arg>color</arg>
<arg>orange</arg>
<doc>Updates the label with the given ID
optional_args: name, color
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 23:42:20.298" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 23:42:20.298" endtime="20220704 23:42:20.298"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 23:42:20.298" endtime="20220704 23:42:20.298"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 23:42:20.299" level="INFO">${url} = labels/62c37adc5a465c8abbc1ec0a</msg>
<status status="PASS" starttime="20220704 23:42:20.299" endtime="20220704 23:42:20.299"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 23:42:20.436" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 23:42:20.299" endtime="20220704 23:42:20.437"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 23:42:20.437" endtime="20220704 23:42:20.437"/>
</return>
<msg timestamp="20220704 23:42:20.437" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 23:42:20.297" endtime="20220704 23:42:20.437"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 23:42:20.437" endtime="20220704 23:42:20.437"/>
</return>
<msg timestamp="20220704 23:42:20.437" level="INFO">${new_response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 23:42:20.297" endtime="20220704 23:42:20.437"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${NEW_LABEL_COLOR}</var>
<arg>${new_response}</arg>
<arg>color</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 23:42:20.438" endtime="20220704 23:42:20.438"/>
</return>
<msg timestamp="20220704 23:42:20.439" level="INFO">${NEW_LABEL_COLOR} = orange</msg>
<status status="PASS" starttime="20220704 23:42:20.437" endtime="20220704 23:42:20.439"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${NEW_LABEL_NAME}</var>
<arg>${new_response}</arg>
<arg>name</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 23:42:20.439" endtime="20220704 23:42:20.439"/>
</return>
<msg timestamp="20220704 23:42:20.440" level="INFO">${NEW_LABEL_NAME} = label3</msg>
<status status="PASS" starttime="20220704 23:42:20.439" endtime="20220704 23:42:20.440"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${NEW_LABEL_COLOR}</arg>
<arg>orange</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220704 23:42:20.440" endtime="20220704 23:42:20.440"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${NEW_LABEL_NAME}</arg>
<arg>label3</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220704 23:42:20.440" endtime="20220704 23:42:20.441"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Label</arg>
<arg>${LABEL_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Label" library="Label">
<arg>${LABEL_ID}</arg>
<doc>Deletes the label with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 23:42:20.443" level="INFO">${url} = labels/62c37adc5a465c8abbc1ec0a</msg>
<status status="PASS" starttime="20220704 23:42:20.442" endtime="20220704 23:42:20.443"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 23:42:20.567" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 23:42:20.443" endtime="20220704 23:42:20.568"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 23:42:20.568" endtime="20220704 23:42:20.568"/>
</return>
<msg timestamp="20220704 23:42:20.568" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 23:42:20.442" endtime="20220704 23:42:20.568"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 23:42:20.568" endtime="20220704 23:42:20.568"/>
</return>
<status status="PASS" starttime="20220704 23:42:20.441" endtime="20220704 23:42:20.569"/>
</kw>
<status status="PASS" starttime="20220704 23:42:20.441" endtime="20220704 23:42:20.569"/>
</kw>
<doc>Verify that a label's name and color can be updated through API</doc>
<tag>api</tag>
<tag>label.update</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220704 23:42:20.176" endtime="20220704 23:42:20.569"/>
</test>
<test id="s1-s1-s4-t3" name="Delete label on board" line="41">
<kw name="Create A Label" library="Label">
<var>${response}</var>
<arg>name</arg>
<arg>label2</arg>
<arg>color</arg>
<arg>yellow</arg>
<doc>Creates a new label in the given board.
required_args: idBoard
optional_args: name, color
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>idBoard</arg>
<arg>${idBoard}</arg>
<arg>@{optional_args}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 23:42:20.571" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 23:42:20.571" endtime="20220704 23:42:20.571"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 23:42:20.571" endtime="20220704 23:42:20.572"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 23:42:20.572" level="INFO">${url} = labels/</msg>
<status status="PASS" starttime="20220704 23:42:20.572" endtime="20220704 23:42:20.572"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 23:42:20.688" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 23:42:20.573" endtime="20220704 23:42:20.688"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 23:42:20.688" endtime="20220704 23:42:20.688"/>
</return>
<msg timestamp="20220704 23:42:20.689" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 23:42:20.570" endtime="20220704 23:42:20.689"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 23:42:20.689" endtime="20220704 23:42:20.689"/>
</return>
<msg timestamp="20220704 23:42:20.689" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 23:42:20.570" endtime="20220704 23:42:20.689"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${LABEL_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 23:42:20.690" endtime="20220704 23:42:20.690"/>
</return>
<msg timestamp="20220704 23:42:20.691" level="INFO">${LABEL_ID} = 62c37adca8c37809b86acacd</msg>
<status status="PASS" starttime="20220704 23:42:20.689" endtime="20220704 23:42:20.691"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Label</arg>
<arg>${LABEL_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Label" library="Label">
<arg>${LABEL_ID}</arg>
<doc>Deletes the label with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 23:42:20.693" level="INFO">${url} = labels/62c37adca8c37809b86acacd</msg>
<status status="PASS" starttime="20220704 23:42:20.693" endtime="20220704 23:42:20.693"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 23:42:20.831" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 23:42:20.693" endtime="20220704 23:42:20.831"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 23:42:20.831" endtime="20220704 23:42:20.831"/>
</return>
<msg timestamp="20220704 23:42:20.831" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 23:42:20.692" endtime="20220704 23:42:20.831"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 23:42:20.831" endtime="20220704 23:42:20.831"/>
</return>
<status status="PASS" starttime="20220704 23:42:20.691" endtime="20220704 23:42:20.832"/>
</kw>
<status status="PASS" starttime="20220704 23:42:20.691" endtime="20220704 23:42:20.832"/>
</kw>
<kw name="Get A Label" library="Label">
<arg>${LABEL_ID}</arg>
<arg>status_code=404</arg>
<doc>Gets the label with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 23:42:20.833" level="INFO">${url} = labels/62c37adca8c37809b86acacd</msg>
<status status="PASS" starttime="20220704 23:42:20.833" endtime="20220704 23:42:20.833"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 23:42:20.895" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220704 23:42:20.833" endtime="20220704 23:42:20.895"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 23:42:20.895" endtime="20220704 23:42:20.895"/>
</return>
<msg timestamp="20220704 23:42:20.895" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220704 23:42:20.832" endtime="20220704 23:42:20.895"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 23:42:20.895" endtime="20220704 23:42:20.895"/>
</return>
<status status="PASS" starttime="20220704 23:42:20.832" endtime="20220704 23:42:20.895"/>
</kw>
<doc>Verify that a label can be deleted through API</doc>
<tag>api</tag>
<tag>label.delete</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220704 23:42:20.569" endtime="20220704 23:42:20.895"/>
</test>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Teardown Board</arg>
<arg>Delete All Sessions</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Teardown Board">
<doc>Delete the board created for this session.</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 23:42:20.898" level="INFO">${url} = boards/62c37adba04930320514954b</msg>
<status status="PASS" starttime="20220704 23:42:20.898" endtime="20220704 23:42:20.898"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 23:42:21.249" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 23:42:20.898" endtime="20220704 23:42:21.249"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 23:42:21.250" endtime="20220704 23:42:21.250"/>
</return>
<msg timestamp="20220704 23:42:21.250" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 23:42:20.897" endtime="20220704 23:42:21.250"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 23:42:21.250" endtime="20220704 23:42:21.250"/>
</return>
<status status="PASS" starttime="20220704 23:42:20.897" endtime="20220704 23:42:21.250"/>
</kw>
<status status="PASS" starttime="20220704 23:42:20.897" endtime="20220704 23:42:21.250"/>
</kw>
<status status="PASS" starttime="20220704 23:42:20.896" endtime="20220704 23:42:21.251"/>
</kw>
<kw name="Delete All Sessions" library="request_own_library">
<status status="PASS" starttime="20220704 23:42:21.251" endtime="20220704 23:42:21.252"/>
</kw>
<status status="PASS" starttime="20220704 23:42:20.896" endtime="20220704 23:42:21.252"/>
</kw>
<doc>Example Test with Trello API Cards</doc>
<status status="PASS" starttime="20220704 23:42:19.477" endtime="20220704 23:42:21.252"/>
</suite>
<suite id="s1-s1-s5" name="Trello Api Lists Tests" source="/trello/api/trello_api_lists_tests.robot">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Create Trello Session</arg>
<arg>Setup Board</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Create Trello Session" library="TrelloAPI">
<doc>Creates a Trello Session</doc>
<kw name="Create Session" library="request_own_library">
<arg>${API_BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<status status="PASS" starttime="20220704 23:42:21.268" endtime="20220704 23:42:21.268"/>
</kw>
<status status="PASS" starttime="20220704 23:42:21.268" endtime="20220704 23:42:21.269"/>
</kw>
<kw name="Setup Board">
<doc>Create a board and save it's id for the suite</doc>
<kw name="Create A Board" library="Board">
<var>${BOARD}</var>
<arg>TestBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 23:42:21.270" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 23:42:21.270" endtime="20220704 23:42:21.270"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 23:42:21.270" endtime="20220704 23:42:21.270"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 23:42:21.271" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220704 23:42:21.270" endtime="20220704 23:42:21.271"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 23:42:21.552" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 23:42:21.271" endtime="20220704 23:42:21.552"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 23:42:21.552" endtime="20220704 23:42:21.552"/>
</return>
<msg timestamp="20220704 23:42:21.553" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 23:42:21.269" endtime="20220704 23:42:21.553"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 23:42:21.553" endtime="20220704 23:42:21.553"/>
</return>
<msg timestamp="20220704 23:42:21.553" level="INFO">${BOARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 23:42:21.269" endtime="20220704 23:42:21.553"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Set Suite Variable</arg>
<arg>\${TEST_SUITE_BOARD_ID}</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_BOARD_ID}</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220704 23:42:21.555" level="INFO">${TEST_SUITE_BOARD_ID} = 62c37addd870992a38408695</msg>
<status status="PASS" starttime="20220704 23:42:21.554" endtime="20220704 23:42:21.555"/>
</kw>
<status status="PASS" starttime="20220704 23:42:21.553" endtime="20220704 23:42:21.555"/>
</kw>
<status status="PASS" starttime="20220704 23:42:21.269" endtime="20220704 23:42:21.555"/>
</kw>
<status status="PASS" starttime="20220704 23:42:21.268" endtime="20220704 23:42:21.555"/>
</kw>
<test id="s1-s1-s5-t1" name="CREATE a list" line="13">
<kw name="Create A List" library="List">
<var>${response}</var>
<arg>NewList</arg>
<doc>Creates a new List
board id
name the list will have
optional_args: idListSource, pos, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>list</arg>
<arg>name</arg>
<arg>${name}</arg>
<arg>idBoard</arg>
<arg>${idBoard}</arg>
<arg>@{optional_args}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 23:42:21.557" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 23:42:21.557" endtime="20220704 23:42:21.557"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 23:42:21.557" endtime="20220704 23:42:21.558"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 23:42:21.559" level="INFO">${url} = lists/</msg>
<status status="PASS" starttime="20220704 23:42:21.558" endtime="20220704 23:42:21.559"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 23:42:21.678" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 23:42:21.559" endtime="20220704 23:42:21.679"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 23:42:21.679" endtime="20220704 23:42:21.679"/>
</return>
<msg timestamp="20220704 23:42:21.679" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 23:42:21.557" endtime="20220704 23:42:21.679"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 23:42:21.679" endtime="20220704 23:42:21.679"/>
</return>
<msg timestamp="20220704 23:42:21.680" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 23:42:21.556" endtime="20220704 23:42:21.680"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>list</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220704 23:42:21.681" endtime="20220704 23:42:21.684"/>
</kw>
<status status="PASS" starttime="20220704 23:42:21.680" endtime="20220704 23:42:21.684"/>
</kw>
<doc>Verify that a list can be created through API</doc>
<tag>api</tag>
<tag>list.create</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220704 23:42:21.555" endtime="20220704 23:42:21.684"/>
</test>
<test id="s1-s1-s5-t2" name="UPDATE a list" line="19">
<kw name="Create A List" library="List">
<var>${response}</var>
<arg>NewList</arg>
<doc>Creates a new List
board id
name the list will have
optional_args: idListSource, pos, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>list</arg>
<arg>name</arg>
<arg>${name}</arg>
<arg>idBoard</arg>
<arg>${idBoard}</arg>
<arg>@{optional_args}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 23:42:21.687" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 23:42:21.687" endtime="20220704 23:42:21.687"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 23:42:21.687" endtime="20220704 23:42:21.687"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 23:42:21.688" level="INFO">${url} = lists/</msg>
<status status="PASS" starttime="20220704 23:42:21.688" endtime="20220704 23:42:21.688"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 23:42:21.805" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 23:42:21.688" endtime="20220704 23:42:21.805"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 23:42:21.805" endtime="20220704 23:42:21.805"/>
</return>
<msg timestamp="20220704 23:42:21.805" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 23:42:21.686" endtime="20220704 23:42:21.805"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 23:42:21.805" endtime="20220704 23:42:21.805"/>
</return>
<msg timestamp="20220704 23:42:21.806" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 23:42:21.686" endtime="20220704 23:42:21.806"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>list</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220704 23:42:21.807" endtime="20220704 23:42:21.808"/>
</kw>
<status status="PASS" starttime="20220704 23:42:21.806" endtime="20220704 23:42:21.809"/>
</kw>
<kw name="Update A List" library="List">
<arg>${response.json()}[id]</arg>
<arg>name</arg>
<arg>NewName</arg>
<doc>Updates the board with the given ID
optional_args: name, idListSource, pos, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>list</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 23:42:21.811" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 23:42:21.810" endtime="20220704 23:42:21.811"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 23:42:21.811" endtime="20220704 23:42:21.811"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 23:42:21.812" level="INFO">${url} = lists/62c37add5fedcf3e581c2fbf</msg>
<status status="PASS" starttime="20220704 23:42:21.811" endtime="20220704 23:42:21.812"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 23:42:21.907" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 23:42:21.812" endtime="20220704 23:42:21.907"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 23:42:21.907" endtime="20220704 23:42:21.907"/>
</return>
<msg timestamp="20220704 23:42:21.908" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 23:42:21.810" endtime="20220704 23:42:21.908"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 23:42:21.908" endtime="20220704 23:42:21.908"/>
</return>
<status status="PASS" starttime="20220704 23:42:21.809" endtime="20220704 23:42:21.908"/>
</kw>
<kw name="Get A List" library="List">
<var>${new_response}</var>
<arg>${response.json()}[id]</arg>
<doc>Gets the List with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>list</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 23:42:21.910" level="INFO">${url} = lists/62c37add5fedcf3e581c2fbf</msg>
<status status="PASS" starttime="20220704 23:42:21.910" endtime="20220704 23:42:21.910"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 23:42:21.981" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 23:42:21.910" endtime="20220704 23:42:21.981"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 23:42:21.981" endtime="20220704 23:42:21.981"/>
</return>
<msg timestamp="20220704 23:42:21.982" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 23:42:21.909" endtime="20220704 23:42:21.982"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 23:42:21.982" endtime="20220704 23:42:21.982"/>
</return>
<msg timestamp="20220704 23:42:21.982" level="INFO">${new_response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 23:42:21.908" endtime="20220704 23:42:21.982"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${new_response}</arg>
<arg>list</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220704 23:42:21.983" endtime="20220704 23:42:21.986"/>
</kw>
<status status="PASS" starttime="20220704 23:42:21.983" endtime="20220704 23:42:21.986"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${new_response.json()}[name]</arg>
<arg>NewName</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220704 23:42:21.986" endtime="20220704 23:42:21.988"/>
</kw>
<doc>Verify that a lists name can be updated through API</doc>
<tag>api</tag>
<tag>list.update</tag>
<tag>regression</tag>
<status status="PASS" starttime="20220704 23:42:21.685" endtime="20220704 23:42:21.988"/>
</test>
<test id="s1-s1-s5-t3" name="ARCHIVE A list" line="29">
<kw name="Create A List" library="List">
<var>${response}</var>
<arg>NewList</arg>
<doc>Creates a new List
board id
name the list will have
optional_args: idListSource, pos, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>list</arg>
<arg>name</arg>
<arg>${name}</arg>
<arg>idBoard</arg>
<arg>${idBoard}</arg>
<arg>@{optional_args}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 23:42:21.992" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 23:42:21.992" endtime="20220704 23:42:21.992"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 23:42:21.992" endtime="20220704 23:42:21.992"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 23:42:21.993" level="INFO">${url} = lists/</msg>
<status status="PASS" starttime="20220704 23:42:21.992" endtime="20220704 23:42:21.993"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 23:42:22.121" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 23:42:21.993" endtime="20220704 23:42:22.121"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 23:42:22.121" endtime="20220704 23:42:22.121"/>
</return>
<msg timestamp="20220704 23:42:22.121" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 23:42:21.991" endtime="20220704 23:42:22.121"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 23:42:22.121" endtime="20220704 23:42:22.121"/>
</return>
<msg timestamp="20220704 23:42:22.121" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 23:42:21.989" endtime="20220704 23:42:22.121"/>
</kw>
<kw name="Archive A List" library="List">
<arg>${response.json()}[id]</arg>
<doc>Deletes the list with the given ID</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>archive_list</arg>
<arg>${id}</arg>
<arg>value</arg>
<arg>true</arg>
<arg>status_code=${status_code}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 23:42:22.124" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 23:42:22.123" endtime="20220704 23:42:22.124"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 23:42:22.124" endtime="20220704 23:42:22.124"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 23:42:22.125" level="INFO">${url} = lists/62c37ade188d61862bff1d8e/closed</msg>
<status status="PASS" starttime="20220704 23:42:22.124" endtime="20220704 23:42:22.125"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 23:42:22.244" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 23:42:22.125" endtime="20220704 23:42:22.244"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 23:42:22.244" endtime="20220704 23:42:22.244"/>
</return>
<msg timestamp="20220704 23:42:22.245" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 23:42:22.123" endtime="20220704 23:42:22.245"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 23:42:22.245" endtime="20220704 23:42:22.245"/>
</return>
<status status="PASS" starttime="20220704 23:42:22.122" endtime="20220704 23:42:22.245"/>
</kw>
<kw name="Get A List" library="List">
<var>${new_response}</var>
<arg>${response.json()}[id]</arg>
<doc>Gets the List with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>list</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 23:42:22.248" level="INFO">${url} = lists/62c37ade188d61862bff1d8e</msg>
<status status="PASS" starttime="20220704 23:42:22.248" endtime="20220704 23:42:22.248"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 23:42:22.331" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 23:42:22.249" endtime="20220704 23:42:22.332"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 23:42:22.332" endtime="20220704 23:42:22.332"/>
</return>
<msg timestamp="20220704 23:42:22.332" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 23:42:22.247" endtime="20220704 23:42:22.332"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 23:42:22.333" endtime="20220704 23:42:22.333"/>
</return>
<msg timestamp="20220704 23:42:22.333" level="INFO">${new_response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 23:42:22.245" endtime="20220704 23:42:22.333"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${new_response.json()}[closed]</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220704 23:42:22.333" endtime="20220704 23:42:22.334"/>
</kw>
<doc>Verify that a list can be archived through API</doc>
<tag>api</tag>
<tag>list.archive</tag>
<tag>regression</tag>
<status status="PASS" starttime="20220704 23:42:21.989" endtime="20220704 23:42:22.334"/>
</test>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Teardown Board</arg>
<arg>Delete All Sessions</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Teardown Board">
<doc>Delete the board created for this suite.</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 23:42:22.338" level="INFO">${url} = boards/62c37addd870992a38408695</msg>
<status status="PASS" starttime="20220704 23:42:22.337" endtime="20220704 23:42:22.338"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 23:42:22.796" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 23:42:22.338" endtime="20220704 23:42:22.796"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 23:42:22.796" endtime="20220704 23:42:22.796"/>
</return>
<msg timestamp="20220704 23:42:22.796" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 23:42:22.336" endtime="20220704 23:42:22.797"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 23:42:22.797" endtime="20220704 23:42:22.797"/>
</return>
<status status="PASS" starttime="20220704 23:42:22.335" endtime="20220704 23:42:22.797"/>
</kw>
<status status="PASS" starttime="20220704 23:42:22.335" endtime="20220704 23:42:22.797"/>
</kw>
<status status="PASS" starttime="20220704 23:42:22.335" endtime="20220704 23:42:22.797"/>
</kw>
<kw name="Delete All Sessions" library="request_own_library">
<status status="PASS" starttime="20220704 23:42:22.797" endtime="20220704 23:42:22.799"/>
</kw>
<status status="PASS" starttime="20220704 23:42:22.334" endtime="20220704 23:42:22.799"/>
</kw>
<doc>Example Test with Trello API lists</doc>
<status status="PASS" starttime="20220704 23:42:21.254" endtime="20220704 23:42:22.799"/>
</suite>
<status status="PASS" starttime="20220704 23:42:10.654" endtime="20220704 23:42:22.801"/>
</suite>
<status status="PASS" starttime="20220704 23:42:10.634" endtime="20220704 23:42:22.804"/>
</suite>
<statistics>
<total>
<stat pass="18" fail="0" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="18" fail="0" skip="0">api</stat>
<stat pass="1" fail="0" skip="0">board.create</stat>
<stat pass="1" fail="0" skip="0">board.delete</stat>
<stat pass="1" fail="0" skip="0">board.get</stat>
<stat pass="2" fail="0" skip="0">board.update</stat>
<stat pass="1" fail="0" skip="0">card.close</stat>
<stat pass="1" fail="0" skip="0">card.create</stat>
<stat pass="1" fail="0" skip="0">card.delete</stat>
<stat pass="1" fail="0" skip="0">card.update</stat>
<stat pass="1" fail="0" skip="0">checklist.create</stat>
<stat pass="1" fail="0" skip="0">checklist.delete</stat>
<stat pass="1" fail="0" skip="0">checklist.update</stat>
<stat pass="1" fail="0" skip="0">label.create</stat>
<stat pass="1" fail="0" skip="0">label.delete</stat>
<stat pass="1" fail="0" skip="0">label.get</stat>
<stat pass="1" fail="0" skip="0">label.update</stat>
<stat pass="1" fail="0" skip="0">list.archive</stat>
<stat pass="1" fail="0" skip="0">list.create</stat>
<stat pass="1" fail="0" skip="0">list.update</stat>
<stat pass="5" fail="0" skip="0">regression</stat>
<stat pass="13" fail="0" skip="0">smoke</stat>
</tag>
<suite>
<stat pass="18" fail="0" skip="0" id="s1" name="Trello">Trello</stat>
<stat pass="18" fail="0" skip="0" id="s1-s1" name="Api">Trello.Api</stat>
<stat pass="5" fail="0" skip="0" id="s1-s1-s1" name="Trello Api Boards Tests">Trello.Api.Trello Api Boards Tests</stat>
<stat pass="4" fail="0" skip="0" id="s1-s1-s2" name="Trello Api Cards Tests">Trello.Api.Trello Api Cards Tests</stat>
<stat pass="3" fail="0" skip="0" id="s1-s1-s3" name="Trello Api Checklists Tests">Trello.Api.Trello Api Checklists Tests</stat>
<stat pass="3" fail="0" skip="0" id="s1-s1-s4" name="Trello Api Labels Tests">Trello.Api.Trello Api Labels Tests</stat>
<stat pass="3" fail="0" skip="0" id="s1-s1-s5" name="Trello Api Lists Tests">Trello.Api.Trello Api Lists Tests</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
