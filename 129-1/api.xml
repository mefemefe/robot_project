<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 5.0.1 (Python 3.10.5 on linux)" generated="20220704 22:22:30.656" rpa="false" schemaversion="3">
<suite id="s1" name="Trello" source="/trello">
<suite id="s1-s1" name="Api" source="/trello/api">
<suite id="s1-s1-s1" name="Trello Api Boards Tests" source="/trello/api/trello_api_boards_tests.robot">
<kw name="Create Trello Session" library="TrelloAPI" type="SETUP">
<doc>Creates a Trello Session</doc>
<kw name="Create Session" library="request_own_library">
<arg>${API_BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<status status="PASS" starttime="20220704 22:22:30.807" endtime="20220704 22:22:30.807"/>
</kw>
<status status="PASS" starttime="20220704 22:22:30.806" endtime="20220704 22:22:30.807"/>
</kw>
<test id="s1-s1-s1-t1" name="CREATE a board" line="9">
<kw name="Create A Board" library="Board">
<var>${response}</var>
<arg>NewBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 22:22:30.810" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 22:22:30.809" endtime="20220704 22:22:30.810"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 22:22:30.810" endtime="20220704 22:22:30.810"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 22:22:30.811" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220704 22:22:30.810" endtime="20220704 22:22:30.811"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 22:22:31.070" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 22:22:30.811" endtime="20220704 22:22:31.070"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 22:22:31.070" endtime="20220704 22:22:31.070"/>
</return>
<msg timestamp="20220704 22:22:31.071" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 22:22:30.809" endtime="20220704 22:22:31.071"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 22:22:31.071" endtime="20220704 22:22:31.071"/>
</return>
<msg timestamp="20220704 22:22:31.071" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 22:22:30.809" endtime="20220704 22:22:31.071"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>board</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220704 22:22:31.072" endtime="20220704 22:22:31.077"/>
</kw>
<status status="PASS" starttime="20220704 22:22:31.071" endtime="20220704 22:22:31.077"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${response.json()}[id]</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${response.json()}[id]</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 22:22:31.080" level="INFO">${url} = boards/62c368268fc8fb41705d2a95</msg>
<status status="PASS" starttime="20220704 22:22:31.079" endtime="20220704 22:22:31.080"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 22:22:31.455" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 22:22:31.080" endtime="20220704 22:22:31.455"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 22:22:31.455" endtime="20220704 22:22:31.455"/>
</return>
<msg timestamp="20220704 22:22:31.455" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 22:22:31.079" endtime="20220704 22:22:31.455"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 22:22:31.456" endtime="20220704 22:22:31.456"/>
</return>
<status status="PASS" starttime="20220704 22:22:31.078" endtime="20220704 22:22:31.456"/>
</kw>
<status status="PASS" starttime="20220704 22:22:31.077" endtime="20220704 22:22:31.456"/>
</kw>
<doc>Verify that a board can be create through API</doc>
<tag>api</tag>
<tag>board.create</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220704 22:22:30.808" endtime="20220704 22:22:31.456"/>
</test>
<test id="s1-s1-s1-t2" name="UPDATE a Board's name" line="16">
<kw name="Create A Board" library="Board">
<var>${response}</var>
<arg>NewBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 22:22:31.459" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 22:22:31.459" endtime="20220704 22:22:31.459"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 22:22:31.459" endtime="20220704 22:22:31.460"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 22:22:31.460" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220704 22:22:31.460" endtime="20220704 22:22:31.461"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 22:22:31.687" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 22:22:31.461" endtime="20220704 22:22:31.687"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 22:22:31.687" endtime="20220704 22:22:31.687"/>
</return>
<msg timestamp="20220704 22:22:31.687" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 22:22:31.458" endtime="20220704 22:22:31.687"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 22:22:31.687" endtime="20220704 22:22:31.687"/>
</return>
<msg timestamp="20220704 22:22:31.688" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 22:22:31.458" endtime="20220704 22:22:31.688"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>board</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220704 22:22:31.688" endtime="20220704 22:22:31.693"/>
</kw>
<status status="PASS" starttime="20220704 22:22:31.688" endtime="20220704 22:22:31.693"/>
</kw>
<kw name="Update A Board" library="Board">
<arg>${response.json()}[id]</arg>
<arg>name</arg>
<arg>NewName</arg>
<doc>Updates the board with the given ID
optional_args: name, desc, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 22:22:31.695" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 22:22:31.695" endtime="20220704 22:22:31.695"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 22:22:31.695" endtime="20220704 22:22:31.695"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 22:22:31.696" level="INFO">${url} = boards/62c36827da328d62056139be</msg>
<status status="PASS" starttime="20220704 22:22:31.695" endtime="20220704 22:22:31.696"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 22:22:31.860" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 22:22:31.696" endtime="20220704 22:22:31.860"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 22:22:31.860" endtime="20220704 22:22:31.860"/>
</return>
<msg timestamp="20220704 22:22:31.860" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 22:22:31.694" endtime="20220704 22:22:31.860"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 22:22:31.861" endtime="20220704 22:22:31.861"/>
</return>
<status status="PASS" starttime="20220704 22:22:31.693" endtime="20220704 22:22:31.861"/>
</kw>
<kw name="Get A Board" library="Board">
<var>${new_response}</var>
<arg>${response.json()}[id]</arg>
<doc>Gets the Board with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 22:22:31.863" level="INFO">${url} = boards/62c36827da328d62056139be</msg>
<status status="PASS" starttime="20220704 22:22:31.863" endtime="20220704 22:22:31.863"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 22:22:31.967" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 22:22:31.863" endtime="20220704 22:22:31.967"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 22:22:31.967" endtime="20220704 22:22:31.967"/>
</return>
<msg timestamp="20220704 22:22:31.968" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 22:22:31.862" endtime="20220704 22:22:31.968"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 22:22:31.968" endtime="20220704 22:22:31.968"/>
</return>
<msg timestamp="20220704 22:22:31.968" level="INFO">${new_response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 22:22:31.861" endtime="20220704 22:22:31.968"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${new_response}</arg>
<arg>board</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220704 22:22:31.969" endtime="20220704 22:22:31.973"/>
</kw>
<status status="PASS" starttime="20220704 22:22:31.968" endtime="20220704 22:22:31.973"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${new_response.json()}[name]</arg>
<arg>NewName</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220704 22:22:31.974" endtime="20220704 22:22:31.974"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${response.json()}[id]</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${response.json()}[id]</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 22:22:31.978" level="INFO">${url} = boards/62c36827da328d62056139be</msg>
<status status="PASS" starttime="20220704 22:22:31.977" endtime="20220704 22:22:31.978"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 22:22:32.340" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 22:22:31.978" endtime="20220704 22:22:32.340"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 22:22:32.340" endtime="20220704 22:22:32.340"/>
</return>
<msg timestamp="20220704 22:22:32.340" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 22:22:31.976" endtime="20220704 22:22:32.340"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 22:22:32.340" endtime="20220704 22:22:32.340"/>
</return>
<status status="PASS" starttime="20220704 22:22:31.975" endtime="20220704 22:22:32.341"/>
</kw>
<status status="PASS" starttime="20220704 22:22:31.975" endtime="20220704 22:22:32.341"/>
</kw>
<doc>Verify that a board's name can be updated through API</doc>
<tag>api</tag>
<tag>board.update</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220704 22:22:31.457" endtime="20220704 22:22:32.341"/>
</test>
<test id="s1-s1-s1-t3" name="DELETE A Board" line="27">
<kw name="Create A Board" library="Board">
<var>${response}</var>
<arg>NewBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 22:22:32.344" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 22:22:32.344" endtime="20220704 22:22:32.344"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 22:22:32.344" endtime="20220704 22:22:32.344"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 22:22:32.345" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220704 22:22:32.345" endtime="20220704 22:22:32.345"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 22:22:32.586" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 22:22:32.345" endtime="20220704 22:22:32.586"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 22:22:32.586" endtime="20220704 22:22:32.586"/>
</return>
<msg timestamp="20220704 22:22:32.587" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 22:22:32.343" endtime="20220704 22:22:32.587"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 22:22:32.587" endtime="20220704 22:22:32.587"/>
</return>
<msg timestamp="20220704 22:22:32.587" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 22:22:32.342" endtime="20220704 22:22:32.587"/>
</kw>
<kw name="Delete A Board" library="Board">
<arg>${response.json()}[id]</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 22:22:32.589" level="INFO">${url} = boards/62c36828ac972c13fdf2f1a2</msg>
<status status="PASS" starttime="20220704 22:22:32.589" endtime="20220704 22:22:32.589"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 22:22:32.944" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 22:22:32.590" endtime="20220704 22:22:32.944"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 22:22:32.944" endtime="20220704 22:22:32.944"/>
</return>
<msg timestamp="20220704 22:22:32.944" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 22:22:32.588" endtime="20220704 22:22:32.944"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 22:22:32.944" endtime="20220704 22:22:32.944"/>
</return>
<status status="PASS" starttime="20220704 22:22:32.587" endtime="20220704 22:22:32.945"/>
</kw>
<kw name="Get A Board" library="Board">
<arg>${response.json()}[id]</arg>
<arg>status_code=404</arg>
<doc>Gets the Board with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 22:22:32.947" level="INFO">${url} = boards/62c36828ac972c13fdf2f1a2</msg>
<status status="PASS" starttime="20220704 22:22:32.947" endtime="20220704 22:22:32.947"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 22:22:33.037" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220704 22:22:32.948" endtime="20220704 22:22:33.037"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 22:22:33.037" endtime="20220704 22:22:33.037"/>
</return>
<msg timestamp="20220704 22:22:33.037" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220704 22:22:32.946" endtime="20220704 22:22:33.038"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 22:22:33.038" endtime="20220704 22:22:33.038"/>
</return>
<status status="PASS" starttime="20220704 22:22:32.945" endtime="20220704 22:22:33.038"/>
</kw>
<doc>Verify that a board can be deleted through API</doc>
<tag>api</tag>
<tag>board.delete</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220704 22:22:32.342" endtime="20220704 22:22:33.038"/>
</test>
<test id="s1-s1-s1-t4" name="GET Information of A Board" line="34">
<kw name="Create A Board" library="Board">
<var>${response}</var>
<arg>BoardTest</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 22:22:33.041" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 22:22:33.041" endtime="20220704 22:22:33.041"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 22:22:33.042" endtime="20220704 22:22:33.042"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 22:22:33.043" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220704 22:22:33.042" endtime="20220704 22:22:33.043"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 22:22:33.256" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 22:22:33.043" endtime="20220704 22:22:33.256"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 22:22:33.256" endtime="20220704 22:22:33.256"/>
</return>
<msg timestamp="20220704 22:22:33.256" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 22:22:33.040" endtime="20220704 22:22:33.256"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 22:22:33.256" endtime="20220704 22:22:33.256"/>
</return>
<msg timestamp="20220704 22:22:33.256" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 22:22:33.040" endtime="20220704 22:22:33.256"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>board</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220704 22:22:33.257" endtime="20220704 22:22:33.261"/>
</kw>
<status status="PASS" starttime="20220704 22:22:33.257" endtime="20220704 22:22:33.261"/>
</kw>
<kw name="Get A Board" library="Board">
<var>${response2}</var>
<arg>${response.json()}[id]</arg>
<doc>Gets the Board with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 22:22:33.263" level="INFO">${url} = boards/62c368296c225a3484a1c856</msg>
<status status="PASS" starttime="20220704 22:22:33.263" endtime="20220704 22:22:33.263"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 22:22:33.360" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 22:22:33.264" endtime="20220704 22:22:33.360"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 22:22:33.360" endtime="20220704 22:22:33.360"/>
</return>
<msg timestamp="20220704 22:22:33.360" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 22:22:33.263" endtime="20220704 22:22:33.360"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 22:22:33.360" endtime="20220704 22:22:33.360"/>
</return>
<msg timestamp="20220704 22:22:33.361" level="INFO">${response2} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 22:22:33.262" endtime="20220704 22:22:33.361"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response2}</arg>
<arg>board</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220704 22:22:33.361" endtime="20220704 22:22:33.366"/>
</kw>
<status status="PASS" starttime="20220704 22:22:33.361" endtime="20220704 22:22:33.366"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${response2.json()}[name]</arg>
<arg>BoardTest</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220704 22:22:33.366" endtime="20220704 22:22:33.367"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${response.json()}[id]</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${response.json()}[id]</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 22:22:33.370" level="INFO">${url} = boards/62c368296c225a3484a1c856</msg>
<status status="PASS" starttime="20220704 22:22:33.369" endtime="20220704 22:22:33.370"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 22:22:33.754" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 22:22:33.370" endtime="20220704 22:22:33.754"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 22:22:33.754" endtime="20220704 22:22:33.754"/>
</return>
<msg timestamp="20220704 22:22:33.754" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 22:22:33.369" endtime="20220704 22:22:33.755"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 22:22:33.755" endtime="20220704 22:22:33.755"/>
</return>
<status status="PASS" starttime="20220704 22:22:33.368" endtime="20220704 22:22:33.755"/>
</kw>
<status status="PASS" starttime="20220704 22:22:33.367" endtime="20220704 22:22:33.755"/>
</kw>
<doc>Verify that a board's information can be accesed through API</doc>
<tag>api</tag>
<tag>board.get</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220704 22:22:33.039" endtime="20220704 22:22:33.755"/>
</test>
<test id="s1-s1-s1-t5" name="UPDATE a Board's description" line="45">
<kw name="Create A Board" library="Board">
<var>${response}</var>
<arg>NewBoardForTest</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 22:22:33.758" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 22:22:33.758" endtime="20220704 22:22:33.758"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 22:22:33.758" endtime="20220704 22:22:33.758"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 22:22:33.759" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220704 22:22:33.758" endtime="20220704 22:22:33.759"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 22:22:33.957" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 22:22:33.759" endtime="20220704 22:22:33.957"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 22:22:33.957" endtime="20220704 22:22:33.957"/>
</return>
<msg timestamp="20220704 22:22:33.957" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 22:22:33.757" endtime="20220704 22:22:33.957"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 22:22:33.958" endtime="20220704 22:22:33.958"/>
</return>
<msg timestamp="20220704 22:22:33.958" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 22:22:33.756" endtime="20220704 22:22:33.958"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>board</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220704 22:22:33.958" endtime="20220704 22:22:33.963"/>
</kw>
<status status="PASS" starttime="20220704 22:22:33.958" endtime="20220704 22:22:33.963"/>
</kw>
<kw name="Update A Board" library="Board">
<arg>${response.json()}[id]</arg>
<arg>desc</arg>
<arg>sampleDescription</arg>
<doc>Updates the board with the given ID
optional_args: name, desc, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 22:22:33.965" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 22:22:33.965" endtime="20220704 22:22:33.965"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 22:22:33.965" endtime="20220704 22:22:33.965"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 22:22:33.966" level="INFO">${url} = boards/62c36829736f461b6fc952ed</msg>
<status status="PASS" starttime="20220704 22:22:33.965" endtime="20220704 22:22:33.966"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 22:22:34.100" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 22:22:33.966" endtime="20220704 22:22:34.100"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 22:22:34.101" endtime="20220704 22:22:34.101"/>
</return>
<msg timestamp="20220704 22:22:34.101" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 22:22:33.964" endtime="20220704 22:22:34.101"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 22:22:34.101" endtime="20220704 22:22:34.101"/>
</return>
<status status="PASS" starttime="20220704 22:22:33.963" endtime="20220704 22:22:34.101"/>
</kw>
<kw name="Get A Board" library="Board">
<var>${new_response}</var>
<arg>${response.json()}[id]</arg>
<doc>Gets the Board with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 22:22:34.103" level="INFO">${url} = boards/62c36829736f461b6fc952ed</msg>
<status status="PASS" starttime="20220704 22:22:34.103" endtime="20220704 22:22:34.103"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 22:22:34.207" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 22:22:34.103" endtime="20220704 22:22:34.207"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 22:22:34.207" endtime="20220704 22:22:34.207"/>
</return>
<msg timestamp="20220704 22:22:34.207" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 22:22:34.102" endtime="20220704 22:22:34.207"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 22:22:34.207" endtime="20220704 22:22:34.207"/>
</return>
<msg timestamp="20220704 22:22:34.207" level="INFO">${new_response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 22:22:34.101" endtime="20220704 22:22:34.207"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${new_response.json()}[desc]</arg>
<arg>sampleDescription</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220704 22:22:34.208" endtime="20220704 22:22:34.209"/>
</kw>
<kw name="Update A Board" library="Board">
<arg>${response.json()}[id]</arg>
<arg>desc</arg>
<arg>updatedDescription</arg>
<doc>Updates the board with the given ID
optional_args: name, desc, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 22:22:34.211" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 22:22:34.211" endtime="20220704 22:22:34.211"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 22:22:34.211" endtime="20220704 22:22:34.211"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 22:22:34.212" level="INFO">${url} = boards/62c36829736f461b6fc952ed</msg>
<status status="PASS" starttime="20220704 22:22:34.211" endtime="20220704 22:22:34.212"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 22:22:34.359" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 22:22:34.212" endtime="20220704 22:22:34.359"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 22:22:34.359" endtime="20220704 22:22:34.359"/>
</return>
<msg timestamp="20220704 22:22:34.359" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 22:22:34.210" endtime="20220704 22:22:34.359"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 22:22:34.359" endtime="20220704 22:22:34.359"/>
</return>
<status status="PASS" starttime="20220704 22:22:34.209" endtime="20220704 22:22:34.360"/>
</kw>
<kw name="Get A Board" library="Board">
<var>${new_response2}</var>
<arg>${response.json()}[id]</arg>
<doc>Gets the Board with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 22:22:34.362" level="INFO">${url} = boards/62c36829736f461b6fc952ed</msg>
<status status="PASS" starttime="20220704 22:22:34.361" endtime="20220704 22:22:34.362"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 22:22:34.458" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 22:22:34.362" endtime="20220704 22:22:34.458"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 22:22:34.458" endtime="20220704 22:22:34.458"/>
</return>
<msg timestamp="20220704 22:22:34.458" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 22:22:34.361" endtime="20220704 22:22:34.458"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 22:22:34.458" endtime="20220704 22:22:34.458"/>
</return>
<msg timestamp="20220704 22:22:34.459" level="INFO">${new_response2} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 22:22:34.360" endtime="20220704 22:22:34.459"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${new_response2.json()}[desc]</arg>
<arg>updatedDescription</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220704 22:22:34.459" endtime="20220704 22:22:34.460"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${response.json()}[id]</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${response.json()}[id]</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 22:22:34.463" level="INFO">${url} = boards/62c36829736f461b6fc952ed</msg>
<status status="PASS" starttime="20220704 22:22:34.462" endtime="20220704 22:22:34.463"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 22:22:34.826" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 22:22:34.463" endtime="20220704 22:22:34.826"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 22:22:34.826" endtime="20220704 22:22:34.826"/>
</return>
<msg timestamp="20220704 22:22:34.827" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 22:22:34.461" endtime="20220704 22:22:34.827"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 22:22:34.827" endtime="20220704 22:22:34.827"/>
</return>
<status status="PASS" starttime="20220704 22:22:34.460" endtime="20220704 22:22:34.827"/>
</kw>
<status status="PASS" starttime="20220704 22:22:34.460" endtime="20220704 22:22:34.827"/>
</kw>
<doc>Verify that a board's description can be updated through API</doc>
<tag>api</tag>
<tag>board.update</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220704 22:22:33.755" endtime="20220704 22:22:34.827"/>
</test>
<kw name="Delete All Sessions" library="request_own_library" type="TEARDOWN">
<status status="PASS" starttime="20220704 22:22:34.829" endtime="20220704 22:22:34.830"/>
</kw>
<doc>Example Test with Trello API Boards</doc>
<status status="PASS" starttime="20220704 22:22:30.683" endtime="20220704 22:22:34.830"/>
</suite>
<suite id="s1-s1-s2" name="Trello Api Cards Tests" source="/trello/api/trello_api_cards_tests.robot">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Create Trello Session</arg>
<arg>Setup Board And List</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Create Trello Session" library="TrelloAPI">
<doc>Creates a Trello Session</doc>
<kw name="Create Session" library="request_own_library">
<arg>${API_BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<status status="PASS" starttime="20220704 22:22:34.845" endtime="20220704 22:22:34.846"/>
</kw>
<status status="PASS" starttime="20220704 22:22:34.845" endtime="20220704 22:22:34.846"/>
</kw>
<kw name="Setup Board And List">
<doc>Create a board and save its ID and its first list's ID</doc>
<kw name="Create A Board" library="Board">
<var>${BOARD}</var>
<arg>TestBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 22:22:34.847" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 22:22:34.847" endtime="20220704 22:22:34.847"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 22:22:34.847" endtime="20220704 22:22:34.848"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 22:22:34.849" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220704 22:22:34.848" endtime="20220704 22:22:34.849"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 22:22:35.075" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 22:22:34.849" endtime="20220704 22:22:35.075"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 22:22:35.075" endtime="20220704 22:22:35.075"/>
</return>
<msg timestamp="20220704 22:22:35.076" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 22:22:34.847" endtime="20220704 22:22:35.076"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 22:22:35.076" endtime="20220704 22:22:35.076"/>
</return>
<msg timestamp="20220704 22:22:35.076" level="INFO">${BOARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 22:22:34.846" endtime="20220704 22:22:35.076"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_BOARD_ID}</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220704 22:22:35.077" level="INFO">${TEST_SUITE_BOARD_ID} = 62c3682a1e566e853b497582</msg>
<status status="PASS" starttime="20220704 22:22:35.076" endtime="20220704 22:22:35.077"/>
</kw>
<kw name="Get Lists On A Board" library="Board">
<var>${LISTS}</var>
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Get all the lists in a board</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>lists_on_board</arg>
<arg>${id}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 22:22:35.078" level="INFO">${url} = boards/62c3682a1e566e853b497582/lists/</msg>
<status status="PASS" starttime="20220704 22:22:35.078" endtime="20220704 22:22:35.078"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 22:22:35.178" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 22:22:35.079" endtime="20220704 22:22:35.178"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 22:22:35.178" endtime="20220704 22:22:35.178"/>
</return>
<msg timestamp="20220704 22:22:35.178" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 22:22:35.078" endtime="20220704 22:22:35.178"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 22:22:35.178" endtime="20220704 22:22:35.178"/>
</return>
<msg timestamp="20220704 22:22:35.179" level="INFO">${LISTS} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 22:22:35.077" endtime="20220704 22:22:35.179"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_LIST_ID}</arg>
<arg>${LISTS.json()}[0][id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220704 22:22:35.179" level="INFO">${TEST_SUITE_LIST_ID} = 62c3682a1e566e853b497589</msg>
<status status="PASS" starttime="20220704 22:22:35.179" endtime="20220704 22:22:35.180"/>
</kw>
<status status="PASS" starttime="20220704 22:22:34.846" endtime="20220704 22:22:35.180"/>
</kw>
<status status="PASS" starttime="20220704 22:22:34.845" endtime="20220704 22:22:35.180"/>
</kw>
<test id="s1-s1-s2-t1" name="Verify A Card Can Be Created" line="13">
<kw name="Create A Card" library="Card">
<var>${response}</var>
<arg>name</arg>
<arg>RFCard2</arg>
<doc>Creates a new card in the given list.
required_args: listId
optional_args: name, desc, pos, idCardSource, idLabels, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>@{optional_args}</arg>
<arg>idList</arg>
<arg>${idList}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 22:22:35.182" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 22:22:35.182" endtime="20220704 22:22:35.182"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 22:22:35.182" endtime="20220704 22:22:35.182"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 22:22:35.183" level="INFO">${url} = cards/</msg>
<status status="PASS" starttime="20220704 22:22:35.182" endtime="20220704 22:22:35.183"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 22:22:35.440" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 22:22:35.183" endtime="20220704 22:22:35.440"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 22:22:35.441" endtime="20220704 22:22:35.441"/>
</return>
<msg timestamp="20220704 22:22:35.441" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 22:22:35.181" endtime="20220704 22:22:35.441"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 22:22:35.441" endtime="20220704 22:22:35.441"/>
</return>
<msg timestamp="20220704 22:22:35.441" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 22:22:35.181" endtime="20220704 22:22:35.441"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>card</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220704 22:22:35.442" endtime="20220704 22:22:35.449"/>
</kw>
<status status="PASS" starttime="20220704 22:22:35.442" endtime="20220704 22:22:35.449"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 22:22:35.449" endtime="20220704 22:22:35.450"/>
</return>
<msg timestamp="20220704 22:22:35.450" level="INFO">${CARD_ID} = 62c3682b5cdaa18d0743413b</msg>
<status status="PASS" starttime="20220704 22:22:35.449" endtime="20220704 22:22:35.450"/>
</kw>
<kw name="Get A Card" library="Card">
<var>${response}</var>
<arg>${CARD_ID}</arg>
<doc>Gets the card with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 22:22:35.452" level="INFO">${url} = cards/62c3682b5cdaa18d0743413b</msg>
<status status="PASS" starttime="20220704 22:22:35.451" endtime="20220704 22:22:35.452"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 22:22:35.561" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 22:22:35.452" endtime="20220704 22:22:35.561"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 22:22:35.561" endtime="20220704 22:22:35.561"/>
</return>
<msg timestamp="20220704 22:22:35.561" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 22:22:35.451" endtime="20220704 22:22:35.561"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 22:22:35.561" endtime="20220704 22:22:35.561"/>
</return>
<msg timestamp="20220704 22:22:35.561" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 22:22:35.450" endtime="20220704 22:22:35.561"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_NAME}</var>
<arg>${response}</arg>
<arg>name</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 22:22:35.562" endtime="20220704 22:22:35.562"/>
</return>
<msg timestamp="20220704 22:22:35.563" level="INFO">${CARD_NAME} = RFCard2</msg>
<status status="PASS" starttime="20220704 22:22:35.562" endtime="20220704 22:22:35.563"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${CARD_NAME}</arg>
<arg>RFCard2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220704 22:22:35.563" endtime="20220704 22:22:35.563"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Card</arg>
<arg>${CARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Card" library="Card">
<arg>${CARD_ID}</arg>
<doc>Deletes the card with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 22:22:35.565" level="INFO">${url} = cards/62c3682b5cdaa18d0743413b</msg>
<status status="PASS" starttime="20220704 22:22:35.565" endtime="20220704 22:22:35.565"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 22:22:35.771" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 22:22:35.565" endtime="20220704 22:22:35.771"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 22:22:35.771" endtime="20220704 22:22:35.771"/>
</return>
<msg timestamp="20220704 22:22:35.771" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 22:22:35.564" endtime="20220704 22:22:35.771"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 22:22:35.771" endtime="20220704 22:22:35.771"/>
</return>
<status status="PASS" starttime="20220704 22:22:35.564" endtime="20220704 22:22:35.772"/>
</kw>
<status status="PASS" starttime="20220704 22:22:35.563" endtime="20220704 22:22:35.772"/>
</kw>
<doc>Verify that a card can be created through API</doc>
<tag>api</tag>
<tag>card.create</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220704 22:22:35.180" endtime="20220704 22:22:35.772"/>
</test>
<test id="s1-s1-s2-t2" name="Verify A Card Can Be Closed" line="24">
<kw name="Create A Card" library="Card">
<var>${response}</var>
<doc>Creates a new card in the given list.
required_args: listId
optional_args: name, desc, pos, idCardSource, idLabels, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>@{optional_args}</arg>
<arg>idList</arg>
<arg>${idList}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 22:22:35.775" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 22:22:35.775" endtime="20220704 22:22:35.775"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 22:22:35.776" endtime="20220704 22:22:35.776"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 22:22:35.777" level="INFO">${url} = cards/</msg>
<status status="PASS" starttime="20220704 22:22:35.776" endtime="20220704 22:22:35.777"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 22:22:35.964" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 22:22:35.777" endtime="20220704 22:22:35.964"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 22:22:35.964" endtime="20220704 22:22:35.964"/>
</return>
<msg timestamp="20220704 22:22:35.965" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 22:22:35.774" endtime="20220704 22:22:35.965"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 22:22:35.965" endtime="20220704 22:22:35.965"/>
</return>
<msg timestamp="20220704 22:22:35.965" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 22:22:35.774" endtime="20220704 22:22:35.965"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 22:22:35.966" endtime="20220704 22:22:35.966"/>
</return>
<msg timestamp="20220704 22:22:35.967" level="INFO">${CARD_ID} = 62c3682bda36a65ee6263620</msg>
<status status="PASS" starttime="20220704 22:22:35.965" endtime="20220704 22:22:35.967"/>
</kw>
<kw name="Archive A Card" library="Card">
<arg>${CARD_ID}</arg>
<doc>Modifies the card status to closed.</doc>
<kw name="Update A Card" library="Card">
<var>${response}</var>
<arg>${id}</arg>
<arg>closed</arg>
<arg>true</arg>
<arg>status_code=${status_code}</arg>
<doc>Updates the card with the given ID
optional_args: name, desc, closed, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<arg>status_code=${status_code}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 22:22:35.969" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 22:22:35.969" endtime="20220704 22:22:35.969"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 22:22:35.969" endtime="20220704 22:22:35.969"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 22:22:35.970" level="INFO">${url} = cards/62c3682bda36a65ee6263620</msg>
<status status="PASS" starttime="20220704 22:22:35.969" endtime="20220704 22:22:35.970"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 22:22:36.151" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 22:22:35.970" endtime="20220704 22:22:36.151"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 22:22:36.151" endtime="20220704 22:22:36.151"/>
</return>
<msg timestamp="20220704 22:22:36.151" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 22:22:35.968" endtime="20220704 22:22:36.151"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 22:22:36.151" endtime="20220704 22:22:36.151"/>
</return>
<msg timestamp="20220704 22:22:36.152" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 22:22:35.967" endtime="20220704 22:22:36.152"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 22:22:36.152" endtime="20220704 22:22:36.152"/>
</return>
<status status="PASS" starttime="20220704 22:22:35.967" endtime="20220704 22:22:36.152"/>
</kw>
<kw name="Get A Card" library="Card">
<var>${response}</var>
<arg>${CARD_ID}</arg>
<doc>Gets the card with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 22:22:36.153" level="INFO">${url} = cards/62c3682bda36a65ee6263620</msg>
<status status="PASS" starttime="20220704 22:22:36.153" endtime="20220704 22:22:36.153"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 22:22:36.258" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 22:22:36.154" endtime="20220704 22:22:36.258"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 22:22:36.258" endtime="20220704 22:22:36.258"/>
</return>
<msg timestamp="20220704 22:22:36.259" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 22:22:36.152" endtime="20220704 22:22:36.259"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 22:22:36.259" endtime="20220704 22:22:36.259"/>
</return>
<msg timestamp="20220704 22:22:36.260" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 22:22:36.152" endtime="20220704 22:22:36.260"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_CLOSED}</var>
<arg>${response}</arg>
<arg>closed</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 22:22:36.260" endtime="20220704 22:22:36.260"/>
</return>
<msg timestamp="20220704 22:22:36.261" level="INFO">${CARD_CLOSED} = True</msg>
<status status="PASS" starttime="20220704 22:22:36.260" endtime="20220704 22:22:36.261"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${CARD_CLOSED}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220704 22:22:36.262" endtime="20220704 22:22:36.262"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Card</arg>
<arg>${CARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Card" library="Card">
<arg>${CARD_ID}</arg>
<doc>Deletes the card with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 22:22:36.264" level="INFO">${url} = cards/62c3682bda36a65ee6263620</msg>
<status status="PASS" starttime="20220704 22:22:36.263" endtime="20220704 22:22:36.264"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 22:22:36.457" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 22:22:36.264" endtime="20220704 22:22:36.457"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 22:22:36.457" endtime="20220704 22:22:36.458"/>
</return>
<msg timestamp="20220704 22:22:36.458" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 22:22:36.263" endtime="20220704 22:22:36.458"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 22:22:36.458" endtime="20220704 22:22:36.458"/>
</return>
<status status="PASS" starttime="20220704 22:22:36.262" endtime="20220704 22:22:36.458"/>
</kw>
<status status="PASS" starttime="20220704 22:22:36.262" endtime="20220704 22:22:36.458"/>
</kw>
<doc>Verify that a card can be closed through API</doc>
<tag>api</tag>
<tag>card.close</tag>
<tag>regression</tag>
<status status="PASS" starttime="20220704 22:22:35.772" endtime="20220704 22:22:36.458"/>
</test>
<test id="s1-s1-s2-t3" name="Verify A Card Can Be Deleted" line="35">
<kw name="Create A Card" library="Card">
<var>${response}</var>
<doc>Creates a new card in the given list.
required_args: listId
optional_args: name, desc, pos, idCardSource, idLabels, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>@{optional_args}</arg>
<arg>idList</arg>
<arg>${idList}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 22:22:36.461" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 22:22:36.461" endtime="20220704 22:22:36.461"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 22:22:36.461" endtime="20220704 22:22:36.462"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 22:22:36.463" level="INFO">${url} = cards/</msg>
<status status="PASS" starttime="20220704 22:22:36.462" endtime="20220704 22:22:36.463"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 22:22:36.648" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 22:22:36.463" endtime="20220704 22:22:36.648"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 22:22:36.648" endtime="20220704 22:22:36.648"/>
</return>
<msg timestamp="20220704 22:22:36.649" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 22:22:36.460" endtime="20220704 22:22:36.649"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 22:22:36.649" endtime="20220704 22:22:36.649"/>
</return>
<msg timestamp="20220704 22:22:36.649" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 22:22:36.459" endtime="20220704 22:22:36.649"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 22:22:36.649" endtime="20220704 22:22:36.649"/>
</return>
<msg timestamp="20220704 22:22:36.650" level="INFO">${CARD_ID} = 62c3682c4241a180365de5bb</msg>
<status status="PASS" starttime="20220704 22:22:36.649" endtime="20220704 22:22:36.650"/>
</kw>
<kw name="Delete A Card" library="Card">
<var>${response}</var>
<arg>${CARD_ID}</arg>
<doc>Deletes the card with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 22:22:36.652" level="INFO">${url} = cards/62c3682c4241a180365de5bb</msg>
<status status="PASS" starttime="20220704 22:22:36.651" endtime="20220704 22:22:36.652"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 22:22:36.852" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 22:22:36.652" endtime="20220704 22:22:36.852"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 22:22:36.852" endtime="20220704 22:22:36.853"/>
</return>
<msg timestamp="20220704 22:22:36.853" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 22:22:36.651" endtime="20220704 22:22:36.853"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 22:22:36.853" endtime="20220704 22:22:36.853"/>
</return>
<msg timestamp="20220704 22:22:36.853" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 22:22:36.650" endtime="20220704 22:22:36.853"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>delete</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220704 22:22:36.854" endtime="20220704 22:22:36.856"/>
</kw>
<status status="PASS" starttime="20220704 22:22:36.853" endtime="20220704 22:22:36.856"/>
</kw>
<kw name="Get A Card" library="Card">
<arg>${CARD_ID}</arg>
<arg>status_code=404</arg>
<doc>Gets the card with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 22:22:36.858" level="INFO">${url} = cards/62c3682c4241a180365de5bb</msg>
<status status="PASS" starttime="20220704 22:22:36.857" endtime="20220704 22:22:36.858"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 22:22:36.948" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220704 22:22:36.858" endtime="20220704 22:22:36.948"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 22:22:36.948" endtime="20220704 22:22:36.948"/>
</return>
<msg timestamp="20220704 22:22:36.949" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220704 22:22:36.857" endtime="20220704 22:22:36.949"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 22:22:36.949" endtime="20220704 22:22:36.949"/>
</return>
<status status="PASS" starttime="20220704 22:22:36.856" endtime="20220704 22:22:36.949"/>
</kw>
<doc>Verify that a card can be deleted through API</doc>
<tag>api</tag>
<tag>card.delete</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220704 22:22:36.459" endtime="20220704 22:22:36.949"/>
</test>
<test id="s1-s1-s2-t4" name="Verify A Card Can Be Updated" line="44">
<kw name="Create A Card" library="Card">
<var>${response}</var>
<arg>name</arg>
<arg>RFCard4</arg>
<doc>Creates a new card in the given list.
required_args: listId
optional_args: name, desc, pos, idCardSource, idLabels, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>@{optional_args}</arg>
<arg>idList</arg>
<arg>${idList}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 22:22:36.951" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 22:22:36.951" endtime="20220704 22:22:36.951"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 22:22:36.952" endtime="20220704 22:22:36.952"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 22:22:36.953" level="INFO">${url} = cards/</msg>
<status status="PASS" starttime="20220704 22:22:36.952" endtime="20220704 22:22:36.953"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 22:22:37.336" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 22:22:36.953" endtime="20220704 22:22:37.336"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 22:22:37.336" endtime="20220704 22:22:37.336"/>
</return>
<msg timestamp="20220704 22:22:37.336" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 22:22:36.951" endtime="20220704 22:22:37.336"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 22:22:37.336" endtime="20220704 22:22:37.336"/>
</return>
<msg timestamp="20220704 22:22:37.337" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 22:22:36.950" endtime="20220704 22:22:37.337"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 22:22:37.337" endtime="20220704 22:22:37.337"/>
</return>
<msg timestamp="20220704 22:22:37.338" level="INFO">${CARD_ID} = 62c3682de0bceb026cb802ba</msg>
<status status="PASS" starttime="20220704 22:22:37.337" endtime="20220704 22:22:37.338"/>
</kw>
<kw name="Update A Card" library="Card">
<var>${response}</var>
<arg>${CARD_ID}</arg>
<arg>name</arg>
<arg>RFCard5</arg>
<arg>desc</arg>
<arg>Description</arg>
<doc>Updates the card with the given ID
optional_args: name, desc, closed, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<arg>status_code=${status_code}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 22:22:37.340" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 22:22:37.340" endtime="20220704 22:22:37.340"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 22:22:37.340" endtime="20220704 22:22:37.340"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 22:22:37.341" level="INFO">${url} = cards/62c3682de0bceb026cb802ba</msg>
<status status="PASS" starttime="20220704 22:22:37.340" endtime="20220704 22:22:37.341"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 22:22:37.547" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 22:22:37.341" endtime="20220704 22:22:37.547"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 22:22:37.547" endtime="20220704 22:22:37.547"/>
</return>
<msg timestamp="20220704 22:22:37.547" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 22:22:37.339" endtime="20220704 22:22:37.547"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 22:22:37.547" endtime="20220704 22:22:37.547"/>
</return>
<msg timestamp="20220704 22:22:37.548" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 22:22:37.338" endtime="20220704 22:22:37.548"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>card</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220704 22:22:37.548" endtime="20220704 22:22:37.554"/>
</kw>
<status status="PASS" starttime="20220704 22:22:37.548" endtime="20220704 22:22:37.554"/>
</kw>
<kw name="Get A Card" library="Card">
<var>${response}</var>
<arg>${CARD_ID}</arg>
<doc>Gets the card with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 22:22:37.555" level="INFO">${url} = cards/62c3682de0bceb026cb802ba</msg>
<status status="PASS" starttime="20220704 22:22:37.555" endtime="20220704 22:22:37.555"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 22:22:37.670" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 22:22:37.556" endtime="20220704 22:22:37.670"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 22:22:37.670" endtime="20220704 22:22:37.670"/>
</return>
<msg timestamp="20220704 22:22:37.670" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 22:22:37.555" endtime="20220704 22:22:37.670"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 22:22:37.670" endtime="20220704 22:22:37.670"/>
</return>
<msg timestamp="20220704 22:22:37.670" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 22:22:37.554" endtime="20220704 22:22:37.670"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_NAME}</var>
<arg>${response}</arg>
<arg>name</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 22:22:37.671" endtime="20220704 22:22:37.671"/>
</return>
<msg timestamp="20220704 22:22:37.672" level="INFO">${CARD_NAME} = RFCard5</msg>
<status status="PASS" starttime="20220704 22:22:37.670" endtime="20220704 22:22:37.672"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_DESC}</var>
<arg>${response}</arg>
<arg>desc</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 22:22:37.672" endtime="20220704 22:22:37.672"/>
</return>
<msg timestamp="20220704 22:22:37.673" level="INFO">${CARD_DESC} = Description</msg>
<status status="PASS" starttime="20220704 22:22:37.672" endtime="20220704 22:22:37.673"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${CARD_NAME}</arg>
<arg>RFCard5</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220704 22:22:37.673" endtime="20220704 22:22:37.674"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${CARD_DESC}</arg>
<arg>Description</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220704 22:22:37.674" endtime="20220704 22:22:37.674"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Card</arg>
<arg>${CARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Card" library="Card">
<arg>${CARD_ID}</arg>
<doc>Deletes the card with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 22:22:37.676" level="INFO">${url} = cards/62c3682de0bceb026cb802ba</msg>
<status status="PASS" starttime="20220704 22:22:37.676" endtime="20220704 22:22:37.676"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 22:22:37.881" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 22:22:37.676" endtime="20220704 22:22:37.881"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 22:22:37.882" endtime="20220704 22:22:37.882"/>
</return>
<msg timestamp="20220704 22:22:37.882" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 22:22:37.675" endtime="20220704 22:22:37.882"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 22:22:37.882" endtime="20220704 22:22:37.882"/>
</return>
<status status="PASS" starttime="20220704 22:22:37.674" endtime="20220704 22:22:37.882"/>
</kw>
<status status="PASS" starttime="20220704 22:22:37.674" endtime="20220704 22:22:37.882"/>
</kw>
<doc>Verify that a card's name and Description can be updated through API</doc>
<tag>api</tag>
<tag>card.update</tag>
<tag>regression</tag>
<status status="PASS" starttime="20220704 22:22:36.949" endtime="20220704 22:22:37.882"/>
</test>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Teardown Board</arg>
<arg>Delete All Sessions</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Teardown Board">
<doc>Delete the board created for this suite</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 22:22:37.886" level="INFO">${url} = boards/62c3682a1e566e853b497582</msg>
<status status="PASS" starttime="20220704 22:22:37.886" endtime="20220704 22:22:37.886"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 22:22:38.347" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 22:22:37.886" endtime="20220704 22:22:38.347"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 22:22:38.347" endtime="20220704 22:22:38.347"/>
</return>
<msg timestamp="20220704 22:22:38.347" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 22:22:37.885" endtime="20220704 22:22:38.347"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 22:22:38.347" endtime="20220704 22:22:38.347"/>
</return>
<status status="PASS" starttime="20220704 22:22:37.884" endtime="20220704 22:22:38.348"/>
</kw>
<status status="PASS" starttime="20220704 22:22:37.884" endtime="20220704 22:22:38.348"/>
</kw>
<status status="PASS" starttime="20220704 22:22:37.884" endtime="20220704 22:22:38.348"/>
</kw>
<kw name="Delete All Sessions" library="request_own_library">
<status status="PASS" starttime="20220704 22:22:38.348" endtime="20220704 22:22:38.350"/>
</kw>
<status status="PASS" starttime="20220704 22:22:37.883" endtime="20220704 22:22:38.350"/>
</kw>
<doc>Example Test with Trello API Cards</doc>
<status status="PASS" starttime="20220704 22:22:34.833" endtime="20220704 22:22:38.350"/>
</suite>
<suite id="s1-s1-s3" name="Trello Api Checklists Tests" source="/trello/api/trello_api_checklists_tests.robot">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Create Trello Session</arg>
<arg>Setup Board, List And Card</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Create Trello Session" library="TrelloAPI">
<doc>Creates a Trello Session</doc>
<kw name="Create Session" library="request_own_library">
<arg>${API_BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<status status="PASS" starttime="20220704 22:22:38.364" endtime="20220704 22:22:38.365"/>
</kw>
<status status="PASS" starttime="20220704 22:22:38.364" endtime="20220704 22:22:38.365"/>
</kw>
<kw name="Setup Board, List And Card">
<doc>Create a board and save its ID and its first list's ID</doc>
<kw name="Create A Board" library="Board">
<var>${BOARD}</var>
<arg>TestBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 22:22:38.367" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 22:22:38.366" endtime="20220704 22:22:38.367"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 22:22:38.367" endtime="20220704 22:22:38.367"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 22:22:38.368" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220704 22:22:38.367" endtime="20220704 22:22:38.368"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 22:22:38.584" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 22:22:38.368" endtime="20220704 22:22:38.584"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 22:22:38.584" endtime="20220704 22:22:38.584"/>
</return>
<msg timestamp="20220704 22:22:38.584" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 22:22:38.366" endtime="20220704 22:22:38.584"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 22:22:38.584" endtime="20220704 22:22:38.584"/>
</return>
<msg timestamp="20220704 22:22:38.585" level="INFO">${BOARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 22:22:38.365" endtime="20220704 22:22:38.585"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_BOARD_ID}</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220704 22:22:38.586" level="INFO">${TEST_SUITE_BOARD_ID} = 62c3682e0dc9785f24e47af9</msg>
<status status="PASS" starttime="20220704 22:22:38.585" endtime="20220704 22:22:38.586"/>
</kw>
<kw name="Get Lists On A Board" library="Board">
<var>${LISTS}</var>
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Get all the lists in a board</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>lists_on_board</arg>
<arg>${id}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 22:22:38.587" level="INFO">${url} = boards/62c3682e0dc9785f24e47af9/lists/</msg>
<status status="PASS" starttime="20220704 22:22:38.587" endtime="20220704 22:22:38.587"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 22:22:38.684" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 22:22:38.588" endtime="20220704 22:22:38.685"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 22:22:38.685" endtime="20220704 22:22:38.685"/>
</return>
<msg timestamp="20220704 22:22:38.685" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 22:22:38.587" endtime="20220704 22:22:38.685"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 22:22:38.685" endtime="20220704 22:22:38.685"/>
</return>
<msg timestamp="20220704 22:22:38.685" level="INFO">${LISTS} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 22:22:38.586" endtime="20220704 22:22:38.686"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_LIST_ID}</arg>
<arg>${LISTS.json()}[0][id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220704 22:22:38.687" level="INFO">${TEST_SUITE_LIST_ID} = 62c3682e0dc9785f24e47b00</msg>
<status status="PASS" starttime="20220704 22:22:38.686" endtime="20220704 22:22:38.687"/>
</kw>
<kw name="Create A Card" library="Card">
<var>${CARD}</var>
<arg>name</arg>
<arg>TestCard</arg>
<doc>Creates a new card in the given list.
required_args: listId
optional_args: name, desc, pos, idCardSource, idLabels, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>@{optional_args}</arg>
<arg>idList</arg>
<arg>${idList}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 22:22:38.689" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 22:22:38.689" endtime="20220704 22:22:38.690"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 22:22:38.690" endtime="20220704 22:22:38.690"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 22:22:38.691" level="INFO">${url} = cards/</msg>
<status status="PASS" starttime="20220704 22:22:38.690" endtime="20220704 22:22:38.691"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 22:22:38.903" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 22:22:38.691" endtime="20220704 22:22:38.903"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 22:22:38.904" endtime="20220704 22:22:38.904"/>
</return>
<msg timestamp="20220704 22:22:38.904" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 22:22:38.688" endtime="20220704 22:22:38.904"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 22:22:38.904" endtime="20220704 22:22:38.904"/>
</return>
<msg timestamp="20220704 22:22:38.904" level="INFO">${CARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 22:22:38.687" endtime="20220704 22:22:38.904"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_CARD_ID}</arg>
<arg>${CARD.json()}[id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220704 22:22:38.906" level="INFO">${TEST_SUITE_CARD_ID} = 62c3682eef90435c2d8092f3</msg>
<status status="PASS" starttime="20220704 22:22:38.905" endtime="20220704 22:22:38.906"/>
</kw>
<status status="PASS" starttime="20220704 22:22:38.365" endtime="20220704 22:22:38.906"/>
</kw>
<status status="PASS" starttime="20220704 22:22:38.364" endtime="20220704 22:22:38.906"/>
</kw>
<test id="s1-s1-s3-t1" name="Verify A Checklist Can Be Created" line="14">
<kw name="Create A Checklist" library="Checklist">
<var>${response}</var>
<arg>name</arg>
<arg>TestChecklist</arg>
<arg>idCard=${TEST_SUITE_CARD_ID}</arg>
<doc>Creates a new checklist in the given card.
required_args: idCard
optional_args: name, pos, idChecklistSource
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>@{optional_args}</arg>
<arg>idCard</arg>
<arg>${idCard}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 22:22:38.909" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 22:22:38.909" endtime="20220704 22:22:38.909"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 22:22:38.910" endtime="20220704 22:22:38.910"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 22:22:38.911" level="INFO">${url} = checklists/</msg>
<status status="PASS" starttime="20220704 22:22:38.910" endtime="20220704 22:22:38.911"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 22:22:39.083" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 22:22:38.912" endtime="20220704 22:22:39.083"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 22:22:39.083" endtime="20220704 22:22:39.083"/>
</return>
<msg timestamp="20220704 22:22:39.084" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 22:22:38.908" endtime="20220704 22:22:39.084"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 22:22:39.084" endtime="20220704 22:22:39.084"/>
</return>
<msg timestamp="20220704 22:22:39.084" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 22:22:38.907" endtime="20220704 22:22:39.084"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${checklist_id}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 22:22:39.085" endtime="20220704 22:22:39.085"/>
</return>
<msg timestamp="20220704 22:22:39.086" level="INFO">${checklist_id} = 62c3682eadfc5420cd468021</msg>
<status status="PASS" starttime="20220704 22:22:39.084" endtime="20220704 22:22:39.086"/>
</kw>
<kw name="Get A Checklist" library="Checklist">
<var>${response}</var>
<arg>${checklist_id}</arg>
<doc>Gets the checklist with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 22:22:39.087" level="INFO">${url} = checklists/62c3682eadfc5420cd468021</msg>
<status status="PASS" starttime="20220704 22:22:39.087" endtime="20220704 22:22:39.087"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 22:22:39.193" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 22:22:39.088" endtime="20220704 22:22:39.193"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 22:22:39.194" endtime="20220704 22:22:39.194"/>
</return>
<msg timestamp="20220704 22:22:39.194" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 22:22:39.086" endtime="20220704 22:22:39.194"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 22:22:39.194" endtime="20220704 22:22:39.194"/>
</return>
<msg timestamp="20220704 22:22:39.195" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 22:22:39.086" endtime="20220704 22:22:39.195"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${checklist_name}</var>
<arg>${response}</arg>
<arg>name</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 22:22:39.195" endtime="20220704 22:22:39.195"/>
</return>
<msg timestamp="20220704 22:22:39.196" level="INFO">${checklist_name} = TestChecklist</msg>
<status status="PASS" starttime="20220704 22:22:39.195" endtime="20220704 22:22:39.196"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${checklist_name}</arg>
<arg>TestChecklist</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220704 22:22:39.196" endtime="20220704 22:22:39.197"/>
</kw>
<kw name="Delete A Checklist" library="Checklist" type="TEARDOWN">
<arg>${checklist_id}</arg>
<doc>Deletes the checklist with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 22:22:39.199" level="INFO">${url} = checklists/62c3682eadfc5420cd468021</msg>
<status status="PASS" starttime="20220704 22:22:39.198" endtime="20220704 22:22:39.199"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 22:22:39.355" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 22:22:39.199" endtime="20220704 22:22:39.355"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 22:22:39.355" endtime="20220704 22:22:39.355"/>
</return>
<msg timestamp="20220704 22:22:39.356" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 22:22:39.197" endtime="20220704 22:22:39.356"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 22:22:39.356" endtime="20220704 22:22:39.356"/>
</return>
<status status="PASS" starttime="20220704 22:22:39.197" endtime="20220704 22:22:39.356"/>
</kw>
<doc>Verify that a checklist can be created through API</doc>
<tag>api</tag>
<tag>checklist.create</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220704 22:22:38.906" endtime="20220704 22:22:39.356"/>
</test>
<test id="s1-s1-s3-t2" name="Verify A Checklist Can Be Deleted" line="24">
<kw name="Create A Checklist" library="Checklist">
<var>${response}</var>
<arg>name</arg>
<arg>TestChecklist</arg>
<arg>idCard=${TEST_SUITE_CARD_ID}</arg>
<doc>Creates a new checklist in the given card.
required_args: idCard
optional_args: name, pos, idChecklistSource
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>@{optional_args}</arg>
<arg>idCard</arg>
<arg>${idCard}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 22:22:39.360" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 22:22:39.359" endtime="20220704 22:22:39.360"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 22:22:39.360" endtime="20220704 22:22:39.360"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 22:22:39.361" level="INFO">${url} = checklists/</msg>
<status status="PASS" starttime="20220704 22:22:39.360" endtime="20220704 22:22:39.361"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 22:22:39.513" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 22:22:39.361" endtime="20220704 22:22:39.513"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 22:22:39.513" endtime="20220704 22:22:39.513"/>
</return>
<msg timestamp="20220704 22:22:39.514" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 22:22:39.359" endtime="20220704 22:22:39.514"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 22:22:39.514" endtime="20220704 22:22:39.514"/>
</return>
<msg timestamp="20220704 22:22:39.514" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 22:22:39.358" endtime="20220704 22:22:39.514"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${checklist_id}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 22:22:39.515" endtime="20220704 22:22:39.515"/>
</return>
<msg timestamp="20220704 22:22:39.517" level="INFO">${checklist_id} = 62c3682f5a21b2615fc0ad0b</msg>
<status status="PASS" starttime="20220704 22:22:39.515" endtime="20220704 22:22:39.517"/>
</kw>
<kw name="Delete A Checklist" library="Checklist">
<var>${response}</var>
<arg>${checklist_id}</arg>
<doc>Deletes the checklist with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 22:22:39.519" level="INFO">${url} = checklists/62c3682f5a21b2615fc0ad0b</msg>
<status status="PASS" starttime="20220704 22:22:39.518" endtime="20220704 22:22:39.519"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 22:22:39.674" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 22:22:39.519" endtime="20220704 22:22:39.674"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 22:22:39.674" endtime="20220704 22:22:39.674"/>
</return>
<msg timestamp="20220704 22:22:39.674" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 22:22:39.518" endtime="20220704 22:22:39.674"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 22:22:39.674" endtime="20220704 22:22:39.675"/>
</return>
<msg timestamp="20220704 22:22:39.675" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 22:22:39.517" endtime="20220704 22:22:39.675"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>delete</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220704 22:22:39.676" endtime="20220704 22:22:39.678"/>
</kw>
<status status="PASS" starttime="20220704 22:22:39.675" endtime="20220704 22:22:39.678"/>
</kw>
<kw name="Get A Checklist" library="Checklist">
<arg>${checklist_id}</arg>
<arg>status_code=404</arg>
<doc>Gets the checklist with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 22:22:39.679" level="INFO">${url} = checklists/62c3682f5a21b2615fc0ad0b</msg>
<status status="PASS" starttime="20220704 22:22:39.679" endtime="20220704 22:22:39.679"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 22:22:39.772" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220704 22:22:39.679" endtime="20220704 22:22:39.772"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 22:22:39.772" endtime="20220704 22:22:39.772"/>
</return>
<msg timestamp="20220704 22:22:39.772" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220704 22:22:39.678" endtime="20220704 22:22:39.772"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 22:22:39.772" endtime="20220704 22:22:39.772"/>
</return>
<status status="PASS" starttime="20220704 22:22:39.678" endtime="20220704 22:22:39.773"/>
</kw>
<doc>Verify that a checklist can be deleted through API</doc>
<tag>api</tag>
<tag>checklist.delete</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220704 22:22:39.357" endtime="20220704 22:22:39.773"/>
</test>
<test id="s1-s1-s3-t3" name="Verify A Checklist Can Be Updated" line="33">
<kw name="Create A Checklist" library="Checklist">
<var>${response}</var>
<arg>name</arg>
<arg>TestChecklist</arg>
<arg>idCard=${TEST_SUITE_CARD_ID}</arg>
<doc>Creates a new checklist in the given card.
required_args: idCard
optional_args: name, pos, idChecklistSource
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>@{optional_args}</arg>
<arg>idCard</arg>
<arg>${idCard}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 22:22:39.777" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 22:22:39.775" endtime="20220704 22:22:39.777"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 22:22:39.777" endtime="20220704 22:22:39.778"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 22:22:39.779" level="INFO">${url} = checklists/</msg>
<status status="PASS" starttime="20220704 22:22:39.778" endtime="20220704 22:22:39.779"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 22:22:39.939" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 22:22:39.779" endtime="20220704 22:22:39.939"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 22:22:39.939" endtime="20220704 22:22:39.939"/>
</return>
<msg timestamp="20220704 22:22:39.939" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 22:22:39.775" endtime="20220704 22:22:39.939"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 22:22:39.939" endtime="20220704 22:22:39.940"/>
</return>
<msg timestamp="20220704 22:22:39.940" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 22:22:39.774" endtime="20220704 22:22:39.940"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${checklist_id}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 22:22:39.940" endtime="20220704 22:22:39.940"/>
</return>
<msg timestamp="20220704 22:22:39.941" level="INFO">${checklist_id} = 62c3682f7ad2c43896217885</msg>
<status status="PASS" starttime="20220704 22:22:39.940" endtime="20220704 22:22:39.941"/>
</kw>
<kw name="Update A Checklist" library="Checklist">
<var>${response}</var>
<arg>${checklist_id}</arg>
<arg>name</arg>
<arg>TestChecklist2</arg>
<doc>Updates the checklist with the given ID
optional_args: name, pos
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<arg>status_code=${status_code}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 22:22:39.943" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 22:22:39.942" endtime="20220704 22:22:39.943"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 22:22:39.943" endtime="20220704 22:22:39.943"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 22:22:39.943" level="INFO">${url} = checklists/62c3682f7ad2c43896217885</msg>
<status status="PASS" starttime="20220704 22:22:39.943" endtime="20220704 22:22:39.943"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 22:22:40.080" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 22:22:39.944" endtime="20220704 22:22:40.080"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 22:22:40.080" endtime="20220704 22:22:40.080"/>
</return>
<msg timestamp="20220704 22:22:40.081" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 22:22:39.942" endtime="20220704 22:22:40.081"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 22:22:40.081" endtime="20220704 22:22:40.081"/>
</return>
<msg timestamp="20220704 22:22:40.081" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 22:22:39.941" endtime="20220704 22:22:40.081"/>
</kw>
<kw name="Get A Checklist" library="Checklist">
<var>${response}</var>
<arg>${checklist_id}</arg>
<doc>Gets the checklist with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 22:22:40.083" level="INFO">${url} = checklists/62c3682f7ad2c43896217885</msg>
<status status="PASS" starttime="20220704 22:22:40.082" endtime="20220704 22:22:40.083"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 22:22:40.191" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 22:22:40.083" endtime="20220704 22:22:40.191"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 22:22:40.191" endtime="20220704 22:22:40.192"/>
</return>
<msg timestamp="20220704 22:22:40.192" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 22:22:40.082" endtime="20220704 22:22:40.192"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 22:22:40.192" endtime="20220704 22:22:40.192"/>
</return>
<msg timestamp="20220704 22:22:40.192" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 22:22:40.081" endtime="20220704 22:22:40.192"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${checklist_name}</var>
<arg>${response}</arg>
<arg>name</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 22:22:40.193" endtime="20220704 22:22:40.193"/>
</return>
<msg timestamp="20220704 22:22:40.194" level="INFO">${checklist_name} = TestChecklist2</msg>
<status status="PASS" starttime="20220704 22:22:40.192" endtime="20220704 22:22:40.194"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${checklist_name}</arg>
<arg>TestChecklist2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220704 22:22:40.194" endtime="20220704 22:22:40.194"/>
</kw>
<kw name="Delete A Checklist" library="Checklist" type="TEARDOWN">
<arg>${checklist_id}</arg>
<doc>Deletes the checklist with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 22:22:40.205" level="INFO">${url} = checklists/62c3682f7ad2c43896217885</msg>
<status status="PASS" starttime="20220704 22:22:40.205" endtime="20220704 22:22:40.205"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 22:22:40.364" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 22:22:40.206" endtime="20220704 22:22:40.364"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 22:22:40.364" endtime="20220704 22:22:40.364"/>
</return>
<msg timestamp="20220704 22:22:40.364" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 22:22:40.204" endtime="20220704 22:22:40.364"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 22:22:40.364" endtime="20220704 22:22:40.364"/>
</return>
<status status="PASS" starttime="20220704 22:22:40.194" endtime="20220704 22:22:40.365"/>
</kw>
<doc>Verify that a checklist's name can be updated through API</doc>
<tag>api</tag>
<tag>checklist.update</tag>
<tag>regression</tag>
<status status="PASS" starttime="20220704 22:22:39.773" endtime="20220704 22:22:40.365"/>
</test>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Teardown Board</arg>
<arg>Delete All Sessions</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Teardown Board">
<doc>Delete the board created for this suite</doc>
<kw name="Delete A Board" library="Board">
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 22:22:40.367" level="INFO">${url} = boards/62c3682e0dc9785f24e47af9</msg>
<status status="PASS" starttime="20220704 22:22:40.367" endtime="20220704 22:22:40.368"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 22:22:40.789" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 22:22:40.368" endtime="20220704 22:22:40.790"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 22:22:40.790" endtime="20220704 22:22:40.790"/>
</return>
<msg timestamp="20220704 22:22:40.790" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 22:22:40.367" endtime="20220704 22:22:40.790"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 22:22:40.790" endtime="20220704 22:22:40.790"/>
</return>
<status status="PASS" starttime="20220704 22:22:40.366" endtime="20220704 22:22:40.790"/>
</kw>
<status status="PASS" starttime="20220704 22:22:40.366" endtime="20220704 22:22:40.791"/>
</kw>
<kw name="Delete All Sessions" library="request_own_library">
<status status="PASS" starttime="20220704 22:22:40.791" endtime="20220704 22:22:40.792"/>
</kw>
<status status="PASS" starttime="20220704 22:22:40.366" endtime="20220704 22:22:40.793"/>
</kw>
<doc>Example Test with Trello API Checklists</doc>
<status status="PASS" starttime="20220704 22:22:38.352" endtime="20220704 22:22:40.793"/>
</suite>
<suite id="s1-s1-s4" name="Trello Api Labels Tests" source="/trello/api/trello_api_labels_tests.robot">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Create Trello Session</arg>
<arg>Setup Board And List</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Create Trello Session" library="TrelloAPI">
<doc>Creates a Trello Session</doc>
<kw name="Create Session" library="request_own_library">
<arg>${API_BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<status status="PASS" starttime="20220704 22:22:40.804" endtime="20220704 22:22:40.805"/>
</kw>
<status status="PASS" starttime="20220704 22:22:40.804" endtime="20220704 22:22:40.805"/>
</kw>
<kw name="Setup Board And List">
<doc>Create a board and save its ID and its first list's ID</doc>
<kw name="Create A Board" library="Board">
<var>${BOARD}</var>
<arg>TestBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 22:22:40.806" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 22:22:40.806" endtime="20220704 22:22:40.806"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 22:22:40.806" endtime="20220704 22:22:40.807"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 22:22:40.808" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220704 22:22:40.807" endtime="20220704 22:22:40.808"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 22:22:41.097" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 22:22:40.808" endtime="20220704 22:22:41.097"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 22:22:41.097" endtime="20220704 22:22:41.097"/>
</return>
<msg timestamp="20220704 22:22:41.098" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 22:22:40.806" endtime="20220704 22:22:41.098"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 22:22:41.098" endtime="20220704 22:22:41.098"/>
</return>
<msg timestamp="20220704 22:22:41.098" level="INFO">${BOARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 22:22:40.805" endtime="20220704 22:22:41.098"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_BOARD_ID}</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220704 22:22:41.099" level="INFO">${TEST_SUITE_BOARD_ID} = 62c36830e17e34844987bb7e</msg>
<status status="PASS" starttime="20220704 22:22:41.098" endtime="20220704 22:22:41.099"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${LISTS}</var>
<arg>boards/${TEST_SUITE_BOARD_ID}/lists</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 22:22:41.213" level="INFO">${LISTS} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 22:22:41.100" endtime="20220704 22:22:41.213"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_LIST_ID}</arg>
<arg>${LISTS.json()}[0][id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220704 22:22:41.214" level="INFO">${TEST_SUITE_LIST_ID} = 62c36830e17e34844987bb85</msg>
<status status="PASS" starttime="20220704 22:22:41.213" endtime="20220704 22:22:41.214"/>
</kw>
<status status="PASS" starttime="20220704 22:22:40.805" endtime="20220704 22:22:41.215"/>
</kw>
<status status="PASS" starttime="20220704 22:22:40.804" endtime="20220704 22:22:41.215"/>
</kw>
<test id="s1-s1-s4-t1" name="Create and get label on board" line="14">
<kw name="Create A Label" library="Label">
<var>${response}</var>
<arg>name</arg>
<arg>label2</arg>
<arg>color</arg>
<arg>yellow</arg>
<doc>Creates a new label in the given board.
required_args: idBoard
optional_args: name, color
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>idBoard</arg>
<arg>${idBoard}</arg>
<arg>@{optional_args}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 22:22:41.218" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 22:22:41.217" endtime="20220704 22:22:41.218"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 22:22:41.218" endtime="20220704 22:22:41.218"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 22:22:41.219" level="INFO">${url} = labels/</msg>
<status status="PASS" starttime="20220704 22:22:41.218" endtime="20220704 22:22:41.219"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 22:22:41.350" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 22:22:41.219" endtime="20220704 22:22:41.350"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 22:22:41.350" endtime="20220704 22:22:41.350"/>
</return>
<msg timestamp="20220704 22:22:41.351" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 22:22:41.217" endtime="20220704 22:22:41.351"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 22:22:41.351" endtime="20220704 22:22:41.351"/>
</return>
<msg timestamp="20220704 22:22:41.351" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 22:22:41.216" endtime="20220704 22:22:41.351"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>label</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220704 22:22:41.352" endtime="20220704 22:22:41.354"/>
</kw>
<status status="PASS" starttime="20220704 22:22:41.351" endtime="20220704 22:22:41.354"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${LABEL_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 22:22:41.355" endtime="20220704 22:22:41.355"/>
</return>
<msg timestamp="20220704 22:22:41.356" level="INFO">${LABEL_ID} = 62c368315c9c1c8e0eccc007</msg>
<status status="PASS" starttime="20220704 22:22:41.354" endtime="20220704 22:22:41.356"/>
</kw>
<kw name="Get A Label" library="Label">
<var>${response}</var>
<arg>${LABEL_ID}</arg>
<doc>Gets the label with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 22:22:41.357" level="INFO">${url} = labels/62c368315c9c1c8e0eccc007</msg>
<status status="PASS" starttime="20220704 22:22:41.357" endtime="20220704 22:22:41.358"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 22:22:41.466" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 22:22:41.358" endtime="20220704 22:22:41.466"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 22:22:41.466" endtime="20220704 22:22:41.466"/>
</return>
<msg timestamp="20220704 22:22:41.466" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 22:22:41.356" endtime="20220704 22:22:41.466"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 22:22:41.466" endtime="20220704 22:22:41.466"/>
</return>
<msg timestamp="20220704 22:22:41.466" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 22:22:41.356" endtime="20220704 22:22:41.466"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${LABEL_COLOR}</var>
<arg>${response}</arg>
<arg>color</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 22:22:41.467" endtime="20220704 22:22:41.467"/>
</return>
<msg timestamp="20220704 22:22:41.468" level="INFO">${LABEL_COLOR} = yellow</msg>
<status status="PASS" starttime="20220704 22:22:41.467" endtime="20220704 22:22:41.468"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${LABEL_NAME}</var>
<arg>${response}</arg>
<arg>name</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 22:22:41.469" endtime="20220704 22:22:41.469"/>
</return>
<msg timestamp="20220704 22:22:41.469" level="INFO">${LABEL_NAME} = label2</msg>
<status status="PASS" starttime="20220704 22:22:41.468" endtime="20220704 22:22:41.469"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${LABEL_COLOR}</arg>
<arg>yellow</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220704 22:22:41.470" endtime="20220704 22:22:41.470"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${LABEL_NAME}</arg>
<arg>label2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220704 22:22:41.470" endtime="20220704 22:22:41.471"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Label</arg>
<arg>${LABEL_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Label" library="Label">
<arg>${LABEL_ID}</arg>
<doc>Deletes the label with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 22:22:41.473" level="INFO">${url} = labels/62c368315c9c1c8e0eccc007</msg>
<status status="PASS" starttime="20220704 22:22:41.472" endtime="20220704 22:22:41.473"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 22:22:41.622" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 22:22:41.473" endtime="20220704 22:22:41.622"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 22:22:41.622" endtime="20220704 22:22:41.622"/>
</return>
<msg timestamp="20220704 22:22:41.622" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 22:22:41.472" endtime="20220704 22:22:41.622"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 22:22:41.622" endtime="20220704 22:22:41.622"/>
</return>
<status status="PASS" starttime="20220704 22:22:41.471" endtime="20220704 22:22:41.622"/>
</kw>
<status status="PASS" starttime="20220704 22:22:41.471" endtime="20220704 22:22:41.622"/>
</kw>
<doc>Verify that a label can be created through API</doc>
<tag>api</tag>
<tag>label.create</tag>
<tag>label.get</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220704 22:22:41.215" endtime="20220704 22:22:41.622"/>
</test>
<test id="s1-s1-s4-t2" name="Update label on board" line="28">
<kw name="Create A Label" library="Label">
<var>${response}</var>
<arg>name</arg>
<arg>label2</arg>
<arg>color</arg>
<arg>yellow</arg>
<doc>Creates a new label in the given board.
required_args: idBoard
optional_args: name, color
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>idBoard</arg>
<arg>${idBoard}</arg>
<arg>@{optional_args}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 22:22:41.625" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 22:22:41.625" endtime="20220704 22:22:41.625"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 22:22:41.625" endtime="20220704 22:22:41.626"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 22:22:41.626" level="INFO">${url} = labels/</msg>
<status status="PASS" starttime="20220704 22:22:41.626" endtime="20220704 22:22:41.626"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 22:22:41.770" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 22:22:41.627" endtime="20220704 22:22:41.770"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 22:22:41.770" endtime="20220704 22:22:41.770"/>
</return>
<msg timestamp="20220704 22:22:41.770" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 22:22:41.624" endtime="20220704 22:22:41.770"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 22:22:41.770" endtime="20220704 22:22:41.770"/>
</return>
<msg timestamp="20220704 22:22:41.771" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 22:22:41.624" endtime="20220704 22:22:41.771"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>label</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220704 22:22:41.771" endtime="20220704 22:22:41.773"/>
</kw>
<status status="PASS" starttime="20220704 22:22:41.771" endtime="20220704 22:22:41.773"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${LABEL_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 22:22:41.774" endtime="20220704 22:22:41.774"/>
</return>
<msg timestamp="20220704 22:22:41.775" level="INFO">${LABEL_ID} = 62c36831fc5a265f6661cb83</msg>
<status status="PASS" starttime="20220704 22:22:41.774" endtime="20220704 22:22:41.775"/>
</kw>
<kw name="Update A Label" library="Label">
<var>${new_response}</var>
<arg>${LABEL_ID}</arg>
<arg>name</arg>
<arg>label3</arg>
<arg>color</arg>
<arg>orange</arg>
<doc>Updates the label with the given ID
optional_args: name, color
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 22:22:41.777" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 22:22:41.777" endtime="20220704 22:22:41.777"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 22:22:41.777" endtime="20220704 22:22:41.777"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 22:22:41.778" level="INFO">${url} = labels/62c36831fc5a265f6661cb83</msg>
<status status="PASS" starttime="20220704 22:22:41.777" endtime="20220704 22:22:41.778"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 22:22:41.926" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 22:22:41.778" endtime="20220704 22:22:41.926"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 22:22:41.926" endtime="20220704 22:22:41.927"/>
</return>
<msg timestamp="20220704 22:22:41.927" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 22:22:41.776" endtime="20220704 22:22:41.927"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 22:22:41.927" endtime="20220704 22:22:41.927"/>
</return>
<msg timestamp="20220704 22:22:41.927" level="INFO">${new_response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 22:22:41.775" endtime="20220704 22:22:41.927"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${NEW_LABEL_COLOR}</var>
<arg>${new_response}</arg>
<arg>color</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 22:22:41.928" endtime="20220704 22:22:41.928"/>
</return>
<msg timestamp="20220704 22:22:41.929" level="INFO">${NEW_LABEL_COLOR} = orange</msg>
<status status="PASS" starttime="20220704 22:22:41.927" endtime="20220704 22:22:41.929"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${NEW_LABEL_NAME}</var>
<arg>${new_response}</arg>
<arg>name</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 22:22:41.929" endtime="20220704 22:22:41.929"/>
</return>
<msg timestamp="20220704 22:22:41.930" level="INFO">${NEW_LABEL_NAME} = label3</msg>
<status status="PASS" starttime="20220704 22:22:41.929" endtime="20220704 22:22:41.930"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${NEW_LABEL_COLOR}</arg>
<arg>orange</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220704 22:22:41.930" endtime="20220704 22:22:41.931"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${NEW_LABEL_NAME}</arg>
<arg>label3</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220704 22:22:41.931" endtime="20220704 22:22:41.931"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Label</arg>
<arg>${LABEL_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Label" library="Label">
<arg>${LABEL_ID}</arg>
<doc>Deletes the label with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 22:22:41.933" level="INFO">${url} = labels/62c36831fc5a265f6661cb83</msg>
<status status="PASS" starttime="20220704 22:22:41.933" endtime="20220704 22:22:41.933"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 22:22:42.096" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 22:22:41.933" endtime="20220704 22:22:42.096"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 22:22:42.096" endtime="20220704 22:22:42.096"/>
</return>
<msg timestamp="20220704 22:22:42.097" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 22:22:41.932" endtime="20220704 22:22:42.097"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 22:22:42.097" endtime="20220704 22:22:42.097"/>
</return>
<status status="PASS" starttime="20220704 22:22:41.932" endtime="20220704 22:22:42.097"/>
</kw>
<status status="PASS" starttime="20220704 22:22:41.931" endtime="20220704 22:22:42.097"/>
</kw>
<doc>Verify that a label's name and color can be updated through API</doc>
<tag>api</tag>
<tag>label.update</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220704 22:22:41.623" endtime="20220704 22:22:42.097"/>
</test>
<test id="s1-s1-s4-t3" name="Delete label on board" line="41">
<kw name="Create A Label" library="Label">
<var>${response}</var>
<arg>name</arg>
<arg>label2</arg>
<arg>color</arg>
<arg>yellow</arg>
<doc>Creates a new label in the given board.
required_args: idBoard
optional_args: name, color
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>idBoard</arg>
<arg>${idBoard}</arg>
<arg>@{optional_args}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 22:22:42.100" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 22:22:42.100" endtime="20220704 22:22:42.100"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 22:22:42.100" endtime="20220704 22:22:42.100"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 22:22:42.101" level="INFO">${url} = labels/</msg>
<status status="PASS" starttime="20220704 22:22:42.100" endtime="20220704 22:22:42.101"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 22:22:42.241" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 22:22:42.101" endtime="20220704 22:22:42.242"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 22:22:42.242" endtime="20220704 22:22:42.242"/>
</return>
<msg timestamp="20220704 22:22:42.242" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 22:22:42.099" endtime="20220704 22:22:42.242"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 22:22:42.242" endtime="20220704 22:22:42.242"/>
</return>
<msg timestamp="20220704 22:22:42.242" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 22:22:42.098" endtime="20220704 22:22:42.242"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${LABEL_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 22:22:42.243" endtime="20220704 22:22:42.243"/>
</return>
<msg timestamp="20220704 22:22:42.243" level="INFO">${LABEL_ID} = 62c3683216f3745a12cdde08</msg>
<status status="PASS" starttime="20220704 22:22:42.242" endtime="20220704 22:22:42.243"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Label</arg>
<arg>${LABEL_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Label" library="Label">
<arg>${LABEL_ID}</arg>
<doc>Deletes the label with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 22:22:42.245" level="INFO">${url} = labels/62c3683216f3745a12cdde08</msg>
<status status="PASS" starttime="20220704 22:22:42.245" endtime="20220704 22:22:42.245"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 22:22:42.411" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 22:22:42.245" endtime="20220704 22:22:42.411"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 22:22:42.411" endtime="20220704 22:22:42.411"/>
</return>
<msg timestamp="20220704 22:22:42.411" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 22:22:42.244" endtime="20220704 22:22:42.411"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 22:22:42.411" endtime="20220704 22:22:42.411"/>
</return>
<status status="PASS" starttime="20220704 22:22:42.244" endtime="20220704 22:22:42.412"/>
</kw>
<status status="PASS" starttime="20220704 22:22:42.244" endtime="20220704 22:22:42.412"/>
</kw>
<kw name="Get A Label" library="Label">
<arg>${LABEL_ID}</arg>
<arg>status_code=404</arg>
<doc>Gets the label with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 22:22:42.413" level="INFO">${url} = labels/62c3683216f3745a12cdde08</msg>
<status status="PASS" starttime="20220704 22:22:42.413" endtime="20220704 22:22:42.413"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 22:22:42.506" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220704 22:22:42.413" endtime="20220704 22:22:42.506"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 22:22:42.506" endtime="20220704 22:22:42.506"/>
</return>
<msg timestamp="20220704 22:22:42.506" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220704 22:22:42.412" endtime="20220704 22:22:42.506"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 22:22:42.506" endtime="20220704 22:22:42.506"/>
</return>
<status status="PASS" starttime="20220704 22:22:42.412" endtime="20220704 22:22:42.506"/>
</kw>
<doc>Verify that a label can be deleted through API</doc>
<tag>api</tag>
<tag>label.delete</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220704 22:22:42.098" endtime="20220704 22:22:42.507"/>
</test>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Teardown Board</arg>
<arg>Delete All Sessions</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Teardown Board">
<doc>Delete the board created for this session.</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 22:22:42.509" level="INFO">${url} = boards/62c36830e17e34844987bb7e</msg>
<status status="PASS" starttime="20220704 22:22:42.509" endtime="20220704 22:22:42.509"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 22:22:42.891" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 22:22:42.510" endtime="20220704 22:22:42.891"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 22:22:42.891" endtime="20220704 22:22:42.891"/>
</return>
<msg timestamp="20220704 22:22:42.891" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 22:22:42.508" endtime="20220704 22:22:42.891"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 22:22:42.891" endtime="20220704 22:22:42.891"/>
</return>
<status status="PASS" starttime="20220704 22:22:42.508" endtime="20220704 22:22:42.891"/>
</kw>
<status status="PASS" starttime="20220704 22:22:42.508" endtime="20220704 22:22:42.891"/>
</kw>
<status status="PASS" starttime="20220704 22:22:42.508" endtime="20220704 22:22:42.892"/>
</kw>
<kw name="Delete All Sessions" library="request_own_library">
<status status="PASS" starttime="20220704 22:22:42.892" endtime="20220704 22:22:42.893"/>
</kw>
<status status="PASS" starttime="20220704 22:22:42.507" endtime="20220704 22:22:42.893"/>
</kw>
<doc>Example Test with Trello API Cards</doc>
<status status="PASS" starttime="20220704 22:22:40.794" endtime="20220704 22:22:42.893"/>
</suite>
<suite id="s1-s1-s5" name="Trello Api Lists Tests" source="/trello/api/trello_api_lists_tests.robot">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Create Trello Session</arg>
<arg>Setup Board</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Create Trello Session" library="TrelloAPI">
<doc>Creates a Trello Session</doc>
<kw name="Create Session" library="request_own_library">
<arg>${API_BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<status status="PASS" starttime="20220704 22:22:42.905" endtime="20220704 22:22:42.905"/>
</kw>
<status status="PASS" starttime="20220704 22:22:42.905" endtime="20220704 22:22:42.905"/>
</kw>
<kw name="Setup Board">
<doc>Create a board and save it's id for the suite</doc>
<kw name="Create A Board" library="Board">
<var>${BOARD}</var>
<arg>TestBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 22:22:42.907" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 22:22:42.906" endtime="20220704 22:22:42.907"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 22:22:42.907" endtime="20220704 22:22:42.907"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 22:22:42.908" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220704 22:22:42.907" endtime="20220704 22:22:42.908"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 22:22:43.127" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 22:22:42.908" endtime="20220704 22:22:43.127"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 22:22:43.127" endtime="20220704 22:22:43.127"/>
</return>
<msg timestamp="20220704 22:22:43.128" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 22:22:42.906" endtime="20220704 22:22:43.128"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 22:22:43.128" endtime="20220704 22:22:43.128"/>
</return>
<msg timestamp="20220704 22:22:43.128" level="INFO">${BOARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 22:22:42.906" endtime="20220704 22:22:43.128"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Set Suite Variable</arg>
<arg>\${TEST_SUITE_BOARD_ID}</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_BOARD_ID}</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220704 22:22:43.129" level="INFO">${TEST_SUITE_BOARD_ID} = 62c368339843e15e677958fb</msg>
<status status="PASS" starttime="20220704 22:22:43.129" endtime="20220704 22:22:43.129"/>
</kw>
<status status="PASS" starttime="20220704 22:22:43.128" endtime="20220704 22:22:43.129"/>
</kw>
<status status="PASS" starttime="20220704 22:22:42.905" endtime="20220704 22:22:43.130"/>
</kw>
<status status="PASS" starttime="20220704 22:22:42.904" endtime="20220704 22:22:43.130"/>
</kw>
<test id="s1-s1-s5-t1" name="CREATE a list" line="13">
<kw name="Create A List" library="List">
<var>${response}</var>
<arg>NewList</arg>
<doc>Creates a new List
board id
name the list will have
optional_args: idListSource, pos, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>list</arg>
<arg>name</arg>
<arg>${name}</arg>
<arg>idBoard</arg>
<arg>${idBoard}</arg>
<arg>@{optional_args}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 22:22:43.132" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 22:22:43.132" endtime="20220704 22:22:43.132"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 22:22:43.132" endtime="20220704 22:22:43.133"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 22:22:43.133" level="INFO">${url} = lists/</msg>
<status status="PASS" starttime="20220704 22:22:43.133" endtime="20220704 22:22:43.134"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 22:22:43.280" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 22:22:43.134" endtime="20220704 22:22:43.280"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 22:22:43.280" endtime="20220704 22:22:43.280"/>
</return>
<msg timestamp="20220704 22:22:43.280" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 22:22:43.131" endtime="20220704 22:22:43.280"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 22:22:43.281" endtime="20220704 22:22:43.281"/>
</return>
<msg timestamp="20220704 22:22:43.281" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 22:22:43.131" endtime="20220704 22:22:43.281"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>list</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220704 22:22:43.282" endtime="20220704 22:22:43.284"/>
</kw>
<status status="PASS" starttime="20220704 22:22:43.281" endtime="20220704 22:22:43.284"/>
</kw>
<doc>Verify that a list can be created through API</doc>
<tag>api</tag>
<tag>list.create</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220704 22:22:43.130" endtime="20220704 22:22:43.284"/>
</test>
<test id="s1-s1-s5-t2" name="UPDATE a list" line="19">
<kw name="Create A List" library="List">
<var>${response}</var>
<arg>NewList</arg>
<doc>Creates a new List
board id
name the list will have
optional_args: idListSource, pos, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>list</arg>
<arg>name</arg>
<arg>${name}</arg>
<arg>idBoard</arg>
<arg>${idBoard}</arg>
<arg>@{optional_args}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 22:22:43.287" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 22:22:43.287" endtime="20220704 22:22:43.287"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 22:22:43.287" endtime="20220704 22:22:43.287"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 22:22:43.288" level="INFO">${url} = lists/</msg>
<status status="PASS" starttime="20220704 22:22:43.288" endtime="20220704 22:22:43.288"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 22:22:43.434" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 22:22:43.289" endtime="20220704 22:22:43.434"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 22:22:43.435" endtime="20220704 22:22:43.435"/>
</return>
<msg timestamp="20220704 22:22:43.435" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 22:22:43.286" endtime="20220704 22:22:43.435"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 22:22:43.435" endtime="20220704 22:22:43.435"/>
</return>
<msg timestamp="20220704 22:22:43.435" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 22:22:43.286" endtime="20220704 22:22:43.435"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>list</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220704 22:22:43.436" endtime="20220704 22:22:43.438"/>
</kw>
<status status="PASS" starttime="20220704 22:22:43.435" endtime="20220704 22:22:43.438"/>
</kw>
<kw name="Update A List" library="List">
<arg>${response.json()}[id]</arg>
<arg>name</arg>
<arg>NewName</arg>
<doc>Updates the board with the given ID
optional_args: name, idListSource, pos, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>list</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 22:22:43.440" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 22:22:43.439" endtime="20220704 22:22:43.440"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 22:22:43.440" endtime="20220704 22:22:43.440"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 22:22:43.441" level="INFO">${url} = lists/62c36833ac3bdb84669fd37b</msg>
<status status="PASS" starttime="20220704 22:22:43.440" endtime="20220704 22:22:43.441"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 22:22:43.567" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 22:22:43.441" endtime="20220704 22:22:43.567"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 22:22:43.567" endtime="20220704 22:22:43.567"/>
</return>
<msg timestamp="20220704 22:22:43.567" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 22:22:43.439" endtime="20220704 22:22:43.567"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 22:22:43.567" endtime="20220704 22:22:43.567"/>
</return>
<status status="PASS" starttime="20220704 22:22:43.438" endtime="20220704 22:22:43.568"/>
</kw>
<kw name="Get A List" library="List">
<var>${new_response}</var>
<arg>${response.json()}[id]</arg>
<doc>Gets the List with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>list</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 22:22:43.570" level="INFO">${url} = lists/62c36833ac3bdb84669fd37b</msg>
<status status="PASS" starttime="20220704 22:22:43.569" endtime="20220704 22:22:43.570"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 22:22:43.848" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 22:22:43.570" endtime="20220704 22:22:43.848"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 22:22:43.848" endtime="20220704 22:22:43.848"/>
</return>
<msg timestamp="20220704 22:22:43.849" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 22:22:43.569" endtime="20220704 22:22:43.849"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 22:22:43.849" endtime="20220704 22:22:43.849"/>
</return>
<msg timestamp="20220704 22:22:43.849" level="INFO">${new_response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 22:22:43.568" endtime="20220704 22:22:43.849"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${new_response}</arg>
<arg>list</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220704 22:22:43.850" endtime="20220704 22:22:43.852"/>
</kw>
<status status="PASS" starttime="20220704 22:22:43.849" endtime="20220704 22:22:43.852"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${new_response.json()}[name]</arg>
<arg>NewName</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220704 22:22:43.852" endtime="20220704 22:22:43.852"/>
</kw>
<doc>Verify that a lists name can be updated through API</doc>
<tag>api</tag>
<tag>list.update</tag>
<tag>regression</tag>
<status status="PASS" starttime="20220704 22:22:43.285" endtime="20220704 22:22:43.853"/>
</test>
<test id="s1-s1-s5-t3" name="ARCHIVE A list" line="29">
<kw name="Create A List" library="List">
<var>${response}</var>
<arg>NewList</arg>
<doc>Creates a new List
board id
name the list will have
optional_args: idListSource, pos, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>list</arg>
<arg>name</arg>
<arg>${name}</arg>
<arg>idBoard</arg>
<arg>${idBoard}</arg>
<arg>@{optional_args}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 22:22:43.855" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 22:22:43.855" endtime="20220704 22:22:43.855"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 22:22:43.855" endtime="20220704 22:22:43.857"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 22:22:43.858" level="INFO">${url} = lists/</msg>
<status status="PASS" starttime="20220704 22:22:43.857" endtime="20220704 22:22:43.858"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 22:22:44.012" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 22:22:43.858" endtime="20220704 22:22:44.012"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 22:22:44.012" endtime="20220704 22:22:44.012"/>
</return>
<msg timestamp="20220704 22:22:44.012" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 22:22:43.854" endtime="20220704 22:22:44.012"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 22:22:44.012" endtime="20220704 22:22:44.012"/>
</return>
<msg timestamp="20220704 22:22:44.013" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 22:22:43.854" endtime="20220704 22:22:44.013"/>
</kw>
<kw name="Archive A List" library="List">
<arg>${response.json()}[id]</arg>
<doc>Deletes the list with the given ID</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>archive_list</arg>
<arg>${id}</arg>
<arg>value</arg>
<arg>true</arg>
<arg>status_code=${status_code}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 22:22:44.015" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 22:22:44.014" endtime="20220704 22:22:44.015"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 22:22:44.015" endtime="20220704 22:22:44.015"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 22:22:44.016" level="INFO">${url} = lists/62c368330f457d860dde0eb7/closed</msg>
<status status="PASS" starttime="20220704 22:22:44.015" endtime="20220704 22:22:44.016"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 22:22:44.151" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 22:22:44.016" endtime="20220704 22:22:44.151"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 22:22:44.151" endtime="20220704 22:22:44.151"/>
</return>
<msg timestamp="20220704 22:22:44.151" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 22:22:44.014" endtime="20220704 22:22:44.151"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 22:22:44.151" endtime="20220704 22:22:44.151"/>
</return>
<status status="PASS" starttime="20220704 22:22:44.013" endtime="20220704 22:22:44.152"/>
</kw>
<kw name="Get A List" library="List">
<var>${new_response}</var>
<arg>${response.json()}[id]</arg>
<doc>Gets the List with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>list</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 22:22:44.154" level="INFO">${url} = lists/62c368330f457d860dde0eb7</msg>
<status status="PASS" starttime="20220704 22:22:44.153" endtime="20220704 22:22:44.154"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 22:22:44.253" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 22:22:44.154" endtime="20220704 22:22:44.253"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 22:22:44.253" endtime="20220704 22:22:44.253"/>
</return>
<msg timestamp="20220704 22:22:44.253" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 22:22:44.153" endtime="20220704 22:22:44.253"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 22:22:44.253" endtime="20220704 22:22:44.253"/>
</return>
<msg timestamp="20220704 22:22:44.254" level="INFO">${new_response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 22:22:44.152" endtime="20220704 22:22:44.254"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${new_response.json()}[closed]</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220704 22:22:44.254" endtime="20220704 22:22:44.254"/>
</kw>
<doc>Verify that a list can be archived through API</doc>
<tag>api</tag>
<tag>list.archive</tag>
<tag>regression</tag>
<status status="PASS" starttime="20220704 22:22:43.853" endtime="20220704 22:22:44.255"/>
</test>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Teardown Board</arg>
<arg>Delete All Sessions</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Teardown Board">
<doc>Delete the board created for this suite.</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 22:22:44.258" level="INFO">${url} = boards/62c368339843e15e677958fb</msg>
<status status="PASS" starttime="20220704 22:22:44.257" endtime="20220704 22:22:44.258"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 22:22:44.749" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 22:22:44.258" endtime="20220704 22:22:44.749"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 22:22:44.749" endtime="20220704 22:22:44.749"/>
</return>
<msg timestamp="20220704 22:22:44.750" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 22:22:44.257" endtime="20220704 22:22:44.750"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 22:22:44.750" endtime="20220704 22:22:44.750"/>
</return>
<status status="PASS" starttime="20220704 22:22:44.256" endtime="20220704 22:22:44.750"/>
</kw>
<status status="PASS" starttime="20220704 22:22:44.256" endtime="20220704 22:22:44.750"/>
</kw>
<status status="PASS" starttime="20220704 22:22:44.256" endtime="20220704 22:22:44.750"/>
</kw>
<kw name="Delete All Sessions" library="request_own_library">
<status status="PASS" starttime="20220704 22:22:44.750" endtime="20220704 22:22:44.751"/>
</kw>
<status status="PASS" starttime="20220704 22:22:44.255" endtime="20220704 22:22:44.751"/>
</kw>
<doc>Example Test with Trello API lists</doc>
<status status="PASS" starttime="20220704 22:22:42.895" endtime="20220704 22:22:44.751"/>
</suite>
<status status="PASS" starttime="20220704 22:22:30.681" endtime="20220704 22:22:44.756"/>
</suite>
<status status="PASS" starttime="20220704 22:22:30.657" endtime="20220704 22:22:44.759"/>
</suite>
<statistics>
<total>
<stat pass="18" fail="0" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="18" fail="0" skip="0">api</stat>
<stat pass="1" fail="0" skip="0">board.create</stat>
<stat pass="1" fail="0" skip="0">board.delete</stat>
<stat pass="1" fail="0" skip="0">board.get</stat>
<stat pass="2" fail="0" skip="0">board.update</stat>
<stat pass="1" fail="0" skip="0">card.close</stat>
<stat pass="1" fail="0" skip="0">card.create</stat>
<stat pass="1" fail="0" skip="0">card.delete</stat>
<stat pass="1" fail="0" skip="0">card.update</stat>
<stat pass="1" fail="0" skip="0">checklist.create</stat>
<stat pass="1" fail="0" skip="0">checklist.delete</stat>
<stat pass="1" fail="0" skip="0">checklist.update</stat>
<stat pass="1" fail="0" skip="0">label.create</stat>
<stat pass="1" fail="0" skip="0">label.delete</stat>
<stat pass="1" fail="0" skip="0">label.get</stat>
<stat pass="1" fail="0" skip="0">label.update</stat>
<stat pass="1" fail="0" skip="0">list.archive</stat>
<stat pass="1" fail="0" skip="0">list.create</stat>
<stat pass="1" fail="0" skip="0">list.update</stat>
<stat pass="5" fail="0" skip="0">regression</stat>
<stat pass="13" fail="0" skip="0">smoke</stat>
</tag>
<suite>
<stat pass="18" fail="0" skip="0" id="s1" name="Trello">Trello</stat>
<stat pass="18" fail="0" skip="0" id="s1-s1" name="Api">Trello.Api</stat>
<stat pass="5" fail="0" skip="0" id="s1-s1-s1" name="Trello Api Boards Tests">Trello.Api.Trello Api Boards Tests</stat>
<stat pass="4" fail="0" skip="0" id="s1-s1-s2" name="Trello Api Cards Tests">Trello.Api.Trello Api Cards Tests</stat>
<stat pass="3" fail="0" skip="0" id="s1-s1-s3" name="Trello Api Checklists Tests">Trello.Api.Trello Api Checklists Tests</stat>
<stat pass="3" fail="0" skip="0" id="s1-s1-s4" name="Trello Api Labels Tests">Trello.Api.Trello Api Labels Tests</stat>
<stat pass="3" fail="0" skip="0" id="s1-s1-s5" name="Trello Api Lists Tests">Trello.Api.Trello Api Lists Tests</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
