<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 5.0.1 (Python 3.10.5 on linux)" generated="20220705 05:26:13.686" rpa="false" schemaversion="3">
<suite id="s1" name="Trello" source="/trello">
<suite id="s1-s1" name="Api" source="/trello/api">
<suite id="s1-s1-s1" name="Trello Api Boards Tests" source="/trello/api/trello_api_boards_tests.robot">
<kw name="Create Trello Session" library="TrelloAPI" type="SETUP">
<doc>Creates a Trello Session</doc>
<kw name="Create Session" library="request_own_library">
<arg>${API_BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<status status="PASS" starttime="20220705 05:26:13.840" endtime="20220705 05:26:13.841"/>
</kw>
<status status="PASS" starttime="20220705 05:26:13.839" endtime="20220705 05:26:13.841"/>
</kw>
<test id="s1-s1-s1-t1" name="CREATE a board" line="9">
<kw name="Create A Board" library="Board">
<var>${response}</var>
<arg>NewBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 05:26:13.843" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 05:26:13.843" endtime="20220705 05:26:13.843"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 05:26:13.844" endtime="20220705 05:26:13.844"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 05:26:13.845" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220705 05:26:13.844" endtime="20220705 05:26:13.845"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 05:26:14.140" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 05:26:13.845" endtime="20220705 05:26:14.140"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 05:26:14.141" endtime="20220705 05:26:14.141"/>
</return>
<msg timestamp="20220705 05:26:14.141" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 05:26:13.843" endtime="20220705 05:26:14.141"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 05:26:14.141" endtime="20220705 05:26:14.141"/>
</return>
<msg timestamp="20220705 05:26:14.141" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 05:26:13.842" endtime="20220705 05:26:14.141"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>board</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 05:26:14.142" endtime="20220705 05:26:14.147"/>
</kw>
<status status="PASS" starttime="20220705 05:26:14.141" endtime="20220705 05:26:14.148"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${response.json()}[id]</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${response.json()}[id]</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 05:26:14.150" level="INFO">${url} = boards/62c3cb7532fcd32b51a48a89</msg>
<status status="PASS" starttime="20220705 05:26:14.150" endtime="20220705 05:26:14.150"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 05:26:14.551" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 05:26:14.150" endtime="20220705 05:26:14.552"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 05:26:14.552" endtime="20220705 05:26:14.552"/>
</return>
<msg timestamp="20220705 05:26:14.552" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 05:26:14.149" endtime="20220705 05:26:14.552"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 05:26:14.552" endtime="20220705 05:26:14.552"/>
</return>
<status status="PASS" starttime="20220705 05:26:14.148" endtime="20220705 05:26:14.552"/>
</kw>
<status status="PASS" starttime="20220705 05:26:14.148" endtime="20220705 05:26:14.553"/>
</kw>
<doc>Verify that a board can be create through API</doc>
<tag>api</tag>
<tag>board.create</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220705 05:26:13.841" endtime="20220705 05:26:14.553"/>
</test>
<test id="s1-s1-s1-t2" name="UPDATE a Board's name" line="16">
<kw name="Create A Board" library="Board">
<var>${response}</var>
<arg>NewBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 05:26:14.556" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 05:26:14.556" endtime="20220705 05:26:14.556"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 05:26:14.557" endtime="20220705 05:26:14.557"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 05:26:14.558" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220705 05:26:14.557" endtime="20220705 05:26:14.558"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 05:26:14.811" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 05:26:14.558" endtime="20220705 05:26:14.811"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 05:26:14.812" endtime="20220705 05:26:14.812"/>
</return>
<msg timestamp="20220705 05:26:14.812" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 05:26:14.555" endtime="20220705 05:26:14.812"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 05:26:14.812" endtime="20220705 05:26:14.812"/>
</return>
<msg timestamp="20220705 05:26:14.812" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 05:26:14.554" endtime="20220705 05:26:14.812"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>board</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 05:26:14.813" endtime="20220705 05:26:14.818"/>
</kw>
<status status="PASS" starttime="20220705 05:26:14.813" endtime="20220705 05:26:14.818"/>
</kw>
<kw name="Update A Board" library="Board">
<arg>${response.json()}[id]</arg>
<arg>name</arg>
<arg>NewName</arg>
<doc>Updates the board with the given ID
optional_args: name, desc, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 05:26:14.821" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 05:26:14.820" endtime="20220705 05:26:14.821"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 05:26:14.821" endtime="20220705 05:26:14.821"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 05:26:14.822" level="INFO">${url} = boards/62c3cb763886bd2c64c2f997</msg>
<status status="PASS" starttime="20220705 05:26:14.821" endtime="20220705 05:26:14.822"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 05:26:14.994" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 05:26:14.822" endtime="20220705 05:26:14.994"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 05:26:14.994" endtime="20220705 05:26:14.994"/>
</return>
<msg timestamp="20220705 05:26:14.994" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 05:26:14.820" endtime="20220705 05:26:14.994"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 05:26:14.995" endtime="20220705 05:26:14.995"/>
</return>
<status status="PASS" starttime="20220705 05:26:14.819" endtime="20220705 05:26:14.995"/>
</kw>
<kw name="Get A Board" library="Board">
<var>${new_response}</var>
<arg>${response.json()}[id]</arg>
<doc>Gets the Board with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 05:26:14.997" level="INFO">${url} = boards/62c3cb763886bd2c64c2f997</msg>
<status status="PASS" starttime="20220705 05:26:14.997" endtime="20220705 05:26:14.997"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 05:26:15.110" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 05:26:14.997" endtime="20220705 05:26:15.110"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 05:26:15.110" endtime="20220705 05:26:15.111"/>
</return>
<msg timestamp="20220705 05:26:15.111" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 05:26:14.996" endtime="20220705 05:26:15.111"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 05:26:15.111" endtime="20220705 05:26:15.111"/>
</return>
<msg timestamp="20220705 05:26:15.111" level="INFO">${new_response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 05:26:14.995" endtime="20220705 05:26:15.111"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${new_response}</arg>
<arg>board</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 05:26:15.112" endtime="20220705 05:26:15.117"/>
</kw>
<status status="PASS" starttime="20220705 05:26:15.111" endtime="20220705 05:26:15.117"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${new_response.json()}[name]</arg>
<arg>NewName</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220705 05:26:15.117" endtime="20220705 05:26:15.118"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${response.json()}[id]</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${response.json()}[id]</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 05:26:15.121" level="INFO">${url} = boards/62c3cb763886bd2c64c2f997</msg>
<status status="PASS" starttime="20220705 05:26:15.121" endtime="20220705 05:26:15.121"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 05:26:15.520" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 05:26:15.121" endtime="20220705 05:26:15.520"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 05:26:15.520" endtime="20220705 05:26:15.521"/>
</return>
<msg timestamp="20220705 05:26:15.521" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 05:26:15.120" endtime="20220705 05:26:15.521"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 05:26:15.521" endtime="20220705 05:26:15.521"/>
</return>
<status status="PASS" starttime="20220705 05:26:15.119" endtime="20220705 05:26:15.521"/>
</kw>
<status status="PASS" starttime="20220705 05:26:15.119" endtime="20220705 05:26:15.521"/>
</kw>
<doc>Verify that a board's name can be updated through API</doc>
<tag>api</tag>
<tag>board.update</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220705 05:26:14.553" endtime="20220705 05:26:15.521"/>
</test>
<test id="s1-s1-s1-t3" name="DELETE A Board" line="27">
<kw name="Create A Board" library="Board">
<var>${response}</var>
<arg>NewBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 05:26:15.525" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 05:26:15.524" endtime="20220705 05:26:15.525"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 05:26:15.525" endtime="20220705 05:26:15.525"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 05:26:15.526" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220705 05:26:15.525" endtime="20220705 05:26:15.526"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 05:26:15.751" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 05:26:15.526" endtime="20220705 05:26:15.752"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 05:26:15.752" endtime="20220705 05:26:15.752"/>
</return>
<msg timestamp="20220705 05:26:15.752" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 05:26:15.524" endtime="20220705 05:26:15.752"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 05:26:15.752" endtime="20220705 05:26:15.752"/>
</return>
<msg timestamp="20220705 05:26:15.753" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 05:26:15.523" endtime="20220705 05:26:15.753"/>
</kw>
<kw name="Delete A Board" library="Board">
<arg>${response.json()}[id]</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 05:26:15.755" level="INFO">${url} = boards/62c3cb77edf5011ff81a565b</msg>
<status status="PASS" starttime="20220705 05:26:15.755" endtime="20220705 05:26:15.755"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 05:26:16.147" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 05:26:15.756" endtime="20220705 05:26:16.147"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 05:26:16.147" endtime="20220705 05:26:16.147"/>
</return>
<msg timestamp="20220705 05:26:16.147" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 05:26:15.754" endtime="20220705 05:26:16.148"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 05:26:16.148" endtime="20220705 05:26:16.148"/>
</return>
<status status="PASS" starttime="20220705 05:26:15.753" endtime="20220705 05:26:16.148"/>
</kw>
<kw name="Get A Board" library="Board">
<arg>${response.json()}[id]</arg>
<arg>status_code=404</arg>
<doc>Gets the Board with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 05:26:16.150" level="INFO">${url} = boards/62c3cb77edf5011ff81a565b</msg>
<status status="PASS" starttime="20220705 05:26:16.150" endtime="20220705 05:26:16.151"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 05:26:16.266" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220705 05:26:16.151" endtime="20220705 05:26:16.266"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 05:26:16.266" endtime="20220705 05:26:16.266"/>
</return>
<msg timestamp="20220705 05:26:16.267" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220705 05:26:16.149" endtime="20220705 05:26:16.267"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 05:26:16.267" endtime="20220705 05:26:16.267"/>
</return>
<status status="PASS" starttime="20220705 05:26:16.148" endtime="20220705 05:26:16.267"/>
</kw>
<doc>Verify that a board can be deleted through API</doc>
<tag>api</tag>
<tag>board.delete</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220705 05:26:15.522" endtime="20220705 05:26:16.267"/>
</test>
<test id="s1-s1-s1-t4" name="GET Information of A Board" line="34">
<kw name="Create A Board" library="Board">
<var>${response}</var>
<arg>BoardTest</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 05:26:16.270" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 05:26:16.270" endtime="20220705 05:26:16.270"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 05:26:16.271" endtime="20220705 05:26:16.271"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 05:26:16.272" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220705 05:26:16.271" endtime="20220705 05:26:16.272"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 05:26:16.506" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 05:26:16.272" endtime="20220705 05:26:16.506"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 05:26:16.506" endtime="20220705 05:26:16.506"/>
</return>
<msg timestamp="20220705 05:26:16.507" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 05:26:16.269" endtime="20220705 05:26:16.507"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 05:26:16.507" endtime="20220705 05:26:16.507"/>
</return>
<msg timestamp="20220705 05:26:16.507" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 05:26:16.269" endtime="20220705 05:26:16.507"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>board</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 05:26:16.508" endtime="20220705 05:26:16.513"/>
</kw>
<status status="PASS" starttime="20220705 05:26:16.507" endtime="20220705 05:26:16.513"/>
</kw>
<kw name="Get A Board" library="Board">
<var>${response2}</var>
<arg>${response.json()}[id]</arg>
<doc>Gets the Board with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 05:26:16.515" level="INFO">${url} = boards/62c3cb784b91cc491a4727d3</msg>
<status status="PASS" starttime="20220705 05:26:16.515" endtime="20220705 05:26:16.515"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 05:26:16.636" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 05:26:16.515" endtime="20220705 05:26:16.636"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 05:26:16.636" endtime="20220705 05:26:16.637"/>
</return>
<msg timestamp="20220705 05:26:16.637" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 05:26:16.514" endtime="20220705 05:26:16.637"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 05:26:16.637" endtime="20220705 05:26:16.637"/>
</return>
<msg timestamp="20220705 05:26:16.637" level="INFO">${response2} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 05:26:16.513" endtime="20220705 05:26:16.638"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response2}</arg>
<arg>board</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 05:26:16.638" endtime="20220705 05:26:16.644"/>
</kw>
<status status="PASS" starttime="20220705 05:26:16.638" endtime="20220705 05:26:16.644"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${response2.json()}[name]</arg>
<arg>BoardTest</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220705 05:26:16.644" endtime="20220705 05:26:16.645"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${response.json()}[id]</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${response.json()}[id]</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 05:26:16.649" level="INFO">${url} = boards/62c3cb784b91cc491a4727d3</msg>
<status status="PASS" starttime="20220705 05:26:16.648" endtime="20220705 05:26:16.649"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 05:26:17.053" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 05:26:16.649" endtime="20220705 05:26:17.053"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 05:26:17.053" endtime="20220705 05:26:17.053"/>
</return>
<msg timestamp="20220705 05:26:17.054" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 05:26:16.647" endtime="20220705 05:26:17.054"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 05:26:17.054" endtime="20220705 05:26:17.054"/>
</return>
<status status="PASS" starttime="20220705 05:26:16.646" endtime="20220705 05:26:17.055"/>
</kw>
<status status="PASS" starttime="20220705 05:26:16.646" endtime="20220705 05:26:17.055"/>
</kw>
<doc>Verify that a board's information can be accesed through API</doc>
<tag>api</tag>
<tag>board.get</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220705 05:26:16.268" endtime="20220705 05:26:17.055"/>
</test>
<test id="s1-s1-s1-t5" name="UPDATE a Board's description" line="45">
<kw name="Create A Board" library="Board">
<var>${response}</var>
<arg>NewBoardForTest</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 05:26:17.058" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 05:26:17.058" endtime="20220705 05:26:17.058"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 05:26:17.058" endtime="20220705 05:26:17.059"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 05:26:17.060" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220705 05:26:17.059" endtime="20220705 05:26:17.060"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 05:26:17.284" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 05:26:17.060" endtime="20220705 05:26:17.284"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 05:26:17.285" endtime="20220705 05:26:17.285"/>
</return>
<msg timestamp="20220705 05:26:17.285" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 05:26:17.057" endtime="20220705 05:26:17.285"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 05:26:17.285" endtime="20220705 05:26:17.285"/>
</return>
<msg timestamp="20220705 05:26:17.285" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 05:26:17.056" endtime="20220705 05:26:17.285"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>board</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 05:26:17.286" endtime="20220705 05:26:17.292"/>
</kw>
<status status="PASS" starttime="20220705 05:26:17.286" endtime="20220705 05:26:17.292"/>
</kw>
<kw name="Update A Board" library="Board">
<arg>${response.json()}[id]</arg>
<arg>desc</arg>
<arg>sampleDescription</arg>
<doc>Updates the board with the given ID
optional_args: name, desc, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 05:26:17.294" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 05:26:17.294" endtime="20220705 05:26:17.294"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 05:26:17.294" endtime="20220705 05:26:17.295"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 05:26:17.295" level="INFO">${url} = boards/62c3cb7991344e7e48e5269d</msg>
<status status="PASS" starttime="20220705 05:26:17.295" endtime="20220705 05:26:17.295"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 05:26:17.458" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 05:26:17.295" endtime="20220705 05:26:17.458"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 05:26:17.458" endtime="20220705 05:26:17.458"/>
</return>
<msg timestamp="20220705 05:26:17.459" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 05:26:17.293" endtime="20220705 05:26:17.459"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 05:26:17.459" endtime="20220705 05:26:17.459"/>
</return>
<status status="PASS" starttime="20220705 05:26:17.292" endtime="20220705 05:26:17.459"/>
</kw>
<kw name="Get A Board" library="Board">
<var>${new_response}</var>
<arg>${response.json()}[id]</arg>
<doc>Gets the Board with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 05:26:17.462" level="INFO">${url} = boards/62c3cb7991344e7e48e5269d</msg>
<status status="PASS" starttime="20220705 05:26:17.461" endtime="20220705 05:26:17.462"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 05:26:17.582" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 05:26:17.462" endtime="20220705 05:26:17.582"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 05:26:17.582" endtime="20220705 05:26:17.582"/>
</return>
<msg timestamp="20220705 05:26:17.583" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 05:26:17.461" endtime="20220705 05:26:17.583"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 05:26:17.583" endtime="20220705 05:26:17.583"/>
</return>
<msg timestamp="20220705 05:26:17.583" level="INFO">${new_response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 05:26:17.459" endtime="20220705 05:26:17.583"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${new_response.json()}[desc]</arg>
<arg>sampleDescription</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220705 05:26:17.583" endtime="20220705 05:26:17.584"/>
</kw>
<kw name="Update A Board" library="Board">
<arg>${response.json()}[id]</arg>
<arg>desc</arg>
<arg>updatedDescription</arg>
<doc>Updates the board with the given ID
optional_args: name, desc, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 05:26:17.587" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 05:26:17.586" endtime="20220705 05:26:17.587"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 05:26:17.587" endtime="20220705 05:26:17.587"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 05:26:17.588" level="INFO">${url} = boards/62c3cb7991344e7e48e5269d</msg>
<status status="PASS" starttime="20220705 05:26:17.587" endtime="20220705 05:26:17.588"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 05:26:17.731" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 05:26:17.588" endtime="20220705 05:26:17.732"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 05:26:17.732" endtime="20220705 05:26:17.732"/>
</return>
<msg timestamp="20220705 05:26:17.732" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 05:26:17.586" endtime="20220705 05:26:17.732"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 05:26:17.732" endtime="20220705 05:26:17.732"/>
</return>
<status status="PASS" starttime="20220705 05:26:17.584" endtime="20220705 05:26:17.733"/>
</kw>
<kw name="Get A Board" library="Board">
<var>${new_response2}</var>
<arg>${response.json()}[id]</arg>
<doc>Gets the Board with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 05:26:17.735" level="INFO">${url} = boards/62c3cb7991344e7e48e5269d</msg>
<status status="PASS" starttime="20220705 05:26:17.735" endtime="20220705 05:26:17.735"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 05:26:17.852" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 05:26:17.735" endtime="20220705 05:26:17.852"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 05:26:17.852" endtime="20220705 05:26:17.852"/>
</return>
<msg timestamp="20220705 05:26:17.852" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 05:26:17.734" endtime="20220705 05:26:17.852"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 05:26:17.853" endtime="20220705 05:26:17.853"/>
</return>
<msg timestamp="20220705 05:26:17.853" level="INFO">${new_response2} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 05:26:17.733" endtime="20220705 05:26:17.853"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${new_response2.json()}[desc]</arg>
<arg>updatedDescription</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220705 05:26:17.853" endtime="20220705 05:26:17.854"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${response.json()}[id]</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${response.json()}[id]</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 05:26:17.857" level="INFO">${url} = boards/62c3cb7991344e7e48e5269d</msg>
<status status="PASS" starttime="20220705 05:26:17.856" endtime="20220705 05:26:17.857"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 05:26:18.260" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 05:26:17.857" endtime="20220705 05:26:18.260"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 05:26:18.260" endtime="20220705 05:26:18.260"/>
</return>
<msg timestamp="20220705 05:26:18.260" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 05:26:17.856" endtime="20220705 05:26:18.260"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 05:26:18.260" endtime="20220705 05:26:18.260"/>
</return>
<status status="PASS" starttime="20220705 05:26:17.855" endtime="20220705 05:26:18.261"/>
</kw>
<status status="PASS" starttime="20220705 05:26:17.855" endtime="20220705 05:26:18.261"/>
</kw>
<doc>Verify that a board's description can be updated through API</doc>
<tag>api</tag>
<tag>board.update</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220705 05:26:17.055" endtime="20220705 05:26:18.261"/>
</test>
<kw name="Delete All Sessions" library="request_own_library" type="TEARDOWN">
<status status="PASS" starttime="20220705 05:26:18.262" endtime="20220705 05:26:18.263"/>
</kw>
<doc>Example Test with Trello API Boards</doc>
<status status="PASS" starttime="20220705 05:26:13.714" endtime="20220705 05:26:18.264"/>
</suite>
<suite id="s1-s1-s2" name="Trello Api Cards Tests" source="/trello/api/trello_api_cards_tests.robot">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Create Trello Session</arg>
<arg>Setup Board And List</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Create Trello Session" library="TrelloAPI">
<doc>Creates a Trello Session</doc>
<kw name="Create Session" library="request_own_library">
<arg>${API_BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<status status="PASS" starttime="20220705 05:26:18.278" endtime="20220705 05:26:18.278"/>
</kw>
<status status="PASS" starttime="20220705 05:26:18.277" endtime="20220705 05:26:18.278"/>
</kw>
<kw name="Setup Board And List">
<doc>Create a board and save its ID and its first list's ID</doc>
<kw name="Create A Board" library="Board">
<var>${BOARD}</var>
<arg>TestBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 05:26:18.279" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 05:26:18.279" endtime="20220705 05:26:18.279"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 05:26:18.280" endtime="20220705 05:26:18.280"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 05:26:18.281" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220705 05:26:18.280" endtime="20220705 05:26:18.281"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 05:26:18.743" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 05:26:18.281" endtime="20220705 05:26:18.743"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 05:26:18.743" endtime="20220705 05:26:18.743"/>
</return>
<msg timestamp="20220705 05:26:18.743" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 05:26:18.279" endtime="20220705 05:26:18.743"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 05:26:18.743" endtime="20220705 05:26:18.743"/>
</return>
<msg timestamp="20220705 05:26:18.744" level="INFO">${BOARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 05:26:18.278" endtime="20220705 05:26:18.744"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_BOARD_ID}</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220705 05:26:18.745" level="INFO">${TEST_SUITE_BOARD_ID} = 62c3cb7ac53f24633f9201c1</msg>
<status status="PASS" starttime="20220705 05:26:18.744" endtime="20220705 05:26:18.745"/>
</kw>
<kw name="Get Lists On A Board" library="Board">
<var>${LISTS}</var>
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Get all the lists in a board</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>lists_on_board</arg>
<arg>${id}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 05:26:18.747" level="INFO">${url} = boards/62c3cb7ac53f24633f9201c1/lists/</msg>
<status status="PASS" starttime="20220705 05:26:18.747" endtime="20220705 05:26:18.747"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 05:26:18.871" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 05:26:18.747" endtime="20220705 05:26:18.871"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 05:26:18.871" endtime="20220705 05:26:18.871"/>
</return>
<msg timestamp="20220705 05:26:18.871" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 05:26:18.746" endtime="20220705 05:26:18.871"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 05:26:18.871" endtime="20220705 05:26:18.871"/>
</return>
<msg timestamp="20220705 05:26:18.871" level="INFO">${LISTS} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 05:26:18.745" endtime="20220705 05:26:18.871"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_LIST_ID}</arg>
<arg>${LISTS.json()}[0][id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220705 05:26:18.873" level="INFO">${TEST_SUITE_LIST_ID} = 62c3cb7ac53f24633f9201c8</msg>
<status status="PASS" starttime="20220705 05:26:18.872" endtime="20220705 05:26:18.873"/>
</kw>
<status status="PASS" starttime="20220705 05:26:18.278" endtime="20220705 05:26:18.873"/>
</kw>
<status status="PASS" starttime="20220705 05:26:18.277" endtime="20220705 05:26:18.873"/>
</kw>
<test id="s1-s1-s2-t1" name="Verify A Card Can Be Created" line="13">
<kw name="Create A Card" library="Card">
<var>${response}</var>
<arg>name</arg>
<arg>RFCard2</arg>
<doc>Creates a new card in the given list.
required_args: listId
optional_args: name, desc, pos, idCardSource, idLabels, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>@{optional_args}</arg>
<arg>idList</arg>
<arg>${idList}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 05:26:18.875" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 05:26:18.875" endtime="20220705 05:26:18.875"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 05:26:18.875" endtime="20220705 05:26:18.875"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 05:26:18.876" level="INFO">${url} = cards/</msg>
<status status="PASS" starttime="20220705 05:26:18.876" endtime="20220705 05:26:18.876"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 05:26:19.109" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 05:26:18.876" endtime="20220705 05:26:19.109"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 05:26:19.109" endtime="20220705 05:26:19.109"/>
</return>
<msg timestamp="20220705 05:26:19.110" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 05:26:18.874" endtime="20220705 05:26:19.110"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 05:26:19.110" endtime="20220705 05:26:19.110"/>
</return>
<msg timestamp="20220705 05:26:19.110" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 05:26:18.874" endtime="20220705 05:26:19.110"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>card</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 05:26:19.111" endtime="20220705 05:26:19.116"/>
</kw>
<status status="PASS" starttime="20220705 05:26:19.110" endtime="20220705 05:26:19.116"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 05:26:19.117" endtime="20220705 05:26:19.117"/>
</return>
<msg timestamp="20220705 05:26:19.118" level="INFO">${CARD_ID} = 62c3cb7b024ea53e8185561e</msg>
<status status="PASS" starttime="20220705 05:26:19.116" endtime="20220705 05:26:19.118"/>
</kw>
<kw name="Get A Card" library="Card">
<var>${response}</var>
<arg>${CARD_ID}</arg>
<doc>Gets the card with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 05:26:19.119" level="INFO">${url} = cards/62c3cb7b024ea53e8185561e</msg>
<status status="PASS" starttime="20220705 05:26:19.119" endtime="20220705 05:26:19.119"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 05:26:19.244" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 05:26:19.119" endtime="20220705 05:26:19.244"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 05:26:19.244" endtime="20220705 05:26:19.244"/>
</return>
<msg timestamp="20220705 05:26:19.245" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 05:26:19.118" endtime="20220705 05:26:19.245"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 05:26:19.245" endtime="20220705 05:26:19.245"/>
</return>
<msg timestamp="20220705 05:26:19.245" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 05:26:19.118" endtime="20220705 05:26:19.245"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_NAME}</var>
<arg>${response}</arg>
<arg>name</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 05:26:19.246" endtime="20220705 05:26:19.246"/>
</return>
<msg timestamp="20220705 05:26:19.247" level="INFO">${CARD_NAME} = RFCard2</msg>
<status status="PASS" starttime="20220705 05:26:19.245" endtime="20220705 05:26:19.247"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${CARD_NAME}</arg>
<arg>RFCard2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220705 05:26:19.247" endtime="20220705 05:26:19.247"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Card</arg>
<arg>${CARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Card" library="Card">
<arg>${CARD_ID}</arg>
<doc>Deletes the card with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 05:26:19.249" level="INFO">${url} = cards/62c3cb7b024ea53e8185561e</msg>
<status status="PASS" starttime="20220705 05:26:19.249" endtime="20220705 05:26:19.249"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 05:26:19.473" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 05:26:19.250" endtime="20220705 05:26:19.473"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 05:26:19.473" endtime="20220705 05:26:19.473"/>
</return>
<msg timestamp="20220705 05:26:19.474" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 05:26:19.248" endtime="20220705 05:26:19.474"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 05:26:19.474" endtime="20220705 05:26:19.474"/>
</return>
<status status="PASS" starttime="20220705 05:26:19.248" endtime="20220705 05:26:19.475"/>
</kw>
<status status="PASS" starttime="20220705 05:26:19.247" endtime="20220705 05:26:19.475"/>
</kw>
<doc>Verify that a card can be created through API</doc>
<tag>api</tag>
<tag>card.create</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220705 05:26:18.873" endtime="20220705 05:26:19.475"/>
</test>
<test id="s1-s1-s2-t2" name="Verify A Card Can Be Closed" line="24">
<kw name="Create A Card" library="Card">
<var>${response}</var>
<doc>Creates a new card in the given list.
required_args: listId
optional_args: name, desc, pos, idCardSource, idLabels, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>@{optional_args}</arg>
<arg>idList</arg>
<arg>${idList}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 05:26:19.478" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 05:26:19.478" endtime="20220705 05:26:19.478"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 05:26:19.478" endtime="20220705 05:26:19.479"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 05:26:19.480" level="INFO">${url} = cards/</msg>
<status status="PASS" starttime="20220705 05:26:19.479" endtime="20220705 05:26:19.480"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 05:26:19.691" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 05:26:19.480" endtime="20220705 05:26:19.691"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 05:26:19.691" endtime="20220705 05:26:19.691"/>
</return>
<msg timestamp="20220705 05:26:19.692" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 05:26:19.477" endtime="20220705 05:26:19.692"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 05:26:19.692" endtime="20220705 05:26:19.692"/>
</return>
<msg timestamp="20220705 05:26:19.692" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 05:26:19.476" endtime="20220705 05:26:19.692"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 05:26:19.693" endtime="20220705 05:26:19.693"/>
</return>
<msg timestamp="20220705 05:26:19.694" level="INFO">${CARD_ID} = 62c3cb7b22bb4e2c99bdfb61</msg>
<status status="PASS" starttime="20220705 05:26:19.692" endtime="20220705 05:26:19.694"/>
</kw>
<kw name="Archive A Card" library="Card">
<arg>${CARD_ID}</arg>
<doc>Modifies the card status to closed.</doc>
<kw name="Update A Card" library="Card">
<var>${response}</var>
<arg>${id}</arg>
<arg>closed</arg>
<arg>true</arg>
<arg>status_code=${status_code}</arg>
<doc>Updates the card with the given ID
optional_args: name, desc, closed, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<arg>status_code=${status_code}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 05:26:19.697" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 05:26:19.697" endtime="20220705 05:26:19.697"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 05:26:19.697" endtime="20220705 05:26:19.697"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 05:26:19.698" level="INFO">${url} = cards/62c3cb7b22bb4e2c99bdfb61</msg>
<status status="PASS" starttime="20220705 05:26:19.698" endtime="20220705 05:26:19.698"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 05:26:19.930" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 05:26:19.698" endtime="20220705 05:26:19.931"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 05:26:19.931" endtime="20220705 05:26:19.931"/>
</return>
<msg timestamp="20220705 05:26:19.931" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 05:26:19.696" endtime="20220705 05:26:19.931"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 05:26:19.931" endtime="20220705 05:26:19.931"/>
</return>
<msg timestamp="20220705 05:26:19.932" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 05:26:19.695" endtime="20220705 05:26:19.932"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 05:26:19.932" endtime="20220705 05:26:19.932"/>
</return>
<status status="PASS" starttime="20220705 05:26:19.694" endtime="20220705 05:26:19.932"/>
</kw>
<kw name="Get A Card" library="Card">
<var>${response}</var>
<arg>${CARD_ID}</arg>
<doc>Gets the card with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 05:26:19.934" level="INFO">${url} = cards/62c3cb7b22bb4e2c99bdfb61</msg>
<status status="PASS" starttime="20220705 05:26:19.934" endtime="20220705 05:26:19.934"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 05:26:20.067" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 05:26:19.934" endtime="20220705 05:26:20.067"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 05:26:20.067" endtime="20220705 05:26:20.067"/>
</return>
<msg timestamp="20220705 05:26:20.067" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 05:26:19.933" endtime="20220705 05:26:20.067"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 05:26:20.067" endtime="20220705 05:26:20.067"/>
</return>
<msg timestamp="20220705 05:26:20.068" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 05:26:19.932" endtime="20220705 05:26:20.068"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_CLOSED}</var>
<arg>${response}</arg>
<arg>closed</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 05:26:20.069" endtime="20220705 05:26:20.069"/>
</return>
<msg timestamp="20220705 05:26:20.070" level="INFO">${CARD_CLOSED} = True</msg>
<status status="PASS" starttime="20220705 05:26:20.068" endtime="20220705 05:26:20.070"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${CARD_CLOSED}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220705 05:26:20.070" endtime="20220705 05:26:20.070"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Card</arg>
<arg>${CARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Card" library="Card">
<arg>${CARD_ID}</arg>
<doc>Deletes the card with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 05:26:20.073" level="INFO">${url} = cards/62c3cb7b22bb4e2c99bdfb61</msg>
<status status="PASS" starttime="20220705 05:26:20.072" endtime="20220705 05:26:20.073"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 05:26:20.296" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 05:26:20.073" endtime="20220705 05:26:20.296"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 05:26:20.296" endtime="20220705 05:26:20.297"/>
</return>
<msg timestamp="20220705 05:26:20.298" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 05:26:20.072" endtime="20220705 05:26:20.298"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 05:26:20.298" endtime="20220705 05:26:20.298"/>
</return>
<status status="PASS" starttime="20220705 05:26:20.071" endtime="20220705 05:26:20.298"/>
</kw>
<status status="PASS" starttime="20220705 05:26:20.071" endtime="20220705 05:26:20.298"/>
</kw>
<doc>Verify that a card can be closed through API</doc>
<tag>api</tag>
<tag>card.close</tag>
<tag>regression</tag>
<status status="PASS" starttime="20220705 05:26:19.475" endtime="20220705 05:26:20.298"/>
</test>
<test id="s1-s1-s2-t3" name="Verify A Card Can Be Deleted" line="35">
<kw name="Create A Card" library="Card">
<var>${response}</var>
<doc>Creates a new card in the given list.
required_args: listId
optional_args: name, desc, pos, idCardSource, idLabels, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>@{optional_args}</arg>
<arg>idList</arg>
<arg>${idList}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 05:26:20.302" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 05:26:20.302" endtime="20220705 05:26:20.302"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 05:26:20.303" endtime="20220705 05:26:20.303"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 05:26:20.304" level="INFO">${url} = cards/</msg>
<status status="PASS" starttime="20220705 05:26:20.303" endtime="20220705 05:26:20.304"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 05:26:20.532" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 05:26:20.304" endtime="20220705 05:26:20.532"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 05:26:20.532" endtime="20220705 05:26:20.532"/>
</return>
<msg timestamp="20220705 05:26:20.533" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 05:26:20.301" endtime="20220705 05:26:20.533"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 05:26:20.533" endtime="20220705 05:26:20.533"/>
</return>
<msg timestamp="20220705 05:26:20.533" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 05:26:20.300" endtime="20220705 05:26:20.533"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 05:26:20.534" endtime="20220705 05:26:20.534"/>
</return>
<msg timestamp="20220705 05:26:20.535" level="INFO">${CARD_ID} = 62c3cb7c49b14c883800f3b4</msg>
<status status="PASS" starttime="20220705 05:26:20.534" endtime="20220705 05:26:20.535"/>
</kw>
<kw name="Delete A Card" library="Card">
<var>${response}</var>
<arg>${CARD_ID}</arg>
<doc>Deletes the card with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 05:26:20.537" level="INFO">${url} = cards/62c3cb7c49b14c883800f3b4</msg>
<status status="PASS" starttime="20220705 05:26:20.537" endtime="20220705 05:26:20.537"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 05:26:20.768" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 05:26:20.537" endtime="20220705 05:26:20.768"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 05:26:20.768" endtime="20220705 05:26:20.768"/>
</return>
<msg timestamp="20220705 05:26:20.769" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 05:26:20.536" endtime="20220705 05:26:20.769"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 05:26:20.769" endtime="20220705 05:26:20.769"/>
</return>
<msg timestamp="20220705 05:26:20.769" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 05:26:20.535" endtime="20220705 05:26:20.769"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>delete</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 05:26:20.770" endtime="20220705 05:26:20.772"/>
</kw>
<status status="PASS" starttime="20220705 05:26:20.769" endtime="20220705 05:26:20.772"/>
</kw>
<kw name="Get A Card" library="Card">
<arg>${CARD_ID}</arg>
<arg>status_code=404</arg>
<doc>Gets the card with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 05:26:20.774" level="INFO">${url} = cards/62c3cb7c49b14c883800f3b4</msg>
<status status="PASS" starttime="20220705 05:26:20.774" endtime="20220705 05:26:20.774"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 05:26:20.886" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220705 05:26:20.774" endtime="20220705 05:26:20.886"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 05:26:20.886" endtime="20220705 05:26:20.886"/>
</return>
<msg timestamp="20220705 05:26:20.886" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220705 05:26:20.773" endtime="20220705 05:26:20.886"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 05:26:20.886" endtime="20220705 05:26:20.886"/>
</return>
<status status="PASS" starttime="20220705 05:26:20.772" endtime="20220705 05:26:20.887"/>
</kw>
<doc>Verify that a card can be deleted through API</doc>
<tag>api</tag>
<tag>card.delete</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220705 05:26:20.299" endtime="20220705 05:26:20.887"/>
</test>
<test id="s1-s1-s2-t4" name="Verify A Card Can Be Updated" line="44">
<kw name="Create A Card" library="Card">
<var>${response}</var>
<arg>name</arg>
<arg>RFCard4</arg>
<doc>Creates a new card in the given list.
required_args: listId
optional_args: name, desc, pos, idCardSource, idLabels, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>@{optional_args}</arg>
<arg>idList</arg>
<arg>${idList}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 05:26:20.890" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 05:26:20.890" endtime="20220705 05:26:20.890"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 05:26:20.890" endtime="20220705 05:26:20.891"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 05:26:20.892" level="INFO">${url} = cards/</msg>
<status status="PASS" starttime="20220705 05:26:20.891" endtime="20220705 05:26:20.892"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 05:26:21.106" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 05:26:20.892" endtime="20220705 05:26:21.106"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 05:26:21.106" endtime="20220705 05:26:21.106"/>
</return>
<msg timestamp="20220705 05:26:21.106" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 05:26:20.889" endtime="20220705 05:26:21.106"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 05:26:21.106" endtime="20220705 05:26:21.106"/>
</return>
<msg timestamp="20220705 05:26:21.107" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 05:26:20.888" endtime="20220705 05:26:21.107"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 05:26:21.108" endtime="20220705 05:26:21.108"/>
</return>
<msg timestamp="20220705 05:26:21.109" level="INFO">${CARD_ID} = 62c3cb7cc484cb25aa969256</msg>
<status status="PASS" starttime="20220705 05:26:21.107" endtime="20220705 05:26:21.109"/>
</kw>
<kw name="Update A Card" library="Card">
<var>${response}</var>
<arg>${CARD_ID}</arg>
<arg>name</arg>
<arg>RFCard5</arg>
<arg>desc</arg>
<arg>Description</arg>
<doc>Updates the card with the given ID
optional_args: name, desc, closed, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<arg>status_code=${status_code}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 05:26:21.111" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 05:26:21.110" endtime="20220705 05:26:21.111"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 05:26:21.111" endtime="20220705 05:26:21.111"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 05:26:21.112" level="INFO">${url} = cards/62c3cb7cc484cb25aa969256</msg>
<status status="PASS" starttime="20220705 05:26:21.111" endtime="20220705 05:26:21.112"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 05:26:21.320" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 05:26:21.112" endtime="20220705 05:26:21.321"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 05:26:21.321" endtime="20220705 05:26:21.321"/>
</return>
<msg timestamp="20220705 05:26:21.321" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 05:26:21.110" endtime="20220705 05:26:21.321"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 05:26:21.321" endtime="20220705 05:26:21.321"/>
</return>
<msg timestamp="20220705 05:26:21.322" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 05:26:21.109" endtime="20220705 05:26:21.322"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>card</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 05:26:21.322" endtime="20220705 05:26:21.330"/>
</kw>
<status status="PASS" starttime="20220705 05:26:21.322" endtime="20220705 05:26:21.330"/>
</kw>
<kw name="Get A Card" library="Card">
<var>${response}</var>
<arg>${CARD_ID}</arg>
<doc>Gets the card with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 05:26:21.332" level="INFO">${url} = cards/62c3cb7cc484cb25aa969256</msg>
<status status="PASS" starttime="20220705 05:26:21.331" endtime="20220705 05:26:21.332"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 05:26:21.454" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 05:26:21.332" endtime="20220705 05:26:21.454"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 05:26:21.454" endtime="20220705 05:26:21.454"/>
</return>
<msg timestamp="20220705 05:26:21.455" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 05:26:21.330" endtime="20220705 05:26:21.455"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 05:26:21.455" endtime="20220705 05:26:21.455"/>
</return>
<msg timestamp="20220705 05:26:21.455" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 05:26:21.330" endtime="20220705 05:26:21.455"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_NAME}</var>
<arg>${response}</arg>
<arg>name</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 05:26:21.456" endtime="20220705 05:26:21.456"/>
</return>
<msg timestamp="20220705 05:26:21.457" level="INFO">${CARD_NAME} = RFCard5</msg>
<status status="PASS" starttime="20220705 05:26:21.455" endtime="20220705 05:26:21.457"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_DESC}</var>
<arg>${response}</arg>
<arg>desc</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 05:26:21.457" endtime="20220705 05:26:21.457"/>
</return>
<msg timestamp="20220705 05:26:21.458" level="INFO">${CARD_DESC} = Description</msg>
<status status="PASS" starttime="20220705 05:26:21.457" endtime="20220705 05:26:21.459"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${CARD_NAME}</arg>
<arg>RFCard5</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220705 05:26:21.459" endtime="20220705 05:26:21.459"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${CARD_DESC}</arg>
<arg>Description</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220705 05:26:21.459" endtime="20220705 05:26:21.460"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Card</arg>
<arg>${CARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Card" library="Card">
<arg>${CARD_ID}</arg>
<doc>Deletes the card with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 05:26:21.462" level="INFO">${url} = cards/62c3cb7cc484cb25aa969256</msg>
<status status="PASS" starttime="20220705 05:26:21.462" endtime="20220705 05:26:21.462"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 05:26:21.698" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 05:26:21.462" endtime="20220705 05:26:21.698"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 05:26:21.698" endtime="20220705 05:26:21.698"/>
</return>
<msg timestamp="20220705 05:26:21.698" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 05:26:21.461" endtime="20220705 05:26:21.699"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 05:26:21.699" endtime="20220705 05:26:21.699"/>
</return>
<status status="PASS" starttime="20220705 05:26:21.460" endtime="20220705 05:26:21.699"/>
</kw>
<status status="PASS" starttime="20220705 05:26:21.460" endtime="20220705 05:26:21.699"/>
</kw>
<doc>Verify that a card's name and Description can be updated through API</doc>
<tag>api</tag>
<tag>card.update</tag>
<tag>regression</tag>
<status status="PASS" starttime="20220705 05:26:20.887" endtime="20220705 05:26:21.699"/>
</test>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Teardown Board</arg>
<arg>Delete All Sessions</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Teardown Board">
<doc>Delete the board created for this suite</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 05:26:21.704" level="INFO">${url} = boards/62c3cb7ac53f24633f9201c1</msg>
<status status="PASS" starttime="20220705 05:26:21.703" endtime="20220705 05:26:21.704"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 05:26:22.106" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 05:26:21.704" endtime="20220705 05:26:22.106"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 05:26:22.106" endtime="20220705 05:26:22.107"/>
</return>
<msg timestamp="20220705 05:26:22.107" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 05:26:21.703" endtime="20220705 05:26:22.107"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 05:26:22.107" endtime="20220705 05:26:22.107"/>
</return>
<status status="PASS" starttime="20220705 05:26:21.702" endtime="20220705 05:26:22.107"/>
</kw>
<status status="PASS" starttime="20220705 05:26:21.702" endtime="20220705 05:26:22.107"/>
</kw>
<status status="PASS" starttime="20220705 05:26:21.701" endtime="20220705 05:26:22.108"/>
</kw>
<kw name="Delete All Sessions" library="request_own_library">
<status status="PASS" starttime="20220705 05:26:22.108" endtime="20220705 05:26:22.109"/>
</kw>
<status status="PASS" starttime="20220705 05:26:21.701" endtime="20220705 05:26:22.109"/>
</kw>
<doc>Example Test with Trello API Cards</doc>
<status status="PASS" starttime="20220705 05:26:18.265" endtime="20220705 05:26:22.109"/>
</suite>
<suite id="s1-s1-s3" name="Trello Api Checklists Tests" source="/trello/api/trello_api_checklists_tests.robot">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Create Trello Session</arg>
<arg>Setup Board, List And Card</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Create Trello Session" library="TrelloAPI">
<doc>Creates a Trello Session</doc>
<kw name="Create Session" library="request_own_library">
<arg>${API_BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<status status="PASS" starttime="20220705 05:26:22.123" endtime="20220705 05:26:22.124"/>
</kw>
<status status="PASS" starttime="20220705 05:26:22.123" endtime="20220705 05:26:22.124"/>
</kw>
<kw name="Setup Board, List And Card">
<doc>Create a board and save its ID and its first list's ID</doc>
<kw name="Create A Board" library="Board">
<var>${BOARD}</var>
<arg>TestBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 05:26:22.125" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 05:26:22.125" endtime="20220705 05:26:22.126"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 05:26:22.126" endtime="20220705 05:26:22.126"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 05:26:22.127" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220705 05:26:22.126" endtime="20220705 05:26:22.127"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 05:26:22.394" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 05:26:22.127" endtime="20220705 05:26:22.394"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 05:26:22.394" endtime="20220705 05:26:22.394"/>
</return>
<msg timestamp="20220705 05:26:22.394" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 05:26:22.125" endtime="20220705 05:26:22.394"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 05:26:22.395" endtime="20220705 05:26:22.395"/>
</return>
<msg timestamp="20220705 05:26:22.395" level="INFO">${BOARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 05:26:22.124" endtime="20220705 05:26:22.395"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_BOARD_ID}</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220705 05:26:22.396" level="INFO">${TEST_SUITE_BOARD_ID} = 62c3cb7e44a4f77710014e53</msg>
<status status="PASS" starttime="20220705 05:26:22.395" endtime="20220705 05:26:22.396"/>
</kw>
<kw name="Get Lists On A Board" library="Board">
<var>${LISTS}</var>
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Get all the lists in a board</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>lists_on_board</arg>
<arg>${id}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 05:26:22.398" level="INFO">${url} = boards/62c3cb7e44a4f77710014e53/lists/</msg>
<status status="PASS" starttime="20220705 05:26:22.398" endtime="20220705 05:26:22.398"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 05:26:22.528" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 05:26:22.398" endtime="20220705 05:26:22.528"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 05:26:22.528" endtime="20220705 05:26:22.528"/>
</return>
<msg timestamp="20220705 05:26:22.529" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 05:26:22.397" endtime="20220705 05:26:22.529"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 05:26:22.529" endtime="20220705 05:26:22.529"/>
</return>
<msg timestamp="20220705 05:26:22.529" level="INFO">${LISTS} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 05:26:22.397" endtime="20220705 05:26:22.529"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_LIST_ID}</arg>
<arg>${LISTS.json()}[0][id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220705 05:26:22.530" level="INFO">${TEST_SUITE_LIST_ID} = 62c3cb7e44a4f77710014e5a</msg>
<status status="PASS" starttime="20220705 05:26:22.529" endtime="20220705 05:26:22.531"/>
</kw>
<kw name="Create A Card" library="Card">
<var>${CARD}</var>
<arg>name</arg>
<arg>TestCard</arg>
<doc>Creates a new card in the given list.
required_args: listId
optional_args: name, desc, pos, idCardSource, idLabels, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>@{optional_args}</arg>
<arg>idList</arg>
<arg>${idList}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 05:26:22.533" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 05:26:22.532" endtime="20220705 05:26:22.533"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 05:26:22.533" endtime="20220705 05:26:22.533"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 05:26:22.535" level="INFO">${url} = cards/</msg>
<status status="PASS" starttime="20220705 05:26:22.534" endtime="20220705 05:26:22.535"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 05:26:22.775" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 05:26:22.535" endtime="20220705 05:26:22.776"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 05:26:22.776" endtime="20220705 05:26:22.776"/>
</return>
<msg timestamp="20220705 05:26:22.776" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 05:26:22.532" endtime="20220705 05:26:22.776"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 05:26:22.776" endtime="20220705 05:26:22.776"/>
</return>
<msg timestamp="20220705 05:26:22.777" level="INFO">${CARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 05:26:22.531" endtime="20220705 05:26:22.777"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_CARD_ID}</arg>
<arg>${CARD.json()}[id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220705 05:26:22.778" level="INFO">${TEST_SUITE_CARD_ID} = 62c3cb7ec6e8d68ee169dad0</msg>
<status status="PASS" starttime="20220705 05:26:22.777" endtime="20220705 05:26:22.778"/>
</kw>
<status status="PASS" starttime="20220705 05:26:22.124" endtime="20220705 05:26:22.778"/>
</kw>
<status status="PASS" starttime="20220705 05:26:22.123" endtime="20220705 05:26:22.779"/>
</kw>
<test id="s1-s1-s3-t1" name="Verify A Checklist Can Be Created" line="14">
<kw name="Create A Checklist" library="Checklist">
<var>${response}</var>
<arg>name</arg>
<arg>TestChecklist</arg>
<arg>idCard=${TEST_SUITE_CARD_ID}</arg>
<doc>Creates a new checklist in the given card.
required_args: idCard
optional_args: name, pos, idChecklistSource
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>@{optional_args}</arg>
<arg>idCard</arg>
<arg>${idCard}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 05:26:22.782" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 05:26:22.781" endtime="20220705 05:26:22.782"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 05:26:22.782" endtime="20220705 05:26:22.782"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 05:26:22.783" level="INFO">${url} = checklists/</msg>
<status status="PASS" starttime="20220705 05:26:22.782" endtime="20220705 05:26:22.783"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 05:26:22.961" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 05:26:22.783" endtime="20220705 05:26:22.962"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 05:26:22.962" endtime="20220705 05:26:22.962"/>
</return>
<msg timestamp="20220705 05:26:22.962" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 05:26:22.781" endtime="20220705 05:26:22.962"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 05:26:22.962" endtime="20220705 05:26:22.962"/>
</return>
<msg timestamp="20220705 05:26:22.962" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 05:26:22.780" endtime="20220705 05:26:22.963"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${checklist_id}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 05:26:22.963" endtime="20220705 05:26:22.963"/>
</return>
<msg timestamp="20220705 05:26:22.964" level="INFO">${checklist_id} = 62c3cb7e3e629b2b957392cc</msg>
<status status="PASS" starttime="20220705 05:26:22.963" endtime="20220705 05:26:22.964"/>
</kw>
<kw name="Get A Checklist" library="Checklist">
<var>${response}</var>
<arg>${checklist_id}</arg>
<doc>Gets the checklist with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 05:26:22.966" level="INFO">${url} = checklists/62c3cb7e3e629b2b957392cc</msg>
<status status="PASS" starttime="20220705 05:26:22.966" endtime="20220705 05:26:22.966"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 05:26:23.100" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 05:26:22.966" endtime="20220705 05:26:23.100"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 05:26:23.100" endtime="20220705 05:26:23.100"/>
</return>
<msg timestamp="20220705 05:26:23.101" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 05:26:22.965" endtime="20220705 05:26:23.101"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 05:26:23.101" endtime="20220705 05:26:23.101"/>
</return>
<msg timestamp="20220705 05:26:23.101" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 05:26:22.964" endtime="20220705 05:26:23.101"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${checklist_name}</var>
<arg>${response}</arg>
<arg>name</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 05:26:23.102" endtime="20220705 05:26:23.102"/>
</return>
<msg timestamp="20220705 05:26:23.103" level="INFO">${checklist_name} = TestChecklist</msg>
<status status="PASS" starttime="20220705 05:26:23.101" endtime="20220705 05:26:23.103"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${checklist_name}</arg>
<arg>TestChecklist</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220705 05:26:23.103" endtime="20220705 05:26:23.103"/>
</kw>
<kw name="Delete A Checklist" library="Checklist" type="TEARDOWN">
<arg>${checklist_id}</arg>
<doc>Deletes the checklist with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 05:26:23.105" level="INFO">${url} = checklists/62c3cb7e3e629b2b957392cc</msg>
<status status="PASS" starttime="20220705 05:26:23.105" endtime="20220705 05:26:23.105"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 05:26:23.277" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 05:26:23.105" endtime="20220705 05:26:23.277"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 05:26:23.277" endtime="20220705 05:26:23.277"/>
</return>
<msg timestamp="20220705 05:26:23.277" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 05:26:23.104" endtime="20220705 05:26:23.277"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 05:26:23.277" endtime="20220705 05:26:23.278"/>
</return>
<status status="PASS" starttime="20220705 05:26:23.104" endtime="20220705 05:26:23.278"/>
</kw>
<doc>Verify that a checklist can be created through API</doc>
<tag>api</tag>
<tag>checklist.create</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220705 05:26:22.779" endtime="20220705 05:26:23.278"/>
</test>
<test id="s1-s1-s3-t2" name="Verify A Checklist Can Be Deleted" line="24">
<kw name="Create A Checklist" library="Checklist">
<var>${response}</var>
<arg>name</arg>
<arg>TestChecklist</arg>
<arg>idCard=${TEST_SUITE_CARD_ID}</arg>
<doc>Creates a new checklist in the given card.
required_args: idCard
optional_args: name, pos, idChecklistSource
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>@{optional_args}</arg>
<arg>idCard</arg>
<arg>${idCard}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 05:26:23.281" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 05:26:23.281" endtime="20220705 05:26:23.281"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 05:26:23.281" endtime="20220705 05:26:23.282"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 05:26:23.283" level="INFO">${url} = checklists/</msg>
<status status="PASS" starttime="20220705 05:26:23.282" endtime="20220705 05:26:23.283"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 05:26:23.473" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 05:26:23.283" endtime="20220705 05:26:23.473"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 05:26:23.473" endtime="20220705 05:26:23.473"/>
</return>
<msg timestamp="20220705 05:26:23.473" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 05:26:23.280" endtime="20220705 05:26:23.473"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 05:26:23.473" endtime="20220705 05:26:23.473"/>
</return>
<msg timestamp="20220705 05:26:23.474" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 05:26:23.280" endtime="20220705 05:26:23.474"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${checklist_id}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 05:26:23.475" endtime="20220705 05:26:23.475"/>
</return>
<msg timestamp="20220705 05:26:23.476" level="INFO">${checklist_id} = 62c3cb7f66ab0851a34d3f11</msg>
<status status="PASS" starttime="20220705 05:26:23.474" endtime="20220705 05:26:23.476"/>
</kw>
<kw name="Delete A Checklist" library="Checklist">
<var>${response}</var>
<arg>${checklist_id}</arg>
<doc>Deletes the checklist with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 05:26:23.478" level="INFO">${url} = checklists/62c3cb7f66ab0851a34d3f11</msg>
<status status="PASS" starttime="20220705 05:26:23.478" endtime="20220705 05:26:23.478"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 05:26:23.669" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 05:26:23.478" endtime="20220705 05:26:23.669"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 05:26:23.669" endtime="20220705 05:26:23.669"/>
</return>
<msg timestamp="20220705 05:26:23.669" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 05:26:23.477" endtime="20220705 05:26:23.669"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 05:26:23.670" endtime="20220705 05:26:23.670"/>
</return>
<msg timestamp="20220705 05:26:23.670" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 05:26:23.477" endtime="20220705 05:26:23.670"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>delete</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 05:26:23.670" endtime="20220705 05:26:23.672"/>
</kw>
<status status="PASS" starttime="20220705 05:26:23.670" endtime="20220705 05:26:23.673"/>
</kw>
<kw name="Get A Checklist" library="Checklist">
<arg>${checklist_id}</arg>
<arg>status_code=404</arg>
<doc>Gets the checklist with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 05:26:23.674" level="INFO">${url} = checklists/62c3cb7f66ab0851a34d3f11</msg>
<status status="PASS" starttime="20220705 05:26:23.674" endtime="20220705 05:26:23.674"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 05:26:23.778" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220705 05:26:23.674" endtime="20220705 05:26:23.778"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 05:26:23.778" endtime="20220705 05:26:23.778"/>
</return>
<msg timestamp="20220705 05:26:23.778" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220705 05:26:23.673" endtime="20220705 05:26:23.778"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 05:26:23.778" endtime="20220705 05:26:23.778"/>
</return>
<status status="PASS" starttime="20220705 05:26:23.673" endtime="20220705 05:26:23.778"/>
</kw>
<doc>Verify that a checklist can be deleted through API</doc>
<tag>api</tag>
<tag>checklist.delete</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220705 05:26:23.278" endtime="20220705 05:26:23.779"/>
</test>
<test id="s1-s1-s3-t3" name="Verify A Checklist Can Be Updated" line="33">
<kw name="Create A Checklist" library="Checklist">
<var>${response}</var>
<arg>name</arg>
<arg>TestChecklist</arg>
<arg>idCard=${TEST_SUITE_CARD_ID}</arg>
<doc>Creates a new checklist in the given card.
required_args: idCard
optional_args: name, pos, idChecklistSource
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>@{optional_args}</arg>
<arg>idCard</arg>
<arg>${idCard}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 05:26:23.784" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 05:26:23.782" endtime="20220705 05:26:23.784"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 05:26:23.784" endtime="20220705 05:26:23.784"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 05:26:23.785" level="INFO">${url} = checklists/</msg>
<status status="PASS" starttime="20220705 05:26:23.784" endtime="20220705 05:26:23.785"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 05:26:23.950" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 05:26:23.785" endtime="20220705 05:26:23.950"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 05:26:23.950" endtime="20220705 05:26:23.950"/>
</return>
<msg timestamp="20220705 05:26:23.950" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 05:26:23.781" endtime="20220705 05:26:23.950"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 05:26:23.950" endtime="20220705 05:26:23.950"/>
</return>
<msg timestamp="20220705 05:26:23.950" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 05:26:23.781" endtime="20220705 05:26:23.951"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${checklist_id}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 05:26:23.951" endtime="20220705 05:26:23.951"/>
</return>
<msg timestamp="20220705 05:26:23.952" level="INFO">${checklist_id} = 62c3cb7fc2378920ce9489cd</msg>
<status status="PASS" starttime="20220705 05:26:23.951" endtime="20220705 05:26:23.952"/>
</kw>
<kw name="Update A Checklist" library="Checklist">
<var>${response}</var>
<arg>${checklist_id}</arg>
<arg>name</arg>
<arg>TestChecklist2</arg>
<doc>Updates the checklist with the given ID
optional_args: name, pos
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<arg>status_code=${status_code}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 05:26:23.954" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 05:26:23.954" endtime="20220705 05:26:23.954"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 05:26:23.954" endtime="20220705 05:26:23.954"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 05:26:23.955" level="INFO">${url} = checklists/62c3cb7fc2378920ce9489cd</msg>
<status status="PASS" starttime="20220705 05:26:23.955" endtime="20220705 05:26:23.955"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 05:26:24.126" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 05:26:23.955" endtime="20220705 05:26:24.126"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 05:26:24.126" endtime="20220705 05:26:24.127"/>
</return>
<msg timestamp="20220705 05:26:24.127" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 05:26:23.953" endtime="20220705 05:26:24.127"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 05:26:24.127" endtime="20220705 05:26:24.127"/>
</return>
<msg timestamp="20220705 05:26:24.127" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 05:26:23.952" endtime="20220705 05:26:24.127"/>
</kw>
<kw name="Get A Checklist" library="Checklist">
<var>${response}</var>
<arg>${checklist_id}</arg>
<doc>Gets the checklist with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 05:26:24.129" level="INFO">${url} = checklists/62c3cb7fc2378920ce9489cd</msg>
<status status="PASS" starttime="20220705 05:26:24.128" endtime="20220705 05:26:24.129"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 05:26:24.253" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 05:26:24.129" endtime="20220705 05:26:24.253"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 05:26:24.253" endtime="20220705 05:26:24.253"/>
</return>
<msg timestamp="20220705 05:26:24.254" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 05:26:24.128" endtime="20220705 05:26:24.254"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 05:26:24.254" endtime="20220705 05:26:24.254"/>
</return>
<msg timestamp="20220705 05:26:24.254" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 05:26:24.127" endtime="20220705 05:26:24.254"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${checklist_name}</var>
<arg>${response}</arg>
<arg>name</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 05:26:24.255" endtime="20220705 05:26:24.255"/>
</return>
<msg timestamp="20220705 05:26:24.256" level="INFO">${checklist_name} = TestChecklist2</msg>
<status status="PASS" starttime="20220705 05:26:24.254" endtime="20220705 05:26:24.256"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${checklist_name}</arg>
<arg>TestChecklist2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220705 05:26:24.256" endtime="20220705 05:26:24.256"/>
</kw>
<kw name="Delete A Checklist" library="Checklist" type="TEARDOWN">
<arg>${checklist_id}</arg>
<doc>Deletes the checklist with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 05:26:24.273" level="INFO">${url} = checklists/62c3cb7fc2378920ce9489cd</msg>
<status status="PASS" starttime="20220705 05:26:24.272" endtime="20220705 05:26:24.273"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 05:26:24.443" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 05:26:24.273" endtime="20220705 05:26:24.443"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 05:26:24.444" endtime="20220705 05:26:24.444"/>
</return>
<msg timestamp="20220705 05:26:24.444" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 05:26:24.272" endtime="20220705 05:26:24.444"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 05:26:24.444" endtime="20220705 05:26:24.444"/>
</return>
<status status="PASS" starttime="20220705 05:26:24.257" endtime="20220705 05:26:24.444"/>
</kw>
<doc>Verify that a checklist's name can be updated through API</doc>
<tag>api</tag>
<tag>checklist.update</tag>
<tag>regression</tag>
<status status="PASS" starttime="20220705 05:26:23.780" endtime="20220705 05:26:24.444"/>
</test>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Teardown Board</arg>
<arg>Delete All Sessions</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Teardown Board">
<doc>Delete the board created for this suite</doc>
<kw name="Delete A Board" library="Board">
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 05:26:24.448" level="INFO">${url} = boards/62c3cb7e44a4f77710014e53</msg>
<status status="PASS" starttime="20220705 05:26:24.448" endtime="20220705 05:26:24.448"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 05:26:24.904" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 05:26:24.448" endtime="20220705 05:26:24.904"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 05:26:24.904" endtime="20220705 05:26:24.904"/>
</return>
<msg timestamp="20220705 05:26:24.904" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 05:26:24.447" endtime="20220705 05:26:24.904"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 05:26:24.904" endtime="20220705 05:26:24.904"/>
</return>
<status status="PASS" starttime="20220705 05:26:24.447" endtime="20220705 05:26:24.905"/>
</kw>
<status status="PASS" starttime="20220705 05:26:24.446" endtime="20220705 05:26:24.905"/>
</kw>
<kw name="Delete All Sessions" library="request_own_library">
<status status="PASS" starttime="20220705 05:26:24.905" endtime="20220705 05:26:24.906"/>
</kw>
<status status="PASS" starttime="20220705 05:26:24.445" endtime="20220705 05:26:24.906"/>
</kw>
<doc>Example Test with Trello API Checklists</doc>
<status status="PASS" starttime="20220705 05:26:22.111" endtime="20220705 05:26:24.906"/>
</suite>
<suite id="s1-s1-s4" name="Trello Api Labels Tests" source="/trello/api/trello_api_labels_tests.robot">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Create Trello Session</arg>
<arg>Setup Board And List</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Create Trello Session" library="TrelloAPI">
<doc>Creates a Trello Session</doc>
<kw name="Create Session" library="request_own_library">
<arg>${API_BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<status status="PASS" starttime="20220705 05:26:24.919" endtime="20220705 05:26:24.919"/>
</kw>
<status status="PASS" starttime="20220705 05:26:24.918" endtime="20220705 05:26:24.919"/>
</kw>
<kw name="Setup Board And List">
<doc>Create a board and save its ID and its first list's ID</doc>
<kw name="Create A Board" library="Board">
<var>${BOARD}</var>
<arg>TestBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 05:26:24.921" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 05:26:24.920" endtime="20220705 05:26:24.921"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 05:26:24.921" endtime="20220705 05:26:24.921"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 05:26:24.922" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220705 05:26:24.921" endtime="20220705 05:26:24.922"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 05:26:25.198" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 05:26:24.922" endtime="20220705 05:26:25.198"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 05:26:25.198" endtime="20220705 05:26:25.198"/>
</return>
<msg timestamp="20220705 05:26:25.199" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 05:26:24.920" endtime="20220705 05:26:25.199"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 05:26:25.199" endtime="20220705 05:26:25.199"/>
</return>
<msg timestamp="20220705 05:26:25.199" level="INFO">${BOARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 05:26:24.920" endtime="20220705 05:26:25.199"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_BOARD_ID}</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220705 05:26:25.200" level="INFO">${TEST_SUITE_BOARD_ID} = 62c3cb8100717f6aab82580d</msg>
<status status="PASS" starttime="20220705 05:26:25.199" endtime="20220705 05:26:25.200"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${LISTS}</var>
<arg>boards/${TEST_SUITE_BOARD_ID}/lists</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 05:26:25.320" level="INFO">${LISTS} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 05:26:25.201" endtime="20220705 05:26:25.320"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_LIST_ID}</arg>
<arg>${LISTS.json()}[0][id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220705 05:26:25.322" level="INFO">${TEST_SUITE_LIST_ID} = 62c3cb8100717f6aab825814</msg>
<status status="PASS" starttime="20220705 05:26:25.321" endtime="20220705 05:26:25.322"/>
</kw>
<status status="PASS" starttime="20220705 05:26:24.919" endtime="20220705 05:26:25.322"/>
</kw>
<status status="PASS" starttime="20220705 05:26:24.918" endtime="20220705 05:26:25.322"/>
</kw>
<test id="s1-s1-s4-t1" name="Create and get label on board" line="14">
<kw name="Create A Label" library="Label">
<var>${response}</var>
<arg>name</arg>
<arg>label2</arg>
<arg>color</arg>
<arg>yellow</arg>
<doc>Creates a new label in the given board.
required_args: idBoard
optional_args: name, color
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>idBoard</arg>
<arg>${idBoard}</arg>
<arg>@{optional_args}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 05:26:25.324" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 05:26:25.324" endtime="20220705 05:26:25.325"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 05:26:25.325" endtime="20220705 05:26:25.325"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 05:26:25.326" level="INFO">${url} = labels/</msg>
<status status="PASS" starttime="20220705 05:26:25.325" endtime="20220705 05:26:25.326"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 05:26:25.476" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 05:26:25.326" endtime="20220705 05:26:25.476"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 05:26:25.476" endtime="20220705 05:26:25.476"/>
</return>
<msg timestamp="20220705 05:26:25.476" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 05:26:25.324" endtime="20220705 05:26:25.476"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 05:26:25.476" endtime="20220705 05:26:25.476"/>
</return>
<msg timestamp="20220705 05:26:25.477" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 05:26:25.323" endtime="20220705 05:26:25.477"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>label</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 05:26:25.478" endtime="20220705 05:26:25.480"/>
</kw>
<status status="PASS" starttime="20220705 05:26:25.477" endtime="20220705 05:26:25.480"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${LABEL_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 05:26:25.480" endtime="20220705 05:26:25.481"/>
</return>
<msg timestamp="20220705 05:26:25.482" level="INFO">${LABEL_ID} = 62c3cb81bf4c6a2dfc05d00a</msg>
<status status="PASS" starttime="20220705 05:26:25.480" endtime="20220705 05:26:25.482"/>
</kw>
<kw name="Get A Label" library="Label">
<var>${response}</var>
<arg>${LABEL_ID}</arg>
<doc>Gets the label with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 05:26:25.484" level="INFO">${url} = labels/62c3cb81bf4c6a2dfc05d00a</msg>
<status status="PASS" starttime="20220705 05:26:25.483" endtime="20220705 05:26:25.484"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 05:26:25.602" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 05:26:25.484" endtime="20220705 05:26:25.603"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 05:26:25.603" endtime="20220705 05:26:25.603"/>
</return>
<msg timestamp="20220705 05:26:25.603" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 05:26:25.483" endtime="20220705 05:26:25.603"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 05:26:25.603" endtime="20220705 05:26:25.603"/>
</return>
<msg timestamp="20220705 05:26:25.604" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 05:26:25.482" endtime="20220705 05:26:25.604"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${LABEL_COLOR}</var>
<arg>${response}</arg>
<arg>color</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 05:26:25.605" endtime="20220705 05:26:25.605"/>
</return>
<msg timestamp="20220705 05:26:25.606" level="INFO">${LABEL_COLOR} = yellow</msg>
<status status="PASS" starttime="20220705 05:26:25.604" endtime="20220705 05:26:25.606"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${LABEL_NAME}</var>
<arg>${response}</arg>
<arg>name</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 05:26:25.607" endtime="20220705 05:26:25.607"/>
</return>
<msg timestamp="20220705 05:26:25.608" level="INFO">${LABEL_NAME} = label2</msg>
<status status="PASS" starttime="20220705 05:26:25.606" endtime="20220705 05:26:25.608"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${LABEL_COLOR}</arg>
<arg>yellow</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220705 05:26:25.608" endtime="20220705 05:26:25.608"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${LABEL_NAME}</arg>
<arg>label2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220705 05:26:25.608" endtime="20220705 05:26:25.609"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Label</arg>
<arg>${LABEL_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Label" library="Label">
<arg>${LABEL_ID}</arg>
<doc>Deletes the label with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 05:26:25.611" level="INFO">${url} = labels/62c3cb81bf4c6a2dfc05d00a</msg>
<status status="PASS" starttime="20220705 05:26:25.611" endtime="20220705 05:26:25.611"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 05:26:25.795" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 05:26:25.611" endtime="20220705 05:26:25.795"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 05:26:25.795" endtime="20220705 05:26:25.795"/>
</return>
<msg timestamp="20220705 05:26:25.796" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 05:26:25.610" endtime="20220705 05:26:25.796"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 05:26:25.796" endtime="20220705 05:26:25.796"/>
</return>
<status status="PASS" starttime="20220705 05:26:25.610" endtime="20220705 05:26:25.797"/>
</kw>
<status status="PASS" starttime="20220705 05:26:25.609" endtime="20220705 05:26:25.797"/>
</kw>
<doc>Verify that a label can be created through API</doc>
<tag>api</tag>
<tag>label.create</tag>
<tag>label.get</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220705 05:26:25.322" endtime="20220705 05:26:25.797"/>
</test>
<test id="s1-s1-s4-t2" name="Update label on board" line="28">
<kw name="Create A Label" library="Label">
<var>${response}</var>
<arg>name</arg>
<arg>label2</arg>
<arg>color</arg>
<arg>yellow</arg>
<doc>Creates a new label in the given board.
required_args: idBoard
optional_args: name, color
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>idBoard</arg>
<arg>${idBoard}</arg>
<arg>@{optional_args}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 05:26:25.800" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 05:26:25.800" endtime="20220705 05:26:25.800"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 05:26:25.800" endtime="20220705 05:26:25.801"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 05:26:25.802" level="INFO">${url} = labels/</msg>
<status status="PASS" starttime="20220705 05:26:25.801" endtime="20220705 05:26:25.802"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 05:26:25.952" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 05:26:25.802" endtime="20220705 05:26:25.952"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 05:26:25.952" endtime="20220705 05:26:25.952"/>
</return>
<msg timestamp="20220705 05:26:25.953" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 05:26:25.799" endtime="20220705 05:26:25.953"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 05:26:25.953" endtime="20220705 05:26:25.953"/>
</return>
<msg timestamp="20220705 05:26:25.953" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 05:26:25.799" endtime="20220705 05:26:25.953"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>label</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 05:26:25.954" endtime="20220705 05:26:25.956"/>
</kw>
<status status="PASS" starttime="20220705 05:26:25.953" endtime="20220705 05:26:25.956"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${LABEL_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 05:26:25.957" endtime="20220705 05:26:25.957"/>
</return>
<msg timestamp="20220705 05:26:25.958" level="INFO">${LABEL_ID} = 62c3cb819ed6a9100b65482b</msg>
<status status="PASS" starttime="20220705 05:26:25.956" endtime="20220705 05:26:25.958"/>
</kw>
<kw name="Update A Label" library="Label">
<var>${new_response}</var>
<arg>${LABEL_ID}</arg>
<arg>name</arg>
<arg>label3</arg>
<arg>color</arg>
<arg>orange</arg>
<doc>Updates the label with the given ID
optional_args: name, color
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 05:26:25.960" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 05:26:25.959" endtime="20220705 05:26:25.960"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 05:26:25.960" endtime="20220705 05:26:25.960"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 05:26:25.961" level="INFO">${url} = labels/62c3cb819ed6a9100b65482b</msg>
<status status="PASS" starttime="20220705 05:26:25.960" endtime="20220705 05:26:25.961"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 05:26:26.129" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 05:26:25.961" endtime="20220705 05:26:26.129"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 05:26:26.130" endtime="20220705 05:26:26.130"/>
</return>
<msg timestamp="20220705 05:26:26.130" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 05:26:25.959" endtime="20220705 05:26:26.130"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 05:26:26.130" endtime="20220705 05:26:26.130"/>
</return>
<msg timestamp="20220705 05:26:26.130" level="INFO">${new_response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 05:26:25.958" endtime="20220705 05:26:26.130"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${NEW_LABEL_COLOR}</var>
<arg>${new_response}</arg>
<arg>color</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 05:26:26.131" endtime="20220705 05:26:26.131"/>
</return>
<msg timestamp="20220705 05:26:26.132" level="INFO">${NEW_LABEL_COLOR} = orange</msg>
<status status="PASS" starttime="20220705 05:26:26.131" endtime="20220705 05:26:26.132"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${NEW_LABEL_NAME}</var>
<arg>${new_response}</arg>
<arg>name</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 05:26:26.132" endtime="20220705 05:26:26.132"/>
</return>
<msg timestamp="20220705 05:26:26.134" level="INFO">${NEW_LABEL_NAME} = label3</msg>
<status status="PASS" starttime="20220705 05:26:26.132" endtime="20220705 05:26:26.134"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${NEW_LABEL_COLOR}</arg>
<arg>orange</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220705 05:26:26.134" endtime="20220705 05:26:26.134"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${NEW_LABEL_NAME}</arg>
<arg>label3</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220705 05:26:26.134" endtime="20220705 05:26:26.134"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Label</arg>
<arg>${LABEL_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Label" library="Label">
<arg>${LABEL_ID}</arg>
<doc>Deletes the label with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 05:26:26.137" level="INFO">${url} = labels/62c3cb819ed6a9100b65482b</msg>
<status status="PASS" starttime="20220705 05:26:26.136" endtime="20220705 05:26:26.137"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 05:26:26.323" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 05:26:26.137" endtime="20220705 05:26:26.323"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 05:26:26.323" endtime="20220705 05:26:26.323"/>
</return>
<msg timestamp="20220705 05:26:26.323" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 05:26:26.136" endtime="20220705 05:26:26.323"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 05:26:26.323" endtime="20220705 05:26:26.323"/>
</return>
<status status="PASS" starttime="20220705 05:26:26.135" endtime="20220705 05:26:26.324"/>
</kw>
<status status="PASS" starttime="20220705 05:26:26.135" endtime="20220705 05:26:26.324"/>
</kw>
<doc>Verify that a label's name and color can be updated through API</doc>
<tag>api</tag>
<tag>label.update</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220705 05:26:25.797" endtime="20220705 05:26:26.324"/>
</test>
<test id="s1-s1-s4-t3" name="Delete label on board" line="41">
<kw name="Create A Label" library="Label">
<var>${response}</var>
<arg>name</arg>
<arg>label2</arg>
<arg>color</arg>
<arg>yellow</arg>
<doc>Creates a new label in the given board.
required_args: idBoard
optional_args: name, color
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>idBoard</arg>
<arg>${idBoard}</arg>
<arg>@{optional_args}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 05:26:26.327" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 05:26:26.327" endtime="20220705 05:26:26.327"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 05:26:26.327" endtime="20220705 05:26:26.327"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 05:26:26.328" level="INFO">${url} = labels/</msg>
<status status="PASS" starttime="20220705 05:26:26.327" endtime="20220705 05:26:26.328"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 05:26:26.503" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 05:26:26.328" endtime="20220705 05:26:26.503"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 05:26:26.503" endtime="20220705 05:26:26.503"/>
</return>
<msg timestamp="20220705 05:26:26.503" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 05:26:26.326" endtime="20220705 05:26:26.503"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 05:26:26.503" endtime="20220705 05:26:26.504"/>
</return>
<msg timestamp="20220705 05:26:26.504" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 05:26:26.325" endtime="20220705 05:26:26.504"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${LABEL_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 05:26:26.504" endtime="20220705 05:26:26.504"/>
</return>
<msg timestamp="20220705 05:26:26.505" level="INFO">${LABEL_ID} = 62c3cb8231c3b28721fab12d</msg>
<status status="PASS" starttime="20220705 05:26:26.504" endtime="20220705 05:26:26.505"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Label</arg>
<arg>${LABEL_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Label" library="Label">
<arg>${LABEL_ID}</arg>
<doc>Deletes the label with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 05:26:26.508" level="INFO">${url} = labels/62c3cb8231c3b28721fab12d</msg>
<status status="PASS" starttime="20220705 05:26:26.507" endtime="20220705 05:26:26.508"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 05:26:26.681" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 05:26:26.508" endtime="20220705 05:26:26.681"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 05:26:26.681" endtime="20220705 05:26:26.681"/>
</return>
<msg timestamp="20220705 05:26:26.682" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 05:26:26.507" endtime="20220705 05:26:26.682"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 05:26:26.682" endtime="20220705 05:26:26.682"/>
</return>
<status status="PASS" starttime="20220705 05:26:26.506" endtime="20220705 05:26:26.682"/>
</kw>
<status status="PASS" starttime="20220705 05:26:26.506" endtime="20220705 05:26:26.682"/>
</kw>
<kw name="Get A Label" library="Label">
<arg>${LABEL_ID}</arg>
<arg>status_code=404</arg>
<doc>Gets the label with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 05:26:26.684" level="INFO">${url} = labels/62c3cb8231c3b28721fab12d</msg>
<status status="PASS" starttime="20220705 05:26:26.684" endtime="20220705 05:26:26.684"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 05:26:26.786" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220705 05:26:26.684" endtime="20220705 05:26:26.786"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 05:26:26.786" endtime="20220705 05:26:26.786"/>
</return>
<msg timestamp="20220705 05:26:26.787" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220705 05:26:26.683" endtime="20220705 05:26:26.787"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 05:26:26.787" endtime="20220705 05:26:26.787"/>
</return>
<status status="PASS" starttime="20220705 05:26:26.682" endtime="20220705 05:26:26.787"/>
</kw>
<doc>Verify that a label can be deleted through API</doc>
<tag>api</tag>
<tag>label.delete</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220705 05:26:26.324" endtime="20220705 05:26:26.787"/>
</test>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Teardown Board</arg>
<arg>Delete All Sessions</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Teardown Board">
<doc>Delete the board created for this session.</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 05:26:26.791" level="INFO">${url} = boards/62c3cb8100717f6aab82580d</msg>
<status status="PASS" starttime="20220705 05:26:26.790" endtime="20220705 05:26:26.791"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 05:26:27.164" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 05:26:26.791" endtime="20220705 05:26:27.164"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 05:26:27.165" endtime="20220705 05:26:27.165"/>
</return>
<msg timestamp="20220705 05:26:27.165" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 05:26:26.789" endtime="20220705 05:26:27.165"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 05:26:27.165" endtime="20220705 05:26:27.165"/>
</return>
<status status="PASS" starttime="20220705 05:26:26.789" endtime="20220705 05:26:27.165"/>
</kw>
<status status="PASS" starttime="20220705 05:26:26.789" endtime="20220705 05:26:27.165"/>
</kw>
<status status="PASS" starttime="20220705 05:26:26.788" endtime="20220705 05:26:27.166"/>
</kw>
<kw name="Delete All Sessions" library="request_own_library">
<status status="PASS" starttime="20220705 05:26:27.166" endtime="20220705 05:26:27.167"/>
</kw>
<status status="PASS" starttime="20220705 05:26:26.788" endtime="20220705 05:26:27.167"/>
</kw>
<doc>Example Test with Trello API Cards</doc>
<status status="PASS" starttime="20220705 05:26:24.908" endtime="20220705 05:26:27.167"/>
</suite>
<suite id="s1-s1-s5" name="Trello Api Lists Tests" source="/trello/api/trello_api_lists_tests.robot">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Create Trello Session</arg>
<arg>Setup Board</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Create Trello Session" library="TrelloAPI">
<doc>Creates a Trello Session</doc>
<kw name="Create Session" library="request_own_library">
<arg>${API_BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<status status="PASS" starttime="20220705 05:26:27.181" endtime="20220705 05:26:27.181"/>
</kw>
<status status="PASS" starttime="20220705 05:26:27.181" endtime="20220705 05:26:27.182"/>
</kw>
<kw name="Setup Board">
<doc>Create a board and save it's id for the suite</doc>
<kw name="Create A Board" library="Board">
<var>${BOARD}</var>
<arg>TestBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 05:26:27.183" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 05:26:27.183" endtime="20220705 05:26:27.183"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 05:26:27.183" endtime="20220705 05:26:27.184"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 05:26:27.184" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220705 05:26:27.184" endtime="20220705 05:26:27.184"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 05:26:27.663" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 05:26:27.185" endtime="20220705 05:26:27.663"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 05:26:27.663" endtime="20220705 05:26:27.663"/>
</return>
<msg timestamp="20220705 05:26:27.664" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 05:26:27.182" endtime="20220705 05:26:27.664"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 05:26:27.664" endtime="20220705 05:26:27.664"/>
</return>
<msg timestamp="20220705 05:26:27.664" level="INFO">${BOARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 05:26:27.182" endtime="20220705 05:26:27.664"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Set Suite Variable</arg>
<arg>\${TEST_SUITE_BOARD_ID}</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_BOARD_ID}</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220705 05:26:27.666" level="INFO">${TEST_SUITE_BOARD_ID} = 62c3cb8389dff915374af94d</msg>
<status status="PASS" starttime="20220705 05:26:27.665" endtime="20220705 05:26:27.666"/>
</kw>
<status status="PASS" starttime="20220705 05:26:27.664" endtime="20220705 05:26:27.666"/>
</kw>
<status status="PASS" starttime="20220705 05:26:27.182" endtime="20220705 05:26:27.666"/>
</kw>
<status status="PASS" starttime="20220705 05:26:27.180" endtime="20220705 05:26:27.666"/>
</kw>
<test id="s1-s1-s5-t1" name="CREATE a list" line="13">
<kw name="Create A List" library="List">
<var>${response}</var>
<arg>NewList</arg>
<doc>Creates a new List
board id
name the list will have
optional_args: idListSource, pos, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>list</arg>
<arg>name</arg>
<arg>${name}</arg>
<arg>idBoard</arg>
<arg>${idBoard}</arg>
<arg>@{optional_args}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 05:26:27.669" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 05:26:27.668" endtime="20220705 05:26:27.669"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 05:26:27.669" endtime="20220705 05:26:27.669"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 05:26:27.670" level="INFO">${url} = lists/</msg>
<status status="PASS" starttime="20220705 05:26:27.669" endtime="20220705 05:26:27.670"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 05:26:28.008" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 05:26:27.670" endtime="20220705 05:26:28.008"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 05:26:28.008" endtime="20220705 05:26:28.008"/>
</return>
<msg timestamp="20220705 05:26:28.009" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 05:26:27.668" endtime="20220705 05:26:28.009"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 05:26:28.009" endtime="20220705 05:26:28.009"/>
</return>
<msg timestamp="20220705 05:26:28.009" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 05:26:27.667" endtime="20220705 05:26:28.009"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>list</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 05:26:28.010" endtime="20220705 05:26:28.012"/>
</kw>
<status status="PASS" starttime="20220705 05:26:28.009" endtime="20220705 05:26:28.012"/>
</kw>
<doc>Verify that a list can be created through API</doc>
<tag>api</tag>
<tag>list.create</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220705 05:26:27.666" endtime="20220705 05:26:28.013"/>
</test>
<test id="s1-s1-s5-t2" name="UPDATE a list" line="19">
<kw name="Create A List" library="List">
<var>${response}</var>
<arg>NewList</arg>
<doc>Creates a new List
board id
name the list will have
optional_args: idListSource, pos, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>list</arg>
<arg>name</arg>
<arg>${name}</arg>
<arg>idBoard</arg>
<arg>${idBoard}</arg>
<arg>@{optional_args}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 05:26:28.016" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 05:26:28.015" endtime="20220705 05:26:28.016"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 05:26:28.016" endtime="20220705 05:26:28.016"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 05:26:28.017" level="INFO">${url} = lists/</msg>
<status status="PASS" starttime="20220705 05:26:28.016" endtime="20220705 05:26:28.017"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 05:26:28.399" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 05:26:28.017" endtime="20220705 05:26:28.399"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 05:26:28.399" endtime="20220705 05:26:28.399"/>
</return>
<msg timestamp="20220705 05:26:28.399" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 05:26:28.015" endtime="20220705 05:26:28.399"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 05:26:28.399" endtime="20220705 05:26:28.399"/>
</return>
<msg timestamp="20220705 05:26:28.400" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 05:26:28.014" endtime="20220705 05:26:28.400"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>list</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 05:26:28.401" endtime="20220705 05:26:28.403"/>
</kw>
<status status="PASS" starttime="20220705 05:26:28.400" endtime="20220705 05:26:28.403"/>
</kw>
<kw name="Update A List" library="List">
<arg>${response.json()}[id]</arg>
<arg>name</arg>
<arg>NewName</arg>
<doc>Updates the board with the given ID
optional_args: name, idListSource, pos, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>list</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 05:26:28.405" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 05:26:28.405" endtime="20220705 05:26:28.406"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 05:26:28.406" endtime="20220705 05:26:28.406"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 05:26:28.407" level="INFO">${url} = lists/62c3cb8432defb626ef84623</msg>
<status status="PASS" starttime="20220705 05:26:28.406" endtime="20220705 05:26:28.407"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 05:26:28.550" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 05:26:28.407" endtime="20220705 05:26:28.550"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 05:26:28.550" endtime="20220705 05:26:28.550"/>
</return>
<msg timestamp="20220705 05:26:28.551" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 05:26:28.404" endtime="20220705 05:26:28.551"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 05:26:28.551" endtime="20220705 05:26:28.551"/>
</return>
<status status="PASS" starttime="20220705 05:26:28.403" endtime="20220705 05:26:28.551"/>
</kw>
<kw name="Get A List" library="List">
<var>${new_response}</var>
<arg>${response.json()}[id]</arg>
<doc>Gets the List with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>list</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 05:26:28.554" level="INFO">${url} = lists/62c3cb8432defb626ef84623</msg>
<status status="PASS" starttime="20220705 05:26:28.553" endtime="20220705 05:26:28.554"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 05:26:28.681" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 05:26:28.554" endtime="20220705 05:26:28.681"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 05:26:28.681" endtime="20220705 05:26:28.682"/>
</return>
<msg timestamp="20220705 05:26:28.682" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 05:26:28.552" endtime="20220705 05:26:28.682"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 05:26:28.682" endtime="20220705 05:26:28.682"/>
</return>
<msg timestamp="20220705 05:26:28.682" level="INFO">${new_response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 05:26:28.551" endtime="20220705 05:26:28.682"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${new_response}</arg>
<arg>list</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 05:26:28.683" endtime="20220705 05:26:28.685"/>
</kw>
<status status="PASS" starttime="20220705 05:26:28.683" endtime="20220705 05:26:28.685"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${new_response.json()}[name]</arg>
<arg>NewName</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220705 05:26:28.685" endtime="20220705 05:26:28.686"/>
</kw>
<doc>Verify that a lists name can be updated through API</doc>
<tag>api</tag>
<tag>list.update</tag>
<tag>regression</tag>
<status status="PASS" starttime="20220705 05:26:28.013" endtime="20220705 05:26:28.686"/>
</test>
<test id="s1-s1-s5-t3" name="ARCHIVE A list" line="29">
<kw name="Create A List" library="List">
<var>${response}</var>
<arg>NewList</arg>
<doc>Creates a new List
board id
name the list will have
optional_args: idListSource, pos, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>list</arg>
<arg>name</arg>
<arg>${name}</arg>
<arg>idBoard</arg>
<arg>${idBoard}</arg>
<arg>@{optional_args}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 05:26:28.693" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 05:26:28.692" endtime="20220705 05:26:28.693"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 05:26:28.693" endtime="20220705 05:26:28.693"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 05:26:28.694" level="INFO">${url} = lists/</msg>
<status status="PASS" starttime="20220705 05:26:28.693" endtime="20220705 05:26:28.694"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 05:26:28.860" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 05:26:28.694" endtime="20220705 05:26:28.860"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 05:26:28.861" endtime="20220705 05:26:28.861"/>
</return>
<msg timestamp="20220705 05:26:28.861" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 05:26:28.692" endtime="20220705 05:26:28.861"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 05:26:28.861" endtime="20220705 05:26:28.861"/>
</return>
<msg timestamp="20220705 05:26:28.861" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 05:26:28.687" endtime="20220705 05:26:28.862"/>
</kw>
<kw name="Archive A List" library="List">
<arg>${response.json()}[id]</arg>
<doc>Deletes the list with the given ID</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>archive_list</arg>
<arg>${id}</arg>
<arg>value</arg>
<arg>true</arg>
<arg>status_code=${status_code}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 05:26:28.864" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 05:26:28.864" endtime="20220705 05:26:28.864"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 05:26:28.864" endtime="20220705 05:26:28.865"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 05:26:28.865" level="INFO">${url} = lists/62c3cb847cae588a30473e26/closed</msg>
<status status="PASS" starttime="20220705 05:26:28.865" endtime="20220705 05:26:28.865"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 05:26:29.021" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 05:26:28.865" endtime="20220705 05:26:29.021"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 05:26:29.021" endtime="20220705 05:26:29.021"/>
</return>
<msg timestamp="20220705 05:26:29.021" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 05:26:28.863" endtime="20220705 05:26:29.021"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 05:26:29.021" endtime="20220705 05:26:29.022"/>
</return>
<status status="PASS" starttime="20220705 05:26:28.862" endtime="20220705 05:26:29.022"/>
</kw>
<kw name="Get A List" library="List">
<var>${new_response}</var>
<arg>${response.json()}[id]</arg>
<doc>Gets the List with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>list</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 05:26:29.024" level="INFO">${url} = lists/62c3cb847cae588a30473e26</msg>
<status status="PASS" starttime="20220705 05:26:29.024" endtime="20220705 05:26:29.024"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 05:26:29.136" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 05:26:29.024" endtime="20220705 05:26:29.136"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 05:26:29.136" endtime="20220705 05:26:29.136"/>
</return>
<msg timestamp="20220705 05:26:29.136" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 05:26:29.023" endtime="20220705 05:26:29.136"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 05:26:29.136" endtime="20220705 05:26:29.136"/>
</return>
<msg timestamp="20220705 05:26:29.136" level="INFO">${new_response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 05:26:29.022" endtime="20220705 05:26:29.136"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${new_response.json()}[closed]</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220705 05:26:29.137" endtime="20220705 05:26:29.137"/>
</kw>
<doc>Verify that a list can be archived through API</doc>
<tag>api</tag>
<tag>list.archive</tag>
<tag>regression</tag>
<status status="PASS" starttime="20220705 05:26:28.687" endtime="20220705 05:26:29.138"/>
</test>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Teardown Board</arg>
<arg>Delete All Sessions</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Teardown Board">
<doc>Delete the board created for this suite.</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 05:26:29.141" level="INFO">${url} = boards/62c3cb8389dff915374af94d</msg>
<status status="PASS" starttime="20220705 05:26:29.140" endtime="20220705 05:26:29.141"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 05:26:29.564" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 05:26:29.141" endtime="20220705 05:26:29.565"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 05:26:29.565" endtime="20220705 05:26:29.565"/>
</return>
<msg timestamp="20220705 05:26:29.565" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 05:26:29.140" endtime="20220705 05:26:29.565"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 05:26:29.565" endtime="20220705 05:26:29.565"/>
</return>
<status status="PASS" starttime="20220705 05:26:29.139" endtime="20220705 05:26:29.565"/>
</kw>
<status status="PASS" starttime="20220705 05:26:29.139" endtime="20220705 05:26:29.566"/>
</kw>
<status status="PASS" starttime="20220705 05:26:29.138" endtime="20220705 05:26:29.566"/>
</kw>
<kw name="Delete All Sessions" library="request_own_library">
<status status="PASS" starttime="20220705 05:26:29.566" endtime="20220705 05:26:29.567"/>
</kw>
<status status="PASS" starttime="20220705 05:26:29.138" endtime="20220705 05:26:29.567"/>
</kw>
<doc>Example Test with Trello API lists</doc>
<status status="PASS" starttime="20220705 05:26:27.169" endtime="20220705 05:26:29.567"/>
</suite>
<status status="PASS" starttime="20220705 05:26:13.712" endtime="20220705 05:26:29.570"/>
</suite>
<status status="PASS" starttime="20220705 05:26:13.687" endtime="20220705 05:26:29.573"/>
</suite>
<statistics>
<total>
<stat pass="18" fail="0" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="18" fail="0" skip="0">api</stat>
<stat pass="1" fail="0" skip="0">board.create</stat>
<stat pass="1" fail="0" skip="0">board.delete</stat>
<stat pass="1" fail="0" skip="0">board.get</stat>
<stat pass="2" fail="0" skip="0">board.update</stat>
<stat pass="1" fail="0" skip="0">card.close</stat>
<stat pass="1" fail="0" skip="0">card.create</stat>
<stat pass="1" fail="0" skip="0">card.delete</stat>
<stat pass="1" fail="0" skip="0">card.update</stat>
<stat pass="1" fail="0" skip="0">checklist.create</stat>
<stat pass="1" fail="0" skip="0">checklist.delete</stat>
<stat pass="1" fail="0" skip="0">checklist.update</stat>
<stat pass="1" fail="0" skip="0">label.create</stat>
<stat pass="1" fail="0" skip="0">label.delete</stat>
<stat pass="1" fail="0" skip="0">label.get</stat>
<stat pass="1" fail="0" skip="0">label.update</stat>
<stat pass="1" fail="0" skip="0">list.archive</stat>
<stat pass="1" fail="0" skip="0">list.create</stat>
<stat pass="1" fail="0" skip="0">list.update</stat>
<stat pass="5" fail="0" skip="0">regression</stat>
<stat pass="13" fail="0" skip="0">smoke</stat>
</tag>
<suite>
<stat pass="18" fail="0" skip="0" id="s1" name="Trello">Trello</stat>
<stat pass="18" fail="0" skip="0" id="s1-s1" name="Api">Trello.Api</stat>
<stat pass="5" fail="0" skip="0" id="s1-s1-s1" name="Trello Api Boards Tests">Trello.Api.Trello Api Boards Tests</stat>
<stat pass="4" fail="0" skip="0" id="s1-s1-s2" name="Trello Api Cards Tests">Trello.Api.Trello Api Cards Tests</stat>
<stat pass="3" fail="0" skip="0" id="s1-s1-s3" name="Trello Api Checklists Tests">Trello.Api.Trello Api Checklists Tests</stat>
<stat pass="3" fail="0" skip="0" id="s1-s1-s4" name="Trello Api Labels Tests">Trello.Api.Trello Api Labels Tests</stat>
<stat pass="3" fail="0" skip="0" id="s1-s1-s5" name="Trello Api Lists Tests">Trello.Api.Trello Api Lists Tests</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
