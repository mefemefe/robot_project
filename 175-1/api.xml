<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 5.0.1 (Python 3.10.5 on linux)" generated="20220708 05:19:27.713" rpa="false" schemaversion="3">
<suite id="s1" name="Trello" source="/trello">
<suite id="s1-s1" name="Api" source="/trello/api">
<suite id="s1-s1-s1" name="Trello Api Boards Tests" source="/trello/api/trello_api_boards_tests.robot">
<kw name="Create Trello Session" library="TrelloAPI" type="SETUP">
<doc>Creates a Trello Session</doc>
<kw name="Create Session" library="request_own_library">
<arg>${API_BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<status status="PASS" starttime="20220708 05:19:27.835" endtime="20220708 05:19:27.835"/>
</kw>
<status status="PASS" starttime="20220708 05:19:27.834" endtime="20220708 05:19:27.835"/>
</kw>
<test id="s1-s1-s1-t1" name="CREATE a board" line="9">
<kw name="Create A Board" library="Board">
<var>${response}</var>
<arg>NewBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220708 05:19:27.837" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220708 05:19:27.837" endtime="20220708 05:19:27.837"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220708 05:19:27.837" endtime="20220708 05:19:27.838"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220708 05:19:27.838" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220708 05:19:27.838" endtime="20220708 05:19:27.838"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220708 05:19:28.303" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 05:19:27.838" endtime="20220708 05:19:28.303"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 05:19:28.303" endtime="20220708 05:19:28.303"/>
</return>
<msg timestamp="20220708 05:19:28.303" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 05:19:27.837" endtime="20220708 05:19:28.303"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 05:19:28.304" endtime="20220708 05:19:28.304"/>
</return>
<msg timestamp="20220708 05:19:28.304" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 05:19:27.836" endtime="20220708 05:19:28.304"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>board</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220708 05:19:28.304" endtime="20220708 05:19:28.309"/>
</kw>
<status status="PASS" starttime="20220708 05:19:28.304" endtime="20220708 05:19:28.309"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${response.json()}[id]</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${response.json()}[id]</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220708 05:19:28.311" level="INFO">${url} = boards/62c7be60e504b6105bb1010d</msg>
<status status="PASS" starttime="20220708 05:19:28.310" endtime="20220708 05:19:28.311"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220708 05:19:28.687" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 05:19:28.311" endtime="20220708 05:19:28.687"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 05:19:28.687" endtime="20220708 05:19:28.687"/>
</return>
<msg timestamp="20220708 05:19:28.688" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 05:19:28.310" endtime="20220708 05:19:28.688"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 05:19:28.688" endtime="20220708 05:19:28.688"/>
</return>
<status status="PASS" starttime="20220708 05:19:28.309" endtime="20220708 05:19:28.688"/>
</kw>
<status status="PASS" starttime="20220708 05:19:28.309" endtime="20220708 05:19:28.688"/>
</kw>
<doc>Verify that a board can be create through API</doc>
<tag>api</tag>
<tag>board.create</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220708 05:19:27.836" endtime="20220708 05:19:28.688"/>
</test>
<test id="s1-s1-s1-t2" name="UPDATE a Board's name" line="16">
<kw name="Create A Board" library="Board">
<var>${response}</var>
<arg>NewBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220708 05:19:28.690" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220708 05:19:28.690" endtime="20220708 05:19:28.690"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220708 05:19:28.690" endtime="20220708 05:19:28.691"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220708 05:19:28.691" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220708 05:19:28.691" endtime="20220708 05:19:28.691"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220708 05:19:28.950" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 05:19:28.691" endtime="20220708 05:19:28.951"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 05:19:28.951" endtime="20220708 05:19:28.951"/>
</return>
<msg timestamp="20220708 05:19:28.951" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 05:19:28.690" endtime="20220708 05:19:28.951"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 05:19:28.951" endtime="20220708 05:19:28.951"/>
</return>
<msg timestamp="20220708 05:19:28.951" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 05:19:28.689" endtime="20220708 05:19:28.951"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>board</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220708 05:19:28.952" endtime="20220708 05:19:28.955"/>
</kw>
<status status="PASS" starttime="20220708 05:19:28.951" endtime="20220708 05:19:28.956"/>
</kw>
<kw name="Update A Board" library="Board">
<arg>${response.json()}[id]</arg>
<arg>name</arg>
<arg>NewName</arg>
<doc>Updates the board with the given ID
optional_args: name, desc, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220708 05:19:28.957" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220708 05:19:28.957" endtime="20220708 05:19:28.957"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220708 05:19:28.957" endtime="20220708 05:19:28.957"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220708 05:19:28.958" level="INFO">${url} = boards/62c7be6027ee7b161efe92b1</msg>
<status status="PASS" starttime="20220708 05:19:28.957" endtime="20220708 05:19:28.958"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220708 05:19:29.118" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 05:19:28.958" endtime="20220708 05:19:29.118"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 05:19:29.118" endtime="20220708 05:19:29.118"/>
</return>
<msg timestamp="20220708 05:19:29.119" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 05:19:28.956" endtime="20220708 05:19:29.119"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 05:19:29.119" endtime="20220708 05:19:29.119"/>
</return>
<status status="PASS" starttime="20220708 05:19:28.956" endtime="20220708 05:19:29.119"/>
</kw>
<kw name="Get A Board" library="Board">
<var>${new_response}</var>
<arg>${response.json()}[id]</arg>
<doc>Gets the Board with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220708 05:19:29.121" level="INFO">${url} = boards/62c7be6027ee7b161efe92b1</msg>
<status status="PASS" starttime="20220708 05:19:29.120" endtime="20220708 05:19:29.121"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220708 05:19:29.237" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 05:19:29.121" endtime="20220708 05:19:29.237"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 05:19:29.237" endtime="20220708 05:19:29.237"/>
</return>
<msg timestamp="20220708 05:19:29.238" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 05:19:29.120" endtime="20220708 05:19:29.238"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 05:19:29.238" endtime="20220708 05:19:29.238"/>
</return>
<msg timestamp="20220708 05:19:29.238" level="INFO">${new_response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 05:19:29.119" endtime="20220708 05:19:29.238"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${new_response}</arg>
<arg>board</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220708 05:19:29.238" endtime="20220708 05:19:29.242"/>
</kw>
<status status="PASS" starttime="20220708 05:19:29.238" endtime="20220708 05:19:29.242"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${new_response.json()}[name]</arg>
<arg>NewName</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220708 05:19:29.242" endtime="20220708 05:19:29.243"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${response.json()}[id]</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${response.json()}[id]</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220708 05:19:29.245" level="INFO">${url} = boards/62c7be6027ee7b161efe92b1</msg>
<status status="PASS" starttime="20220708 05:19:29.245" endtime="20220708 05:19:29.245"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220708 05:19:29.652" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 05:19:29.245" endtime="20220708 05:19:29.652"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 05:19:29.652" endtime="20220708 05:19:29.652"/>
</return>
<msg timestamp="20220708 05:19:29.653" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 05:19:29.244" endtime="20220708 05:19:29.653"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 05:19:29.653" endtime="20220708 05:19:29.653"/>
</return>
<status status="PASS" starttime="20220708 05:19:29.243" endtime="20220708 05:19:29.653"/>
</kw>
<status status="PASS" starttime="20220708 05:19:29.243" endtime="20220708 05:19:29.653"/>
</kw>
<doc>Verify that a board's name can be updated through API</doc>
<tag>api</tag>
<tag>board.update</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220708 05:19:28.688" endtime="20220708 05:19:29.653"/>
</test>
<test id="s1-s1-s1-t3" name="DELETE A Board" line="27">
<kw name="Create A Board" library="Board">
<var>${response}</var>
<arg>NewBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220708 05:19:29.655" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220708 05:19:29.655" endtime="20220708 05:19:29.655"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220708 05:19:29.655" endtime="20220708 05:19:29.655"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220708 05:19:29.656" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220708 05:19:29.655" endtime="20220708 05:19:29.656"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220708 05:19:29.912" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 05:19:29.656" endtime="20220708 05:19:29.912"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 05:19:29.912" endtime="20220708 05:19:29.912"/>
</return>
<msg timestamp="20220708 05:19:29.912" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 05:19:29.654" endtime="20220708 05:19:29.912"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 05:19:29.912" endtime="20220708 05:19:29.912"/>
</return>
<msg timestamp="20220708 05:19:29.912" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 05:19:29.654" endtime="20220708 05:19:29.912"/>
</kw>
<kw name="Delete A Board" library="Board">
<arg>${response.json()}[id]</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220708 05:19:29.914" level="INFO">${url} = boards/62c7be61e2e64b0b9166dc2a</msg>
<status status="PASS" starttime="20220708 05:19:29.914" endtime="20220708 05:19:29.914"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220708 05:19:30.321" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 05:19:29.914" endtime="20220708 05:19:30.321"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 05:19:30.321" endtime="20220708 05:19:30.321"/>
</return>
<msg timestamp="20220708 05:19:30.322" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 05:19:29.913" endtime="20220708 05:19:30.322"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 05:19:30.322" endtime="20220708 05:19:30.322"/>
</return>
<status status="PASS" starttime="20220708 05:19:29.913" endtime="20220708 05:19:30.322"/>
</kw>
<kw name="Get A Board" library="Board">
<arg>${response.json()}[id]</arg>
<arg>status_code=404</arg>
<doc>Gets the Board with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220708 05:19:30.324" level="INFO">${url} = boards/62c7be61e2e64b0b9166dc2a</msg>
<status status="PASS" starttime="20220708 05:19:30.323" endtime="20220708 05:19:30.324"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220708 05:19:30.430" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220708 05:19:30.324" endtime="20220708 05:19:30.430"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 05:19:30.430" endtime="20220708 05:19:30.430"/>
</return>
<msg timestamp="20220708 05:19:30.430" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220708 05:19:30.323" endtime="20220708 05:19:30.430"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 05:19:30.430" endtime="20220708 05:19:30.430"/>
</return>
<status status="PASS" starttime="20220708 05:19:30.322" endtime="20220708 05:19:30.430"/>
</kw>
<doc>Verify that a board can be deleted through API</doc>
<tag>api</tag>
<tag>board.delete</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220708 05:19:29.653" endtime="20220708 05:19:30.430"/>
</test>
<test id="s1-s1-s1-t4" name="GET Information of A Board" line="34">
<kw name="Create A Board" library="Board">
<var>${response}</var>
<arg>BoardTest</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220708 05:19:30.432" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220708 05:19:30.432" endtime="20220708 05:19:30.432"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220708 05:19:30.432" endtime="20220708 05:19:30.433"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220708 05:19:30.433" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220708 05:19:30.433" endtime="20220708 05:19:30.433"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220708 05:19:30.707" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 05:19:30.433" endtime="20220708 05:19:30.707"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 05:19:30.707" endtime="20220708 05:19:30.707"/>
</return>
<msg timestamp="20220708 05:19:30.708" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 05:19:30.432" endtime="20220708 05:19:30.708"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 05:19:30.708" endtime="20220708 05:19:30.708"/>
</return>
<msg timestamp="20220708 05:19:30.708" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 05:19:30.431" endtime="20220708 05:19:30.708"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>board</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220708 05:19:30.709" endtime="20220708 05:19:30.712"/>
</kw>
<status status="PASS" starttime="20220708 05:19:30.708" endtime="20220708 05:19:30.712"/>
</kw>
<kw name="Get A Board" library="Board">
<var>${response2}</var>
<arg>${response.json()}[id]</arg>
<doc>Gets the Board with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220708 05:19:30.714" level="INFO">${url} = boards/62c7be629f144e5ad76561eb</msg>
<status status="PASS" starttime="20220708 05:19:30.714" endtime="20220708 05:19:30.714"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220708 05:19:30.827" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 05:19:30.714" endtime="20220708 05:19:30.827"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 05:19:30.827" endtime="20220708 05:19:30.827"/>
</return>
<msg timestamp="20220708 05:19:30.827" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 05:19:30.713" endtime="20220708 05:19:30.827"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 05:19:30.827" endtime="20220708 05:19:30.827"/>
</return>
<msg timestamp="20220708 05:19:30.828" level="INFO">${response2} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 05:19:30.713" endtime="20220708 05:19:30.828"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response2}</arg>
<arg>board</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220708 05:19:30.828" endtime="20220708 05:19:30.832"/>
</kw>
<status status="PASS" starttime="20220708 05:19:30.828" endtime="20220708 05:19:30.832"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${response2.json()}[name]</arg>
<arg>BoardTest</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220708 05:19:30.832" endtime="20220708 05:19:30.832"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${response.json()}[id]</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${response.json()}[id]</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220708 05:19:30.835" level="INFO">${url} = boards/62c7be629f144e5ad76561eb</msg>
<status status="PASS" starttime="20220708 05:19:30.834" endtime="20220708 05:19:30.835"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220708 05:19:31.233" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 05:19:30.835" endtime="20220708 05:19:31.233"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 05:19:31.233" endtime="20220708 05:19:31.233"/>
</return>
<msg timestamp="20220708 05:19:31.233" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 05:19:30.834" endtime="20220708 05:19:31.233"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 05:19:31.233" endtime="20220708 05:19:31.233"/>
</return>
<status status="PASS" starttime="20220708 05:19:30.833" endtime="20220708 05:19:31.233"/>
</kw>
<status status="PASS" starttime="20220708 05:19:30.833" endtime="20220708 05:19:31.233"/>
</kw>
<doc>Verify that a board's information can be accesed through API</doc>
<tag>api</tag>
<tag>board.get</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220708 05:19:30.431" endtime="20220708 05:19:31.233"/>
</test>
<test id="s1-s1-s1-t5" name="UPDATE a Board's description" line="45">
<kw name="Create A Board" library="Board">
<var>${response}</var>
<arg>NewBoardForTest</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220708 05:19:31.236" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220708 05:19:31.235" endtime="20220708 05:19:31.236"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220708 05:19:31.236" endtime="20220708 05:19:31.236"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220708 05:19:31.237" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220708 05:19:31.236" endtime="20220708 05:19:31.237"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220708 05:19:31.543" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 05:19:31.237" endtime="20220708 05:19:31.543"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 05:19:31.543" endtime="20220708 05:19:31.543"/>
</return>
<msg timestamp="20220708 05:19:31.543" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 05:19:31.235" endtime="20220708 05:19:31.543"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 05:19:31.543" endtime="20220708 05:19:31.543"/>
</return>
<msg timestamp="20220708 05:19:31.544" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 05:19:31.235" endtime="20220708 05:19:31.544"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>board</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220708 05:19:31.544" endtime="20220708 05:19:31.548"/>
</kw>
<status status="PASS" starttime="20220708 05:19:31.544" endtime="20220708 05:19:31.548"/>
</kw>
<kw name="Update A Board" library="Board">
<arg>${response.json()}[id]</arg>
<arg>desc</arg>
<arg>sampleDescription</arg>
<doc>Updates the board with the given ID
optional_args: name, desc, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220708 05:19:31.550" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220708 05:19:31.549" endtime="20220708 05:19:31.550"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220708 05:19:31.550" endtime="20220708 05:19:31.550"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220708 05:19:31.550" level="INFO">${url} = boards/62c7be6373840e5cf45665d5</msg>
<status status="PASS" starttime="20220708 05:19:31.550" endtime="20220708 05:19:31.550"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220708 05:19:31.746" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 05:19:31.550" endtime="20220708 05:19:31.746"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 05:19:31.746" endtime="20220708 05:19:31.746"/>
</return>
<msg timestamp="20220708 05:19:31.746" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 05:19:31.549" endtime="20220708 05:19:31.746"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 05:19:31.746" endtime="20220708 05:19:31.746"/>
</return>
<status status="PASS" starttime="20220708 05:19:31.548" endtime="20220708 05:19:31.747"/>
</kw>
<kw name="Get A Board" library="Board">
<var>${new_response}</var>
<arg>${response.json()}[id]</arg>
<doc>Gets the Board with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220708 05:19:31.748" level="INFO">${url} = boards/62c7be6373840e5cf45665d5</msg>
<status status="PASS" starttime="20220708 05:19:31.748" endtime="20220708 05:19:31.748"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220708 05:19:31.865" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 05:19:31.748" endtime="20220708 05:19:31.865"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 05:19:31.865" endtime="20220708 05:19:31.865"/>
</return>
<msg timestamp="20220708 05:19:31.866" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 05:19:31.748" endtime="20220708 05:19:31.866"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 05:19:31.866" endtime="20220708 05:19:31.866"/>
</return>
<msg timestamp="20220708 05:19:31.866" level="INFO">${new_response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 05:19:31.747" endtime="20220708 05:19:31.866"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${new_response.json()}[desc]</arg>
<arg>sampleDescription</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220708 05:19:31.866" endtime="20220708 05:19:31.867"/>
</kw>
<kw name="Update A Board" library="Board">
<arg>${response.json()}[id]</arg>
<arg>desc</arg>
<arg>updatedDescription</arg>
<doc>Updates the board with the given ID
optional_args: name, desc, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220708 05:19:31.868" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220708 05:19:31.868" endtime="20220708 05:19:31.868"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220708 05:19:31.869" endtime="20220708 05:19:31.869"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220708 05:19:31.869" level="INFO">${url} = boards/62c7be6373840e5cf45665d5</msg>
<status status="PASS" starttime="20220708 05:19:31.869" endtime="20220708 05:19:31.869"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220708 05:19:32.031" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 05:19:31.869" endtime="20220708 05:19:32.031"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 05:19:32.031" endtime="20220708 05:19:32.031"/>
</return>
<msg timestamp="20220708 05:19:32.031" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 05:19:31.868" endtime="20220708 05:19:32.031"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 05:19:32.031" endtime="20220708 05:19:32.031"/>
</return>
<status status="PASS" starttime="20220708 05:19:31.867" endtime="20220708 05:19:32.031"/>
</kw>
<kw name="Get A Board" library="Board">
<var>${new_response2}</var>
<arg>${response.json()}[id]</arg>
<doc>Gets the Board with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220708 05:19:32.033" level="INFO">${url} = boards/62c7be6373840e5cf45665d5</msg>
<status status="PASS" starttime="20220708 05:19:32.033" endtime="20220708 05:19:32.033"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220708 05:19:32.160" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 05:19:32.033" endtime="20220708 05:19:32.160"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 05:19:32.160" endtime="20220708 05:19:32.160"/>
</return>
<msg timestamp="20220708 05:19:32.160" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 05:19:32.032" endtime="20220708 05:19:32.160"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 05:19:32.160" endtime="20220708 05:19:32.160"/>
</return>
<msg timestamp="20220708 05:19:32.161" level="INFO">${new_response2} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 05:19:32.032" endtime="20220708 05:19:32.161"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${new_response2.json()}[desc]</arg>
<arg>updatedDescription</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220708 05:19:32.161" endtime="20220708 05:19:32.161"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${response.json()}[id]</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${response.json()}[id]</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220708 05:19:32.163" level="INFO">${url} = boards/62c7be6373840e5cf45665d5</msg>
<status status="PASS" starttime="20220708 05:19:32.163" endtime="20220708 05:19:32.163"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220708 05:19:32.535" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 05:19:32.164" endtime="20220708 05:19:32.535"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 05:19:32.535" endtime="20220708 05:19:32.535"/>
</return>
<msg timestamp="20220708 05:19:32.535" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 05:19:32.163" endtime="20220708 05:19:32.535"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 05:19:32.535" endtime="20220708 05:19:32.535"/>
</return>
<status status="PASS" starttime="20220708 05:19:32.162" endtime="20220708 05:19:32.535"/>
</kw>
<status status="PASS" starttime="20220708 05:19:32.162" endtime="20220708 05:19:32.535"/>
</kw>
<doc>Verify that a board's description can be updated through API</doc>
<tag>api</tag>
<tag>board.update</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220708 05:19:31.234" endtime="20220708 05:19:32.535"/>
</test>
<kw name="Delete All Sessions" library="request_own_library" type="TEARDOWN">
<status status="PASS" starttime="20220708 05:19:32.536" endtime="20220708 05:19:32.537"/>
</kw>
<doc>Example Test with Trello API Boards</doc>
<status status="PASS" starttime="20220708 05:19:27.732" endtime="20220708 05:19:32.537"/>
</suite>
<suite id="s1-s1-s2" name="Trello Api Cards Tests" source="/trello/api/trello_api_cards_tests.robot">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Create Trello Session</arg>
<arg>Setup Board And List</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Create Trello Session" library="TrelloAPI">
<doc>Creates a Trello Session</doc>
<kw name="Create Session" library="request_own_library">
<arg>${API_BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<status status="PASS" starttime="20220708 05:19:32.548" endtime="20220708 05:19:32.548"/>
</kw>
<status status="PASS" starttime="20220708 05:19:32.547" endtime="20220708 05:19:32.548"/>
</kw>
<kw name="Setup Board And List">
<doc>Create a board and save its ID and its first list's ID</doc>
<kw name="Create A Board" library="Board">
<var>${BOARD}</var>
<arg>TestBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220708 05:19:32.549" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220708 05:19:32.549" endtime="20220708 05:19:32.549"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220708 05:19:32.549" endtime="20220708 05:19:32.549"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220708 05:19:32.550" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220708 05:19:32.549" endtime="20220708 05:19:32.550"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220708 05:19:32.855" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 05:19:32.550" endtime="20220708 05:19:32.855"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 05:19:32.855" endtime="20220708 05:19:32.855"/>
</return>
<msg timestamp="20220708 05:19:32.855" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 05:19:32.548" endtime="20220708 05:19:32.855"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 05:19:32.855" endtime="20220708 05:19:32.855"/>
</return>
<msg timestamp="20220708 05:19:32.856" level="INFO">${BOARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 05:19:32.548" endtime="20220708 05:19:32.856"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_BOARD_ID}</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220708 05:19:32.856" level="INFO">${TEST_SUITE_BOARD_ID} = 62c7be648da8a8659bb9c825</msg>
<status status="PASS" starttime="20220708 05:19:32.856" endtime="20220708 05:19:32.857"/>
</kw>
<kw name="Get Lists On A Board" library="Board">
<var>${LISTS}</var>
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Get all the lists in a board</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>lists_on_board</arg>
<arg>${id}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220708 05:19:32.858" level="INFO">${url} = boards/62c7be648da8a8659bb9c825/lists/</msg>
<status status="PASS" starttime="20220708 05:19:32.857" endtime="20220708 05:19:32.858"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220708 05:19:32.968" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 05:19:32.858" endtime="20220708 05:19:32.968"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 05:19:32.968" endtime="20220708 05:19:32.968"/>
</return>
<msg timestamp="20220708 05:19:32.968" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 05:19:32.857" endtime="20220708 05:19:32.968"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 05:19:32.968" endtime="20220708 05:19:32.968"/>
</return>
<msg timestamp="20220708 05:19:32.969" level="INFO">${LISTS} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 05:19:32.857" endtime="20220708 05:19:32.969"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_LIST_ID}</arg>
<arg>${LISTS.json()}[0][id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220708 05:19:32.969" level="INFO">${TEST_SUITE_LIST_ID} = 62c7be648da8a8659bb9c82c</msg>
<status status="PASS" starttime="20220708 05:19:32.969" endtime="20220708 05:19:32.970"/>
</kw>
<status status="PASS" starttime="20220708 05:19:32.548" endtime="20220708 05:19:32.970"/>
</kw>
<status status="PASS" starttime="20220708 05:19:32.547" endtime="20220708 05:19:32.970"/>
</kw>
<test id="s1-s1-s2-t1" name="Verify A Card Can Be Created" line="13">
<kw name="Create A Card" library="Card">
<var>${response}</var>
<arg>name</arg>
<arg>RFCard2</arg>
<doc>Creates a new card in the given list.
required_args: listId
optional_args: name, desc, pos, idCardSource, idLabels, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>@{optional_args}</arg>
<arg>idList</arg>
<arg>${idList}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220708 05:19:32.971" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220708 05:19:32.971" endtime="20220708 05:19:32.971"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220708 05:19:32.972" endtime="20220708 05:19:32.972"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220708 05:19:32.972" level="INFO">${url} = cards/</msg>
<status status="PASS" starttime="20220708 05:19:32.972" endtime="20220708 05:19:32.972"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220708 05:19:33.219" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 05:19:32.973" endtime="20220708 05:19:33.219"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 05:19:33.219" endtime="20220708 05:19:33.219"/>
</return>
<msg timestamp="20220708 05:19:33.219" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 05:19:32.971" endtime="20220708 05:19:33.219"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 05:19:33.219" endtime="20220708 05:19:33.219"/>
</return>
<msg timestamp="20220708 05:19:33.220" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 05:19:32.970" endtime="20220708 05:19:33.220"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>card</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220708 05:19:33.220" endtime="20220708 05:19:33.225"/>
</kw>
<status status="PASS" starttime="20220708 05:19:33.220" endtime="20220708 05:19:33.225"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220708 05:19:33.226" endtime="20220708 05:19:33.226"/>
</return>
<msg timestamp="20220708 05:19:33.226" level="INFO">${CARD_ID} = 62c7be655df1c457dc6ee426</msg>
<status status="PASS" starttime="20220708 05:19:33.225" endtime="20220708 05:19:33.226"/>
</kw>
<kw name="Get A Card" library="Card">
<var>${response}</var>
<arg>${CARD_ID}</arg>
<doc>Gets the card with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220708 05:19:33.227" level="INFO">${url} = cards/62c7be655df1c457dc6ee426</msg>
<status status="PASS" starttime="20220708 05:19:33.227" endtime="20220708 05:19:33.227"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220708 05:19:33.342" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 05:19:33.227" endtime="20220708 05:19:33.342"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 05:19:33.343" endtime="20220708 05:19:33.343"/>
</return>
<msg timestamp="20220708 05:19:33.343" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 05:19:33.227" endtime="20220708 05:19:33.343"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 05:19:33.343" endtime="20220708 05:19:33.343"/>
</return>
<msg timestamp="20220708 05:19:33.343" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 05:19:33.226" endtime="20220708 05:19:33.343"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_NAME}</var>
<arg>${response}</arg>
<arg>name</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220708 05:19:33.343" endtime="20220708 05:19:33.344"/>
</return>
<msg timestamp="20220708 05:19:33.344" level="INFO">${CARD_NAME} = RFCard2</msg>
<status status="PASS" starttime="20220708 05:19:33.343" endtime="20220708 05:19:33.344"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${CARD_NAME}</arg>
<arg>RFCard2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220708 05:19:33.344" endtime="20220708 05:19:33.345"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Card</arg>
<arg>${CARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Card" library="Card">
<arg>${CARD_ID}</arg>
<doc>Deletes the card with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220708 05:19:33.346" level="INFO">${url} = cards/62c7be655df1c457dc6ee426</msg>
<status status="PASS" starttime="20220708 05:19:33.346" endtime="20220708 05:19:33.346"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220708 05:19:33.550" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 05:19:33.346" endtime="20220708 05:19:33.550"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 05:19:33.550" endtime="20220708 05:19:33.550"/>
</return>
<msg timestamp="20220708 05:19:33.550" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 05:19:33.345" endtime="20220708 05:19:33.550"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 05:19:33.550" endtime="20220708 05:19:33.550"/>
</return>
<status status="PASS" starttime="20220708 05:19:33.345" endtime="20220708 05:19:33.550"/>
</kw>
<status status="PASS" starttime="20220708 05:19:33.345" endtime="20220708 05:19:33.550"/>
</kw>
<doc>Verify that a card can be created through API</doc>
<tag>api</tag>
<tag>card.create</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220708 05:19:32.970" endtime="20220708 05:19:33.550"/>
</test>
<test id="s1-s1-s2-t2" name="Verify A Card Can Be Closed" line="24">
<kw name="Create A Card" library="Card">
<var>${response}</var>
<doc>Creates a new card in the given list.
required_args: listId
optional_args: name, desc, pos, idCardSource, idLabels, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>@{optional_args}</arg>
<arg>idList</arg>
<arg>${idList}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220708 05:19:33.552" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220708 05:19:33.552" endtime="20220708 05:19:33.552"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220708 05:19:33.553" endtime="20220708 05:19:33.553"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220708 05:19:33.553" level="INFO">${url} = cards/</msg>
<status status="PASS" starttime="20220708 05:19:33.553" endtime="20220708 05:19:33.553"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220708 05:19:33.773" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 05:19:33.554" endtime="20220708 05:19:33.773"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 05:19:33.773" endtime="20220708 05:19:33.773"/>
</return>
<msg timestamp="20220708 05:19:33.773" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 05:19:33.552" endtime="20220708 05:19:33.773"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 05:19:33.773" endtime="20220708 05:19:33.773"/>
</return>
<msg timestamp="20220708 05:19:33.773" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 05:19:33.551" endtime="20220708 05:19:33.773"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220708 05:19:33.774" endtime="20220708 05:19:33.774"/>
</return>
<msg timestamp="20220708 05:19:33.774" level="INFO">${CARD_ID} = 62c7be658395978b8adc85b5</msg>
<status status="PASS" starttime="20220708 05:19:33.773" endtime="20220708 05:19:33.774"/>
</kw>
<kw name="Archive A Card" library="Card">
<arg>${CARD_ID}</arg>
<doc>Modifies the card status to closed.</doc>
<kw name="Update A Card" library="Card">
<var>${response}</var>
<arg>${id}</arg>
<arg>closed</arg>
<arg>true</arg>
<arg>status_code=${status_code}</arg>
<doc>Updates the card with the given ID
optional_args: name, desc, closed, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<arg>status_code=${status_code}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220708 05:19:33.776" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220708 05:19:33.776" endtime="20220708 05:19:33.776"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220708 05:19:33.776" endtime="20220708 05:19:33.776"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220708 05:19:33.777" level="INFO">${url} = cards/62c7be658395978b8adc85b5</msg>
<status status="PASS" starttime="20220708 05:19:33.777" endtime="20220708 05:19:33.777"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220708 05:19:33.955" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 05:19:33.777" endtime="20220708 05:19:33.955"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 05:19:33.956" endtime="20220708 05:19:33.956"/>
</return>
<msg timestamp="20220708 05:19:33.956" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 05:19:33.775" endtime="20220708 05:19:33.956"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 05:19:33.956" endtime="20220708 05:19:33.956"/>
</return>
<msg timestamp="20220708 05:19:33.956" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 05:19:33.775" endtime="20220708 05:19:33.956"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 05:19:33.956" endtime="20220708 05:19:33.956"/>
</return>
<status status="PASS" starttime="20220708 05:19:33.774" endtime="20220708 05:19:33.956"/>
</kw>
<kw name="Get A Card" library="Card">
<var>${response}</var>
<arg>${CARD_ID}</arg>
<doc>Gets the card with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220708 05:19:33.957" level="INFO">${url} = cards/62c7be658395978b8adc85b5</msg>
<status status="PASS" starttime="20220708 05:19:33.957" endtime="20220708 05:19:33.957"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220708 05:19:34.078" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 05:19:33.958" endtime="20220708 05:19:34.078"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 05:19:34.078" endtime="20220708 05:19:34.078"/>
</return>
<msg timestamp="20220708 05:19:34.078" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 05:19:33.957" endtime="20220708 05:19:34.078"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 05:19:34.078" endtime="20220708 05:19:34.078"/>
</return>
<msg timestamp="20220708 05:19:34.078" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 05:19:33.956" endtime="20220708 05:19:34.078"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_CLOSED}</var>
<arg>${response}</arg>
<arg>closed</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220708 05:19:34.079" endtime="20220708 05:19:34.079"/>
</return>
<msg timestamp="20220708 05:19:34.080" level="INFO">${CARD_CLOSED} = True</msg>
<status status="PASS" starttime="20220708 05:19:34.079" endtime="20220708 05:19:34.080"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${CARD_CLOSED}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220708 05:19:34.080" endtime="20220708 05:19:34.080"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Card</arg>
<arg>${CARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Card" library="Card">
<arg>${CARD_ID}</arg>
<doc>Deletes the card with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220708 05:19:34.081" level="INFO">${url} = cards/62c7be658395978b8adc85b5</msg>
<status status="PASS" starttime="20220708 05:19:34.081" endtime="20220708 05:19:34.081"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220708 05:19:34.290" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 05:19:34.082" endtime="20220708 05:19:34.290"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 05:19:34.290" endtime="20220708 05:19:34.291"/>
</return>
<msg timestamp="20220708 05:19:34.291" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 05:19:34.081" endtime="20220708 05:19:34.291"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 05:19:34.291" endtime="20220708 05:19:34.291"/>
</return>
<status status="PASS" starttime="20220708 05:19:34.080" endtime="20220708 05:19:34.291"/>
</kw>
<status status="PASS" starttime="20220708 05:19:34.080" endtime="20220708 05:19:34.291"/>
</kw>
<doc>Verify that a card can be closed through API</doc>
<tag>api</tag>
<tag>card.close</tag>
<tag>regression</tag>
<status status="PASS" starttime="20220708 05:19:33.551" endtime="20220708 05:19:34.291"/>
</test>
<test id="s1-s1-s2-t3" name="Verify A Card Can Be Deleted" line="35">
<kw name="Create A Card" library="Card">
<var>${response}</var>
<doc>Creates a new card in the given list.
required_args: listId
optional_args: name, desc, pos, idCardSource, idLabels, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>@{optional_args}</arg>
<arg>idList</arg>
<arg>${idList}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220708 05:19:34.294" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220708 05:19:34.293" endtime="20220708 05:19:34.294"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220708 05:19:34.294" endtime="20220708 05:19:34.294"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220708 05:19:34.295" level="INFO">${url} = cards/</msg>
<status status="PASS" starttime="20220708 05:19:34.294" endtime="20220708 05:19:34.295"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220708 05:19:34.516" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 05:19:34.295" endtime="20220708 05:19:34.516"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 05:19:34.516" endtime="20220708 05:19:34.516"/>
</return>
<msg timestamp="20220708 05:19:34.517" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 05:19:34.293" endtime="20220708 05:19:34.517"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 05:19:34.517" endtime="20220708 05:19:34.517"/>
</return>
<msg timestamp="20220708 05:19:34.517" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 05:19:34.292" endtime="20220708 05:19:34.517"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220708 05:19:34.517" endtime="20220708 05:19:34.517"/>
</return>
<msg timestamp="20220708 05:19:34.518" level="INFO">${CARD_ID} = 62c7be66e205d665eec0ef1d</msg>
<status status="PASS" starttime="20220708 05:19:34.517" endtime="20220708 05:19:34.518"/>
</kw>
<kw name="Delete A Card" library="Card">
<var>${response}</var>
<arg>${CARD_ID}</arg>
<doc>Deletes the card with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220708 05:19:34.519" level="INFO">${url} = cards/62c7be66e205d665eec0ef1d</msg>
<status status="PASS" starttime="20220708 05:19:34.519" endtime="20220708 05:19:34.519"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220708 05:19:34.723" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 05:19:34.519" endtime="20220708 05:19:34.724"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 05:19:34.724" endtime="20220708 05:19:34.724"/>
</return>
<msg timestamp="20220708 05:19:34.724" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 05:19:34.519" endtime="20220708 05:19:34.724"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 05:19:34.724" endtime="20220708 05:19:34.724"/>
</return>
<msg timestamp="20220708 05:19:34.724" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 05:19:34.518" endtime="20220708 05:19:34.724"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>delete</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220708 05:19:34.725" endtime="20220708 05:19:34.726"/>
</kw>
<status status="PASS" starttime="20220708 05:19:34.724" endtime="20220708 05:19:34.726"/>
</kw>
<kw name="Get A Card" library="Card">
<arg>${CARD_ID}</arg>
<arg>status_code=404</arg>
<doc>Gets the card with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220708 05:19:34.728" level="INFO">${url} = cards/62c7be66e205d665eec0ef1d</msg>
<status status="PASS" starttime="20220708 05:19:34.727" endtime="20220708 05:19:34.728"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220708 05:19:34.831" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220708 05:19:34.728" endtime="20220708 05:19:34.831"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 05:19:34.831" endtime="20220708 05:19:34.831"/>
</return>
<msg timestamp="20220708 05:19:34.831" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220708 05:19:34.727" endtime="20220708 05:19:34.831"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 05:19:34.831" endtime="20220708 05:19:34.831"/>
</return>
<status status="PASS" starttime="20220708 05:19:34.727" endtime="20220708 05:19:34.831"/>
</kw>
<doc>Verify that a card can be deleted through API</doc>
<tag>api</tag>
<tag>card.delete</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220708 05:19:34.291" endtime="20220708 05:19:34.831"/>
</test>
<test id="s1-s1-s2-t4" name="Verify A Card Can Be Updated" line="44">
<kw name="Create A Card" library="Card">
<var>${response}</var>
<arg>name</arg>
<arg>RFCard4</arg>
<doc>Creates a new card in the given list.
required_args: listId
optional_args: name, desc, pos, idCardSource, idLabels, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>@{optional_args}</arg>
<arg>idList</arg>
<arg>${idList}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220708 05:19:34.833" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220708 05:19:34.833" endtime="20220708 05:19:34.833"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220708 05:19:34.834" endtime="20220708 05:19:34.834"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220708 05:19:34.834" level="INFO">${url} = cards/</msg>
<status status="PASS" starttime="20220708 05:19:34.834" endtime="20220708 05:19:34.834"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220708 05:19:35.053" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 05:19:34.835" endtime="20220708 05:19:35.053"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 05:19:35.053" endtime="20220708 05:19:35.053"/>
</return>
<msg timestamp="20220708 05:19:35.054" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 05:19:34.833" endtime="20220708 05:19:35.054"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 05:19:35.054" endtime="20220708 05:19:35.054"/>
</return>
<msg timestamp="20220708 05:19:35.054" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 05:19:34.832" endtime="20220708 05:19:35.054"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220708 05:19:35.054" endtime="20220708 05:19:35.054"/>
</return>
<msg timestamp="20220708 05:19:35.055" level="INFO">${CARD_ID} = 62c7be6623b6a98c6a16145e</msg>
<status status="PASS" starttime="20220708 05:19:35.054" endtime="20220708 05:19:35.055"/>
</kw>
<kw name="Update A Card" library="Card">
<var>${response}</var>
<arg>${CARD_ID}</arg>
<arg>name</arg>
<arg>RFCard5</arg>
<arg>desc</arg>
<arg>Description</arg>
<doc>Updates the card with the given ID
optional_args: name, desc, closed, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<arg>status_code=${status_code}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220708 05:19:35.056" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220708 05:19:35.056" endtime="20220708 05:19:35.056"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220708 05:19:35.056" endtime="20220708 05:19:35.057"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220708 05:19:35.057" level="INFO">${url} = cards/62c7be6623b6a98c6a16145e</msg>
<status status="PASS" starttime="20220708 05:19:35.057" endtime="20220708 05:19:35.057"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220708 05:19:35.254" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 05:19:35.057" endtime="20220708 05:19:35.254"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 05:19:35.254" endtime="20220708 05:19:35.254"/>
</return>
<msg timestamp="20220708 05:19:35.255" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 05:19:35.056" endtime="20220708 05:19:35.255"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 05:19:35.255" endtime="20220708 05:19:35.255"/>
</return>
<msg timestamp="20220708 05:19:35.255" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 05:19:35.055" endtime="20220708 05:19:35.255"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>card</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220708 05:19:35.255" endtime="20220708 05:19:35.260"/>
</kw>
<status status="PASS" starttime="20220708 05:19:35.255" endtime="20220708 05:19:35.261"/>
</kw>
<kw name="Get A Card" library="Card">
<var>${response}</var>
<arg>${CARD_ID}</arg>
<doc>Gets the card with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220708 05:19:35.262" level="INFO">${url} = cards/62c7be6623b6a98c6a16145e</msg>
<status status="PASS" starttime="20220708 05:19:35.262" endtime="20220708 05:19:35.262"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220708 05:19:35.381" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 05:19:35.262" endtime="20220708 05:19:35.381"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 05:19:35.382" endtime="20220708 05:19:35.382"/>
</return>
<msg timestamp="20220708 05:19:35.382" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 05:19:35.261" endtime="20220708 05:19:35.382"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 05:19:35.382" endtime="20220708 05:19:35.382"/>
</return>
<msg timestamp="20220708 05:19:35.382" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 05:19:35.261" endtime="20220708 05:19:35.382"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_NAME}</var>
<arg>${response}</arg>
<arg>name</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220708 05:19:35.382" endtime="20220708 05:19:35.382"/>
</return>
<msg timestamp="20220708 05:19:35.383" level="INFO">${CARD_NAME} = RFCard5</msg>
<status status="PASS" starttime="20220708 05:19:35.382" endtime="20220708 05:19:35.383"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_DESC}</var>
<arg>${response}</arg>
<arg>desc</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220708 05:19:35.384" endtime="20220708 05:19:35.384"/>
</return>
<msg timestamp="20220708 05:19:35.384" level="INFO">${CARD_DESC} = Description</msg>
<status status="PASS" starttime="20220708 05:19:35.383" endtime="20220708 05:19:35.384"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${CARD_NAME}</arg>
<arg>RFCard5</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220708 05:19:35.384" endtime="20220708 05:19:35.385"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${CARD_DESC}</arg>
<arg>Description</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220708 05:19:35.385" endtime="20220708 05:19:35.385"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Card</arg>
<arg>${CARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Card" library="Card">
<arg>${CARD_ID}</arg>
<doc>Deletes the card with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220708 05:19:35.386" level="INFO">${url} = cards/62c7be6623b6a98c6a16145e</msg>
<status status="PASS" starttime="20220708 05:19:35.386" endtime="20220708 05:19:35.386"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220708 05:19:35.616" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 05:19:35.386" endtime="20220708 05:19:35.616"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 05:19:35.616" endtime="20220708 05:19:35.616"/>
</return>
<msg timestamp="20220708 05:19:35.616" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 05:19:35.386" endtime="20220708 05:19:35.616"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 05:19:35.616" endtime="20220708 05:19:35.616"/>
</return>
<status status="PASS" starttime="20220708 05:19:35.385" endtime="20220708 05:19:35.616"/>
</kw>
<status status="PASS" starttime="20220708 05:19:35.385" endtime="20220708 05:19:35.616"/>
</kw>
<doc>Verify that a card's name and Description can be updated through API</doc>
<tag>api</tag>
<tag>card.update</tag>
<tag>regression</tag>
<status status="PASS" starttime="20220708 05:19:34.832" endtime="20220708 05:19:35.616"/>
</test>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Teardown Board</arg>
<arg>Delete All Sessions</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Teardown Board">
<doc>Delete the board created for this suite</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220708 05:19:35.619" level="INFO">${url} = boards/62c7be648da8a8659bb9c825</msg>
<status status="PASS" starttime="20220708 05:19:35.619" endtime="20220708 05:19:35.619"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220708 05:19:36.038" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 05:19:35.619" endtime="20220708 05:19:36.038"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 05:19:36.038" endtime="20220708 05:19:36.038"/>
</return>
<msg timestamp="20220708 05:19:36.038" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 05:19:35.618" endtime="20220708 05:19:36.038"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 05:19:36.038" endtime="20220708 05:19:36.038"/>
</return>
<status status="PASS" starttime="20220708 05:19:35.618" endtime="20220708 05:19:36.039"/>
</kw>
<status status="PASS" starttime="20220708 05:19:35.618" endtime="20220708 05:19:36.039"/>
</kw>
<status status="PASS" starttime="20220708 05:19:35.618" endtime="20220708 05:19:36.039"/>
</kw>
<kw name="Delete All Sessions" library="request_own_library">
<status status="PASS" starttime="20220708 05:19:36.039" endtime="20220708 05:19:36.040"/>
</kw>
<status status="PASS" starttime="20220708 05:19:35.617" endtime="20220708 05:19:36.040"/>
</kw>
<doc>Example Test with Trello API Cards</doc>
<status status="PASS" starttime="20220708 05:19:32.538" endtime="20220708 05:19:36.040"/>
</suite>
<suite id="s1-s1-s3" name="Trello Api Checklists Tests" source="/trello/api/trello_api_checklists_tests.robot">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Create Trello Session</arg>
<arg>Setup Board, List And Card</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Create Trello Session" library="TrelloAPI">
<doc>Creates a Trello Session</doc>
<kw name="Create Session" library="request_own_library">
<arg>${API_BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<status status="PASS" starttime="20220708 05:19:36.050" endtime="20220708 05:19:36.051"/>
</kw>
<status status="PASS" starttime="20220708 05:19:36.050" endtime="20220708 05:19:36.051"/>
</kw>
<kw name="Setup Board, List And Card">
<doc>Create a board and save its ID and its first list's ID</doc>
<kw name="Create A Board" library="Board">
<var>${BOARD}</var>
<arg>TestBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220708 05:19:36.052" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220708 05:19:36.052" endtime="20220708 05:19:36.052"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220708 05:19:36.052" endtime="20220708 05:19:36.052"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220708 05:19:36.053" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220708 05:19:36.052" endtime="20220708 05:19:36.053"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220708 05:19:36.375" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 05:19:36.053" endtime="20220708 05:19:36.376"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 05:19:36.376" endtime="20220708 05:19:36.376"/>
</return>
<msg timestamp="20220708 05:19:36.376" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 05:19:36.051" endtime="20220708 05:19:36.376"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 05:19:36.376" endtime="20220708 05:19:36.376"/>
</return>
<msg timestamp="20220708 05:19:36.376" level="INFO">${BOARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 05:19:36.051" endtime="20220708 05:19:36.376"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_BOARD_ID}</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220708 05:19:36.377" level="INFO">${TEST_SUITE_BOARD_ID} = 62c7be6860f167650971046d</msg>
<status status="PASS" starttime="20220708 05:19:36.376" endtime="20220708 05:19:36.377"/>
</kw>
<kw name="Get Lists On A Board" library="Board">
<var>${LISTS}</var>
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Get all the lists in a board</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>lists_on_board</arg>
<arg>${id}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220708 05:19:36.378" level="INFO">${url} = boards/62c7be6860f167650971046d/lists/</msg>
<status status="PASS" starttime="20220708 05:19:36.378" endtime="20220708 05:19:36.378"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220708 05:19:36.493" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 05:19:36.378" endtime="20220708 05:19:36.493"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 05:19:36.493" endtime="20220708 05:19:36.493"/>
</return>
<msg timestamp="20220708 05:19:36.493" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 05:19:36.378" endtime="20220708 05:19:36.493"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 05:19:36.493" endtime="20220708 05:19:36.493"/>
</return>
<msg timestamp="20220708 05:19:36.494" level="INFO">${LISTS} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 05:19:36.377" endtime="20220708 05:19:36.494"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_LIST_ID}</arg>
<arg>${LISTS.json()}[0][id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220708 05:19:36.494" level="INFO">${TEST_SUITE_LIST_ID} = 62c7be6860f1676509710474</msg>
<status status="PASS" starttime="20220708 05:19:36.494" endtime="20220708 05:19:36.495"/>
</kw>
<kw name="Create A Card" library="Card">
<var>${CARD}</var>
<arg>name</arg>
<arg>TestCard</arg>
<doc>Creates a new card in the given list.
required_args: listId
optional_args: name, desc, pos, idCardSource, idLabels, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>@{optional_args}</arg>
<arg>idList</arg>
<arg>${idList}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220708 05:19:36.496" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220708 05:19:36.496" endtime="20220708 05:19:36.496"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220708 05:19:36.496" endtime="20220708 05:19:36.496"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220708 05:19:36.497" level="INFO">${url} = cards/</msg>
<status status="PASS" starttime="20220708 05:19:36.496" endtime="20220708 05:19:36.497"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220708 05:19:36.724" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 05:19:36.497" endtime="20220708 05:19:36.724"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 05:19:36.724" endtime="20220708 05:19:36.724"/>
</return>
<msg timestamp="20220708 05:19:36.724" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 05:19:36.495" endtime="20220708 05:19:36.724"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 05:19:36.724" endtime="20220708 05:19:36.724"/>
</return>
<msg timestamp="20220708 05:19:36.725" level="INFO">${CARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 05:19:36.495" endtime="20220708 05:19:36.725"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_CARD_ID}</arg>
<arg>${CARD.json()}[id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220708 05:19:36.725" level="INFO">${TEST_SUITE_CARD_ID} = 62c7be68a2d65f39cd946162</msg>
<status status="PASS" starttime="20220708 05:19:36.725" endtime="20220708 05:19:36.726"/>
</kw>
<status status="PASS" starttime="20220708 05:19:36.051" endtime="20220708 05:19:36.726"/>
</kw>
<status status="PASS" starttime="20220708 05:19:36.050" endtime="20220708 05:19:36.726"/>
</kw>
<test id="s1-s1-s3-t1" name="Verify A Checklist Can Be Created" line="14">
<kw name="Create A Checklist" library="Checklist">
<var>${response}</var>
<arg>name</arg>
<arg>TestChecklist</arg>
<arg>idCard=${TEST_SUITE_CARD_ID}</arg>
<doc>Creates a new checklist in the given card.
required_args: idCard
optional_args: name, pos, idChecklistSource
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>@{optional_args}</arg>
<arg>idCard</arg>
<arg>${idCard}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220708 05:19:36.728" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220708 05:19:36.727" endtime="20220708 05:19:36.728"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220708 05:19:36.728" endtime="20220708 05:19:36.728"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220708 05:19:36.729" level="INFO">${url} = checklists/</msg>
<status status="PASS" starttime="20220708 05:19:36.728" endtime="20220708 05:19:36.729"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220708 05:19:36.905" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 05:19:36.729" endtime="20220708 05:19:36.905"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 05:19:36.905" endtime="20220708 05:19:36.905"/>
</return>
<msg timestamp="20220708 05:19:36.906" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 05:19:36.727" endtime="20220708 05:19:36.906"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 05:19:36.906" endtime="20220708 05:19:36.906"/>
</return>
<msg timestamp="20220708 05:19:36.906" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 05:19:36.726" endtime="20220708 05:19:36.906"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${checklist_id}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220708 05:19:36.906" endtime="20220708 05:19:36.906"/>
</return>
<msg timestamp="20220708 05:19:36.907" level="INFO">${checklist_id} = 62c7be687376a616198f258f</msg>
<status status="PASS" starttime="20220708 05:19:36.906" endtime="20220708 05:19:36.907"/>
</kw>
<kw name="Get A Checklist" library="Checklist">
<var>${response}</var>
<arg>${checklist_id}</arg>
<doc>Gets the checklist with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220708 05:19:36.908" level="INFO">${url} = checklists/62c7be687376a616198f258f</msg>
<status status="PASS" starttime="20220708 05:19:36.908" endtime="20220708 05:19:36.908"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220708 05:19:37.028" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 05:19:36.908" endtime="20220708 05:19:37.028"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 05:19:37.028" endtime="20220708 05:19:37.028"/>
</return>
<msg timestamp="20220708 05:19:37.028" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 05:19:36.907" endtime="20220708 05:19:37.028"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 05:19:37.028" endtime="20220708 05:19:37.028"/>
</return>
<msg timestamp="20220708 05:19:37.028" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 05:19:36.907" endtime="20220708 05:19:37.028"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${checklist_name}</var>
<arg>${response}</arg>
<arg>name</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220708 05:19:37.029" endtime="20220708 05:19:37.029"/>
</return>
<msg timestamp="20220708 05:19:37.029" level="INFO">${checklist_name} = TestChecklist</msg>
<status status="PASS" starttime="20220708 05:19:37.028" endtime="20220708 05:19:37.029"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${checklist_name}</arg>
<arg>TestChecklist</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220708 05:19:37.030" endtime="20220708 05:19:37.030"/>
</kw>
<kw name="Delete A Checklist" library="Checklist" type="TEARDOWN">
<arg>${checklist_id}</arg>
<doc>Deletes the checklist with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220708 05:19:37.031" level="INFO">${url} = checklists/62c7be687376a616198f258f</msg>
<status status="PASS" starttime="20220708 05:19:37.031" endtime="20220708 05:19:37.031"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220708 05:19:37.191" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 05:19:37.031" endtime="20220708 05:19:37.191"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 05:19:37.191" endtime="20220708 05:19:37.191"/>
</return>
<msg timestamp="20220708 05:19:37.191" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 05:19:37.030" endtime="20220708 05:19:37.191"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 05:19:37.191" endtime="20220708 05:19:37.191"/>
</return>
<status status="PASS" starttime="20220708 05:19:37.030" endtime="20220708 05:19:37.191"/>
</kw>
<doc>Verify that a checklist can be created through API</doc>
<tag>api</tag>
<tag>checklist.create</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220708 05:19:36.726" endtime="20220708 05:19:37.191"/>
</test>
<test id="s1-s1-s3-t2" name="Verify A Checklist Can Be Deleted" line="24">
<kw name="Create A Checklist" library="Checklist">
<var>${response}</var>
<arg>name</arg>
<arg>TestChecklist</arg>
<arg>idCard=${TEST_SUITE_CARD_ID}</arg>
<doc>Creates a new checklist in the given card.
required_args: idCard
optional_args: name, pos, idChecklistSource
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>@{optional_args}</arg>
<arg>idCard</arg>
<arg>${idCard}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220708 05:19:37.194" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220708 05:19:37.193" endtime="20220708 05:19:37.194"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220708 05:19:37.194" endtime="20220708 05:19:37.194"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220708 05:19:37.195" level="INFO">${url} = checklists/</msg>
<status status="PASS" starttime="20220708 05:19:37.194" endtime="20220708 05:19:37.195"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220708 05:19:37.358" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 05:19:37.195" endtime="20220708 05:19:37.358"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 05:19:37.358" endtime="20220708 05:19:37.358"/>
</return>
<msg timestamp="20220708 05:19:37.359" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 05:19:37.193" endtime="20220708 05:19:37.359"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 05:19:37.359" endtime="20220708 05:19:37.359"/>
</return>
<msg timestamp="20220708 05:19:37.359" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 05:19:37.192" endtime="20220708 05:19:37.359"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${checklist_id}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220708 05:19:37.359" endtime="20220708 05:19:37.359"/>
</return>
<msg timestamp="20220708 05:19:37.360" level="INFO">${checklist_id} = 62c7be69d3fc54335830589d</msg>
<status status="PASS" starttime="20220708 05:19:37.359" endtime="20220708 05:19:37.360"/>
</kw>
<kw name="Delete A Checklist" library="Checklist">
<var>${response}</var>
<arg>${checklist_id}</arg>
<doc>Deletes the checklist with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220708 05:19:37.362" level="INFO">${url} = checklists/62c7be69d3fc54335830589d</msg>
<status status="PASS" starttime="20220708 05:19:37.361" endtime="20220708 05:19:37.362"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220708 05:19:37.545" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 05:19:37.362" endtime="20220708 05:19:37.545"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 05:19:37.545" endtime="20220708 05:19:37.546"/>
</return>
<msg timestamp="20220708 05:19:37.546" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 05:19:37.361" endtime="20220708 05:19:37.546"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 05:19:37.546" endtime="20220708 05:19:37.546"/>
</return>
<msg timestamp="20220708 05:19:37.546" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 05:19:37.361" endtime="20220708 05:19:37.546"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>delete</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220708 05:19:37.547" endtime="20220708 05:19:37.548"/>
</kw>
<status status="PASS" starttime="20220708 05:19:37.546" endtime="20220708 05:19:37.548"/>
</kw>
<kw name="Get A Checklist" library="Checklist">
<arg>${checklist_id}</arg>
<arg>status_code=404</arg>
<doc>Gets the checklist with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220708 05:19:37.550" level="INFO">${url} = checklists/62c7be69d3fc54335830589d</msg>
<status status="PASS" starttime="20220708 05:19:37.549" endtime="20220708 05:19:37.550"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220708 05:19:37.653" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220708 05:19:37.550" endtime="20220708 05:19:37.653"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 05:19:37.653" endtime="20220708 05:19:37.653"/>
</return>
<msg timestamp="20220708 05:19:37.653" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220708 05:19:37.549" endtime="20220708 05:19:37.653"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 05:19:37.653" endtime="20220708 05:19:37.653"/>
</return>
<status status="PASS" starttime="20220708 05:19:37.548" endtime="20220708 05:19:37.653"/>
</kw>
<doc>Verify that a checklist can be deleted through API</doc>
<tag>api</tag>
<tag>checklist.delete</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220708 05:19:37.192" endtime="20220708 05:19:37.653"/>
</test>
<test id="s1-s1-s3-t3" name="Verify A Checklist Can Be Updated" line="33">
<kw name="Create A Checklist" library="Checklist">
<var>${response}</var>
<arg>name</arg>
<arg>TestChecklist</arg>
<arg>idCard=${TEST_SUITE_CARD_ID}</arg>
<doc>Creates a new checklist in the given card.
required_args: idCard
optional_args: name, pos, idChecklistSource
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>@{optional_args}</arg>
<arg>idCard</arg>
<arg>${idCard}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220708 05:19:37.657" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220708 05:19:37.656" endtime="20220708 05:19:37.657"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220708 05:19:37.657" endtime="20220708 05:19:37.658"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220708 05:19:37.658" level="INFO">${url} = checklists/</msg>
<status status="PASS" starttime="20220708 05:19:37.658" endtime="20220708 05:19:37.658"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220708 05:19:37.829" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 05:19:37.658" endtime="20220708 05:19:37.829"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 05:19:37.829" endtime="20220708 05:19:37.829"/>
</return>
<msg timestamp="20220708 05:19:37.830" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 05:19:37.655" endtime="20220708 05:19:37.830"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 05:19:37.830" endtime="20220708 05:19:37.830"/>
</return>
<msg timestamp="20220708 05:19:37.830" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 05:19:37.655" endtime="20220708 05:19:37.830"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${checklist_id}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220708 05:19:37.830" endtime="20220708 05:19:37.830"/>
</return>
<msg timestamp="20220708 05:19:37.831" level="INFO">${checklist_id} = 62c7be69a6e591667c9f6af0</msg>
<status status="PASS" starttime="20220708 05:19:37.830" endtime="20220708 05:19:37.831"/>
</kw>
<kw name="Update A Checklist" library="Checklist">
<var>${response}</var>
<arg>${checklist_id}</arg>
<arg>name</arg>
<arg>TestChecklist2</arg>
<doc>Updates the checklist with the given ID
optional_args: name, pos
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<arg>status_code=${status_code}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220708 05:19:37.832" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220708 05:19:37.832" endtime="20220708 05:19:37.832"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220708 05:19:37.832" endtime="20220708 05:19:37.832"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220708 05:19:37.833" level="INFO">${url} = checklists/62c7be69a6e591667c9f6af0</msg>
<status status="PASS" starttime="20220708 05:19:37.833" endtime="20220708 05:19:37.833"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220708 05:19:37.988" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 05:19:37.833" endtime="20220708 05:19:37.988"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 05:19:37.988" endtime="20220708 05:19:37.988"/>
</return>
<msg timestamp="20220708 05:19:37.988" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 05:19:37.831" endtime="20220708 05:19:37.989"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 05:19:37.989" endtime="20220708 05:19:37.989"/>
</return>
<msg timestamp="20220708 05:19:37.989" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 05:19:37.831" endtime="20220708 05:19:37.989"/>
</kw>
<kw name="Get A Checklist" library="Checklist">
<var>${response}</var>
<arg>${checklist_id}</arg>
<doc>Gets the checklist with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220708 05:19:37.990" level="INFO">${url} = checklists/62c7be69a6e591667c9f6af0</msg>
<status status="PASS" starttime="20220708 05:19:37.990" endtime="20220708 05:19:37.990"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220708 05:19:38.114" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 05:19:37.990" endtime="20220708 05:19:38.114"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 05:19:38.114" endtime="20220708 05:19:38.114"/>
</return>
<msg timestamp="20220708 05:19:38.115" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 05:19:37.989" endtime="20220708 05:19:38.115"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 05:19:38.115" endtime="20220708 05:19:38.115"/>
</return>
<msg timestamp="20220708 05:19:38.115" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 05:19:37.989" endtime="20220708 05:19:38.115"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${checklist_name}</var>
<arg>${response}</arg>
<arg>name</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220708 05:19:38.115" endtime="20220708 05:19:38.115"/>
</return>
<msg timestamp="20220708 05:19:38.116" level="INFO">${checklist_name} = TestChecklist2</msg>
<status status="PASS" starttime="20220708 05:19:38.115" endtime="20220708 05:19:38.116"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${checklist_name}</arg>
<arg>TestChecklist2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220708 05:19:38.116" endtime="20220708 05:19:38.116"/>
</kw>
<kw name="Delete A Checklist" library="Checklist" type="TEARDOWN">
<arg>${checklist_id}</arg>
<doc>Deletes the checklist with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220708 05:19:38.126" level="INFO">${url} = checklists/62c7be69a6e591667c9f6af0</msg>
<status status="PASS" starttime="20220708 05:19:38.126" endtime="20220708 05:19:38.127"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220708 05:19:38.291" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 05:19:38.127" endtime="20220708 05:19:38.291"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 05:19:38.291" endtime="20220708 05:19:38.291"/>
</return>
<msg timestamp="20220708 05:19:38.292" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 05:19:38.126" endtime="20220708 05:19:38.292"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 05:19:38.292" endtime="20220708 05:19:38.292"/>
</return>
<status status="PASS" starttime="20220708 05:19:38.117" endtime="20220708 05:19:38.292"/>
</kw>
<doc>Verify that a checklist's name can be updated through API</doc>
<tag>api</tag>
<tag>checklist.update</tag>
<tag>regression</tag>
<status status="PASS" starttime="20220708 05:19:37.654" endtime="20220708 05:19:38.292"/>
</test>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Teardown Board</arg>
<arg>Delete All Sessions</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Teardown Board">
<doc>Delete the board created for this suite</doc>
<kw name="Delete A Board" library="Board">
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220708 05:19:38.294" level="INFO">${url} = boards/62c7be6860f167650971046d</msg>
<status status="PASS" starttime="20220708 05:19:38.294" endtime="20220708 05:19:38.294"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220708 05:19:38.755" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 05:19:38.294" endtime="20220708 05:19:38.756"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 05:19:38.756" endtime="20220708 05:19:38.756"/>
</return>
<msg timestamp="20220708 05:19:38.756" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 05:19:38.293" endtime="20220708 05:19:38.756"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 05:19:38.756" endtime="20220708 05:19:38.756"/>
</return>
<status status="PASS" starttime="20220708 05:19:38.293" endtime="20220708 05:19:38.756"/>
</kw>
<status status="PASS" starttime="20220708 05:19:38.293" endtime="20220708 05:19:38.756"/>
</kw>
<kw name="Delete All Sessions" library="request_own_library">
<status status="PASS" starttime="20220708 05:19:38.756" endtime="20220708 05:19:38.757"/>
</kw>
<status status="PASS" starttime="20220708 05:19:38.292" endtime="20220708 05:19:38.757"/>
</kw>
<doc>Example Test with Trello API Checklists</doc>
<status status="PASS" starttime="20220708 05:19:36.041" endtime="20220708 05:19:38.757"/>
</suite>
<suite id="s1-s1-s4" name="Trello Api Labels Tests" source="/trello/api/trello_api_labels_tests.robot">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Create Trello Session</arg>
<arg>Setup Board And List</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Create Trello Session" library="TrelloAPI">
<doc>Creates a Trello Session</doc>
<kw name="Create Session" library="request_own_library">
<arg>${API_BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<status status="PASS" starttime="20220708 05:19:38.768" endtime="20220708 05:19:38.768"/>
</kw>
<status status="PASS" starttime="20220708 05:19:38.768" endtime="20220708 05:19:38.768"/>
</kw>
<kw name="Setup Board And List">
<doc>Create a board and save its ID and its first list's ID</doc>
<kw name="Create A Board" library="Board">
<var>${BOARD}</var>
<arg>TestBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220708 05:19:38.769" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220708 05:19:38.769" endtime="20220708 05:19:38.769"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220708 05:19:38.769" endtime="20220708 05:19:38.770"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220708 05:19:38.770" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220708 05:19:38.770" endtime="20220708 05:19:38.770"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220708 05:19:39.138" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 05:19:38.770" endtime="20220708 05:19:39.138"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 05:19:39.138" endtime="20220708 05:19:39.138"/>
</return>
<msg timestamp="20220708 05:19:39.139" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 05:19:38.769" endtime="20220708 05:19:39.139"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 05:19:39.139" endtime="20220708 05:19:39.139"/>
</return>
<msg timestamp="20220708 05:19:39.139" level="INFO">${BOARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 05:19:38.768" endtime="20220708 05:19:39.139"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_BOARD_ID}</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220708 05:19:39.140" level="INFO">${TEST_SUITE_BOARD_ID} = 62c7be6abf19c05989f2f3ba</msg>
<status status="PASS" starttime="20220708 05:19:39.139" endtime="20220708 05:19:39.140"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${LISTS}</var>
<arg>boards/${TEST_SUITE_BOARD_ID}/lists</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220708 05:19:39.256" level="INFO">${LISTS} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 05:19:39.140" endtime="20220708 05:19:39.256"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_LIST_ID}</arg>
<arg>${LISTS.json()}[0][id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220708 05:19:39.257" level="INFO">${TEST_SUITE_LIST_ID} = 62c7be6abf19c05989f2f3c1</msg>
<status status="PASS" starttime="20220708 05:19:39.256" endtime="20220708 05:19:39.257"/>
</kw>
<status status="PASS" starttime="20220708 05:19:38.768" endtime="20220708 05:19:39.257"/>
</kw>
<status status="PASS" starttime="20220708 05:19:38.767" endtime="20220708 05:19:39.257"/>
</kw>
<test id="s1-s1-s4-t1" name="Create and get label on board" line="14">
<kw name="Create A Label" library="Label">
<var>${response}</var>
<arg>name</arg>
<arg>label2</arg>
<arg>color</arg>
<arg>yellow</arg>
<doc>Creates a new label in the given board.
required_args: idBoard
optional_args: name, color
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>idBoard</arg>
<arg>${idBoard}</arg>
<arg>@{optional_args}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220708 05:19:39.259" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220708 05:19:39.259" endtime="20220708 05:19:39.259"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220708 05:19:39.259" endtime="20220708 05:19:39.259"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220708 05:19:39.260" level="INFO">${url} = labels/</msg>
<status status="PASS" starttime="20220708 05:19:39.260" endtime="20220708 05:19:39.260"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220708 05:19:39.420" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 05:19:39.260" endtime="20220708 05:19:39.420"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 05:19:39.420" endtime="20220708 05:19:39.421"/>
</return>
<msg timestamp="20220708 05:19:39.421" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 05:19:39.259" endtime="20220708 05:19:39.421"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 05:19:39.421" endtime="20220708 05:19:39.421"/>
</return>
<msg timestamp="20220708 05:19:39.421" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 05:19:39.258" endtime="20220708 05:19:39.421"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>label</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220708 05:19:39.422" endtime="20220708 05:19:39.423"/>
</kw>
<status status="PASS" starttime="20220708 05:19:39.421" endtime="20220708 05:19:39.423"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${LABEL_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220708 05:19:39.424" endtime="20220708 05:19:39.424"/>
</return>
<msg timestamp="20220708 05:19:39.424" level="INFO">${LABEL_ID} = 62c7be6b9ebe106f59b99100</msg>
<status status="PASS" starttime="20220708 05:19:39.423" endtime="20220708 05:19:39.424"/>
</kw>
<kw name="Get A Label" library="Label">
<var>${response}</var>
<arg>${LABEL_ID}</arg>
<doc>Gets the label with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220708 05:19:39.426" level="INFO">${url} = labels/62c7be6b9ebe106f59b99100</msg>
<status status="PASS" starttime="20220708 05:19:39.425" endtime="20220708 05:19:39.426"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220708 05:19:39.542" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 05:19:39.426" endtime="20220708 05:19:39.542"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 05:19:39.542" endtime="20220708 05:19:39.542"/>
</return>
<msg timestamp="20220708 05:19:39.543" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 05:19:39.425" endtime="20220708 05:19:39.543"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 05:19:39.543" endtime="20220708 05:19:39.543"/>
</return>
<msg timestamp="20220708 05:19:39.543" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 05:19:39.425" endtime="20220708 05:19:39.543"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${LABEL_COLOR}</var>
<arg>${response}</arg>
<arg>color</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220708 05:19:39.543" endtime="20220708 05:19:39.543"/>
</return>
<msg timestamp="20220708 05:19:39.544" level="INFO">${LABEL_COLOR} = yellow</msg>
<status status="PASS" starttime="20220708 05:19:39.543" endtime="20220708 05:19:39.544"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${LABEL_NAME}</var>
<arg>${response}</arg>
<arg>name</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220708 05:19:39.544" endtime="20220708 05:19:39.545"/>
</return>
<msg timestamp="20220708 05:19:39.545" level="INFO">${LABEL_NAME} = label2</msg>
<status status="PASS" starttime="20220708 05:19:39.544" endtime="20220708 05:19:39.545"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${LABEL_COLOR}</arg>
<arg>yellow</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220708 05:19:39.545" endtime="20220708 05:19:39.545"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${LABEL_NAME}</arg>
<arg>label2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220708 05:19:39.546" endtime="20220708 05:19:39.546"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Label</arg>
<arg>${LABEL_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Label" library="Label">
<arg>${LABEL_ID}</arg>
<doc>Deletes the label with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220708 05:19:39.548" level="INFO">${url} = labels/62c7be6b9ebe106f59b99100</msg>
<status status="PASS" starttime="20220708 05:19:39.547" endtime="20220708 05:19:39.548"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220708 05:19:39.721" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 05:19:39.548" endtime="20220708 05:19:39.721"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 05:19:39.721" endtime="20220708 05:19:39.721"/>
</return>
<msg timestamp="20220708 05:19:39.721" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 05:19:39.547" endtime="20220708 05:19:39.721"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 05:19:39.721" endtime="20220708 05:19:39.721"/>
</return>
<status status="PASS" starttime="20220708 05:19:39.546" endtime="20220708 05:19:39.721"/>
</kw>
<status status="PASS" starttime="20220708 05:19:39.546" endtime="20220708 05:19:39.721"/>
</kw>
<doc>Verify that a label can be created through API</doc>
<tag>api</tag>
<tag>label.create</tag>
<tag>label.get</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220708 05:19:39.257" endtime="20220708 05:19:39.721"/>
</test>
<test id="s1-s1-s4-t2" name="Update label on board" line="28">
<kw name="Create A Label" library="Label">
<var>${response}</var>
<arg>name</arg>
<arg>label2</arg>
<arg>color</arg>
<arg>yellow</arg>
<doc>Creates a new label in the given board.
required_args: idBoard
optional_args: name, color
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>idBoard</arg>
<arg>${idBoard}</arg>
<arg>@{optional_args}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220708 05:19:39.723" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220708 05:19:39.723" endtime="20220708 05:19:39.724"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220708 05:19:39.724" endtime="20220708 05:19:39.724"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220708 05:19:39.725" level="INFO">${url} = labels/</msg>
<status status="PASS" starttime="20220708 05:19:39.724" endtime="20220708 05:19:39.725"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220708 05:19:39.879" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 05:19:39.725" endtime="20220708 05:19:39.879"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 05:19:39.879" endtime="20220708 05:19:39.879"/>
</return>
<msg timestamp="20220708 05:19:39.879" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 05:19:39.723" endtime="20220708 05:19:39.879"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 05:19:39.879" endtime="20220708 05:19:39.879"/>
</return>
<msg timestamp="20220708 05:19:39.879" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 05:19:39.722" endtime="20220708 05:19:39.879"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>label</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220708 05:19:39.880" endtime="20220708 05:19:39.882"/>
</kw>
<status status="PASS" starttime="20220708 05:19:39.880" endtime="20220708 05:19:39.882"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${LABEL_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220708 05:19:39.882" endtime="20220708 05:19:39.882"/>
</return>
<msg timestamp="20220708 05:19:39.883" level="INFO">${LABEL_ID} = 62c7be6bd3f8cb615a1f4e34</msg>
<status status="PASS" starttime="20220708 05:19:39.882" endtime="20220708 05:19:39.883"/>
</kw>
<kw name="Update A Label" library="Label">
<var>${new_response}</var>
<arg>${LABEL_ID}</arg>
<arg>name</arg>
<arg>label3</arg>
<arg>color</arg>
<arg>orange</arg>
<doc>Updates the label with the given ID
optional_args: name, color
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220708 05:19:39.884" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220708 05:19:39.884" endtime="20220708 05:19:39.884"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220708 05:19:39.884" endtime="20220708 05:19:39.884"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220708 05:19:39.885" level="INFO">${url} = labels/62c7be6bd3f8cb615a1f4e34</msg>
<status status="PASS" starttime="20220708 05:19:39.884" endtime="20220708 05:19:39.885"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220708 05:19:40.077" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 05:19:39.885" endtime="20220708 05:19:40.077"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 05:19:40.077" endtime="20220708 05:19:40.077"/>
</return>
<msg timestamp="20220708 05:19:40.078" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 05:19:39.883" endtime="20220708 05:19:40.078"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 05:19:40.078" endtime="20220708 05:19:40.078"/>
</return>
<msg timestamp="20220708 05:19:40.078" level="INFO">${new_response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 05:19:39.883" endtime="20220708 05:19:40.078"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${NEW_LABEL_COLOR}</var>
<arg>${new_response}</arg>
<arg>color</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220708 05:19:40.078" endtime="20220708 05:19:40.078"/>
</return>
<msg timestamp="20220708 05:19:40.079" level="INFO">${NEW_LABEL_COLOR} = orange</msg>
<status status="PASS" starttime="20220708 05:19:40.078" endtime="20220708 05:19:40.079"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${NEW_LABEL_NAME}</var>
<arg>${new_response}</arg>
<arg>name</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220708 05:19:40.080" endtime="20220708 05:19:40.080"/>
</return>
<msg timestamp="20220708 05:19:40.080" level="INFO">${NEW_LABEL_NAME} = label3</msg>
<status status="PASS" starttime="20220708 05:19:40.079" endtime="20220708 05:19:40.080"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${NEW_LABEL_COLOR}</arg>
<arg>orange</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220708 05:19:40.080" endtime="20220708 05:19:40.081"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${NEW_LABEL_NAME}</arg>
<arg>label3</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220708 05:19:40.081" endtime="20220708 05:19:40.081"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Label</arg>
<arg>${LABEL_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Label" library="Label">
<arg>${LABEL_ID}</arg>
<doc>Deletes the label with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220708 05:19:40.082" level="INFO">${url} = labels/62c7be6bd3f8cb615a1f4e34</msg>
<status status="PASS" starttime="20220708 05:19:40.082" endtime="20220708 05:19:40.082"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220708 05:19:40.247" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 05:19:40.082" endtime="20220708 05:19:40.247"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 05:19:40.247" endtime="20220708 05:19:40.247"/>
</return>
<msg timestamp="20220708 05:19:40.248" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 05:19:40.082" endtime="20220708 05:19:40.248"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 05:19:40.248" endtime="20220708 05:19:40.248"/>
</return>
<status status="PASS" starttime="20220708 05:19:40.081" endtime="20220708 05:19:40.248"/>
</kw>
<status status="PASS" starttime="20220708 05:19:40.081" endtime="20220708 05:19:40.248"/>
</kw>
<doc>Verify that a label's name and color can be updated through API</doc>
<tag>api</tag>
<tag>label.update</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220708 05:19:39.722" endtime="20220708 05:19:40.248"/>
</test>
<test id="s1-s1-s4-t3" name="Delete label on board" line="41">
<kw name="Create A Label" library="Label">
<var>${response}</var>
<arg>name</arg>
<arg>label2</arg>
<arg>color</arg>
<arg>yellow</arg>
<doc>Creates a new label in the given board.
required_args: idBoard
optional_args: name, color
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>idBoard</arg>
<arg>${idBoard}</arg>
<arg>@{optional_args}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220708 05:19:40.250" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220708 05:19:40.250" endtime="20220708 05:19:40.250"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220708 05:19:40.250" endtime="20220708 05:19:40.251"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220708 05:19:40.251" level="INFO">${url} = labels/</msg>
<status status="PASS" starttime="20220708 05:19:40.251" endtime="20220708 05:19:40.251"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220708 05:19:40.408" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 05:19:40.251" endtime="20220708 05:19:40.408"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 05:19:40.408" endtime="20220708 05:19:40.408"/>
</return>
<msg timestamp="20220708 05:19:40.408" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 05:19:40.250" endtime="20220708 05:19:40.408"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 05:19:40.408" endtime="20220708 05:19:40.408"/>
</return>
<msg timestamp="20220708 05:19:40.408" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 05:19:40.249" endtime="20220708 05:19:40.408"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${LABEL_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220708 05:19:40.409" endtime="20220708 05:19:40.409"/>
</return>
<msg timestamp="20220708 05:19:40.409" level="INFO">${LABEL_ID} = 62c7be6c988dec57b4b3e33e</msg>
<status status="PASS" starttime="20220708 05:19:40.408" endtime="20220708 05:19:40.409"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Label</arg>
<arg>${LABEL_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Label" library="Label">
<arg>${LABEL_ID}</arg>
<doc>Deletes the label with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220708 05:19:40.411" level="INFO">${url} = labels/62c7be6c988dec57b4b3e33e</msg>
<status status="PASS" starttime="20220708 05:19:40.410" endtime="20220708 05:19:40.411"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220708 05:19:40.594" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 05:19:40.411" endtime="20220708 05:19:40.594"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 05:19:40.594" endtime="20220708 05:19:40.595"/>
</return>
<msg timestamp="20220708 05:19:40.595" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 05:19:40.410" endtime="20220708 05:19:40.595"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 05:19:40.595" endtime="20220708 05:19:40.595"/>
</return>
<status status="PASS" starttime="20220708 05:19:40.410" endtime="20220708 05:19:40.595"/>
</kw>
<status status="PASS" starttime="20220708 05:19:40.410" endtime="20220708 05:19:40.595"/>
</kw>
<kw name="Get A Label" library="Label">
<arg>${LABEL_ID}</arg>
<arg>status_code=404</arg>
<doc>Gets the label with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220708 05:19:40.596" level="INFO">${url} = labels/62c7be6c988dec57b4b3e33e</msg>
<status status="PASS" starttime="20220708 05:19:40.596" endtime="20220708 05:19:40.596"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220708 05:19:40.704" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220708 05:19:40.596" endtime="20220708 05:19:40.704"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 05:19:40.704" endtime="20220708 05:19:40.704"/>
</return>
<msg timestamp="20220708 05:19:40.705" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220708 05:19:40.596" endtime="20220708 05:19:40.705"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 05:19:40.705" endtime="20220708 05:19:40.705"/>
</return>
<status status="PASS" starttime="20220708 05:19:40.595" endtime="20220708 05:19:40.705"/>
</kw>
<doc>Verify that a label can be deleted through API</doc>
<tag>api</tag>
<tag>label.delete</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220708 05:19:40.248" endtime="20220708 05:19:40.705"/>
</test>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Teardown Board</arg>
<arg>Delete All Sessions</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Teardown Board">
<doc>Delete the board created for this session.</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220708 05:19:40.708" level="INFO">${url} = boards/62c7be6abf19c05989f2f3ba</msg>
<status status="PASS" starttime="20220708 05:19:40.707" endtime="20220708 05:19:40.708"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220708 05:19:41.097" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 05:19:40.708" endtime="20220708 05:19:41.097"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 05:19:41.097" endtime="20220708 05:19:41.097"/>
</return>
<msg timestamp="20220708 05:19:41.097" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 05:19:40.707" endtime="20220708 05:19:41.097"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 05:19:41.097" endtime="20220708 05:19:41.097"/>
</return>
<status status="PASS" starttime="20220708 05:19:40.707" endtime="20220708 05:19:41.097"/>
</kw>
<status status="PASS" starttime="20220708 05:19:40.707" endtime="20220708 05:19:41.097"/>
</kw>
<status status="PASS" starttime="20220708 05:19:40.706" endtime="20220708 05:19:41.097"/>
</kw>
<kw name="Delete All Sessions" library="request_own_library">
<status status="PASS" starttime="20220708 05:19:41.098" endtime="20220708 05:19:41.098"/>
</kw>
<status status="PASS" starttime="20220708 05:19:40.706" endtime="20220708 05:19:41.098"/>
</kw>
<doc>Example Test with Trello API Cards</doc>
<status status="PASS" starttime="20220708 05:19:38.759" endtime="20220708 05:19:41.099"/>
</suite>
<suite id="s1-s1-s5" name="Trello Api Lists Tests" source="/trello/api/trello_api_lists_tests.robot">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Create Trello Session</arg>
<arg>Setup Board</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Create Trello Session" library="TrelloAPI">
<doc>Creates a Trello Session</doc>
<kw name="Create Session" library="request_own_library">
<arg>${API_BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<status status="PASS" starttime="20220708 05:19:41.112" endtime="20220708 05:19:41.112"/>
</kw>
<status status="PASS" starttime="20220708 05:19:41.112" endtime="20220708 05:19:41.112"/>
</kw>
<kw name="Setup Board">
<doc>Create a board and save it's id for the suite</doc>
<kw name="Create A Board" library="Board">
<var>${BOARD}</var>
<arg>TestBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220708 05:19:41.114" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220708 05:19:41.113" endtime="20220708 05:19:41.114"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220708 05:19:41.114" endtime="20220708 05:19:41.114"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220708 05:19:41.114" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220708 05:19:41.114" endtime="20220708 05:19:41.115"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220708 05:19:41.435" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 05:19:41.115" endtime="20220708 05:19:41.435"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 05:19:41.435" endtime="20220708 05:19:41.435"/>
</return>
<msg timestamp="20220708 05:19:41.435" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 05:19:41.113" endtime="20220708 05:19:41.435"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 05:19:41.436" endtime="20220708 05:19:41.436"/>
</return>
<msg timestamp="20220708 05:19:41.436" level="INFO">${BOARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 05:19:41.113" endtime="20220708 05:19:41.436"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Set Suite Variable</arg>
<arg>\${TEST_SUITE_BOARD_ID}</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_BOARD_ID}</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220708 05:19:41.437" level="INFO">${TEST_SUITE_BOARD_ID} = 62c7be6d64fb5607adf91e92</msg>
<status status="PASS" starttime="20220708 05:19:41.436" endtime="20220708 05:19:41.437"/>
</kw>
<status status="PASS" starttime="20220708 05:19:41.436" endtime="20220708 05:19:41.437"/>
</kw>
<status status="PASS" starttime="20220708 05:19:41.113" endtime="20220708 05:19:41.437"/>
</kw>
<status status="PASS" starttime="20220708 05:19:41.112" endtime="20220708 05:19:41.437"/>
</kw>
<test id="s1-s1-s5-t1" name="CREATE a list" line="13">
<kw name="Create A List" library="List">
<var>${response}</var>
<arg>NewList</arg>
<doc>Creates a new List
board id
name the list will have
optional_args: idListSource, pos, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>list</arg>
<arg>name</arg>
<arg>${name}</arg>
<arg>idBoard</arg>
<arg>${idBoard}</arg>
<arg>@{optional_args}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220708 05:19:41.439" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220708 05:19:41.439" endtime="20220708 05:19:41.439"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220708 05:19:41.439" endtime="20220708 05:19:41.439"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220708 05:19:41.440" level="INFO">${url} = lists/</msg>
<status status="PASS" starttime="20220708 05:19:41.439" endtime="20220708 05:19:41.440"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220708 05:19:41.618" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 05:19:41.440" endtime="20220708 05:19:41.618"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 05:19:41.618" endtime="20220708 05:19:41.618"/>
</return>
<msg timestamp="20220708 05:19:41.618" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 05:19:41.438" endtime="20220708 05:19:41.618"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 05:19:41.618" endtime="20220708 05:19:41.618"/>
</return>
<msg timestamp="20220708 05:19:41.619" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 05:19:41.438" endtime="20220708 05:19:41.619"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>list</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220708 05:19:41.619" endtime="20220708 05:19:41.621"/>
</kw>
<status status="PASS" starttime="20220708 05:19:41.619" endtime="20220708 05:19:41.621"/>
</kw>
<doc>Verify that a list can be created through API</doc>
<tag>api</tag>
<tag>list.create</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220708 05:19:41.437" endtime="20220708 05:19:41.621"/>
</test>
<test id="s1-s1-s5-t2" name="UPDATE a list" line="19">
<kw name="Create A List" library="List">
<var>${response}</var>
<arg>NewList</arg>
<doc>Creates a new List
board id
name the list will have
optional_args: idListSource, pos, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>list</arg>
<arg>name</arg>
<arg>${name}</arg>
<arg>idBoard</arg>
<arg>${idBoard}</arg>
<arg>@{optional_args}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220708 05:19:41.623" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220708 05:19:41.623" endtime="20220708 05:19:41.623"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220708 05:19:41.624" endtime="20220708 05:19:41.624"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220708 05:19:41.624" level="INFO">${url} = lists/</msg>
<status status="PASS" starttime="20220708 05:19:41.624" endtime="20220708 05:19:41.624"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220708 05:19:41.784" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 05:19:41.625" endtime="20220708 05:19:41.784"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 05:19:41.784" endtime="20220708 05:19:41.784"/>
</return>
<msg timestamp="20220708 05:19:41.784" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 05:19:41.623" endtime="20220708 05:19:41.784"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 05:19:41.784" endtime="20220708 05:19:41.784"/>
</return>
<msg timestamp="20220708 05:19:41.784" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 05:19:41.622" endtime="20220708 05:19:41.784"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>list</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220708 05:19:41.785" endtime="20220708 05:19:41.786"/>
</kw>
<status status="PASS" starttime="20220708 05:19:41.784" endtime="20220708 05:19:41.786"/>
</kw>
<kw name="Update A List" library="List">
<arg>${response.json()}[id]</arg>
<arg>name</arg>
<arg>NewName</arg>
<doc>Updates the board with the given ID
optional_args: name, idListSource, pos, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>list</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220708 05:19:41.788" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220708 05:19:41.788" endtime="20220708 05:19:41.788"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220708 05:19:41.788" endtime="20220708 05:19:41.788"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220708 05:19:41.788" level="INFO">${url} = lists/62c7be6d3c18917c6ad36cb0</msg>
<status status="PASS" starttime="20220708 05:19:41.788" endtime="20220708 05:19:41.789"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220708 05:19:41.933" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 05:19:41.789" endtime="20220708 05:19:41.933"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 05:19:41.933" endtime="20220708 05:19:41.934"/>
</return>
<msg timestamp="20220708 05:19:41.934" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 05:19:41.787" endtime="20220708 05:19:41.934"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 05:19:41.934" endtime="20220708 05:19:41.934"/>
</return>
<status status="PASS" starttime="20220708 05:19:41.786" endtime="20220708 05:19:41.934"/>
</kw>
<kw name="Get A List" library="List">
<var>${new_response}</var>
<arg>${response.json()}[id]</arg>
<doc>Gets the List with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>list</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220708 05:19:41.936" level="INFO">${url} = lists/62c7be6d3c18917c6ad36cb0</msg>
<status status="PASS" starttime="20220708 05:19:41.935" endtime="20220708 05:19:41.936"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220708 05:19:42.048" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 05:19:41.936" endtime="20220708 05:19:42.048"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 05:19:42.048" endtime="20220708 05:19:42.048"/>
</return>
<msg timestamp="20220708 05:19:42.048" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 05:19:41.935" endtime="20220708 05:19:42.048"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 05:19:42.048" endtime="20220708 05:19:42.048"/>
</return>
<msg timestamp="20220708 05:19:42.049" level="INFO">${new_response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 05:19:41.934" endtime="20220708 05:19:42.049"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${new_response}</arg>
<arg>list</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220708 05:19:42.049" endtime="20220708 05:19:42.050"/>
</kw>
<status status="PASS" starttime="20220708 05:19:42.049" endtime="20220708 05:19:42.051"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${new_response.json()}[name]</arg>
<arg>NewName</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220708 05:19:42.051" endtime="20220708 05:19:42.051"/>
</kw>
<doc>Verify that a lists name can be updated through API</doc>
<tag>api</tag>
<tag>list.update</tag>
<tag>regression</tag>
<status status="PASS" starttime="20220708 05:19:41.622" endtime="20220708 05:19:42.051"/>
</test>
<test id="s1-s1-s5-t3" name="ARCHIVE A list" line="29">
<kw name="Create A List" library="List">
<var>${response}</var>
<arg>NewList</arg>
<doc>Creates a new List
board id
name the list will have
optional_args: idListSource, pos, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>list</arg>
<arg>name</arg>
<arg>${name}</arg>
<arg>idBoard</arg>
<arg>${idBoard}</arg>
<arg>@{optional_args}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220708 05:19:42.053" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220708 05:19:42.053" endtime="20220708 05:19:42.053"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220708 05:19:42.054" endtime="20220708 05:19:42.055"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220708 05:19:42.055" level="INFO">${url} = lists/</msg>
<status status="PASS" starttime="20220708 05:19:42.055" endtime="20220708 05:19:42.055"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220708 05:19:42.209" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 05:19:42.056" endtime="20220708 05:19:42.209"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 05:19:42.209" endtime="20220708 05:19:42.209"/>
</return>
<msg timestamp="20220708 05:19:42.210" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 05:19:42.053" endtime="20220708 05:19:42.210"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 05:19:42.210" endtime="20220708 05:19:42.210"/>
</return>
<msg timestamp="20220708 05:19:42.210" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 05:19:42.052" endtime="20220708 05:19:42.210"/>
</kw>
<kw name="Archive A List" library="List">
<arg>${response.json()}[id]</arg>
<doc>Deletes the list with the given ID</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>archive_list</arg>
<arg>${id}</arg>
<arg>value</arg>
<arg>true</arg>
<arg>status_code=${status_code}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220708 05:19:42.212" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220708 05:19:42.211" endtime="20220708 05:19:42.212"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220708 05:19:42.212" endtime="20220708 05:19:42.212"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220708 05:19:42.212" level="INFO">${url} = lists/62c7be6eb4f70246d0d9fcdd/closed</msg>
<status status="PASS" starttime="20220708 05:19:42.212" endtime="20220708 05:19:42.212"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220708 05:19:42.381" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 05:19:42.212" endtime="20220708 05:19:42.381"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 05:19:42.381" endtime="20220708 05:19:42.381"/>
</return>
<msg timestamp="20220708 05:19:42.382" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 05:19:42.211" endtime="20220708 05:19:42.382"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 05:19:42.382" endtime="20220708 05:19:42.382"/>
</return>
<status status="PASS" starttime="20220708 05:19:42.210" endtime="20220708 05:19:42.382"/>
</kw>
<kw name="Get A List" library="List">
<var>${new_response}</var>
<arg>${response.json()}[id]</arg>
<doc>Gets the List with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>list</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220708 05:19:42.383" level="INFO">${url} = lists/62c7be6eb4f70246d0d9fcdd</msg>
<status status="PASS" starttime="20220708 05:19:42.383" endtime="20220708 05:19:42.383"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220708 05:19:42.498" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 05:19:42.384" endtime="20220708 05:19:42.498"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 05:19:42.498" endtime="20220708 05:19:42.498"/>
</return>
<msg timestamp="20220708 05:19:42.498" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 05:19:42.383" endtime="20220708 05:19:42.498"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 05:19:42.498" endtime="20220708 05:19:42.498"/>
</return>
<msg timestamp="20220708 05:19:42.499" level="INFO">${new_response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 05:19:42.382" endtime="20220708 05:19:42.499"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${new_response.json()}[closed]</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220708 05:19:42.499" endtime="20220708 05:19:42.499"/>
</kw>
<doc>Verify that a list can be archived through API</doc>
<tag>api</tag>
<tag>list.archive</tag>
<tag>regression</tag>
<status status="PASS" starttime="20220708 05:19:42.052" endtime="20220708 05:19:42.499"/>
</test>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Teardown Board</arg>
<arg>Delete All Sessions</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Teardown Board">
<doc>Delete the board created for this suite.</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220708 05:19:42.502" level="INFO">${url} = boards/62c7be6d64fb5607adf91e92</msg>
<status status="PASS" starttime="20220708 05:19:42.502" endtime="20220708 05:19:42.502"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220708 05:19:42.911" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 05:19:42.502" endtime="20220708 05:19:42.911"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 05:19:42.911" endtime="20220708 05:19:42.911"/>
</return>
<msg timestamp="20220708 05:19:42.911" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 05:19:42.501" endtime="20220708 05:19:42.911"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 05:19:42.911" endtime="20220708 05:19:42.911"/>
</return>
<status status="PASS" starttime="20220708 05:19:42.501" endtime="20220708 05:19:42.911"/>
</kw>
<status status="PASS" starttime="20220708 05:19:42.501" endtime="20220708 05:19:42.911"/>
</kw>
<status status="PASS" starttime="20220708 05:19:42.500" endtime="20220708 05:19:42.911"/>
</kw>
<kw name="Delete All Sessions" library="request_own_library">
<status status="PASS" starttime="20220708 05:19:42.911" endtime="20220708 05:19:42.912"/>
</kw>
<status status="PASS" starttime="20220708 05:19:42.500" endtime="20220708 05:19:42.912"/>
</kw>
<doc>Example Test with Trello API lists</doc>
<status status="PASS" starttime="20220708 05:19:41.100" endtime="20220708 05:19:42.912"/>
</suite>
<status status="PASS" starttime="20220708 05:19:27.730" endtime="20220708 05:19:42.914"/>
</suite>
<status status="PASS" starttime="20220708 05:19:27.714" endtime="20220708 05:19:42.916"/>
</suite>
<statistics>
<total>
<stat pass="18" fail="0" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="18" fail="0" skip="0">api</stat>
<stat pass="1" fail="0" skip="0">board.create</stat>
<stat pass="1" fail="0" skip="0">board.delete</stat>
<stat pass="1" fail="0" skip="0">board.get</stat>
<stat pass="2" fail="0" skip="0">board.update</stat>
<stat pass="1" fail="0" skip="0">card.close</stat>
<stat pass="1" fail="0" skip="0">card.create</stat>
<stat pass="1" fail="0" skip="0">card.delete</stat>
<stat pass="1" fail="0" skip="0">card.update</stat>
<stat pass="1" fail="0" skip="0">checklist.create</stat>
<stat pass="1" fail="0" skip="0">checklist.delete</stat>
<stat pass="1" fail="0" skip="0">checklist.update</stat>
<stat pass="1" fail="0" skip="0">label.create</stat>
<stat pass="1" fail="0" skip="0">label.delete</stat>
<stat pass="1" fail="0" skip="0">label.get</stat>
<stat pass="1" fail="0" skip="0">label.update</stat>
<stat pass="1" fail="0" skip="0">list.archive</stat>
<stat pass="1" fail="0" skip="0">list.create</stat>
<stat pass="1" fail="0" skip="0">list.update</stat>
<stat pass="5" fail="0" skip="0">regression</stat>
<stat pass="13" fail="0" skip="0">smoke</stat>
</tag>
<suite>
<stat pass="18" fail="0" skip="0" id="s1" name="Trello">Trello</stat>
<stat pass="18" fail="0" skip="0" id="s1-s1" name="Api">Trello.Api</stat>
<stat pass="5" fail="0" skip="0" id="s1-s1-s1" name="Trello Api Boards Tests">Trello.Api.Trello Api Boards Tests</stat>
<stat pass="4" fail="0" skip="0" id="s1-s1-s2" name="Trello Api Cards Tests">Trello.Api.Trello Api Cards Tests</stat>
<stat pass="3" fail="0" skip="0" id="s1-s1-s3" name="Trello Api Checklists Tests">Trello.Api.Trello Api Checklists Tests</stat>
<stat pass="3" fail="0" skip="0" id="s1-s1-s4" name="Trello Api Labels Tests">Trello.Api.Trello Api Labels Tests</stat>
<stat pass="3" fail="0" skip="0" id="s1-s1-s5" name="Trello Api Lists Tests">Trello.Api.Trello Api Lists Tests</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
