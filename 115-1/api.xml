<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 5.0.1 (Python 3.10.5 on linux)" generated="20220704 16:34:49.614" rpa="false" schemaversion="3">
<suite id="s1" name="Trello" source="/trello">
<suite id="s1-s1" name="Api" source="/trello/api">
<suite id="s1-s1-s1" name="Trello Api Boards Tests" source="/trello/api/trello_api_boards_tests.robot">
<kw name="Create Trello Session" library="TrelloAPI" type="SETUP">
<doc>Creates a Trello Session</doc>
<kw name="Create Session" library="request_own_library">
<arg>${API_BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<status status="PASS" starttime="20220704 16:34:49.740" endtime="20220704 16:34:49.740"/>
</kw>
<status status="PASS" starttime="20220704 16:34:49.738" endtime="20220704 16:34:49.740"/>
</kw>
<test id="s1-s1-s1-t1" name="CREATE a board" line="9">
<kw name="Create A Board" library="Board">
<var>${response}</var>
<arg>NewBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 16:34:49.742" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 16:34:49.742" endtime="20220704 16:34:49.742"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 16:34:49.742" endtime="20220704 16:34:49.742"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 16:34:49.743" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220704 16:34:49.742" endtime="20220704 16:34:49.743"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 16:34:50.099" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 16:34:49.743" endtime="20220704 16:34:50.099"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 16:34:50.099" endtime="20220704 16:34:50.099"/>
</return>
<msg timestamp="20220704 16:34:50.099" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 16:34:49.741" endtime="20220704 16:34:50.099"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 16:34:50.099" endtime="20220704 16:34:50.099"/>
</return>
<msg timestamp="20220704 16:34:50.100" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 16:34:49.741" endtime="20220704 16:34:50.100"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>board</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220704 16:34:50.100" endtime="20220704 16:34:50.105"/>
</kw>
<status status="PASS" starttime="20220704 16:34:50.100" endtime="20220704 16:34:50.105"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${response.json()}[id]</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${response.json()}[id]</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 16:34:50.108" level="INFO">${url} = boards/62c316a968f6e53ffb299160</msg>
<status status="PASS" starttime="20220704 16:34:50.107" endtime="20220704 16:34:50.108"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 16:34:50.462" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 16:34:50.108" endtime="20220704 16:34:50.462"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 16:34:50.462" endtime="20220704 16:34:50.462"/>
</return>
<msg timestamp="20220704 16:34:50.462" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 16:34:50.107" endtime="20220704 16:34:50.462"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 16:34:50.462" endtime="20220704 16:34:50.462"/>
</return>
<status status="PASS" starttime="20220704 16:34:50.106" endtime="20220704 16:34:50.462"/>
</kw>
<status status="PASS" starttime="20220704 16:34:50.106" endtime="20220704 16:34:50.462"/>
</kw>
<doc>Verify that a board can be create through API</doc>
<tag>api</tag>
<tag>board.create</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220704 16:34:49.740" endtime="20220704 16:34:50.462"/>
</test>
<test id="s1-s1-s1-t2" name="UPDATE a Board's name" line="16">
<kw name="Create A Board" library="Board">
<var>${response}</var>
<arg>NewBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 16:34:50.465" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 16:34:50.465" endtime="20220704 16:34:50.465"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 16:34:50.465" endtime="20220704 16:34:50.465"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 16:34:50.466" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220704 16:34:50.465" endtime="20220704 16:34:50.466"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 16:34:50.662" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 16:34:50.466" endtime="20220704 16:34:50.662"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 16:34:50.662" endtime="20220704 16:34:50.662"/>
</return>
<msg timestamp="20220704 16:34:50.663" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 16:34:50.464" endtime="20220704 16:34:50.663"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 16:34:50.663" endtime="20220704 16:34:50.663"/>
</return>
<msg timestamp="20220704 16:34:50.663" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 16:34:50.464" endtime="20220704 16:34:50.663"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>board</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220704 16:34:50.664" endtime="20220704 16:34:50.668"/>
</kw>
<status status="PASS" starttime="20220704 16:34:50.663" endtime="20220704 16:34:50.668"/>
</kw>
<kw name="Update A Board" library="Board">
<arg>${response.json()}[id]</arg>
<arg>name</arg>
<arg>NewName</arg>
<doc>Updates the board with the given ID
optional_args: name, desc, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 16:34:50.670" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 16:34:50.669" endtime="20220704 16:34:50.670"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 16:34:50.670" endtime="20220704 16:34:50.670"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 16:34:50.670" level="INFO">${url} = boards/62c316aaf1a3e1481ad36202</msg>
<status status="PASS" starttime="20220704 16:34:50.670" endtime="20220704 16:34:50.670"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 16:34:50.810" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 16:34:50.670" endtime="20220704 16:34:50.810"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 16:34:50.810" endtime="20220704 16:34:50.810"/>
</return>
<msg timestamp="20220704 16:34:50.811" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 16:34:50.669" endtime="20220704 16:34:50.811"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 16:34:50.811" endtime="20220704 16:34:50.811"/>
</return>
<status status="PASS" starttime="20220704 16:34:50.668" endtime="20220704 16:34:50.811"/>
</kw>
<kw name="Get A Board" library="Board">
<var>${new_response}</var>
<arg>${response.json()}[id]</arg>
<doc>Gets the Board with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 16:34:50.813" level="INFO">${url} = boards/62c316aaf1a3e1481ad36202</msg>
<status status="PASS" starttime="20220704 16:34:50.812" endtime="20220704 16:34:50.813"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 16:34:50.901" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 16:34:50.813" endtime="20220704 16:34:50.901"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 16:34:50.901" endtime="20220704 16:34:50.901"/>
</return>
<msg timestamp="20220704 16:34:50.901" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 16:34:50.812" endtime="20220704 16:34:50.901"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 16:34:50.901" endtime="20220704 16:34:50.901"/>
</return>
<msg timestamp="20220704 16:34:50.901" level="INFO">${new_response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 16:34:50.811" endtime="20220704 16:34:50.901"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${new_response}</arg>
<arg>board</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220704 16:34:50.902" endtime="20220704 16:34:50.906"/>
</kw>
<status status="PASS" starttime="20220704 16:34:50.901" endtime="20220704 16:34:50.906"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${new_response.json()}[name]</arg>
<arg>NewName</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220704 16:34:50.906" endtime="20220704 16:34:50.907"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${response.json()}[id]</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${response.json()}[id]</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 16:34:50.909" level="INFO">${url} = boards/62c316aaf1a3e1481ad36202</msg>
<status status="PASS" starttime="20220704 16:34:50.908" endtime="20220704 16:34:50.909"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 16:34:51.234" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 16:34:50.909" endtime="20220704 16:34:51.235"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 16:34:51.235" endtime="20220704 16:34:51.235"/>
</return>
<msg timestamp="20220704 16:34:51.235" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 16:34:50.908" endtime="20220704 16:34:51.235"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 16:34:51.235" endtime="20220704 16:34:51.235"/>
</return>
<status status="PASS" starttime="20220704 16:34:50.907" endtime="20220704 16:34:51.235"/>
</kw>
<status status="PASS" starttime="20220704 16:34:50.907" endtime="20220704 16:34:51.235"/>
</kw>
<doc>Verify that a board's name can be updated through API</doc>
<tag>api</tag>
<tag>board.update</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220704 16:34:50.463" endtime="20220704 16:34:51.235"/>
</test>
<test id="s1-s1-s1-t3" name="DELETE A Board" line="27">
<kw name="Create A Board" library="Board">
<var>${response}</var>
<arg>NewBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 16:34:51.238" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 16:34:51.237" endtime="20220704 16:34:51.238"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 16:34:51.238" endtime="20220704 16:34:51.238"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 16:34:51.239" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220704 16:34:51.238" endtime="20220704 16:34:51.239"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 16:34:51.451" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 16:34:51.239" endtime="20220704 16:34:51.451"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 16:34:51.451" endtime="20220704 16:34:51.451"/>
</return>
<msg timestamp="20220704 16:34:51.451" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 16:34:51.237" endtime="20220704 16:34:51.451"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 16:34:51.451" endtime="20220704 16:34:51.451"/>
</return>
<msg timestamp="20220704 16:34:51.451" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 16:34:51.237" endtime="20220704 16:34:51.451"/>
</kw>
<kw name="Delete A Board" library="Board">
<arg>${response.json()}[id]</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 16:34:51.453" level="INFO">${url} = boards/62c316ab0f852c115a59c635</msg>
<status status="PASS" starttime="20220704 16:34:51.453" endtime="20220704 16:34:51.453"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 16:34:51.834" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 16:34:51.453" endtime="20220704 16:34:51.834"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 16:34:51.834" endtime="20220704 16:34:51.834"/>
</return>
<msg timestamp="20220704 16:34:51.834" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 16:34:51.452" endtime="20220704 16:34:51.835"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 16:34:51.835" endtime="20220704 16:34:51.835"/>
</return>
<status status="PASS" starttime="20220704 16:34:51.451" endtime="20220704 16:34:51.835"/>
</kw>
<kw name="Get A Board" library="Board">
<arg>${response.json()}[id]</arg>
<arg>status_code=404</arg>
<doc>Gets the Board with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 16:34:51.837" level="INFO">${url} = boards/62c316ab0f852c115a59c635</msg>
<status status="PASS" starttime="20220704 16:34:51.836" endtime="20220704 16:34:51.837"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 16:34:51.911" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220704 16:34:51.837" endtime="20220704 16:34:51.912"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 16:34:51.912" endtime="20220704 16:34:51.912"/>
</return>
<msg timestamp="20220704 16:34:51.912" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220704 16:34:51.836" endtime="20220704 16:34:51.912"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 16:34:51.912" endtime="20220704 16:34:51.912"/>
</return>
<status status="PASS" starttime="20220704 16:34:51.835" endtime="20220704 16:34:51.912"/>
</kw>
<doc>Verify that a board can be deleted through API</doc>
<tag>api</tag>
<tag>board.delete</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220704 16:34:51.236" endtime="20220704 16:34:51.912"/>
</test>
<test id="s1-s1-s1-t4" name="GET Information of A Board" line="34">
<kw name="Create A Board" library="Board">
<var>${response}</var>
<arg>BoardTest</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 16:34:51.915" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 16:34:51.914" endtime="20220704 16:34:51.915"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 16:34:51.915" endtime="20220704 16:34:51.915"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 16:34:51.916" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220704 16:34:51.915" endtime="20220704 16:34:51.916"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 16:34:52.134" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 16:34:51.916" endtime="20220704 16:34:52.134"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 16:34:52.134" endtime="20220704 16:34:52.134"/>
</return>
<msg timestamp="20220704 16:34:52.135" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 16:34:51.914" endtime="20220704 16:34:52.135"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 16:34:52.135" endtime="20220704 16:34:52.135"/>
</return>
<msg timestamp="20220704 16:34:52.135" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 16:34:51.914" endtime="20220704 16:34:52.135"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>board</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220704 16:34:52.136" endtime="20220704 16:34:52.139"/>
</kw>
<status status="PASS" starttime="20220704 16:34:52.135" endtime="20220704 16:34:52.140"/>
</kw>
<kw name="Get A Board" library="Board">
<var>${response2}</var>
<arg>${response.json()}[id]</arg>
<doc>Gets the Board with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 16:34:52.141" level="INFO">${url} = boards/62c316abc047cd85abb265b1</msg>
<status status="PASS" starttime="20220704 16:34:52.141" endtime="20220704 16:34:52.141"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 16:34:52.224" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 16:34:52.141" endtime="20220704 16:34:52.224"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 16:34:52.224" endtime="20220704 16:34:52.224"/>
</return>
<msg timestamp="20220704 16:34:52.224" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 16:34:52.140" endtime="20220704 16:34:52.224"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 16:34:52.224" endtime="20220704 16:34:52.225"/>
</return>
<msg timestamp="20220704 16:34:52.225" level="INFO">${response2} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 16:34:52.140" endtime="20220704 16:34:52.225"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response2}</arg>
<arg>board</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220704 16:34:52.225" endtime="20220704 16:34:52.229"/>
</kw>
<status status="PASS" starttime="20220704 16:34:52.225" endtime="20220704 16:34:52.229"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${response2.json()}[name]</arg>
<arg>BoardTest</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220704 16:34:52.229" endtime="20220704 16:34:52.230"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${response.json()}[id]</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${response.json()}[id]</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 16:34:52.232" level="INFO">${url} = boards/62c316abc047cd85abb265b1</msg>
<status status="PASS" starttime="20220704 16:34:52.232" endtime="20220704 16:34:52.232"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 16:34:52.607" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 16:34:52.232" endtime="20220704 16:34:52.607"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 16:34:52.607" endtime="20220704 16:34:52.607"/>
</return>
<msg timestamp="20220704 16:34:52.608" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 16:34:52.231" endtime="20220704 16:34:52.608"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 16:34:52.608" endtime="20220704 16:34:52.608"/>
</return>
<status status="PASS" starttime="20220704 16:34:52.231" endtime="20220704 16:34:52.608"/>
</kw>
<status status="PASS" starttime="20220704 16:34:52.230" endtime="20220704 16:34:52.608"/>
</kw>
<doc>Verify that a board's information can be accesed through API</doc>
<tag>api</tag>
<tag>board.get</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220704 16:34:51.913" endtime="20220704 16:34:52.608"/>
</test>
<test id="s1-s1-s1-t5" name="UPDATE a Board's description" line="45">
<kw name="Create A Board" library="Board">
<var>${response}</var>
<arg>NewBoardForTest</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 16:34:52.610" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 16:34:52.610" endtime="20220704 16:34:52.610"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 16:34:52.610" endtime="20220704 16:34:52.611"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 16:34:52.612" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220704 16:34:52.611" endtime="20220704 16:34:52.612"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 16:34:52.803" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 16:34:52.612" endtime="20220704 16:34:52.803"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 16:34:52.803" endtime="20220704 16:34:52.803"/>
</return>
<msg timestamp="20220704 16:34:52.804" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 16:34:52.610" endtime="20220704 16:34:52.804"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 16:34:52.804" endtime="20220704 16:34:52.804"/>
</return>
<msg timestamp="20220704 16:34:52.804" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 16:34:52.609" endtime="20220704 16:34:52.804"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>board</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220704 16:34:52.805" endtime="20220704 16:34:52.809"/>
</kw>
<status status="PASS" starttime="20220704 16:34:52.804" endtime="20220704 16:34:52.809"/>
</kw>
<kw name="Update A Board" library="Board">
<arg>${response.json()}[id]</arg>
<arg>desc</arg>
<arg>sampleDescription</arg>
<doc>Updates the board with the given ID
optional_args: name, desc, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 16:34:52.811" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 16:34:52.810" endtime="20220704 16:34:52.811"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 16:34:52.811" endtime="20220704 16:34:52.811"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 16:34:52.811" level="INFO">${url} = boards/62c316ac4b75916427d97f6c</msg>
<status status="PASS" starttime="20220704 16:34:52.811" endtime="20220704 16:34:52.811"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 16:34:52.945" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 16:34:52.811" endtime="20220704 16:34:52.945"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 16:34:52.945" endtime="20220704 16:34:52.945"/>
</return>
<msg timestamp="20220704 16:34:52.945" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 16:34:52.810" endtime="20220704 16:34:52.945"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 16:34:52.945" endtime="20220704 16:34:52.945"/>
</return>
<status status="PASS" starttime="20220704 16:34:52.809" endtime="20220704 16:34:52.946"/>
</kw>
<kw name="Get A Board" library="Board">
<var>${new_response}</var>
<arg>${response.json()}[id]</arg>
<doc>Gets the Board with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 16:34:52.948" level="INFO">${url} = boards/62c316ac4b75916427d97f6c</msg>
<status status="PASS" starttime="20220704 16:34:52.947" endtime="20220704 16:34:52.948"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 16:34:53.027" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 16:34:52.948" endtime="20220704 16:34:53.027"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 16:34:53.027" endtime="20220704 16:34:53.027"/>
</return>
<msg timestamp="20220704 16:34:53.027" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 16:34:52.947" endtime="20220704 16:34:53.027"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 16:34:53.027" endtime="20220704 16:34:53.027"/>
</return>
<msg timestamp="20220704 16:34:53.028" level="INFO">${new_response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 16:34:52.946" endtime="20220704 16:34:53.028"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${new_response.json()}[desc]</arg>
<arg>sampleDescription</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220704 16:34:53.028" endtime="20220704 16:34:53.029"/>
</kw>
<kw name="Update A Board" library="Board">
<arg>${response.json()}[id]</arg>
<arg>desc</arg>
<arg>updatedDescription</arg>
<doc>Updates the board with the given ID
optional_args: name, desc, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 16:34:53.031" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 16:34:53.030" endtime="20220704 16:34:53.031"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 16:34:53.031" endtime="20220704 16:34:53.031"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 16:34:53.031" level="INFO">${url} = boards/62c316ac4b75916427d97f6c</msg>
<status status="PASS" starttime="20220704 16:34:53.031" endtime="20220704 16:34:53.031"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 16:34:53.141" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 16:34:53.032" endtime="20220704 16:34:53.141"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 16:34:53.141" endtime="20220704 16:34:53.141"/>
</return>
<msg timestamp="20220704 16:34:53.142" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 16:34:53.030" endtime="20220704 16:34:53.142"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 16:34:53.142" endtime="20220704 16:34:53.142"/>
</return>
<status status="PASS" starttime="20220704 16:34:53.029" endtime="20220704 16:34:53.142"/>
</kw>
<kw name="Get A Board" library="Board">
<var>${new_response2}</var>
<arg>${response.json()}[id]</arg>
<doc>Gets the Board with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 16:34:53.144" level="INFO">${url} = boards/62c316ac4b75916427d97f6c</msg>
<status status="PASS" starttime="20220704 16:34:53.144" endtime="20220704 16:34:53.144"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 16:34:53.220" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 16:34:53.144" endtime="20220704 16:34:53.220"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 16:34:53.220" endtime="20220704 16:34:53.221"/>
</return>
<msg timestamp="20220704 16:34:53.221" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 16:34:53.143" endtime="20220704 16:34:53.221"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 16:34:53.221" endtime="20220704 16:34:53.221"/>
</return>
<msg timestamp="20220704 16:34:53.221" level="INFO">${new_response2} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 16:34:53.142" endtime="20220704 16:34:53.221"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${new_response2.json()}[desc]</arg>
<arg>updatedDescription</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220704 16:34:53.221" endtime="20220704 16:34:53.222"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${response.json()}[id]</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${response.json()}[id]</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 16:34:53.225" level="INFO">${url} = boards/62c316ac4b75916427d97f6c</msg>
<status status="PASS" starttime="20220704 16:34:53.224" endtime="20220704 16:34:53.225"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 16:34:53.618" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 16:34:53.225" endtime="20220704 16:34:53.618"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 16:34:53.618" endtime="20220704 16:34:53.618"/>
</return>
<msg timestamp="20220704 16:34:53.619" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 16:34:53.224" endtime="20220704 16:34:53.619"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 16:34:53.619" endtime="20220704 16:34:53.619"/>
</return>
<status status="PASS" starttime="20220704 16:34:53.223" endtime="20220704 16:34:53.619"/>
</kw>
<status status="PASS" starttime="20220704 16:34:53.222" endtime="20220704 16:34:53.619"/>
</kw>
<doc>Verify that a board's description can be updated through API</doc>
<tag>api</tag>
<tag>board.update</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220704 16:34:52.609" endtime="20220704 16:34:53.619"/>
</test>
<kw name="Delete All Sessions" library="request_own_library" type="TEARDOWN">
<status status="PASS" starttime="20220704 16:34:53.621" endtime="20220704 16:34:53.622"/>
</kw>
<doc>Example Test with Trello API Boards</doc>
<status status="PASS" starttime="20220704 16:34:49.633" endtime="20220704 16:34:53.622"/>
</suite>
<suite id="s1-s1-s2" name="Trello Api Cards Tests" source="/trello/api/trello_api_cards_tests.robot">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Create Trello Session</arg>
<arg>Setup Board And List</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Create Trello Session" library="TrelloAPI">
<doc>Creates a Trello Session</doc>
<kw name="Create Session" library="request_own_library">
<arg>${API_BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<status status="PASS" starttime="20220704 16:34:53.634" endtime="20220704 16:34:53.634"/>
</kw>
<status status="PASS" starttime="20220704 16:34:53.633" endtime="20220704 16:34:53.634"/>
</kw>
<kw name="Setup Board And List">
<doc>Create a board and save its ID and its first list's ID</doc>
<kw name="Create A Board" library="Board">
<var>${BOARD}</var>
<arg>TestBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 16:34:53.635" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 16:34:53.635" endtime="20220704 16:34:53.635"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 16:34:53.635" endtime="20220704 16:34:53.635"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 16:34:53.636" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220704 16:34:53.635" endtime="20220704 16:34:53.636"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 16:34:53.959" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 16:34:53.636" endtime="20220704 16:34:53.959"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 16:34:53.959" endtime="20220704 16:34:53.960"/>
</return>
<msg timestamp="20220704 16:34:53.960" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 16:34:53.634" endtime="20220704 16:34:53.960"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 16:34:53.960" endtime="20220704 16:34:53.960"/>
</return>
<msg timestamp="20220704 16:34:53.960" level="INFO">${BOARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 16:34:53.634" endtime="20220704 16:34:53.960"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_BOARD_ID}</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220704 16:34:53.961" level="INFO">${TEST_SUITE_BOARD_ID} = 62c316ad37e6e5086e4fec8b</msg>
<status status="PASS" starttime="20220704 16:34:53.960" endtime="20220704 16:34:53.961"/>
</kw>
<kw name="Get Lists On A Board" library="Board">
<var>${LISTS}</var>
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Get all the lists in a board</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>lists_on_board</arg>
<arg>${id}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 16:34:53.962" level="INFO">${url} = boards/62c316ad37e6e5086e4fec8b/lists/</msg>
<status status="PASS" starttime="20220704 16:34:53.962" endtime="20220704 16:34:53.963"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 16:34:54.044" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 16:34:53.963" endtime="20220704 16:34:54.044"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 16:34:54.044" endtime="20220704 16:34:54.044"/>
</return>
<msg timestamp="20220704 16:34:54.044" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 16:34:53.962" endtime="20220704 16:34:54.044"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 16:34:54.044" endtime="20220704 16:34:54.044"/>
</return>
<msg timestamp="20220704 16:34:54.044" level="INFO">${LISTS} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 16:34:53.961" endtime="20220704 16:34:54.044"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_LIST_ID}</arg>
<arg>${LISTS.json()}[0][id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220704 16:34:54.045" level="INFO">${TEST_SUITE_LIST_ID} = 62c316ad37e6e5086e4fec92</msg>
<status status="PASS" starttime="20220704 16:34:54.045" endtime="20220704 16:34:54.045"/>
</kw>
<status status="PASS" starttime="20220704 16:34:53.634" endtime="20220704 16:34:54.046"/>
</kw>
<status status="PASS" starttime="20220704 16:34:53.633" endtime="20220704 16:34:54.046"/>
</kw>
<test id="s1-s1-s2-t1" name="Verify A Card Can Be Created" line="13">
<kw name="Create A Card" library="Card">
<var>${response}</var>
<arg>name</arg>
<arg>RFCard2</arg>
<doc>Creates a new card in the given list.
required_args: listId
optional_args: name, desc, pos, idCardSource, idLabels, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>@{optional_args}</arg>
<arg>idList</arg>
<arg>${idList}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 16:34:54.048" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 16:34:54.048" endtime="20220704 16:34:54.048"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 16:34:54.048" endtime="20220704 16:34:54.048"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 16:34:54.049" level="INFO">${url} = cards/</msg>
<status status="PASS" starttime="20220704 16:34:54.048" endtime="20220704 16:34:54.049"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 16:34:54.277" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 16:34:54.049" endtime="20220704 16:34:54.277"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 16:34:54.277" endtime="20220704 16:34:54.277"/>
</return>
<msg timestamp="20220704 16:34:54.277" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 16:34:54.047" endtime="20220704 16:34:54.277"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 16:34:54.277" endtime="20220704 16:34:54.277"/>
</return>
<msg timestamp="20220704 16:34:54.278" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 16:34:54.047" endtime="20220704 16:34:54.278"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>card</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220704 16:34:54.278" endtime="20220704 16:34:54.284"/>
</kw>
<status status="PASS" starttime="20220704 16:34:54.278" endtime="20220704 16:34:54.284"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 16:34:54.285" endtime="20220704 16:34:54.285"/>
</return>
<msg timestamp="20220704 16:34:54.286" level="INFO">${CARD_ID} = 62c316ae67e0060fb5bfc937</msg>
<status status="PASS" starttime="20220704 16:34:54.284" endtime="20220704 16:34:54.286"/>
</kw>
<kw name="Get A Card" library="Card">
<var>${response}</var>
<arg>${CARD_ID}</arg>
<doc>Gets the card with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 16:34:54.287" level="INFO">${url} = cards/62c316ae67e0060fb5bfc937</msg>
<status status="PASS" starttime="20220704 16:34:54.286" endtime="20220704 16:34:54.287"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 16:34:54.383" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 16:34:54.287" endtime="20220704 16:34:54.383"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 16:34:54.384" endtime="20220704 16:34:54.384"/>
</return>
<msg timestamp="20220704 16:34:54.384" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 16:34:54.286" endtime="20220704 16:34:54.384"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 16:34:54.384" endtime="20220704 16:34:54.384"/>
</return>
<msg timestamp="20220704 16:34:54.384" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 16:34:54.286" endtime="20220704 16:34:54.384"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_NAME}</var>
<arg>${response}</arg>
<arg>name</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 16:34:54.385" endtime="20220704 16:34:54.385"/>
</return>
<msg timestamp="20220704 16:34:54.386" level="INFO">${CARD_NAME} = RFCard2</msg>
<status status="PASS" starttime="20220704 16:34:54.384" endtime="20220704 16:34:54.386"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${CARD_NAME}</arg>
<arg>RFCard2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220704 16:34:54.386" endtime="20220704 16:34:54.386"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Card</arg>
<arg>${CARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Card" library="Card">
<arg>${CARD_ID}</arg>
<doc>Deletes the card with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 16:34:54.388" level="INFO">${url} = cards/62c316ae67e0060fb5bfc937</msg>
<status status="PASS" starttime="20220704 16:34:54.388" endtime="20220704 16:34:54.388"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 16:34:54.595" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 16:34:54.388" endtime="20220704 16:34:54.595"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 16:34:54.595" endtime="20220704 16:34:54.595"/>
</return>
<msg timestamp="20220704 16:34:54.595" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 16:34:54.387" endtime="20220704 16:34:54.595"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 16:34:54.595" endtime="20220704 16:34:54.595"/>
</return>
<status status="PASS" starttime="20220704 16:34:54.387" endtime="20220704 16:34:54.595"/>
</kw>
<status status="PASS" starttime="20220704 16:34:54.386" endtime="20220704 16:34:54.595"/>
</kw>
<doc>Verify that a card can be created through API</doc>
<tag>api</tag>
<tag>card.create</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220704 16:34:54.046" endtime="20220704 16:34:54.596"/>
</test>
<test id="s1-s1-s2-t2" name="Verify A Card Can Be Closed" line="24">
<kw name="Create A Card" library="Card">
<var>${response}</var>
<doc>Creates a new card in the given list.
required_args: listId
optional_args: name, desc, pos, idCardSource, idLabels, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>@{optional_args}</arg>
<arg>idList</arg>
<arg>${idList}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 16:34:54.599" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 16:34:54.598" endtime="20220704 16:34:54.599"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 16:34:54.599" endtime="20220704 16:34:54.599"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 16:34:54.600" level="INFO">${url} = cards/</msg>
<status status="PASS" starttime="20220704 16:34:54.599" endtime="20220704 16:34:54.600"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 16:34:54.786" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 16:34:54.600" endtime="20220704 16:34:54.786"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 16:34:54.786" endtime="20220704 16:34:54.787"/>
</return>
<msg timestamp="20220704 16:34:54.787" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 16:34:54.598" endtime="20220704 16:34:54.787"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 16:34:54.787" endtime="20220704 16:34:54.787"/>
</return>
<msg timestamp="20220704 16:34:54.787" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 16:34:54.597" endtime="20220704 16:34:54.787"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 16:34:54.788" endtime="20220704 16:34:54.788"/>
</return>
<msg timestamp="20220704 16:34:54.789" level="INFO">${CARD_ID} = 62c316aeaf55126d7952543f</msg>
<status status="PASS" starttime="20220704 16:34:54.787" endtime="20220704 16:34:54.789"/>
</kw>
<kw name="Archive A Card" library="Card">
<arg>${CARD_ID}</arg>
<doc>Modifies the card status to closed.</doc>
<kw name="Update A Card" library="Card">
<var>${response}</var>
<arg>${id}</arg>
<arg>closed</arg>
<arg>true</arg>
<arg>status_code=${status_code}</arg>
<doc>Updates the card with the given ID
optional_args: name, desc, closed, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<arg>status_code=${status_code}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 16:34:54.791" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 16:34:54.791" endtime="20220704 16:34:54.791"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 16:34:54.791" endtime="20220704 16:34:54.791"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 16:34:54.792" level="INFO">${url} = cards/62c316aeaf55126d7952543f</msg>
<status status="PASS" starttime="20220704 16:34:54.791" endtime="20220704 16:34:54.792"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 16:34:54.961" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 16:34:54.792" endtime="20220704 16:34:54.961"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 16:34:54.961" endtime="20220704 16:34:54.961"/>
</return>
<msg timestamp="20220704 16:34:54.962" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 16:34:54.790" endtime="20220704 16:34:54.962"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 16:34:54.962" endtime="20220704 16:34:54.962"/>
</return>
<msg timestamp="20220704 16:34:54.962" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 16:34:54.789" endtime="20220704 16:34:54.962"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 16:34:54.962" endtime="20220704 16:34:54.962"/>
</return>
<status status="PASS" starttime="20220704 16:34:54.789" endtime="20220704 16:34:54.962"/>
</kw>
<kw name="Get A Card" library="Card">
<var>${response}</var>
<arg>${CARD_ID}</arg>
<doc>Gets the card with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 16:34:54.964" level="INFO">${url} = cards/62c316aeaf55126d7952543f</msg>
<status status="PASS" starttime="20220704 16:34:54.964" endtime="20220704 16:34:54.964"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 16:34:55.054" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 16:34:54.964" endtime="20220704 16:34:55.055"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 16:34:55.055" endtime="20220704 16:34:55.055"/>
</return>
<msg timestamp="20220704 16:34:55.055" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 16:34:54.963" endtime="20220704 16:34:55.055"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 16:34:55.055" endtime="20220704 16:34:55.055"/>
</return>
<msg timestamp="20220704 16:34:55.055" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 16:34:54.963" endtime="20220704 16:34:55.055"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_CLOSED}</var>
<arg>${response}</arg>
<arg>closed</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 16:34:55.056" endtime="20220704 16:34:55.056"/>
</return>
<msg timestamp="20220704 16:34:55.057" level="INFO">${CARD_CLOSED} = True</msg>
<status status="PASS" starttime="20220704 16:34:55.055" endtime="20220704 16:34:55.057"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${CARD_CLOSED}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220704 16:34:55.057" endtime="20220704 16:34:55.057"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Card</arg>
<arg>${CARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Card" library="Card">
<arg>${CARD_ID}</arg>
<doc>Deletes the card with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 16:34:55.059" level="INFO">${url} = cards/62c316aeaf55126d7952543f</msg>
<status status="PASS" starttime="20220704 16:34:55.058" endtime="20220704 16:34:55.059"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 16:34:55.235" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 16:34:55.059" endtime="20220704 16:34:55.235"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 16:34:55.235" endtime="20220704 16:34:55.235"/>
</return>
<msg timestamp="20220704 16:34:55.236" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 16:34:55.058" endtime="20220704 16:34:55.236"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 16:34:55.236" endtime="20220704 16:34:55.236"/>
</return>
<status status="PASS" starttime="20220704 16:34:55.058" endtime="20220704 16:34:55.236"/>
</kw>
<status status="PASS" starttime="20220704 16:34:55.057" endtime="20220704 16:34:55.236"/>
</kw>
<doc>Verify that a card can be closed through API</doc>
<tag>api</tag>
<tag>card.close</tag>
<tag>regression</tag>
<status status="PASS" starttime="20220704 16:34:54.596" endtime="20220704 16:34:55.236"/>
</test>
<test id="s1-s1-s2-t3" name="Verify A Card Can Be Deleted" line="35">
<kw name="Create A Card" library="Card">
<var>${response}</var>
<doc>Creates a new card in the given list.
required_args: listId
optional_args: name, desc, pos, idCardSource, idLabels, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>@{optional_args}</arg>
<arg>idList</arg>
<arg>${idList}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 16:34:55.239" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 16:34:55.239" endtime="20220704 16:34:55.239"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 16:34:55.240" endtime="20220704 16:34:55.240"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 16:34:55.241" level="INFO">${url} = cards/</msg>
<status status="PASS" starttime="20220704 16:34:55.240" endtime="20220704 16:34:55.241"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 16:34:55.485" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 16:34:55.241" endtime="20220704 16:34:55.485"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 16:34:55.485" endtime="20220704 16:34:55.485"/>
</return>
<msg timestamp="20220704 16:34:55.485" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 16:34:55.238" endtime="20220704 16:34:55.485"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 16:34:55.485" endtime="20220704 16:34:55.485"/>
</return>
<msg timestamp="20220704 16:34:55.485" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 16:34:55.238" endtime="20220704 16:34:55.485"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 16:34:55.486" endtime="20220704 16:34:55.486"/>
</return>
<msg timestamp="20220704 16:34:55.487" level="INFO">${CARD_ID} = 62c316af4b9eec702b12d9d7</msg>
<status status="PASS" starttime="20220704 16:34:55.485" endtime="20220704 16:34:55.487"/>
</kw>
<kw name="Delete A Card" library="Card">
<var>${response}</var>
<arg>${CARD_ID}</arg>
<doc>Deletes the card with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 16:34:55.488" level="INFO">${url} = cards/62c316af4b9eec702b12d9d7</msg>
<status status="PASS" starttime="20220704 16:34:55.488" endtime="20220704 16:34:55.488"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 16:34:55.684" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 16:34:55.488" endtime="20220704 16:34:55.684"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 16:34:55.684" endtime="20220704 16:34:55.684"/>
</return>
<msg timestamp="20220704 16:34:55.684" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 16:34:55.487" endtime="20220704 16:34:55.684"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 16:34:55.684" endtime="20220704 16:34:55.684"/>
</return>
<msg timestamp="20220704 16:34:55.685" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 16:34:55.487" endtime="20220704 16:34:55.685"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>delete</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220704 16:34:55.685" endtime="20220704 16:34:55.687"/>
</kw>
<status status="PASS" starttime="20220704 16:34:55.685" endtime="20220704 16:34:55.688"/>
</kw>
<kw name="Get A Card" library="Card">
<arg>${CARD_ID}</arg>
<arg>status_code=404</arg>
<doc>Gets the card with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 16:34:55.689" level="INFO">${url} = cards/62c316af4b9eec702b12d9d7</msg>
<status status="PASS" starttime="20220704 16:34:55.689" endtime="20220704 16:34:55.689"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 16:34:55.760" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220704 16:34:55.689" endtime="20220704 16:34:55.760"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 16:34:55.760" endtime="20220704 16:34:55.760"/>
</return>
<msg timestamp="20220704 16:34:55.760" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220704 16:34:55.688" endtime="20220704 16:34:55.761"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 16:34:55.761" endtime="20220704 16:34:55.761"/>
</return>
<status status="PASS" starttime="20220704 16:34:55.688" endtime="20220704 16:34:55.761"/>
</kw>
<doc>Verify that a card can be deleted through API</doc>
<tag>api</tag>
<tag>card.delete</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220704 16:34:55.236" endtime="20220704 16:34:55.761"/>
</test>
<test id="s1-s1-s2-t4" name="Verify A Card Can Be Updated" line="44">
<kw name="Create A Card" library="Card">
<var>${response}</var>
<arg>name</arg>
<arg>RFCard4</arg>
<doc>Creates a new card in the given list.
required_args: listId
optional_args: name, desc, pos, idCardSource, idLabels, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>@{optional_args}</arg>
<arg>idList</arg>
<arg>${idList}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 16:34:55.763" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 16:34:55.763" endtime="20220704 16:34:55.763"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 16:34:55.764" endtime="20220704 16:34:55.764"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 16:34:55.765" level="INFO">${url} = cards/</msg>
<status status="PASS" starttime="20220704 16:34:55.764" endtime="20220704 16:34:55.765"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 16:34:55.950" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 16:34:55.765" endtime="20220704 16:34:55.950"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 16:34:55.950" endtime="20220704 16:34:55.951"/>
</return>
<msg timestamp="20220704 16:34:55.951" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 16:34:55.763" endtime="20220704 16:34:55.951"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 16:34:55.951" endtime="20220704 16:34:55.951"/>
</return>
<msg timestamp="20220704 16:34:55.951" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 16:34:55.762" endtime="20220704 16:34:55.951"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 16:34:55.952" endtime="20220704 16:34:55.952"/>
</return>
<msg timestamp="20220704 16:34:55.953" level="INFO">${CARD_ID} = 62c316af6338940824568fac</msg>
<status status="PASS" starttime="20220704 16:34:55.951" endtime="20220704 16:34:55.953"/>
</kw>
<kw name="Update A Card" library="Card">
<var>${response}</var>
<arg>${CARD_ID}</arg>
<arg>name</arg>
<arg>RFCard5</arg>
<arg>desc</arg>
<arg>Description</arg>
<doc>Updates the card with the given ID
optional_args: name, desc, closed, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<arg>status_code=${status_code}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 16:34:55.954" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 16:34:55.954" endtime="20220704 16:34:55.954"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 16:34:55.954" endtime="20220704 16:34:55.954"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 16:34:55.955" level="INFO">${url} = cards/62c316af6338940824568fac</msg>
<status status="PASS" starttime="20220704 16:34:55.954" endtime="20220704 16:34:55.955"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 16:34:56.132" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 16:34:55.955" endtime="20220704 16:34:56.132"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 16:34:56.132" endtime="20220704 16:34:56.132"/>
</return>
<msg timestamp="20220704 16:34:56.132" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 16:34:55.953" endtime="20220704 16:34:56.132"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 16:34:56.132" endtime="20220704 16:34:56.132"/>
</return>
<msg timestamp="20220704 16:34:56.132" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 16:34:55.953" endtime="20220704 16:34:56.132"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>card</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220704 16:34:56.133" endtime="20220704 16:34:56.138"/>
</kw>
<status status="PASS" starttime="20220704 16:34:56.133" endtime="20220704 16:34:56.139"/>
</kw>
<kw name="Get A Card" library="Card">
<var>${response}</var>
<arg>${CARD_ID}</arg>
<doc>Gets the card with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 16:34:56.140" level="INFO">${url} = cards/62c316af6338940824568fac</msg>
<status status="PASS" starttime="20220704 16:34:56.140" endtime="20220704 16:34:56.140"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 16:34:56.229" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 16:34:56.140" endtime="20220704 16:34:56.229"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 16:34:56.229" endtime="20220704 16:34:56.229"/>
</return>
<msg timestamp="20220704 16:34:56.229" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 16:34:56.139" endtime="20220704 16:34:56.229"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 16:34:56.229" endtime="20220704 16:34:56.229"/>
</return>
<msg timestamp="20220704 16:34:56.230" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 16:34:56.139" endtime="20220704 16:34:56.230"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_NAME}</var>
<arg>${response}</arg>
<arg>name</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 16:34:56.230" endtime="20220704 16:34:56.230"/>
</return>
<msg timestamp="20220704 16:34:56.231" level="INFO">${CARD_NAME} = RFCard5</msg>
<status status="PASS" starttime="20220704 16:34:56.230" endtime="20220704 16:34:56.231"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_DESC}</var>
<arg>${response}</arg>
<arg>desc</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 16:34:56.232" endtime="20220704 16:34:56.232"/>
</return>
<msg timestamp="20220704 16:34:56.232" level="INFO">${CARD_DESC} = Description</msg>
<status status="PASS" starttime="20220704 16:34:56.231" endtime="20220704 16:34:56.232"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${CARD_NAME}</arg>
<arg>RFCard5</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220704 16:34:56.233" endtime="20220704 16:34:56.233"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${CARD_DESC}</arg>
<arg>Description</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220704 16:34:56.233" endtime="20220704 16:34:56.233"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Card</arg>
<arg>${CARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Card" library="Card">
<arg>${CARD_ID}</arg>
<doc>Deletes the card with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 16:34:56.235" level="INFO">${url} = cards/62c316af6338940824568fac</msg>
<status status="PASS" starttime="20220704 16:34:56.235" endtime="20220704 16:34:56.235"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 16:34:56.420" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 16:34:56.235" endtime="20220704 16:34:56.420"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 16:34:56.420" endtime="20220704 16:34:56.420"/>
</return>
<msg timestamp="20220704 16:34:56.421" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 16:34:56.234" endtime="20220704 16:34:56.421"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 16:34:56.421" endtime="20220704 16:34:56.421"/>
</return>
<status status="PASS" starttime="20220704 16:34:56.234" endtime="20220704 16:34:56.421"/>
</kw>
<status status="PASS" starttime="20220704 16:34:56.233" endtime="20220704 16:34:56.421"/>
</kw>
<doc>Verify that a card's name and Description can be updated through API</doc>
<tag>api</tag>
<tag>card.update</tag>
<tag>regression</tag>
<status status="PASS" starttime="20220704 16:34:55.761" endtime="20220704 16:34:56.421"/>
</test>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Teardown Board</arg>
<arg>Delete All Sessions</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Teardown Board">
<doc>Delete the board created for this suite</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 16:34:56.425" level="INFO">${url} = boards/62c316ad37e6e5086e4fec8b</msg>
<status status="PASS" starttime="20220704 16:34:56.424" endtime="20220704 16:34:56.425"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 16:34:56.778" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 16:34:56.425" endtime="20220704 16:34:56.778"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 16:34:56.778" endtime="20220704 16:34:56.778"/>
</return>
<msg timestamp="20220704 16:34:56.778" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 16:34:56.424" endtime="20220704 16:34:56.778"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 16:34:56.778" endtime="20220704 16:34:56.778"/>
</return>
<status status="PASS" starttime="20220704 16:34:56.423" endtime="20220704 16:34:56.778"/>
</kw>
<status status="PASS" starttime="20220704 16:34:56.423" endtime="20220704 16:34:56.779"/>
</kw>
<status status="PASS" starttime="20220704 16:34:56.423" endtime="20220704 16:34:56.779"/>
</kw>
<kw name="Delete All Sessions" library="request_own_library">
<status status="PASS" starttime="20220704 16:34:56.779" endtime="20220704 16:34:56.780"/>
</kw>
<status status="PASS" starttime="20220704 16:34:56.422" endtime="20220704 16:34:56.780"/>
</kw>
<doc>Example Test with Trello API Cards</doc>
<status status="PASS" starttime="20220704 16:34:53.623" endtime="20220704 16:34:56.780"/>
</suite>
<suite id="s1-s1-s3" name="Trello Api Checklists Tests" source="/trello/api/trello_api_checklists_tests.robot">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Create Trello Session</arg>
<arg>Setup Board, List And Card</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Create Trello Session" library="TrelloAPI">
<doc>Creates a Trello Session</doc>
<kw name="Create Session" library="request_own_library">
<arg>${API_BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<status status="PASS" starttime="20220704 16:34:56.793" endtime="20220704 16:34:56.793"/>
</kw>
<status status="PASS" starttime="20220704 16:34:56.792" endtime="20220704 16:34:56.793"/>
</kw>
<kw name="Setup Board, List And Card">
<doc>Create a board and save its ID and its first list's ID</doc>
<kw name="Create A Board" library="Board">
<var>${BOARD}</var>
<arg>TestBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 16:34:56.794" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 16:34:56.794" endtime="20220704 16:34:56.794"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 16:34:56.794" endtime="20220704 16:34:56.794"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 16:34:56.795" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220704 16:34:56.794" endtime="20220704 16:34:56.795"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 16:34:57.094" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 16:34:56.795" endtime="20220704 16:34:57.094"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 16:34:57.094" endtime="20220704 16:34:57.094"/>
</return>
<msg timestamp="20220704 16:34:57.094" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 16:34:56.793" endtime="20220704 16:34:57.094"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 16:34:57.094" endtime="20220704 16:34:57.094"/>
</return>
<msg timestamp="20220704 16:34:57.095" level="INFO">${BOARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 16:34:56.793" endtime="20220704 16:34:57.095"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_BOARD_ID}</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220704 16:34:57.096" level="INFO">${TEST_SUITE_BOARD_ID} = 62c316b00121182018cff907</msg>
<status status="PASS" starttime="20220704 16:34:57.095" endtime="20220704 16:34:57.096"/>
</kw>
<kw name="Get Lists On A Board" library="Board">
<var>${LISTS}</var>
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Get all the lists in a board</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>lists_on_board</arg>
<arg>${id}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 16:34:57.097" level="INFO">${url} = boards/62c316b00121182018cff907/lists/</msg>
<status status="PASS" starttime="20220704 16:34:57.097" endtime="20220704 16:34:57.097"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 16:34:57.180" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 16:34:57.097" endtime="20220704 16:34:57.180"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 16:34:57.180" endtime="20220704 16:34:57.180"/>
</return>
<msg timestamp="20220704 16:34:57.180" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 16:34:57.096" endtime="20220704 16:34:57.180"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 16:34:57.180" endtime="20220704 16:34:57.180"/>
</return>
<msg timestamp="20220704 16:34:57.181" level="INFO">${LISTS} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 16:34:57.096" endtime="20220704 16:34:57.181"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_LIST_ID}</arg>
<arg>${LISTS.json()}[0][id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220704 16:34:57.182" level="INFO">${TEST_SUITE_LIST_ID} = 62c316b00121182018cff90e</msg>
<status status="PASS" starttime="20220704 16:34:57.181" endtime="20220704 16:34:57.182"/>
</kw>
<kw name="Create A Card" library="Card">
<var>${CARD}</var>
<arg>name</arg>
<arg>TestCard</arg>
<doc>Creates a new card in the given list.
required_args: listId
optional_args: name, desc, pos, idCardSource, idLabels, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>@{optional_args}</arg>
<arg>idList</arg>
<arg>${idList}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 16:34:57.184" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 16:34:57.183" endtime="20220704 16:34:57.184"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 16:34:57.184" endtime="20220704 16:34:57.184"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 16:34:57.185" level="INFO">${url} = cards/</msg>
<status status="PASS" starttime="20220704 16:34:57.184" endtime="20220704 16:34:57.185"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 16:34:57.407" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 16:34:57.185" endtime="20220704 16:34:57.407"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 16:34:57.407" endtime="20220704 16:34:57.408"/>
</return>
<msg timestamp="20220704 16:34:57.408" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 16:34:57.183" endtime="20220704 16:34:57.408"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 16:34:57.408" endtime="20220704 16:34:57.408"/>
</return>
<msg timestamp="20220704 16:34:57.408" level="INFO">${CARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 16:34:57.182" endtime="20220704 16:34:57.408"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_CARD_ID}</arg>
<arg>${CARD.json()}[id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220704 16:34:57.409" level="INFO">${TEST_SUITE_CARD_ID} = 62c316b1201c713f6468ded8</msg>
<status status="PASS" starttime="20220704 16:34:57.408" endtime="20220704 16:34:57.409"/>
</kw>
<status status="PASS" starttime="20220704 16:34:56.793" endtime="20220704 16:34:57.409"/>
</kw>
<status status="PASS" starttime="20220704 16:34:56.792" endtime="20220704 16:34:57.409"/>
</kw>
<test id="s1-s1-s3-t1" name="Verify A Checklist Can Be Created" line="14">
<kw name="Create A Checklist" library="Checklist">
<var>${response}</var>
<arg>name</arg>
<arg>TestChecklist</arg>
<arg>idCard=${TEST_SUITE_CARD_ID}</arg>
<doc>Creates a new checklist in the given card.
required_args: idCard
optional_args: name, pos, idChecklistSource
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>@{optional_args}</arg>
<arg>idCard</arg>
<arg>${idCard}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 16:34:57.412" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 16:34:57.412" endtime="20220704 16:34:57.412"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 16:34:57.412" endtime="20220704 16:34:57.412"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 16:34:57.413" level="INFO">${url} = checklists/</msg>
<status status="PASS" starttime="20220704 16:34:57.412" endtime="20220704 16:34:57.413"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 16:34:57.555" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 16:34:57.413" endtime="20220704 16:34:57.555"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 16:34:57.555" endtime="20220704 16:34:57.555"/>
</return>
<msg timestamp="20220704 16:34:57.555" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 16:34:57.411" endtime="20220704 16:34:57.555"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 16:34:57.555" endtime="20220704 16:34:57.555"/>
</return>
<msg timestamp="20220704 16:34:57.556" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 16:34:57.411" endtime="20220704 16:34:57.556"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${checklist_id}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 16:34:57.556" endtime="20220704 16:34:57.556"/>
</return>
<msg timestamp="20220704 16:34:57.557" level="INFO">${checklist_id} = 62c316b1b1052373e0dba734</msg>
<status status="PASS" starttime="20220704 16:34:57.556" endtime="20220704 16:34:57.557"/>
</kw>
<kw name="Get A Checklist" library="Checklist">
<var>${response}</var>
<arg>${checklist_id}</arg>
<doc>Gets the checklist with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 16:34:57.558" level="INFO">${url} = checklists/62c316b1b1052373e0dba734</msg>
<status status="PASS" starttime="20220704 16:34:57.558" endtime="20220704 16:34:57.559"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 16:34:57.646" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 16:34:57.559" endtime="20220704 16:34:57.646"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 16:34:57.646" endtime="20220704 16:34:57.646"/>
</return>
<msg timestamp="20220704 16:34:57.646" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 16:34:57.558" endtime="20220704 16:34:57.646"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 16:34:57.646" endtime="20220704 16:34:57.647"/>
</return>
<msg timestamp="20220704 16:34:57.647" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 16:34:57.557" endtime="20220704 16:34:57.647"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${checklist_name}</var>
<arg>${response}</arg>
<arg>name</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 16:34:57.647" endtime="20220704 16:34:57.647"/>
</return>
<msg timestamp="20220704 16:34:57.648" level="INFO">${checklist_name} = TestChecklist</msg>
<status status="PASS" starttime="20220704 16:34:57.647" endtime="20220704 16:34:57.648"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${checklist_name}</arg>
<arg>TestChecklist</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220704 16:34:57.648" endtime="20220704 16:34:57.648"/>
</kw>
<kw name="Delete A Checklist" library="Checklist" type="TEARDOWN">
<arg>${checklist_id}</arg>
<doc>Deletes the checklist with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 16:34:57.650" level="INFO">${url} = checklists/62c316b1b1052373e0dba734</msg>
<status status="PASS" starttime="20220704 16:34:57.649" endtime="20220704 16:34:57.650"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 16:34:57.807" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 16:34:57.650" endtime="20220704 16:34:57.808"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 16:34:57.808" endtime="20220704 16:34:57.808"/>
</return>
<msg timestamp="20220704 16:34:57.808" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 16:34:57.649" endtime="20220704 16:34:57.808"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 16:34:57.808" endtime="20220704 16:34:57.808"/>
</return>
<status status="PASS" starttime="20220704 16:34:57.649" endtime="20220704 16:34:57.808"/>
</kw>
<doc>Verify that a checklist can be created through API</doc>
<tag>api</tag>
<tag>checklist.create</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220704 16:34:57.410" endtime="20220704 16:34:57.808"/>
</test>
<test id="s1-s1-s3-t2" name="Verify A Checklist Can Be Deleted" line="24">
<kw name="Create A Checklist" library="Checklist">
<var>${response}</var>
<arg>name</arg>
<arg>TestChecklist</arg>
<arg>idCard=${TEST_SUITE_CARD_ID}</arg>
<doc>Creates a new checklist in the given card.
required_args: idCard
optional_args: name, pos, idChecklistSource
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>@{optional_args}</arg>
<arg>idCard</arg>
<arg>${idCard}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 16:34:57.811" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 16:34:57.810" endtime="20220704 16:34:57.811"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 16:34:57.811" endtime="20220704 16:34:57.811"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 16:34:57.812" level="INFO">${url} = checklists/</msg>
<status status="PASS" starttime="20220704 16:34:57.811" endtime="20220704 16:34:57.812"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 16:34:57.950" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 16:34:57.812" endtime="20220704 16:34:57.950"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 16:34:57.950" endtime="20220704 16:34:57.950"/>
</return>
<msg timestamp="20220704 16:34:57.950" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 16:34:57.810" endtime="20220704 16:34:57.950"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 16:34:57.950" endtime="20220704 16:34:57.950"/>
</return>
<msg timestamp="20220704 16:34:57.951" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 16:34:57.809" endtime="20220704 16:34:57.951"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${checklist_id}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 16:34:57.951" endtime="20220704 16:34:57.951"/>
</return>
<msg timestamp="20220704 16:34:57.952" level="INFO">${checklist_id} = 62c316b1f922fd37a0106027</msg>
<status status="PASS" starttime="20220704 16:34:57.951" endtime="20220704 16:34:57.952"/>
</kw>
<kw name="Delete A Checklist" library="Checklist">
<var>${response}</var>
<arg>${checklist_id}</arg>
<doc>Deletes the checklist with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 16:34:57.954" level="INFO">${url} = checklists/62c316b1f922fd37a0106027</msg>
<status status="PASS" starttime="20220704 16:34:57.953" endtime="20220704 16:34:57.954"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 16:34:58.105" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 16:34:57.954" endtime="20220704 16:34:58.105"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 16:34:58.105" endtime="20220704 16:34:58.105"/>
</return>
<msg timestamp="20220704 16:34:58.106" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 16:34:57.953" endtime="20220704 16:34:58.106"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 16:34:58.106" endtime="20220704 16:34:58.106"/>
</return>
<msg timestamp="20220704 16:34:58.106" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 16:34:57.952" endtime="20220704 16:34:58.106"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>delete</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220704 16:34:58.107" endtime="20220704 16:34:58.108"/>
</kw>
<status status="PASS" starttime="20220704 16:34:58.106" endtime="20220704 16:34:58.109"/>
</kw>
<kw name="Get A Checklist" library="Checklist">
<arg>${checklist_id}</arg>
<arg>status_code=404</arg>
<doc>Gets the checklist with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 16:34:58.110" level="INFO">${url} = checklists/62c316b1f922fd37a0106027</msg>
<status status="PASS" starttime="20220704 16:34:58.110" endtime="20220704 16:34:58.110"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 16:34:58.188" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220704 16:34:58.110" endtime="20220704 16:34:58.188"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 16:34:58.188" endtime="20220704 16:34:58.188"/>
</return>
<msg timestamp="20220704 16:34:58.188" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220704 16:34:58.109" endtime="20220704 16:34:58.188"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 16:34:58.188" endtime="20220704 16:34:58.188"/>
</return>
<status status="PASS" starttime="20220704 16:34:58.109" endtime="20220704 16:34:58.188"/>
</kw>
<doc>Verify that a checklist can be deleted through API</doc>
<tag>api</tag>
<tag>checklist.delete</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220704 16:34:57.809" endtime="20220704 16:34:58.188"/>
</test>
<test id="s1-s1-s3-t3" name="Verify A Checklist Can Be Updated" line="33">
<kw name="Create A Checklist" library="Checklist">
<var>${response}</var>
<arg>name</arg>
<arg>TestChecklist</arg>
<arg>idCard=${TEST_SUITE_CARD_ID}</arg>
<doc>Creates a new checklist in the given card.
required_args: idCard
optional_args: name, pos, idChecklistSource
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>@{optional_args}</arg>
<arg>idCard</arg>
<arg>${idCard}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 16:34:58.193" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 16:34:58.191" endtime="20220704 16:34:58.193"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 16:34:58.193" endtime="20220704 16:34:58.194"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 16:34:58.194" level="INFO">${url} = checklists/</msg>
<status status="PASS" starttime="20220704 16:34:58.194" endtime="20220704 16:34:58.194"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 16:34:58.338" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 16:34:58.195" endtime="20220704 16:34:58.338"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 16:34:58.338" endtime="20220704 16:34:58.338"/>
</return>
<msg timestamp="20220704 16:34:58.338" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 16:34:58.191" endtime="20220704 16:34:58.338"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 16:34:58.338" endtime="20220704 16:34:58.338"/>
</return>
<msg timestamp="20220704 16:34:58.338" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 16:34:58.190" endtime="20220704 16:34:58.338"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${checklist_id}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 16:34:58.339" endtime="20220704 16:34:58.339"/>
</return>
<msg timestamp="20220704 16:34:58.340" level="INFO">${checklist_id} = 62c316b2d0eba874fde2274f</msg>
<status status="PASS" starttime="20220704 16:34:58.339" endtime="20220704 16:34:58.340"/>
</kw>
<kw name="Update A Checklist" library="Checklist">
<var>${response}</var>
<arg>${checklist_id}</arg>
<arg>name</arg>
<arg>TestChecklist2</arg>
<doc>Updates the checklist with the given ID
optional_args: name, pos
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<arg>status_code=${status_code}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 16:34:58.341" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 16:34:58.341" endtime="20220704 16:34:58.341"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 16:34:58.341" endtime="20220704 16:34:58.341"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 16:34:58.342" level="INFO">${url} = checklists/62c316b2d0eba874fde2274f</msg>
<status status="PASS" starttime="20220704 16:34:58.341" endtime="20220704 16:34:58.342"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 16:34:58.467" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 16:34:58.342" endtime="20220704 16:34:58.467"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 16:34:58.467" endtime="20220704 16:34:58.467"/>
</return>
<msg timestamp="20220704 16:34:58.468" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 16:34:58.340" endtime="20220704 16:34:58.468"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 16:34:58.468" endtime="20220704 16:34:58.468"/>
</return>
<msg timestamp="20220704 16:34:58.468" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 16:34:58.340" endtime="20220704 16:34:58.468"/>
</kw>
<kw name="Get A Checklist" library="Checklist">
<var>${response}</var>
<arg>${checklist_id}</arg>
<doc>Gets the checklist with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 16:34:58.469" level="INFO">${url} = checklists/62c316b2d0eba874fde2274f</msg>
<status status="PASS" starttime="20220704 16:34:58.469" endtime="20220704 16:34:58.469"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 16:34:58.570" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 16:34:58.470" endtime="20220704 16:34:58.570"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 16:34:58.570" endtime="20220704 16:34:58.570"/>
</return>
<msg timestamp="20220704 16:34:58.571" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 16:34:58.469" endtime="20220704 16:34:58.571"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 16:34:58.571" endtime="20220704 16:34:58.571"/>
</return>
<msg timestamp="20220704 16:34:58.571" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 16:34:58.468" endtime="20220704 16:34:58.571"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${checklist_name}</var>
<arg>${response}</arg>
<arg>name</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 16:34:58.572" endtime="20220704 16:34:58.572"/>
</return>
<msg timestamp="20220704 16:34:58.572" level="INFO">${checklist_name} = TestChecklist2</msg>
<status status="PASS" starttime="20220704 16:34:58.571" endtime="20220704 16:34:58.572"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${checklist_name}</arg>
<arg>TestChecklist2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220704 16:34:58.573" endtime="20220704 16:34:58.573"/>
</kw>
<kw name="Delete A Checklist" library="Checklist" type="TEARDOWN">
<arg>${checklist_id}</arg>
<doc>Deletes the checklist with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 16:34:58.587" level="INFO">${url} = checklists/62c316b2d0eba874fde2274f</msg>
<status status="PASS" starttime="20220704 16:34:58.586" endtime="20220704 16:34:58.587"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 16:34:58.734" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 16:34:58.587" endtime="20220704 16:34:58.734"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 16:34:58.734" endtime="20220704 16:34:58.734"/>
</return>
<msg timestamp="20220704 16:34:58.735" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 16:34:58.586" endtime="20220704 16:34:58.735"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 16:34:58.735" endtime="20220704 16:34:58.735"/>
</return>
<status status="PASS" starttime="20220704 16:34:58.573" endtime="20220704 16:34:58.735"/>
</kw>
<doc>Verify that a checklist's name can be updated through API</doc>
<tag>api</tag>
<tag>checklist.update</tag>
<tag>regression</tag>
<status status="PASS" starttime="20220704 16:34:58.189" endtime="20220704 16:34:58.735"/>
</test>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Teardown Board</arg>
<arg>Delete All Sessions</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Teardown Board">
<doc>Delete the board created for this suite</doc>
<kw name="Delete A Board" library="Board">
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 16:34:58.737" level="INFO">${url} = boards/62c316b00121182018cff907</msg>
<status status="PASS" starttime="20220704 16:34:58.737" endtime="20220704 16:34:58.737"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 16:34:59.087" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 16:34:58.737" endtime="20220704 16:34:59.087"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 16:34:59.087" endtime="20220704 16:34:59.087"/>
</return>
<msg timestamp="20220704 16:34:59.088" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 16:34:58.736" endtime="20220704 16:34:59.088"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 16:34:59.088" endtime="20220704 16:34:59.088"/>
</return>
<status status="PASS" starttime="20220704 16:34:58.736" endtime="20220704 16:34:59.088"/>
</kw>
<status status="PASS" starttime="20220704 16:34:58.736" endtime="20220704 16:34:59.088"/>
</kw>
<kw name="Delete All Sessions" library="request_own_library">
<status status="PASS" starttime="20220704 16:34:59.088" endtime="20220704 16:34:59.089"/>
</kw>
<status status="PASS" starttime="20220704 16:34:58.736" endtime="20220704 16:34:59.090"/>
</kw>
<doc>Example Test with Trello API Checklists</doc>
<status status="PASS" starttime="20220704 16:34:56.782" endtime="20220704 16:34:59.090"/>
</suite>
<suite id="s1-s1-s4" name="Trello Api Labels Tests" source="/trello/api/trello_api_labels_tests.robot">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Create Trello Session</arg>
<arg>Setup Board And List</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Create Trello Session" library="TrelloAPI">
<doc>Creates a Trello Session</doc>
<kw name="Create Session" library="request_own_library">
<arg>${API_BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<status status="PASS" starttime="20220704 16:34:59.101" endtime="20220704 16:34:59.101"/>
</kw>
<status status="PASS" starttime="20220704 16:34:59.100" endtime="20220704 16:34:59.101"/>
</kw>
<kw name="Setup Board And List">
<doc>Create a board and save its ID and its first list's ID</doc>
<kw name="Create A Board" library="Board">
<var>${BOARD}</var>
<arg>TestBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 16:34:59.102" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 16:34:59.102" endtime="20220704 16:34:59.102"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 16:34:59.102" endtime="20220704 16:34:59.102"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 16:34:59.103" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220704 16:34:59.103" endtime="20220704 16:34:59.103"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 16:34:59.384" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 16:34:59.103" endtime="20220704 16:34:59.384"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 16:34:59.384" endtime="20220704 16:34:59.384"/>
</return>
<msg timestamp="20220704 16:34:59.384" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 16:34:59.101" endtime="20220704 16:34:59.384"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 16:34:59.384" endtime="20220704 16:34:59.384"/>
</return>
<msg timestamp="20220704 16:34:59.384" level="INFO">${BOARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 16:34:59.101" endtime="20220704 16:34:59.384"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_BOARD_ID}</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220704 16:34:59.385" level="INFO">${TEST_SUITE_BOARD_ID} = 62c316b34173461d8f6f1b94</msg>
<status status="PASS" starttime="20220704 16:34:59.385" endtime="20220704 16:34:59.385"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${LISTS}</var>
<arg>boards/${TEST_SUITE_BOARD_ID}/lists</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 16:34:59.474" level="INFO">${LISTS} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 16:34:59.386" endtime="20220704 16:34:59.474"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_LIST_ID}</arg>
<arg>${LISTS.json()}[0][id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220704 16:34:59.476" level="INFO">${TEST_SUITE_LIST_ID} = 62c316b34173461d8f6f1b9b</msg>
<status status="PASS" starttime="20220704 16:34:59.475" endtime="20220704 16:34:59.476"/>
</kw>
<status status="PASS" starttime="20220704 16:34:59.101" endtime="20220704 16:34:59.476"/>
</kw>
<status status="PASS" starttime="20220704 16:34:59.100" endtime="20220704 16:34:59.476"/>
</kw>
<test id="s1-s1-s4-t1" name="Create and get label on board" line="14">
<kw name="Create A Label" library="Label">
<var>${response}</var>
<arg>name</arg>
<arg>label2</arg>
<arg>color</arg>
<arg>yellow</arg>
<doc>Creates a new label in the given board.
required_args: idBoard
optional_args: name, color
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>idBoard</arg>
<arg>${idBoard}</arg>
<arg>@{optional_args}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 16:34:59.478" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 16:34:59.478" endtime="20220704 16:34:59.478"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 16:34:59.478" endtime="20220704 16:34:59.479"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 16:34:59.479" level="INFO">${url} = labels/</msg>
<status status="PASS" starttime="20220704 16:34:59.479" endtime="20220704 16:34:59.479"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 16:34:59.592" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 16:34:59.479" endtime="20220704 16:34:59.592"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 16:34:59.592" endtime="20220704 16:34:59.592"/>
</return>
<msg timestamp="20220704 16:34:59.593" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 16:34:59.477" endtime="20220704 16:34:59.593"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 16:34:59.593" endtime="20220704 16:34:59.593"/>
</return>
<msg timestamp="20220704 16:34:59.593" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 16:34:59.477" endtime="20220704 16:34:59.593"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>label</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220704 16:34:59.594" endtime="20220704 16:34:59.596"/>
</kw>
<status status="PASS" starttime="20220704 16:34:59.593" endtime="20220704 16:34:59.596"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${LABEL_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 16:34:59.596" endtime="20220704 16:34:59.596"/>
</return>
<msg timestamp="20220704 16:34:59.597" level="INFO">${LABEL_ID} = 62c316b3ec317e03b8d92234</msg>
<status status="PASS" starttime="20220704 16:34:59.596" endtime="20220704 16:34:59.597"/>
</kw>
<kw name="Get A Label" library="Label">
<var>${response}</var>
<arg>${LABEL_ID}</arg>
<doc>Gets the label with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 16:34:59.598" level="INFO">${url} = labels/62c316b3ec317e03b8d92234</msg>
<status status="PASS" starttime="20220704 16:34:59.598" endtime="20220704 16:34:59.598"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 16:34:59.695" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 16:34:59.598" endtime="20220704 16:34:59.695"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 16:34:59.695" endtime="20220704 16:34:59.695"/>
</return>
<msg timestamp="20220704 16:34:59.695" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 16:34:59.597" endtime="20220704 16:34:59.695"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 16:34:59.696" endtime="20220704 16:34:59.696"/>
</return>
<msg timestamp="20220704 16:34:59.696" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 16:34:59.597" endtime="20220704 16:34:59.696"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${LABEL_COLOR}</var>
<arg>${response}</arg>
<arg>color</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 16:34:59.696" endtime="20220704 16:34:59.696"/>
</return>
<msg timestamp="20220704 16:34:59.697" level="INFO">${LABEL_COLOR} = yellow</msg>
<status status="PASS" starttime="20220704 16:34:59.696" endtime="20220704 16:34:59.697"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${LABEL_NAME}</var>
<arg>${response}</arg>
<arg>name</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 16:34:59.698" endtime="20220704 16:34:59.698"/>
</return>
<msg timestamp="20220704 16:34:59.698" level="INFO">${LABEL_NAME} = label2</msg>
<status status="PASS" starttime="20220704 16:34:59.697" endtime="20220704 16:34:59.698"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${LABEL_COLOR}</arg>
<arg>yellow</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220704 16:34:59.698" endtime="20220704 16:34:59.699"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${LABEL_NAME}</arg>
<arg>label2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220704 16:34:59.699" endtime="20220704 16:34:59.699"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Label</arg>
<arg>${LABEL_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Label" library="Label">
<arg>${LABEL_ID}</arg>
<doc>Deletes the label with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 16:34:59.701" level="INFO">${url} = labels/62c316b3ec317e03b8d92234</msg>
<status status="PASS" starttime="20220704 16:34:59.700" endtime="20220704 16:34:59.701"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 16:34:59.861" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 16:34:59.701" endtime="20220704 16:34:59.861"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 16:34:59.861" endtime="20220704 16:34:59.861"/>
</return>
<msg timestamp="20220704 16:34:59.862" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 16:34:59.700" endtime="20220704 16:34:59.862"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 16:34:59.862" endtime="20220704 16:34:59.862"/>
</return>
<status status="PASS" starttime="20220704 16:34:59.700" endtime="20220704 16:34:59.862"/>
</kw>
<status status="PASS" starttime="20220704 16:34:59.699" endtime="20220704 16:34:59.862"/>
</kw>
<doc>Verify that a label can be created through API</doc>
<tag>api</tag>
<tag>label.create</tag>
<tag>label.get</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220704 16:34:59.476" endtime="20220704 16:34:59.862"/>
</test>
<test id="s1-s1-s4-t2" name="Update label on board" line="28">
<kw name="Create A Label" library="Label">
<var>${response}</var>
<arg>name</arg>
<arg>label2</arg>
<arg>color</arg>
<arg>yellow</arg>
<doc>Creates a new label in the given board.
required_args: idBoard
optional_args: name, color
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>idBoard</arg>
<arg>${idBoard}</arg>
<arg>@{optional_args}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 16:34:59.865" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 16:34:59.865" endtime="20220704 16:34:59.865"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 16:34:59.865" endtime="20220704 16:34:59.865"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 16:34:59.866" level="INFO">${url} = labels/</msg>
<status status="PASS" starttime="20220704 16:34:59.865" endtime="20220704 16:34:59.866"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 16:34:59.988" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 16:34:59.866" endtime="20220704 16:34:59.988"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 16:34:59.988" endtime="20220704 16:34:59.988"/>
</return>
<msg timestamp="20220704 16:34:59.989" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 16:34:59.864" endtime="20220704 16:34:59.989"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 16:34:59.989" endtime="20220704 16:34:59.989"/>
</return>
<msg timestamp="20220704 16:34:59.989" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 16:34:59.864" endtime="20220704 16:34:59.989"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>label</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220704 16:34:59.989" endtime="20220704 16:34:59.991"/>
</kw>
<status status="PASS" starttime="20220704 16:34:59.989" endtime="20220704 16:34:59.991"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${LABEL_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 16:34:59.992" endtime="20220704 16:34:59.992"/>
</return>
<msg timestamp="20220704 16:34:59.992" level="INFO">${LABEL_ID} = 62c316b3c371492c5d10449f</msg>
<status status="PASS" starttime="20220704 16:34:59.991" endtime="20220704 16:34:59.992"/>
</kw>
<kw name="Update A Label" library="Label">
<var>${new_response}</var>
<arg>${LABEL_ID}</arg>
<arg>name</arg>
<arg>label3</arg>
<arg>color</arg>
<arg>orange</arg>
<doc>Updates the label with the given ID
optional_args: name, color
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 16:34:59.993" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 16:34:59.993" endtime="20220704 16:34:59.994"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 16:34:59.994" endtime="20220704 16:34:59.994"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 16:34:59.994" level="INFO">${url} = labels/62c316b3c371492c5d10449f</msg>
<status status="PASS" starttime="20220704 16:34:59.994" endtime="20220704 16:34:59.994"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 16:35:00.116" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 16:34:59.994" endtime="20220704 16:35:00.116"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 16:35:00.116" endtime="20220704 16:35:00.116"/>
</return>
<msg timestamp="20220704 16:35:00.117" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 16:34:59.993" endtime="20220704 16:35:00.117"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 16:35:00.117" endtime="20220704 16:35:00.117"/>
</return>
<msg timestamp="20220704 16:35:00.117" level="INFO">${new_response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 16:34:59.992" endtime="20220704 16:35:00.117"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${NEW_LABEL_COLOR}</var>
<arg>${new_response}</arg>
<arg>color</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 16:35:00.118" endtime="20220704 16:35:00.118"/>
</return>
<msg timestamp="20220704 16:35:00.119" level="INFO">${NEW_LABEL_COLOR} = orange</msg>
<status status="PASS" starttime="20220704 16:35:00.117" endtime="20220704 16:35:00.119"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${NEW_LABEL_NAME}</var>
<arg>${new_response}</arg>
<arg>name</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 16:35:00.119" endtime="20220704 16:35:00.119"/>
</return>
<msg timestamp="20220704 16:35:00.120" level="INFO">${NEW_LABEL_NAME} = label3</msg>
<status status="PASS" starttime="20220704 16:35:00.119" endtime="20220704 16:35:00.120"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${NEW_LABEL_COLOR}</arg>
<arg>orange</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220704 16:35:00.120" endtime="20220704 16:35:00.120"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${NEW_LABEL_NAME}</arg>
<arg>label3</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220704 16:35:00.120" endtime="20220704 16:35:00.121"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Label</arg>
<arg>${LABEL_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Label" library="Label">
<arg>${LABEL_ID}</arg>
<doc>Deletes the label with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 16:35:00.122" level="INFO">${url} = labels/62c316b3c371492c5d10449f</msg>
<status status="PASS" starttime="20220704 16:35:00.122" endtime="20220704 16:35:00.123"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 16:35:00.259" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 16:35:00.123" endtime="20220704 16:35:00.260"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 16:35:00.260" endtime="20220704 16:35:00.260"/>
</return>
<msg timestamp="20220704 16:35:00.260" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 16:35:00.122" endtime="20220704 16:35:00.260"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 16:35:00.260" endtime="20220704 16:35:00.260"/>
</return>
<status status="PASS" starttime="20220704 16:35:00.121" endtime="20220704 16:35:00.260"/>
</kw>
<status status="PASS" starttime="20220704 16:35:00.121" endtime="20220704 16:35:00.260"/>
</kw>
<doc>Verify that a label's name and color can be updated through API</doc>
<tag>api</tag>
<tag>label.update</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220704 16:34:59.863" endtime="20220704 16:35:00.260"/>
</test>
<test id="s1-s1-s4-t3" name="Delete label on board" line="41">
<kw name="Create A Label" library="Label">
<var>${response}</var>
<arg>name</arg>
<arg>label2</arg>
<arg>color</arg>
<arg>yellow</arg>
<doc>Creates a new label in the given board.
required_args: idBoard
optional_args: name, color
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>idBoard</arg>
<arg>${idBoard}</arg>
<arg>@{optional_args}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 16:35:00.263" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 16:35:00.263" endtime="20220704 16:35:00.263"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 16:35:00.263" endtime="20220704 16:35:00.263"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 16:35:00.264" level="INFO">${url} = labels/</msg>
<status status="PASS" starttime="20220704 16:35:00.263" endtime="20220704 16:35:00.264"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 16:35:00.390" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 16:35:00.264" endtime="20220704 16:35:00.390"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 16:35:00.390" endtime="20220704 16:35:00.390"/>
</return>
<msg timestamp="20220704 16:35:00.390" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 16:35:00.262" endtime="20220704 16:35:00.390"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 16:35:00.390" endtime="20220704 16:35:00.390"/>
</return>
<msg timestamp="20220704 16:35:00.390" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 16:35:00.261" endtime="20220704 16:35:00.390"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${LABEL_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 16:35:00.391" endtime="20220704 16:35:00.391"/>
</return>
<msg timestamp="20220704 16:35:00.392" level="INFO">${LABEL_ID} = 62c316b4af09234930688d2b</msg>
<status status="PASS" starttime="20220704 16:35:00.391" endtime="20220704 16:35:00.392"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Label</arg>
<arg>${LABEL_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Label" library="Label">
<arg>${LABEL_ID}</arg>
<doc>Deletes the label with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 16:35:00.394" level="INFO">${url} = labels/62c316b4af09234930688d2b</msg>
<status status="PASS" starttime="20220704 16:35:00.393" endtime="20220704 16:35:00.394"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 16:35:00.536" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 16:35:00.394" endtime="20220704 16:35:00.536"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 16:35:00.536" endtime="20220704 16:35:00.536"/>
</return>
<msg timestamp="20220704 16:35:00.536" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 16:35:00.393" endtime="20220704 16:35:00.536"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 16:35:00.536" endtime="20220704 16:35:00.536"/>
</return>
<status status="PASS" starttime="20220704 16:35:00.392" endtime="20220704 16:35:00.536"/>
</kw>
<status status="PASS" starttime="20220704 16:35:00.392" endtime="20220704 16:35:00.536"/>
</kw>
<kw name="Get A Label" library="Label">
<arg>${LABEL_ID}</arg>
<arg>status_code=404</arg>
<doc>Gets the label with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 16:35:00.538" level="INFO">${url} = labels/62c316b4af09234930688d2b</msg>
<status status="PASS" starttime="20220704 16:35:00.538" endtime="20220704 16:35:00.538"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 16:35:00.613" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220704 16:35:00.538" endtime="20220704 16:35:00.613"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 16:35:00.613" endtime="20220704 16:35:00.613"/>
</return>
<msg timestamp="20220704 16:35:00.614" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220704 16:35:00.537" endtime="20220704 16:35:00.614"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 16:35:00.614" endtime="20220704 16:35:00.614"/>
</return>
<status status="PASS" starttime="20220704 16:35:00.537" endtime="20220704 16:35:00.614"/>
</kw>
<doc>Verify that a label can be deleted through API</doc>
<tag>api</tag>
<tag>label.delete</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220704 16:35:00.261" endtime="20220704 16:35:00.614"/>
</test>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Teardown Board</arg>
<arg>Delete All Sessions</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Teardown Board">
<doc>Delete the board created for this session.</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 16:35:00.617" level="INFO">${url} = boards/62c316b34173461d8f6f1b94</msg>
<status status="PASS" starttime="20220704 16:35:00.617" endtime="20220704 16:35:00.618"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 16:35:00.994" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 16:35:00.618" endtime="20220704 16:35:00.994"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 16:35:00.994" endtime="20220704 16:35:00.994"/>
</return>
<msg timestamp="20220704 16:35:00.995" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 16:35:00.616" endtime="20220704 16:35:00.995"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 16:35:00.995" endtime="20220704 16:35:00.995"/>
</return>
<status status="PASS" starttime="20220704 16:35:00.616" endtime="20220704 16:35:00.995"/>
</kw>
<status status="PASS" starttime="20220704 16:35:00.616" endtime="20220704 16:35:00.995"/>
</kw>
<status status="PASS" starttime="20220704 16:35:00.616" endtime="20220704 16:35:00.995"/>
</kw>
<kw name="Delete All Sessions" library="request_own_library">
<status status="PASS" starttime="20220704 16:35:00.995" endtime="20220704 16:35:00.996"/>
</kw>
<status status="PASS" starttime="20220704 16:35:00.615" endtime="20220704 16:35:00.997"/>
</kw>
<doc>Example Test with Trello API Cards</doc>
<status status="PASS" starttime="20220704 16:34:59.091" endtime="20220704 16:35:00.997"/>
</suite>
<suite id="s1-s1-s5" name="Trello Api Lists Tests" source="/trello/api/trello_api_lists_tests.robot">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Create Trello Session</arg>
<arg>Setup Board</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Create Trello Session" library="TrelloAPI">
<doc>Creates a Trello Session</doc>
<kw name="Create Session" library="request_own_library">
<arg>${API_BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<status status="PASS" starttime="20220704 16:35:01.010" endtime="20220704 16:35:01.011"/>
</kw>
<status status="PASS" starttime="20220704 16:35:01.010" endtime="20220704 16:35:01.011"/>
</kw>
<kw name="Setup Board">
<doc>Create a board and save it's id for the suite</doc>
<kw name="Create A Board" library="Board">
<var>${BOARD}</var>
<arg>TestBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 16:35:01.012" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 16:35:01.012" endtime="20220704 16:35:01.012"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 16:35:01.012" endtime="20220704 16:35:01.012"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 16:35:01.013" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220704 16:35:01.012" endtime="20220704 16:35:01.013"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 16:35:01.314" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 16:35:01.013" endtime="20220704 16:35:01.314"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 16:35:01.314" endtime="20220704 16:35:01.314"/>
</return>
<msg timestamp="20220704 16:35:01.314" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 16:35:01.011" endtime="20220704 16:35:01.314"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 16:35:01.314" endtime="20220704 16:35:01.314"/>
</return>
<msg timestamp="20220704 16:35:01.314" level="INFO">${BOARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 16:35:01.011" endtime="20220704 16:35:01.314"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Set Suite Variable</arg>
<arg>\${TEST_SUITE_BOARD_ID}</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_BOARD_ID}</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220704 16:35:01.316" level="INFO">${TEST_SUITE_BOARD_ID} = 62c316b52a03a721e93f142d</msg>
<status status="PASS" starttime="20220704 16:35:01.315" endtime="20220704 16:35:01.316"/>
</kw>
<status status="PASS" starttime="20220704 16:35:01.315" endtime="20220704 16:35:01.316"/>
</kw>
<status status="PASS" starttime="20220704 16:35:01.011" endtime="20220704 16:35:01.316"/>
</kw>
<status status="PASS" starttime="20220704 16:35:01.010" endtime="20220704 16:35:01.316"/>
</kw>
<test id="s1-s1-s5-t1" name="CREATE a list" line="13">
<kw name="Create A List" library="List">
<var>${response}</var>
<arg>NewList</arg>
<doc>Creates a new List
board id
name the list will have
optional_args: idListSource, pos, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>list</arg>
<arg>name</arg>
<arg>${name}</arg>
<arg>idBoard</arg>
<arg>${idBoard}</arg>
<arg>@{optional_args}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 16:35:01.318" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 16:35:01.318" endtime="20220704 16:35:01.318"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 16:35:01.318" endtime="20220704 16:35:01.318"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 16:35:01.319" level="INFO">${url} = lists/</msg>
<status status="PASS" starttime="20220704 16:35:01.319" endtime="20220704 16:35:01.319"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 16:35:01.459" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 16:35:01.319" endtime="20220704 16:35:01.459"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 16:35:01.459" endtime="20220704 16:35:01.459"/>
</return>
<msg timestamp="20220704 16:35:01.459" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 16:35:01.317" endtime="20220704 16:35:01.459"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 16:35:01.459" endtime="20220704 16:35:01.459"/>
</return>
<msg timestamp="20220704 16:35:01.459" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 16:35:01.317" endtime="20220704 16:35:01.459"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>list</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220704 16:35:01.460" endtime="20220704 16:35:01.462"/>
</kw>
<status status="PASS" starttime="20220704 16:35:01.459" endtime="20220704 16:35:01.462"/>
</kw>
<doc>Verify that a list can be created through API</doc>
<tag>api</tag>
<tag>list.create</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220704 16:35:01.316" endtime="20220704 16:35:01.462"/>
</test>
<test id="s1-s1-s5-t2" name="UPDATE a list" line="19">
<kw name="Create A List" library="List">
<var>${response}</var>
<arg>NewList</arg>
<doc>Creates a new List
board id
name the list will have
optional_args: idListSource, pos, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>list</arg>
<arg>name</arg>
<arg>${name}</arg>
<arg>idBoard</arg>
<arg>${idBoard}</arg>
<arg>@{optional_args}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 16:35:01.465" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 16:35:01.464" endtime="20220704 16:35:01.465"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 16:35:01.465" endtime="20220704 16:35:01.465"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 16:35:01.466" level="INFO">${url} = lists/</msg>
<status status="PASS" starttime="20220704 16:35:01.465" endtime="20220704 16:35:01.466"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 16:35:01.586" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 16:35:01.466" endtime="20220704 16:35:01.586"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 16:35:01.586" endtime="20220704 16:35:01.586"/>
</return>
<msg timestamp="20220704 16:35:01.587" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 16:35:01.464" endtime="20220704 16:35:01.587"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 16:35:01.587" endtime="20220704 16:35:01.587"/>
</return>
<msg timestamp="20220704 16:35:01.587" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 16:35:01.463" endtime="20220704 16:35:01.587"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>list</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220704 16:35:01.587" endtime="20220704 16:35:01.589"/>
</kw>
<status status="PASS" starttime="20220704 16:35:01.587" endtime="20220704 16:35:01.589"/>
</kw>
<kw name="Update A List" library="List">
<arg>${response.json()}[id]</arg>
<arg>name</arg>
<arg>NewName</arg>
<doc>Updates the board with the given ID
optional_args: name, idListSource, pos, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>list</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 16:35:01.591" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 16:35:01.591" endtime="20220704 16:35:01.591"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 16:35:01.591" endtime="20220704 16:35:01.592"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 16:35:01.592" level="INFO">${url} = lists/62c316b590cfdd45223a919e</msg>
<status status="PASS" starttime="20220704 16:35:01.592" endtime="20220704 16:35:01.592"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 16:35:01.704" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 16:35:01.592" endtime="20220704 16:35:01.704"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 16:35:01.704" endtime="20220704 16:35:01.704"/>
</return>
<msg timestamp="20220704 16:35:01.705" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 16:35:01.590" endtime="20220704 16:35:01.705"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 16:35:01.705" endtime="20220704 16:35:01.705"/>
</return>
<status status="PASS" starttime="20220704 16:35:01.589" endtime="20220704 16:35:01.705"/>
</kw>
<kw name="Get A List" library="List">
<var>${new_response}</var>
<arg>${response.json()}[id]</arg>
<doc>Gets the List with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>list</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 16:35:01.707" level="INFO">${url} = lists/62c316b590cfdd45223a919e</msg>
<status status="PASS" starttime="20220704 16:35:01.707" endtime="20220704 16:35:01.707"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 16:35:01.800" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 16:35:01.707" endtime="20220704 16:35:01.800"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 16:35:01.800" endtime="20220704 16:35:01.800"/>
</return>
<msg timestamp="20220704 16:35:01.800" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 16:35:01.706" endtime="20220704 16:35:01.800"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 16:35:01.800" endtime="20220704 16:35:01.800"/>
</return>
<msg timestamp="20220704 16:35:01.800" level="INFO">${new_response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 16:35:01.705" endtime="20220704 16:35:01.801"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${new_response}</arg>
<arg>list</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220704 16:35:01.801" endtime="20220704 16:35:01.803"/>
</kw>
<status status="PASS" starttime="20220704 16:35:01.801" endtime="20220704 16:35:01.803"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${new_response.json()}[name]</arg>
<arg>NewName</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220704 16:35:01.803" endtime="20220704 16:35:01.804"/>
</kw>
<doc>Verify that a lists name can be updated through API</doc>
<tag>api</tag>
<tag>list.update</tag>
<tag>regression</tag>
<status status="PASS" starttime="20220704 16:35:01.463" endtime="20220704 16:35:01.804"/>
</test>
<test id="s1-s1-s5-t3" name="ARCHIVE A list" line="29">
<kw name="Create A List" library="List">
<var>${response}</var>
<arg>NewList</arg>
<doc>Creates a new List
board id
name the list will have
optional_args: idListSource, pos, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>list</arg>
<arg>name</arg>
<arg>${name}</arg>
<arg>idBoard</arg>
<arg>${idBoard}</arg>
<arg>@{optional_args}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 16:35:01.807" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 16:35:01.807" endtime="20220704 16:35:01.807"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 16:35:01.807" endtime="20220704 16:35:01.808"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 16:35:01.808" level="INFO">${url} = lists/</msg>
<status status="PASS" starttime="20220704 16:35:01.808" endtime="20220704 16:35:01.808"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 16:35:01.963" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 16:35:01.808" endtime="20220704 16:35:01.963"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 16:35:01.963" endtime="20220704 16:35:01.963"/>
</return>
<msg timestamp="20220704 16:35:01.963" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 16:35:01.807" endtime="20220704 16:35:01.963"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 16:35:01.963" endtime="20220704 16:35:01.963"/>
</return>
<msg timestamp="20220704 16:35:01.964" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 16:35:01.804" endtime="20220704 16:35:01.964"/>
</kw>
<kw name="Archive A List" library="List">
<arg>${response.json()}[id]</arg>
<doc>Deletes the list with the given ID</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>archive_list</arg>
<arg>${id}</arg>
<arg>value</arg>
<arg>true</arg>
<arg>status_code=${status_code}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 16:35:01.966" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 16:35:01.965" endtime="20220704 16:35:01.966"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 16:35:01.966" endtime="20220704 16:35:01.966"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 16:35:01.966" level="INFO">${url} = lists/62c316b5b5b15380f2ce08ce/closed</msg>
<status status="PASS" starttime="20220704 16:35:01.966" endtime="20220704 16:35:01.966"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 16:35:02.088" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 16:35:01.967" endtime="20220704 16:35:02.088"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 16:35:02.088" endtime="20220704 16:35:02.088"/>
</return>
<msg timestamp="20220704 16:35:02.088" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 16:35:01.965" endtime="20220704 16:35:02.088"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 16:35:02.088" endtime="20220704 16:35:02.088"/>
</return>
<status status="PASS" starttime="20220704 16:35:01.964" endtime="20220704 16:35:02.088"/>
</kw>
<kw name="Get A List" library="List">
<var>${new_response}</var>
<arg>${response.json()}[id]</arg>
<doc>Gets the List with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>list</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 16:35:02.090" level="INFO">${url} = lists/62c316b5b5b15380f2ce08ce</msg>
<status status="PASS" starttime="20220704 16:35:02.090" endtime="20220704 16:35:02.090"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 16:35:02.177" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 16:35:02.091" endtime="20220704 16:35:02.177"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 16:35:02.177" endtime="20220704 16:35:02.177"/>
</return>
<msg timestamp="20220704 16:35:02.178" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 16:35:02.090" endtime="20220704 16:35:02.178"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 16:35:02.178" endtime="20220704 16:35:02.178"/>
</return>
<msg timestamp="20220704 16:35:02.178" level="INFO">${new_response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 16:35:02.089" endtime="20220704 16:35:02.178"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${new_response.json()}[closed]</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220704 16:35:02.178" endtime="20220704 16:35:02.179"/>
</kw>
<doc>Verify that a list can be archived through API</doc>
<tag>api</tag>
<tag>list.archive</tag>
<tag>regression</tag>
<status status="PASS" starttime="20220704 16:35:01.804" endtime="20220704 16:35:02.179"/>
</test>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Teardown Board</arg>
<arg>Delete All Sessions</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Teardown Board">
<doc>Delete the board created for this suite.</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 16:35:02.182" level="INFO">${url} = boards/62c316b52a03a721e93f142d</msg>
<status status="PASS" starttime="20220704 16:35:02.181" endtime="20220704 16:35:02.182"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 16:35:02.568" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 16:35:02.182" endtime="20220704 16:35:02.568"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 16:35:02.568" endtime="20220704 16:35:02.568"/>
</return>
<msg timestamp="20220704 16:35:02.569" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 16:35:02.181" endtime="20220704 16:35:02.569"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 16:35:02.569" endtime="20220704 16:35:02.569"/>
</return>
<status status="PASS" starttime="20220704 16:35:02.181" endtime="20220704 16:35:02.569"/>
</kw>
<status status="PASS" starttime="20220704 16:35:02.180" endtime="20220704 16:35:02.569"/>
</kw>
<status status="PASS" starttime="20220704 16:35:02.180" endtime="20220704 16:35:02.569"/>
</kw>
<kw name="Delete All Sessions" library="request_own_library">
<status status="PASS" starttime="20220704 16:35:02.569" endtime="20220704 16:35:02.571"/>
</kw>
<status status="PASS" starttime="20220704 16:35:02.180" endtime="20220704 16:35:02.571"/>
</kw>
<doc>Example Test with Trello API lists</doc>
<status status="PASS" starttime="20220704 16:35:00.998" endtime="20220704 16:35:02.571"/>
</suite>
<status status="PASS" starttime="20220704 16:34:49.632" endtime="20220704 16:35:02.573"/>
</suite>
<status status="PASS" starttime="20220704 16:34:49.615" endtime="20220704 16:35:02.576"/>
</suite>
<statistics>
<total>
<stat pass="18" fail="0" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="18" fail="0" skip="0">api</stat>
<stat pass="1" fail="0" skip="0">board.create</stat>
<stat pass="1" fail="0" skip="0">board.delete</stat>
<stat pass="1" fail="0" skip="0">board.get</stat>
<stat pass="2" fail="0" skip="0">board.update</stat>
<stat pass="1" fail="0" skip="0">card.close</stat>
<stat pass="1" fail="0" skip="0">card.create</stat>
<stat pass="1" fail="0" skip="0">card.delete</stat>
<stat pass="1" fail="0" skip="0">card.update</stat>
<stat pass="1" fail="0" skip="0">checklist.create</stat>
<stat pass="1" fail="0" skip="0">checklist.delete</stat>
<stat pass="1" fail="0" skip="0">checklist.update</stat>
<stat pass="1" fail="0" skip="0">label.create</stat>
<stat pass="1" fail="0" skip="0">label.delete</stat>
<stat pass="1" fail="0" skip="0">label.get</stat>
<stat pass="1" fail="0" skip="0">label.update</stat>
<stat pass="1" fail="0" skip="0">list.archive</stat>
<stat pass="1" fail="0" skip="0">list.create</stat>
<stat pass="1" fail="0" skip="0">list.update</stat>
<stat pass="5" fail="0" skip="0">regression</stat>
<stat pass="13" fail="0" skip="0">smoke</stat>
</tag>
<suite>
<stat pass="18" fail="0" skip="0" id="s1" name="Trello">Trello</stat>
<stat pass="18" fail="0" skip="0" id="s1-s1" name="Api">Trello.Api</stat>
<stat pass="5" fail="0" skip="0" id="s1-s1-s1" name="Trello Api Boards Tests">Trello.Api.Trello Api Boards Tests</stat>
<stat pass="4" fail="0" skip="0" id="s1-s1-s2" name="Trello Api Cards Tests">Trello.Api.Trello Api Cards Tests</stat>
<stat pass="3" fail="0" skip="0" id="s1-s1-s3" name="Trello Api Checklists Tests">Trello.Api.Trello Api Checklists Tests</stat>
<stat pass="3" fail="0" skip="0" id="s1-s1-s4" name="Trello Api Labels Tests">Trello.Api.Trello Api Labels Tests</stat>
<stat pass="3" fail="0" skip="0" id="s1-s1-s5" name="Trello Api Lists Tests">Trello.Api.Trello Api Lists Tests</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
