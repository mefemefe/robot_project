<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 5.0.1 (Python 3.10.5 on linux)" generated="20220705 14:32:06.754" rpa="false" schemaversion="3">
<suite id="s1" name="Trello" source="/trello">
<suite id="s1-s1" name="Api" source="/trello/api">
<suite id="s1-s1-s1" name="Trello Api Boards Tests" source="/trello/api/trello_api_boards_tests.robot">
<kw name="Create Trello Session" library="TrelloAPI" type="SETUP">
<doc>Creates a Trello Session</doc>
<kw name="Create Session" library="request_own_library">
<arg>${API_BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<status status="PASS" starttime="20220705 14:32:06.927" endtime="20220705 14:32:06.927"/>
</kw>
<status status="PASS" starttime="20220705 14:32:06.925" endtime="20220705 14:32:06.927"/>
</kw>
<test id="s1-s1-s1-t1" name="CREATE a board" line="9">
<kw name="Create A Board" library="Board">
<var>${response}</var>
<arg>NewBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 14:32:06.930" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 14:32:06.929" endtime="20220705 14:32:06.930"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 14:32:06.930" endtime="20220705 14:32:06.930"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 14:32:06.931" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220705 14:32:06.930" endtime="20220705 14:32:06.931"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 14:32:07.222" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 14:32:06.931" endtime="20220705 14:32:07.222"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 14:32:07.222" endtime="20220705 14:32:07.222"/>
</return>
<msg timestamp="20220705 14:32:07.222" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 14:32:06.929" endtime="20220705 14:32:07.222"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 14:32:07.222" endtime="20220705 14:32:07.222"/>
</return>
<msg timestamp="20220705 14:32:07.223" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 14:32:06.928" endtime="20220705 14:32:07.223"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>board</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 14:32:07.223" endtime="20220705 14:32:07.229"/>
</kw>
<status status="PASS" starttime="20220705 14:32:07.223" endtime="20220705 14:32:07.229"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${response.json()}[id]</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${response.json()}[id]</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 14:32:07.232" level="INFO">${url} = boards/62c44b677affd58645d1b946</msg>
<status status="PASS" starttime="20220705 14:32:07.232" endtime="20220705 14:32:07.232"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 14:32:07.719" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 14:32:07.232" endtime="20220705 14:32:07.719"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 14:32:07.719" endtime="20220705 14:32:07.719"/>
</return>
<msg timestamp="20220705 14:32:07.719" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 14:32:07.231" endtime="20220705 14:32:07.719"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 14:32:07.719" endtime="20220705 14:32:07.719"/>
</return>
<status status="PASS" starttime="20220705 14:32:07.230" endtime="20220705 14:32:07.720"/>
</kw>
<status status="PASS" starttime="20220705 14:32:07.229" endtime="20220705 14:32:07.720"/>
</kw>
<doc>Verify that a board can be create through API</doc>
<tag>api</tag>
<tag>board.create</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220705 14:32:06.928" endtime="20220705 14:32:07.720"/>
</test>
<test id="s1-s1-s1-t2" name="UPDATE a Board's name" line="16">
<kw name="Create A Board" library="Board">
<var>${response}</var>
<arg>NewBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 14:32:07.723" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 14:32:07.722" endtime="20220705 14:32:07.723"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 14:32:07.723" endtime="20220705 14:32:07.723"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 14:32:07.724" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220705 14:32:07.723" endtime="20220705 14:32:07.724"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 14:32:07.981" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 14:32:07.724" endtime="20220705 14:32:07.981"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 14:32:07.981" endtime="20220705 14:32:07.981"/>
</return>
<msg timestamp="20220705 14:32:07.981" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 14:32:07.722" endtime="20220705 14:32:07.981"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 14:32:07.981" endtime="20220705 14:32:07.981"/>
</return>
<msg timestamp="20220705 14:32:07.981" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 14:32:07.721" endtime="20220705 14:32:07.982"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>board</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 14:32:07.982" endtime="20220705 14:32:07.987"/>
</kw>
<status status="PASS" starttime="20220705 14:32:07.982" endtime="20220705 14:32:07.987"/>
</kw>
<kw name="Update A Board" library="Board">
<arg>${response.json()}[id]</arg>
<arg>name</arg>
<arg>NewName</arg>
<doc>Updates the board with the given ID
optional_args: name, desc, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 14:32:07.989" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 14:32:07.989" endtime="20220705 14:32:07.989"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 14:32:07.989" endtime="20220705 14:32:07.989"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 14:32:07.990" level="INFO">${url} = boards/62c44b670887121df65ea88a</msg>
<status status="PASS" starttime="20220705 14:32:07.990" endtime="20220705 14:32:07.990"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 14:32:08.314" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 14:32:07.990" endtime="20220705 14:32:08.314"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 14:32:08.314" endtime="20220705 14:32:08.314"/>
</return>
<msg timestamp="20220705 14:32:08.314" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 14:32:07.988" endtime="20220705 14:32:08.314"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 14:32:08.314" endtime="20220705 14:32:08.314"/>
</return>
<status status="PASS" starttime="20220705 14:32:07.987" endtime="20220705 14:32:08.315"/>
</kw>
<kw name="Get A Board" library="Board">
<var>${new_response}</var>
<arg>${response.json()}[id]</arg>
<doc>Gets the Board with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 14:32:08.317" level="INFO">${url} = boards/62c44b670887121df65ea88a</msg>
<status status="PASS" starttime="20220705 14:32:08.317" endtime="20220705 14:32:08.317"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 14:32:08.428" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 14:32:08.317" endtime="20220705 14:32:08.428"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 14:32:08.428" endtime="20220705 14:32:08.428"/>
</return>
<msg timestamp="20220705 14:32:08.429" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 14:32:08.316" endtime="20220705 14:32:08.429"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 14:32:08.429" endtime="20220705 14:32:08.429"/>
</return>
<msg timestamp="20220705 14:32:08.429" level="INFO">${new_response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 14:32:08.315" endtime="20220705 14:32:08.429"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${new_response}</arg>
<arg>board</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 14:32:08.431" endtime="20220705 14:32:08.436"/>
</kw>
<status status="PASS" starttime="20220705 14:32:08.430" endtime="20220705 14:32:08.436"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${new_response.json()}[name]</arg>
<arg>NewName</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220705 14:32:08.436" endtime="20220705 14:32:08.437"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${response.json()}[id]</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${response.json()}[id]</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 14:32:08.440" level="INFO">${url} = boards/62c44b670887121df65ea88a</msg>
<status status="PASS" starttime="20220705 14:32:08.440" endtime="20220705 14:32:08.440"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 14:32:08.827" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 14:32:08.440" endtime="20220705 14:32:08.827"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 14:32:08.827" endtime="20220705 14:32:08.827"/>
</return>
<msg timestamp="20220705 14:32:08.827" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 14:32:08.439" endtime="20220705 14:32:08.827"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 14:32:08.828" endtime="20220705 14:32:08.828"/>
</return>
<status status="PASS" starttime="20220705 14:32:08.438" endtime="20220705 14:32:08.828"/>
</kw>
<status status="PASS" starttime="20220705 14:32:08.437" endtime="20220705 14:32:08.828"/>
</kw>
<doc>Verify that a board's name can be updated through API</doc>
<tag>api</tag>
<tag>board.update</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220705 14:32:07.720" endtime="20220705 14:32:08.828"/>
</test>
<test id="s1-s1-s1-t3" name="DELETE A Board" line="27">
<kw name="Create A Board" library="Board">
<var>${response}</var>
<arg>NewBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 14:32:08.831" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 14:32:08.830" endtime="20220705 14:32:08.831"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 14:32:08.831" endtime="20220705 14:32:08.831"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 14:32:08.832" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220705 14:32:08.831" endtime="20220705 14:32:08.832"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 14:32:09.172" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 14:32:08.832" endtime="20220705 14:32:09.172"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 14:32:09.173" endtime="20220705 14:32:09.173"/>
</return>
<msg timestamp="20220705 14:32:09.173" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 14:32:08.830" endtime="20220705 14:32:09.173"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 14:32:09.173" endtime="20220705 14:32:09.173"/>
</return>
<msg timestamp="20220705 14:32:09.173" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 14:32:08.830" endtime="20220705 14:32:09.173"/>
</kw>
<kw name="Delete A Board" library="Board">
<arg>${response.json()}[id]</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 14:32:09.176" level="INFO">${url} = boards/62c44b68030d17580e9bff3f</msg>
<status status="PASS" starttime="20220705 14:32:09.176" endtime="20220705 14:32:09.176"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 14:32:09.662" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 14:32:09.176" endtime="20220705 14:32:09.662"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 14:32:09.662" endtime="20220705 14:32:09.662"/>
</return>
<msg timestamp="20220705 14:32:09.662" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 14:32:09.175" endtime="20220705 14:32:09.662"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 14:32:09.662" endtime="20220705 14:32:09.662"/>
</return>
<status status="PASS" starttime="20220705 14:32:09.174" endtime="20220705 14:32:09.663"/>
</kw>
<kw name="Get A Board" library="Board">
<arg>${response.json()}[id]</arg>
<arg>status_code=404</arg>
<doc>Gets the Board with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 14:32:09.666" level="INFO">${url} = boards/62c44b68030d17580e9bff3f</msg>
<status status="PASS" starttime="20220705 14:32:09.665" endtime="20220705 14:32:09.666"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 14:32:09.761" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220705 14:32:09.666" endtime="20220705 14:32:09.762"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 14:32:09.762" endtime="20220705 14:32:09.762"/>
</return>
<msg timestamp="20220705 14:32:09.762" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220705 14:32:09.665" endtime="20220705 14:32:09.762"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 14:32:09.762" endtime="20220705 14:32:09.762"/>
</return>
<status status="PASS" starttime="20220705 14:32:09.663" endtime="20220705 14:32:09.762"/>
</kw>
<doc>Verify that a board can be deleted through API</doc>
<tag>api</tag>
<tag>board.delete</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220705 14:32:08.828" endtime="20220705 14:32:09.763"/>
</test>
<test id="s1-s1-s1-t4" name="GET Information of A Board" line="34">
<kw name="Create A Board" library="Board">
<var>${response}</var>
<arg>BoardTest</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 14:32:09.766" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 14:32:09.765" endtime="20220705 14:32:09.766"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 14:32:09.766" endtime="20220705 14:32:09.766"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 14:32:09.767" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220705 14:32:09.766" endtime="20220705 14:32:09.767"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 14:32:09.989" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 14:32:09.768" endtime="20220705 14:32:09.989"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 14:32:09.989" endtime="20220705 14:32:09.989"/>
</return>
<msg timestamp="20220705 14:32:09.989" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 14:32:09.765" endtime="20220705 14:32:09.989"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 14:32:09.990" endtime="20220705 14:32:09.990"/>
</return>
<msg timestamp="20220705 14:32:09.990" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 14:32:09.764" endtime="20220705 14:32:09.990"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>board</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 14:32:09.991" endtime="20220705 14:32:09.996"/>
</kw>
<status status="PASS" starttime="20220705 14:32:09.990" endtime="20220705 14:32:09.996"/>
</kw>
<kw name="Get A Board" library="Board">
<var>${response2}</var>
<arg>${response.json()}[id]</arg>
<doc>Gets the Board with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 14:32:09.998" level="INFO">${url} = boards/62c44b695fce885c210ff7e6</msg>
<status status="PASS" starttime="20220705 14:32:09.998" endtime="20220705 14:32:09.998"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 14:32:10.110" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 14:32:09.998" endtime="20220705 14:32:10.110"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 14:32:10.110" endtime="20220705 14:32:10.110"/>
</return>
<msg timestamp="20220705 14:32:10.110" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 14:32:09.997" endtime="20220705 14:32:10.110"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 14:32:10.110" endtime="20220705 14:32:10.110"/>
</return>
<msg timestamp="20220705 14:32:10.111" level="INFO">${response2} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 14:32:09.996" endtime="20220705 14:32:10.111"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response2}</arg>
<arg>board</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 14:32:10.111" endtime="20220705 14:32:10.116"/>
</kw>
<status status="PASS" starttime="20220705 14:32:10.111" endtime="20220705 14:32:10.116"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${response2.json()}[name]</arg>
<arg>BoardTest</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220705 14:32:10.116" endtime="20220705 14:32:10.117"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${response.json()}[id]</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${response.json()}[id]</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 14:32:10.121" level="INFO">${url} = boards/62c44b695fce885c210ff7e6</msg>
<status status="PASS" starttime="20220705 14:32:10.119" endtime="20220705 14:32:10.121"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 14:32:10.523" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 14:32:10.121" endtime="20220705 14:32:10.523"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 14:32:10.523" endtime="20220705 14:32:10.523"/>
</return>
<msg timestamp="20220705 14:32:10.524" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 14:32:10.118" endtime="20220705 14:32:10.524"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 14:32:10.524" endtime="20220705 14:32:10.524"/>
</return>
<status status="PASS" starttime="20220705 14:32:10.117" endtime="20220705 14:32:10.524"/>
</kw>
<status status="PASS" starttime="20220705 14:32:10.117" endtime="20220705 14:32:10.524"/>
</kw>
<doc>Verify that a board's information can be accesed through API</doc>
<tag>api</tag>
<tag>board.get</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220705 14:32:09.764" endtime="20220705 14:32:10.524"/>
</test>
<test id="s1-s1-s1-t5" name="UPDATE a Board's description" line="45">
<kw name="Create A Board" library="Board">
<var>${response}</var>
<arg>NewBoardForTest</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 14:32:10.527" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 14:32:10.527" endtime="20220705 14:32:10.527"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 14:32:10.527" endtime="20220705 14:32:10.527"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 14:32:10.528" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220705 14:32:10.527" endtime="20220705 14:32:10.528"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 14:32:10.793" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 14:32:10.528" endtime="20220705 14:32:10.793"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 14:32:10.793" endtime="20220705 14:32:10.793"/>
</return>
<msg timestamp="20220705 14:32:10.793" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 14:32:10.526" endtime="20220705 14:32:10.793"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 14:32:10.793" endtime="20220705 14:32:10.793"/>
</return>
<msg timestamp="20220705 14:32:10.794" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 14:32:10.526" endtime="20220705 14:32:10.794"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>board</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 14:32:10.794" endtime="20220705 14:32:10.799"/>
</kw>
<status status="PASS" starttime="20220705 14:32:10.794" endtime="20220705 14:32:10.799"/>
</kw>
<kw name="Update A Board" library="Board">
<arg>${response.json()}[id]</arg>
<arg>desc</arg>
<arg>sampleDescription</arg>
<doc>Updates the board with the given ID
optional_args: name, desc, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 14:32:10.801" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 14:32:10.801" endtime="20220705 14:32:10.801"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 14:32:10.801" endtime="20220705 14:32:10.802"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 14:32:10.802" level="INFO">${url} = boards/62c44b6a17d64f857203a194</msg>
<status status="PASS" starttime="20220705 14:32:10.802" endtime="20220705 14:32:10.802"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 14:32:10.973" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 14:32:10.802" endtime="20220705 14:32:10.973"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 14:32:10.973" endtime="20220705 14:32:10.973"/>
</return>
<msg timestamp="20220705 14:32:10.973" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 14:32:10.800" endtime="20220705 14:32:10.973"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 14:32:10.973" endtime="20220705 14:32:10.973"/>
</return>
<status status="PASS" starttime="20220705 14:32:10.799" endtime="20220705 14:32:10.974"/>
</kw>
<kw name="Get A Board" library="Board">
<var>${new_response}</var>
<arg>${response.json()}[id]</arg>
<doc>Gets the Board with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 14:32:10.979" level="INFO">${url} = boards/62c44b6a17d64f857203a194</msg>
<status status="PASS" starttime="20220705 14:32:10.978" endtime="20220705 14:32:10.979"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 14:32:11.714" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 14:32:10.979" endtime="20220705 14:32:11.714"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 14:32:11.714" endtime="20220705 14:32:11.714"/>
</return>
<msg timestamp="20220705 14:32:11.714" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 14:32:10.978" endtime="20220705 14:32:11.714"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 14:32:11.715" endtime="20220705 14:32:11.715"/>
</return>
<msg timestamp="20220705 14:32:11.715" level="INFO">${new_response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 14:32:10.974" endtime="20220705 14:32:11.715"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${new_response.json()}[desc]</arg>
<arg>sampleDescription</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220705 14:32:11.715" endtime="20220705 14:32:11.716"/>
</kw>
<kw name="Update A Board" library="Board">
<arg>${response.json()}[id]</arg>
<arg>desc</arg>
<arg>updatedDescription</arg>
<doc>Updates the board with the given ID
optional_args: name, desc, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 14:32:11.718" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 14:32:11.718" endtime="20220705 14:32:11.718"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 14:32:11.718" endtime="20220705 14:32:11.719"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 14:32:11.719" level="INFO">${url} = boards/62c44b6a17d64f857203a194</msg>
<status status="PASS" starttime="20220705 14:32:11.719" endtime="20220705 14:32:11.719"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 14:32:11.856" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 14:32:11.719" endtime="20220705 14:32:11.856"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 14:32:11.856" endtime="20220705 14:32:11.856"/>
</return>
<msg timestamp="20220705 14:32:11.856" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 14:32:11.717" endtime="20220705 14:32:11.856"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 14:32:11.856" endtime="20220705 14:32:11.856"/>
</return>
<status status="PASS" starttime="20220705 14:32:11.716" endtime="20220705 14:32:11.857"/>
</kw>
<kw name="Get A Board" library="Board">
<var>${new_response2}</var>
<arg>${response.json()}[id]</arg>
<doc>Gets the Board with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 14:32:11.859" level="INFO">${url} = boards/62c44b6a17d64f857203a194</msg>
<status status="PASS" starttime="20220705 14:32:11.858" endtime="20220705 14:32:11.859"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 14:32:11.971" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 14:32:11.859" endtime="20220705 14:32:11.971"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 14:32:11.971" endtime="20220705 14:32:11.971"/>
</return>
<msg timestamp="20220705 14:32:11.971" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 14:32:11.858" endtime="20220705 14:32:11.971"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 14:32:11.971" endtime="20220705 14:32:11.971"/>
</return>
<msg timestamp="20220705 14:32:11.971" level="INFO">${new_response2} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 14:32:11.857" endtime="20220705 14:32:11.972"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${new_response2.json()}[desc]</arg>
<arg>updatedDescription</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220705 14:32:11.972" endtime="20220705 14:32:11.973"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${response.json()}[id]</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${response.json()}[id]</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 14:32:11.975" level="INFO">${url} = boards/62c44b6a17d64f857203a194</msg>
<status status="PASS" starttime="20220705 14:32:11.975" endtime="20220705 14:32:11.975"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 14:32:12.444" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 14:32:11.975" endtime="20220705 14:32:12.444"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 14:32:12.444" endtime="20220705 14:32:12.444"/>
</return>
<msg timestamp="20220705 14:32:12.444" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 14:32:11.974" endtime="20220705 14:32:12.444"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 14:32:12.444" endtime="20220705 14:32:12.444"/>
</return>
<status status="PASS" starttime="20220705 14:32:11.973" endtime="20220705 14:32:12.444"/>
</kw>
<status status="PASS" starttime="20220705 14:32:11.973" endtime="20220705 14:32:12.445"/>
</kw>
<doc>Verify that a board's description can be updated through API</doc>
<tag>api</tag>
<tag>board.update</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220705 14:32:10.525" endtime="20220705 14:32:12.445"/>
</test>
<kw name="Delete All Sessions" library="request_own_library" type="TEARDOWN">
<status status="PASS" starttime="20220705 14:32:12.446" endtime="20220705 14:32:12.447"/>
</kw>
<doc>Example Test with Trello API Boards</doc>
<status status="PASS" starttime="20220705 14:32:06.784" endtime="20220705 14:32:12.447"/>
</suite>
<suite id="s1-s1-s2" name="Trello Api Cards Tests" source="/trello/api/trello_api_cards_tests.robot">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Create Trello Session</arg>
<arg>Setup Board And List</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Create Trello Session" library="TrelloAPI">
<doc>Creates a Trello Session</doc>
<kw name="Create Session" library="request_own_library">
<arg>${API_BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<status status="PASS" starttime="20220705 14:32:12.461" endtime="20220705 14:32:12.462"/>
</kw>
<status status="PASS" starttime="20220705 14:32:12.461" endtime="20220705 14:32:12.462"/>
</kw>
<kw name="Setup Board And List">
<doc>Create a board and save its ID and its first list's ID</doc>
<kw name="Create A Board" library="Board">
<var>${BOARD}</var>
<arg>TestBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 14:32:12.463" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 14:32:12.463" endtime="20220705 14:32:12.463"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 14:32:12.463" endtime="20220705 14:32:12.464"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 14:32:12.464" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220705 14:32:12.464" endtime="20220705 14:32:12.464"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 14:32:12.829" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 14:32:12.465" endtime="20220705 14:32:12.829"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 14:32:12.829" endtime="20220705 14:32:12.829"/>
</return>
<msg timestamp="20220705 14:32:12.830" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 14:32:12.462" endtime="20220705 14:32:12.830"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 14:32:12.830" endtime="20220705 14:32:12.830"/>
</return>
<msg timestamp="20220705 14:32:12.830" level="INFO">${BOARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 14:32:12.462" endtime="20220705 14:32:12.830"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_BOARD_ID}</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220705 14:32:12.831" level="INFO">${TEST_SUITE_BOARD_ID} = 62c44b6c0913145c67525e4d</msg>
<status status="PASS" starttime="20220705 14:32:12.830" endtime="20220705 14:32:12.831"/>
</kw>
<kw name="Get Lists On A Board" library="Board">
<var>${LISTS}</var>
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Get all the lists in a board</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>lists_on_board</arg>
<arg>${id}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 14:32:12.833" level="INFO">${url} = boards/62c44b6c0913145c67525e4d/lists/</msg>
<status status="PASS" starttime="20220705 14:32:12.832" endtime="20220705 14:32:12.833"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 14:32:12.947" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 14:32:12.833" endtime="20220705 14:32:12.947"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 14:32:12.947" endtime="20220705 14:32:12.948"/>
</return>
<msg timestamp="20220705 14:32:12.948" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 14:32:12.832" endtime="20220705 14:32:12.948"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 14:32:12.948" endtime="20220705 14:32:12.948"/>
</return>
<msg timestamp="20220705 14:32:12.948" level="INFO">${LISTS} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 14:32:12.831" endtime="20220705 14:32:12.948"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_LIST_ID}</arg>
<arg>${LISTS.json()}[0][id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220705 14:32:12.949" level="INFO">${TEST_SUITE_LIST_ID} = 62c44b6c0913145c67525e54</msg>
<status status="PASS" starttime="20220705 14:32:12.948" endtime="20220705 14:32:12.949"/>
</kw>
<status status="PASS" starttime="20220705 14:32:12.462" endtime="20220705 14:32:12.950"/>
</kw>
<status status="PASS" starttime="20220705 14:32:12.461" endtime="20220705 14:32:12.950"/>
</kw>
<test id="s1-s1-s2-t1" name="Verify A Card Can Be Created" line="13">
<kw name="Create A Card" library="Card">
<var>${response}</var>
<arg>name</arg>
<arg>RFCard2</arg>
<doc>Creates a new card in the given list.
required_args: listId
optional_args: name, desc, pos, idCardSource, idLabels, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>@{optional_args}</arg>
<arg>idList</arg>
<arg>${idList}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 14:32:12.952" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 14:32:12.952" endtime="20220705 14:32:12.952"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 14:32:12.952" endtime="20220705 14:32:12.952"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 14:32:12.953" level="INFO">${url} = cards/</msg>
<status status="PASS" starttime="20220705 14:32:12.952" endtime="20220705 14:32:12.953"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 14:32:13.408" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 14:32:12.954" endtime="20220705 14:32:13.408"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 14:32:13.408" endtime="20220705 14:32:13.408"/>
</return>
<msg timestamp="20220705 14:32:13.409" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 14:32:12.951" endtime="20220705 14:32:13.409"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 14:32:13.409" endtime="20220705 14:32:13.409"/>
</return>
<msg timestamp="20220705 14:32:13.409" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 14:32:12.950" endtime="20220705 14:32:13.409"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>card</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 14:32:13.410" endtime="20220705 14:32:13.416"/>
</kw>
<status status="PASS" starttime="20220705 14:32:13.409" endtime="20220705 14:32:13.416"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 14:32:13.416" endtime="20220705 14:32:13.416"/>
</return>
<msg timestamp="20220705 14:32:13.417" level="INFO">${CARD_ID} = 62c44b6de3cbd214f094ddd4</msg>
<status status="PASS" starttime="20220705 14:32:13.416" endtime="20220705 14:32:13.417"/>
</kw>
<kw name="Get A Card" library="Card">
<var>${response}</var>
<arg>${CARD_ID}</arg>
<doc>Gets the card with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 14:32:13.419" level="INFO">${url} = cards/62c44b6de3cbd214f094ddd4</msg>
<status status="PASS" starttime="20220705 14:32:13.419" endtime="20220705 14:32:13.419"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 14:32:13.530" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 14:32:13.419" endtime="20220705 14:32:13.531"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 14:32:13.531" endtime="20220705 14:32:13.531"/>
</return>
<msg timestamp="20220705 14:32:13.531" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 14:32:13.418" endtime="20220705 14:32:13.531"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 14:32:13.531" endtime="20220705 14:32:13.531"/>
</return>
<msg timestamp="20220705 14:32:13.531" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 14:32:13.417" endtime="20220705 14:32:13.531"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_NAME}</var>
<arg>${response}</arg>
<arg>name</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 14:32:13.532" endtime="20220705 14:32:13.532"/>
</return>
<msg timestamp="20220705 14:32:13.533" level="INFO">${CARD_NAME} = RFCard2</msg>
<status status="PASS" starttime="20220705 14:32:13.532" endtime="20220705 14:32:13.533"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${CARD_NAME}</arg>
<arg>RFCard2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220705 14:32:13.533" endtime="20220705 14:32:13.533"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Card</arg>
<arg>${CARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Card" library="Card">
<arg>${CARD_ID}</arg>
<doc>Deletes the card with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 14:32:13.536" level="INFO">${url} = cards/62c44b6de3cbd214f094ddd4</msg>
<status status="PASS" starttime="20220705 14:32:13.535" endtime="20220705 14:32:13.536"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 14:32:13.767" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 14:32:13.536" endtime="20220705 14:32:13.767"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 14:32:13.767" endtime="20220705 14:32:13.767"/>
</return>
<msg timestamp="20220705 14:32:13.767" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 14:32:13.534" endtime="20220705 14:32:13.767"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 14:32:13.767" endtime="20220705 14:32:13.767"/>
</return>
<status status="PASS" starttime="20220705 14:32:13.534" endtime="20220705 14:32:13.768"/>
</kw>
<status status="PASS" starttime="20220705 14:32:13.534" endtime="20220705 14:32:13.768"/>
</kw>
<doc>Verify that a card can be created through API</doc>
<tag>api</tag>
<tag>card.create</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220705 14:32:12.950" endtime="20220705 14:32:13.768"/>
</test>
<test id="s1-s1-s2-t2" name="Verify A Card Can Be Closed" line="24">
<kw name="Create A Card" library="Card">
<var>${response}</var>
<doc>Creates a new card in the given list.
required_args: listId
optional_args: name, desc, pos, idCardSource, idLabels, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>@{optional_args}</arg>
<arg>idList</arg>
<arg>${idList}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 14:32:13.771" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 14:32:13.770" endtime="20220705 14:32:13.771"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 14:32:13.771" endtime="20220705 14:32:13.771"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 14:32:13.772" level="INFO">${url} = cards/</msg>
<status status="PASS" starttime="20220705 14:32:13.771" endtime="20220705 14:32:13.772"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 14:32:14.016" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 14:32:13.772" endtime="20220705 14:32:14.016"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 14:32:14.016" endtime="20220705 14:32:14.016"/>
</return>
<msg timestamp="20220705 14:32:14.016" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 14:32:13.769" endtime="20220705 14:32:14.016"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 14:32:14.016" endtime="20220705 14:32:14.017"/>
</return>
<msg timestamp="20220705 14:32:14.017" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 14:32:13.769" endtime="20220705 14:32:14.017"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 14:32:14.017" endtime="20220705 14:32:14.017"/>
</return>
<msg timestamp="20220705 14:32:14.018" level="INFO">${CARD_ID} = 62c44b6daafbce3022907cf7</msg>
<status status="PASS" starttime="20220705 14:32:14.017" endtime="20220705 14:32:14.018"/>
</kw>
<kw name="Archive A Card" library="Card">
<arg>${CARD_ID}</arg>
<doc>Modifies the card status to closed.</doc>
<kw name="Update A Card" library="Card">
<var>${response}</var>
<arg>${id}</arg>
<arg>closed</arg>
<arg>true</arg>
<arg>status_code=${status_code}</arg>
<doc>Updates the card with the given ID
optional_args: name, desc, closed, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<arg>status_code=${status_code}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 14:32:14.021" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 14:32:14.021" endtime="20220705 14:32:14.021"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 14:32:14.021" endtime="20220705 14:32:14.021"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 14:32:14.022" level="INFO">${url} = cards/62c44b6daafbce3022907cf7</msg>
<status status="PASS" starttime="20220705 14:32:14.021" endtime="20220705 14:32:14.022"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 14:32:14.203" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 14:32:14.022" endtime="20220705 14:32:14.203"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 14:32:14.203" endtime="20220705 14:32:14.203"/>
</return>
<msg timestamp="20220705 14:32:14.203" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 14:32:14.020" endtime="20220705 14:32:14.203"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 14:32:14.203" endtime="20220705 14:32:14.203"/>
</return>
<msg timestamp="20220705 14:32:14.204" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 14:32:14.019" endtime="20220705 14:32:14.204"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 14:32:14.204" endtime="20220705 14:32:14.204"/>
</return>
<status status="PASS" starttime="20220705 14:32:14.018" endtime="20220705 14:32:14.204"/>
</kw>
<kw name="Get A Card" library="Card">
<var>${response}</var>
<arg>${CARD_ID}</arg>
<doc>Gets the card with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 14:32:14.206" level="INFO">${url} = cards/62c44b6daafbce3022907cf7</msg>
<status status="PASS" starttime="20220705 14:32:14.205" endtime="20220705 14:32:14.206"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 14:32:14.328" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 14:32:14.206" endtime="20220705 14:32:14.328"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 14:32:14.329" endtime="20220705 14:32:14.329"/>
</return>
<msg timestamp="20220705 14:32:14.329" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 14:32:14.205" endtime="20220705 14:32:14.329"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 14:32:14.329" endtime="20220705 14:32:14.329"/>
</return>
<msg timestamp="20220705 14:32:14.329" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 14:32:14.204" endtime="20220705 14:32:14.329"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_CLOSED}</var>
<arg>${response}</arg>
<arg>closed</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 14:32:14.330" endtime="20220705 14:32:14.330"/>
</return>
<msg timestamp="20220705 14:32:14.331" level="INFO">${CARD_CLOSED} = True</msg>
<status status="PASS" starttime="20220705 14:32:14.330" endtime="20220705 14:32:14.331"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${CARD_CLOSED}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220705 14:32:14.331" endtime="20220705 14:32:14.332"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Card</arg>
<arg>${CARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Card" library="Card">
<arg>${CARD_ID}</arg>
<doc>Deletes the card with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 14:32:14.334" level="INFO">${url} = cards/62c44b6daafbce3022907cf7</msg>
<status status="PASS" starttime="20220705 14:32:14.333" endtime="20220705 14:32:14.334"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 14:32:14.545" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 14:32:14.334" endtime="20220705 14:32:14.545"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 14:32:14.545" endtime="20220705 14:32:14.545"/>
</return>
<msg timestamp="20220705 14:32:14.545" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 14:32:14.333" endtime="20220705 14:32:14.546"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 14:32:14.546" endtime="20220705 14:32:14.546"/>
</return>
<status status="PASS" starttime="20220705 14:32:14.332" endtime="20220705 14:32:14.546"/>
</kw>
<status status="PASS" starttime="20220705 14:32:14.332" endtime="20220705 14:32:14.546"/>
</kw>
<doc>Verify that a card can be closed through API</doc>
<tag>api</tag>
<tag>card.close</tag>
<tag>regression</tag>
<status status="PASS" starttime="20220705 14:32:13.768" endtime="20220705 14:32:14.546"/>
</test>
<test id="s1-s1-s2-t3" name="Verify A Card Can Be Deleted" line="35">
<kw name="Create A Card" library="Card">
<var>${response}</var>
<doc>Creates a new card in the given list.
required_args: listId
optional_args: name, desc, pos, idCardSource, idLabels, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>@{optional_args}</arg>
<arg>idList</arg>
<arg>${idList}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 14:32:14.551" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 14:32:14.550" endtime="20220705 14:32:14.551"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 14:32:14.551" endtime="20220705 14:32:14.552"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 14:32:14.553" level="INFO">${url} = cards/</msg>
<status status="PASS" starttime="20220705 14:32:14.553" endtime="20220705 14:32:14.553"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 14:32:14.781" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 14:32:14.554" endtime="20220705 14:32:14.781"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 14:32:14.781" endtime="20220705 14:32:14.781"/>
</return>
<msg timestamp="20220705 14:32:14.781" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 14:32:14.549" endtime="20220705 14:32:14.781"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 14:32:14.781" endtime="20220705 14:32:14.781"/>
</return>
<msg timestamp="20220705 14:32:14.782" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 14:32:14.549" endtime="20220705 14:32:14.782"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 14:32:14.782" endtime="20220705 14:32:14.782"/>
</return>
<msg timestamp="20220705 14:32:14.783" level="INFO">${CARD_ID} = 62c44b6ec7694f13aa92f98e</msg>
<status status="PASS" starttime="20220705 14:32:14.782" endtime="20220705 14:32:14.783"/>
</kw>
<kw name="Delete A Card" library="Card">
<var>${response}</var>
<arg>${CARD_ID}</arg>
<doc>Deletes the card with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 14:32:14.785" level="INFO">${url} = cards/62c44b6ec7694f13aa92f98e</msg>
<status status="PASS" starttime="20220705 14:32:14.784" endtime="20220705 14:32:14.785"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 14:32:14.991" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 14:32:14.785" endtime="20220705 14:32:14.991"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 14:32:14.991" endtime="20220705 14:32:14.991"/>
</return>
<msg timestamp="20220705 14:32:14.991" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 14:32:14.784" endtime="20220705 14:32:14.991"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 14:32:14.991" endtime="20220705 14:32:14.991"/>
</return>
<msg timestamp="20220705 14:32:14.992" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 14:32:14.783" endtime="20220705 14:32:14.992"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>delete</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 14:32:14.992" endtime="20220705 14:32:14.994"/>
</kw>
<status status="PASS" starttime="20220705 14:32:14.992" endtime="20220705 14:32:14.995"/>
</kw>
<kw name="Get A Card" library="Card">
<arg>${CARD_ID}</arg>
<arg>status_code=404</arg>
<doc>Gets the card with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 14:32:14.997" level="INFO">${url} = cards/62c44b6ec7694f13aa92f98e</msg>
<status status="PASS" starttime="20220705 14:32:14.997" endtime="20220705 14:32:14.997"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 14:32:15.092" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220705 14:32:14.997" endtime="20220705 14:32:15.092"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 14:32:15.092" endtime="20220705 14:32:15.092"/>
</return>
<msg timestamp="20220705 14:32:15.093" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220705 14:32:14.995" endtime="20220705 14:32:15.093"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 14:32:15.093" endtime="20220705 14:32:15.093"/>
</return>
<status status="PASS" starttime="20220705 14:32:14.995" endtime="20220705 14:32:15.093"/>
</kw>
<doc>Verify that a card can be deleted through API</doc>
<tag>api</tag>
<tag>card.delete</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220705 14:32:14.548" endtime="20220705 14:32:15.093"/>
</test>
<test id="s1-s1-s2-t4" name="Verify A Card Can Be Updated" line="44">
<kw name="Create A Card" library="Card">
<var>${response}</var>
<arg>name</arg>
<arg>RFCard4</arg>
<doc>Creates a new card in the given list.
required_args: listId
optional_args: name, desc, pos, idCardSource, idLabels, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>@{optional_args}</arg>
<arg>idList</arg>
<arg>${idList}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 14:32:15.096" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 14:32:15.096" endtime="20220705 14:32:15.096"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 14:32:15.096" endtime="20220705 14:32:15.097"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 14:32:15.098" level="INFO">${url} = cards/</msg>
<status status="PASS" starttime="20220705 14:32:15.097" endtime="20220705 14:32:15.098"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 14:32:15.585" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 14:32:15.098" endtime="20220705 14:32:15.585"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 14:32:15.585" endtime="20220705 14:32:15.585"/>
</return>
<msg timestamp="20220705 14:32:15.586" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 14:32:15.095" endtime="20220705 14:32:15.586"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 14:32:15.586" endtime="20220705 14:32:15.586"/>
</return>
<msg timestamp="20220705 14:32:15.586" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 14:32:15.095" endtime="20220705 14:32:15.586"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 14:32:15.587" endtime="20220705 14:32:15.587"/>
</return>
<msg timestamp="20220705 14:32:15.588" level="INFO">${CARD_ID} = 62c44b6fe89a6f8f3ffd5926</msg>
<status status="PASS" starttime="20220705 14:32:15.586" endtime="20220705 14:32:15.588"/>
</kw>
<kw name="Update A Card" library="Card">
<var>${response}</var>
<arg>${CARD_ID}</arg>
<arg>name</arg>
<arg>RFCard5</arg>
<arg>desc</arg>
<arg>Description</arg>
<doc>Updates the card with the given ID
optional_args: name, desc, closed, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<arg>status_code=${status_code}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 14:32:15.589" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 14:32:15.589" endtime="20220705 14:32:15.589"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 14:32:15.589" endtime="20220705 14:32:15.590"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 14:32:15.590" level="INFO">${url} = cards/62c44b6fe89a6f8f3ffd5926</msg>
<status status="PASS" starttime="20220705 14:32:15.590" endtime="20220705 14:32:15.590"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 14:32:15.890" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 14:32:15.590" endtime="20220705 14:32:15.890"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 14:32:15.890" endtime="20220705 14:32:15.890"/>
</return>
<msg timestamp="20220705 14:32:15.890" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 14:32:15.588" endtime="20220705 14:32:15.890"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 14:32:15.890" endtime="20220705 14:32:15.890"/>
</return>
<msg timestamp="20220705 14:32:15.891" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 14:32:15.588" endtime="20220705 14:32:15.891"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>card</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 14:32:15.891" endtime="20220705 14:32:15.898"/>
</kw>
<status status="PASS" starttime="20220705 14:32:15.891" endtime="20220705 14:32:15.899"/>
</kw>
<kw name="Get A Card" library="Card">
<var>${response}</var>
<arg>${CARD_ID}</arg>
<doc>Gets the card with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 14:32:15.900" level="INFO">${url} = cards/62c44b6fe89a6f8f3ffd5926</msg>
<status status="PASS" starttime="20220705 14:32:15.900" endtime="20220705 14:32:15.900"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 14:32:16.014" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 14:32:15.900" endtime="20220705 14:32:16.014"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 14:32:16.014" endtime="20220705 14:32:16.014"/>
</return>
<msg timestamp="20220705 14:32:16.014" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 14:32:15.899" endtime="20220705 14:32:16.014"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 14:32:16.015" endtime="20220705 14:32:16.015"/>
</return>
<msg timestamp="20220705 14:32:16.015" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 14:32:15.899" endtime="20220705 14:32:16.015"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_NAME}</var>
<arg>${response}</arg>
<arg>name</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 14:32:16.015" endtime="20220705 14:32:16.015"/>
</return>
<msg timestamp="20220705 14:32:16.016" level="INFO">${CARD_NAME} = RFCard5</msg>
<status status="PASS" starttime="20220705 14:32:16.015" endtime="20220705 14:32:16.016"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_DESC}</var>
<arg>${response}</arg>
<arg>desc</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 14:32:16.017" endtime="20220705 14:32:16.017"/>
</return>
<msg timestamp="20220705 14:32:16.018" level="INFO">${CARD_DESC} = Description</msg>
<status status="PASS" starttime="20220705 14:32:16.017" endtime="20220705 14:32:16.018"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${CARD_NAME}</arg>
<arg>RFCard5</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220705 14:32:16.018" endtime="20220705 14:32:16.018"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${CARD_DESC}</arg>
<arg>Description</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220705 14:32:16.018" endtime="20220705 14:32:16.019"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Card</arg>
<arg>${CARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Card" library="Card">
<arg>${CARD_ID}</arg>
<doc>Deletes the card with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 14:32:16.021" level="INFO">${url} = cards/62c44b6fe89a6f8f3ffd5926</msg>
<status status="PASS" starttime="20220705 14:32:16.020" endtime="20220705 14:32:16.021"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 14:32:16.243" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 14:32:16.021" endtime="20220705 14:32:16.243"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 14:32:16.243" endtime="20220705 14:32:16.243"/>
</return>
<msg timestamp="20220705 14:32:16.244" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 14:32:16.020" endtime="20220705 14:32:16.244"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 14:32:16.244" endtime="20220705 14:32:16.244"/>
</return>
<status status="PASS" starttime="20220705 14:32:16.019" endtime="20220705 14:32:16.244"/>
</kw>
<status status="PASS" starttime="20220705 14:32:16.019" endtime="20220705 14:32:16.244"/>
</kw>
<doc>Verify that a card's name and Description can be updated through API</doc>
<tag>api</tag>
<tag>card.update</tag>
<tag>regression</tag>
<status status="PASS" starttime="20220705 14:32:15.094" endtime="20220705 14:32:16.244"/>
</test>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Teardown Board</arg>
<arg>Delete All Sessions</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Teardown Board">
<doc>Delete the board created for this suite</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 14:32:16.248" level="INFO">${url} = boards/62c44b6c0913145c67525e4d</msg>
<status status="PASS" starttime="20220705 14:32:16.248" endtime="20220705 14:32:16.248"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 14:32:16.672" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 14:32:16.248" endtime="20220705 14:32:16.672"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 14:32:16.672" endtime="20220705 14:32:16.672"/>
</return>
<msg timestamp="20220705 14:32:16.672" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 14:32:16.247" endtime="20220705 14:32:16.672"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 14:32:16.672" endtime="20220705 14:32:16.672"/>
</return>
<status status="PASS" starttime="20220705 14:32:16.247" endtime="20220705 14:32:16.673"/>
</kw>
<status status="PASS" starttime="20220705 14:32:16.246" endtime="20220705 14:32:16.673"/>
</kw>
<status status="PASS" starttime="20220705 14:32:16.246" endtime="20220705 14:32:16.673"/>
</kw>
<kw name="Delete All Sessions" library="request_own_library">
<status status="PASS" starttime="20220705 14:32:16.673" endtime="20220705 14:32:16.674"/>
</kw>
<status status="PASS" starttime="20220705 14:32:16.246" endtime="20220705 14:32:16.674"/>
</kw>
<doc>Example Test with Trello API Cards</doc>
<status status="PASS" starttime="20220705 14:32:12.449" endtime="20220705 14:32:16.675"/>
</suite>
<suite id="s1-s1-s3" name="Trello Api Checklists Tests" source="/trello/api/trello_api_checklists_tests.robot">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Create Trello Session</arg>
<arg>Setup Board, List And Card</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Create Trello Session" library="TrelloAPI">
<doc>Creates a Trello Session</doc>
<kw name="Create Session" library="request_own_library">
<arg>${API_BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<status status="PASS" starttime="20220705 14:32:16.688" endtime="20220705 14:32:16.688"/>
</kw>
<status status="PASS" starttime="20220705 14:32:16.688" endtime="20220705 14:32:16.689"/>
</kw>
<kw name="Setup Board, List And Card">
<doc>Create a board and save its ID and its first list's ID</doc>
<kw name="Create A Board" library="Board">
<var>${BOARD}</var>
<arg>TestBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 14:32:16.690" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 14:32:16.690" endtime="20220705 14:32:16.690"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 14:32:16.690" endtime="20220705 14:32:16.690"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 14:32:16.691" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220705 14:32:16.691" endtime="20220705 14:32:16.691"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 14:32:16.929" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 14:32:16.691" endtime="20220705 14:32:16.929"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 14:32:16.929" endtime="20220705 14:32:16.929"/>
</return>
<msg timestamp="20220705 14:32:16.929" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 14:32:16.689" endtime="20220705 14:32:16.929"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 14:32:16.929" endtime="20220705 14:32:16.929"/>
</return>
<msg timestamp="20220705 14:32:16.930" level="INFO">${BOARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 14:32:16.689" endtime="20220705 14:32:16.930"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_BOARD_ID}</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220705 14:32:16.931" level="INFO">${TEST_SUITE_BOARD_ID} = 62c44b70920c9344016a8f4f</msg>
<status status="PASS" starttime="20220705 14:32:16.930" endtime="20220705 14:32:16.931"/>
</kw>
<kw name="Get Lists On A Board" library="Board">
<var>${LISTS}</var>
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Get all the lists in a board</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>lists_on_board</arg>
<arg>${id}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 14:32:16.932" level="INFO">${url} = boards/62c44b70920c9344016a8f4f/lists/</msg>
<status status="PASS" starttime="20220705 14:32:16.932" endtime="20220705 14:32:16.932"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 14:32:17.033" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 14:32:16.932" endtime="20220705 14:32:17.033"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 14:32:17.033" endtime="20220705 14:32:17.033"/>
</return>
<msg timestamp="20220705 14:32:17.034" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 14:32:16.931" endtime="20220705 14:32:17.034"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 14:32:17.034" endtime="20220705 14:32:17.034"/>
</return>
<msg timestamp="20220705 14:32:17.034" level="INFO">${LISTS} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 14:32:16.931" endtime="20220705 14:32:17.034"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_LIST_ID}</arg>
<arg>${LISTS.json()}[0][id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220705 14:32:17.035" level="INFO">${TEST_SUITE_LIST_ID} = 62c44b70920c9344016a8f56</msg>
<status status="PASS" starttime="20220705 14:32:17.034" endtime="20220705 14:32:17.035"/>
</kw>
<kw name="Create A Card" library="Card">
<var>${CARD}</var>
<arg>name</arg>
<arg>TestCard</arg>
<doc>Creates a new card in the given list.
required_args: listId
optional_args: name, desc, pos, idCardSource, idLabels, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>@{optional_args}</arg>
<arg>idList</arg>
<arg>${idList}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 14:32:17.038" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 14:32:17.037" endtime="20220705 14:32:17.038"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 14:32:17.038" endtime="20220705 14:32:17.038"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 14:32:17.039" level="INFO">${url} = cards/</msg>
<status status="PASS" starttime="20220705 14:32:17.038" endtime="20220705 14:32:17.039"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 14:32:17.311" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 14:32:17.039" endtime="20220705 14:32:17.311"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 14:32:17.311" endtime="20220705 14:32:17.311"/>
</return>
<msg timestamp="20220705 14:32:17.311" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 14:32:17.036" endtime="20220705 14:32:17.311"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 14:32:17.311" endtime="20220705 14:32:17.311"/>
</return>
<msg timestamp="20220705 14:32:17.312" level="INFO">${CARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 14:32:17.036" endtime="20220705 14:32:17.312"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_CARD_ID}</arg>
<arg>${CARD.json()}[id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220705 14:32:17.313" level="INFO">${TEST_SUITE_CARD_ID} = 62c44b71005d282808dfd3cb</msg>
<status status="PASS" starttime="20220705 14:32:17.312" endtime="20220705 14:32:17.313"/>
</kw>
<status status="PASS" starttime="20220705 14:32:16.689" endtime="20220705 14:32:17.313"/>
</kw>
<status status="PASS" starttime="20220705 14:32:16.688" endtime="20220705 14:32:17.313"/>
</kw>
<test id="s1-s1-s3-t1" name="Verify A Checklist Can Be Created" line="14">
<kw name="Create A Checklist" library="Checklist">
<var>${response}</var>
<arg>name</arg>
<arg>TestChecklist</arg>
<arg>idCard=${TEST_SUITE_CARD_ID}</arg>
<doc>Creates a new checklist in the given card.
required_args: idCard
optional_args: name, pos, idChecklistSource
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>@{optional_args}</arg>
<arg>idCard</arg>
<arg>${idCard}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 14:32:17.316" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 14:32:17.315" endtime="20220705 14:32:17.316"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 14:32:17.316" endtime="20220705 14:32:17.317"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 14:32:17.318" level="INFO">${url} = checklists/</msg>
<status status="PASS" starttime="20220705 14:32:17.317" endtime="20220705 14:32:17.318"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 14:32:17.537" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 14:32:17.318" endtime="20220705 14:32:17.537"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 14:32:17.537" endtime="20220705 14:32:17.537"/>
</return>
<msg timestamp="20220705 14:32:17.537" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 14:32:17.315" endtime="20220705 14:32:17.537"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 14:32:17.537" endtime="20220705 14:32:17.537"/>
</return>
<msg timestamp="20220705 14:32:17.538" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 14:32:17.314" endtime="20220705 14:32:17.538"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${checklist_id}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 14:32:17.538" endtime="20220705 14:32:17.538"/>
</return>
<msg timestamp="20220705 14:32:17.539" level="INFO">${checklist_id} = 62c44b712d967388a34301bb</msg>
<status status="PASS" starttime="20220705 14:32:17.538" endtime="20220705 14:32:17.539"/>
</kw>
<kw name="Get A Checklist" library="Checklist">
<var>${response}</var>
<arg>${checklist_id}</arg>
<doc>Gets the checklist with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 14:32:17.541" level="INFO">${url} = checklists/62c44b712d967388a34301bb</msg>
<status status="PASS" starttime="20220705 14:32:17.541" endtime="20220705 14:32:17.541"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 14:32:17.651" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 14:32:17.541" endtime="20220705 14:32:17.651"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 14:32:17.651" endtime="20220705 14:32:17.651"/>
</return>
<msg timestamp="20220705 14:32:17.652" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 14:32:17.540" endtime="20220705 14:32:17.652"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 14:32:17.652" endtime="20220705 14:32:17.652"/>
</return>
<msg timestamp="20220705 14:32:17.652" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 14:32:17.539" endtime="20220705 14:32:17.652"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${checklist_name}</var>
<arg>${response}</arg>
<arg>name</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 14:32:17.653" endtime="20220705 14:32:17.653"/>
</return>
<msg timestamp="20220705 14:32:17.654" level="INFO">${checklist_name} = TestChecklist</msg>
<status status="PASS" starttime="20220705 14:32:17.652" endtime="20220705 14:32:17.654"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${checklist_name}</arg>
<arg>TestChecklist</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220705 14:32:17.654" endtime="20220705 14:32:17.654"/>
</kw>
<kw name="Delete A Checklist" library="Checklist" type="TEARDOWN">
<arg>${checklist_id}</arg>
<doc>Deletes the checklist with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 14:32:17.656" level="INFO">${url} = checklists/62c44b712d967388a34301bb</msg>
<status status="PASS" starttime="20220705 14:32:17.656" endtime="20220705 14:32:17.656"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 14:32:17.836" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 14:32:17.657" endtime="20220705 14:32:17.836"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 14:32:17.837" endtime="20220705 14:32:17.837"/>
</return>
<msg timestamp="20220705 14:32:17.837" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 14:32:17.655" endtime="20220705 14:32:17.837"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 14:32:17.837" endtime="20220705 14:32:17.837"/>
</return>
<status status="PASS" starttime="20220705 14:32:17.655" endtime="20220705 14:32:17.837"/>
</kw>
<doc>Verify that a checklist can be created through API</doc>
<tag>api</tag>
<tag>checklist.create</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220705 14:32:17.313" endtime="20220705 14:32:17.837"/>
</test>
<test id="s1-s1-s3-t2" name="Verify A Checklist Can Be Deleted" line="24">
<kw name="Create A Checklist" library="Checklist">
<var>${response}</var>
<arg>name</arg>
<arg>TestChecklist</arg>
<arg>idCard=${TEST_SUITE_CARD_ID}</arg>
<doc>Creates a new checklist in the given card.
required_args: idCard
optional_args: name, pos, idChecklistSource
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>@{optional_args}</arg>
<arg>idCard</arg>
<arg>${idCard}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 14:32:17.840" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 14:32:17.840" endtime="20220705 14:32:17.840"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 14:32:17.841" endtime="20220705 14:32:17.841"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 14:32:17.842" level="INFO">${url} = checklists/</msg>
<status status="PASS" starttime="20220705 14:32:17.841" endtime="20220705 14:32:17.842"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 14:32:18.010" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 14:32:17.842" endtime="20220705 14:32:18.010"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 14:32:18.010" endtime="20220705 14:32:18.010"/>
</return>
<msg timestamp="20220705 14:32:18.011" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 14:32:17.839" endtime="20220705 14:32:18.011"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 14:32:18.011" endtime="20220705 14:32:18.011"/>
</return>
<msg timestamp="20220705 14:32:18.011" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 14:32:17.839" endtime="20220705 14:32:18.011"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${checklist_id}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 14:32:18.012" endtime="20220705 14:32:18.012"/>
</return>
<msg timestamp="20220705 14:32:18.013" level="INFO">${checklist_id} = 62c44b719cc62429306af72a</msg>
<status status="PASS" starttime="20220705 14:32:18.011" endtime="20220705 14:32:18.013"/>
</kw>
<kw name="Delete A Checklist" library="Checklist">
<var>${response}</var>
<arg>${checklist_id}</arg>
<doc>Deletes the checklist with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 14:32:18.015" level="INFO">${url} = checklists/62c44b719cc62429306af72a</msg>
<status status="PASS" starttime="20220705 14:32:18.014" endtime="20220705 14:32:18.015"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 14:32:18.186" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 14:32:18.015" endtime="20220705 14:32:18.186"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 14:32:18.186" endtime="20220705 14:32:18.186"/>
</return>
<msg timestamp="20220705 14:32:18.186" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 14:32:18.014" endtime="20220705 14:32:18.186"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 14:32:18.186" endtime="20220705 14:32:18.186"/>
</return>
<msg timestamp="20220705 14:32:18.187" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 14:32:18.013" endtime="20220705 14:32:18.187"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>delete</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 14:32:18.187" endtime="20220705 14:32:18.189"/>
</kw>
<status status="PASS" starttime="20220705 14:32:18.187" endtime="20220705 14:32:18.190"/>
</kw>
<kw name="Get A Checklist" library="Checklist">
<arg>${checklist_id}</arg>
<arg>status_code=404</arg>
<doc>Gets the checklist with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 14:32:18.191" level="INFO">${url} = checklists/62c44b719cc62429306af72a</msg>
<status status="PASS" starttime="20220705 14:32:18.191" endtime="20220705 14:32:18.191"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 14:32:18.465" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220705 14:32:18.191" endtime="20220705 14:32:18.465"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 14:32:18.465" endtime="20220705 14:32:18.465"/>
</return>
<msg timestamp="20220705 14:32:18.466" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220705 14:32:18.190" endtime="20220705 14:32:18.466"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 14:32:18.466" endtime="20220705 14:32:18.466"/>
</return>
<status status="PASS" starttime="20220705 14:32:18.190" endtime="20220705 14:32:18.466"/>
</kw>
<doc>Verify that a checklist can be deleted through API</doc>
<tag>api</tag>
<tag>checklist.delete</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220705 14:32:17.838" endtime="20220705 14:32:18.466"/>
</test>
<test id="s1-s1-s3-t3" name="Verify A Checklist Can Be Updated" line="33">
<kw name="Create A Checklist" library="Checklist">
<var>${response}</var>
<arg>name</arg>
<arg>TestChecklist</arg>
<arg>idCard=${TEST_SUITE_CARD_ID}</arg>
<doc>Creates a new checklist in the given card.
required_args: idCard
optional_args: name, pos, idChecklistSource
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>@{optional_args}</arg>
<arg>idCard</arg>
<arg>${idCard}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 14:32:18.474" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 14:32:18.472" endtime="20220705 14:32:18.474"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 14:32:18.475" endtime="20220705 14:32:18.475"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 14:32:18.476" level="INFO">${url} = checklists/</msg>
<status status="PASS" starttime="20220705 14:32:18.475" endtime="20220705 14:32:18.476"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 14:32:18.648" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 14:32:18.476" endtime="20220705 14:32:18.648"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 14:32:18.648" endtime="20220705 14:32:18.648"/>
</return>
<msg timestamp="20220705 14:32:18.648" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 14:32:18.468" endtime="20220705 14:32:18.648"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 14:32:18.648" endtime="20220705 14:32:18.648"/>
</return>
<msg timestamp="20220705 14:32:18.649" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 14:32:18.468" endtime="20220705 14:32:18.649"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${checklist_id}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 14:32:18.649" endtime="20220705 14:32:18.649"/>
</return>
<msg timestamp="20220705 14:32:18.650" level="INFO">${checklist_id} = 62c44b72c10512585ec0d358</msg>
<status status="PASS" starttime="20220705 14:32:18.649" endtime="20220705 14:32:18.650"/>
</kw>
<kw name="Update A Checklist" library="Checklist">
<var>${response}</var>
<arg>${checklist_id}</arg>
<arg>name</arg>
<arg>TestChecklist2</arg>
<doc>Updates the checklist with the given ID
optional_args: name, pos
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<arg>status_code=${status_code}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 14:32:18.652" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 14:32:18.652" endtime="20220705 14:32:18.652"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 14:32:18.652" endtime="20220705 14:32:18.652"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 14:32:18.653" level="INFO">${url} = checklists/62c44b72c10512585ec0d358</msg>
<status status="PASS" starttime="20220705 14:32:18.652" endtime="20220705 14:32:18.653"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 14:32:18.810" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 14:32:18.653" endtime="20220705 14:32:18.810"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 14:32:18.810" endtime="20220705 14:32:18.810"/>
</return>
<msg timestamp="20220705 14:32:18.811" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 14:32:18.651" endtime="20220705 14:32:18.811"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 14:32:18.811" endtime="20220705 14:32:18.811"/>
</return>
<msg timestamp="20220705 14:32:18.811" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 14:32:18.650" endtime="20220705 14:32:18.811"/>
</kw>
<kw name="Get A Checklist" library="Checklist">
<var>${response}</var>
<arg>${checklist_id}</arg>
<doc>Gets the checklist with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 14:32:18.813" level="INFO">${url} = checklists/62c44b72c10512585ec0d358</msg>
<status status="PASS" starttime="20220705 14:32:18.812" endtime="20220705 14:32:18.813"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 14:32:18.942" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 14:32:18.813" endtime="20220705 14:32:18.942"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 14:32:18.943" endtime="20220705 14:32:18.943"/>
</return>
<msg timestamp="20220705 14:32:18.943" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 14:32:18.812" endtime="20220705 14:32:18.943"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 14:32:18.943" endtime="20220705 14:32:18.943"/>
</return>
<msg timestamp="20220705 14:32:18.943" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 14:32:18.811" endtime="20220705 14:32:18.943"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${checklist_name}</var>
<arg>${response}</arg>
<arg>name</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 14:32:18.944" endtime="20220705 14:32:18.944"/>
</return>
<msg timestamp="20220705 14:32:18.945" level="INFO">${checklist_name} = TestChecklist2</msg>
<status status="PASS" starttime="20220705 14:32:18.943" endtime="20220705 14:32:18.945"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${checklist_name}</arg>
<arg>TestChecklist2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220705 14:32:18.945" endtime="20220705 14:32:18.945"/>
</kw>
<kw name="Delete A Checklist" library="Checklist" type="TEARDOWN">
<arg>${checklist_id}</arg>
<doc>Deletes the checklist with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 14:32:18.962" level="INFO">${url} = checklists/62c44b72c10512585ec0d358</msg>
<status status="PASS" starttime="20220705 14:32:18.961" endtime="20220705 14:32:18.962"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 14:32:19.156" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 14:32:18.962" endtime="20220705 14:32:19.156"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 14:32:19.156" endtime="20220705 14:32:19.156"/>
</return>
<msg timestamp="20220705 14:32:19.157" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 14:32:18.961" endtime="20220705 14:32:19.157"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 14:32:19.157" endtime="20220705 14:32:19.157"/>
</return>
<status status="PASS" starttime="20220705 14:32:18.946" endtime="20220705 14:32:19.157"/>
</kw>
<doc>Verify that a checklist's name can be updated through API</doc>
<tag>api</tag>
<tag>checklist.update</tag>
<tag>regression</tag>
<status status="PASS" starttime="20220705 14:32:18.467" endtime="20220705 14:32:19.157"/>
</test>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Teardown Board</arg>
<arg>Delete All Sessions</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Teardown Board">
<doc>Delete the board created for this suite</doc>
<kw name="Delete A Board" library="Board">
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 14:32:19.160" level="INFO">${url} = boards/62c44b70920c9344016a8f4f</msg>
<status status="PASS" starttime="20220705 14:32:19.160" endtime="20220705 14:32:19.160"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 14:32:19.625" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 14:32:19.160" endtime="20220705 14:32:19.625"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 14:32:19.625" endtime="20220705 14:32:19.625"/>
</return>
<msg timestamp="20220705 14:32:19.625" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 14:32:19.159" endtime="20220705 14:32:19.625"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 14:32:19.625" endtime="20220705 14:32:19.626"/>
</return>
<status status="PASS" starttime="20220705 14:32:19.159" endtime="20220705 14:32:19.626"/>
</kw>
<status status="PASS" starttime="20220705 14:32:19.159" endtime="20220705 14:32:19.626"/>
</kw>
<kw name="Delete All Sessions" library="request_own_library">
<status status="PASS" starttime="20220705 14:32:19.626" endtime="20220705 14:32:19.627"/>
</kw>
<status status="PASS" starttime="20220705 14:32:19.158" endtime="20220705 14:32:19.627"/>
</kw>
<doc>Example Test with Trello API Checklists</doc>
<status status="PASS" starttime="20220705 14:32:16.676" endtime="20220705 14:32:19.627"/>
</suite>
<suite id="s1-s1-s4" name="Trello Api Labels Tests" source="/trello/api/trello_api_labels_tests.robot">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Create Trello Session</arg>
<arg>Setup Board And List</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Create Trello Session" library="TrelloAPI">
<doc>Creates a Trello Session</doc>
<kw name="Create Session" library="request_own_library">
<arg>${API_BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<status status="PASS" starttime="20220705 14:32:19.641" endtime="20220705 14:32:19.642"/>
</kw>
<status status="PASS" starttime="20220705 14:32:19.641" endtime="20220705 14:32:19.642"/>
</kw>
<kw name="Setup Board And List">
<doc>Create a board and save its ID and its first list's ID</doc>
<kw name="Create A Board" library="Board">
<var>${BOARD}</var>
<arg>TestBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 14:32:19.643" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 14:32:19.643" endtime="20220705 14:32:19.643"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 14:32:19.644" endtime="20220705 14:32:19.644"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 14:32:19.645" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220705 14:32:19.644" endtime="20220705 14:32:19.645"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 14:32:19.886" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 14:32:19.645" endtime="20220705 14:32:19.886"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 14:32:19.886" endtime="20220705 14:32:19.886"/>
</return>
<msg timestamp="20220705 14:32:19.886" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 14:32:19.643" endtime="20220705 14:32:19.886"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 14:32:19.886" endtime="20220705 14:32:19.886"/>
</return>
<msg timestamp="20220705 14:32:19.886" level="INFO">${BOARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 14:32:19.642" endtime="20220705 14:32:19.886"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_BOARD_ID}</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220705 14:32:19.888" level="INFO">${TEST_SUITE_BOARD_ID} = 62c44b73de8c0432f954270a</msg>
<status status="PASS" starttime="20220705 14:32:19.887" endtime="20220705 14:32:19.888"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${LISTS}</var>
<arg>boards/${TEST_SUITE_BOARD_ID}/lists</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 14:32:20.000" level="INFO">${LISTS} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 14:32:19.888" endtime="20220705 14:32:20.000"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_LIST_ID}</arg>
<arg>${LISTS.json()}[0][id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220705 14:32:20.001" level="INFO">${TEST_SUITE_LIST_ID} = 62c44b73de8c0432f9542711</msg>
<status status="PASS" starttime="20220705 14:32:20.000" endtime="20220705 14:32:20.001"/>
</kw>
<status status="PASS" starttime="20220705 14:32:19.642" endtime="20220705 14:32:20.001"/>
</kw>
<status status="PASS" starttime="20220705 14:32:19.640" endtime="20220705 14:32:20.001"/>
</kw>
<test id="s1-s1-s4-t1" name="Create and get label on board" line="14">
<kw name="Create A Label" library="Label">
<var>${response}</var>
<arg>name</arg>
<arg>label2</arg>
<arg>color</arg>
<arg>yellow</arg>
<doc>Creates a new label in the given board.
required_args: idBoard
optional_args: name, color
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>idBoard</arg>
<arg>${idBoard}</arg>
<arg>@{optional_args}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 14:32:20.004" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 14:32:20.004" endtime="20220705 14:32:20.004"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 14:32:20.004" endtime="20220705 14:32:20.004"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 14:32:20.005" level="INFO">${url} = labels/</msg>
<status status="PASS" starttime="20220705 14:32:20.004" endtime="20220705 14:32:20.005"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 14:32:20.160" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 14:32:20.005" endtime="20220705 14:32:20.160"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 14:32:20.160" endtime="20220705 14:32:20.160"/>
</return>
<msg timestamp="20220705 14:32:20.160" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 14:32:20.003" endtime="20220705 14:32:20.161"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 14:32:20.161" endtime="20220705 14:32:20.161"/>
</return>
<msg timestamp="20220705 14:32:20.161" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 14:32:20.002" endtime="20220705 14:32:20.161"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>label</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 14:32:20.162" endtime="20220705 14:32:20.164"/>
</kw>
<status status="PASS" starttime="20220705 14:32:20.161" endtime="20220705 14:32:20.164"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${LABEL_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 14:32:20.164" endtime="20220705 14:32:20.164"/>
</return>
<msg timestamp="20220705 14:32:20.165" level="INFO">${LABEL_ID} = 62c44b74eed7132b1e163fa0</msg>
<status status="PASS" starttime="20220705 14:32:20.164" endtime="20220705 14:32:20.165"/>
</kw>
<kw name="Get A Label" library="Label">
<var>${response}</var>
<arg>${LABEL_ID}</arg>
<doc>Gets the label with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 14:32:20.167" level="INFO">${url} = labels/62c44b74eed7132b1e163fa0</msg>
<status status="PASS" starttime="20220705 14:32:20.166" endtime="20220705 14:32:20.167"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 14:32:20.279" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 14:32:20.167" endtime="20220705 14:32:20.279"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 14:32:20.280" endtime="20220705 14:32:20.280"/>
</return>
<msg timestamp="20220705 14:32:20.280" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 14:32:20.166" endtime="20220705 14:32:20.280"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 14:32:20.280" endtime="20220705 14:32:20.280"/>
</return>
<msg timestamp="20220705 14:32:20.283" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 14:32:20.165" endtime="20220705 14:32:20.283"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${LABEL_COLOR}</var>
<arg>${response}</arg>
<arg>color</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 14:32:20.283" endtime="20220705 14:32:20.283"/>
</return>
<msg timestamp="20220705 14:32:20.284" level="INFO">${LABEL_COLOR} = yellow</msg>
<status status="PASS" starttime="20220705 14:32:20.283" endtime="20220705 14:32:20.284"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${LABEL_NAME}</var>
<arg>${response}</arg>
<arg>name</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 14:32:20.285" endtime="20220705 14:32:20.285"/>
</return>
<msg timestamp="20220705 14:32:20.285" level="INFO">${LABEL_NAME} = label2</msg>
<status status="PASS" starttime="20220705 14:32:20.284" endtime="20220705 14:32:20.285"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${LABEL_COLOR}</arg>
<arg>yellow</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220705 14:32:20.286" endtime="20220705 14:32:20.286"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${LABEL_NAME}</arg>
<arg>label2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220705 14:32:20.286" endtime="20220705 14:32:20.287"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Label</arg>
<arg>${LABEL_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Label" library="Label">
<arg>${LABEL_ID}</arg>
<doc>Deletes the label with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 14:32:20.289" level="INFO">${url} = labels/62c44b74eed7132b1e163fa0</msg>
<status status="PASS" starttime="20220705 14:32:20.289" endtime="20220705 14:32:20.289"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 14:32:20.459" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 14:32:20.289" endtime="20220705 14:32:20.459"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 14:32:20.459" endtime="20220705 14:32:20.459"/>
</return>
<msg timestamp="20220705 14:32:20.460" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 14:32:20.288" endtime="20220705 14:32:20.460"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 14:32:20.460" endtime="20220705 14:32:20.460"/>
</return>
<status status="PASS" starttime="20220705 14:32:20.288" endtime="20220705 14:32:20.460"/>
</kw>
<status status="PASS" starttime="20220705 14:32:20.287" endtime="20220705 14:32:20.460"/>
</kw>
<doc>Verify that a label can be created through API</doc>
<tag>api</tag>
<tag>label.create</tag>
<tag>label.get</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220705 14:32:20.002" endtime="20220705 14:32:20.460"/>
</test>
<test id="s1-s1-s4-t2" name="Update label on board" line="28">
<kw name="Create A Label" library="Label">
<var>${response}</var>
<arg>name</arg>
<arg>label2</arg>
<arg>color</arg>
<arg>yellow</arg>
<doc>Creates a new label in the given board.
required_args: idBoard
optional_args: name, color
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>idBoard</arg>
<arg>${idBoard}</arg>
<arg>@{optional_args}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 14:32:20.463" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 14:32:20.463" endtime="20220705 14:32:20.463"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 14:32:20.463" endtime="20220705 14:32:20.463"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 14:32:20.464" level="INFO">${url} = labels/</msg>
<status status="PASS" starttime="20220705 14:32:20.463" endtime="20220705 14:32:20.464"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 14:32:20.641" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 14:32:20.464" endtime="20220705 14:32:20.642"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 14:32:20.642" endtime="20220705 14:32:20.642"/>
</return>
<msg timestamp="20220705 14:32:20.642" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 14:32:20.462" endtime="20220705 14:32:20.642"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 14:32:20.642" endtime="20220705 14:32:20.642"/>
</return>
<msg timestamp="20220705 14:32:20.642" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 14:32:20.461" endtime="20220705 14:32:20.642"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>label</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 14:32:20.643" endtime="20220705 14:32:20.646"/>
</kw>
<status status="PASS" starttime="20220705 14:32:20.643" endtime="20220705 14:32:20.646"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${LABEL_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 14:32:20.646" endtime="20220705 14:32:20.646"/>
</return>
<msg timestamp="20220705 14:32:20.647" level="INFO">${LABEL_ID} = 62c44b74a441e32bec5c2aad</msg>
<status status="PASS" starttime="20220705 14:32:20.646" endtime="20220705 14:32:20.647"/>
</kw>
<kw name="Update A Label" library="Label">
<var>${new_response}</var>
<arg>${LABEL_ID}</arg>
<arg>name</arg>
<arg>label3</arg>
<arg>color</arg>
<arg>orange</arg>
<doc>Updates the label with the given ID
optional_args: name, color
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 14:32:20.649" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 14:32:20.648" endtime="20220705 14:32:20.649"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 14:32:20.649" endtime="20220705 14:32:20.649"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 14:32:20.650" level="INFO">${url} = labels/62c44b74a441e32bec5c2aad</msg>
<status status="PASS" starttime="20220705 14:32:20.649" endtime="20220705 14:32:20.650"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 14:32:20.822" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 14:32:20.650" endtime="20220705 14:32:20.822"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 14:32:20.822" endtime="20220705 14:32:20.822"/>
</return>
<msg timestamp="20220705 14:32:20.823" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 14:32:20.648" endtime="20220705 14:32:20.823"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 14:32:20.823" endtime="20220705 14:32:20.823"/>
</return>
<msg timestamp="20220705 14:32:20.823" level="INFO">${new_response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 14:32:20.647" endtime="20220705 14:32:20.823"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${NEW_LABEL_COLOR}</var>
<arg>${new_response}</arg>
<arg>color</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 14:32:20.824" endtime="20220705 14:32:20.824"/>
</return>
<msg timestamp="20220705 14:32:20.824" level="INFO">${NEW_LABEL_COLOR} = orange</msg>
<status status="PASS" starttime="20220705 14:32:20.823" endtime="20220705 14:32:20.824"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${NEW_LABEL_NAME}</var>
<arg>${new_response}</arg>
<arg>name</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 14:32:20.825" endtime="20220705 14:32:20.825"/>
</return>
<msg timestamp="20220705 14:32:20.826" level="INFO">${NEW_LABEL_NAME} = label3</msg>
<status status="PASS" starttime="20220705 14:32:20.825" endtime="20220705 14:32:20.826"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${NEW_LABEL_COLOR}</arg>
<arg>orange</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220705 14:32:20.826" endtime="20220705 14:32:20.826"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${NEW_LABEL_NAME}</arg>
<arg>label3</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220705 14:32:20.826" endtime="20220705 14:32:20.827"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Label</arg>
<arg>${LABEL_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Label" library="Label">
<arg>${LABEL_ID}</arg>
<doc>Deletes the label with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 14:32:20.829" level="INFO">${url} = labels/62c44b74a441e32bec5c2aad</msg>
<status status="PASS" starttime="20220705 14:32:20.828" endtime="20220705 14:32:20.829"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 14:32:20.999" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 14:32:20.829" endtime="20220705 14:32:20.999"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 14:32:20.999" endtime="20220705 14:32:20.999"/>
</return>
<msg timestamp="20220705 14:32:21.000" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 14:32:20.828" endtime="20220705 14:32:21.000"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 14:32:21.000" endtime="20220705 14:32:21.000"/>
</return>
<status status="PASS" starttime="20220705 14:32:20.827" endtime="20220705 14:32:21.000"/>
</kw>
<status status="PASS" starttime="20220705 14:32:20.827" endtime="20220705 14:32:21.000"/>
</kw>
<doc>Verify that a label's name and color can be updated through API</doc>
<tag>api</tag>
<tag>label.update</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220705 14:32:20.460" endtime="20220705 14:32:21.000"/>
</test>
<test id="s1-s1-s4-t3" name="Delete label on board" line="41">
<kw name="Create A Label" library="Label">
<var>${response}</var>
<arg>name</arg>
<arg>label2</arg>
<arg>color</arg>
<arg>yellow</arg>
<doc>Creates a new label in the given board.
required_args: idBoard
optional_args: name, color
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>idBoard</arg>
<arg>${idBoard}</arg>
<arg>@{optional_args}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 14:32:21.003" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 14:32:21.003" endtime="20220705 14:32:21.003"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 14:32:21.003" endtime="20220705 14:32:21.003"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 14:32:21.004" level="INFO">${url} = labels/</msg>
<status status="PASS" starttime="20220705 14:32:21.003" endtime="20220705 14:32:21.004"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 14:32:21.362" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 14:32:21.004" endtime="20220705 14:32:21.363"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 14:32:21.363" endtime="20220705 14:32:21.363"/>
</return>
<msg timestamp="20220705 14:32:21.363" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 14:32:21.002" endtime="20220705 14:32:21.363"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 14:32:21.363" endtime="20220705 14:32:21.363"/>
</return>
<msg timestamp="20220705 14:32:21.363" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 14:32:21.002" endtime="20220705 14:32:21.363"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${LABEL_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 14:32:21.364" endtime="20220705 14:32:21.364"/>
</return>
<msg timestamp="20220705 14:32:21.365" level="INFO">${LABEL_ID} = 62c44b752bc36484799be390</msg>
<status status="PASS" starttime="20220705 14:32:21.364" endtime="20220705 14:32:21.365"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Label</arg>
<arg>${LABEL_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Label" library="Label">
<arg>${LABEL_ID}</arg>
<doc>Deletes the label with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 14:32:21.367" level="INFO">${url} = labels/62c44b752bc36484799be390</msg>
<status status="PASS" starttime="20220705 14:32:21.366" endtime="20220705 14:32:21.367"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 14:32:21.539" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 14:32:21.367" endtime="20220705 14:32:21.539"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 14:32:21.539" endtime="20220705 14:32:21.539"/>
</return>
<msg timestamp="20220705 14:32:21.539" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 14:32:21.366" endtime="20220705 14:32:21.539"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 14:32:21.539" endtime="20220705 14:32:21.539"/>
</return>
<status status="PASS" starttime="20220705 14:32:21.365" endtime="20220705 14:32:21.539"/>
</kw>
<status status="PASS" starttime="20220705 14:32:21.365" endtime="20220705 14:32:21.540"/>
</kw>
<kw name="Get A Label" library="Label">
<arg>${LABEL_ID}</arg>
<arg>status_code=404</arg>
<doc>Gets the label with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 14:32:21.541" level="INFO">${url} = labels/62c44b752bc36484799be390</msg>
<status status="PASS" starttime="20220705 14:32:21.541" endtime="20220705 14:32:21.541"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 14:32:21.633" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220705 14:32:21.541" endtime="20220705 14:32:21.633"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 14:32:21.633" endtime="20220705 14:32:21.633"/>
</return>
<msg timestamp="20220705 14:32:21.634" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220705 14:32:21.540" endtime="20220705 14:32:21.634"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 14:32:21.634" endtime="20220705 14:32:21.634"/>
</return>
<status status="PASS" starttime="20220705 14:32:21.540" endtime="20220705 14:32:21.634"/>
</kw>
<doc>Verify that a label can be deleted through API</doc>
<tag>api</tag>
<tag>label.delete</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220705 14:32:21.001" endtime="20220705 14:32:21.634"/>
</test>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Teardown Board</arg>
<arg>Delete All Sessions</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Teardown Board">
<doc>Delete the board created for this session.</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 14:32:21.637" level="INFO">${url} = boards/62c44b73de8c0432f954270a</msg>
<status status="PASS" starttime="20220705 14:32:21.637" endtime="20220705 14:32:21.638"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 14:32:22.084" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 14:32:21.638" endtime="20220705 14:32:22.084"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 14:32:22.084" endtime="20220705 14:32:22.084"/>
</return>
<msg timestamp="20220705 14:32:22.084" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 14:32:21.636" endtime="20220705 14:32:22.085"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 14:32:22.085" endtime="20220705 14:32:22.085"/>
</return>
<status status="PASS" starttime="20220705 14:32:21.636" endtime="20220705 14:32:22.085"/>
</kw>
<status status="PASS" starttime="20220705 14:32:21.636" endtime="20220705 14:32:22.085"/>
</kw>
<status status="PASS" starttime="20220705 14:32:21.635" endtime="20220705 14:32:22.085"/>
</kw>
<kw name="Delete All Sessions" library="request_own_library">
<status status="PASS" starttime="20220705 14:32:22.085" endtime="20220705 14:32:22.086"/>
</kw>
<status status="PASS" starttime="20220705 14:32:21.635" endtime="20220705 14:32:22.087"/>
</kw>
<doc>Example Test with Trello API Cards</doc>
<status status="PASS" starttime="20220705 14:32:19.630" endtime="20220705 14:32:22.087"/>
</suite>
<suite id="s1-s1-s5" name="Trello Api Lists Tests" source="/trello/api/trello_api_lists_tests.robot">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Create Trello Session</arg>
<arg>Setup Board</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Create Trello Session" library="TrelloAPI">
<doc>Creates a Trello Session</doc>
<kw name="Create Session" library="request_own_library">
<arg>${API_BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<status status="PASS" starttime="20220705 14:32:22.100" endtime="20220705 14:32:22.101"/>
</kw>
<status status="PASS" starttime="20220705 14:32:22.100" endtime="20220705 14:32:22.101"/>
</kw>
<kw name="Setup Board">
<doc>Create a board and save it's id for the suite</doc>
<kw name="Create A Board" library="Board">
<var>${BOARD}</var>
<arg>TestBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 14:32:22.102" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 14:32:22.102" endtime="20220705 14:32:22.102"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 14:32:22.103" endtime="20220705 14:32:22.103"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 14:32:22.104" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220705 14:32:22.104" endtime="20220705 14:32:22.104"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 14:32:22.356" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 14:32:22.104" endtime="20220705 14:32:22.356"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 14:32:22.356" endtime="20220705 14:32:22.356"/>
</return>
<msg timestamp="20220705 14:32:22.356" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 14:32:22.101" endtime="20220705 14:32:22.356"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 14:32:22.356" endtime="20220705 14:32:22.357"/>
</return>
<msg timestamp="20220705 14:32:22.357" level="INFO">${BOARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 14:32:22.101" endtime="20220705 14:32:22.357"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Set Suite Variable</arg>
<arg>\${TEST_SUITE_BOARD_ID}</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_BOARD_ID}</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220705 14:32:22.358" level="INFO">${TEST_SUITE_BOARD_ID} = 62c44b7677e3773ec89827f1</msg>
<status status="PASS" starttime="20220705 14:32:22.357" endtime="20220705 14:32:22.358"/>
</kw>
<status status="PASS" starttime="20220705 14:32:22.357" endtime="20220705 14:32:22.358"/>
</kw>
<status status="PASS" starttime="20220705 14:32:22.101" endtime="20220705 14:32:22.359"/>
</kw>
<status status="PASS" starttime="20220705 14:32:22.099" endtime="20220705 14:32:22.359"/>
</kw>
<test id="s1-s1-s5-t1" name="CREATE a list" line="13">
<kw name="Create A List" library="List">
<var>${response}</var>
<arg>NewList</arg>
<doc>Creates a new List
board id
name the list will have
optional_args: idListSource, pos, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>list</arg>
<arg>name</arg>
<arg>${name}</arg>
<arg>idBoard</arg>
<arg>${idBoard}</arg>
<arg>@{optional_args}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 14:32:22.361" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 14:32:22.361" endtime="20220705 14:32:22.361"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 14:32:22.361" endtime="20220705 14:32:22.361"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 14:32:22.362" level="INFO">${url} = lists/</msg>
<status status="PASS" starttime="20220705 14:32:22.362" endtime="20220705 14:32:22.362"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 14:32:22.515" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 14:32:22.363" endtime="20220705 14:32:22.515"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 14:32:22.516" endtime="20220705 14:32:22.516"/>
</return>
<msg timestamp="20220705 14:32:22.516" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 14:32:22.360" endtime="20220705 14:32:22.516"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 14:32:22.516" endtime="20220705 14:32:22.516"/>
</return>
<msg timestamp="20220705 14:32:22.516" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 14:32:22.360" endtime="20220705 14:32:22.516"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>list</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 14:32:22.517" endtime="20220705 14:32:22.519"/>
</kw>
<status status="PASS" starttime="20220705 14:32:22.516" endtime="20220705 14:32:22.520"/>
</kw>
<doc>Verify that a list can be created through API</doc>
<tag>api</tag>
<tag>list.create</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220705 14:32:22.359" endtime="20220705 14:32:22.520"/>
</test>
<test id="s1-s1-s5-t2" name="UPDATE a list" line="19">
<kw name="Create A List" library="List">
<var>${response}</var>
<arg>NewList</arg>
<doc>Creates a new List
board id
name the list will have
optional_args: idListSource, pos, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>list</arg>
<arg>name</arg>
<arg>${name}</arg>
<arg>idBoard</arg>
<arg>${idBoard}</arg>
<arg>@{optional_args}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 14:32:22.523" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 14:32:22.522" endtime="20220705 14:32:22.523"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 14:32:22.523" endtime="20220705 14:32:22.523"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 14:32:22.524" level="INFO">${url} = lists/</msg>
<status status="PASS" starttime="20220705 14:32:22.523" endtime="20220705 14:32:22.524"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 14:32:22.701" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 14:32:22.524" endtime="20220705 14:32:22.701"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 14:32:22.701" endtime="20220705 14:32:22.701"/>
</return>
<msg timestamp="20220705 14:32:22.702" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 14:32:22.522" endtime="20220705 14:32:22.702"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 14:32:22.702" endtime="20220705 14:32:22.702"/>
</return>
<msg timestamp="20220705 14:32:22.702" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 14:32:22.521" endtime="20220705 14:32:22.702"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>list</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 14:32:22.703" endtime="20220705 14:32:22.705"/>
</kw>
<status status="PASS" starttime="20220705 14:32:22.702" endtime="20220705 14:32:22.705"/>
</kw>
<kw name="Update A List" library="List">
<arg>${response.json()}[id]</arg>
<arg>name</arg>
<arg>NewName</arg>
<doc>Updates the board with the given ID
optional_args: name, idListSource, pos, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>list</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 14:32:22.707" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 14:32:22.707" endtime="20220705 14:32:22.707"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 14:32:22.707" endtime="20220705 14:32:22.707"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 14:32:22.708" level="INFO">${url} = lists/62c44b762b961d65bc60ade2</msg>
<status status="PASS" starttime="20220705 14:32:22.708" endtime="20220705 14:32:22.708"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 14:32:22.948" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 14:32:22.708" endtime="20220705 14:32:22.948"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 14:32:22.948" endtime="20220705 14:32:22.948"/>
</return>
<msg timestamp="20220705 14:32:22.949" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 14:32:22.706" endtime="20220705 14:32:22.949"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 14:32:22.949" endtime="20220705 14:32:22.949"/>
</return>
<status status="PASS" starttime="20220705 14:32:22.705" endtime="20220705 14:32:22.949"/>
</kw>
<kw name="Get A List" library="List">
<var>${new_response}</var>
<arg>${response.json()}[id]</arg>
<doc>Gets the List with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>list</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 14:32:22.951" level="INFO">${url} = lists/62c44b762b961d65bc60ade2</msg>
<status status="PASS" starttime="20220705 14:32:22.951" endtime="20220705 14:32:22.951"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 14:32:23.050" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 14:32:22.951" endtime="20220705 14:32:23.050"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 14:32:23.050" endtime="20220705 14:32:23.050"/>
</return>
<msg timestamp="20220705 14:32:23.050" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 14:32:22.950" endtime="20220705 14:32:23.050"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 14:32:23.051" endtime="20220705 14:32:23.051"/>
</return>
<msg timestamp="20220705 14:32:23.051" level="INFO">${new_response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 14:32:22.949" endtime="20220705 14:32:23.051"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${new_response}</arg>
<arg>list</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 14:32:23.052" endtime="20220705 14:32:23.053"/>
</kw>
<status status="PASS" starttime="20220705 14:32:23.051" endtime="20220705 14:32:23.054"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${new_response.json()}[name]</arg>
<arg>NewName</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220705 14:32:23.054" endtime="20220705 14:32:23.054"/>
</kw>
<doc>Verify that a lists name can be updated through API</doc>
<tag>api</tag>
<tag>list.update</tag>
<tag>regression</tag>
<status status="PASS" starttime="20220705 14:32:22.520" endtime="20220705 14:32:23.055"/>
</test>
<test id="s1-s1-s5-t3" name="ARCHIVE A list" line="29">
<kw name="Create A List" library="List">
<var>${response}</var>
<arg>NewList</arg>
<doc>Creates a new List
board id
name the list will have
optional_args: idListSource, pos, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>list</arg>
<arg>name</arg>
<arg>${name}</arg>
<arg>idBoard</arg>
<arg>${idBoard}</arg>
<arg>@{optional_args}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 14:32:23.057" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 14:32:23.057" endtime="20220705 14:32:23.058"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 14:32:23.058" endtime="20220705 14:32:23.059"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 14:32:23.062" level="INFO">${url} = lists/</msg>
<status status="PASS" starttime="20220705 14:32:23.060" endtime="20220705 14:32:23.062"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 14:32:23.217" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 14:32:23.062" endtime="20220705 14:32:23.217"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 14:32:23.217" endtime="20220705 14:32:23.217"/>
</return>
<msg timestamp="20220705 14:32:23.217" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 14:32:23.057" endtime="20220705 14:32:23.217"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 14:32:23.217" endtime="20220705 14:32:23.217"/>
</return>
<msg timestamp="20220705 14:32:23.218" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 14:32:23.056" endtime="20220705 14:32:23.218"/>
</kw>
<kw name="Archive A List" library="List">
<arg>${response.json()}[id]</arg>
<doc>Deletes the list with the given ID</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>archive_list</arg>
<arg>${id}</arg>
<arg>value</arg>
<arg>true</arg>
<arg>status_code=${status_code}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 14:32:23.220" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 14:32:23.220" endtime="20220705 14:32:23.220"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 14:32:23.220" endtime="20220705 14:32:23.221"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 14:32:23.221" level="INFO">${url} = lists/62c44b7716f3745a121f242d/closed</msg>
<status status="PASS" starttime="20220705 14:32:23.221" endtime="20220705 14:32:23.221"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 14:32:23.370" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 14:32:23.221" endtime="20220705 14:32:23.370"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 14:32:23.370" endtime="20220705 14:32:23.370"/>
</return>
<msg timestamp="20220705 14:32:23.370" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 14:32:23.219" endtime="20220705 14:32:23.370"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 14:32:23.370" endtime="20220705 14:32:23.370"/>
</return>
<status status="PASS" starttime="20220705 14:32:23.218" endtime="20220705 14:32:23.370"/>
</kw>
<kw name="Get A List" library="List">
<var>${new_response}</var>
<arg>${response.json()}[id]</arg>
<doc>Gets the List with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>list</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 14:32:23.373" level="INFO">${url} = lists/62c44b7716f3745a121f242d</msg>
<status status="PASS" starttime="20220705 14:32:23.372" endtime="20220705 14:32:23.373"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 14:32:23.476" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 14:32:23.373" endtime="20220705 14:32:23.476"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 14:32:23.476" endtime="20220705 14:32:23.476"/>
</return>
<msg timestamp="20220705 14:32:23.477" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 14:32:23.372" endtime="20220705 14:32:23.477"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 14:32:23.477" endtime="20220705 14:32:23.477"/>
</return>
<msg timestamp="20220705 14:32:23.477" level="INFO">${new_response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 14:32:23.371" endtime="20220705 14:32:23.477"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${new_response.json()}[closed]</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220705 14:32:23.477" endtime="20220705 14:32:23.478"/>
</kw>
<doc>Verify that a list can be archived through API</doc>
<tag>api</tag>
<tag>list.archive</tag>
<tag>regression</tag>
<status status="PASS" starttime="20220705 14:32:23.055" endtime="20220705 14:32:23.478"/>
</test>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Teardown Board</arg>
<arg>Delete All Sessions</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Teardown Board">
<doc>Delete the board created for this suite.</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 14:32:23.482" level="INFO">${url} = boards/62c44b7677e3773ec89827f1</msg>
<status status="PASS" starttime="20220705 14:32:23.482" endtime="20220705 14:32:23.482"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 14:32:23.931" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 14:32:23.482" endtime="20220705 14:32:23.931"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 14:32:23.931" endtime="20220705 14:32:23.931"/>
</return>
<msg timestamp="20220705 14:32:23.932" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 14:32:23.481" endtime="20220705 14:32:23.932"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 14:32:23.932" endtime="20220705 14:32:23.932"/>
</return>
<status status="PASS" starttime="20220705 14:32:23.480" endtime="20220705 14:32:23.932"/>
</kw>
<status status="PASS" starttime="20220705 14:32:23.480" endtime="20220705 14:32:23.932"/>
</kw>
<status status="PASS" starttime="20220705 14:32:23.480" endtime="20220705 14:32:23.932"/>
</kw>
<kw name="Delete All Sessions" library="request_own_library">
<status status="PASS" starttime="20220705 14:32:23.933" endtime="20220705 14:32:23.934"/>
</kw>
<status status="PASS" starttime="20220705 14:32:23.479" endtime="20220705 14:32:23.934"/>
</kw>
<doc>Example Test with Trello API lists</doc>
<status status="PASS" starttime="20220705 14:32:22.089" endtime="20220705 14:32:23.934"/>
</suite>
<status status="PASS" starttime="20220705 14:32:06.782" endtime="20220705 14:32:23.937"/>
</suite>
<status status="PASS" starttime="20220705 14:32:06.756" endtime="20220705 14:32:23.941"/>
</suite>
<statistics>
<total>
<stat pass="18" fail="0" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="18" fail="0" skip="0">api</stat>
<stat pass="1" fail="0" skip="0">board.create</stat>
<stat pass="1" fail="0" skip="0">board.delete</stat>
<stat pass="1" fail="0" skip="0">board.get</stat>
<stat pass="2" fail="0" skip="0">board.update</stat>
<stat pass="1" fail="0" skip="0">card.close</stat>
<stat pass="1" fail="0" skip="0">card.create</stat>
<stat pass="1" fail="0" skip="0">card.delete</stat>
<stat pass="1" fail="0" skip="0">card.update</stat>
<stat pass="1" fail="0" skip="0">checklist.create</stat>
<stat pass="1" fail="0" skip="0">checklist.delete</stat>
<stat pass="1" fail="0" skip="0">checklist.update</stat>
<stat pass="1" fail="0" skip="0">label.create</stat>
<stat pass="1" fail="0" skip="0">label.delete</stat>
<stat pass="1" fail="0" skip="0">label.get</stat>
<stat pass="1" fail="0" skip="0">label.update</stat>
<stat pass="1" fail="0" skip="0">list.archive</stat>
<stat pass="1" fail="0" skip="0">list.create</stat>
<stat pass="1" fail="0" skip="0">list.update</stat>
<stat pass="5" fail="0" skip="0">regression</stat>
<stat pass="13" fail="0" skip="0">smoke</stat>
</tag>
<suite>
<stat pass="18" fail="0" skip="0" id="s1" name="Trello">Trello</stat>
<stat pass="18" fail="0" skip="0" id="s1-s1" name="Api">Trello.Api</stat>
<stat pass="5" fail="0" skip="0" id="s1-s1-s1" name="Trello Api Boards Tests">Trello.Api.Trello Api Boards Tests</stat>
<stat pass="4" fail="0" skip="0" id="s1-s1-s2" name="Trello Api Cards Tests">Trello.Api.Trello Api Cards Tests</stat>
<stat pass="3" fail="0" skip="0" id="s1-s1-s3" name="Trello Api Checklists Tests">Trello.Api.Trello Api Checklists Tests</stat>
<stat pass="3" fail="0" skip="0" id="s1-s1-s4" name="Trello Api Labels Tests">Trello.Api.Trello Api Labels Tests</stat>
<stat pass="3" fail="0" skip="0" id="s1-s1-s5" name="Trello Api Lists Tests">Trello.Api.Trello Api Lists Tests</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
