<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 5.0.1 (Python 3.10.5 on linux)" generated="20220705 07:22:00.638" rpa="false" schemaversion="3">
<suite id="s1" name="Trello" source="/trello">
<suite id="s1-s1" name="Api" source="/trello/api">
<suite id="s1-s1-s1" name="Trello Api Boards Tests" source="/trello/api/trello_api_boards_tests.robot">
<kw name="Create Trello Session" library="TrelloAPI" type="SETUP">
<doc>Creates a Trello Session</doc>
<kw name="Create Session" library="request_own_library">
<arg>${API_BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<status status="PASS" starttime="20220705 07:22:00.765" endtime="20220705 07:22:00.766"/>
</kw>
<status status="PASS" starttime="20220705 07:22:00.764" endtime="20220705 07:22:00.766"/>
</kw>
<test id="s1-s1-s1-t1" name="CREATE a board" line="9">
<kw name="Create A Board" library="Board">
<var>${response}</var>
<arg>NewBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 07:22:00.768" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 07:22:00.768" endtime="20220705 07:22:00.768"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 07:22:00.768" endtime="20220705 07:22:00.768"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 07:22:00.769" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220705 07:22:00.768" endtime="20220705 07:22:00.769"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 07:22:01.249" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 07:22:00.769" endtime="20220705 07:22:01.249"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 07:22:01.249" endtime="20220705 07:22:01.249"/>
</return>
<msg timestamp="20220705 07:22:01.249" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 07:22:00.767" endtime="20220705 07:22:01.249"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 07:22:01.249" endtime="20220705 07:22:01.249"/>
</return>
<msg timestamp="20220705 07:22:01.250" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 07:22:00.767" endtime="20220705 07:22:01.250"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>board</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 07:22:01.250" endtime="20220705 07:22:01.255"/>
</kw>
<status status="PASS" starttime="20220705 07:22:01.250" endtime="20220705 07:22:01.255"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${response.json()}[id]</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${response.json()}[id]</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 07:22:01.257" level="INFO">${url} = boards/62c3e6989ed6a9100b6e5f17</msg>
<status status="PASS" starttime="20220705 07:22:01.257" endtime="20220705 07:22:01.257"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 07:22:01.598" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 07:22:01.257" endtime="20220705 07:22:01.598"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 07:22:01.598" endtime="20220705 07:22:01.598"/>
</return>
<msg timestamp="20220705 07:22:01.598" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 07:22:01.256" endtime="20220705 07:22:01.598"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 07:22:01.598" endtime="20220705 07:22:01.598"/>
</return>
<status status="PASS" starttime="20220705 07:22:01.256" endtime="20220705 07:22:01.599"/>
</kw>
<status status="PASS" starttime="20220705 07:22:01.255" endtime="20220705 07:22:01.599"/>
</kw>
<doc>Verify that a board can be create through API</doc>
<tag>api</tag>
<tag>board.create</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220705 07:22:00.766" endtime="20220705 07:22:01.599"/>
</test>
<test id="s1-s1-s1-t2" name="UPDATE a Board's name" line="16">
<kw name="Create A Board" library="Board">
<var>${response}</var>
<arg>NewBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 07:22:01.601" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 07:22:01.601" endtime="20220705 07:22:01.601"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 07:22:01.602" endtime="20220705 07:22:01.602"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 07:22:01.602" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220705 07:22:01.602" endtime="20220705 07:22:01.603"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 07:22:01.854" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 07:22:01.603" endtime="20220705 07:22:01.854"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 07:22:01.854" endtime="20220705 07:22:01.854"/>
</return>
<msg timestamp="20220705 07:22:01.855" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 07:22:01.601" endtime="20220705 07:22:01.855"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 07:22:01.855" endtime="20220705 07:22:01.855"/>
</return>
<msg timestamp="20220705 07:22:01.855" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 07:22:01.600" endtime="20220705 07:22:01.855"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>board</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 07:22:01.856" endtime="20220705 07:22:01.859"/>
</kw>
<status status="PASS" starttime="20220705 07:22:01.855" endtime="20220705 07:22:01.859"/>
</kw>
<kw name="Update A Board" library="Board">
<arg>${response.json()}[id]</arg>
<arg>name</arg>
<arg>NewName</arg>
<doc>Updates the board with the given ID
optional_args: name, desc, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 07:22:01.861" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 07:22:01.861" endtime="20220705 07:22:01.861"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 07:22:01.861" endtime="20220705 07:22:01.861"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 07:22:01.862" level="INFO">${url} = boards/62c3e699b428772bf59b737c</msg>
<status status="PASS" starttime="20220705 07:22:01.861" endtime="20220705 07:22:01.862"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 07:22:01.976" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 07:22:01.862" endtime="20220705 07:22:01.976"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 07:22:01.976" endtime="20220705 07:22:01.976"/>
</return>
<msg timestamp="20220705 07:22:01.976" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 07:22:01.860" endtime="20220705 07:22:01.976"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 07:22:01.976" endtime="20220705 07:22:01.976"/>
</return>
<status status="PASS" starttime="20220705 07:22:01.859" endtime="20220705 07:22:01.976"/>
</kw>
<kw name="Get A Board" library="Board">
<var>${new_response}</var>
<arg>${response.json()}[id]</arg>
<doc>Gets the Board with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 07:22:01.978" level="INFO">${url} = boards/62c3e699b428772bf59b737c</msg>
<status status="PASS" starttime="20220705 07:22:01.978" endtime="20220705 07:22:01.978"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 07:22:02.055" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 07:22:01.978" endtime="20220705 07:22:02.055"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 07:22:02.055" endtime="20220705 07:22:02.055"/>
</return>
<msg timestamp="20220705 07:22:02.055" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 07:22:01.977" endtime="20220705 07:22:02.055"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 07:22:02.055" endtime="20220705 07:22:02.055"/>
</return>
<msg timestamp="20220705 07:22:02.056" level="INFO">${new_response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 07:22:01.976" endtime="20220705 07:22:02.056"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${new_response}</arg>
<arg>board</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 07:22:02.056" endtime="20220705 07:22:02.060"/>
</kw>
<status status="PASS" starttime="20220705 07:22:02.056" endtime="20220705 07:22:02.061"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${new_response.json()}[name]</arg>
<arg>NewName</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220705 07:22:02.061" endtime="20220705 07:22:02.061"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${response.json()}[id]</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${response.json()}[id]</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 07:22:02.064" level="INFO">${url} = boards/62c3e699b428772bf59b737c</msg>
<status status="PASS" starttime="20220705 07:22:02.063" endtime="20220705 07:22:02.064"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 07:22:02.472" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 07:22:02.064" endtime="20220705 07:22:02.472"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 07:22:02.472" endtime="20220705 07:22:02.472"/>
</return>
<msg timestamp="20220705 07:22:02.473" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 07:22:02.063" endtime="20220705 07:22:02.473"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 07:22:02.473" endtime="20220705 07:22:02.473"/>
</return>
<status status="PASS" starttime="20220705 07:22:02.062" endtime="20220705 07:22:02.473"/>
</kw>
<status status="PASS" starttime="20220705 07:22:02.062" endtime="20220705 07:22:02.473"/>
</kw>
<doc>Verify that a board's name can be updated through API</doc>
<tag>api</tag>
<tag>board.update</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220705 07:22:01.599" endtime="20220705 07:22:02.473"/>
</test>
<test id="s1-s1-s1-t3" name="DELETE A Board" line="27">
<kw name="Create A Board" library="Board">
<var>${response}</var>
<arg>NewBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 07:22:02.475" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 07:22:02.475" endtime="20220705 07:22:02.475"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 07:22:02.475" endtime="20220705 07:22:02.475"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 07:22:02.476" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220705 07:22:02.476" endtime="20220705 07:22:02.476"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 07:22:02.699" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 07:22:02.476" endtime="20220705 07:22:02.699"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 07:22:02.699" endtime="20220705 07:22:02.699"/>
</return>
<msg timestamp="20220705 07:22:02.700" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 07:22:02.474" endtime="20220705 07:22:02.700"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 07:22:02.700" endtime="20220705 07:22:02.700"/>
</return>
<msg timestamp="20220705 07:22:02.700" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 07:22:02.474" endtime="20220705 07:22:02.700"/>
</kw>
<kw name="Delete A Board" library="Board">
<arg>${response.json()}[id]</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 07:22:02.702" level="INFO">${url} = boards/62c3e69a4625dc5e5cfc5795</msg>
<status status="PASS" starttime="20220705 07:22:02.701" endtime="20220705 07:22:02.702"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 07:22:03.138" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 07:22:02.702" endtime="20220705 07:22:03.139"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 07:22:03.139" endtime="20220705 07:22:03.139"/>
</return>
<msg timestamp="20220705 07:22:03.139" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 07:22:02.701" endtime="20220705 07:22:03.139"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 07:22:03.139" endtime="20220705 07:22:03.139"/>
</return>
<status status="PASS" starttime="20220705 07:22:02.700" endtime="20220705 07:22:03.139"/>
</kw>
<kw name="Get A Board" library="Board">
<arg>${response.json()}[id]</arg>
<arg>status_code=404</arg>
<doc>Gets the Board with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 07:22:03.141" level="INFO">${url} = boards/62c3e69a4625dc5e5cfc5795</msg>
<status status="PASS" starttime="20220705 07:22:03.141" endtime="20220705 07:22:03.141"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 07:22:03.213" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220705 07:22:03.141" endtime="20220705 07:22:03.213"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 07:22:03.213" endtime="20220705 07:22:03.213"/>
</return>
<msg timestamp="20220705 07:22:03.213" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220705 07:22:03.140" endtime="20220705 07:22:03.213"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 07:22:03.213" endtime="20220705 07:22:03.213"/>
</return>
<status status="PASS" starttime="20220705 07:22:03.139" endtime="20220705 07:22:03.213"/>
</kw>
<doc>Verify that a board can be deleted through API</doc>
<tag>api</tag>
<tag>board.delete</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220705 07:22:02.473" endtime="20220705 07:22:03.214"/>
</test>
<test id="s1-s1-s1-t4" name="GET Information of A Board" line="34">
<kw name="Create A Board" library="Board">
<var>${response}</var>
<arg>BoardTest</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 07:22:03.216" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 07:22:03.216" endtime="20220705 07:22:03.216"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 07:22:03.216" endtime="20220705 07:22:03.216"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 07:22:03.217" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220705 07:22:03.216" endtime="20220705 07:22:03.217"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 07:22:03.418" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 07:22:03.217" endtime="20220705 07:22:03.418"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 07:22:03.418" endtime="20220705 07:22:03.418"/>
</return>
<msg timestamp="20220705 07:22:03.419" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 07:22:03.215" endtime="20220705 07:22:03.419"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 07:22:03.419" endtime="20220705 07:22:03.419"/>
</return>
<msg timestamp="20220705 07:22:03.419" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 07:22:03.215" endtime="20220705 07:22:03.419"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>board</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 07:22:03.420" endtime="20220705 07:22:03.424"/>
</kw>
<status status="PASS" starttime="20220705 07:22:03.419" endtime="20220705 07:22:03.424"/>
</kw>
<kw name="Get A Board" library="Board">
<var>${response2}</var>
<arg>${response.json()}[id]</arg>
<doc>Gets the Board with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 07:22:03.426" level="INFO">${url} = boards/62c3e69b3ace3714e228e516</msg>
<status status="PASS" starttime="20220705 07:22:03.425" endtime="20220705 07:22:03.426"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 07:22:03.513" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 07:22:03.426" endtime="20220705 07:22:03.513"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 07:22:03.514" endtime="20220705 07:22:03.514"/>
</return>
<msg timestamp="20220705 07:22:03.514" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 07:22:03.425" endtime="20220705 07:22:03.514"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 07:22:03.514" endtime="20220705 07:22:03.514"/>
</return>
<msg timestamp="20220705 07:22:03.514" level="INFO">${response2} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 07:22:03.424" endtime="20220705 07:22:03.514"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response2}</arg>
<arg>board</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 07:22:03.515" endtime="20220705 07:22:03.518"/>
</kw>
<status status="PASS" starttime="20220705 07:22:03.514" endtime="20220705 07:22:03.519"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${response2.json()}[name]</arg>
<arg>BoardTest</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220705 07:22:03.519" endtime="20220705 07:22:03.519"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${response.json()}[id]</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${response.json()}[id]</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 07:22:03.521" level="INFO">${url} = boards/62c3e69b3ace3714e228e516</msg>
<status status="PASS" starttime="20220705 07:22:03.521" endtime="20220705 07:22:03.521"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 07:22:03.882" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 07:22:03.522" endtime="20220705 07:22:03.882"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 07:22:03.882" endtime="20220705 07:22:03.882"/>
</return>
<msg timestamp="20220705 07:22:03.882" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 07:22:03.521" endtime="20220705 07:22:03.883"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 07:22:03.883" endtime="20220705 07:22:03.883"/>
</return>
<status status="PASS" starttime="20220705 07:22:03.520" endtime="20220705 07:22:03.883"/>
</kw>
<status status="PASS" starttime="20220705 07:22:03.520" endtime="20220705 07:22:03.883"/>
</kw>
<doc>Verify that a board's information can be accesed through API</doc>
<tag>api</tag>
<tag>board.get</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220705 07:22:03.214" endtime="20220705 07:22:03.883"/>
</test>
<test id="s1-s1-s1-t5" name="UPDATE a Board's description" line="45">
<kw name="Create A Board" library="Board">
<var>${response}</var>
<arg>NewBoardForTest</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 07:22:03.885" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 07:22:03.885" endtime="20220705 07:22:03.885"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 07:22:03.886" endtime="20220705 07:22:03.886"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 07:22:03.886" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220705 07:22:03.886" endtime="20220705 07:22:03.886"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 07:22:04.109" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 07:22:03.887" endtime="20220705 07:22:04.109"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 07:22:04.109" endtime="20220705 07:22:04.109"/>
</return>
<msg timestamp="20220705 07:22:04.110" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 07:22:03.885" endtime="20220705 07:22:04.110"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 07:22:04.110" endtime="20220705 07:22:04.110"/>
</return>
<msg timestamp="20220705 07:22:04.110" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 07:22:03.884" endtime="20220705 07:22:04.110"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>board</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 07:22:04.110" endtime="20220705 07:22:04.115"/>
</kw>
<status status="PASS" starttime="20220705 07:22:04.110" endtime="20220705 07:22:04.115"/>
</kw>
<kw name="Update A Board" library="Board">
<arg>${response.json()}[id]</arg>
<arg>desc</arg>
<arg>sampleDescription</arg>
<doc>Updates the board with the given ID
optional_args: name, desc, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 07:22:04.117" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 07:22:04.116" endtime="20220705 07:22:04.117"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 07:22:04.117" endtime="20220705 07:22:04.117"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 07:22:04.117" level="INFO">${url} = boards/62c3e69bf905b90fe2237866</msg>
<status status="PASS" starttime="20220705 07:22:04.117" endtime="20220705 07:22:04.117"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 07:22:04.237" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 07:22:04.117" endtime="20220705 07:22:04.237"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 07:22:04.237" endtime="20220705 07:22:04.237"/>
</return>
<msg timestamp="20220705 07:22:04.237" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 07:22:04.116" endtime="20220705 07:22:04.237"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 07:22:04.237" endtime="20220705 07:22:04.237"/>
</return>
<status status="PASS" starttime="20220705 07:22:04.115" endtime="20220705 07:22:04.237"/>
</kw>
<kw name="Get A Board" library="Board">
<var>${new_response}</var>
<arg>${response.json()}[id]</arg>
<doc>Gets the Board with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 07:22:04.239" level="INFO">${url} = boards/62c3e69bf905b90fe2237866</msg>
<status status="PASS" starttime="20220705 07:22:04.239" endtime="20220705 07:22:04.239"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 07:22:04.330" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 07:22:04.239" endtime="20220705 07:22:04.331"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 07:22:04.331" endtime="20220705 07:22:04.331"/>
</return>
<msg timestamp="20220705 07:22:04.331" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 07:22:04.238" endtime="20220705 07:22:04.331"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 07:22:04.331" endtime="20220705 07:22:04.331"/>
</return>
<msg timestamp="20220705 07:22:04.331" level="INFO">${new_response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 07:22:04.237" endtime="20220705 07:22:04.331"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${new_response.json()}[desc]</arg>
<arg>sampleDescription</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220705 07:22:04.331" endtime="20220705 07:22:04.332"/>
</kw>
<kw name="Update A Board" library="Board">
<arg>${response.json()}[id]</arg>
<arg>desc</arg>
<arg>updatedDescription</arg>
<doc>Updates the board with the given ID
optional_args: name, desc, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 07:22:04.334" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 07:22:04.334" endtime="20220705 07:22:04.334"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 07:22:04.334" endtime="20220705 07:22:04.334"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 07:22:04.335" level="INFO">${url} = boards/62c3e69bf905b90fe2237866</msg>
<status status="PASS" starttime="20220705 07:22:04.334" endtime="20220705 07:22:04.335"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 07:22:04.462" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 07:22:04.335" endtime="20220705 07:22:04.463"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 07:22:04.463" endtime="20220705 07:22:04.463"/>
</return>
<msg timestamp="20220705 07:22:04.463" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 07:22:04.333" endtime="20220705 07:22:04.463"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 07:22:04.463" endtime="20220705 07:22:04.463"/>
</return>
<status status="PASS" starttime="20220705 07:22:04.332" endtime="20220705 07:22:04.463"/>
</kw>
<kw name="Get A Board" library="Board">
<var>${new_response2}</var>
<arg>${response.json()}[id]</arg>
<doc>Gets the Board with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 07:22:04.465" level="INFO">${url} = boards/62c3e69bf905b90fe2237866</msg>
<status status="PASS" starttime="20220705 07:22:04.465" endtime="20220705 07:22:04.465"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 07:22:04.543" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 07:22:04.465" endtime="20220705 07:22:04.543"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 07:22:04.544" endtime="20220705 07:22:04.544"/>
</return>
<msg timestamp="20220705 07:22:04.544" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 07:22:04.464" endtime="20220705 07:22:04.544"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 07:22:04.544" endtime="20220705 07:22:04.544"/>
</return>
<msg timestamp="20220705 07:22:04.544" level="INFO">${new_response2} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 07:22:04.463" endtime="20220705 07:22:04.544"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${new_response2.json()}[desc]</arg>
<arg>updatedDescription</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220705 07:22:04.544" endtime="20220705 07:22:04.545"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${response.json()}[id]</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${response.json()}[id]</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 07:22:04.547" level="INFO">${url} = boards/62c3e69bf905b90fe2237866</msg>
<status status="PASS" starttime="20220705 07:22:04.547" endtime="20220705 07:22:04.547"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 07:22:04.920" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 07:22:04.547" endtime="20220705 07:22:04.920"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 07:22:04.920" endtime="20220705 07:22:04.920"/>
</return>
<msg timestamp="20220705 07:22:04.920" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 07:22:04.546" endtime="20220705 07:22:04.920"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 07:22:04.920" endtime="20220705 07:22:04.920"/>
</return>
<status status="PASS" starttime="20220705 07:22:04.546" endtime="20220705 07:22:04.921"/>
</kw>
<status status="PASS" starttime="20220705 07:22:04.545" endtime="20220705 07:22:04.921"/>
</kw>
<doc>Verify that a board's description can be updated through API</doc>
<tag>api</tag>
<tag>board.update</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220705 07:22:03.883" endtime="20220705 07:22:04.921"/>
</test>
<kw name="Delete All Sessions" library="request_own_library" type="TEARDOWN">
<status status="PASS" starttime="20220705 07:22:04.922" endtime="20220705 07:22:04.922"/>
</kw>
<doc>Example Test with Trello API Boards</doc>
<status status="PASS" starttime="20220705 07:22:00.659" endtime="20220705 07:22:04.923"/>
</suite>
<suite id="s1-s1-s2" name="Trello Api Cards Tests" source="/trello/api/trello_api_cards_tests.robot">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Create Trello Session</arg>
<arg>Setup Board And List</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Create Trello Session" library="TrelloAPI">
<doc>Creates a Trello Session</doc>
<kw name="Create Session" library="request_own_library">
<arg>${API_BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<status status="PASS" starttime="20220705 07:22:04.933" endtime="20220705 07:22:04.934"/>
</kw>
<status status="PASS" starttime="20220705 07:22:04.933" endtime="20220705 07:22:04.934"/>
</kw>
<kw name="Setup Board And List">
<doc>Create a board and save its ID and its first list's ID</doc>
<kw name="Create A Board" library="Board">
<var>${BOARD}</var>
<arg>TestBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 07:22:04.935" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 07:22:04.935" endtime="20220705 07:22:04.935"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 07:22:04.935" endtime="20220705 07:22:04.935"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 07:22:04.936" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220705 07:22:04.935" endtime="20220705 07:22:04.936"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 07:22:05.221" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 07:22:04.936" endtime="20220705 07:22:05.221"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 07:22:05.221" endtime="20220705 07:22:05.221"/>
</return>
<msg timestamp="20220705 07:22:05.221" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 07:22:04.934" endtime="20220705 07:22:05.221"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 07:22:05.221" endtime="20220705 07:22:05.221"/>
</return>
<msg timestamp="20220705 07:22:05.221" level="INFO">${BOARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 07:22:04.934" endtime="20220705 07:22:05.221"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_BOARD_ID}</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220705 07:22:05.222" level="INFO">${TEST_SUITE_BOARD_ID} = 62c3e69d8d3aa34572b776aa</msg>
<status status="PASS" starttime="20220705 07:22:05.222" endtime="20220705 07:22:05.222"/>
</kw>
<kw name="Get Lists On A Board" library="Board">
<var>${LISTS}</var>
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Get all the lists in a board</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>lists_on_board</arg>
<arg>${id}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 07:22:05.224" level="INFO">${url} = boards/62c3e69d8d3aa34572b776aa/lists/</msg>
<status status="PASS" starttime="20220705 07:22:05.223" endtime="20220705 07:22:05.224"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 07:22:05.309" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 07:22:05.224" endtime="20220705 07:22:05.309"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 07:22:05.309" endtime="20220705 07:22:05.309"/>
</return>
<msg timestamp="20220705 07:22:05.309" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 07:22:05.223" endtime="20220705 07:22:05.309"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 07:22:05.309" endtime="20220705 07:22:05.309"/>
</return>
<msg timestamp="20220705 07:22:05.310" level="INFO">${LISTS} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 07:22:05.223" endtime="20220705 07:22:05.310"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_LIST_ID}</arg>
<arg>${LISTS.json()}[0][id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220705 07:22:05.311" level="INFO">${TEST_SUITE_LIST_ID} = 62c3e69d8d3aa34572b776b1</msg>
<status status="PASS" starttime="20220705 07:22:05.310" endtime="20220705 07:22:05.311"/>
</kw>
<status status="PASS" starttime="20220705 07:22:04.934" endtime="20220705 07:22:05.311"/>
</kw>
<status status="PASS" starttime="20220705 07:22:04.933" endtime="20220705 07:22:05.311"/>
</kw>
<test id="s1-s1-s2-t1" name="Verify A Card Can Be Created" line="13">
<kw name="Create A Card" library="Card">
<var>${response}</var>
<arg>name</arg>
<arg>RFCard2</arg>
<doc>Creates a new card in the given list.
required_args: listId
optional_args: name, desc, pos, idCardSource, idLabels, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>@{optional_args}</arg>
<arg>idList</arg>
<arg>${idList}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 07:22:05.313" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 07:22:05.313" endtime="20220705 07:22:05.313"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 07:22:05.313" endtime="20220705 07:22:05.313"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 07:22:05.314" level="INFO">${url} = cards/</msg>
<status status="PASS" starttime="20220705 07:22:05.314" endtime="20220705 07:22:05.314"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 07:22:05.503" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 07:22:05.314" endtime="20220705 07:22:05.503"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 07:22:05.504" endtime="20220705 07:22:05.504"/>
</return>
<msg timestamp="20220705 07:22:05.504" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 07:22:05.312" endtime="20220705 07:22:05.504"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 07:22:05.504" endtime="20220705 07:22:05.504"/>
</return>
<msg timestamp="20220705 07:22:05.504" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 07:22:05.312" endtime="20220705 07:22:05.504"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>card</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 07:22:05.505" endtime="20220705 07:22:05.510"/>
</kw>
<status status="PASS" starttime="20220705 07:22:05.504" endtime="20220705 07:22:05.510"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 07:22:05.511" endtime="20220705 07:22:05.511"/>
</return>
<msg timestamp="20220705 07:22:05.512" level="INFO">${CARD_ID} = 62c3e69dc609e574c5213854</msg>
<status status="PASS" starttime="20220705 07:22:05.510" endtime="20220705 07:22:05.512"/>
</kw>
<kw name="Get A Card" library="Card">
<var>${response}</var>
<arg>${CARD_ID}</arg>
<doc>Gets the card with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 07:22:05.513" level="INFO">${url} = cards/62c3e69dc609e574c5213854</msg>
<status status="PASS" starttime="20220705 07:22:05.513" endtime="20220705 07:22:05.513"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 07:22:05.596" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 07:22:05.513" endtime="20220705 07:22:05.596"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 07:22:05.596" endtime="20220705 07:22:05.596"/>
</return>
<msg timestamp="20220705 07:22:05.596" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 07:22:05.512" endtime="20220705 07:22:05.596"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 07:22:05.596" endtime="20220705 07:22:05.596"/>
</return>
<msg timestamp="20220705 07:22:05.596" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 07:22:05.512" endtime="20220705 07:22:05.596"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_NAME}</var>
<arg>${response}</arg>
<arg>name</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 07:22:05.597" endtime="20220705 07:22:05.597"/>
</return>
<msg timestamp="20220705 07:22:05.598" level="INFO">${CARD_NAME} = RFCard2</msg>
<status status="PASS" starttime="20220705 07:22:05.597" endtime="20220705 07:22:05.598"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${CARD_NAME}</arg>
<arg>RFCard2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220705 07:22:05.598" endtime="20220705 07:22:05.598"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Card</arg>
<arg>${CARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Card" library="Card">
<arg>${CARD_ID}</arg>
<doc>Deletes the card with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 07:22:05.600" level="INFO">${url} = cards/62c3e69dc609e574c5213854</msg>
<status status="PASS" starttime="20220705 07:22:05.600" endtime="20220705 07:22:05.600"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 07:22:05.812" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 07:22:05.600" endtime="20220705 07:22:05.812"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 07:22:05.812" endtime="20220705 07:22:05.812"/>
</return>
<msg timestamp="20220705 07:22:05.813" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 07:22:05.599" endtime="20220705 07:22:05.813"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 07:22:05.813" endtime="20220705 07:22:05.813"/>
</return>
<status status="PASS" starttime="20220705 07:22:05.599" endtime="20220705 07:22:05.813"/>
</kw>
<status status="PASS" starttime="20220705 07:22:05.598" endtime="20220705 07:22:05.813"/>
</kw>
<doc>Verify that a card can be created through API</doc>
<tag>api</tag>
<tag>card.create</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220705 07:22:05.311" endtime="20220705 07:22:05.813"/>
</test>
<test id="s1-s1-s2-t2" name="Verify A Card Can Be Closed" line="24">
<kw name="Create A Card" library="Card">
<var>${response}</var>
<doc>Creates a new card in the given list.
required_args: listId
optional_args: name, desc, pos, idCardSource, idLabels, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>@{optional_args}</arg>
<arg>idList</arg>
<arg>${idList}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 07:22:05.816" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 07:22:05.816" endtime="20220705 07:22:05.816"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 07:22:05.816" endtime="20220705 07:22:05.816"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 07:22:05.817" level="INFO">${url} = cards/</msg>
<status status="PASS" starttime="20220705 07:22:05.817" endtime="20220705 07:22:05.817"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 07:22:06.007" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 07:22:05.817" endtime="20220705 07:22:06.007"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 07:22:06.007" endtime="20220705 07:22:06.007"/>
</return>
<msg timestamp="20220705 07:22:06.007" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 07:22:05.815" endtime="20220705 07:22:06.007"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 07:22:06.007" endtime="20220705 07:22:06.007"/>
</return>
<msg timestamp="20220705 07:22:06.007" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 07:22:05.815" endtime="20220705 07:22:06.007"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 07:22:06.008" endtime="20220705 07:22:06.008"/>
</return>
<msg timestamp="20220705 07:22:06.009" level="INFO">${CARD_ID} = 62c3e69dbe84de86b524d4db</msg>
<status status="PASS" starttime="20220705 07:22:06.008" endtime="20220705 07:22:06.009"/>
</kw>
<kw name="Archive A Card" library="Card">
<arg>${CARD_ID}</arg>
<doc>Modifies the card status to closed.</doc>
<kw name="Update A Card" library="Card">
<var>${response}</var>
<arg>${id}</arg>
<arg>closed</arg>
<arg>true</arg>
<arg>status_code=${status_code}</arg>
<doc>Updates the card with the given ID
optional_args: name, desc, closed, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<arg>status_code=${status_code}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 07:22:06.011" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 07:22:06.011" endtime="20220705 07:22:06.011"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 07:22:06.011" endtime="20220705 07:22:06.011"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 07:22:06.012" level="INFO">${url} = cards/62c3e69dbe84de86b524d4db</msg>
<status status="PASS" starttime="20220705 07:22:06.012" endtime="20220705 07:22:06.012"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 07:22:06.195" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 07:22:06.012" endtime="20220705 07:22:06.195"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 07:22:06.195" endtime="20220705 07:22:06.195"/>
</return>
<msg timestamp="20220705 07:22:06.196" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 07:22:06.010" endtime="20220705 07:22:06.196"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 07:22:06.196" endtime="20220705 07:22:06.196"/>
</return>
<msg timestamp="20220705 07:22:06.196" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 07:22:06.009" endtime="20220705 07:22:06.196"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 07:22:06.196" endtime="20220705 07:22:06.196"/>
</return>
<status status="PASS" starttime="20220705 07:22:06.009" endtime="20220705 07:22:06.196"/>
</kw>
<kw name="Get A Card" library="Card">
<var>${response}</var>
<arg>${CARD_ID}</arg>
<doc>Gets the card with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 07:22:06.198" level="INFO">${url} = cards/62c3e69dbe84de86b524d4db</msg>
<status status="PASS" starttime="20220705 07:22:06.197" endtime="20220705 07:22:06.198"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 07:22:06.292" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 07:22:06.198" endtime="20220705 07:22:06.292"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 07:22:06.292" endtime="20220705 07:22:06.292"/>
</return>
<msg timestamp="20220705 07:22:06.292" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 07:22:06.197" endtime="20220705 07:22:06.292"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 07:22:06.292" endtime="20220705 07:22:06.292"/>
</return>
<msg timestamp="20220705 07:22:06.292" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 07:22:06.196" endtime="20220705 07:22:06.292"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_CLOSED}</var>
<arg>${response}</arg>
<arg>closed</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 07:22:06.293" endtime="20220705 07:22:06.293"/>
</return>
<msg timestamp="20220705 07:22:06.294" level="INFO">${CARD_CLOSED} = True</msg>
<status status="PASS" starttime="20220705 07:22:06.293" endtime="20220705 07:22:06.294"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${CARD_CLOSED}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220705 07:22:06.294" endtime="20220705 07:22:06.294"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Card</arg>
<arg>${CARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Card" library="Card">
<arg>${CARD_ID}</arg>
<doc>Deletes the card with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 07:22:06.296" level="INFO">${url} = cards/62c3e69dbe84de86b524d4db</msg>
<status status="PASS" starttime="20220705 07:22:06.296" endtime="20220705 07:22:06.296"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 07:22:06.464" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 07:22:06.296" endtime="20220705 07:22:06.464"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 07:22:06.464" endtime="20220705 07:22:06.465"/>
</return>
<msg timestamp="20220705 07:22:06.465" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 07:22:06.295" endtime="20220705 07:22:06.465"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 07:22:06.465" endtime="20220705 07:22:06.465"/>
</return>
<status status="PASS" starttime="20220705 07:22:06.295" endtime="20220705 07:22:06.465"/>
</kw>
<status status="PASS" starttime="20220705 07:22:06.294" endtime="20220705 07:22:06.465"/>
</kw>
<doc>Verify that a card can be closed through API</doc>
<tag>api</tag>
<tag>card.close</tag>
<tag>regression</tag>
<status status="PASS" starttime="20220705 07:22:05.813" endtime="20220705 07:22:06.465"/>
</test>
<test id="s1-s1-s2-t3" name="Verify A Card Can Be Deleted" line="35">
<kw name="Create A Card" library="Card">
<var>${response}</var>
<doc>Creates a new card in the given list.
required_args: listId
optional_args: name, desc, pos, idCardSource, idLabels, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>@{optional_args}</arg>
<arg>idList</arg>
<arg>${idList}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 07:22:06.468" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 07:22:06.468" endtime="20220705 07:22:06.468"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 07:22:06.468" endtime="20220705 07:22:06.469"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 07:22:06.469" level="INFO">${url} = cards/</msg>
<status status="PASS" starttime="20220705 07:22:06.469" endtime="20220705 07:22:06.469"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 07:22:06.644" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 07:22:06.469" endtime="20220705 07:22:06.644"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 07:22:06.644" endtime="20220705 07:22:06.644"/>
</return>
<msg timestamp="20220705 07:22:06.644" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 07:22:06.467" endtime="20220705 07:22:06.644"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 07:22:06.644" endtime="20220705 07:22:06.644"/>
</return>
<msg timestamp="20220705 07:22:06.645" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 07:22:06.466" endtime="20220705 07:22:06.645"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 07:22:06.645" endtime="20220705 07:22:06.645"/>
</return>
<msg timestamp="20220705 07:22:06.646" level="INFO">${CARD_ID} = 62c3e69eeb9e8d2e106a05a0</msg>
<status status="PASS" starttime="20220705 07:22:06.645" endtime="20220705 07:22:06.646"/>
</kw>
<kw name="Delete A Card" library="Card">
<var>${response}</var>
<arg>${CARD_ID}</arg>
<doc>Deletes the card with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 07:22:06.647" level="INFO">${url} = cards/62c3e69eeb9e8d2e106a05a0</msg>
<status status="PASS" starttime="20220705 07:22:06.647" endtime="20220705 07:22:06.647"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 07:22:06.845" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 07:22:06.647" endtime="20220705 07:22:06.845"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 07:22:06.845" endtime="20220705 07:22:06.845"/>
</return>
<msg timestamp="20220705 07:22:06.845" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 07:22:06.646" endtime="20220705 07:22:06.845"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 07:22:06.845" endtime="20220705 07:22:06.845"/>
</return>
<msg timestamp="20220705 07:22:06.845" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 07:22:06.646" endtime="20220705 07:22:06.845"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>delete</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 07:22:06.846" endtime="20220705 07:22:06.848"/>
</kw>
<status status="PASS" starttime="20220705 07:22:06.846" endtime="20220705 07:22:06.848"/>
</kw>
<kw name="Get A Card" library="Card">
<arg>${CARD_ID}</arg>
<arg>status_code=404</arg>
<doc>Gets the card with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 07:22:06.849" level="INFO">${url} = cards/62c3e69eeb9e8d2e106a05a0</msg>
<status status="PASS" starttime="20220705 07:22:06.849" endtime="20220705 07:22:06.849"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 07:22:06.921" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220705 07:22:06.850" endtime="20220705 07:22:06.921"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 07:22:06.921" endtime="20220705 07:22:06.922"/>
</return>
<msg timestamp="20220705 07:22:06.922" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220705 07:22:06.849" endtime="20220705 07:22:06.922"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 07:22:06.922" endtime="20220705 07:22:06.922"/>
</return>
<status status="PASS" starttime="20220705 07:22:06.848" endtime="20220705 07:22:06.922"/>
</kw>
<doc>Verify that a card can be deleted through API</doc>
<tag>api</tag>
<tag>card.delete</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220705 07:22:06.466" endtime="20220705 07:22:06.922"/>
</test>
<test id="s1-s1-s2-t4" name="Verify A Card Can Be Updated" line="44">
<kw name="Create A Card" library="Card">
<var>${response}</var>
<arg>name</arg>
<arg>RFCard4</arg>
<doc>Creates a new card in the given list.
required_args: listId
optional_args: name, desc, pos, idCardSource, idLabels, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>@{optional_args}</arg>
<arg>idList</arg>
<arg>${idList}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 07:22:06.925" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 07:22:06.925" endtime="20220705 07:22:06.925"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 07:22:06.925" endtime="20220705 07:22:06.925"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 07:22:06.926" level="INFO">${url} = cards/</msg>
<status status="PASS" starttime="20220705 07:22:06.925" endtime="20220705 07:22:06.926"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 07:22:07.113" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 07:22:06.926" endtime="20220705 07:22:07.113"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 07:22:07.113" endtime="20220705 07:22:07.113"/>
</return>
<msg timestamp="20220705 07:22:07.114" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 07:22:06.924" endtime="20220705 07:22:07.114"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 07:22:07.114" endtime="20220705 07:22:07.114"/>
</return>
<msg timestamp="20220705 07:22:07.114" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 07:22:06.924" endtime="20220705 07:22:07.114"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 07:22:07.114" endtime="20220705 07:22:07.114"/>
</return>
<msg timestamp="20220705 07:22:07.115" level="INFO">${CARD_ID} = 62c3e69f7c01e72d71581894</msg>
<status status="PASS" starttime="20220705 07:22:07.114" endtime="20220705 07:22:07.115"/>
</kw>
<kw name="Update A Card" library="Card">
<var>${response}</var>
<arg>${CARD_ID}</arg>
<arg>name</arg>
<arg>RFCard5</arg>
<arg>desc</arg>
<arg>Description</arg>
<doc>Updates the card with the given ID
optional_args: name, desc, closed, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<arg>status_code=${status_code}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 07:22:07.116" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 07:22:07.116" endtime="20220705 07:22:07.116"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 07:22:07.116" endtime="20220705 07:22:07.117"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 07:22:07.117" level="INFO">${url} = cards/62c3e69f7c01e72d71581894</msg>
<status status="PASS" starttime="20220705 07:22:07.117" endtime="20220705 07:22:07.117"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 07:22:07.283" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 07:22:07.117" endtime="20220705 07:22:07.283"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 07:22:07.283" endtime="20220705 07:22:07.283"/>
</return>
<msg timestamp="20220705 07:22:07.283" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 07:22:07.116" endtime="20220705 07:22:07.283"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 07:22:07.284" endtime="20220705 07:22:07.284"/>
</return>
<msg timestamp="20220705 07:22:07.284" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 07:22:07.115" endtime="20220705 07:22:07.284"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>card</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 07:22:07.284" endtime="20220705 07:22:07.290"/>
</kw>
<status status="PASS" starttime="20220705 07:22:07.284" endtime="20220705 07:22:07.290"/>
</kw>
<kw name="Get A Card" library="Card">
<var>${response}</var>
<arg>${CARD_ID}</arg>
<doc>Gets the card with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 07:22:07.291" level="INFO">${url} = cards/62c3e69f7c01e72d71581894</msg>
<status status="PASS" starttime="20220705 07:22:07.291" endtime="20220705 07:22:07.291"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 07:22:07.379" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 07:22:07.291" endtime="20220705 07:22:07.379"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 07:22:07.379" endtime="20220705 07:22:07.379"/>
</return>
<msg timestamp="20220705 07:22:07.379" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 07:22:07.290" endtime="20220705 07:22:07.379"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 07:22:07.380" endtime="20220705 07:22:07.380"/>
</return>
<msg timestamp="20220705 07:22:07.380" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 07:22:07.290" endtime="20220705 07:22:07.380"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_NAME}</var>
<arg>${response}</arg>
<arg>name</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 07:22:07.380" endtime="20220705 07:22:07.380"/>
</return>
<msg timestamp="20220705 07:22:07.381" level="INFO">${CARD_NAME} = RFCard5</msg>
<status status="PASS" starttime="20220705 07:22:07.380" endtime="20220705 07:22:07.381"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_DESC}</var>
<arg>${response}</arg>
<arg>desc</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 07:22:07.382" endtime="20220705 07:22:07.382"/>
</return>
<msg timestamp="20220705 07:22:07.382" level="INFO">${CARD_DESC} = Description</msg>
<status status="PASS" starttime="20220705 07:22:07.381" endtime="20220705 07:22:07.382"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${CARD_NAME}</arg>
<arg>RFCard5</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220705 07:22:07.382" endtime="20220705 07:22:07.383"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${CARD_DESC}</arg>
<arg>Description</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220705 07:22:07.383" endtime="20220705 07:22:07.383"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Card</arg>
<arg>${CARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Card" library="Card">
<arg>${CARD_ID}</arg>
<doc>Deletes the card with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 07:22:07.385" level="INFO">${url} = cards/62c3e69f7c01e72d71581894</msg>
<status status="PASS" starttime="20220705 07:22:07.385" endtime="20220705 07:22:07.385"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 07:22:07.577" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 07:22:07.385" endtime="20220705 07:22:07.577"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 07:22:07.577" endtime="20220705 07:22:07.577"/>
</return>
<msg timestamp="20220705 07:22:07.577" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 07:22:07.384" endtime="20220705 07:22:07.577"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 07:22:07.577" endtime="20220705 07:22:07.577"/>
</return>
<status status="PASS" starttime="20220705 07:22:07.384" endtime="20220705 07:22:07.578"/>
</kw>
<status status="PASS" starttime="20220705 07:22:07.383" endtime="20220705 07:22:07.578"/>
</kw>
<doc>Verify that a card's name and Description can be updated through API</doc>
<tag>api</tag>
<tag>card.update</tag>
<tag>regression</tag>
<status status="PASS" starttime="20220705 07:22:06.923" endtime="20220705 07:22:07.578"/>
</test>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Teardown Board</arg>
<arg>Delete All Sessions</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Teardown Board">
<doc>Delete the board created for this suite</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 07:22:07.581" level="INFO">${url} = boards/62c3e69d8d3aa34572b776aa</msg>
<status status="PASS" starttime="20220705 07:22:07.581" endtime="20220705 07:22:07.581"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 07:22:07.913" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 07:22:07.582" endtime="20220705 07:22:07.914"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 07:22:07.914" endtime="20220705 07:22:07.914"/>
</return>
<msg timestamp="20220705 07:22:07.914" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 07:22:07.580" endtime="20220705 07:22:07.914"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 07:22:07.914" endtime="20220705 07:22:07.914"/>
</return>
<status status="PASS" starttime="20220705 07:22:07.580" endtime="20220705 07:22:07.914"/>
</kw>
<status status="PASS" starttime="20220705 07:22:07.580" endtime="20220705 07:22:07.914"/>
</kw>
<status status="PASS" starttime="20220705 07:22:07.579" endtime="20220705 07:22:07.914"/>
</kw>
<kw name="Delete All Sessions" library="request_own_library">
<status status="PASS" starttime="20220705 07:22:07.914" endtime="20220705 07:22:07.916"/>
</kw>
<status status="PASS" starttime="20220705 07:22:07.579" endtime="20220705 07:22:07.916"/>
</kw>
<doc>Example Test with Trello API Cards</doc>
<status status="PASS" starttime="20220705 07:22:04.924" endtime="20220705 07:22:07.916"/>
</suite>
<suite id="s1-s1-s3" name="Trello Api Checklists Tests" source="/trello/api/trello_api_checklists_tests.robot">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Create Trello Session</arg>
<arg>Setup Board, List And Card</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Create Trello Session" library="TrelloAPI">
<doc>Creates a Trello Session</doc>
<kw name="Create Session" library="request_own_library">
<arg>${API_BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<status status="PASS" starttime="20220705 07:22:07.927" endtime="20220705 07:22:07.927"/>
</kw>
<status status="PASS" starttime="20220705 07:22:07.926" endtime="20220705 07:22:07.927"/>
</kw>
<kw name="Setup Board, List And Card">
<doc>Create a board and save its ID and its first list's ID</doc>
<kw name="Create A Board" library="Board">
<var>${BOARD}</var>
<arg>TestBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 07:22:07.928" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 07:22:07.928" endtime="20220705 07:22:07.928"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 07:22:07.928" endtime="20220705 07:22:07.928"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 07:22:07.929" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220705 07:22:07.928" endtime="20220705 07:22:07.929"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 07:22:08.314" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 07:22:07.929" endtime="20220705 07:22:08.314"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 07:22:08.314" endtime="20220705 07:22:08.314"/>
</return>
<msg timestamp="20220705 07:22:08.314" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 07:22:07.927" endtime="20220705 07:22:08.314"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 07:22:08.314" endtime="20220705 07:22:08.314"/>
</return>
<msg timestamp="20220705 07:22:08.314" level="INFO">${BOARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 07:22:07.927" endtime="20220705 07:22:08.314"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_BOARD_ID}</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220705 07:22:08.315" level="INFO">${TEST_SUITE_BOARD_ID} = 62c3e6a0ea5c2a44ecc76fbc</msg>
<status status="PASS" starttime="20220705 07:22:08.315" endtime="20220705 07:22:08.315"/>
</kw>
<kw name="Get Lists On A Board" library="Board">
<var>${LISTS}</var>
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Get all the lists in a board</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>lists_on_board</arg>
<arg>${id}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 07:22:08.316" level="INFO">${url} = boards/62c3e6a0ea5c2a44ecc76fbc/lists/</msg>
<status status="PASS" starttime="20220705 07:22:08.316" endtime="20220705 07:22:08.316"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 07:22:08.419" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 07:22:08.316" endtime="20220705 07:22:08.419"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 07:22:08.419" endtime="20220705 07:22:08.419"/>
</return>
<msg timestamp="20220705 07:22:08.419" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 07:22:08.316" endtime="20220705 07:22:08.419"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 07:22:08.419" endtime="20220705 07:22:08.419"/>
</return>
<msg timestamp="20220705 07:22:08.420" level="INFO">${LISTS} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 07:22:08.315" endtime="20220705 07:22:08.420"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_LIST_ID}</arg>
<arg>${LISTS.json()}[0][id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220705 07:22:08.421" level="INFO">${TEST_SUITE_LIST_ID} = 62c3e6a0ea5c2a44ecc76fc3</msg>
<status status="PASS" starttime="20220705 07:22:08.420" endtime="20220705 07:22:08.421"/>
</kw>
<kw name="Create A Card" library="Card">
<var>${CARD}</var>
<arg>name</arg>
<arg>TestCard</arg>
<doc>Creates a new card in the given list.
required_args: listId
optional_args: name, desc, pos, idCardSource, idLabels, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>@{optional_args}</arg>
<arg>idList</arg>
<arg>${idList}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 07:22:08.422" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 07:22:08.422" endtime="20220705 07:22:08.422"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 07:22:08.423" endtime="20220705 07:22:08.423"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 07:22:08.424" level="INFO">${url} = cards/</msg>
<status status="PASS" starttime="20220705 07:22:08.423" endtime="20220705 07:22:08.424"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 07:22:08.621" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 07:22:08.424" endtime="20220705 07:22:08.621"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 07:22:08.621" endtime="20220705 07:22:08.621"/>
</return>
<msg timestamp="20220705 07:22:08.621" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 07:22:08.422" endtime="20220705 07:22:08.621"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 07:22:08.621" endtime="20220705 07:22:08.621"/>
</return>
<msg timestamp="20220705 07:22:08.621" level="INFO">${CARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 07:22:08.421" endtime="20220705 07:22:08.621"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_CARD_ID}</arg>
<arg>${CARD.json()}[id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220705 07:22:08.622" level="INFO">${TEST_SUITE_CARD_ID} = 62c3e6a07540e226e6574104</msg>
<status status="PASS" starttime="20220705 07:22:08.621" endtime="20220705 07:22:08.622"/>
</kw>
<status status="PASS" starttime="20220705 07:22:07.927" endtime="20220705 07:22:08.622"/>
</kw>
<status status="PASS" starttime="20220705 07:22:07.926" endtime="20220705 07:22:08.622"/>
</kw>
<test id="s1-s1-s3-t1" name="Verify A Checklist Can Be Created" line="14">
<kw name="Create A Checklist" library="Checklist">
<var>${response}</var>
<arg>name</arg>
<arg>TestChecklist</arg>
<arg>idCard=${TEST_SUITE_CARD_ID}</arg>
<doc>Creates a new checklist in the given card.
required_args: idCard
optional_args: name, pos, idChecklistSource
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>@{optional_args}</arg>
<arg>idCard</arg>
<arg>${idCard}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 07:22:08.625" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 07:22:08.624" endtime="20220705 07:22:08.625"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 07:22:08.625" endtime="20220705 07:22:08.625"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 07:22:08.626" level="INFO">${url} = checklists/</msg>
<status status="PASS" starttime="20220705 07:22:08.625" endtime="20220705 07:22:08.626"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 07:22:08.797" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 07:22:08.626" endtime="20220705 07:22:08.797"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 07:22:08.798" endtime="20220705 07:22:08.798"/>
</return>
<msg timestamp="20220705 07:22:08.798" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 07:22:08.624" endtime="20220705 07:22:08.798"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 07:22:08.798" endtime="20220705 07:22:08.798"/>
</return>
<msg timestamp="20220705 07:22:08.798" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 07:22:08.623" endtime="20220705 07:22:08.798"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${checklist_id}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 07:22:08.799" endtime="20220705 07:22:08.799"/>
</return>
<msg timestamp="20220705 07:22:08.800" level="INFO">${checklist_id} = 62c3e6a0bfc40c83d75d59bb</msg>
<status status="PASS" starttime="20220705 07:22:08.798" endtime="20220705 07:22:08.800"/>
</kw>
<kw name="Get A Checklist" library="Checklist">
<var>${response}</var>
<arg>${checklist_id}</arg>
<doc>Gets the checklist with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 07:22:08.801" level="INFO">${url} = checklists/62c3e6a0bfc40c83d75d59bb</msg>
<status status="PASS" starttime="20220705 07:22:08.801" endtime="20220705 07:22:08.801"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 07:22:08.921" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 07:22:08.801" endtime="20220705 07:22:08.921"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 07:22:08.921" endtime="20220705 07:22:08.921"/>
</return>
<msg timestamp="20220705 07:22:08.921" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 07:22:08.800" endtime="20220705 07:22:08.921"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 07:22:08.921" endtime="20220705 07:22:08.921"/>
</return>
<msg timestamp="20220705 07:22:08.922" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 07:22:08.800" endtime="20220705 07:22:08.922"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${checklist_name}</var>
<arg>${response}</arg>
<arg>name</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 07:22:08.922" endtime="20220705 07:22:08.922"/>
</return>
<msg timestamp="20220705 07:22:08.923" level="INFO">${checklist_name} = TestChecklist</msg>
<status status="PASS" starttime="20220705 07:22:08.922" endtime="20220705 07:22:08.923"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${checklist_name}</arg>
<arg>TestChecklist</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220705 07:22:08.923" endtime="20220705 07:22:08.923"/>
</kw>
<kw name="Delete A Checklist" library="Checklist" type="TEARDOWN">
<arg>${checklist_id}</arg>
<doc>Deletes the checklist with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 07:22:08.925" level="INFO">${url} = checklists/62c3e6a0bfc40c83d75d59bb</msg>
<status status="PASS" starttime="20220705 07:22:08.924" endtime="20220705 07:22:08.925"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 07:22:09.083" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 07:22:08.925" endtime="20220705 07:22:09.083"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 07:22:09.083" endtime="20220705 07:22:09.083"/>
</return>
<msg timestamp="20220705 07:22:09.084" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 07:22:08.924" endtime="20220705 07:22:09.084"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 07:22:09.084" endtime="20220705 07:22:09.084"/>
</return>
<status status="PASS" starttime="20220705 07:22:08.924" endtime="20220705 07:22:09.084"/>
</kw>
<doc>Verify that a checklist can be created through API</doc>
<tag>api</tag>
<tag>checklist.create</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220705 07:22:08.623" endtime="20220705 07:22:09.084"/>
</test>
<test id="s1-s1-s3-t2" name="Verify A Checklist Can Be Deleted" line="24">
<kw name="Create A Checklist" library="Checklist">
<var>${response}</var>
<arg>name</arg>
<arg>TestChecklist</arg>
<arg>idCard=${TEST_SUITE_CARD_ID}</arg>
<doc>Creates a new checklist in the given card.
required_args: idCard
optional_args: name, pos, idChecklistSource
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>@{optional_args}</arg>
<arg>idCard</arg>
<arg>${idCard}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 07:22:09.087" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 07:22:09.087" endtime="20220705 07:22:09.087"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 07:22:09.087" endtime="20220705 07:22:09.088"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 07:22:09.088" level="INFO">${url} = checklists/</msg>
<status status="PASS" starttime="20220705 07:22:09.088" endtime="20220705 07:22:09.088"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 07:22:09.251" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 07:22:09.089" endtime="20220705 07:22:09.251"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 07:22:09.251" endtime="20220705 07:22:09.251"/>
</return>
<msg timestamp="20220705 07:22:09.251" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 07:22:09.086" endtime="20220705 07:22:09.251"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 07:22:09.251" endtime="20220705 07:22:09.251"/>
</return>
<msg timestamp="20220705 07:22:09.252" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 07:22:09.086" endtime="20220705 07:22:09.252"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${checklist_id}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 07:22:09.252" endtime="20220705 07:22:09.252"/>
</return>
<msg timestamp="20220705 07:22:09.253" level="INFO">${checklist_id} = 62c3e6a10487c94d1d0e090e</msg>
<status status="PASS" starttime="20220705 07:22:09.252" endtime="20220705 07:22:09.253"/>
</kw>
<kw name="Delete A Checklist" library="Checklist">
<var>${response}</var>
<arg>${checklist_id}</arg>
<doc>Deletes the checklist with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 07:22:09.255" level="INFO">${url} = checklists/62c3e6a10487c94d1d0e090e</msg>
<status status="PASS" starttime="20220705 07:22:09.254" endtime="20220705 07:22:09.255"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 07:22:09.619" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 07:22:09.255" endtime="20220705 07:22:09.619"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 07:22:09.619" endtime="20220705 07:22:09.619"/>
</return>
<msg timestamp="20220705 07:22:09.619" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 07:22:09.254" endtime="20220705 07:22:09.619"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 07:22:09.619" endtime="20220705 07:22:09.619"/>
</return>
<msg timestamp="20220705 07:22:09.620" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 07:22:09.253" endtime="20220705 07:22:09.620"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>delete</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 07:22:09.620" endtime="20220705 07:22:09.622"/>
</kw>
<status status="PASS" starttime="20220705 07:22:09.620" endtime="20220705 07:22:09.622"/>
</kw>
<kw name="Get A Checklist" library="Checklist">
<arg>${checklist_id}</arg>
<arg>status_code=404</arg>
<doc>Gets the checklist with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 07:22:09.623" level="INFO">${url} = checklists/62c3e6a10487c94d1d0e090e</msg>
<status status="PASS" starttime="20220705 07:22:09.623" endtime="20220705 07:22:09.623"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 07:22:09.709" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220705 07:22:09.623" endtime="20220705 07:22:09.709"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 07:22:09.709" endtime="20220705 07:22:09.709"/>
</return>
<msg timestamp="20220705 07:22:09.709" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220705 07:22:09.622" endtime="20220705 07:22:09.709"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 07:22:09.709" endtime="20220705 07:22:09.709"/>
</return>
<status status="PASS" starttime="20220705 07:22:09.622" endtime="20220705 07:22:09.710"/>
</kw>
<doc>Verify that a checklist can be deleted through API</doc>
<tag>api</tag>
<tag>checklist.delete</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220705 07:22:09.084" endtime="20220705 07:22:09.710"/>
</test>
<test id="s1-s1-s3-t3" name="Verify A Checklist Can Be Updated" line="33">
<kw name="Create A Checklist" library="Checklist">
<var>${response}</var>
<arg>name</arg>
<arg>TestChecklist</arg>
<arg>idCard=${TEST_SUITE_CARD_ID}</arg>
<doc>Creates a new checklist in the given card.
required_args: idCard
optional_args: name, pos, idChecklistSource
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>@{optional_args}</arg>
<arg>idCard</arg>
<arg>${idCard}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 07:22:09.714" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 07:22:09.712" endtime="20220705 07:22:09.714"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 07:22:09.714" endtime="20220705 07:22:09.714"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 07:22:09.715" level="INFO">${url} = checklists/</msg>
<status status="PASS" starttime="20220705 07:22:09.714" endtime="20220705 07:22:09.715"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 07:22:12.846" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 07:22:09.715" endtime="20220705 07:22:12.846"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 07:22:12.846" endtime="20220705 07:22:12.846"/>
</return>
<msg timestamp="20220705 07:22:12.847" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 07:22:09.712" endtime="20220705 07:22:12.847"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 07:22:12.847" endtime="20220705 07:22:12.847"/>
</return>
<msg timestamp="20220705 07:22:12.847" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 07:22:09.711" endtime="20220705 07:22:12.847"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${checklist_id}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 07:22:12.848" endtime="20220705 07:22:12.848"/>
</return>
<msg timestamp="20220705 07:22:12.848" level="INFO">${checklist_id} = 62c3e6a4dd340732657bce69</msg>
<status status="PASS" starttime="20220705 07:22:12.847" endtime="20220705 07:22:12.848"/>
</kw>
<kw name="Update A Checklist" library="Checklist">
<var>${response}</var>
<arg>${checklist_id}</arg>
<arg>name</arg>
<arg>TestChecklist2</arg>
<doc>Updates the checklist with the given ID
optional_args: name, pos
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<arg>status_code=${status_code}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 07:22:12.850" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 07:22:12.850" endtime="20220705 07:22:12.850"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 07:22:12.850" endtime="20220705 07:22:12.850"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 07:22:12.851" level="INFO">${url} = checklists/62c3e6a4dd340732657bce69</msg>
<status status="PASS" starttime="20220705 07:22:12.850" endtime="20220705 07:22:12.851"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 07:22:13.176" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 07:22:12.851" endtime="20220705 07:22:13.176"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 07:22:13.176" endtime="20220705 07:22:13.176"/>
</return>
<msg timestamp="20220705 07:22:13.176" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 07:22:12.849" endtime="20220705 07:22:13.176"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 07:22:13.176" endtime="20220705 07:22:13.176"/>
</return>
<msg timestamp="20220705 07:22:13.177" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 07:22:12.849" endtime="20220705 07:22:13.177"/>
</kw>
<kw name="Get A Checklist" library="Checklist">
<var>${response}</var>
<arg>${checklist_id}</arg>
<doc>Gets the checklist with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 07:22:13.178" level="INFO">${url} = checklists/62c3e6a4dd340732657bce69</msg>
<status status="PASS" starttime="20220705 07:22:13.178" endtime="20220705 07:22:13.178"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 07:22:13.277" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 07:22:13.178" endtime="20220705 07:22:13.277"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 07:22:13.277" endtime="20220705 07:22:13.277"/>
</return>
<msg timestamp="20220705 07:22:13.277" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 07:22:13.177" endtime="20220705 07:22:13.277"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 07:22:13.277" endtime="20220705 07:22:13.277"/>
</return>
<msg timestamp="20220705 07:22:13.277" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 07:22:13.177" endtime="20220705 07:22:13.277"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${checklist_name}</var>
<arg>${response}</arg>
<arg>name</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 07:22:13.278" endtime="20220705 07:22:13.278"/>
</return>
<msg timestamp="20220705 07:22:13.279" level="INFO">${checklist_name} = TestChecklist2</msg>
<status status="PASS" starttime="20220705 07:22:13.278" endtime="20220705 07:22:13.279"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${checklist_name}</arg>
<arg>TestChecklist2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220705 07:22:13.279" endtime="20220705 07:22:13.279"/>
</kw>
<kw name="Delete A Checklist" library="Checklist" type="TEARDOWN">
<arg>${checklist_id}</arg>
<doc>Deletes the checklist with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 07:22:13.292" level="INFO">${url} = checklists/62c3e6a4dd340732657bce69</msg>
<status status="PASS" starttime="20220705 07:22:13.292" endtime="20220705 07:22:13.292"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 07:22:13.456" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 07:22:13.292" endtime="20220705 07:22:13.456"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 07:22:13.456" endtime="20220705 07:22:13.456"/>
</return>
<msg timestamp="20220705 07:22:13.456" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 07:22:13.291" endtime="20220705 07:22:13.456"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 07:22:13.456" endtime="20220705 07:22:13.456"/>
</return>
<status status="PASS" starttime="20220705 07:22:13.279" endtime="20220705 07:22:13.456"/>
</kw>
<doc>Verify that a checklist's name can be updated through API</doc>
<tag>api</tag>
<tag>checklist.update</tag>
<tag>regression</tag>
<status status="PASS" starttime="20220705 07:22:09.710" endtime="20220705 07:22:13.456"/>
</test>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Teardown Board</arg>
<arg>Delete All Sessions</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Teardown Board">
<doc>Delete the board created for this suite</doc>
<kw name="Delete A Board" library="Board">
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 07:22:13.459" level="INFO">${url} = boards/62c3e6a0ea5c2a44ecc76fbc</msg>
<status status="PASS" starttime="20220705 07:22:13.458" endtime="20220705 07:22:13.459"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 07:22:13.936" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 07:22:13.459" endtime="20220705 07:22:13.936"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 07:22:13.936" endtime="20220705 07:22:13.936"/>
</return>
<msg timestamp="20220705 07:22:13.937" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 07:22:13.458" endtime="20220705 07:22:13.937"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 07:22:13.937" endtime="20220705 07:22:13.937"/>
</return>
<status status="PASS" starttime="20220705 07:22:13.458" endtime="20220705 07:22:13.937"/>
</kw>
<status status="PASS" starttime="20220705 07:22:13.457" endtime="20220705 07:22:13.937"/>
</kw>
<kw name="Delete All Sessions" library="request_own_library">
<status status="PASS" starttime="20220705 07:22:13.937" endtime="20220705 07:22:13.938"/>
</kw>
<status status="PASS" starttime="20220705 07:22:13.457" endtime="20220705 07:22:13.938"/>
</kw>
<doc>Example Test with Trello API Checklists</doc>
<status status="PASS" starttime="20220705 07:22:07.917" endtime="20220705 07:22:13.938"/>
</suite>
<suite id="s1-s1-s4" name="Trello Api Labels Tests" source="/trello/api/trello_api_labels_tests.robot">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Create Trello Session</arg>
<arg>Setup Board And List</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Create Trello Session" library="TrelloAPI">
<doc>Creates a Trello Session</doc>
<kw name="Create Session" library="request_own_library">
<arg>${API_BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<status status="PASS" starttime="20220705 07:22:13.949" endtime="20220705 07:22:13.949"/>
</kw>
<status status="PASS" starttime="20220705 07:22:13.949" endtime="20220705 07:22:13.949"/>
</kw>
<kw name="Setup Board And List">
<doc>Create a board and save its ID and its first list's ID</doc>
<kw name="Create A Board" library="Board">
<var>${BOARD}</var>
<arg>TestBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 07:22:13.950" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 07:22:13.950" endtime="20220705 07:22:13.950"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 07:22:13.950" endtime="20220705 07:22:13.950"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 07:22:13.951" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220705 07:22:13.951" endtime="20220705 07:22:13.951"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 07:22:14.230" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 07:22:13.951" endtime="20220705 07:22:14.230"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 07:22:14.230" endtime="20220705 07:22:14.231"/>
</return>
<msg timestamp="20220705 07:22:14.231" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 07:22:13.950" endtime="20220705 07:22:14.231"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 07:22:14.231" endtime="20220705 07:22:14.231"/>
</return>
<msg timestamp="20220705 07:22:14.231" level="INFO">${BOARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 07:22:13.949" endtime="20220705 07:22:14.231"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_BOARD_ID}</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220705 07:22:14.232" level="INFO">${TEST_SUITE_BOARD_ID} = 62c3e6a6e3cd3c809d18448e</msg>
<status status="PASS" starttime="20220705 07:22:14.231" endtime="20220705 07:22:14.232"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${LISTS}</var>
<arg>boards/${TEST_SUITE_BOARD_ID}/lists</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 07:22:14.318" level="INFO">${LISTS} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 07:22:14.232" endtime="20220705 07:22:14.318"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_LIST_ID}</arg>
<arg>${LISTS.json()}[0][id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220705 07:22:14.319" level="INFO">${TEST_SUITE_LIST_ID} = 62c3e6a6e3cd3c809d184495</msg>
<status status="PASS" starttime="20220705 07:22:14.318" endtime="20220705 07:22:14.320"/>
</kw>
<status status="PASS" starttime="20220705 07:22:13.949" endtime="20220705 07:22:14.320"/>
</kw>
<status status="PASS" starttime="20220705 07:22:13.948" endtime="20220705 07:22:14.320"/>
</kw>
<test id="s1-s1-s4-t1" name="Create and get label on board" line="14">
<kw name="Create A Label" library="Label">
<var>${response}</var>
<arg>name</arg>
<arg>label2</arg>
<arg>color</arg>
<arg>yellow</arg>
<doc>Creates a new label in the given board.
required_args: idBoard
optional_args: name, color
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>idBoard</arg>
<arg>${idBoard}</arg>
<arg>@{optional_args}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 07:22:14.322" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 07:22:14.321" endtime="20220705 07:22:14.322"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 07:22:14.322" endtime="20220705 07:22:14.322"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 07:22:14.323" level="INFO">${url} = labels/</msg>
<status status="PASS" starttime="20220705 07:22:14.322" endtime="20220705 07:22:14.323"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 07:22:14.459" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 07:22:14.323" endtime="20220705 07:22:14.459"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 07:22:14.459" endtime="20220705 07:22:14.459"/>
</return>
<msg timestamp="20220705 07:22:14.459" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 07:22:14.321" endtime="20220705 07:22:14.460"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 07:22:14.460" endtime="20220705 07:22:14.460"/>
</return>
<msg timestamp="20220705 07:22:14.460" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 07:22:14.320" endtime="20220705 07:22:14.460"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>label</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 07:22:14.460" endtime="20220705 07:22:14.462"/>
</kw>
<status status="PASS" starttime="20220705 07:22:14.460" endtime="20220705 07:22:14.462"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${LABEL_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 07:22:14.463" endtime="20220705 07:22:14.463"/>
</return>
<msg timestamp="20220705 07:22:14.464" level="INFO">${LABEL_ID} = 62c3e6a6e518c785ae2d4726</msg>
<status status="PASS" starttime="20220705 07:22:14.463" endtime="20220705 07:22:14.464"/>
</kw>
<kw name="Get A Label" library="Label">
<var>${response}</var>
<arg>${LABEL_ID}</arg>
<doc>Gets the label with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 07:22:14.465" level="INFO">${url} = labels/62c3e6a6e518c785ae2d4726</msg>
<status status="PASS" starttime="20220705 07:22:14.465" endtime="20220705 07:22:14.465"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 07:22:14.545" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 07:22:14.465" endtime="20220705 07:22:14.545"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 07:22:14.545" endtime="20220705 07:22:14.545"/>
</return>
<msg timestamp="20220705 07:22:14.546" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 07:22:14.464" endtime="20220705 07:22:14.546"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 07:22:14.546" endtime="20220705 07:22:14.546"/>
</return>
<msg timestamp="20220705 07:22:14.546" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 07:22:14.464" endtime="20220705 07:22:14.546"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${LABEL_COLOR}</var>
<arg>${response}</arg>
<arg>color</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 07:22:14.546" endtime="20220705 07:22:14.547"/>
</return>
<msg timestamp="20220705 07:22:14.547" level="INFO">${LABEL_COLOR} = yellow</msg>
<status status="PASS" starttime="20220705 07:22:14.546" endtime="20220705 07:22:14.547"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${LABEL_NAME}</var>
<arg>${response}</arg>
<arg>name</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 07:22:14.548" endtime="20220705 07:22:14.548"/>
</return>
<msg timestamp="20220705 07:22:14.549" level="INFO">${LABEL_NAME} = label2</msg>
<status status="PASS" starttime="20220705 07:22:14.548" endtime="20220705 07:22:14.549"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${LABEL_COLOR}</arg>
<arg>yellow</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220705 07:22:14.549" endtime="20220705 07:22:14.549"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${LABEL_NAME}</arg>
<arg>label2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220705 07:22:14.549" endtime="20220705 07:22:14.549"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Label</arg>
<arg>${LABEL_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Label" library="Label">
<arg>${LABEL_ID}</arg>
<doc>Deletes the label with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 07:22:14.551" level="INFO">${url} = labels/62c3e6a6e518c785ae2d4726</msg>
<status status="PASS" starttime="20220705 07:22:14.551" endtime="20220705 07:22:14.551"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 07:22:14.688" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 07:22:14.551" endtime="20220705 07:22:14.688"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 07:22:14.688" endtime="20220705 07:22:14.688"/>
</return>
<msg timestamp="20220705 07:22:14.688" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 07:22:14.550" endtime="20220705 07:22:14.688"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 07:22:14.688" endtime="20220705 07:22:14.689"/>
</return>
<status status="PASS" starttime="20220705 07:22:14.550" endtime="20220705 07:22:14.689"/>
</kw>
<status status="PASS" starttime="20220705 07:22:14.550" endtime="20220705 07:22:14.689"/>
</kw>
<doc>Verify that a label can be created through API</doc>
<tag>api</tag>
<tag>label.create</tag>
<tag>label.get</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220705 07:22:14.320" endtime="20220705 07:22:14.689"/>
</test>
<test id="s1-s1-s4-t2" name="Update label on board" line="28">
<kw name="Create A Label" library="Label">
<var>${response}</var>
<arg>name</arg>
<arg>label2</arg>
<arg>color</arg>
<arg>yellow</arg>
<doc>Creates a new label in the given board.
required_args: idBoard
optional_args: name, color
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>idBoard</arg>
<arg>${idBoard}</arg>
<arg>@{optional_args}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 07:22:14.691" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 07:22:14.691" endtime="20220705 07:22:14.692"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 07:22:14.692" endtime="20220705 07:22:14.692"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 07:22:14.693" level="INFO">${url} = labels/</msg>
<status status="PASS" starttime="20220705 07:22:14.692" endtime="20220705 07:22:14.693"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 07:22:14.803" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 07:22:14.693" endtime="20220705 07:22:14.803"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 07:22:14.803" endtime="20220705 07:22:14.804"/>
</return>
<msg timestamp="20220705 07:22:14.804" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 07:22:14.691" endtime="20220705 07:22:14.804"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 07:22:14.804" endtime="20220705 07:22:14.804"/>
</return>
<msg timestamp="20220705 07:22:14.804" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 07:22:14.690" endtime="20220705 07:22:14.804"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>label</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 07:22:14.805" endtime="20220705 07:22:14.807"/>
</kw>
<status status="PASS" starttime="20220705 07:22:14.804" endtime="20220705 07:22:14.807"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${LABEL_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 07:22:14.807" endtime="20220705 07:22:14.807"/>
</return>
<msg timestamp="20220705 07:22:14.808" level="INFO">${LABEL_ID} = 62c3e6a68686971b8b45c49c</msg>
<status status="PASS" starttime="20220705 07:22:14.807" endtime="20220705 07:22:14.808"/>
</kw>
<kw name="Update A Label" library="Label">
<var>${new_response}</var>
<arg>${LABEL_ID}</arg>
<arg>name</arg>
<arg>label3</arg>
<arg>color</arg>
<arg>orange</arg>
<doc>Updates the label with the given ID
optional_args: name, color
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 07:22:14.809" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 07:22:14.809" endtime="20220705 07:22:14.809"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 07:22:14.809" endtime="20220705 07:22:14.809"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 07:22:14.810" level="INFO">${url} = labels/62c3e6a68686971b8b45c49c</msg>
<status status="PASS" starttime="20220705 07:22:14.810" endtime="20220705 07:22:14.810"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 07:22:14.945" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 07:22:14.810" endtime="20220705 07:22:14.945"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 07:22:14.945" endtime="20220705 07:22:14.945"/>
</return>
<msg timestamp="20220705 07:22:14.945" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 07:22:14.808" endtime="20220705 07:22:14.945"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 07:22:14.945" endtime="20220705 07:22:14.946"/>
</return>
<msg timestamp="20220705 07:22:14.946" level="INFO">${new_response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 07:22:14.808" endtime="20220705 07:22:14.946"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${NEW_LABEL_COLOR}</var>
<arg>${new_response}</arg>
<arg>color</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 07:22:14.946" endtime="20220705 07:22:14.946"/>
</return>
<msg timestamp="20220705 07:22:14.947" level="INFO">${NEW_LABEL_COLOR} = orange</msg>
<status status="PASS" starttime="20220705 07:22:14.946" endtime="20220705 07:22:14.947"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${NEW_LABEL_NAME}</var>
<arg>${new_response}</arg>
<arg>name</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 07:22:14.948" endtime="20220705 07:22:14.948"/>
</return>
<msg timestamp="20220705 07:22:14.948" level="INFO">${NEW_LABEL_NAME} = label3</msg>
<status status="PASS" starttime="20220705 07:22:14.947" endtime="20220705 07:22:14.948"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${NEW_LABEL_COLOR}</arg>
<arg>orange</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220705 07:22:14.948" endtime="20220705 07:22:14.949"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${NEW_LABEL_NAME}</arg>
<arg>label3</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220705 07:22:14.949" endtime="20220705 07:22:14.949"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Label</arg>
<arg>${LABEL_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Label" library="Label">
<arg>${LABEL_ID}</arg>
<doc>Deletes the label with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 07:22:14.951" level="INFO">${url} = labels/62c3e6a68686971b8b45c49c</msg>
<status status="PASS" starttime="20220705 07:22:14.951" endtime="20220705 07:22:14.951"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 07:22:15.078" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 07:22:14.951" endtime="20220705 07:22:15.078"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 07:22:15.078" endtime="20220705 07:22:15.078"/>
</return>
<msg timestamp="20220705 07:22:15.079" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 07:22:14.950" endtime="20220705 07:22:15.079"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 07:22:15.079" endtime="20220705 07:22:15.079"/>
</return>
<status status="PASS" starttime="20220705 07:22:14.949" endtime="20220705 07:22:15.079"/>
</kw>
<status status="PASS" starttime="20220705 07:22:14.949" endtime="20220705 07:22:15.079"/>
</kw>
<doc>Verify that a label's name and color can be updated through API</doc>
<tag>api</tag>
<tag>label.update</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220705 07:22:14.689" endtime="20220705 07:22:15.079"/>
</test>
<test id="s1-s1-s4-t3" name="Delete label on board" line="41">
<kw name="Create A Label" library="Label">
<var>${response}</var>
<arg>name</arg>
<arg>label2</arg>
<arg>color</arg>
<arg>yellow</arg>
<doc>Creates a new label in the given board.
required_args: idBoard
optional_args: name, color
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>idBoard</arg>
<arg>${idBoard}</arg>
<arg>@{optional_args}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 07:22:15.081" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 07:22:15.081" endtime="20220705 07:22:15.081"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 07:22:15.081" endtime="20220705 07:22:15.082"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 07:22:15.082" level="INFO">${url} = labels/</msg>
<status status="PASS" starttime="20220705 07:22:15.082" endtime="20220705 07:22:15.083"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 07:22:15.228" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 07:22:15.083" endtime="20220705 07:22:15.228"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 07:22:15.229" endtime="20220705 07:22:15.229"/>
</return>
<msg timestamp="20220705 07:22:15.229" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 07:22:15.081" endtime="20220705 07:22:15.229"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 07:22:15.229" endtime="20220705 07:22:15.229"/>
</return>
<msg timestamp="20220705 07:22:15.229" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 07:22:15.080" endtime="20220705 07:22:15.229"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${LABEL_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 07:22:15.230" endtime="20220705 07:22:15.230"/>
</return>
<msg timestamp="20220705 07:22:15.230" level="INFO">${LABEL_ID} = 62c3e6a78d6534134f808456</msg>
<status status="PASS" starttime="20220705 07:22:15.229" endtime="20220705 07:22:15.230"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Label</arg>
<arg>${LABEL_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Label" library="Label">
<arg>${LABEL_ID}</arg>
<doc>Deletes the label with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 07:22:15.232" level="INFO">${url} = labels/62c3e6a78d6534134f808456</msg>
<status status="PASS" starttime="20220705 07:22:15.232" endtime="20220705 07:22:15.232"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 07:22:15.394" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 07:22:15.232" endtime="20220705 07:22:15.394"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 07:22:15.394" endtime="20220705 07:22:15.394"/>
</return>
<msg timestamp="20220705 07:22:15.395" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 07:22:15.232" endtime="20220705 07:22:15.395"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 07:22:15.395" endtime="20220705 07:22:15.395"/>
</return>
<status status="PASS" starttime="20220705 07:22:15.231" endtime="20220705 07:22:15.395"/>
</kw>
<status status="PASS" starttime="20220705 07:22:15.231" endtime="20220705 07:22:15.395"/>
</kw>
<kw name="Get A Label" library="Label">
<arg>${LABEL_ID}</arg>
<arg>status_code=404</arg>
<doc>Gets the label with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 07:22:15.396" level="INFO">${url} = labels/62c3e6a78d6534134f808456</msg>
<status status="PASS" starttime="20220705 07:22:15.396" endtime="20220705 07:22:15.396"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 07:22:15.470" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220705 07:22:15.396" endtime="20220705 07:22:15.470"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 07:22:15.470" endtime="20220705 07:22:15.470"/>
</return>
<msg timestamp="20220705 07:22:15.471" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220705 07:22:15.396" endtime="20220705 07:22:15.471"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 07:22:15.471" endtime="20220705 07:22:15.471"/>
</return>
<status status="PASS" starttime="20220705 07:22:15.395" endtime="20220705 07:22:15.471"/>
</kw>
<doc>Verify that a label can be deleted through API</doc>
<tag>api</tag>
<tag>label.delete</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220705 07:22:15.080" endtime="20220705 07:22:15.471"/>
</test>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Teardown Board</arg>
<arg>Delete All Sessions</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Teardown Board">
<doc>Delete the board created for this session.</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 07:22:15.474" level="INFO">${url} = boards/62c3e6a6e3cd3c809d18448e</msg>
<status status="PASS" starttime="20220705 07:22:15.473" endtime="20220705 07:22:15.474"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 07:22:15.847" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 07:22:15.474" endtime="20220705 07:22:15.847"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 07:22:15.848" endtime="20220705 07:22:15.848"/>
</return>
<msg timestamp="20220705 07:22:15.848" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 07:22:15.473" endtime="20220705 07:22:15.848"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 07:22:15.848" endtime="20220705 07:22:15.848"/>
</return>
<status status="PASS" starttime="20220705 07:22:15.472" endtime="20220705 07:22:15.848"/>
</kw>
<status status="PASS" starttime="20220705 07:22:15.472" endtime="20220705 07:22:15.848"/>
</kw>
<status status="PASS" starttime="20220705 07:22:15.472" endtime="20220705 07:22:15.848"/>
</kw>
<kw name="Delete All Sessions" library="request_own_library">
<status status="PASS" starttime="20220705 07:22:15.848" endtime="20220705 07:22:15.850"/>
</kw>
<status status="PASS" starttime="20220705 07:22:15.472" endtime="20220705 07:22:15.850"/>
</kw>
<doc>Example Test with Trello API Cards</doc>
<status status="PASS" starttime="20220705 07:22:13.940" endtime="20220705 07:22:15.850"/>
</suite>
<suite id="s1-s1-s5" name="Trello Api Lists Tests" source="/trello/api/trello_api_lists_tests.robot">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Create Trello Session</arg>
<arg>Setup Board</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Create Trello Session" library="TrelloAPI">
<doc>Creates a Trello Session</doc>
<kw name="Create Session" library="request_own_library">
<arg>${API_BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<status status="PASS" starttime="20220705 07:22:15.863" endtime="20220705 07:22:15.864"/>
</kw>
<status status="PASS" starttime="20220705 07:22:15.863" endtime="20220705 07:22:15.864"/>
</kw>
<kw name="Setup Board">
<doc>Create a board and save it's id for the suite</doc>
<kw name="Create A Board" library="Board">
<var>${BOARD}</var>
<arg>TestBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 07:22:15.865" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 07:22:15.865" endtime="20220705 07:22:15.865"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 07:22:15.865" endtime="20220705 07:22:15.865"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 07:22:15.866" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220705 07:22:15.865" endtime="20220705 07:22:15.866"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 07:22:16.224" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 07:22:15.866" endtime="20220705 07:22:16.224"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 07:22:16.224" endtime="20220705 07:22:16.224"/>
</return>
<msg timestamp="20220705 07:22:16.225" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 07:22:15.864" endtime="20220705 07:22:16.225"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 07:22:16.225" endtime="20220705 07:22:16.225"/>
</return>
<msg timestamp="20220705 07:22:16.225" level="INFO">${BOARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 07:22:15.864" endtime="20220705 07:22:16.225"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Set Suite Variable</arg>
<arg>\${TEST_SUITE_BOARD_ID}</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_BOARD_ID}</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220705 07:22:16.226" level="INFO">${TEST_SUITE_BOARD_ID} = 62c3e6a8b0396d076a423d55</msg>
<status status="PASS" starttime="20220705 07:22:16.225" endtime="20220705 07:22:16.226"/>
</kw>
<status status="PASS" starttime="20220705 07:22:16.225" endtime="20220705 07:22:16.226"/>
</kw>
<status status="PASS" starttime="20220705 07:22:15.864" endtime="20220705 07:22:16.227"/>
</kw>
<status status="PASS" starttime="20220705 07:22:15.863" endtime="20220705 07:22:16.227"/>
</kw>
<test id="s1-s1-s5-t1" name="CREATE a list" line="13">
<kw name="Create A List" library="List">
<var>${response}</var>
<arg>NewList</arg>
<doc>Creates a new List
board id
name the list will have
optional_args: idListSource, pos, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>list</arg>
<arg>name</arg>
<arg>${name}</arg>
<arg>idBoard</arg>
<arg>${idBoard}</arg>
<arg>@{optional_args}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 07:22:16.228" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 07:22:16.228" endtime="20220705 07:22:16.229"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 07:22:16.229" endtime="20220705 07:22:16.229"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 07:22:16.229" level="INFO">${url} = lists/</msg>
<status status="PASS" starttime="20220705 07:22:16.229" endtime="20220705 07:22:16.230"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 07:22:16.385" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 07:22:16.230" endtime="20220705 07:22:16.385"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 07:22:16.385" endtime="20220705 07:22:16.385"/>
</return>
<msg timestamp="20220705 07:22:16.385" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 07:22:16.228" endtime="20220705 07:22:16.385"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 07:22:16.385" endtime="20220705 07:22:16.385"/>
</return>
<msg timestamp="20220705 07:22:16.385" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 07:22:16.227" endtime="20220705 07:22:16.385"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>list</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 07:22:16.386" endtime="20220705 07:22:16.388"/>
</kw>
<status status="PASS" starttime="20220705 07:22:16.386" endtime="20220705 07:22:16.388"/>
</kw>
<doc>Verify that a list can be created through API</doc>
<tag>api</tag>
<tag>list.create</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220705 07:22:16.227" endtime="20220705 07:22:16.388"/>
</test>
<test id="s1-s1-s5-t2" name="UPDATE a list" line="19">
<kw name="Create A List" library="List">
<var>${response}</var>
<arg>NewList</arg>
<doc>Creates a new List
board id
name the list will have
optional_args: idListSource, pos, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>list</arg>
<arg>name</arg>
<arg>${name}</arg>
<arg>idBoard</arg>
<arg>${idBoard}</arg>
<arg>@{optional_args}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 07:22:16.391" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 07:22:16.391" endtime="20220705 07:22:16.391"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 07:22:16.391" endtime="20220705 07:22:16.391"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 07:22:16.392" level="INFO">${url} = lists/</msg>
<status status="PASS" starttime="20220705 07:22:16.391" endtime="20220705 07:22:16.392"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 07:22:16.529" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 07:22:16.392" endtime="20220705 07:22:16.529"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 07:22:16.530" endtime="20220705 07:22:16.530"/>
</return>
<msg timestamp="20220705 07:22:16.530" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 07:22:16.390" endtime="20220705 07:22:16.530"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 07:22:16.530" endtime="20220705 07:22:16.530"/>
</return>
<msg timestamp="20220705 07:22:16.530" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 07:22:16.389" endtime="20220705 07:22:16.530"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>list</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 07:22:16.531" endtime="20220705 07:22:16.533"/>
</kw>
<status status="PASS" starttime="20220705 07:22:16.530" endtime="20220705 07:22:16.533"/>
</kw>
<kw name="Update A List" library="List">
<arg>${response.json()}[id]</arg>
<arg>name</arg>
<arg>NewName</arg>
<doc>Updates the board with the given ID
optional_args: name, idListSource, pos, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>list</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 07:22:16.534" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 07:22:16.534" endtime="20220705 07:22:16.535"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 07:22:16.535" endtime="20220705 07:22:16.535"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 07:22:16.535" level="INFO">${url} = lists/62c3e6a800aa89574c4e28b7</msg>
<status status="PASS" starttime="20220705 07:22:16.535" endtime="20220705 07:22:16.535"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 07:22:16.660" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 07:22:16.535" endtime="20220705 07:22:16.660"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 07:22:16.660" endtime="20220705 07:22:16.660"/>
</return>
<msg timestamp="20220705 07:22:16.660" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 07:22:16.534" endtime="20220705 07:22:16.660"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 07:22:16.660" endtime="20220705 07:22:16.660"/>
</return>
<status status="PASS" starttime="20220705 07:22:16.533" endtime="20220705 07:22:16.661"/>
</kw>
<kw name="Get A List" library="List">
<var>${new_response}</var>
<arg>${response.json()}[id]</arg>
<doc>Gets the List with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>list</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 07:22:16.663" level="INFO">${url} = lists/62c3e6a800aa89574c4e28b7</msg>
<status status="PASS" starttime="20220705 07:22:16.662" endtime="20220705 07:22:16.663"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 07:22:16.753" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 07:22:16.663" endtime="20220705 07:22:16.753"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 07:22:16.753" endtime="20220705 07:22:16.753"/>
</return>
<msg timestamp="20220705 07:22:16.753" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 07:22:16.662" endtime="20220705 07:22:16.753"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 07:22:16.753" endtime="20220705 07:22:16.753"/>
</return>
<msg timestamp="20220705 07:22:16.754" level="INFO">${new_response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 07:22:16.661" endtime="20220705 07:22:16.754"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${new_response}</arg>
<arg>list</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 07:22:16.754" endtime="20220705 07:22:16.756"/>
</kw>
<status status="PASS" starttime="20220705 07:22:16.754" endtime="20220705 07:22:16.756"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${new_response.json()}[name]</arg>
<arg>NewName</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220705 07:22:16.756" endtime="20220705 07:22:16.757"/>
</kw>
<doc>Verify that a lists name can be updated through API</doc>
<tag>api</tag>
<tag>list.update</tag>
<tag>regression</tag>
<status status="PASS" starttime="20220705 07:22:16.389" endtime="20220705 07:22:16.757"/>
</test>
<test id="s1-s1-s5-t3" name="ARCHIVE A list" line="29">
<kw name="Create A List" library="List">
<var>${response}</var>
<arg>NewList</arg>
<doc>Creates a new List
board id
name the list will have
optional_args: idListSource, pos, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>list</arg>
<arg>name</arg>
<arg>${name}</arg>
<arg>idBoard</arg>
<arg>${idBoard}</arg>
<arg>@{optional_args}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 07:22:16.761" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 07:22:16.761" endtime="20220705 07:22:16.761"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 07:22:16.761" endtime="20220705 07:22:16.761"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 07:22:16.762" level="INFO">${url} = lists/</msg>
<status status="PASS" starttime="20220705 07:22:16.761" endtime="20220705 07:22:16.762"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 07:22:17.343" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 07:22:16.762" endtime="20220705 07:22:17.343"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 07:22:17.343" endtime="20220705 07:22:17.343"/>
</return>
<msg timestamp="20220705 07:22:17.343" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 07:22:16.760" endtime="20220705 07:22:17.343"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 07:22:17.344" endtime="20220705 07:22:17.344"/>
</return>
<msg timestamp="20220705 07:22:17.344" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 07:22:16.758" endtime="20220705 07:22:17.344"/>
</kw>
<kw name="Archive A List" library="List">
<arg>${response.json()}[id]</arg>
<doc>Deletes the list with the given ID</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>archive_list</arg>
<arg>${id}</arg>
<arg>value</arg>
<arg>true</arg>
<arg>status_code=${status_code}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 07:22:17.346" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 07:22:17.346" endtime="20220705 07:22:17.346"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 07:22:17.346" endtime="20220705 07:22:17.346"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 07:22:17.347" level="INFO">${url} = lists/62c3e6a9db3c2555d2e39a0f/closed</msg>
<status status="PASS" starttime="20220705 07:22:17.346" endtime="20220705 07:22:17.347"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 07:22:17.558" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 07:22:17.347" endtime="20220705 07:22:17.558"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 07:22:17.558" endtime="20220705 07:22:17.558"/>
</return>
<msg timestamp="20220705 07:22:17.558" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 07:22:17.345" endtime="20220705 07:22:17.558"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 07:22:17.558" endtime="20220705 07:22:17.558"/>
</return>
<status status="PASS" starttime="20220705 07:22:17.344" endtime="20220705 07:22:17.559"/>
</kw>
<kw name="Get A List" library="List">
<var>${new_response}</var>
<arg>${response.json()}[id]</arg>
<doc>Gets the List with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>list</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 07:22:17.561" level="INFO">${url} = lists/62c3e6a9db3c2555d2e39a0f</msg>
<status status="PASS" starttime="20220705 07:22:17.560" endtime="20220705 07:22:17.561"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 07:22:17.654" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 07:22:17.561" endtime="20220705 07:22:17.654"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 07:22:17.654" endtime="20220705 07:22:17.654"/>
</return>
<msg timestamp="20220705 07:22:17.655" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 07:22:17.560" endtime="20220705 07:22:17.655"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 07:22:17.655" endtime="20220705 07:22:17.655"/>
</return>
<msg timestamp="20220705 07:22:17.655" level="INFO">${new_response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 07:22:17.559" endtime="20220705 07:22:17.655"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${new_response.json()}[closed]</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220705 07:22:17.655" endtime="20220705 07:22:17.656"/>
</kw>
<doc>Verify that a list can be archived through API</doc>
<tag>api</tag>
<tag>list.archive</tag>
<tag>regression</tag>
<status status="PASS" starttime="20220705 07:22:16.757" endtime="20220705 07:22:17.656"/>
</test>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Teardown Board</arg>
<arg>Delete All Sessions</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Teardown Board">
<doc>Delete the board created for this suite.</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 07:22:17.659" level="INFO">${url} = boards/62c3e6a8b0396d076a423d55</msg>
<status status="PASS" starttime="20220705 07:22:17.659" endtime="20220705 07:22:17.659"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 07:22:18.040" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 07:22:17.659" endtime="20220705 07:22:18.040"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 07:22:18.040" endtime="20220705 07:22:18.041"/>
</return>
<msg timestamp="20220705 07:22:18.041" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 07:22:17.658" endtime="20220705 07:22:18.041"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 07:22:18.041" endtime="20220705 07:22:18.041"/>
</return>
<status status="PASS" starttime="20220705 07:22:17.658" endtime="20220705 07:22:18.041"/>
</kw>
<status status="PASS" starttime="20220705 07:22:17.658" endtime="20220705 07:22:18.041"/>
</kw>
<status status="PASS" starttime="20220705 07:22:17.657" endtime="20220705 07:22:18.041"/>
</kw>
<kw name="Delete All Sessions" library="request_own_library">
<status status="PASS" starttime="20220705 07:22:18.041" endtime="20220705 07:22:18.042"/>
</kw>
<status status="PASS" starttime="20220705 07:22:17.657" endtime="20220705 07:22:18.042"/>
</kw>
<doc>Example Test with Trello API lists</doc>
<status status="PASS" starttime="20220705 07:22:15.851" endtime="20220705 07:22:18.042"/>
</suite>
<status status="PASS" starttime="20220705 07:22:00.657" endtime="20220705 07:22:18.045"/>
</suite>
<status status="PASS" starttime="20220705 07:22:00.639" endtime="20220705 07:22:18.047"/>
</suite>
<statistics>
<total>
<stat pass="18" fail="0" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="18" fail="0" skip="0">api</stat>
<stat pass="1" fail="0" skip="0">board.create</stat>
<stat pass="1" fail="0" skip="0">board.delete</stat>
<stat pass="1" fail="0" skip="0">board.get</stat>
<stat pass="2" fail="0" skip="0">board.update</stat>
<stat pass="1" fail="0" skip="0">card.close</stat>
<stat pass="1" fail="0" skip="0">card.create</stat>
<stat pass="1" fail="0" skip="0">card.delete</stat>
<stat pass="1" fail="0" skip="0">card.update</stat>
<stat pass="1" fail="0" skip="0">checklist.create</stat>
<stat pass="1" fail="0" skip="0">checklist.delete</stat>
<stat pass="1" fail="0" skip="0">checklist.update</stat>
<stat pass="1" fail="0" skip="0">label.create</stat>
<stat pass="1" fail="0" skip="0">label.delete</stat>
<stat pass="1" fail="0" skip="0">label.get</stat>
<stat pass="1" fail="0" skip="0">label.update</stat>
<stat pass="1" fail="0" skip="0">list.archive</stat>
<stat pass="1" fail="0" skip="0">list.create</stat>
<stat pass="1" fail="0" skip="0">list.update</stat>
<stat pass="5" fail="0" skip="0">regression</stat>
<stat pass="13" fail="0" skip="0">smoke</stat>
</tag>
<suite>
<stat pass="18" fail="0" skip="0" id="s1" name="Trello">Trello</stat>
<stat pass="18" fail="0" skip="0" id="s1-s1" name="Api">Trello.Api</stat>
<stat pass="5" fail="0" skip="0" id="s1-s1-s1" name="Trello Api Boards Tests">Trello.Api.Trello Api Boards Tests</stat>
<stat pass="4" fail="0" skip="0" id="s1-s1-s2" name="Trello Api Cards Tests">Trello.Api.Trello Api Cards Tests</stat>
<stat pass="3" fail="0" skip="0" id="s1-s1-s3" name="Trello Api Checklists Tests">Trello.Api.Trello Api Checklists Tests</stat>
<stat pass="3" fail="0" skip="0" id="s1-s1-s4" name="Trello Api Labels Tests">Trello.Api.Trello Api Labels Tests</stat>
<stat pass="3" fail="0" skip="0" id="s1-s1-s5" name="Trello Api Lists Tests">Trello.Api.Trello Api Lists Tests</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
