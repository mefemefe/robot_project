<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 5.0.1 (Python 3.10.5 on linux)" generated="20220708 04:28:44.527" rpa="false" schemaversion="3">
<suite id="s1" name="Trello" source="/trello">
<suite id="s1-s1" name="Api" source="/trello/api">
<suite id="s1-s1-s1" name="Trello Api Boards Tests" source="/trello/api/trello_api_boards_tests.robot">
<kw name="Create Trello Session" library="TrelloAPI" type="SETUP">
<doc>Creates a Trello Session</doc>
<kw name="Create Session" library="request_own_library">
<arg>${API_BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<status status="PASS" starttime="20220708 04:28:44.652" endtime="20220708 04:28:44.652"/>
</kw>
<status status="PASS" starttime="20220708 04:28:44.651" endtime="20220708 04:28:44.652"/>
</kw>
<test id="s1-s1-s1-t1" name="CREATE a board" line="9">
<kw name="Create A Board" library="Board">
<var>${response}</var>
<arg>NewBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220708 04:28:44.654" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220708 04:28:44.654" endtime="20220708 04:28:44.654"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220708 04:28:44.654" endtime="20220708 04:28:44.655"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220708 04:28:44.655" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220708 04:28:44.655" endtime="20220708 04:28:44.655"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220708 04:28:44.931" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 04:28:44.655" endtime="20220708 04:28:44.931"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 04:28:44.931" endtime="20220708 04:28:44.931"/>
</return>
<msg timestamp="20220708 04:28:44.931" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 04:28:44.654" endtime="20220708 04:28:44.931"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 04:28:44.931" endtime="20220708 04:28:44.931"/>
</return>
<msg timestamp="20220708 04:28:44.931" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 04:28:44.653" endtime="20220708 04:28:44.931"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>board</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220708 04:28:44.932" endtime="20220708 04:28:44.936"/>
</kw>
<status status="PASS" starttime="20220708 04:28:44.931" endtime="20220708 04:28:44.936"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${response.json()}[id]</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${response.json()}[id]</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220708 04:28:44.938" level="INFO">${url} = boards/62c7b27cbdfad44487b0b5cc</msg>
<status status="PASS" starttime="20220708 04:28:44.938" endtime="20220708 04:28:44.938"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220708 04:28:45.316" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 04:28:44.938" endtime="20220708 04:28:45.316"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 04:28:45.316" endtime="20220708 04:28:45.316"/>
</return>
<msg timestamp="20220708 04:28:45.316" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 04:28:44.937" endtime="20220708 04:28:45.316"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 04:28:45.316" endtime="20220708 04:28:45.316"/>
</return>
<status status="PASS" starttime="20220708 04:28:44.937" endtime="20220708 04:28:45.316"/>
</kw>
<status status="PASS" starttime="20220708 04:28:44.936" endtime="20220708 04:28:45.316"/>
</kw>
<doc>Verify that a board can be create through API</doc>
<tag>api</tag>
<tag>board.create</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220708 04:28:44.653" endtime="20220708 04:28:45.316"/>
</test>
<test id="s1-s1-s1-t2" name="UPDATE a Board's name" line="16">
<kw name="Create A Board" library="Board">
<var>${response}</var>
<arg>NewBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220708 04:28:45.318" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220708 04:28:45.318" endtime="20220708 04:28:45.318"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220708 04:28:45.319" endtime="20220708 04:28:45.319"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220708 04:28:45.319" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220708 04:28:45.319" endtime="20220708 04:28:45.319"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220708 04:28:45.539" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 04:28:45.320" endtime="20220708 04:28:45.539"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 04:28:45.539" endtime="20220708 04:28:45.539"/>
</return>
<msg timestamp="20220708 04:28:45.539" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 04:28:45.318" endtime="20220708 04:28:45.539"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 04:28:45.539" endtime="20220708 04:28:45.539"/>
</return>
<msg timestamp="20220708 04:28:45.540" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 04:28:45.317" endtime="20220708 04:28:45.540"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>board</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220708 04:28:45.540" endtime="20220708 04:28:45.544"/>
</kw>
<status status="PASS" starttime="20220708 04:28:45.540" endtime="20220708 04:28:45.544"/>
</kw>
<kw name="Update A Board" library="Board">
<arg>${response.json()}[id]</arg>
<arg>name</arg>
<arg>NewName</arg>
<doc>Updates the board with the given ID
optional_args: name, desc, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220708 04:28:45.545" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220708 04:28:45.545" endtime="20220708 04:28:45.545"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220708 04:28:45.546" endtime="20220708 04:28:45.546"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220708 04:28:45.546" level="INFO">${url} = boards/62c7b27df7d2cb4dcc79dcb6</msg>
<status status="PASS" starttime="20220708 04:28:45.546" endtime="20220708 04:28:45.546"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220708 04:28:45.652" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 04:28:45.546" endtime="20220708 04:28:45.652"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 04:28:45.652" endtime="20220708 04:28:45.653"/>
</return>
<msg timestamp="20220708 04:28:45.653" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 04:28:45.545" endtime="20220708 04:28:45.653"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 04:28:45.653" endtime="20220708 04:28:45.653"/>
</return>
<status status="PASS" starttime="20220708 04:28:45.544" endtime="20220708 04:28:45.653"/>
</kw>
<kw name="Get A Board" library="Board">
<var>${new_response}</var>
<arg>${response.json()}[id]</arg>
<doc>Gets the Board with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220708 04:28:45.655" level="INFO">${url} = boards/62c7b27df7d2cb4dcc79dcb6</msg>
<status status="PASS" starttime="20220708 04:28:45.654" endtime="20220708 04:28:45.655"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220708 04:28:45.706" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 04:28:45.655" endtime="20220708 04:28:45.706"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 04:28:45.706" endtime="20220708 04:28:45.706"/>
</return>
<msg timestamp="20220708 04:28:45.706" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 04:28:45.654" endtime="20220708 04:28:45.706"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 04:28:45.706" endtime="20220708 04:28:45.706"/>
</return>
<msg timestamp="20220708 04:28:45.706" level="INFO">${new_response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 04:28:45.653" endtime="20220708 04:28:45.706"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${new_response}</arg>
<arg>board</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220708 04:28:45.707" endtime="20220708 04:28:45.710"/>
</kw>
<status status="PASS" starttime="20220708 04:28:45.706" endtime="20220708 04:28:45.710"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${new_response.json()}[name]</arg>
<arg>NewName</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220708 04:28:45.711" endtime="20220708 04:28:45.711"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${response.json()}[id]</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${response.json()}[id]</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220708 04:28:45.713" level="INFO">${url} = boards/62c7b27df7d2cb4dcc79dcb6</msg>
<status status="PASS" starttime="20220708 04:28:45.713" endtime="20220708 04:28:45.713"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220708 04:28:46.090" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 04:28:45.714" endtime="20220708 04:28:46.090"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 04:28:46.090" endtime="20220708 04:28:46.091"/>
</return>
<msg timestamp="20220708 04:28:46.091" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 04:28:45.712" endtime="20220708 04:28:46.091"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 04:28:46.091" endtime="20220708 04:28:46.091"/>
</return>
<status status="PASS" starttime="20220708 04:28:45.712" endtime="20220708 04:28:46.091"/>
</kw>
<status status="PASS" starttime="20220708 04:28:45.711" endtime="20220708 04:28:46.091"/>
</kw>
<doc>Verify that a board's name can be updated through API</doc>
<tag>api</tag>
<tag>board.update</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220708 04:28:45.317" endtime="20220708 04:28:46.091"/>
</test>
<test id="s1-s1-s1-t3" name="DELETE A Board" line="27">
<kw name="Create A Board" library="Board">
<var>${response}</var>
<arg>NewBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220708 04:28:46.093" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220708 04:28:46.093" endtime="20220708 04:28:46.093"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220708 04:28:46.093" endtime="20220708 04:28:46.093"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220708 04:28:46.094" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220708 04:28:46.093" endtime="20220708 04:28:46.094"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220708 04:28:46.309" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 04:28:46.094" endtime="20220708 04:28:46.309"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 04:28:46.309" endtime="20220708 04:28:46.309"/>
</return>
<msg timestamp="20220708 04:28:46.309" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 04:28:46.092" endtime="20220708 04:28:46.309"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 04:28:46.309" endtime="20220708 04:28:46.309"/>
</return>
<msg timestamp="20220708 04:28:46.309" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 04:28:46.092" endtime="20220708 04:28:46.310"/>
</kw>
<kw name="Delete A Board" library="Board">
<arg>${response.json()}[id]</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220708 04:28:46.311" level="INFO">${url} = boards/62c7b27ebe39a2712268e6c7</msg>
<status status="PASS" starttime="20220708 04:28:46.311" endtime="20220708 04:28:46.311"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220708 04:28:48.377" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 04:28:46.311" endtime="20220708 04:28:48.377"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 04:28:48.377" endtime="20220708 04:28:48.377"/>
</return>
<msg timestamp="20220708 04:28:48.377" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 04:28:46.310" endtime="20220708 04:28:48.377"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 04:28:48.377" endtime="20220708 04:28:48.377"/>
</return>
<status status="PASS" starttime="20220708 04:28:46.310" endtime="20220708 04:28:48.377"/>
</kw>
<kw name="Get A Board" library="Board">
<arg>${response.json()}[id]</arg>
<arg>status_code=404</arg>
<doc>Gets the Board with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220708 04:28:48.379" level="INFO">${url} = boards/62c7b27ebe39a2712268e6c7</msg>
<status status="PASS" starttime="20220708 04:28:48.379" endtime="20220708 04:28:48.379"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220708 04:28:48.422" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220708 04:28:48.379" endtime="20220708 04:28:48.422"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 04:28:48.422" endtime="20220708 04:28:48.422"/>
</return>
<msg timestamp="20220708 04:28:48.422" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220708 04:28:48.378" endtime="20220708 04:28:48.422"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 04:28:48.422" endtime="20220708 04:28:48.422"/>
</return>
<status status="PASS" starttime="20220708 04:28:48.378" endtime="20220708 04:28:48.422"/>
</kw>
<doc>Verify that a board can be deleted through API</doc>
<tag>api</tag>
<tag>board.delete</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220708 04:28:46.091" endtime="20220708 04:28:48.423"/>
</test>
<test id="s1-s1-s1-t4" name="GET Information of A Board" line="34">
<kw name="Create A Board" library="Board">
<var>${response}</var>
<arg>BoardTest</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220708 04:28:48.424" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220708 04:28:48.424" endtime="20220708 04:28:48.424"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220708 04:28:48.424" endtime="20220708 04:28:48.425"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220708 04:28:48.425" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220708 04:28:48.425" endtime="20220708 04:28:48.425"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220708 04:28:48.626" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 04:28:48.425" endtime="20220708 04:28:48.626"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 04:28:48.626" endtime="20220708 04:28:48.626"/>
</return>
<msg timestamp="20220708 04:28:48.626" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 04:28:48.424" endtime="20220708 04:28:48.626"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 04:28:48.626" endtime="20220708 04:28:48.626"/>
</return>
<msg timestamp="20220708 04:28:48.627" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 04:28:48.423" endtime="20220708 04:28:48.627"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>board</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220708 04:28:48.627" endtime="20220708 04:28:48.631"/>
</kw>
<status status="PASS" starttime="20220708 04:28:48.627" endtime="20220708 04:28:48.631"/>
</kw>
<kw name="Get A Board" library="Board">
<var>${response2}</var>
<arg>${response.json()}[id]</arg>
<doc>Gets the Board with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220708 04:28:48.633" level="INFO">${url} = boards/62c7b2805259eb0700e843fe</msg>
<status status="PASS" starttime="20220708 04:28:48.632" endtime="20220708 04:28:48.633"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220708 04:28:48.679" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 04:28:48.633" endtime="20220708 04:28:48.679"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 04:28:48.679" endtime="20220708 04:28:48.679"/>
</return>
<msg timestamp="20220708 04:28:48.679" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 04:28:48.632" endtime="20220708 04:28:48.679"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 04:28:48.679" endtime="20220708 04:28:48.679"/>
</return>
<msg timestamp="20220708 04:28:48.679" level="INFO">${response2} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 04:28:48.631" endtime="20220708 04:28:48.679"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response2}</arg>
<arg>board</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220708 04:28:48.680" endtime="20220708 04:28:48.683"/>
</kw>
<status status="PASS" starttime="20220708 04:28:48.680" endtime="20220708 04:28:48.684"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${response2.json()}[name]</arg>
<arg>BoardTest</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220708 04:28:48.684" endtime="20220708 04:28:48.684"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${response.json()}[id]</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${response.json()}[id]</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220708 04:28:48.686" level="INFO">${url} = boards/62c7b2805259eb0700e843fe</msg>
<status status="PASS" starttime="20220708 04:28:48.686" endtime="20220708 04:28:48.686"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220708 04:28:49.128" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 04:28:48.686" endtime="20220708 04:28:49.128"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 04:28:49.128" endtime="20220708 04:28:49.128"/>
</return>
<msg timestamp="20220708 04:28:49.128" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 04:28:48.685" endtime="20220708 04:28:49.128"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 04:28:49.128" endtime="20220708 04:28:49.128"/>
</return>
<status status="PASS" starttime="20220708 04:28:48.685" endtime="20220708 04:28:49.128"/>
</kw>
<status status="PASS" starttime="20220708 04:28:48.684" endtime="20220708 04:28:49.128"/>
</kw>
<doc>Verify that a board's information can be accesed through API</doc>
<tag>api</tag>
<tag>board.get</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220708 04:28:48.423" endtime="20220708 04:28:49.128"/>
</test>
<test id="s1-s1-s1-t5" name="UPDATE a Board's description" line="45">
<kw name="Create A Board" library="Board">
<var>${response}</var>
<arg>NewBoardForTest</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220708 04:28:49.130" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220708 04:28:49.130" endtime="20220708 04:28:49.130"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220708 04:28:49.130" endtime="20220708 04:28:49.130"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220708 04:28:49.131" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220708 04:28:49.131" endtime="20220708 04:28:49.131"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220708 04:28:49.313" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 04:28:49.131" endtime="20220708 04:28:49.314"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 04:28:49.314" endtime="20220708 04:28:49.314"/>
</return>
<msg timestamp="20220708 04:28:49.314" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 04:28:49.129" endtime="20220708 04:28:49.314"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 04:28:49.314" endtime="20220708 04:28:49.314"/>
</return>
<msg timestamp="20220708 04:28:49.314" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 04:28:49.129" endtime="20220708 04:28:49.314"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>board</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220708 04:28:49.315" endtime="20220708 04:28:49.318"/>
</kw>
<status status="PASS" starttime="20220708 04:28:49.314" endtime="20220708 04:28:49.319"/>
</kw>
<kw name="Update A Board" library="Board">
<arg>${response.json()}[id]</arg>
<arg>desc</arg>
<arg>sampleDescription</arg>
<doc>Updates the board with the given ID
optional_args: name, desc, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220708 04:28:49.320" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220708 04:28:49.320" endtime="20220708 04:28:49.320"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220708 04:28:49.320" endtime="20220708 04:28:49.320"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220708 04:28:49.321" level="INFO">${url} = boards/62c7b28155f92b88924c693d</msg>
<status status="PASS" starttime="20220708 04:28:49.320" endtime="20220708 04:28:49.321"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220708 04:28:49.419" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 04:28:49.321" endtime="20220708 04:28:49.419"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 04:28:49.419" endtime="20220708 04:28:49.419"/>
</return>
<msg timestamp="20220708 04:28:49.419" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 04:28:49.319" endtime="20220708 04:28:49.419"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 04:28:49.419" endtime="20220708 04:28:49.419"/>
</return>
<status status="PASS" starttime="20220708 04:28:49.319" endtime="20220708 04:28:49.420"/>
</kw>
<kw name="Get A Board" library="Board">
<var>${new_response}</var>
<arg>${response.json()}[id]</arg>
<doc>Gets the Board with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220708 04:28:49.421" level="INFO">${url} = boards/62c7b28155f92b88924c693d</msg>
<status status="PASS" starttime="20220708 04:28:49.421" endtime="20220708 04:28:49.421"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220708 04:28:49.471" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 04:28:49.421" endtime="20220708 04:28:49.471"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 04:28:49.471" endtime="20220708 04:28:49.471"/>
</return>
<msg timestamp="20220708 04:28:49.472" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 04:28:49.421" endtime="20220708 04:28:49.472"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 04:28:49.472" endtime="20220708 04:28:49.472"/>
</return>
<msg timestamp="20220708 04:28:49.472" level="INFO">${new_response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 04:28:49.420" endtime="20220708 04:28:49.472"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${new_response.json()}[desc]</arg>
<arg>sampleDescription</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220708 04:28:49.472" endtime="20220708 04:28:49.473"/>
</kw>
<kw name="Update A Board" library="Board">
<arg>${response.json()}[id]</arg>
<arg>desc</arg>
<arg>updatedDescription</arg>
<doc>Updates the board with the given ID
optional_args: name, desc, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220708 04:28:49.474" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220708 04:28:49.474" endtime="20220708 04:28:49.474"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220708 04:28:49.474" endtime="20220708 04:28:49.475"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220708 04:28:49.475" level="INFO">${url} = boards/62c7b28155f92b88924c693d</msg>
<status status="PASS" starttime="20220708 04:28:49.475" endtime="20220708 04:28:49.475"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220708 04:28:49.575" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 04:28:49.475" endtime="20220708 04:28:49.575"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 04:28:49.575" endtime="20220708 04:28:49.575"/>
</return>
<msg timestamp="20220708 04:28:49.575" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 04:28:49.473" endtime="20220708 04:28:49.575"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 04:28:49.575" endtime="20220708 04:28:49.575"/>
</return>
<status status="PASS" starttime="20220708 04:28:49.473" endtime="20220708 04:28:49.575"/>
</kw>
<kw name="Get A Board" library="Board">
<var>${new_response2}</var>
<arg>${response.json()}[id]</arg>
<doc>Gets the Board with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220708 04:28:49.577" level="INFO">${url} = boards/62c7b28155f92b88924c693d</msg>
<status status="PASS" starttime="20220708 04:28:49.577" endtime="20220708 04:28:49.577"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220708 04:28:49.629" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 04:28:49.577" endtime="20220708 04:28:49.629"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 04:28:49.629" endtime="20220708 04:28:49.629"/>
</return>
<msg timestamp="20220708 04:28:49.629" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 04:28:49.576" endtime="20220708 04:28:49.629"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 04:28:49.629" endtime="20220708 04:28:49.629"/>
</return>
<msg timestamp="20220708 04:28:49.629" level="INFO">${new_response2} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 04:28:49.575" endtime="20220708 04:28:49.629"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${new_response2.json()}[desc]</arg>
<arg>updatedDescription</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220708 04:28:49.629" endtime="20220708 04:28:49.630"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${response.json()}[id]</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${response.json()}[id]</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220708 04:28:49.632" level="INFO">${url} = boards/62c7b28155f92b88924c693d</msg>
<status status="PASS" starttime="20220708 04:28:49.632" endtime="20220708 04:28:49.632"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220708 04:28:50.017" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 04:28:49.632" endtime="20220708 04:28:50.017"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 04:28:50.017" endtime="20220708 04:28:50.017"/>
</return>
<msg timestamp="20220708 04:28:50.017" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 04:28:49.631" endtime="20220708 04:28:50.017"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 04:28:50.017" endtime="20220708 04:28:50.017"/>
</return>
<status status="PASS" starttime="20220708 04:28:49.631" endtime="20220708 04:28:50.017"/>
</kw>
<status status="PASS" starttime="20220708 04:28:49.630" endtime="20220708 04:28:50.017"/>
</kw>
<doc>Verify that a board's description can be updated through API</doc>
<tag>api</tag>
<tag>board.update</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220708 04:28:49.129" endtime="20220708 04:28:50.017"/>
</test>
<kw name="Delete All Sessions" library="request_own_library" type="TEARDOWN">
<status status="PASS" starttime="20220708 04:28:50.018" endtime="20220708 04:28:50.019"/>
</kw>
<doc>Example Test with Trello API Boards</doc>
<status status="PASS" starttime="20220708 04:28:44.547" endtime="20220708 04:28:50.019"/>
</suite>
<suite id="s1-s1-s2" name="Trello Api Cards Tests" source="/trello/api/trello_api_cards_tests.robot">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Create Trello Session</arg>
<arg>Setup Board And List</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Create Trello Session" library="TrelloAPI">
<doc>Creates a Trello Session</doc>
<kw name="Create Session" library="request_own_library">
<arg>${API_BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<status status="PASS" starttime="20220708 04:28:50.031" endtime="20220708 04:28:50.032"/>
</kw>
<status status="PASS" starttime="20220708 04:28:50.031" endtime="20220708 04:28:50.032"/>
</kw>
<kw name="Setup Board And List">
<doc>Create a board and save its ID and its first list's ID</doc>
<kw name="Create A Board" library="Board">
<var>${BOARD}</var>
<arg>TestBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220708 04:28:50.033" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220708 04:28:50.033" endtime="20220708 04:28:50.033"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220708 04:28:50.033" endtime="20220708 04:28:50.033"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220708 04:28:50.034" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220708 04:28:50.033" endtime="20220708 04:28:50.034"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220708 04:28:50.270" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 04:28:50.034" endtime="20220708 04:28:50.270"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 04:28:50.270" endtime="20220708 04:28:50.270"/>
</return>
<msg timestamp="20220708 04:28:50.270" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 04:28:50.032" endtime="20220708 04:28:50.270"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 04:28:50.270" endtime="20220708 04:28:50.270"/>
</return>
<msg timestamp="20220708 04:28:50.270" level="INFO">${BOARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 04:28:50.032" endtime="20220708 04:28:50.270"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_BOARD_ID}</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220708 04:28:50.271" level="INFO">${TEST_SUITE_BOARD_ID} = 62c7b2829ccb9c462cf25820</msg>
<status status="PASS" starttime="20220708 04:28:50.271" endtime="20220708 04:28:50.271"/>
</kw>
<kw name="Get Lists On A Board" library="Board">
<var>${LISTS}</var>
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Get all the lists in a board</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>lists_on_board</arg>
<arg>${id}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220708 04:28:50.272" level="INFO">${url} = boards/62c7b2829ccb9c462cf25820/lists/</msg>
<status status="PASS" starttime="20220708 04:28:50.272" endtime="20220708 04:28:50.272"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220708 04:28:50.342" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 04:28:50.272" endtime="20220708 04:28:50.342"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 04:28:50.342" endtime="20220708 04:28:50.342"/>
</return>
<msg timestamp="20220708 04:28:50.342" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 04:28:50.272" endtime="20220708 04:28:50.342"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 04:28:50.342" endtime="20220708 04:28:50.342"/>
</return>
<msg timestamp="20220708 04:28:50.342" level="INFO">${LISTS} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 04:28:50.271" endtime="20220708 04:28:50.342"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_LIST_ID}</arg>
<arg>${LISTS.json()}[0][id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220708 04:28:50.343" level="INFO">${TEST_SUITE_LIST_ID} = 62c7b2829ccb9c462cf25827</msg>
<status status="PASS" starttime="20220708 04:28:50.343" endtime="20220708 04:28:50.343"/>
</kw>
<status status="PASS" starttime="20220708 04:28:50.032" endtime="20220708 04:28:50.343"/>
</kw>
<status status="PASS" starttime="20220708 04:28:50.031" endtime="20220708 04:28:50.343"/>
</kw>
<test id="s1-s1-s2-t1" name="Verify A Card Can Be Created" line="13">
<kw name="Create A Card" library="Card">
<var>${response}</var>
<arg>name</arg>
<arg>RFCard2</arg>
<doc>Creates a new card in the given list.
required_args: listId
optional_args: name, desc, pos, idCardSource, idLabels, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>@{optional_args}</arg>
<arg>idList</arg>
<arg>${idList}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220708 04:28:50.345" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220708 04:28:50.345" endtime="20220708 04:28:50.345"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220708 04:28:50.345" endtime="20220708 04:28:50.346"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220708 04:28:50.346" level="INFO">${url} = cards/</msg>
<status status="PASS" starttime="20220708 04:28:50.346" endtime="20220708 04:28:50.346"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220708 04:28:50.512" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 04:28:50.347" endtime="20220708 04:28:50.512"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 04:28:50.512" endtime="20220708 04:28:50.513"/>
</return>
<msg timestamp="20220708 04:28:50.513" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 04:28:50.345" endtime="20220708 04:28:50.513"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 04:28:50.513" endtime="20220708 04:28:50.513"/>
</return>
<msg timestamp="20220708 04:28:50.513" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 04:28:50.344" endtime="20220708 04:28:50.513"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>card</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220708 04:28:50.513" endtime="20220708 04:28:50.518"/>
</kw>
<status status="PASS" starttime="20220708 04:28:50.513" endtime="20220708 04:28:50.518"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220708 04:28:50.519" endtime="20220708 04:28:50.519"/>
</return>
<msg timestamp="20220708 04:28:50.519" level="INFO">${CARD_ID} = 62c7b2822189315e07e08cda</msg>
<status status="PASS" starttime="20220708 04:28:50.519" endtime="20220708 04:28:50.520"/>
</kw>
<kw name="Get A Card" library="Card">
<var>${response}</var>
<arg>${CARD_ID}</arg>
<doc>Gets the card with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220708 04:28:50.521" level="INFO">${url} = cards/62c7b2822189315e07e08cda</msg>
<status status="PASS" starttime="20220708 04:28:50.520" endtime="20220708 04:28:50.521"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220708 04:28:50.580" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 04:28:50.521" endtime="20220708 04:28:50.580"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 04:28:50.580" endtime="20220708 04:28:50.580"/>
</return>
<msg timestamp="20220708 04:28:50.580" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 04:28:50.520" endtime="20220708 04:28:50.580"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 04:28:50.580" endtime="20220708 04:28:50.580"/>
</return>
<msg timestamp="20220708 04:28:50.580" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 04:28:50.520" endtime="20220708 04:28:50.580"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_NAME}</var>
<arg>${response}</arg>
<arg>name</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220708 04:28:50.581" endtime="20220708 04:28:50.581"/>
</return>
<msg timestamp="20220708 04:28:50.581" level="INFO">${CARD_NAME} = RFCard2</msg>
<status status="PASS" starttime="20220708 04:28:50.580" endtime="20220708 04:28:50.581"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${CARD_NAME}</arg>
<arg>RFCard2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220708 04:28:50.582" endtime="20220708 04:28:50.582"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Card</arg>
<arg>${CARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Card" library="Card">
<arg>${CARD_ID}</arg>
<doc>Deletes the card with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220708 04:28:50.583" level="INFO">${url} = cards/62c7b2822189315e07e08cda</msg>
<status status="PASS" starttime="20220708 04:28:50.583" endtime="20220708 04:28:50.583"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220708 04:28:50.729" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 04:28:50.583" endtime="20220708 04:28:50.729"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 04:28:50.729" endtime="20220708 04:28:50.730"/>
</return>
<msg timestamp="20220708 04:28:50.730" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 04:28:50.583" endtime="20220708 04:28:50.730"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 04:28:50.730" endtime="20220708 04:28:50.730"/>
</return>
<status status="PASS" starttime="20220708 04:28:50.582" endtime="20220708 04:28:50.730"/>
</kw>
<status status="PASS" starttime="20220708 04:28:50.582" endtime="20220708 04:28:50.730"/>
</kw>
<doc>Verify that a card can be created through API</doc>
<tag>api</tag>
<tag>card.create</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220708 04:28:50.344" endtime="20220708 04:28:50.730"/>
</test>
<test id="s1-s1-s2-t2" name="Verify A Card Can Be Closed" line="24">
<kw name="Create A Card" library="Card">
<var>${response}</var>
<doc>Creates a new card in the given list.
required_args: listId
optional_args: name, desc, pos, idCardSource, idLabels, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>@{optional_args}</arg>
<arg>idList</arg>
<arg>${idList}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220708 04:28:50.733" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220708 04:28:50.732" endtime="20220708 04:28:50.733"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220708 04:28:50.733" endtime="20220708 04:28:50.733"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220708 04:28:50.734" level="INFO">${url} = cards/</msg>
<status status="PASS" starttime="20220708 04:28:50.733" endtime="20220708 04:28:50.734"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220708 04:28:50.876" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 04:28:50.734" endtime="20220708 04:28:50.876"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 04:28:50.876" endtime="20220708 04:28:50.876"/>
</return>
<msg timestamp="20220708 04:28:50.876" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 04:28:50.732" endtime="20220708 04:28:50.876"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 04:28:50.876" endtime="20220708 04:28:50.876"/>
</return>
<msg timestamp="20220708 04:28:50.876" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 04:28:50.731" endtime="20220708 04:28:50.876"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220708 04:28:50.877" endtime="20220708 04:28:50.877"/>
</return>
<msg timestamp="20220708 04:28:50.877" level="INFO">${CARD_ID} = 62c7b2829a132e4ef43827be</msg>
<status status="PASS" starttime="20220708 04:28:50.876" endtime="20220708 04:28:50.877"/>
</kw>
<kw name="Archive A Card" library="Card">
<arg>${CARD_ID}</arg>
<doc>Modifies the card status to closed.</doc>
<kw name="Update A Card" library="Card">
<var>${response}</var>
<arg>${id}</arg>
<arg>closed</arg>
<arg>true</arg>
<arg>status_code=${status_code}</arg>
<doc>Updates the card with the given ID
optional_args: name, desc, closed, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<arg>status_code=${status_code}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220708 04:28:50.879" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220708 04:28:50.879" endtime="20220708 04:28:50.879"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220708 04:28:50.879" endtime="20220708 04:28:50.880"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220708 04:28:50.880" level="INFO">${url} = cards/62c7b2829a132e4ef43827be</msg>
<status status="PASS" starttime="20220708 04:28:50.880" endtime="20220708 04:28:50.880"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220708 04:28:51.017" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 04:28:50.880" endtime="20220708 04:28:51.017"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 04:28:51.017" endtime="20220708 04:28:51.018"/>
</return>
<msg timestamp="20220708 04:28:51.018" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 04:28:50.879" endtime="20220708 04:28:51.018"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 04:28:51.018" endtime="20220708 04:28:51.018"/>
</return>
<msg timestamp="20220708 04:28:51.018" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 04:28:50.878" endtime="20220708 04:28:51.018"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 04:28:51.018" endtime="20220708 04:28:51.018"/>
</return>
<status status="PASS" starttime="20220708 04:28:50.877" endtime="20220708 04:28:51.018"/>
</kw>
<kw name="Get A Card" library="Card">
<var>${response}</var>
<arg>${CARD_ID}</arg>
<doc>Gets the card with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220708 04:28:51.019" level="INFO">${url} = cards/62c7b2829a132e4ef43827be</msg>
<status status="PASS" starttime="20220708 04:28:51.019" endtime="20220708 04:28:51.019"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220708 04:28:51.081" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 04:28:51.020" endtime="20220708 04:28:51.081"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 04:28:51.081" endtime="20220708 04:28:51.081"/>
</return>
<msg timestamp="20220708 04:28:51.082" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 04:28:51.019" endtime="20220708 04:28:51.082"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 04:28:51.082" endtime="20220708 04:28:51.082"/>
</return>
<msg timestamp="20220708 04:28:51.082" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 04:28:51.018" endtime="20220708 04:28:51.082"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_CLOSED}</var>
<arg>${response}</arg>
<arg>closed</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220708 04:28:51.082" endtime="20220708 04:28:51.082"/>
</return>
<msg timestamp="20220708 04:28:51.083" level="INFO">${CARD_CLOSED} = True</msg>
<status status="PASS" starttime="20220708 04:28:51.082" endtime="20220708 04:28:51.083"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${CARD_CLOSED}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220708 04:28:51.083" endtime="20220708 04:28:51.084"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Card</arg>
<arg>${CARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Card" library="Card">
<arg>${CARD_ID}</arg>
<doc>Deletes the card with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220708 04:28:51.085" level="INFO">${url} = cards/62c7b2829a132e4ef43827be</msg>
<status status="PASS" starttime="20220708 04:28:51.085" endtime="20220708 04:28:51.085"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220708 04:28:51.266" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 04:28:51.085" endtime="20220708 04:28:51.266"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 04:28:51.266" endtime="20220708 04:28:51.266"/>
</return>
<msg timestamp="20220708 04:28:51.267" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 04:28:51.084" endtime="20220708 04:28:51.267"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 04:28:51.267" endtime="20220708 04:28:51.267"/>
</return>
<status status="PASS" starttime="20220708 04:28:51.084" endtime="20220708 04:28:51.267"/>
</kw>
<status status="PASS" starttime="20220708 04:28:51.084" endtime="20220708 04:28:51.267"/>
</kw>
<doc>Verify that a card can be closed through API</doc>
<tag>api</tag>
<tag>card.close</tag>
<tag>regression</tag>
<status status="PASS" starttime="20220708 04:28:50.730" endtime="20220708 04:28:51.267"/>
</test>
<test id="s1-s1-s2-t3" name="Verify A Card Can Be Deleted" line="35">
<kw name="Create A Card" library="Card">
<var>${response}</var>
<doc>Creates a new card in the given list.
required_args: listId
optional_args: name, desc, pos, idCardSource, idLabels, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>@{optional_args}</arg>
<arg>idList</arg>
<arg>${idList}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220708 04:28:51.270" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220708 04:28:51.269" endtime="20220708 04:28:51.270"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220708 04:28:51.270" endtime="20220708 04:28:51.270"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220708 04:28:51.271" level="INFO">${url} = cards/</msg>
<status status="PASS" starttime="20220708 04:28:51.270" endtime="20220708 04:28:51.271"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220708 04:28:51.411" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 04:28:51.271" endtime="20220708 04:28:51.412"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 04:28:51.412" endtime="20220708 04:28:51.412"/>
</return>
<msg timestamp="20220708 04:28:51.412" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 04:28:51.269" endtime="20220708 04:28:51.412"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 04:28:51.412" endtime="20220708 04:28:51.412"/>
</return>
<msg timestamp="20220708 04:28:51.412" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 04:28:51.268" endtime="20220708 04:28:51.412"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220708 04:28:51.413" endtime="20220708 04:28:51.413"/>
</return>
<msg timestamp="20220708 04:28:51.413" level="INFO">${CARD_ID} = 62c7b283e22a5588a2321413</msg>
<status status="PASS" starttime="20220708 04:28:51.412" endtime="20220708 04:28:51.413"/>
</kw>
<kw name="Delete A Card" library="Card">
<var>${response}</var>
<arg>${CARD_ID}</arg>
<doc>Deletes the card with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220708 04:28:51.415" level="INFO">${url} = cards/62c7b283e22a5588a2321413</msg>
<status status="PASS" starttime="20220708 04:28:51.414" endtime="20220708 04:28:51.415"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220708 04:28:51.565" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 04:28:51.415" endtime="20220708 04:28:51.565"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 04:28:51.565" endtime="20220708 04:28:51.565"/>
</return>
<msg timestamp="20220708 04:28:51.565" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 04:28:51.414" endtime="20220708 04:28:51.565"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 04:28:51.565" endtime="20220708 04:28:51.565"/>
</return>
<msg timestamp="20220708 04:28:51.565" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 04:28:51.413" endtime="20220708 04:28:51.565"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>delete</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220708 04:28:51.566" endtime="20220708 04:28:51.568"/>
</kw>
<status status="PASS" starttime="20220708 04:28:51.565" endtime="20220708 04:28:51.568"/>
</kw>
<kw name="Get A Card" library="Card">
<arg>${CARD_ID}</arg>
<arg>status_code=404</arg>
<doc>Gets the card with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220708 04:28:51.569" level="INFO">${url} = cards/62c7b283e22a5588a2321413</msg>
<status status="PASS" starttime="20220708 04:28:51.569" endtime="20220708 04:28:51.569"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220708 04:28:51.611" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220708 04:28:51.569" endtime="20220708 04:28:51.611"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 04:28:51.611" endtime="20220708 04:28:51.611"/>
</return>
<msg timestamp="20220708 04:28:51.611" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220708 04:28:51.568" endtime="20220708 04:28:51.611"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 04:28:51.611" endtime="20220708 04:28:51.611"/>
</return>
<status status="PASS" starttime="20220708 04:28:51.568" endtime="20220708 04:28:51.611"/>
</kw>
<doc>Verify that a card can be deleted through API</doc>
<tag>api</tag>
<tag>card.delete</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220708 04:28:51.267" endtime="20220708 04:28:51.611"/>
</test>
<test id="s1-s1-s2-t4" name="Verify A Card Can Be Updated" line="44">
<kw name="Create A Card" library="Card">
<var>${response}</var>
<arg>name</arg>
<arg>RFCard4</arg>
<doc>Creates a new card in the given list.
required_args: listId
optional_args: name, desc, pos, idCardSource, idLabels, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>@{optional_args}</arg>
<arg>idList</arg>
<arg>${idList}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220708 04:28:51.614" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220708 04:28:51.613" endtime="20220708 04:28:51.614"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220708 04:28:51.614" endtime="20220708 04:28:51.614"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220708 04:28:51.615" level="INFO">${url} = cards/</msg>
<status status="PASS" starttime="20220708 04:28:51.614" endtime="20220708 04:28:51.615"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220708 04:28:51.827" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 04:28:51.615" endtime="20220708 04:28:51.827"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 04:28:51.827" endtime="20220708 04:28:51.827"/>
</return>
<msg timestamp="20220708 04:28:51.827" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 04:28:51.613" endtime="20220708 04:28:51.827"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 04:28:51.827" endtime="20220708 04:28:51.827"/>
</return>
<msg timestamp="20220708 04:28:51.828" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 04:28:51.613" endtime="20220708 04:28:51.828"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220708 04:28:51.828" endtime="20220708 04:28:51.828"/>
</return>
<msg timestamp="20220708 04:28:51.829" level="INFO">${CARD_ID} = 62c7b2830c7d988d08238986</msg>
<status status="PASS" starttime="20220708 04:28:51.828" endtime="20220708 04:28:51.829"/>
</kw>
<kw name="Update A Card" library="Card">
<var>${response}</var>
<arg>${CARD_ID}</arg>
<arg>name</arg>
<arg>RFCard5</arg>
<arg>desc</arg>
<arg>Description</arg>
<doc>Updates the card with the given ID
optional_args: name, desc, closed, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<arg>status_code=${status_code}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220708 04:28:51.830" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220708 04:28:51.830" endtime="20220708 04:28:51.830"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220708 04:28:51.830" endtime="20220708 04:28:51.830"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220708 04:28:51.831" level="INFO">${url} = cards/62c7b2830c7d988d08238986</msg>
<status status="PASS" starttime="20220708 04:28:51.830" endtime="20220708 04:28:51.831"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220708 04:28:51.970" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 04:28:51.831" endtime="20220708 04:28:51.970"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 04:28:51.971" endtime="20220708 04:28:51.971"/>
</return>
<msg timestamp="20220708 04:28:51.971" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 04:28:51.829" endtime="20220708 04:28:51.971"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 04:28:51.971" endtime="20220708 04:28:51.971"/>
</return>
<msg timestamp="20220708 04:28:51.971" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 04:28:51.829" endtime="20220708 04:28:51.971"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>card</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220708 04:28:51.972" endtime="20220708 04:28:51.977"/>
</kw>
<status status="PASS" starttime="20220708 04:28:51.971" endtime="20220708 04:28:51.977"/>
</kw>
<kw name="Get A Card" library="Card">
<var>${response}</var>
<arg>${CARD_ID}</arg>
<doc>Gets the card with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220708 04:28:51.978" level="INFO">${url} = cards/62c7b2830c7d988d08238986</msg>
<status status="PASS" starttime="20220708 04:28:51.978" endtime="20220708 04:28:51.978"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220708 04:28:52.039" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 04:28:51.978" endtime="20220708 04:28:52.039"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 04:28:52.039" endtime="20220708 04:28:52.039"/>
</return>
<msg timestamp="20220708 04:28:52.039" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 04:28:51.977" endtime="20220708 04:28:52.039"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 04:28:52.039" endtime="20220708 04:28:52.040"/>
</return>
<msg timestamp="20220708 04:28:52.040" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 04:28:51.977" endtime="20220708 04:28:52.040"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_NAME}</var>
<arg>${response}</arg>
<arg>name</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220708 04:28:52.040" endtime="20220708 04:28:52.040"/>
</return>
<msg timestamp="20220708 04:28:52.041" level="INFO">${CARD_NAME} = RFCard5</msg>
<status status="PASS" starttime="20220708 04:28:52.040" endtime="20220708 04:28:52.041"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_DESC}</var>
<arg>${response}</arg>
<arg>desc</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220708 04:28:52.041" endtime="20220708 04:28:52.041"/>
</return>
<msg timestamp="20220708 04:28:52.042" level="INFO">${CARD_DESC} = Description</msg>
<status status="PASS" starttime="20220708 04:28:52.041" endtime="20220708 04:28:52.042"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${CARD_NAME}</arg>
<arg>RFCard5</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220708 04:28:52.042" endtime="20220708 04:28:52.042"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${CARD_DESC}</arg>
<arg>Description</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220708 04:28:52.042" endtime="20220708 04:28:52.042"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Card</arg>
<arg>${CARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Card" library="Card">
<arg>${CARD_ID}</arg>
<doc>Deletes the card with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220708 04:28:52.044" level="INFO">${url} = cards/62c7b2830c7d988d08238986</msg>
<status status="PASS" starttime="20220708 04:28:52.044" endtime="20220708 04:28:52.044"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220708 04:28:52.194" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 04:28:52.044" endtime="20220708 04:28:52.194"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 04:28:52.194" endtime="20220708 04:28:52.195"/>
</return>
<msg timestamp="20220708 04:28:52.195" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 04:28:52.043" endtime="20220708 04:28:52.195"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 04:28:52.195" endtime="20220708 04:28:52.195"/>
</return>
<status status="PASS" starttime="20220708 04:28:52.043" endtime="20220708 04:28:52.195"/>
</kw>
<status status="PASS" starttime="20220708 04:28:52.043" endtime="20220708 04:28:52.195"/>
</kw>
<doc>Verify that a card's name and Description can be updated through API</doc>
<tag>api</tag>
<tag>card.update</tag>
<tag>regression</tag>
<status status="PASS" starttime="20220708 04:28:51.612" endtime="20220708 04:28:52.195"/>
</test>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Teardown Board</arg>
<arg>Delete All Sessions</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Teardown Board">
<doc>Delete the board created for this suite</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220708 04:28:52.198" level="INFO">${url} = boards/62c7b2829ccb9c462cf25820</msg>
<status status="PASS" starttime="20220708 04:28:52.198" endtime="20220708 04:28:52.198"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220708 04:28:52.555" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 04:28:52.198" endtime="20220708 04:28:52.555"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 04:28:52.555" endtime="20220708 04:28:52.555"/>
</return>
<msg timestamp="20220708 04:28:52.556" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 04:28:52.197" endtime="20220708 04:28:52.556"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 04:28:52.556" endtime="20220708 04:28:52.556"/>
</return>
<status status="PASS" starttime="20220708 04:28:52.197" endtime="20220708 04:28:52.556"/>
</kw>
<status status="PASS" starttime="20220708 04:28:52.196" endtime="20220708 04:28:52.556"/>
</kw>
<status status="PASS" starttime="20220708 04:28:52.196" endtime="20220708 04:28:52.556"/>
</kw>
<kw name="Delete All Sessions" library="request_own_library">
<status status="PASS" starttime="20220708 04:28:52.556" endtime="20220708 04:28:52.557"/>
</kw>
<status status="PASS" starttime="20220708 04:28:52.196" endtime="20220708 04:28:52.557"/>
</kw>
<doc>Example Test with Trello API Cards</doc>
<status status="PASS" starttime="20220708 04:28:50.020" endtime="20220708 04:28:52.557"/>
</suite>
<suite id="s1-s1-s3" name="Trello Api Checklists Tests" source="/trello/api/trello_api_checklists_tests.robot">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Create Trello Session</arg>
<arg>Setup Board, List And Card</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Create Trello Session" library="TrelloAPI">
<doc>Creates a Trello Session</doc>
<kw name="Create Session" library="request_own_library">
<arg>${API_BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<status status="PASS" starttime="20220708 04:28:52.567" endtime="20220708 04:28:52.568"/>
</kw>
<status status="PASS" starttime="20220708 04:28:52.567" endtime="20220708 04:28:52.568"/>
</kw>
<kw name="Setup Board, List And Card">
<doc>Create a board and save its ID and its first list's ID</doc>
<kw name="Create A Board" library="Board">
<var>${BOARD}</var>
<arg>TestBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220708 04:28:52.569" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220708 04:28:52.569" endtime="20220708 04:28:52.569"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220708 04:28:52.569" endtime="20220708 04:28:52.569"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220708 04:28:52.570" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220708 04:28:52.569" endtime="20220708 04:28:52.570"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220708 04:28:52.789" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 04:28:52.570" endtime="20220708 04:28:52.789"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 04:28:52.789" endtime="20220708 04:28:52.789"/>
</return>
<msg timestamp="20220708 04:28:52.790" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 04:28:52.568" endtime="20220708 04:28:52.790"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 04:28:52.790" endtime="20220708 04:28:52.790"/>
</return>
<msg timestamp="20220708 04:28:52.790" level="INFO">${BOARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 04:28:52.568" endtime="20220708 04:28:52.790"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_BOARD_ID}</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220708 04:28:52.791" level="INFO">${TEST_SUITE_BOARD_ID} = 62c7b2848e1ce945b22605dc</msg>
<status status="PASS" starttime="20220708 04:28:52.790" endtime="20220708 04:28:52.791"/>
</kw>
<kw name="Get Lists On A Board" library="Board">
<var>${LISTS}</var>
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Get all the lists in a board</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>lists_on_board</arg>
<arg>${id}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220708 04:28:52.792" level="INFO">${url} = boards/62c7b2848e1ce945b22605dc/lists/</msg>
<status status="PASS" starttime="20220708 04:28:52.792" endtime="20220708 04:28:52.792"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220708 04:28:52.842" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 04:28:52.792" endtime="20220708 04:28:52.842"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 04:28:52.842" endtime="20220708 04:28:52.842"/>
</return>
<msg timestamp="20220708 04:28:52.843" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 04:28:52.791" endtime="20220708 04:28:52.843"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 04:28:52.843" endtime="20220708 04:28:52.843"/>
</return>
<msg timestamp="20220708 04:28:52.843" level="INFO">${LISTS} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 04:28:52.791" endtime="20220708 04:28:52.843"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_LIST_ID}</arg>
<arg>${LISTS.json()}[0][id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220708 04:28:52.844" level="INFO">${TEST_SUITE_LIST_ID} = 62c7b2848e1ce945b22605e3</msg>
<status status="PASS" starttime="20220708 04:28:52.843" endtime="20220708 04:28:52.844"/>
</kw>
<kw name="Create A Card" library="Card">
<var>${CARD}</var>
<arg>name</arg>
<arg>TestCard</arg>
<doc>Creates a new card in the given list.
required_args: listId
optional_args: name, desc, pos, idCardSource, idLabels, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>@{optional_args}</arg>
<arg>idList</arg>
<arg>${idList}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220708 04:28:52.845" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220708 04:28:52.845" endtime="20220708 04:28:52.845"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220708 04:28:52.845" endtime="20220708 04:28:52.846"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220708 04:28:52.846" level="INFO">${url} = cards/</msg>
<status status="PASS" starttime="20220708 04:28:52.846" endtime="20220708 04:28:52.846"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220708 04:28:53.014" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 04:28:52.846" endtime="20220708 04:28:53.014"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 04:28:53.014" endtime="20220708 04:28:53.014"/>
</return>
<msg timestamp="20220708 04:28:53.015" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 04:28:52.845" endtime="20220708 04:28:53.015"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 04:28:53.015" endtime="20220708 04:28:53.015"/>
</return>
<msg timestamp="20220708 04:28:53.015" level="INFO">${CARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 04:28:52.844" endtime="20220708 04:28:53.015"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_CARD_ID}</arg>
<arg>${CARD.json()}[id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220708 04:28:53.016" level="INFO">${TEST_SUITE_CARD_ID} = 62c7b2848c1bcf1b8f53e95f</msg>
<status status="PASS" starttime="20220708 04:28:53.015" endtime="20220708 04:28:53.016"/>
</kw>
<status status="PASS" starttime="20220708 04:28:52.568" endtime="20220708 04:28:53.016"/>
</kw>
<status status="PASS" starttime="20220708 04:28:52.567" endtime="20220708 04:28:53.016"/>
</kw>
<test id="s1-s1-s3-t1" name="Verify A Checklist Can Be Created" line="14">
<kw name="Create A Checklist" library="Checklist">
<var>${response}</var>
<arg>name</arg>
<arg>TestChecklist</arg>
<arg>idCard=${TEST_SUITE_CARD_ID}</arg>
<doc>Creates a new checklist in the given card.
required_args: idCard
optional_args: name, pos, idChecklistSource
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>@{optional_args}</arg>
<arg>idCard</arg>
<arg>${idCard}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220708 04:28:53.018" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220708 04:28:53.018" endtime="20220708 04:28:53.018"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220708 04:28:53.018" endtime="20220708 04:28:53.018"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220708 04:28:53.019" level="INFO">${url} = checklists/</msg>
<status status="PASS" starttime="20220708 04:28:53.018" endtime="20220708 04:28:53.019"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220708 04:28:53.141" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 04:28:53.019" endtime="20220708 04:28:53.141"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 04:28:53.142" endtime="20220708 04:28:53.142"/>
</return>
<msg timestamp="20220708 04:28:53.142" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 04:28:53.017" endtime="20220708 04:28:53.142"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 04:28:53.142" endtime="20220708 04:28:53.142"/>
</return>
<msg timestamp="20220708 04:28:53.142" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 04:28:53.017" endtime="20220708 04:28:53.142"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${checklist_id}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220708 04:28:53.143" endtime="20220708 04:28:53.143"/>
</return>
<msg timestamp="20220708 04:28:53.143" level="INFO">${checklist_id} = 62c7b285f2c0994b01fb9836</msg>
<status status="PASS" starttime="20220708 04:28:53.142" endtime="20220708 04:28:53.143"/>
</kw>
<kw name="Get A Checklist" library="Checklist">
<var>${response}</var>
<arg>${checklist_id}</arg>
<doc>Gets the checklist with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220708 04:28:53.144" level="INFO">${url} = checklists/62c7b285f2c0994b01fb9836</msg>
<status status="PASS" starttime="20220708 04:28:53.144" endtime="20220708 04:28:53.144"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220708 04:28:53.204" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 04:28:53.144" endtime="20220708 04:28:53.204"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 04:28:53.204" endtime="20220708 04:28:53.204"/>
</return>
<msg timestamp="20220708 04:28:53.204" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 04:28:53.144" endtime="20220708 04:28:53.204"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 04:28:53.204" endtime="20220708 04:28:53.204"/>
</return>
<msg timestamp="20220708 04:28:53.204" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 04:28:53.143" endtime="20220708 04:28:53.204"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${checklist_name}</var>
<arg>${response}</arg>
<arg>name</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220708 04:28:53.205" endtime="20220708 04:28:53.205"/>
</return>
<msg timestamp="20220708 04:28:53.205" level="INFO">${checklist_name} = TestChecklist</msg>
<status status="PASS" starttime="20220708 04:28:53.205" endtime="20220708 04:28:53.205"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${checklist_name}</arg>
<arg>TestChecklist</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220708 04:28:53.206" endtime="20220708 04:28:53.206"/>
</kw>
<kw name="Delete A Checklist" library="Checklist" type="TEARDOWN">
<arg>${checklist_id}</arg>
<doc>Deletes the checklist with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220708 04:28:53.207" level="INFO">${url} = checklists/62c7b285f2c0994b01fb9836</msg>
<status status="PASS" starttime="20220708 04:28:53.207" endtime="20220708 04:28:53.207"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220708 04:28:53.313" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 04:28:53.207" endtime="20220708 04:28:53.313"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 04:28:53.313" endtime="20220708 04:28:53.313"/>
</return>
<msg timestamp="20220708 04:28:53.313" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 04:28:53.206" endtime="20220708 04:28:53.313"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 04:28:53.313" endtime="20220708 04:28:53.313"/>
</return>
<status status="PASS" starttime="20220708 04:28:53.206" endtime="20220708 04:28:53.313"/>
</kw>
<doc>Verify that a checklist can be created through API</doc>
<tag>api</tag>
<tag>checklist.create</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220708 04:28:53.016" endtime="20220708 04:28:53.313"/>
</test>
<test id="s1-s1-s3-t2" name="Verify A Checklist Can Be Deleted" line="24">
<kw name="Create A Checklist" library="Checklist">
<var>${response}</var>
<arg>name</arg>
<arg>TestChecklist</arg>
<arg>idCard=${TEST_SUITE_CARD_ID}</arg>
<doc>Creates a new checklist in the given card.
required_args: idCard
optional_args: name, pos, idChecklistSource
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>@{optional_args}</arg>
<arg>idCard</arg>
<arg>${idCard}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220708 04:28:53.316" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220708 04:28:53.315" endtime="20220708 04:28:53.316"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220708 04:28:53.316" endtime="20220708 04:28:53.316"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220708 04:28:53.317" level="INFO">${url} = checklists/</msg>
<status status="PASS" starttime="20220708 04:28:53.316" endtime="20220708 04:28:53.317"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220708 04:28:53.414" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 04:28:53.317" endtime="20220708 04:28:53.414"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 04:28:53.414" endtime="20220708 04:28:53.414"/>
</return>
<msg timestamp="20220708 04:28:53.414" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 04:28:53.315" endtime="20220708 04:28:53.414"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 04:28:53.414" endtime="20220708 04:28:53.414"/>
</return>
<msg timestamp="20220708 04:28:53.415" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 04:28:53.314" endtime="20220708 04:28:53.415"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${checklist_id}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220708 04:28:53.415" endtime="20220708 04:28:53.415"/>
</return>
<msg timestamp="20220708 04:28:53.416" level="INFO">${checklist_id} = 62c7b285fd713e79824f65c4</msg>
<status status="PASS" starttime="20220708 04:28:53.415" endtime="20220708 04:28:53.416"/>
</kw>
<kw name="Delete A Checklist" library="Checklist">
<var>${response}</var>
<arg>${checklist_id}</arg>
<doc>Deletes the checklist with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220708 04:28:53.417" level="INFO">${url} = checklists/62c7b285fd713e79824f65c4</msg>
<status status="PASS" starttime="20220708 04:28:53.417" endtime="20220708 04:28:53.417"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220708 04:28:53.529" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 04:28:53.417" endtime="20220708 04:28:53.529"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 04:28:53.529" endtime="20220708 04:28:53.529"/>
</return>
<msg timestamp="20220708 04:28:53.529" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 04:28:53.417" endtime="20220708 04:28:53.529"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 04:28:53.529" endtime="20220708 04:28:53.529"/>
</return>
<msg timestamp="20220708 04:28:53.529" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 04:28:53.416" endtime="20220708 04:28:53.529"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>delete</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220708 04:28:53.530" endtime="20220708 04:28:53.531"/>
</kw>
<status status="PASS" starttime="20220708 04:28:53.529" endtime="20220708 04:28:53.532"/>
</kw>
<kw name="Get A Checklist" library="Checklist">
<arg>${checklist_id}</arg>
<arg>status_code=404</arg>
<doc>Gets the checklist with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220708 04:28:53.533" level="INFO">${url} = checklists/62c7b285fd713e79824f65c4</msg>
<status status="PASS" starttime="20220708 04:28:53.533" endtime="20220708 04:28:53.533"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220708 04:28:53.569" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220708 04:28:53.533" endtime="20220708 04:28:53.569"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 04:28:53.569" endtime="20220708 04:28:53.569"/>
</return>
<msg timestamp="20220708 04:28:53.569" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220708 04:28:53.532" endtime="20220708 04:28:53.569"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 04:28:53.569" endtime="20220708 04:28:53.569"/>
</return>
<status status="PASS" starttime="20220708 04:28:53.532" endtime="20220708 04:28:53.569"/>
</kw>
<doc>Verify that a checklist can be deleted through API</doc>
<tag>api</tag>
<tag>checklist.delete</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220708 04:28:53.314" endtime="20220708 04:28:53.569"/>
</test>
<test id="s1-s1-s3-t3" name="Verify A Checklist Can Be Updated" line="33">
<kw name="Create A Checklist" library="Checklist">
<var>${response}</var>
<arg>name</arg>
<arg>TestChecklist</arg>
<arg>idCard=${TEST_SUITE_CARD_ID}</arg>
<doc>Creates a new checklist in the given card.
required_args: idCard
optional_args: name, pos, idChecklistSource
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>@{optional_args}</arg>
<arg>idCard</arg>
<arg>${idCard}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220708 04:28:53.572" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220708 04:28:53.571" endtime="20220708 04:28:53.572"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220708 04:28:53.573" endtime="20220708 04:28:53.573"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220708 04:28:53.574" level="INFO">${url} = checklists/</msg>
<status status="PASS" starttime="20220708 04:28:53.573" endtime="20220708 04:28:53.574"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220708 04:28:53.697" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 04:28:53.574" endtime="20220708 04:28:53.697"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 04:28:53.697" endtime="20220708 04:28:53.697"/>
</return>
<msg timestamp="20220708 04:28:53.698" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 04:28:53.571" endtime="20220708 04:28:53.698"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 04:28:53.698" endtime="20220708 04:28:53.698"/>
</return>
<msg timestamp="20220708 04:28:53.698" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 04:28:53.570" endtime="20220708 04:28:53.698"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${checklist_id}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220708 04:28:53.698" endtime="20220708 04:28:53.698"/>
</return>
<msg timestamp="20220708 04:28:53.699" level="INFO">${checklist_id} = 62c7b28542060938c06036be</msg>
<status status="PASS" starttime="20220708 04:28:53.698" endtime="20220708 04:28:53.699"/>
</kw>
<kw name="Update A Checklist" library="Checklist">
<var>${response}</var>
<arg>${checklist_id}</arg>
<arg>name</arg>
<arg>TestChecklist2</arg>
<doc>Updates the checklist with the given ID
optional_args: name, pos
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<arg>status_code=${status_code}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220708 04:28:53.700" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220708 04:28:53.700" endtime="20220708 04:28:53.700"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220708 04:28:53.700" endtime="20220708 04:28:53.701"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220708 04:28:53.701" level="INFO">${url} = checklists/62c7b28542060938c06036be</msg>
<status status="PASS" starttime="20220708 04:28:53.701" endtime="20220708 04:28:53.701"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220708 04:28:53.798" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 04:28:53.701" endtime="20220708 04:28:53.798"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 04:28:53.798" endtime="20220708 04:28:53.798"/>
</return>
<msg timestamp="20220708 04:28:53.798" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 04:28:53.700" endtime="20220708 04:28:53.798"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 04:28:53.798" endtime="20220708 04:28:53.798"/>
</return>
<msg timestamp="20220708 04:28:53.799" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 04:28:53.699" endtime="20220708 04:28:53.799"/>
</kw>
<kw name="Get A Checklist" library="Checklist">
<var>${response}</var>
<arg>${checklist_id}</arg>
<doc>Gets the checklist with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220708 04:28:53.800" level="INFO">${url} = checklists/62c7b28542060938c06036be</msg>
<status status="PASS" starttime="20220708 04:28:53.800" endtime="20220708 04:28:53.800"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220708 04:28:54.072" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 04:28:53.800" endtime="20220708 04:28:54.072"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 04:28:54.072" endtime="20220708 04:28:54.072"/>
</return>
<msg timestamp="20220708 04:28:54.073" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 04:28:53.799" endtime="20220708 04:28:54.073"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 04:28:54.073" endtime="20220708 04:28:54.073"/>
</return>
<msg timestamp="20220708 04:28:54.073" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 04:28:53.799" endtime="20220708 04:28:54.073"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${checklist_name}</var>
<arg>${response}</arg>
<arg>name</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220708 04:28:54.073" endtime="20220708 04:28:54.073"/>
</return>
<msg timestamp="20220708 04:28:54.074" level="INFO">${checklist_name} = TestChecklist2</msg>
<status status="PASS" starttime="20220708 04:28:54.073" endtime="20220708 04:28:54.074"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${checklist_name}</arg>
<arg>TestChecklist2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220708 04:28:54.074" endtime="20220708 04:28:54.074"/>
</kw>
<kw name="Delete A Checklist" library="Checklist" type="TEARDOWN">
<arg>${checklist_id}</arg>
<doc>Deletes the checklist with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220708 04:28:54.085" level="INFO">${url} = checklists/62c7b28542060938c06036be</msg>
<status status="PASS" starttime="20220708 04:28:54.084" endtime="20220708 04:28:54.085"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220708 04:28:54.199" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 04:28:54.085" endtime="20220708 04:28:54.199"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 04:28:54.199" endtime="20220708 04:28:54.199"/>
</return>
<msg timestamp="20220708 04:28:54.199" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 04:28:54.084" endtime="20220708 04:28:54.199"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 04:28:54.199" endtime="20220708 04:28:54.199"/>
</return>
<status status="PASS" starttime="20220708 04:28:54.075" endtime="20220708 04:28:54.200"/>
</kw>
<doc>Verify that a checklist's name can be updated through API</doc>
<tag>api</tag>
<tag>checklist.update</tag>
<tag>regression</tag>
<status status="PASS" starttime="20220708 04:28:53.570" endtime="20220708 04:28:54.200"/>
</test>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Teardown Board</arg>
<arg>Delete All Sessions</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Teardown Board">
<doc>Delete the board created for this suite</doc>
<kw name="Delete A Board" library="Board">
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220708 04:28:54.201" level="INFO">${url} = boards/62c7b2848e1ce945b22605dc</msg>
<status status="PASS" starttime="20220708 04:28:54.201" endtime="20220708 04:28:54.201"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220708 04:28:54.564" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 04:28:54.202" endtime="20220708 04:28:54.564"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 04:28:54.564" endtime="20220708 04:28:54.564"/>
</return>
<msg timestamp="20220708 04:28:54.565" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 04:28:54.201" endtime="20220708 04:28:54.565"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 04:28:54.565" endtime="20220708 04:28:54.565"/>
</return>
<status status="PASS" starttime="20220708 04:28:54.201" endtime="20220708 04:28:54.565"/>
</kw>
<status status="PASS" starttime="20220708 04:28:54.200" endtime="20220708 04:28:54.565"/>
</kw>
<kw name="Delete All Sessions" library="request_own_library">
<status status="PASS" starttime="20220708 04:28:54.565" endtime="20220708 04:28:54.566"/>
</kw>
<status status="PASS" starttime="20220708 04:28:54.200" endtime="20220708 04:28:54.566"/>
</kw>
<doc>Example Test with Trello API Checklists</doc>
<status status="PASS" starttime="20220708 04:28:52.558" endtime="20220708 04:28:54.566"/>
</suite>
<suite id="s1-s1-s4" name="Trello Api Labels Tests" source="/trello/api/trello_api_labels_tests.robot">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Create Trello Session</arg>
<arg>Setup Board And List</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Create Trello Session" library="TrelloAPI">
<doc>Creates a Trello Session</doc>
<kw name="Create Session" library="request_own_library">
<arg>${API_BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<status status="PASS" starttime="20220708 04:28:54.575" endtime="20220708 04:28:54.576"/>
</kw>
<status status="PASS" starttime="20220708 04:28:54.575" endtime="20220708 04:28:54.576"/>
</kw>
<kw name="Setup Board And List">
<doc>Create a board and save its ID and its first list's ID</doc>
<kw name="Create A Board" library="Board">
<var>${BOARD}</var>
<arg>TestBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220708 04:28:54.577" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220708 04:28:54.577" endtime="20220708 04:28:54.577"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220708 04:28:54.577" endtime="20220708 04:28:54.577"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220708 04:28:54.578" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220708 04:28:54.577" endtime="20220708 04:28:54.578"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220708 04:28:54.811" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 04:28:54.578" endtime="20220708 04:28:54.811"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 04:28:54.811" endtime="20220708 04:28:54.811"/>
</return>
<msg timestamp="20220708 04:28:54.811" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 04:28:54.576" endtime="20220708 04:28:54.811"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 04:28:54.811" endtime="20220708 04:28:54.811"/>
</return>
<msg timestamp="20220708 04:28:54.812" level="INFO">${BOARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 04:28:54.576" endtime="20220708 04:28:54.812"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_BOARD_ID}</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220708 04:28:54.813" level="INFO">${TEST_SUITE_BOARD_ID} = 62c7b2860bd9958a8c49e234</msg>
<status status="PASS" starttime="20220708 04:28:54.812" endtime="20220708 04:28:54.813"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${LISTS}</var>
<arg>boards/${TEST_SUITE_BOARD_ID}/lists</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220708 04:28:54.863" level="INFO">${LISTS} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 04:28:54.813" endtime="20220708 04:28:54.863"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_LIST_ID}</arg>
<arg>${LISTS.json()}[0][id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220708 04:28:54.864" level="INFO">${TEST_SUITE_LIST_ID} = 62c7b2860bd9958a8c49e23b</msg>
<status status="PASS" starttime="20220708 04:28:54.863" endtime="20220708 04:28:54.864"/>
</kw>
<status status="PASS" starttime="20220708 04:28:54.576" endtime="20220708 04:28:54.864"/>
</kw>
<status status="PASS" starttime="20220708 04:28:54.575" endtime="20220708 04:28:54.864"/>
</kw>
<test id="s1-s1-s4-t1" name="Create and get label on board" line="14">
<kw name="Create A Label" library="Label">
<var>${response}</var>
<arg>name</arg>
<arg>label2</arg>
<arg>color</arg>
<arg>yellow</arg>
<doc>Creates a new label in the given board.
required_args: idBoard
optional_args: name, color
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>idBoard</arg>
<arg>${idBoard}</arg>
<arg>@{optional_args}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220708 04:28:54.866" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220708 04:28:54.865" endtime="20220708 04:28:54.866"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220708 04:28:54.866" endtime="20220708 04:28:54.866"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220708 04:28:54.867" level="INFO">${url} = labels/</msg>
<status status="PASS" starttime="20220708 04:28:54.866" endtime="20220708 04:28:54.867"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220708 04:28:54.951" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 04:28:54.867" endtime="20220708 04:28:54.951"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 04:28:54.951" endtime="20220708 04:28:54.951"/>
</return>
<msg timestamp="20220708 04:28:54.951" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 04:28:54.865" endtime="20220708 04:28:54.951"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 04:28:54.951" endtime="20220708 04:28:54.951"/>
</return>
<msg timestamp="20220708 04:28:54.951" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 04:28:54.865" endtime="20220708 04:28:54.951"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>label</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220708 04:28:54.952" endtime="20220708 04:28:54.953"/>
</kw>
<status status="PASS" starttime="20220708 04:28:54.951" endtime="20220708 04:28:54.953"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${LABEL_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220708 04:28:54.954" endtime="20220708 04:28:54.954"/>
</return>
<msg timestamp="20220708 04:28:54.955" level="INFO">${LABEL_ID} = 62c7b2861ca1ab6d1bd044b1</msg>
<status status="PASS" starttime="20220708 04:28:54.954" endtime="20220708 04:28:54.955"/>
</kw>
<kw name="Get A Label" library="Label">
<var>${response}</var>
<arg>${LABEL_ID}</arg>
<doc>Gets the label with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220708 04:28:54.956" level="INFO">${url} = labels/62c7b2861ca1ab6d1bd044b1</msg>
<status status="PASS" starttime="20220708 04:28:54.955" endtime="20220708 04:28:54.956"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220708 04:28:55.008" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 04:28:54.956" endtime="20220708 04:28:55.008"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 04:28:55.008" endtime="20220708 04:28:55.009"/>
</return>
<msg timestamp="20220708 04:28:55.009" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 04:28:54.955" endtime="20220708 04:28:55.009"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 04:28:55.009" endtime="20220708 04:28:55.009"/>
</return>
<msg timestamp="20220708 04:28:55.009" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 04:28:54.955" endtime="20220708 04:28:55.009"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${LABEL_COLOR}</var>
<arg>${response}</arg>
<arg>color</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220708 04:28:55.009" endtime="20220708 04:28:55.009"/>
</return>
<msg timestamp="20220708 04:28:55.010" level="INFO">${LABEL_COLOR} = yellow</msg>
<status status="PASS" starttime="20220708 04:28:55.009" endtime="20220708 04:28:55.010"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${LABEL_NAME}</var>
<arg>${response}</arg>
<arg>name</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220708 04:28:55.010" endtime="20220708 04:28:55.010"/>
</return>
<msg timestamp="20220708 04:28:55.011" level="INFO">${LABEL_NAME} = label2</msg>
<status status="PASS" starttime="20220708 04:28:55.010" endtime="20220708 04:28:55.011"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${LABEL_COLOR}</arg>
<arg>yellow</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220708 04:28:55.011" endtime="20220708 04:28:55.011"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${LABEL_NAME}</arg>
<arg>label2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220708 04:28:55.012" endtime="20220708 04:28:55.012"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Label</arg>
<arg>${LABEL_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Label" library="Label">
<arg>${LABEL_ID}</arg>
<doc>Deletes the label with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220708 04:28:55.013" level="INFO">${url} = labels/62c7b2861ca1ab6d1bd044b1</msg>
<status status="PASS" starttime="20220708 04:28:55.013" endtime="20220708 04:28:55.013"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220708 04:28:55.128" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 04:28:55.013" endtime="20220708 04:28:55.128"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 04:28:55.128" endtime="20220708 04:28:55.128"/>
</return>
<msg timestamp="20220708 04:28:55.128" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 04:28:55.012" endtime="20220708 04:28:55.128"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 04:28:55.128" endtime="20220708 04:28:55.128"/>
</return>
<status status="PASS" starttime="20220708 04:28:55.012" endtime="20220708 04:28:55.128"/>
</kw>
<status status="PASS" starttime="20220708 04:28:55.012" endtime="20220708 04:28:55.128"/>
</kw>
<doc>Verify that a label can be created through API</doc>
<tag>api</tag>
<tag>label.create</tag>
<tag>label.get</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220708 04:28:54.864" endtime="20220708 04:28:55.128"/>
</test>
<test id="s1-s1-s4-t2" name="Update label on board" line="28">
<kw name="Create A Label" library="Label">
<var>${response}</var>
<arg>name</arg>
<arg>label2</arg>
<arg>color</arg>
<arg>yellow</arg>
<doc>Creates a new label in the given board.
required_args: idBoard
optional_args: name, color
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>idBoard</arg>
<arg>${idBoard}</arg>
<arg>@{optional_args}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220708 04:28:55.130" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220708 04:28:55.130" endtime="20220708 04:28:55.130"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220708 04:28:55.130" endtime="20220708 04:28:55.131"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220708 04:28:55.131" level="INFO">${url} = labels/</msg>
<status status="PASS" starttime="20220708 04:28:55.131" endtime="20220708 04:28:55.131"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220708 04:28:55.219" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 04:28:55.131" endtime="20220708 04:28:55.219"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 04:28:55.219" endtime="20220708 04:28:55.219"/>
</return>
<msg timestamp="20220708 04:28:55.219" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 04:28:55.130" endtime="20220708 04:28:55.219"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 04:28:55.219" endtime="20220708 04:28:55.219"/>
</return>
<msg timestamp="20220708 04:28:55.219" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 04:28:55.129" endtime="20220708 04:28:55.219"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>label</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220708 04:28:55.220" endtime="20220708 04:28:55.221"/>
</kw>
<status status="PASS" starttime="20220708 04:28:55.220" endtime="20220708 04:28:55.222"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${LABEL_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220708 04:28:55.222" endtime="20220708 04:28:55.222"/>
</return>
<msg timestamp="20220708 04:28:55.223" level="INFO">${LABEL_ID} = 62c7b2871e82c73d13b14c12</msg>
<status status="PASS" starttime="20220708 04:28:55.222" endtime="20220708 04:28:55.223"/>
</kw>
<kw name="Update A Label" library="Label">
<var>${new_response}</var>
<arg>${LABEL_ID}</arg>
<arg>name</arg>
<arg>label3</arg>
<arg>color</arg>
<arg>orange</arg>
<doc>Updates the label with the given ID
optional_args: name, color
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220708 04:28:55.224" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220708 04:28:55.224" endtime="20220708 04:28:55.224"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220708 04:28:55.224" endtime="20220708 04:28:55.224"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220708 04:28:55.224" level="INFO">${url} = labels/62c7b2871e82c73d13b14c12</msg>
<status status="PASS" starttime="20220708 04:28:55.224" endtime="20220708 04:28:55.224"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220708 04:28:55.323" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 04:28:55.224" endtime="20220708 04:28:55.323"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 04:28:55.323" endtime="20220708 04:28:55.323"/>
</return>
<msg timestamp="20220708 04:28:55.323" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 04:28:55.223" endtime="20220708 04:28:55.323"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 04:28:55.323" endtime="20220708 04:28:55.323"/>
</return>
<msg timestamp="20220708 04:28:55.323" level="INFO">${new_response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 04:28:55.223" endtime="20220708 04:28:55.323"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${NEW_LABEL_COLOR}</var>
<arg>${new_response}</arg>
<arg>color</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220708 04:28:55.324" endtime="20220708 04:28:55.324"/>
</return>
<msg timestamp="20220708 04:28:55.325" level="INFO">${NEW_LABEL_COLOR} = orange</msg>
<status status="PASS" starttime="20220708 04:28:55.324" endtime="20220708 04:28:55.325"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${NEW_LABEL_NAME}</var>
<arg>${new_response}</arg>
<arg>name</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220708 04:28:55.325" endtime="20220708 04:28:55.325"/>
</return>
<msg timestamp="20220708 04:28:55.326" level="INFO">${NEW_LABEL_NAME} = label3</msg>
<status status="PASS" starttime="20220708 04:28:55.325" endtime="20220708 04:28:55.326"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${NEW_LABEL_COLOR}</arg>
<arg>orange</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220708 04:28:55.326" endtime="20220708 04:28:55.326"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${NEW_LABEL_NAME}</arg>
<arg>label3</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220708 04:28:55.326" endtime="20220708 04:28:55.326"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Label</arg>
<arg>${LABEL_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Label" library="Label">
<arg>${LABEL_ID}</arg>
<doc>Deletes the label with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220708 04:28:55.328" level="INFO">${url} = labels/62c7b2871e82c73d13b14c12</msg>
<status status="PASS" starttime="20220708 04:28:55.328" endtime="20220708 04:28:55.328"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220708 04:28:55.439" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 04:28:55.328" endtime="20220708 04:28:55.439"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 04:28:55.439" endtime="20220708 04:28:55.439"/>
</return>
<msg timestamp="20220708 04:28:55.439" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 04:28:55.327" endtime="20220708 04:28:55.439"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 04:28:55.439" endtime="20220708 04:28:55.439"/>
</return>
<status status="PASS" starttime="20220708 04:28:55.327" endtime="20220708 04:28:55.439"/>
</kw>
<status status="PASS" starttime="20220708 04:28:55.326" endtime="20220708 04:28:55.439"/>
</kw>
<doc>Verify that a label's name and color can be updated through API</doc>
<tag>api</tag>
<tag>label.update</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220708 04:28:55.129" endtime="20220708 04:28:55.439"/>
</test>
<test id="s1-s1-s4-t3" name="Delete label on board" line="41">
<kw name="Create A Label" library="Label">
<var>${response}</var>
<arg>name</arg>
<arg>label2</arg>
<arg>color</arg>
<arg>yellow</arg>
<doc>Creates a new label in the given board.
required_args: idBoard
optional_args: name, color
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>idBoard</arg>
<arg>${idBoard}</arg>
<arg>@{optional_args}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220708 04:28:55.442" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220708 04:28:55.441" endtime="20220708 04:28:55.442"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220708 04:28:55.442" endtime="20220708 04:28:55.442"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220708 04:28:55.443" level="INFO">${url} = labels/</msg>
<status status="PASS" starttime="20220708 04:28:55.442" endtime="20220708 04:28:55.443"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220708 04:28:55.538" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 04:28:55.443" endtime="20220708 04:28:55.538"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 04:28:55.538" endtime="20220708 04:28:55.538"/>
</return>
<msg timestamp="20220708 04:28:55.539" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 04:28:55.441" endtime="20220708 04:28:55.539"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 04:28:55.539" endtime="20220708 04:28:55.539"/>
</return>
<msg timestamp="20220708 04:28:55.539" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 04:28:55.441" endtime="20220708 04:28:55.539"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${LABEL_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220708 04:28:55.539" endtime="20220708 04:28:55.539"/>
</return>
<msg timestamp="20220708 04:28:55.540" level="INFO">${LABEL_ID} = 62c7b28708914c315ba3b355</msg>
<status status="PASS" starttime="20220708 04:28:55.539" endtime="20220708 04:28:55.540"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Label</arg>
<arg>${LABEL_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Label" library="Label">
<arg>${LABEL_ID}</arg>
<doc>Deletes the label with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220708 04:28:55.542" level="INFO">${url} = labels/62c7b28708914c315ba3b355</msg>
<status status="PASS" starttime="20220708 04:28:55.541" endtime="20220708 04:28:55.542"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220708 04:28:55.675" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 04:28:55.542" endtime="20220708 04:28:55.675"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 04:28:55.675" endtime="20220708 04:28:55.675"/>
</return>
<msg timestamp="20220708 04:28:55.675" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 04:28:55.541" endtime="20220708 04:28:55.675"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 04:28:55.675" endtime="20220708 04:28:55.675"/>
</return>
<status status="PASS" starttime="20220708 04:28:55.540" endtime="20220708 04:28:55.675"/>
</kw>
<status status="PASS" starttime="20220708 04:28:55.540" endtime="20220708 04:28:55.675"/>
</kw>
<kw name="Get A Label" library="Label">
<arg>${LABEL_ID}</arg>
<arg>status_code=404</arg>
<doc>Gets the label with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220708 04:28:55.676" level="INFO">${url} = labels/62c7b28708914c315ba3b355</msg>
<status status="PASS" starttime="20220708 04:28:55.676" endtime="20220708 04:28:55.676"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220708 04:28:55.720" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220708 04:28:55.677" endtime="20220708 04:28:55.720"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 04:28:55.720" endtime="20220708 04:28:55.720"/>
</return>
<msg timestamp="20220708 04:28:55.720" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220708 04:28:55.676" endtime="20220708 04:28:55.720"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 04:28:55.720" endtime="20220708 04:28:55.720"/>
</return>
<status status="PASS" starttime="20220708 04:28:55.675" endtime="20220708 04:28:55.720"/>
</kw>
<doc>Verify that a label can be deleted through API</doc>
<tag>api</tag>
<tag>label.delete</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220708 04:28:55.440" endtime="20220708 04:28:55.720"/>
</test>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Teardown Board</arg>
<arg>Delete All Sessions</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Teardown Board">
<doc>Delete the board created for this session.</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220708 04:28:55.723" level="INFO">${url} = boards/62c7b2860bd9958a8c49e234</msg>
<status status="PASS" starttime="20220708 04:28:55.723" endtime="20220708 04:28:55.723"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220708 04:28:56.108" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 04:28:55.723" endtime="20220708 04:28:56.108"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 04:28:56.108" endtime="20220708 04:28:56.108"/>
</return>
<msg timestamp="20220708 04:28:56.109" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 04:28:55.722" endtime="20220708 04:28:56.109"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 04:28:56.109" endtime="20220708 04:28:56.109"/>
</return>
<status status="PASS" starttime="20220708 04:28:55.722" endtime="20220708 04:28:56.109"/>
</kw>
<status status="PASS" starttime="20220708 04:28:55.722" endtime="20220708 04:28:56.109"/>
</kw>
<status status="PASS" starttime="20220708 04:28:55.721" endtime="20220708 04:28:56.109"/>
</kw>
<kw name="Delete All Sessions" library="request_own_library">
<status status="PASS" starttime="20220708 04:28:56.109" endtime="20220708 04:28:56.110"/>
</kw>
<status status="PASS" starttime="20220708 04:28:55.721" endtime="20220708 04:28:56.110"/>
</kw>
<doc>Example Test with Trello API Cards</doc>
<status status="PASS" starttime="20220708 04:28:54.567" endtime="20220708 04:28:56.110"/>
</suite>
<suite id="s1-s1-s5" name="Trello Api Lists Tests" source="/trello/api/trello_api_lists_tests.robot">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Create Trello Session</arg>
<arg>Setup Board</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Create Trello Session" library="TrelloAPI">
<doc>Creates a Trello Session</doc>
<kw name="Create Session" library="request_own_library">
<arg>${API_BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<status status="PASS" starttime="20220708 04:28:56.119" endtime="20220708 04:28:56.120"/>
</kw>
<status status="PASS" starttime="20220708 04:28:56.119" endtime="20220708 04:28:56.120"/>
</kw>
<kw name="Setup Board">
<doc>Create a board and save it's id for the suite</doc>
<kw name="Create A Board" library="Board">
<var>${BOARD}</var>
<arg>TestBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220708 04:28:56.121" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220708 04:28:56.121" endtime="20220708 04:28:56.121"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220708 04:28:56.121" endtime="20220708 04:28:56.121"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220708 04:28:56.122" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220708 04:28:56.121" endtime="20220708 04:28:56.122"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220708 04:28:56.345" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 04:28:56.122" endtime="20220708 04:28:56.345"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 04:28:56.345" endtime="20220708 04:28:56.345"/>
</return>
<msg timestamp="20220708 04:28:56.345" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 04:28:56.120" endtime="20220708 04:28:56.345"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 04:28:56.345" endtime="20220708 04:28:56.345"/>
</return>
<msg timestamp="20220708 04:28:56.345" level="INFO">${BOARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 04:28:56.120" endtime="20220708 04:28:56.345"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Set Suite Variable</arg>
<arg>\${TEST_SUITE_BOARD_ID}</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_BOARD_ID}</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220708 04:28:56.347" level="INFO">${TEST_SUITE_BOARD_ID} = 62c7b28815294e26129806cb</msg>
<status status="PASS" starttime="20220708 04:28:56.346" endtime="20220708 04:28:56.347"/>
</kw>
<status status="PASS" starttime="20220708 04:28:56.346" endtime="20220708 04:28:56.347"/>
</kw>
<status status="PASS" starttime="20220708 04:28:56.120" endtime="20220708 04:28:56.347"/>
</kw>
<status status="PASS" starttime="20220708 04:28:56.119" endtime="20220708 04:28:56.347"/>
</kw>
<test id="s1-s1-s5-t1" name="CREATE a list" line="13">
<kw name="Create A List" library="List">
<var>${response}</var>
<arg>NewList</arg>
<doc>Creates a new List
board id
name the list will have
optional_args: idListSource, pos, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>list</arg>
<arg>name</arg>
<arg>${name}</arg>
<arg>idBoard</arg>
<arg>${idBoard}</arg>
<arg>@{optional_args}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220708 04:28:56.348" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220708 04:28:56.348" endtime="20220708 04:28:56.348"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220708 04:28:56.349" endtime="20220708 04:28:56.349"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220708 04:28:56.349" level="INFO">${url} = lists/</msg>
<status status="PASS" starttime="20220708 04:28:56.349" endtime="20220708 04:28:56.349"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220708 04:28:56.435" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 04:28:56.350" endtime="20220708 04:28:56.436"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 04:28:56.436" endtime="20220708 04:28:56.436"/>
</return>
<msg timestamp="20220708 04:28:56.436" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 04:28:56.348" endtime="20220708 04:28:56.436"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 04:28:56.436" endtime="20220708 04:28:56.436"/>
</return>
<msg timestamp="20220708 04:28:56.436" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 04:28:56.347" endtime="20220708 04:28:56.436"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>list</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220708 04:28:56.437" endtime="20220708 04:28:56.438"/>
</kw>
<status status="PASS" starttime="20220708 04:28:56.436" endtime="20220708 04:28:56.438"/>
</kw>
<doc>Verify that a list can be created through API</doc>
<tag>api</tag>
<tag>list.create</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220708 04:28:56.347" endtime="20220708 04:28:56.438"/>
</test>
<test id="s1-s1-s5-t2" name="UPDATE a list" line="19">
<kw name="Create A List" library="List">
<var>${response}</var>
<arg>NewList</arg>
<doc>Creates a new List
board id
name the list will have
optional_args: idListSource, pos, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>list</arg>
<arg>name</arg>
<arg>${name}</arg>
<arg>idBoard</arg>
<arg>${idBoard}</arg>
<arg>@{optional_args}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220708 04:28:56.441" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220708 04:28:56.440" endtime="20220708 04:28:56.441"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220708 04:28:56.441" endtime="20220708 04:28:56.441"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220708 04:28:56.442" level="INFO">${url} = lists/</msg>
<status status="PASS" starttime="20220708 04:28:56.441" endtime="20220708 04:28:56.442"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220708 04:28:56.531" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 04:28:56.442" endtime="20220708 04:28:56.531"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 04:28:56.532" endtime="20220708 04:28:56.532"/>
</return>
<msg timestamp="20220708 04:28:56.532" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 04:28:56.440" endtime="20220708 04:28:56.532"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 04:28:56.532" endtime="20220708 04:28:56.532"/>
</return>
<msg timestamp="20220708 04:28:56.532" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 04:28:56.440" endtime="20220708 04:28:56.532"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>list</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220708 04:28:56.533" endtime="20220708 04:28:56.534"/>
</kw>
<status status="PASS" starttime="20220708 04:28:56.532" endtime="20220708 04:28:56.534"/>
</kw>
<kw name="Update A List" library="List">
<arg>${response.json()}[id]</arg>
<arg>name</arg>
<arg>NewName</arg>
<doc>Updates the board with the given ID
optional_args: name, idListSource, pos, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>list</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220708 04:28:56.536" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220708 04:28:56.536" endtime="20220708 04:28:56.536"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220708 04:28:56.536" endtime="20220708 04:28:56.536"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220708 04:28:56.537" level="INFO">${url} = lists/62c7b2886f7fac3009295cf4</msg>
<status status="PASS" starttime="20220708 04:28:56.536" endtime="20220708 04:28:56.537"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220708 04:28:56.630" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 04:28:56.537" endtime="20220708 04:28:56.630"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 04:28:56.630" endtime="20220708 04:28:56.630"/>
</return>
<msg timestamp="20220708 04:28:56.631" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 04:28:56.535" endtime="20220708 04:28:56.631"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 04:28:56.631" endtime="20220708 04:28:56.631"/>
</return>
<status status="PASS" starttime="20220708 04:28:56.534" endtime="20220708 04:28:56.631"/>
</kw>
<kw name="Get A List" library="List">
<var>${new_response}</var>
<arg>${response.json()}[id]</arg>
<doc>Gets the List with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>list</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220708 04:28:56.632" level="INFO">${url} = lists/62c7b2886f7fac3009295cf4</msg>
<status status="PASS" starttime="20220708 04:28:56.632" endtime="20220708 04:28:56.632"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220708 04:28:56.681" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 04:28:56.633" endtime="20220708 04:28:56.681"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 04:28:56.681" endtime="20220708 04:28:56.681"/>
</return>
<msg timestamp="20220708 04:28:56.681" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 04:28:56.632" endtime="20220708 04:28:56.681"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 04:28:56.682" endtime="20220708 04:28:56.682"/>
</return>
<msg timestamp="20220708 04:28:56.682" level="INFO">${new_response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 04:28:56.631" endtime="20220708 04:28:56.682"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${new_response}</arg>
<arg>list</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220708 04:28:56.682" endtime="20220708 04:28:56.684"/>
</kw>
<status status="PASS" starttime="20220708 04:28:56.682" endtime="20220708 04:28:56.684"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${new_response.json()}[name]</arg>
<arg>NewName</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220708 04:28:56.684" endtime="20220708 04:28:56.685"/>
</kw>
<doc>Verify that a lists name can be updated through API</doc>
<tag>api</tag>
<tag>list.update</tag>
<tag>regression</tag>
<status status="PASS" starttime="20220708 04:28:56.439" endtime="20220708 04:28:56.685"/>
</test>
<test id="s1-s1-s5-t3" name="ARCHIVE A list" line="29">
<kw name="Create A List" library="List">
<var>${response}</var>
<arg>NewList</arg>
<doc>Creates a new List
board id
name the list will have
optional_args: idListSource, pos, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>list</arg>
<arg>name</arg>
<arg>${name}</arg>
<arg>idBoard</arg>
<arg>${idBoard}</arg>
<arg>@{optional_args}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220708 04:28:56.688" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220708 04:28:56.688" endtime="20220708 04:28:56.688"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220708 04:28:56.688" endtime="20220708 04:28:56.688"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220708 04:28:56.689" level="INFO">${url} = lists/</msg>
<status status="PASS" starttime="20220708 04:28:56.688" endtime="20220708 04:28:56.689"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220708 04:28:56.784" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 04:28:56.689" endtime="20220708 04:28:56.784"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 04:28:56.784" endtime="20220708 04:28:56.784"/>
</return>
<msg timestamp="20220708 04:28:56.784" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 04:28:56.687" endtime="20220708 04:28:56.784"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 04:28:56.785" endtime="20220708 04:28:56.785"/>
</return>
<msg timestamp="20220708 04:28:56.785" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 04:28:56.686" endtime="20220708 04:28:56.785"/>
</kw>
<kw name="Archive A List" library="List">
<arg>${response.json()}[id]</arg>
<doc>Deletes the list with the given ID</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>archive_list</arg>
<arg>${id}</arg>
<arg>value</arg>
<arg>true</arg>
<arg>status_code=${status_code}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220708 04:28:56.787" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220708 04:28:56.786" endtime="20220708 04:28:56.787"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220708 04:28:56.787" endtime="20220708 04:28:56.787"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220708 04:28:56.787" level="INFO">${url} = lists/62c7b288df487c261390c414/closed</msg>
<status status="PASS" starttime="20220708 04:28:56.787" endtime="20220708 04:28:56.787"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220708 04:28:56.880" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 04:28:56.787" endtime="20220708 04:28:56.880"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 04:28:56.880" endtime="20220708 04:28:56.880"/>
</return>
<msg timestamp="20220708 04:28:56.880" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 04:28:56.786" endtime="20220708 04:28:56.880"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 04:28:56.880" endtime="20220708 04:28:56.880"/>
</return>
<status status="PASS" starttime="20220708 04:28:56.785" endtime="20220708 04:28:56.880"/>
</kw>
<kw name="Get A List" library="List">
<var>${new_response}</var>
<arg>${response.json()}[id]</arg>
<doc>Gets the List with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>list</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220708 04:28:56.882" level="INFO">${url} = lists/62c7b288df487c261390c414</msg>
<status status="PASS" starttime="20220708 04:28:56.882" endtime="20220708 04:28:56.882"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220708 04:28:56.930" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 04:28:56.882" endtime="20220708 04:28:56.930"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 04:28:56.930" endtime="20220708 04:28:56.930"/>
</return>
<msg timestamp="20220708 04:28:56.930" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 04:28:56.881" endtime="20220708 04:28:56.930"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 04:28:56.930" endtime="20220708 04:28:56.930"/>
</return>
<msg timestamp="20220708 04:28:56.930" level="INFO">${new_response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 04:28:56.881" endtime="20220708 04:28:56.930"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${new_response.json()}[closed]</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220708 04:28:56.930" endtime="20220708 04:28:56.931"/>
</kw>
<doc>Verify that a list can be archived through API</doc>
<tag>api</tag>
<tag>list.archive</tag>
<tag>regression</tag>
<status status="PASS" starttime="20220708 04:28:56.685" endtime="20220708 04:28:56.931"/>
</test>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Teardown Board</arg>
<arg>Delete All Sessions</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Teardown Board">
<doc>Delete the board created for this suite.</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220708 04:28:56.934" level="INFO">${url} = boards/62c7b28815294e26129806cb</msg>
<status status="PASS" starttime="20220708 04:28:56.934" endtime="20220708 04:28:56.934"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220708 04:28:57.233" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 04:28:56.934" endtime="20220708 04:28:57.233"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 04:28:57.233" endtime="20220708 04:28:57.233"/>
</return>
<msg timestamp="20220708 04:28:57.234" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 04:28:56.933" endtime="20220708 04:28:57.234"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 04:28:57.234" endtime="20220708 04:28:57.234"/>
</return>
<status status="PASS" starttime="20220708 04:28:56.933" endtime="20220708 04:28:57.234"/>
</kw>
<status status="PASS" starttime="20220708 04:28:56.933" endtime="20220708 04:28:57.234"/>
</kw>
<status status="PASS" starttime="20220708 04:28:56.932" endtime="20220708 04:28:57.234"/>
</kw>
<kw name="Delete All Sessions" library="request_own_library">
<status status="PASS" starttime="20220708 04:28:57.234" endtime="20220708 04:28:57.235"/>
</kw>
<status status="PASS" starttime="20220708 04:28:56.932" endtime="20220708 04:28:57.235"/>
</kw>
<doc>Example Test with Trello API lists</doc>
<status status="PASS" starttime="20220708 04:28:56.111" endtime="20220708 04:28:57.235"/>
</suite>
<status status="PASS" starttime="20220708 04:28:44.545" endtime="20220708 04:28:57.237"/>
</suite>
<status status="PASS" starttime="20220708 04:28:44.528" endtime="20220708 04:28:57.239"/>
</suite>
<statistics>
<total>
<stat pass="18" fail="0" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="18" fail="0" skip="0">api</stat>
<stat pass="1" fail="0" skip="0">board.create</stat>
<stat pass="1" fail="0" skip="0">board.delete</stat>
<stat pass="1" fail="0" skip="0">board.get</stat>
<stat pass="2" fail="0" skip="0">board.update</stat>
<stat pass="1" fail="0" skip="0">card.close</stat>
<stat pass="1" fail="0" skip="0">card.create</stat>
<stat pass="1" fail="0" skip="0">card.delete</stat>
<stat pass="1" fail="0" skip="0">card.update</stat>
<stat pass="1" fail="0" skip="0">checklist.create</stat>
<stat pass="1" fail="0" skip="0">checklist.delete</stat>
<stat pass="1" fail="0" skip="0">checklist.update</stat>
<stat pass="1" fail="0" skip="0">label.create</stat>
<stat pass="1" fail="0" skip="0">label.delete</stat>
<stat pass="1" fail="0" skip="0">label.get</stat>
<stat pass="1" fail="0" skip="0">label.update</stat>
<stat pass="1" fail="0" skip="0">list.archive</stat>
<stat pass="1" fail="0" skip="0">list.create</stat>
<stat pass="1" fail="0" skip="0">list.update</stat>
<stat pass="5" fail="0" skip="0">regression</stat>
<stat pass="13" fail="0" skip="0">smoke</stat>
</tag>
<suite>
<stat pass="18" fail="0" skip="0" id="s1" name="Trello">Trello</stat>
<stat pass="18" fail="0" skip="0" id="s1-s1" name="Api">Trello.Api</stat>
<stat pass="5" fail="0" skip="0" id="s1-s1-s1" name="Trello Api Boards Tests">Trello.Api.Trello Api Boards Tests</stat>
<stat pass="4" fail="0" skip="0" id="s1-s1-s2" name="Trello Api Cards Tests">Trello.Api.Trello Api Cards Tests</stat>
<stat pass="3" fail="0" skip="0" id="s1-s1-s3" name="Trello Api Checklists Tests">Trello.Api.Trello Api Checklists Tests</stat>
<stat pass="3" fail="0" skip="0" id="s1-s1-s4" name="Trello Api Labels Tests">Trello.Api.Trello Api Labels Tests</stat>
<stat pass="3" fail="0" skip="0" id="s1-s1-s5" name="Trello Api Lists Tests">Trello.Api.Trello Api Lists Tests</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
