<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 5.0.1 (Python 3.10.5 on linux)" generated="20220704 14:53:55.670" rpa="false" schemaversion="3">
<suite id="s1" name="Trello" source="/trello">
<suite id="s1-s1" name="Api" source="/trello/api">
<suite id="s1-s1-s1" name="Trello Api Boards Tests" source="/trello/api/trello_api_boards_tests.robot">
<kw name="Create Trello Session" library="TrelloAPI" type="SETUP">
<doc>Creates a Trello Session</doc>
<kw name="Create Session" library="request_own_library">
<arg>${API_BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<status status="PASS" starttime="20220704 14:53:55.801" endtime="20220704 14:53:55.801"/>
</kw>
<status status="PASS" starttime="20220704 14:53:55.800" endtime="20220704 14:53:55.802"/>
</kw>
<test id="s1-s1-s1-t1" name="CREATE a board" line="9">
<kw name="Create A Board" library="Board">
<var>${response}</var>
<arg>NewBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 14:53:55.804" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 14:53:55.803" endtime="20220704 14:53:55.804"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 14:53:55.804" endtime="20220704 14:53:55.804"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:53:55.805" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220704 14:53:55.804" endtime="20220704 14:53:55.805"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 14:53:56.052" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:53:55.805" endtime="20220704 14:53:56.052"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:53:56.052" endtime="20220704 14:53:56.052"/>
</return>
<msg timestamp="20220704 14:53:56.053" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:53:55.803" endtime="20220704 14:53:56.053"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:53:56.053" endtime="20220704 14:53:56.053"/>
</return>
<msg timestamp="20220704 14:53:56.053" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:53:55.803" endtime="20220704 14:53:56.053"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>board</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220704 14:53:56.054" endtime="20220704 14:53:56.058"/>
</kw>
<status status="PASS" starttime="20220704 14:53:56.053" endtime="20220704 14:53:56.058"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${response.json()}[id]</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${response.json()}[id]</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:53:56.061" level="INFO">${url} = boards/62c2ff03359ceb44f2baa6a1</msg>
<status status="PASS" starttime="20220704 14:53:56.060" endtime="20220704 14:53:56.061"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 14:53:56.495" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:53:56.061" endtime="20220704 14:53:56.495"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:53:56.495" endtime="20220704 14:53:56.495"/>
</return>
<msg timestamp="20220704 14:53:56.495" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:53:56.060" endtime="20220704 14:53:56.495"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:53:56.495" endtime="20220704 14:53:56.495"/>
</return>
<status status="PASS" starttime="20220704 14:53:56.059" endtime="20220704 14:53:56.495"/>
</kw>
<status status="PASS" starttime="20220704 14:53:56.059" endtime="20220704 14:53:56.495"/>
</kw>
<doc>Verify that a board can be create through API</doc>
<tag>api</tag>
<tag>board.create</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220704 14:53:55.802" endtime="20220704 14:53:56.496"/>
</test>
<test id="s1-s1-s1-t2" name="UPDATE a Board's name" line="16">
<kw name="Create A Board" library="Board">
<var>${response}</var>
<arg>NewBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 14:53:56.499" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 14:53:56.499" endtime="20220704 14:53:56.499"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 14:53:56.499" endtime="20220704 14:53:56.499"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:53:56.500" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220704 14:53:56.499" endtime="20220704 14:53:56.500"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 14:53:56.665" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:53:56.500" endtime="20220704 14:53:56.666"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:53:56.666" endtime="20220704 14:53:56.666"/>
</return>
<msg timestamp="20220704 14:53:56.666" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:53:56.498" endtime="20220704 14:53:56.666"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:53:56.666" endtime="20220704 14:53:56.666"/>
</return>
<msg timestamp="20220704 14:53:56.666" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:53:56.497" endtime="20220704 14:53:56.666"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>board</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220704 14:53:56.667" endtime="20220704 14:53:56.672"/>
</kw>
<status status="PASS" starttime="20220704 14:53:56.667" endtime="20220704 14:53:56.672"/>
</kw>
<kw name="Update A Board" library="Board">
<arg>${response.json()}[id]</arg>
<arg>name</arg>
<arg>NewName</arg>
<doc>Updates the board with the given ID
optional_args: name, desc, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 14:53:56.673" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 14:53:56.673" endtime="20220704 14:53:56.674"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 14:53:56.674" endtime="20220704 14:53:56.674"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:53:56.674" level="INFO">${url} = boards/62c2ff04a4a0851c197a73eb</msg>
<status status="PASS" starttime="20220704 14:53:56.674" endtime="20220704 14:53:56.674"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 14:53:56.768" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:53:56.674" endtime="20220704 14:53:56.768"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:53:56.768" endtime="20220704 14:53:56.768"/>
</return>
<msg timestamp="20220704 14:53:56.768" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:53:56.673" endtime="20220704 14:53:56.768"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:53:56.768" endtime="20220704 14:53:56.768"/>
</return>
<status status="PASS" starttime="20220704 14:53:56.672" endtime="20220704 14:53:56.769"/>
</kw>
<kw name="Get A Board" library="Board">
<var>${new_response}</var>
<arg>${response.json()}[id]</arg>
<doc>Gets the Board with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:53:56.771" level="INFO">${url} = boards/62c2ff04a4a0851c197a73eb</msg>
<status status="PASS" starttime="20220704 14:53:56.770" endtime="20220704 14:53:56.771"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 14:53:56.818" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:53:56.771" endtime="20220704 14:53:56.819"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:53:56.819" endtime="20220704 14:53:56.819"/>
</return>
<msg timestamp="20220704 14:53:56.819" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:53:56.770" endtime="20220704 14:53:56.819"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:53:56.819" endtime="20220704 14:53:56.819"/>
</return>
<msg timestamp="20220704 14:53:56.819" level="INFO">${new_response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:53:56.769" endtime="20220704 14:53:56.819"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${new_response}</arg>
<arg>board</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220704 14:53:56.820" endtime="20220704 14:53:56.824"/>
</kw>
<status status="PASS" starttime="20220704 14:53:56.819" endtime="20220704 14:53:56.824"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${new_response.json()}[name]</arg>
<arg>NewName</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220704 14:53:56.824" endtime="20220704 14:53:56.825"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${response.json()}[id]</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${response.json()}[id]</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:53:56.827" level="INFO">${url} = boards/62c2ff04a4a0851c197a73eb</msg>
<status status="PASS" starttime="20220704 14:53:56.826" endtime="20220704 14:53:56.827"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 14:53:57.163" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:53:56.827" endtime="20220704 14:53:57.163"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:53:57.163" endtime="20220704 14:53:57.163"/>
</return>
<msg timestamp="20220704 14:53:57.163" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:53:56.826" endtime="20220704 14:53:57.163"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:53:57.163" endtime="20220704 14:53:57.163"/>
</return>
<status status="PASS" starttime="20220704 14:53:56.825" endtime="20220704 14:53:57.164"/>
</kw>
<status status="PASS" starttime="20220704 14:53:56.825" endtime="20220704 14:53:57.164"/>
</kw>
<doc>Verify that a board's name can be updated through API</doc>
<tag>api</tag>
<tag>board.update</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220704 14:53:56.496" endtime="20220704 14:53:57.164"/>
</test>
<test id="s1-s1-s1-t3" name="DELETE A Board" line="27">
<kw name="Create A Board" library="Board">
<var>${response}</var>
<arg>NewBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 14:53:57.166" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 14:53:57.166" endtime="20220704 14:53:57.167"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 14:53:57.167" endtime="20220704 14:53:57.167"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:53:57.168" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220704 14:53:57.167" endtime="20220704 14:53:57.168"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 14:53:57.337" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:53:57.168" endtime="20220704 14:53:57.337"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:53:57.337" endtime="20220704 14:53:57.337"/>
</return>
<msg timestamp="20220704 14:53:57.338" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:53:57.166" endtime="20220704 14:53:57.338"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:53:57.338" endtime="20220704 14:53:57.338"/>
</return>
<msg timestamp="20220704 14:53:57.338" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:53:57.165" endtime="20220704 14:53:57.338"/>
</kw>
<kw name="Delete A Board" library="Board">
<arg>${response.json()}[id]</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:53:57.340" level="INFO">${url} = boards/62c2ff05b2a5c643c4fc9c4c</msg>
<status status="PASS" starttime="20220704 14:53:57.340" endtime="20220704 14:53:57.340"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 14:53:57.650" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:53:57.340" endtime="20220704 14:53:57.651"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:53:57.651" endtime="20220704 14:53:57.651"/>
</return>
<msg timestamp="20220704 14:53:57.651" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:53:57.339" endtime="20220704 14:53:57.651"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:53:57.651" endtime="20220704 14:53:57.651"/>
</return>
<status status="PASS" starttime="20220704 14:53:57.338" endtime="20220704 14:53:57.651"/>
</kw>
<kw name="Get A Board" library="Board">
<arg>${response.json()}[id]</arg>
<arg>status_code=404</arg>
<doc>Gets the Board with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:53:57.654" level="INFO">${url} = boards/62c2ff05b2a5c643c4fc9c4c</msg>
<status status="PASS" starttime="20220704 14:53:57.653" endtime="20220704 14:53:57.654"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 14:53:57.693" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220704 14:53:57.654" endtime="20220704 14:53:57.693"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:53:57.693" endtime="20220704 14:53:57.693"/>
</return>
<msg timestamp="20220704 14:53:57.693" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220704 14:53:57.653" endtime="20220704 14:53:57.693"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:53:57.694" endtime="20220704 14:53:57.694"/>
</return>
<status status="PASS" starttime="20220704 14:53:57.652" endtime="20220704 14:53:57.694"/>
</kw>
<doc>Verify that a board can be deleted through API</doc>
<tag>api</tag>
<tag>board.delete</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220704 14:53:57.164" endtime="20220704 14:53:57.694"/>
</test>
<test id="s1-s1-s1-t4" name="GET Information of A Board" line="34">
<kw name="Create A Board" library="Board">
<var>${response}</var>
<arg>BoardTest</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 14:53:57.696" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 14:53:57.696" endtime="20220704 14:53:57.696"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 14:53:57.696" endtime="20220704 14:53:57.697"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:53:57.697" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220704 14:53:57.697" endtime="20220704 14:53:57.697"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 14:53:57.937" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:53:57.697" endtime="20220704 14:53:57.937"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:53:57.938" endtime="20220704 14:53:57.938"/>
</return>
<msg timestamp="20220704 14:53:57.938" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:53:57.696" endtime="20220704 14:53:57.938"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:53:57.938" endtime="20220704 14:53:57.938"/>
</return>
<msg timestamp="20220704 14:53:57.938" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:53:57.695" endtime="20220704 14:53:57.938"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>board</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220704 14:53:57.939" endtime="20220704 14:53:57.943"/>
</kw>
<status status="PASS" starttime="20220704 14:53:57.939" endtime="20220704 14:53:57.943"/>
</kw>
<kw name="Get A Board" library="Board">
<var>${response2}</var>
<arg>${response.json()}[id]</arg>
<doc>Gets the Board with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:53:57.945" level="INFO">${url} = boards/62c2ff0541124d14af9a9241</msg>
<status status="PASS" starttime="20220704 14:53:57.945" endtime="20220704 14:53:57.945"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 14:53:57.994" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:53:57.945" endtime="20220704 14:53:57.994"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:53:57.994" endtime="20220704 14:53:57.994"/>
</return>
<msg timestamp="20220704 14:53:57.994" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:53:57.944" endtime="20220704 14:53:57.994"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:53:57.994" endtime="20220704 14:53:57.995"/>
</return>
<msg timestamp="20220704 14:53:57.995" level="INFO">${response2} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:53:57.943" endtime="20220704 14:53:57.995"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response2}</arg>
<arg>board</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220704 14:53:57.995" endtime="20220704 14:53:58.000"/>
</kw>
<status status="PASS" starttime="20220704 14:53:57.995" endtime="20220704 14:53:58.000"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${response2.json()}[name]</arg>
<arg>BoardTest</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220704 14:53:58.000" endtime="20220704 14:53:58.001"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${response.json()}[id]</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${response.json()}[id]</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:53:58.003" level="INFO">${url} = boards/62c2ff0541124d14af9a9241</msg>
<status status="PASS" starttime="20220704 14:53:58.002" endtime="20220704 14:53:58.003"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 14:53:58.335" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:53:58.003" endtime="20220704 14:53:58.335"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:53:58.335" endtime="20220704 14:53:58.335"/>
</return>
<msg timestamp="20220704 14:53:58.335" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:53:58.002" endtime="20220704 14:53:58.335"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:53:58.335" endtime="20220704 14:53:58.335"/>
</return>
<status status="PASS" starttime="20220704 14:53:58.001" endtime="20220704 14:53:58.336"/>
</kw>
<status status="PASS" starttime="20220704 14:53:58.001" endtime="20220704 14:53:58.336"/>
</kw>
<doc>Verify that a board's information can be accesed through API</doc>
<tag>api</tag>
<tag>board.get</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220704 14:53:57.695" endtime="20220704 14:53:58.336"/>
</test>
<test id="s1-s1-s1-t5" name="UPDATE a Board's description" line="45">
<kw name="Create A Board" library="Board">
<var>${response}</var>
<arg>NewBoardForTest</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 14:53:58.338" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 14:53:58.338" endtime="20220704 14:53:58.338"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 14:53:58.338" endtime="20220704 14:53:58.339"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:53:58.339" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220704 14:53:58.339" endtime="20220704 14:53:58.339"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 14:53:58.563" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:53:58.339" endtime="20220704 14:53:58.563"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:53:58.563" endtime="20220704 14:53:58.563"/>
</return>
<msg timestamp="20220704 14:53:58.563" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:53:58.337" endtime="20220704 14:53:58.563"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:53:58.563" endtime="20220704 14:53:58.563"/>
</return>
<msg timestamp="20220704 14:53:58.564" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:53:58.337" endtime="20220704 14:53:58.564"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>board</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220704 14:53:58.564" endtime="20220704 14:53:58.569"/>
</kw>
<status status="PASS" starttime="20220704 14:53:58.564" endtime="20220704 14:53:58.569"/>
</kw>
<kw name="Update A Board" library="Board">
<arg>${response.json()}[id]</arg>
<arg>desc</arg>
<arg>sampleDescription</arg>
<doc>Updates the board with the given ID
optional_args: name, desc, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 14:53:58.571" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 14:53:58.571" endtime="20220704 14:53:58.571"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 14:53:58.571" endtime="20220704 14:53:58.571"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:53:58.572" level="INFO">${url} = boards/62c2ff06cc096583a1855599</msg>
<status status="PASS" starttime="20220704 14:53:58.571" endtime="20220704 14:53:58.572"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 14:53:58.668" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:53:58.572" endtime="20220704 14:53:58.668"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:53:58.668" endtime="20220704 14:53:58.668"/>
</return>
<msg timestamp="20220704 14:53:58.668" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:53:58.570" endtime="20220704 14:53:58.668"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:53:58.668" endtime="20220704 14:53:58.668"/>
</return>
<status status="PASS" starttime="20220704 14:53:58.569" endtime="20220704 14:53:58.669"/>
</kw>
<kw name="Get A Board" library="Board">
<var>${new_response}</var>
<arg>${response.json()}[id]</arg>
<doc>Gets the Board with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:53:58.671" level="INFO">${url} = boards/62c2ff06cc096583a1855599</msg>
<status status="PASS" starttime="20220704 14:53:58.671" endtime="20220704 14:53:58.671"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 14:53:58.725" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:53:58.671" endtime="20220704 14:53:58.725"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:53:58.725" endtime="20220704 14:53:58.725"/>
</return>
<msg timestamp="20220704 14:53:58.726" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:53:58.670" endtime="20220704 14:53:58.726"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:53:58.726" endtime="20220704 14:53:58.726"/>
</return>
<msg timestamp="20220704 14:53:58.726" level="INFO">${new_response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:53:58.669" endtime="20220704 14:53:58.726"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${new_response.json()}[desc]</arg>
<arg>sampleDescription</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220704 14:53:58.726" endtime="20220704 14:53:58.727"/>
</kw>
<kw name="Update A Board" library="Board">
<arg>${response.json()}[id]</arg>
<arg>desc</arg>
<arg>updatedDescription</arg>
<doc>Updates the board with the given ID
optional_args: name, desc, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 14:53:58.729" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 14:53:58.729" endtime="20220704 14:53:58.729"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 14:53:58.729" endtime="20220704 14:53:58.729"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:53:58.730" level="INFO">${url} = boards/62c2ff06cc096583a1855599</msg>
<status status="PASS" starttime="20220704 14:53:58.730" endtime="20220704 14:53:58.730"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 14:53:58.830" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:53:58.730" endtime="20220704 14:53:58.830"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:53:58.830" endtime="20220704 14:53:58.830"/>
</return>
<msg timestamp="20220704 14:53:58.831" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:53:58.728" endtime="20220704 14:53:58.831"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:53:58.831" endtime="20220704 14:53:58.831"/>
</return>
<status status="PASS" starttime="20220704 14:53:58.727" endtime="20220704 14:53:58.831"/>
</kw>
<kw name="Get A Board" library="Board">
<var>${new_response2}</var>
<arg>${response.json()}[id]</arg>
<doc>Gets the Board with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:53:58.833" level="INFO">${url} = boards/62c2ff06cc096583a1855599</msg>
<status status="PASS" starttime="20220704 14:53:58.833" endtime="20220704 14:53:58.833"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 14:53:58.894" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:53:58.833" endtime="20220704 14:53:58.894"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:53:58.894" endtime="20220704 14:53:58.894"/>
</return>
<msg timestamp="20220704 14:53:58.894" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:53:58.832" endtime="20220704 14:53:58.894"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:53:58.894" endtime="20220704 14:53:58.894"/>
</return>
<msg timestamp="20220704 14:53:58.894" level="INFO">${new_response2} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:53:58.831" endtime="20220704 14:53:58.894"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${new_response2.json()}[desc]</arg>
<arg>updatedDescription</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220704 14:53:58.895" endtime="20220704 14:53:58.896"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${response.json()}[id]</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${response.json()}[id]</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:53:58.898" level="INFO">${url} = boards/62c2ff06cc096583a1855599</msg>
<status status="PASS" starttime="20220704 14:53:58.898" endtime="20220704 14:53:58.898"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 14:53:59.243" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:53:58.898" endtime="20220704 14:53:59.243"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:53:59.243" endtime="20220704 14:53:59.243"/>
</return>
<msg timestamp="20220704 14:53:59.244" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:53:58.897" endtime="20220704 14:53:59.244"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:53:59.244" endtime="20220704 14:53:59.244"/>
</return>
<status status="PASS" starttime="20220704 14:53:58.896" endtime="20220704 14:53:59.244"/>
</kw>
<status status="PASS" starttime="20220704 14:53:58.896" endtime="20220704 14:53:59.244"/>
</kw>
<doc>Verify that a board's description can be updated through API</doc>
<tag>api</tag>
<tag>board.update</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220704 14:53:58.336" endtime="20220704 14:53:59.244"/>
</test>
<kw name="Delete All Sessions" library="request_own_library" type="TEARDOWN">
<status status="PASS" starttime="20220704 14:53:59.245" endtime="20220704 14:53:59.246"/>
</kw>
<doc>Example Test with Trello API Boards</doc>
<status status="PASS" starttime="20220704 14:53:55.691" endtime="20220704 14:53:59.247"/>
</suite>
<suite id="s1-s1-s2" name="Trello Api Cards Tests" source="/trello/api/trello_api_cards_tests.robot">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Create Trello Session</arg>
<arg>Setup Board And List</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Create Trello Session" library="TrelloAPI">
<doc>Creates a Trello Session</doc>
<kw name="Create Session" library="request_own_library">
<arg>${API_BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<status status="PASS" starttime="20220704 14:53:59.259" endtime="20220704 14:53:59.259"/>
</kw>
<status status="PASS" starttime="20220704 14:53:59.259" endtime="20220704 14:53:59.259"/>
</kw>
<kw name="Setup Board And List">
<doc>Create a board and save its ID and its first list's ID</doc>
<kw name="Create A Board" library="Board">
<var>${BOARD}</var>
<arg>TestBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 14:53:59.260" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 14:53:59.260" endtime="20220704 14:53:59.260"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 14:53:59.260" endtime="20220704 14:53:59.261"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:53:59.261" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220704 14:53:59.261" endtime="20220704 14:53:59.261"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 14:53:59.494" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:53:59.261" endtime="20220704 14:53:59.494"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:53:59.494" endtime="20220704 14:53:59.495"/>
</return>
<msg timestamp="20220704 14:53:59.495" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:53:59.260" endtime="20220704 14:53:59.495"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:53:59.495" endtime="20220704 14:53:59.495"/>
</return>
<msg timestamp="20220704 14:53:59.495" level="INFO">${BOARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:53:59.260" endtime="20220704 14:53:59.495"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_BOARD_ID}</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220704 14:53:59.496" level="INFO">${TEST_SUITE_BOARD_ID} = 62c2ff07c4c092092ccdc775</msg>
<status status="PASS" starttime="20220704 14:53:59.496" endtime="20220704 14:53:59.497"/>
</kw>
<kw name="Get Lists On A Board" library="Board">
<var>${LISTS}</var>
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Get all the lists in a board</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>lists_on_board</arg>
<arg>${id}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:53:59.498" level="INFO">${url} = boards/62c2ff07c4c092092ccdc775/lists/</msg>
<status status="PASS" starttime="20220704 14:53:59.497" endtime="20220704 14:53:59.498"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 14:53:59.546" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:53:59.498" endtime="20220704 14:53:59.547"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:53:59.547" endtime="20220704 14:53:59.547"/>
</return>
<msg timestamp="20220704 14:53:59.547" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:53:59.497" endtime="20220704 14:53:59.547"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:53:59.547" endtime="20220704 14:53:59.547"/>
</return>
<msg timestamp="20220704 14:53:59.547" level="INFO">${LISTS} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:53:59.497" endtime="20220704 14:53:59.547"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_LIST_ID}</arg>
<arg>${LISTS.json()}[0][id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220704 14:53:59.548" level="INFO">${TEST_SUITE_LIST_ID} = 62c2ff07c4c092092ccdc77c</msg>
<status status="PASS" starttime="20220704 14:53:59.547" endtime="20220704 14:53:59.548"/>
</kw>
<status status="PASS" starttime="20220704 14:53:59.259" endtime="20220704 14:53:59.549"/>
</kw>
<status status="PASS" starttime="20220704 14:53:59.258" endtime="20220704 14:53:59.549"/>
</kw>
<test id="s1-s1-s2-t1" name="Verify A Card Can Be Created" line="13">
<kw name="Create A Card" library="Card">
<var>${response}</var>
<arg>name</arg>
<arg>RFCard2</arg>
<doc>Creates a new card in the given list.
required_args: listId
optional_args: name, desc, pos, idCardSource, idLabels, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>@{optional_args}</arg>
<arg>idList</arg>
<arg>${idList}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 14:53:59.551" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 14:53:59.550" endtime="20220704 14:53:59.551"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 14:53:59.551" endtime="20220704 14:53:59.551"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:53:59.552" level="INFO">${url} = cards/</msg>
<status status="PASS" starttime="20220704 14:53:59.551" endtime="20220704 14:53:59.552"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 14:53:59.708" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:53:59.552" endtime="20220704 14:53:59.708"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:53:59.708" endtime="20220704 14:53:59.709"/>
</return>
<msg timestamp="20220704 14:53:59.709" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:53:59.550" endtime="20220704 14:53:59.709"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:53:59.709" endtime="20220704 14:53:59.709"/>
</return>
<msg timestamp="20220704 14:53:59.709" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:53:59.549" endtime="20220704 14:53:59.709"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>card</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220704 14:53:59.710" endtime="20220704 14:53:59.715"/>
</kw>
<status status="PASS" starttime="20220704 14:53:59.709" endtime="20220704 14:53:59.715"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 14:53:59.716" endtime="20220704 14:53:59.716"/>
</return>
<msg timestamp="20220704 14:53:59.716" level="INFO">${CARD_ID} = 62c2ff077d068321ce8dd78e</msg>
<status status="PASS" starttime="20220704 14:53:59.715" endtime="20220704 14:53:59.716"/>
</kw>
<kw name="Get A Card" library="Card">
<var>${response}</var>
<arg>${CARD_ID}</arg>
<doc>Gets the card with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:53:59.717" level="INFO">${url} = cards/62c2ff077d068321ce8dd78e</msg>
<status status="PASS" starttime="20220704 14:53:59.717" endtime="20220704 14:53:59.717"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 14:53:59.782" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:53:59.718" endtime="20220704 14:53:59.782"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:53:59.782" endtime="20220704 14:53:59.782"/>
</return>
<msg timestamp="20220704 14:53:59.782" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:53:59.717" endtime="20220704 14:53:59.782"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:53:59.782" endtime="20220704 14:53:59.782"/>
</return>
<msg timestamp="20220704 14:53:59.782" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:53:59.716" endtime="20220704 14:53:59.783"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_NAME}</var>
<arg>${response}</arg>
<arg>name</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 14:53:59.783" endtime="20220704 14:53:59.783"/>
</return>
<msg timestamp="20220704 14:53:59.784" level="INFO">${CARD_NAME} = RFCard2</msg>
<status status="PASS" starttime="20220704 14:53:59.783" endtime="20220704 14:53:59.784"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${CARD_NAME}</arg>
<arg>RFCard2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220704 14:53:59.784" endtime="20220704 14:53:59.784"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Card</arg>
<arg>${CARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Card" library="Card">
<arg>${CARD_ID}</arg>
<doc>Deletes the card with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:53:59.786" level="INFO">${url} = cards/62c2ff077d068321ce8dd78e</msg>
<status status="PASS" starttime="20220704 14:53:59.786" endtime="20220704 14:53:59.786"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 14:53:59.951" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:53:59.786" endtime="20220704 14:53:59.951"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:53:59.951" endtime="20220704 14:53:59.951"/>
</return>
<msg timestamp="20220704 14:53:59.951" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:53:59.785" endtime="20220704 14:53:59.951"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:53:59.951" endtime="20220704 14:53:59.951"/>
</return>
<status status="PASS" starttime="20220704 14:53:59.785" endtime="20220704 14:53:59.952"/>
</kw>
<status status="PASS" starttime="20220704 14:53:59.784" endtime="20220704 14:53:59.952"/>
</kw>
<doc>Verify that a card can be created through API</doc>
<tag>api</tag>
<tag>card.create</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220704 14:53:59.549" endtime="20220704 14:53:59.952"/>
</test>
<test id="s1-s1-s2-t2" name="Verify A Card Can Be Closed" line="24">
<kw name="Create A Card" library="Card">
<var>${response}</var>
<doc>Creates a new card in the given list.
required_args: listId
optional_args: name, desc, pos, idCardSource, idLabels, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>@{optional_args}</arg>
<arg>idList</arg>
<arg>${idList}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 14:53:59.955" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 14:53:59.955" endtime="20220704 14:53:59.955"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 14:53:59.956" endtime="20220704 14:53:59.956"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:53:59.957" level="INFO">${url} = cards/</msg>
<status status="PASS" starttime="20220704 14:53:59.956" endtime="20220704 14:53:59.957"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 14:54:00.160" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:53:59.957" endtime="20220704 14:54:00.160"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:54:00.160" endtime="20220704 14:54:00.160"/>
</return>
<msg timestamp="20220704 14:54:00.160" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:53:59.954" endtime="20220704 14:54:00.160"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:54:00.160" endtime="20220704 14:54:00.160"/>
</return>
<msg timestamp="20220704 14:54:00.161" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:53:59.954" endtime="20220704 14:54:00.161"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 14:54:00.161" endtime="20220704 14:54:00.161"/>
</return>
<msg timestamp="20220704 14:54:00.162" level="INFO">${CARD_ID} = 62c2ff089b4b31454b7631ec</msg>
<status status="PASS" starttime="20220704 14:54:00.161" endtime="20220704 14:54:00.162"/>
</kw>
<kw name="Archive A Card" library="Card">
<arg>${CARD_ID}</arg>
<doc>Modifies the card status to closed.</doc>
<kw name="Update A Card" library="Card">
<var>${response}</var>
<arg>${id}</arg>
<arg>closed</arg>
<arg>true</arg>
<arg>status_code=${status_code}</arg>
<doc>Updates the card with the given ID
optional_args: name, desc, closed, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<arg>status_code=${status_code}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 14:54:00.164" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 14:54:00.164" endtime="20220704 14:54:00.164"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 14:54:00.164" endtime="20220704 14:54:00.165"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:54:00.165" level="INFO">${url} = cards/62c2ff089b4b31454b7631ec</msg>
<status status="PASS" starttime="20220704 14:54:00.165" endtime="20220704 14:54:00.165"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 14:54:00.297" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:54:00.165" endtime="20220704 14:54:00.298"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:54:00.298" endtime="20220704 14:54:00.298"/>
</return>
<msg timestamp="20220704 14:54:00.298" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:54:00.163" endtime="20220704 14:54:00.298"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:54:00.298" endtime="20220704 14:54:00.298"/>
</return>
<msg timestamp="20220704 14:54:00.298" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:54:00.163" endtime="20220704 14:54:00.298"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:54:00.298" endtime="20220704 14:54:00.299"/>
</return>
<status status="PASS" starttime="20220704 14:54:00.162" endtime="20220704 14:54:00.299"/>
</kw>
<kw name="Get A Card" library="Card">
<var>${response}</var>
<arg>${CARD_ID}</arg>
<doc>Gets the card with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:54:00.300" level="INFO">${url} = cards/62c2ff089b4b31454b7631ec</msg>
<status status="PASS" starttime="20220704 14:54:00.300" endtime="20220704 14:54:00.300"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 14:54:00.357" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:54:00.300" endtime="20220704 14:54:00.357"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:54:00.357" endtime="20220704 14:54:00.357"/>
</return>
<msg timestamp="20220704 14:54:00.357" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:54:00.299" endtime="20220704 14:54:00.357"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:54:00.357" endtime="20220704 14:54:00.357"/>
</return>
<msg timestamp="20220704 14:54:00.358" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:54:00.299" endtime="20220704 14:54:00.358"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_CLOSED}</var>
<arg>${response}</arg>
<arg>closed</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 14:54:00.358" endtime="20220704 14:54:00.358"/>
</return>
<msg timestamp="20220704 14:54:00.359" level="INFO">${CARD_CLOSED} = True</msg>
<status status="PASS" starttime="20220704 14:54:00.358" endtime="20220704 14:54:00.359"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${CARD_CLOSED}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220704 14:54:00.360" endtime="20220704 14:54:00.360"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Card</arg>
<arg>${CARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Card" library="Card">
<arg>${CARD_ID}</arg>
<doc>Deletes the card with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:54:00.362" level="INFO">${url} = cards/62c2ff089b4b31454b7631ec</msg>
<status status="PASS" starttime="20220704 14:54:00.361" endtime="20220704 14:54:00.362"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 14:54:00.519" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:54:00.362" endtime="20220704 14:54:00.519"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:54:00.519" endtime="20220704 14:54:00.520"/>
</return>
<msg timestamp="20220704 14:54:00.520" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:54:00.361" endtime="20220704 14:54:00.520"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:54:00.520" endtime="20220704 14:54:00.520"/>
</return>
<status status="PASS" starttime="20220704 14:54:00.360" endtime="20220704 14:54:00.520"/>
</kw>
<status status="PASS" starttime="20220704 14:54:00.360" endtime="20220704 14:54:00.520"/>
</kw>
<doc>Verify that a card can be closed through API</doc>
<tag>api</tag>
<tag>card.close</tag>
<tag>regression</tag>
<status status="PASS" starttime="20220704 14:53:59.952" endtime="20220704 14:54:00.520"/>
</test>
<test id="s1-s1-s2-t3" name="Verify A Card Can Be Deleted" line="35">
<kw name="Create A Card" library="Card">
<var>${response}</var>
<doc>Creates a new card in the given list.
required_args: listId
optional_args: name, desc, pos, idCardSource, idLabels, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>@{optional_args}</arg>
<arg>idList</arg>
<arg>${idList}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 14:54:00.524" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 14:54:00.524" endtime="20220704 14:54:00.524"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 14:54:00.524" endtime="20220704 14:54:00.525"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:54:00.525" level="INFO">${url} = cards/</msg>
<status status="PASS" starttime="20220704 14:54:00.525" endtime="20220704 14:54:00.525"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 14:54:00.681" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:54:00.526" endtime="20220704 14:54:00.681"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:54:00.681" endtime="20220704 14:54:00.681"/>
</return>
<msg timestamp="20220704 14:54:00.681" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:54:00.523" endtime="20220704 14:54:00.681"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:54:00.681" endtime="20220704 14:54:00.682"/>
</return>
<msg timestamp="20220704 14:54:00.682" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:54:00.522" endtime="20220704 14:54:00.682"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 14:54:00.682" endtime="20220704 14:54:00.682"/>
</return>
<msg timestamp="20220704 14:54:00.683" level="INFO">${CARD_ID} = 62c2ff08f00c3979292c2b0f</msg>
<status status="PASS" starttime="20220704 14:54:00.682" endtime="20220704 14:54:00.683"/>
</kw>
<kw name="Delete A Card" library="Card">
<var>${response}</var>
<arg>${CARD_ID}</arg>
<doc>Deletes the card with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:54:00.685" level="INFO">${url} = cards/62c2ff08f00c3979292c2b0f</msg>
<status status="PASS" starttime="20220704 14:54:00.684" endtime="20220704 14:54:00.685"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 14:54:00.862" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:54:00.685" endtime="20220704 14:54:00.862"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:54:00.862" endtime="20220704 14:54:00.862"/>
</return>
<msg timestamp="20220704 14:54:00.863" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:54:00.684" endtime="20220704 14:54:00.863"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:54:00.863" endtime="20220704 14:54:00.863"/>
</return>
<msg timestamp="20220704 14:54:00.864" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:54:00.683" endtime="20220704 14:54:00.864"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>delete</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220704 14:54:00.865" endtime="20220704 14:54:00.867"/>
</kw>
<status status="PASS" starttime="20220704 14:54:00.864" endtime="20220704 14:54:00.867"/>
</kw>
<kw name="Get A Card" library="Card">
<arg>${CARD_ID}</arg>
<arg>status_code=404</arg>
<doc>Gets the card with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:54:00.868" level="INFO">${url} = cards/62c2ff08f00c3979292c2b0f</msg>
<status status="PASS" starttime="20220704 14:54:00.868" endtime="20220704 14:54:00.868"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 14:54:00.910" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220704 14:54:00.868" endtime="20220704 14:54:00.910"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:54:00.910" endtime="20220704 14:54:00.910"/>
</return>
<msg timestamp="20220704 14:54:00.911" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220704 14:54:00.867" endtime="20220704 14:54:00.911"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:54:00.911" endtime="20220704 14:54:00.911"/>
</return>
<status status="PASS" starttime="20220704 14:54:00.867" endtime="20220704 14:54:00.911"/>
</kw>
<doc>Verify that a card can be deleted through API</doc>
<tag>api</tag>
<tag>card.delete</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220704 14:54:00.521" endtime="20220704 14:54:00.911"/>
</test>
<test id="s1-s1-s2-t4" name="Verify A Card Can Be Updated" line="44">
<kw name="Create A Card" library="Card">
<var>${response}</var>
<arg>name</arg>
<arg>RFCard4</arg>
<doc>Creates a new card in the given list.
required_args: listId
optional_args: name, desc, pos, idCardSource, idLabels, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>@{optional_args}</arg>
<arg>idList</arg>
<arg>${idList}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 14:54:00.914" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 14:54:00.914" endtime="20220704 14:54:00.914"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 14:54:00.914" endtime="20220704 14:54:00.915"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:54:00.915" level="INFO">${url} = cards/</msg>
<status status="PASS" starttime="20220704 14:54:00.915" endtime="20220704 14:54:00.915"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 14:54:01.088" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:54:00.916" endtime="20220704 14:54:01.088"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:54:01.088" endtime="20220704 14:54:01.088"/>
</return>
<msg timestamp="20220704 14:54:01.088" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:54:00.913" endtime="20220704 14:54:01.088"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:54:01.088" endtime="20220704 14:54:01.088"/>
</return>
<msg timestamp="20220704 14:54:01.088" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:54:00.913" endtime="20220704 14:54:01.089"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 14:54:01.089" endtime="20220704 14:54:01.089"/>
</return>
<msg timestamp="20220704 14:54:01.090" level="INFO">${CARD_ID} = 62c2ff08c25b677b0bba612c</msg>
<status status="PASS" starttime="20220704 14:54:01.089" endtime="20220704 14:54:01.090"/>
</kw>
<kw name="Update A Card" library="Card">
<var>${response}</var>
<arg>${CARD_ID}</arg>
<arg>name</arg>
<arg>RFCard5</arg>
<arg>desc</arg>
<arg>Description</arg>
<doc>Updates the card with the given ID
optional_args: name, desc, closed, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<arg>status_code=${status_code}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 14:54:01.092" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 14:54:01.092" endtime="20220704 14:54:01.092"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 14:54:01.092" endtime="20220704 14:54:01.093"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:54:01.093" level="INFO">${url} = cards/62c2ff08c25b677b0bba612c</msg>
<status status="PASS" starttime="20220704 14:54:01.093" endtime="20220704 14:54:01.093"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 14:54:01.241" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:54:01.093" endtime="20220704 14:54:01.241"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:54:01.241" endtime="20220704 14:54:01.241"/>
</return>
<msg timestamp="20220704 14:54:01.241" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:54:01.091" endtime="20220704 14:54:01.241"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:54:01.241" endtime="20220704 14:54:01.242"/>
</return>
<msg timestamp="20220704 14:54:01.242" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:54:01.090" endtime="20220704 14:54:01.242"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>card</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220704 14:54:01.242" endtime="20220704 14:54:01.250"/>
</kw>
<status status="PASS" starttime="20220704 14:54:01.242" endtime="20220704 14:54:01.250"/>
</kw>
<kw name="Get A Card" library="Card">
<var>${response}</var>
<arg>${CARD_ID}</arg>
<doc>Gets the card with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:54:01.253" level="INFO">${url} = cards/62c2ff08c25b677b0bba612c</msg>
<status status="PASS" starttime="20220704 14:54:01.252" endtime="20220704 14:54:01.253"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 14:54:01.325" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:54:01.253" endtime="20220704 14:54:01.325"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:54:01.325" endtime="20220704 14:54:01.325"/>
</return>
<msg timestamp="20220704 14:54:01.325" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:54:01.251" endtime="20220704 14:54:01.325"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:54:01.325" endtime="20220704 14:54:01.325"/>
</return>
<msg timestamp="20220704 14:54:01.326" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:54:01.250" endtime="20220704 14:54:01.326"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_NAME}</var>
<arg>${response}</arg>
<arg>name</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 14:54:01.326" endtime="20220704 14:54:01.326"/>
</return>
<msg timestamp="20220704 14:54:01.327" level="INFO">${CARD_NAME} = RFCard5</msg>
<status status="PASS" starttime="20220704 14:54:01.326" endtime="20220704 14:54:01.327"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_DESC}</var>
<arg>${response}</arg>
<arg>desc</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 14:54:01.328" endtime="20220704 14:54:01.328"/>
</return>
<msg timestamp="20220704 14:54:01.329" level="INFO">${CARD_DESC} = Description</msg>
<status status="PASS" starttime="20220704 14:54:01.327" endtime="20220704 14:54:01.329"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${CARD_NAME}</arg>
<arg>RFCard5</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220704 14:54:01.329" endtime="20220704 14:54:01.329"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${CARD_DESC}</arg>
<arg>Description</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220704 14:54:01.329" endtime="20220704 14:54:01.329"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Card</arg>
<arg>${CARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Card" library="Card">
<arg>${CARD_ID}</arg>
<doc>Deletes the card with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:54:01.331" level="INFO">${url} = cards/62c2ff08c25b677b0bba612c</msg>
<status status="PASS" starttime="20220704 14:54:01.331" endtime="20220704 14:54:01.331"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 14:54:01.487" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:54:01.331" endtime="20220704 14:54:01.488"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:54:01.488" endtime="20220704 14:54:01.488"/>
</return>
<msg timestamp="20220704 14:54:01.488" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:54:01.330" endtime="20220704 14:54:01.488"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:54:01.488" endtime="20220704 14:54:01.488"/>
</return>
<status status="PASS" starttime="20220704 14:54:01.330" endtime="20220704 14:54:01.488"/>
</kw>
<status status="PASS" starttime="20220704 14:54:01.330" endtime="20220704 14:54:01.488"/>
</kw>
<doc>Verify that a card's name and Description can be updated through API</doc>
<tag>api</tag>
<tag>card.update</tag>
<tag>regression</tag>
<status status="PASS" starttime="20220704 14:54:00.912" endtime="20220704 14:54:01.488"/>
</test>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Teardown Board</arg>
<arg>Delete All Sessions</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Teardown Board">
<doc>Delete the board created for this suite</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:54:01.493" level="INFO">${url} = boards/62c2ff07c4c092092ccdc775</msg>
<status status="PASS" starttime="20220704 14:54:01.492" endtime="20220704 14:54:01.493"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 14:54:01.866" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:54:01.493" endtime="20220704 14:54:01.866"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:54:01.866" endtime="20220704 14:54:01.866"/>
</return>
<msg timestamp="20220704 14:54:01.866" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:54:01.492" endtime="20220704 14:54:01.866"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:54:01.866" endtime="20220704 14:54:01.866"/>
</return>
<status status="PASS" starttime="20220704 14:54:01.491" endtime="20220704 14:54:01.867"/>
</kw>
<status status="PASS" starttime="20220704 14:54:01.491" endtime="20220704 14:54:01.867"/>
</kw>
<status status="PASS" starttime="20220704 14:54:01.490" endtime="20220704 14:54:01.867"/>
</kw>
<kw name="Delete All Sessions" library="request_own_library">
<status status="PASS" starttime="20220704 14:54:01.867" endtime="20220704 14:54:01.868"/>
</kw>
<status status="PASS" starttime="20220704 14:54:01.490" endtime="20220704 14:54:01.868"/>
</kw>
<doc>Example Test with Trello API Cards</doc>
<status status="PASS" starttime="20220704 14:53:59.248" endtime="20220704 14:54:01.868"/>
</suite>
<suite id="s1-s1-s3" name="Trello Api Checklists Tests" source="/trello/api/trello_api_checklists_tests.robot">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Create Trello Session</arg>
<arg>Setup Board, List And Card</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Create Trello Session" library="TrelloAPI">
<doc>Creates a Trello Session</doc>
<kw name="Create Session" library="request_own_library">
<arg>${API_BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<status status="PASS" starttime="20220704 14:54:01.882" endtime="20220704 14:54:01.883"/>
</kw>
<status status="PASS" starttime="20220704 14:54:01.881" endtime="20220704 14:54:01.883"/>
</kw>
<kw name="Setup Board, List And Card">
<doc>Create a board and save its ID and its first list's ID</doc>
<kw name="Create A Board" library="Board">
<var>${BOARD}</var>
<arg>TestBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 14:54:01.884" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 14:54:01.884" endtime="20220704 14:54:01.884"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 14:54:01.884" endtime="20220704 14:54:01.884"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:54:01.885" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220704 14:54:01.884" endtime="20220704 14:54:01.885"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 14:54:02.092" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:54:01.885" endtime="20220704 14:54:02.092"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:54:02.092" endtime="20220704 14:54:02.092"/>
</return>
<msg timestamp="20220704 14:54:02.092" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:54:01.883" endtime="20220704 14:54:02.092"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:54:02.092" endtime="20220704 14:54:02.093"/>
</return>
<msg timestamp="20220704 14:54:02.093" level="INFO">${BOARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:54:01.883" endtime="20220704 14:54:02.093"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_BOARD_ID}</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220704 14:54:02.094" level="INFO">${TEST_SUITE_BOARD_ID} = 62c2ff09272cfd6a808d2a0d</msg>
<status status="PASS" starttime="20220704 14:54:02.093" endtime="20220704 14:54:02.094"/>
</kw>
<kw name="Get Lists On A Board" library="Board">
<var>${LISTS}</var>
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Get all the lists in a board</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>lists_on_board</arg>
<arg>${id}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:54:02.095" level="INFO">${url} = boards/62c2ff09272cfd6a808d2a0d/lists/</msg>
<status status="PASS" starttime="20220704 14:54:02.095" endtime="20220704 14:54:02.095"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 14:54:02.153" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:54:02.095" endtime="20220704 14:54:02.153"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:54:02.153" endtime="20220704 14:54:02.153"/>
</return>
<msg timestamp="20220704 14:54:02.154" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:54:02.095" endtime="20220704 14:54:02.154"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:54:02.154" endtime="20220704 14:54:02.154"/>
</return>
<msg timestamp="20220704 14:54:02.154" level="INFO">${LISTS} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:54:02.094" endtime="20220704 14:54:02.154"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_LIST_ID}</arg>
<arg>${LISTS.json()}[0][id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220704 14:54:02.155" level="INFO">${TEST_SUITE_LIST_ID} = 62c2ff09272cfd6a808d2a14</msg>
<status status="PASS" starttime="20220704 14:54:02.154" endtime="20220704 14:54:02.155"/>
</kw>
<kw name="Create A Card" library="Card">
<var>${CARD}</var>
<arg>name</arg>
<arg>TestCard</arg>
<doc>Creates a new card in the given list.
required_args: listId
optional_args: name, desc, pos, idCardSource, idLabels, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>@{optional_args}</arg>
<arg>idList</arg>
<arg>${idList}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 14:54:02.157" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 14:54:02.157" endtime="20220704 14:54:02.157"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 14:54:02.157" endtime="20220704 14:54:02.157"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:54:02.158" level="INFO">${url} = cards/</msg>
<status status="PASS" starttime="20220704 14:54:02.157" endtime="20220704 14:54:02.158"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 14:54:02.327" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:54:02.158" endtime="20220704 14:54:02.327"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:54:02.328" endtime="20220704 14:54:02.328"/>
</return>
<msg timestamp="20220704 14:54:02.328" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:54:02.156" endtime="20220704 14:54:02.328"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:54:02.328" endtime="20220704 14:54:02.328"/>
</return>
<msg timestamp="20220704 14:54:02.328" level="INFO">${CARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:54:02.155" endtime="20220704 14:54:02.328"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_CARD_ID}</arg>
<arg>${CARD.json()}[id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220704 14:54:02.329" level="INFO">${TEST_SUITE_CARD_ID} = 62c2ff0a4bb6d07f0b792ab9</msg>
<status status="PASS" starttime="20220704 14:54:02.328" endtime="20220704 14:54:02.329"/>
</kw>
<status status="PASS" starttime="20220704 14:54:01.883" endtime="20220704 14:54:02.329"/>
</kw>
<status status="PASS" starttime="20220704 14:54:01.881" endtime="20220704 14:54:02.330"/>
</kw>
<test id="s1-s1-s3-t1" name="Verify A Checklist Can Be Created" line="14">
<kw name="Create A Checklist" library="Checklist">
<var>${response}</var>
<arg>name</arg>
<arg>TestChecklist</arg>
<arg>idCard=${TEST_SUITE_CARD_ID}</arg>
<doc>Creates a new checklist in the given card.
required_args: idCard
optional_args: name, pos, idChecklistSource
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>@{optional_args}</arg>
<arg>idCard</arg>
<arg>${idCard}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 14:54:02.332" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 14:54:02.332" endtime="20220704 14:54:02.332"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 14:54:02.332" endtime="20220704 14:54:02.332"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:54:02.333" level="INFO">${url} = checklists/</msg>
<status status="PASS" starttime="20220704 14:54:02.332" endtime="20220704 14:54:02.333"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 14:54:02.440" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:54:02.333" endtime="20220704 14:54:02.440"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:54:02.440" endtime="20220704 14:54:02.440"/>
</return>
<msg timestamp="20220704 14:54:02.440" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:54:02.331" endtime="20220704 14:54:02.440"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:54:02.440" endtime="20220704 14:54:02.440"/>
</return>
<msg timestamp="20220704 14:54:02.440" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:54:02.330" endtime="20220704 14:54:02.441"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${checklist_id}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 14:54:02.441" endtime="20220704 14:54:02.441"/>
</return>
<msg timestamp="20220704 14:54:02.442" level="INFO">${checklist_id} = 62c2ff0a3b5c26340a311abe</msg>
<status status="PASS" starttime="20220704 14:54:02.441" endtime="20220704 14:54:02.442"/>
</kw>
<kw name="Get A Checklist" library="Checklist">
<var>${response}</var>
<arg>${checklist_id}</arg>
<doc>Gets the checklist with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:54:02.443" level="INFO">${url} = checklists/62c2ff0a3b5c26340a311abe</msg>
<status status="PASS" starttime="20220704 14:54:02.443" endtime="20220704 14:54:02.443"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 14:54:02.503" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:54:02.443" endtime="20220704 14:54:02.503"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:54:02.503" endtime="20220704 14:54:02.503"/>
</return>
<msg timestamp="20220704 14:54:02.504" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:54:02.442" endtime="20220704 14:54:02.504"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:54:02.504" endtime="20220704 14:54:02.504"/>
</return>
<msg timestamp="20220704 14:54:02.504" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:54:02.442" endtime="20220704 14:54:02.504"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${checklist_name}</var>
<arg>${response}</arg>
<arg>name</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 14:54:02.505" endtime="20220704 14:54:02.505"/>
</return>
<msg timestamp="20220704 14:54:02.505" level="INFO">${checklist_name} = TestChecklist</msg>
<status status="PASS" starttime="20220704 14:54:02.504" endtime="20220704 14:54:02.505"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${checklist_name}</arg>
<arg>TestChecklist</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220704 14:54:02.506" endtime="20220704 14:54:02.506"/>
</kw>
<kw name="Delete A Checklist" library="Checklist" type="TEARDOWN">
<arg>${checklist_id}</arg>
<doc>Deletes the checklist with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:54:02.507" level="INFO">${url} = checklists/62c2ff0a3b5c26340a311abe</msg>
<status status="PASS" starttime="20220704 14:54:02.507" endtime="20220704 14:54:02.507"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 14:54:02.626" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:54:02.508" endtime="20220704 14:54:02.626"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:54:02.626" endtime="20220704 14:54:02.626"/>
</return>
<msg timestamp="20220704 14:54:02.626" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:54:02.507" endtime="20220704 14:54:02.626"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:54:02.626" endtime="20220704 14:54:02.626"/>
</return>
<status status="PASS" starttime="20220704 14:54:02.506" endtime="20220704 14:54:02.627"/>
</kw>
<doc>Verify that a checklist can be created through API</doc>
<tag>api</tag>
<tag>checklist.create</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220704 14:54:02.330" endtime="20220704 14:54:02.627"/>
</test>
<test id="s1-s1-s3-t2" name="Verify A Checklist Can Be Deleted" line="24">
<kw name="Create A Checklist" library="Checklist">
<var>${response}</var>
<arg>name</arg>
<arg>TestChecklist</arg>
<arg>idCard=${TEST_SUITE_CARD_ID}</arg>
<doc>Creates a new checklist in the given card.
required_args: idCard
optional_args: name, pos, idChecklistSource
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>@{optional_args}</arg>
<arg>idCard</arg>
<arg>${idCard}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 14:54:02.629" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 14:54:02.629" endtime="20220704 14:54:02.629"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 14:54:02.629" endtime="20220704 14:54:02.630"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:54:02.631" level="INFO">${url} = checklists/</msg>
<status status="PASS" starttime="20220704 14:54:02.630" endtime="20220704 14:54:02.631"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 14:54:02.739" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:54:02.631" endtime="20220704 14:54:02.739"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:54:02.739" endtime="20220704 14:54:02.739"/>
</return>
<msg timestamp="20220704 14:54:02.739" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:54:02.628" endtime="20220704 14:54:02.739"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:54:02.739" endtime="20220704 14:54:02.739"/>
</return>
<msg timestamp="20220704 14:54:02.740" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:54:02.628" endtime="20220704 14:54:02.740"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${checklist_id}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 14:54:02.740" endtime="20220704 14:54:02.740"/>
</return>
<msg timestamp="20220704 14:54:02.742" level="INFO">${checklist_id} = 62c2ff0ac5fa8d6d4b0504f6</msg>
<status status="PASS" starttime="20220704 14:54:02.740" endtime="20220704 14:54:02.742"/>
</kw>
<kw name="Delete A Checklist" library="Checklist">
<var>${response}</var>
<arg>${checklist_id}</arg>
<doc>Deletes the checklist with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:54:02.743" level="INFO">${url} = checklists/62c2ff0ac5fa8d6d4b0504f6</msg>
<status status="PASS" starttime="20220704 14:54:02.743" endtime="20220704 14:54:02.743"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 14:54:02.861" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:54:02.743" endtime="20220704 14:54:02.861"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:54:02.861" endtime="20220704 14:54:02.861"/>
</return>
<msg timestamp="20220704 14:54:02.861" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:54:02.742" endtime="20220704 14:54:02.861"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:54:02.861" endtime="20220704 14:54:02.861"/>
</return>
<msg timestamp="20220704 14:54:02.862" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:54:02.742" endtime="20220704 14:54:02.862"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>delete</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220704 14:54:02.862" endtime="20220704 14:54:02.865"/>
</kw>
<status status="PASS" starttime="20220704 14:54:02.862" endtime="20220704 14:54:02.865"/>
</kw>
<kw name="Get A Checklist" library="Checklist">
<arg>${checklist_id}</arg>
<arg>status_code=404</arg>
<doc>Gets the checklist with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:54:02.866" level="INFO">${url} = checklists/62c2ff0ac5fa8d6d4b0504f6</msg>
<status status="PASS" starttime="20220704 14:54:02.866" endtime="20220704 14:54:02.866"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 14:54:02.908" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220704 14:54:02.866" endtime="20220704 14:54:02.908"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:54:02.908" endtime="20220704 14:54:02.908"/>
</return>
<msg timestamp="20220704 14:54:02.909" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220704 14:54:02.865" endtime="20220704 14:54:02.909"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:54:02.909" endtime="20220704 14:54:02.909"/>
</return>
<status status="PASS" starttime="20220704 14:54:02.865" endtime="20220704 14:54:02.909"/>
</kw>
<doc>Verify that a checklist can be deleted through API</doc>
<tag>api</tag>
<tag>checklist.delete</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220704 14:54:02.627" endtime="20220704 14:54:02.909"/>
</test>
<test id="s1-s1-s3-t3" name="Verify A Checklist Can Be Updated" line="33">
<kw name="Create A Checklist" library="Checklist">
<var>${response}</var>
<arg>name</arg>
<arg>TestChecklist</arg>
<arg>idCard=${TEST_SUITE_CARD_ID}</arg>
<doc>Creates a new checklist in the given card.
required_args: idCard
optional_args: name, pos, idChecklistSource
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>@{optional_args}</arg>
<arg>idCard</arg>
<arg>${idCard}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 14:54:02.914" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 14:54:02.912" endtime="20220704 14:54:02.914"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 14:54:02.914" endtime="20220704 14:54:02.914"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:54:02.915" level="INFO">${url} = checklists/</msg>
<status status="PASS" starttime="20220704 14:54:02.914" endtime="20220704 14:54:02.915"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 14:54:03.024" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:54:02.915" endtime="20220704 14:54:03.024"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:54:03.024" endtime="20220704 14:54:03.024"/>
</return>
<msg timestamp="20220704 14:54:03.024" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:54:02.911" endtime="20220704 14:54:03.025"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:54:03.025" endtime="20220704 14:54:03.025"/>
</return>
<msg timestamp="20220704 14:54:03.025" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:54:02.910" endtime="20220704 14:54:03.025"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${checklist_id}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 14:54:03.025" endtime="20220704 14:54:03.025"/>
</return>
<msg timestamp="20220704 14:54:03.026" level="INFO">${checklist_id} = 62c2ff0aa51849576aed1ec6</msg>
<status status="PASS" starttime="20220704 14:54:03.025" endtime="20220704 14:54:03.026"/>
</kw>
<kw name="Update A Checklist" library="Checklist">
<var>${response}</var>
<arg>${checklist_id}</arg>
<arg>name</arg>
<arg>TestChecklist2</arg>
<doc>Updates the checklist with the given ID
optional_args: name, pos
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<arg>status_code=${status_code}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 14:54:03.028" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 14:54:03.028" endtime="20220704 14:54:03.028"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 14:54:03.028" endtime="20220704 14:54:03.028"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:54:03.029" level="INFO">${url} = checklists/62c2ff0aa51849576aed1ec6</msg>
<status status="PASS" starttime="20220704 14:54:03.028" endtime="20220704 14:54:03.029"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 14:54:03.124" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:54:03.029" endtime="20220704 14:54:03.124"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:54:03.124" endtime="20220704 14:54:03.124"/>
</return>
<msg timestamp="20220704 14:54:03.124" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:54:03.027" endtime="20220704 14:54:03.124"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:54:03.124" endtime="20220704 14:54:03.124"/>
</return>
<msg timestamp="20220704 14:54:03.125" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:54:03.027" endtime="20220704 14:54:03.125"/>
</kw>
<kw name="Get A Checklist" library="Checklist">
<var>${response}</var>
<arg>${checklist_id}</arg>
<doc>Gets the checklist with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:54:03.126" level="INFO">${url} = checklists/62c2ff0aa51849576aed1ec6</msg>
<status status="PASS" starttime="20220704 14:54:03.126" endtime="20220704 14:54:03.126"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 14:54:03.186" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:54:03.126" endtime="20220704 14:54:03.186"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:54:03.186" endtime="20220704 14:54:03.186"/>
</return>
<msg timestamp="20220704 14:54:03.187" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:54:03.125" endtime="20220704 14:54:03.187"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:54:03.187" endtime="20220704 14:54:03.187"/>
</return>
<msg timestamp="20220704 14:54:03.187" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:54:03.125" endtime="20220704 14:54:03.187"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${checklist_name}</var>
<arg>${response}</arg>
<arg>name</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 14:54:03.188" endtime="20220704 14:54:03.188"/>
</return>
<msg timestamp="20220704 14:54:03.189" level="INFO">${checklist_name} = TestChecklist2</msg>
<status status="PASS" starttime="20220704 14:54:03.187" endtime="20220704 14:54:03.189"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${checklist_name}</arg>
<arg>TestChecklist2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220704 14:54:03.189" endtime="20220704 14:54:03.189"/>
</kw>
<kw name="Delete A Checklist" library="Checklist" type="TEARDOWN">
<arg>${checklist_id}</arg>
<doc>Deletes the checklist with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:54:03.206" level="INFO">${url} = checklists/62c2ff0aa51849576aed1ec6</msg>
<status status="PASS" starttime="20220704 14:54:03.206" endtime="20220704 14:54:03.206"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 14:54:03.342" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:54:03.206" endtime="20220704 14:54:03.342"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:54:03.342" endtime="20220704 14:54:03.342"/>
</return>
<msg timestamp="20220704 14:54:03.343" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:54:03.206" endtime="20220704 14:54:03.343"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:54:03.343" endtime="20220704 14:54:03.343"/>
</return>
<status status="PASS" starttime="20220704 14:54:03.189" endtime="20220704 14:54:03.343"/>
</kw>
<doc>Verify that a checklist's name can be updated through API</doc>
<tag>api</tag>
<tag>checklist.update</tag>
<tag>regression</tag>
<status status="PASS" starttime="20220704 14:54:02.910" endtime="20220704 14:54:03.343"/>
</test>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Teardown Board</arg>
<arg>Delete All Sessions</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Teardown Board">
<doc>Delete the board created for this suite</doc>
<kw name="Delete A Board" library="Board">
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:54:03.345" level="INFO">${url} = boards/62c2ff09272cfd6a808d2a0d</msg>
<status status="PASS" starttime="20220704 14:54:03.345" endtime="20220704 14:54:03.346"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 14:54:03.765" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:54:03.346" endtime="20220704 14:54:03.765"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:54:03.765" endtime="20220704 14:54:03.765"/>
</return>
<msg timestamp="20220704 14:54:03.765" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:54:03.345" endtime="20220704 14:54:03.766"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:54:03.766" endtime="20220704 14:54:03.766"/>
</return>
<status status="PASS" starttime="20220704 14:54:03.344" endtime="20220704 14:54:03.766"/>
</kw>
<status status="PASS" starttime="20220704 14:54:03.344" endtime="20220704 14:54:03.766"/>
</kw>
<kw name="Delete All Sessions" library="request_own_library">
<status status="PASS" starttime="20220704 14:54:03.766" endtime="20220704 14:54:03.768"/>
</kw>
<status status="PASS" starttime="20220704 14:54:03.344" endtime="20220704 14:54:03.768"/>
</kw>
<doc>Example Test with Trello API Checklists</doc>
<status status="PASS" starttime="20220704 14:54:01.870" endtime="20220704 14:54:03.768"/>
</suite>
<suite id="s1-s1-s4" name="Trello Api Labels Tests" source="/trello/api/trello_api_labels_tests.robot">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Create Trello Session</arg>
<arg>Setup Board And List</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Create Trello Session" library="TrelloAPI">
<doc>Creates a Trello Session</doc>
<kw name="Create Session" library="request_own_library">
<arg>${API_BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<status status="PASS" starttime="20220704 14:54:03.779" endtime="20220704 14:54:03.779"/>
</kw>
<status status="PASS" starttime="20220704 14:54:03.779" endtime="20220704 14:54:03.779"/>
</kw>
<kw name="Setup Board And List">
<doc>Create a board and save its ID and its first list's ID</doc>
<kw name="Create A Board" library="Board">
<var>${BOARD}</var>
<arg>TestBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 14:54:03.780" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 14:54:03.780" endtime="20220704 14:54:03.780"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 14:54:03.781" endtime="20220704 14:54:03.781"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:54:03.781" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220704 14:54:03.781" endtime="20220704 14:54:03.781"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 14:54:03.990" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:54:03.782" endtime="20220704 14:54:03.990"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:54:03.990" endtime="20220704 14:54:03.990"/>
</return>
<msg timestamp="20220704 14:54:03.991" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:54:03.780" endtime="20220704 14:54:03.991"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:54:03.991" endtime="20220704 14:54:03.991"/>
</return>
<msg timestamp="20220704 14:54:03.991" level="INFO">${BOARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:54:03.780" endtime="20220704 14:54:03.991"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_BOARD_ID}</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220704 14:54:03.992" level="INFO">${TEST_SUITE_BOARD_ID} = 62c2ff0bd1fb373e1da0edbb</msg>
<status status="PASS" starttime="20220704 14:54:03.991" endtime="20220704 14:54:03.992"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${LISTS}</var>
<arg>boards/${TEST_SUITE_BOARD_ID}/lists</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 14:54:04.043" level="INFO">${LISTS} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:54:03.993" endtime="20220704 14:54:04.043"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_LIST_ID}</arg>
<arg>${LISTS.json()}[0][id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220704 14:54:04.044" level="INFO">${TEST_SUITE_LIST_ID} = 62c2ff0bd1fb373e1da0edc2</msg>
<status status="PASS" starttime="20220704 14:54:04.043" endtime="20220704 14:54:04.044"/>
</kw>
<status status="PASS" starttime="20220704 14:54:03.779" endtime="20220704 14:54:04.045"/>
</kw>
<status status="PASS" starttime="20220704 14:54:03.779" endtime="20220704 14:54:04.045"/>
</kw>
<test id="s1-s1-s4-t1" name="Create and get label on board" line="14">
<kw name="Create A Label" library="Label">
<var>${response}</var>
<arg>name</arg>
<arg>label2</arg>
<arg>color</arg>
<arg>yellow</arg>
<doc>Creates a new label in the given board.
required_args: idBoard
optional_args: name, color
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>idBoard</arg>
<arg>${idBoard}</arg>
<arg>@{optional_args}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 14:54:04.047" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 14:54:04.047" endtime="20220704 14:54:04.047"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 14:54:04.047" endtime="20220704 14:54:04.047"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:54:04.048" level="INFO">${url} = labels/</msg>
<status status="PASS" starttime="20220704 14:54:04.047" endtime="20220704 14:54:04.048"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 14:54:04.150" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:54:04.048" endtime="20220704 14:54:04.150"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:54:04.150" endtime="20220704 14:54:04.150"/>
</return>
<msg timestamp="20220704 14:54:04.151" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:54:04.046" endtime="20220704 14:54:04.151"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:54:04.151" endtime="20220704 14:54:04.151"/>
</return>
<msg timestamp="20220704 14:54:04.151" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:54:04.046" endtime="20220704 14:54:04.151"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>label</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220704 14:54:04.152" endtime="20220704 14:54:04.154"/>
</kw>
<status status="PASS" starttime="20220704 14:54:04.151" endtime="20220704 14:54:04.154"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${LABEL_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 14:54:04.155" endtime="20220704 14:54:04.155"/>
</return>
<msg timestamp="20220704 14:54:04.156" level="INFO">${LABEL_ID} = 62c2ff0ce42c6130aa56df22</msg>
<status status="PASS" starttime="20220704 14:54:04.154" endtime="20220704 14:54:04.156"/>
</kw>
<kw name="Get A Label" library="Label">
<var>${response}</var>
<arg>${LABEL_ID}</arg>
<doc>Gets the label with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:54:04.157" level="INFO">${url} = labels/62c2ff0ce42c6130aa56df22</msg>
<status status="PASS" starttime="20220704 14:54:04.157" endtime="20220704 14:54:04.157"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 14:54:04.219" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:54:04.157" endtime="20220704 14:54:04.219"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:54:04.219" endtime="20220704 14:54:04.219"/>
</return>
<msg timestamp="20220704 14:54:04.220" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:54:04.156" endtime="20220704 14:54:04.220"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:54:04.220" endtime="20220704 14:54:04.220"/>
</return>
<msg timestamp="20220704 14:54:04.220" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:54:04.156" endtime="20220704 14:54:04.220"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${LABEL_COLOR}</var>
<arg>${response}</arg>
<arg>color</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 14:54:04.221" endtime="20220704 14:54:04.221"/>
</return>
<msg timestamp="20220704 14:54:04.221" level="INFO">${LABEL_COLOR} = yellow</msg>
<status status="PASS" starttime="20220704 14:54:04.220" endtime="20220704 14:54:04.221"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${LABEL_NAME}</var>
<arg>${response}</arg>
<arg>name</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 14:54:04.222" endtime="20220704 14:54:04.222"/>
</return>
<msg timestamp="20220704 14:54:04.222" level="INFO">${LABEL_NAME} = label2</msg>
<status status="PASS" starttime="20220704 14:54:04.221" endtime="20220704 14:54:04.223"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${LABEL_COLOR}</arg>
<arg>yellow</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220704 14:54:04.223" endtime="20220704 14:54:04.223"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${LABEL_NAME}</arg>
<arg>label2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220704 14:54:04.223" endtime="20220704 14:54:04.223"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Label</arg>
<arg>${LABEL_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Label" library="Label">
<arg>${LABEL_ID}</arg>
<doc>Deletes the label with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:54:04.225" level="INFO">${url} = labels/62c2ff0ce42c6130aa56df22</msg>
<status status="PASS" starttime="20220704 14:54:04.224" endtime="20220704 14:54:04.225"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 14:54:04.340" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:54:04.225" endtime="20220704 14:54:04.340"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:54:04.340" endtime="20220704 14:54:04.340"/>
</return>
<msg timestamp="20220704 14:54:04.341" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:54:04.224" endtime="20220704 14:54:04.341"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:54:04.341" endtime="20220704 14:54:04.341"/>
</return>
<status status="PASS" starttime="20220704 14:54:04.224" endtime="20220704 14:54:04.341"/>
</kw>
<status status="PASS" starttime="20220704 14:54:04.223" endtime="20220704 14:54:04.341"/>
</kw>
<doc>Verify that a label can be created through API</doc>
<tag>api</tag>
<tag>label.create</tag>
<tag>label.get</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220704 14:54:04.045" endtime="20220704 14:54:04.341"/>
</test>
<test id="s1-s1-s4-t2" name="Update label on board" line="28">
<kw name="Create A Label" library="Label">
<var>${response}</var>
<arg>name</arg>
<arg>label2</arg>
<arg>color</arg>
<arg>yellow</arg>
<doc>Creates a new label in the given board.
required_args: idBoard
optional_args: name, color
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>idBoard</arg>
<arg>${idBoard}</arg>
<arg>@{optional_args}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 14:54:04.344" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 14:54:04.343" endtime="20220704 14:54:04.344"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 14:54:04.344" endtime="20220704 14:54:04.344"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:54:04.345" level="INFO">${url} = labels/</msg>
<status status="PASS" starttime="20220704 14:54:04.344" endtime="20220704 14:54:04.345"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 14:54:04.455" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:54:04.345" endtime="20220704 14:54:04.456"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:54:04.456" endtime="20220704 14:54:04.456"/>
</return>
<msg timestamp="20220704 14:54:04.456" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:54:04.343" endtime="20220704 14:54:04.456"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:54:04.456" endtime="20220704 14:54:04.456"/>
</return>
<msg timestamp="20220704 14:54:04.456" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:54:04.342" endtime="20220704 14:54:04.456"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>label</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220704 14:54:04.457" endtime="20220704 14:54:04.459"/>
</kw>
<status status="PASS" starttime="20220704 14:54:04.457" endtime="20220704 14:54:04.459"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${LABEL_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 14:54:04.460" endtime="20220704 14:54:04.460"/>
</return>
<msg timestamp="20220704 14:54:04.461" level="INFO">${LABEL_ID} = 62c2ff0cc4c092092ccdc98f</msg>
<status status="PASS" starttime="20220704 14:54:04.460" endtime="20220704 14:54:04.461"/>
</kw>
<kw name="Update A Label" library="Label">
<var>${new_response}</var>
<arg>${LABEL_ID}</arg>
<arg>name</arg>
<arg>label3</arg>
<arg>color</arg>
<arg>orange</arg>
<doc>Updates the label with the given ID
optional_args: name, color
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 14:54:04.462" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 14:54:04.462" endtime="20220704 14:54:04.462"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 14:54:04.462" endtime="20220704 14:54:04.462"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:54:04.463" level="INFO">${url} = labels/62c2ff0cc4c092092ccdc98f</msg>
<status status="PASS" starttime="20220704 14:54:04.462" endtime="20220704 14:54:04.463"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 14:54:04.565" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:54:04.463" endtime="20220704 14:54:04.565"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:54:04.565" endtime="20220704 14:54:04.565"/>
</return>
<msg timestamp="20220704 14:54:04.565" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:54:04.461" endtime="20220704 14:54:04.565"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:54:04.565" endtime="20220704 14:54:04.565"/>
</return>
<msg timestamp="20220704 14:54:04.565" level="INFO">${new_response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:54:04.461" endtime="20220704 14:54:04.566"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${NEW_LABEL_COLOR}</var>
<arg>${new_response}</arg>
<arg>color</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 14:54:04.566" endtime="20220704 14:54:04.566"/>
</return>
<msg timestamp="20220704 14:54:04.567" level="INFO">${NEW_LABEL_COLOR} = orange</msg>
<status status="PASS" starttime="20220704 14:54:04.566" endtime="20220704 14:54:04.567"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${NEW_LABEL_NAME}</var>
<arg>${new_response}</arg>
<arg>name</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 14:54:04.567" endtime="20220704 14:54:04.567"/>
</return>
<msg timestamp="20220704 14:54:04.568" level="INFO">${NEW_LABEL_NAME} = label3</msg>
<status status="PASS" starttime="20220704 14:54:04.567" endtime="20220704 14:54:04.568"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${NEW_LABEL_COLOR}</arg>
<arg>orange</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220704 14:54:04.568" endtime="20220704 14:54:04.568"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${NEW_LABEL_NAME}</arg>
<arg>label3</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220704 14:54:04.569" endtime="20220704 14:54:04.569"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Label</arg>
<arg>${LABEL_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Label" library="Label">
<arg>${LABEL_ID}</arg>
<doc>Deletes the label with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:54:04.571" level="INFO">${url} = labels/62c2ff0cc4c092092ccdc98f</msg>
<status status="PASS" starttime="20220704 14:54:04.570" endtime="20220704 14:54:04.571"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 14:54:04.667" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:54:04.571" endtime="20220704 14:54:04.668"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:54:04.668" endtime="20220704 14:54:04.668"/>
</return>
<msg timestamp="20220704 14:54:04.668" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:54:04.570" endtime="20220704 14:54:04.668"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:54:04.668" endtime="20220704 14:54:04.668"/>
</return>
<status status="PASS" starttime="20220704 14:54:04.569" endtime="20220704 14:54:04.668"/>
</kw>
<status status="PASS" starttime="20220704 14:54:04.569" endtime="20220704 14:54:04.668"/>
</kw>
<doc>Verify that a label's name and color can be updated through API</doc>
<tag>api</tag>
<tag>label.update</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220704 14:54:04.342" endtime="20220704 14:54:04.668"/>
</test>
<test id="s1-s1-s4-t3" name="Delete label on board" line="41">
<kw name="Create A Label" library="Label">
<var>${response}</var>
<arg>name</arg>
<arg>label2</arg>
<arg>color</arg>
<arg>yellow</arg>
<doc>Creates a new label in the given board.
required_args: idBoard
optional_args: name, color
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>idBoard</arg>
<arg>${idBoard}</arg>
<arg>@{optional_args}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 14:54:04.671" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 14:54:04.671" endtime="20220704 14:54:04.671"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 14:54:04.671" endtime="20220704 14:54:04.671"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:54:04.672" level="INFO">${url} = labels/</msg>
<status status="PASS" starttime="20220704 14:54:04.671" endtime="20220704 14:54:04.672"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 14:54:04.767" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:54:04.672" endtime="20220704 14:54:04.768"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:54:04.768" endtime="20220704 14:54:04.768"/>
</return>
<msg timestamp="20220704 14:54:04.768" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:54:04.670" endtime="20220704 14:54:04.768"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:54:04.768" endtime="20220704 14:54:04.768"/>
</return>
<msg timestamp="20220704 14:54:04.768" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:54:04.670" endtime="20220704 14:54:04.768"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${LABEL_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 14:54:04.769" endtime="20220704 14:54:04.769"/>
</return>
<msg timestamp="20220704 14:54:04.770" level="INFO">${LABEL_ID} = 62c2ff0cb2059440a06dfe37</msg>
<status status="PASS" starttime="20220704 14:54:04.769" endtime="20220704 14:54:04.770"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Label</arg>
<arg>${LABEL_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Label" library="Label">
<arg>${LABEL_ID}</arg>
<doc>Deletes the label with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:54:04.772" level="INFO">${url} = labels/62c2ff0cb2059440a06dfe37</msg>
<status status="PASS" starttime="20220704 14:54:04.772" endtime="20220704 14:54:04.772"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 14:54:04.893" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:54:04.772" endtime="20220704 14:54:04.893"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:54:04.893" endtime="20220704 14:54:04.893"/>
</return>
<msg timestamp="20220704 14:54:04.894" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:54:04.771" endtime="20220704 14:54:04.894"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:54:04.894" endtime="20220704 14:54:04.894"/>
</return>
<status status="PASS" starttime="20220704 14:54:04.770" endtime="20220704 14:54:04.894"/>
</kw>
<status status="PASS" starttime="20220704 14:54:04.770" endtime="20220704 14:54:04.894"/>
</kw>
<kw name="Get A Label" library="Label">
<arg>${LABEL_ID}</arg>
<arg>status_code=404</arg>
<doc>Gets the label with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:54:04.896" level="INFO">${url} = labels/62c2ff0cb2059440a06dfe37</msg>
<status status="PASS" starttime="20220704 14:54:04.895" endtime="20220704 14:54:04.896"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 14:54:04.942" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220704 14:54:04.896" endtime="20220704 14:54:04.943"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:54:04.943" endtime="20220704 14:54:04.943"/>
</return>
<msg timestamp="20220704 14:54:04.943" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220704 14:54:04.895" endtime="20220704 14:54:04.943"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:54:04.943" endtime="20220704 14:54:04.943"/>
</return>
<status status="PASS" starttime="20220704 14:54:04.894" endtime="20220704 14:54:04.943"/>
</kw>
<doc>Verify that a label can be deleted through API</doc>
<tag>api</tag>
<tag>label.delete</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220704 14:54:04.669" endtime="20220704 14:54:04.943"/>
</test>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Teardown Board</arg>
<arg>Delete All Sessions</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Teardown Board">
<doc>Delete the board created for this session.</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:54:04.946" level="INFO">${url} = boards/62c2ff0bd1fb373e1da0edbb</msg>
<status status="PASS" starttime="20220704 14:54:04.946" endtime="20220704 14:54:04.946"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 14:54:05.236" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:54:04.947" endtime="20220704 14:54:05.237"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:54:05.237" endtime="20220704 14:54:05.237"/>
</return>
<msg timestamp="20220704 14:54:05.237" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:54:04.945" endtime="20220704 14:54:05.237"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:54:05.237" endtime="20220704 14:54:05.237"/>
</return>
<status status="PASS" starttime="20220704 14:54:04.945" endtime="20220704 14:54:05.237"/>
</kw>
<status status="PASS" starttime="20220704 14:54:04.945" endtime="20220704 14:54:05.237"/>
</kw>
<status status="PASS" starttime="20220704 14:54:04.944" endtime="20220704 14:54:05.237"/>
</kw>
<kw name="Delete All Sessions" library="request_own_library">
<status status="PASS" starttime="20220704 14:54:05.238" endtime="20220704 14:54:05.239"/>
</kw>
<status status="PASS" starttime="20220704 14:54:04.944" endtime="20220704 14:54:05.239"/>
</kw>
<doc>Example Test with Trello API Cards</doc>
<status status="PASS" starttime="20220704 14:54:03.770" endtime="20220704 14:54:05.239"/>
</suite>
<suite id="s1-s1-s5" name="Trello Api Lists Tests" source="/trello/api/trello_api_lists_tests.robot">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Create Trello Session</arg>
<arg>Setup Board</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Create Trello Session" library="TrelloAPI">
<doc>Creates a Trello Session</doc>
<kw name="Create Session" library="request_own_library">
<arg>${API_BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<status status="PASS" starttime="20220704 14:54:05.251" endtime="20220704 14:54:05.251"/>
</kw>
<status status="PASS" starttime="20220704 14:54:05.250" endtime="20220704 14:54:05.251"/>
</kw>
<kw name="Setup Board">
<doc>Create a board and save it's id for the suite</doc>
<kw name="Create A Board" library="Board">
<var>${BOARD}</var>
<arg>TestBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 14:54:05.252" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 14:54:05.252" endtime="20220704 14:54:05.252"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 14:54:05.252" endtime="20220704 14:54:05.253"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:54:05.253" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220704 14:54:05.253" endtime="20220704 14:54:05.253"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 14:54:05.453" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:54:05.253" endtime="20220704 14:54:05.453"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:54:05.453" endtime="20220704 14:54:05.453"/>
</return>
<msg timestamp="20220704 14:54:05.454" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:54:05.252" endtime="20220704 14:54:05.454"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:54:05.454" endtime="20220704 14:54:05.454"/>
</return>
<msg timestamp="20220704 14:54:05.454" level="INFO">${BOARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:54:05.251" endtime="20220704 14:54:05.454"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Set Suite Variable</arg>
<arg>\${TEST_SUITE_BOARD_ID}</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_BOARD_ID}</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220704 14:54:05.456" level="INFO">${TEST_SUITE_BOARD_ID} = 62c2ff0da92da889463ea7c7</msg>
<status status="PASS" starttime="20220704 14:54:05.455" endtime="20220704 14:54:05.456"/>
</kw>
<status status="PASS" starttime="20220704 14:54:05.454" endtime="20220704 14:54:05.456"/>
</kw>
<status status="PASS" starttime="20220704 14:54:05.251" endtime="20220704 14:54:05.456"/>
</kw>
<status status="PASS" starttime="20220704 14:54:05.250" endtime="20220704 14:54:05.456"/>
</kw>
<test id="s1-s1-s5-t1" name="CREATE a list" line="13">
<kw name="Create A List" library="List">
<var>${response}</var>
<arg>NewList</arg>
<doc>Creates a new List
board id
name the list will have
optional_args: idListSource, pos, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>list</arg>
<arg>name</arg>
<arg>${name}</arg>
<arg>idBoard</arg>
<arg>${idBoard}</arg>
<arg>@{optional_args}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 14:54:05.458" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 14:54:05.458" endtime="20220704 14:54:05.458"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 14:54:05.458" endtime="20220704 14:54:05.459"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:54:05.460" level="INFO">${url} = lists/</msg>
<status status="PASS" starttime="20220704 14:54:05.459" endtime="20220704 14:54:05.460"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 14:54:05.569" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:54:05.460" endtime="20220704 14:54:05.569"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:54:05.569" endtime="20220704 14:54:05.569"/>
</return>
<msg timestamp="20220704 14:54:05.570" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:54:05.457" endtime="20220704 14:54:05.570"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:54:05.570" endtime="20220704 14:54:05.570"/>
</return>
<msg timestamp="20220704 14:54:05.570" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:54:05.457" endtime="20220704 14:54:05.570"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>list</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220704 14:54:05.571" endtime="20220704 14:54:05.573"/>
</kw>
<status status="PASS" starttime="20220704 14:54:05.570" endtime="20220704 14:54:05.573"/>
</kw>
<doc>Verify that a list can be created through API</doc>
<tag>api</tag>
<tag>list.create</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220704 14:54:05.456" endtime="20220704 14:54:05.573"/>
</test>
<test id="s1-s1-s5-t2" name="UPDATE a list" line="19">
<kw name="Create A List" library="List">
<var>${response}</var>
<arg>NewList</arg>
<doc>Creates a new List
board id
name the list will have
optional_args: idListSource, pos, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>list</arg>
<arg>name</arg>
<arg>${name}</arg>
<arg>idBoard</arg>
<arg>${idBoard}</arg>
<arg>@{optional_args}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 14:54:05.575" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 14:54:05.575" endtime="20220704 14:54:05.575"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 14:54:05.575" endtime="20220704 14:54:05.576"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:54:05.576" level="INFO">${url} = lists/</msg>
<status status="PASS" starttime="20220704 14:54:05.576" endtime="20220704 14:54:05.576"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 14:54:05.686" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:54:05.576" endtime="20220704 14:54:05.686"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:54:05.686" endtime="20220704 14:54:05.686"/>
</return>
<msg timestamp="20220704 14:54:05.686" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:54:05.575" endtime="20220704 14:54:05.686"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:54:05.686" endtime="20220704 14:54:05.687"/>
</return>
<msg timestamp="20220704 14:54:05.687" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:54:05.574" endtime="20220704 14:54:05.687"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>list</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220704 14:54:05.687" endtime="20220704 14:54:05.689"/>
</kw>
<status status="PASS" starttime="20220704 14:54:05.687" endtime="20220704 14:54:05.690"/>
</kw>
<kw name="Update A List" library="List">
<arg>${response.json()}[id]</arg>
<arg>name</arg>
<arg>NewName</arg>
<doc>Updates the board with the given ID
optional_args: name, idListSource, pos, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>list</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 14:54:05.692" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 14:54:05.691" endtime="20220704 14:54:05.692"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 14:54:05.692" endtime="20220704 14:54:05.692"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:54:05.693" level="INFO">${url} = lists/62c2ff0d4b75916427c614f6</msg>
<status status="PASS" starttime="20220704 14:54:05.692" endtime="20220704 14:54:05.693"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 14:54:05.766" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:54:05.693" endtime="20220704 14:54:05.766"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:54:05.766" endtime="20220704 14:54:05.766"/>
</return>
<msg timestamp="20220704 14:54:05.767" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:54:05.691" endtime="20220704 14:54:05.767"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:54:05.767" endtime="20220704 14:54:05.767"/>
</return>
<status status="PASS" starttime="20220704 14:54:05.690" endtime="20220704 14:54:05.767"/>
</kw>
<kw name="Get A List" library="List">
<var>${new_response}</var>
<arg>${response.json()}[id]</arg>
<doc>Gets the List with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>list</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:54:05.769" level="INFO">${url} = lists/62c2ff0d4b75916427c614f6</msg>
<status status="PASS" starttime="20220704 14:54:05.769" endtime="20220704 14:54:05.769"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 14:54:05.814" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:54:05.769" endtime="20220704 14:54:05.814"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:54:05.814" endtime="20220704 14:54:05.814"/>
</return>
<msg timestamp="20220704 14:54:05.814" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:54:05.768" endtime="20220704 14:54:05.814"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:54:05.814" endtime="20220704 14:54:05.814"/>
</return>
<msg timestamp="20220704 14:54:05.815" level="INFO">${new_response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:54:05.767" endtime="20220704 14:54:05.815"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${new_response}</arg>
<arg>list</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220704 14:54:05.815" endtime="20220704 14:54:05.817"/>
</kw>
<status status="PASS" starttime="20220704 14:54:05.815" endtime="20220704 14:54:05.817"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${new_response.json()}[name]</arg>
<arg>NewName</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220704 14:54:05.817" endtime="20220704 14:54:05.818"/>
</kw>
<doc>Verify that a lists name can be updated through API</doc>
<tag>api</tag>
<tag>list.update</tag>
<tag>regression</tag>
<status status="PASS" starttime="20220704 14:54:05.574" endtime="20220704 14:54:05.818"/>
</test>
<test id="s1-s1-s5-t3" name="ARCHIVE A list" line="29">
<kw name="Create A List" library="List">
<var>${response}</var>
<arg>NewList</arg>
<doc>Creates a new List
board id
name the list will have
optional_args: idListSource, pos, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>list</arg>
<arg>name</arg>
<arg>${name}</arg>
<arg>idBoard</arg>
<arg>${idBoard}</arg>
<arg>@{optional_args}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 14:54:05.823" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 14:54:05.822" endtime="20220704 14:54:05.823"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 14:54:05.823" endtime="20220704 14:54:05.823"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:54:05.824" level="INFO">${url} = lists/</msg>
<status status="PASS" starttime="20220704 14:54:05.823" endtime="20220704 14:54:05.824"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 14:54:05.918" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:54:05.824" endtime="20220704 14:54:05.918"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:54:05.918" endtime="20220704 14:54:05.918"/>
</return>
<msg timestamp="20220704 14:54:05.919" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:54:05.822" endtime="20220704 14:54:05.919"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:54:05.919" endtime="20220704 14:54:05.919"/>
</return>
<msg timestamp="20220704 14:54:05.919" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:54:05.819" endtime="20220704 14:54:05.919"/>
</kw>
<kw name="Archive A List" library="List">
<arg>${response.json()}[id]</arg>
<doc>Deletes the list with the given ID</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>archive_list</arg>
<arg>${id}</arg>
<arg>value</arg>
<arg>true</arg>
<arg>status_code=${status_code}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 14:54:05.921" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 14:54:05.921" endtime="20220704 14:54:05.921"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 14:54:05.921" endtime="20220704 14:54:05.922"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:54:05.922" level="INFO">${url} = lists/62c2ff0dff08847f81d6d3bb/closed</msg>
<status status="PASS" starttime="20220704 14:54:05.922" endtime="20220704 14:54:05.922"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 14:54:06.021" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:54:05.922" endtime="20220704 14:54:06.021"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:54:06.022" endtime="20220704 14:54:06.022"/>
</return>
<msg timestamp="20220704 14:54:06.022" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:54:05.920" endtime="20220704 14:54:06.022"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:54:06.022" endtime="20220704 14:54:06.022"/>
</return>
<status status="PASS" starttime="20220704 14:54:05.919" endtime="20220704 14:54:06.022"/>
</kw>
<kw name="Get A List" library="List">
<var>${new_response}</var>
<arg>${response.json()}[id]</arg>
<doc>Gets the List with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>list</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:54:06.024" level="INFO">${url} = lists/62c2ff0dff08847f81d6d3bb</msg>
<status status="PASS" starttime="20220704 14:54:06.024" endtime="20220704 14:54:06.024"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 14:54:06.077" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:54:06.024" endtime="20220704 14:54:06.077"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:54:06.077" endtime="20220704 14:54:06.077"/>
</return>
<msg timestamp="20220704 14:54:06.078" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:54:06.024" endtime="20220704 14:54:06.078"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:54:06.078" endtime="20220704 14:54:06.078"/>
</return>
<msg timestamp="20220704 14:54:06.078" level="INFO">${new_response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:54:06.022" endtime="20220704 14:54:06.078"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${new_response.json()}[closed]</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220704 14:54:06.078" endtime="20220704 14:54:06.079"/>
</kw>
<doc>Verify that a list can be archived through API</doc>
<tag>api</tag>
<tag>list.archive</tag>
<tag>regression</tag>
<status status="PASS" starttime="20220704 14:54:05.819" endtime="20220704 14:54:06.079"/>
</test>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Teardown Board</arg>
<arg>Delete All Sessions</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Teardown Board">
<doc>Delete the board created for this suite.</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:54:06.082" level="INFO">${url} = boards/62c2ff0da92da889463ea7c7</msg>
<status status="PASS" starttime="20220704 14:54:06.082" endtime="20220704 14:54:06.082"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 14:54:06.446" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:54:06.083" endtime="20220704 14:54:06.446"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:54:06.446" endtime="20220704 14:54:06.446"/>
</return>
<msg timestamp="20220704 14:54:06.446" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:54:06.082" endtime="20220704 14:54:06.447"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:54:06.447" endtime="20220704 14:54:06.447"/>
</return>
<status status="PASS" starttime="20220704 14:54:06.081" endtime="20220704 14:54:06.447"/>
</kw>
<status status="PASS" starttime="20220704 14:54:06.081" endtime="20220704 14:54:06.447"/>
</kw>
<status status="PASS" starttime="20220704 14:54:06.080" endtime="20220704 14:54:06.447"/>
</kw>
<kw name="Delete All Sessions" library="request_own_library">
<status status="PASS" starttime="20220704 14:54:06.447" endtime="20220704 14:54:06.449"/>
</kw>
<status status="PASS" starttime="20220704 14:54:06.080" endtime="20220704 14:54:06.449"/>
</kw>
<doc>Example Test with Trello API lists</doc>
<status status="PASS" starttime="20220704 14:54:05.241" endtime="20220704 14:54:06.449"/>
</suite>
<status status="PASS" starttime="20220704 14:53:55.689" endtime="20220704 14:54:06.451"/>
</suite>
<status status="PASS" starttime="20220704 14:53:55.671" endtime="20220704 14:54:06.454"/>
</suite>
<statistics>
<total>
<stat pass="18" fail="0" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="18" fail="0" skip="0">api</stat>
<stat pass="1" fail="0" skip="0">board.create</stat>
<stat pass="1" fail="0" skip="0">board.delete</stat>
<stat pass="1" fail="0" skip="0">board.get</stat>
<stat pass="2" fail="0" skip="0">board.update</stat>
<stat pass="1" fail="0" skip="0">card.close</stat>
<stat pass="1" fail="0" skip="0">card.create</stat>
<stat pass="1" fail="0" skip="0">card.delete</stat>
<stat pass="1" fail="0" skip="0">card.update</stat>
<stat pass="1" fail="0" skip="0">checklist.create</stat>
<stat pass="1" fail="0" skip="0">checklist.delete</stat>
<stat pass="1" fail="0" skip="0">checklist.update</stat>
<stat pass="1" fail="0" skip="0">label.create</stat>
<stat pass="1" fail="0" skip="0">label.delete</stat>
<stat pass="1" fail="0" skip="0">label.get</stat>
<stat pass="1" fail="0" skip="0">label.update</stat>
<stat pass="1" fail="0" skip="0">list.archive</stat>
<stat pass="1" fail="0" skip="0">list.create</stat>
<stat pass="1" fail="0" skip="0">list.update</stat>
<stat pass="5" fail="0" skip="0">regression</stat>
<stat pass="13" fail="0" skip="0">smoke</stat>
</tag>
<suite>
<stat pass="18" fail="0" skip="0" id="s1" name="Trello">Trello</stat>
<stat pass="18" fail="0" skip="0" id="s1-s1" name="Api">Trello.Api</stat>
<stat pass="5" fail="0" skip="0" id="s1-s1-s1" name="Trello Api Boards Tests">Trello.Api.Trello Api Boards Tests</stat>
<stat pass="4" fail="0" skip="0" id="s1-s1-s2" name="Trello Api Cards Tests">Trello.Api.Trello Api Cards Tests</stat>
<stat pass="3" fail="0" skip="0" id="s1-s1-s3" name="Trello Api Checklists Tests">Trello.Api.Trello Api Checklists Tests</stat>
<stat pass="3" fail="0" skip="0" id="s1-s1-s4" name="Trello Api Labels Tests">Trello.Api.Trello Api Labels Tests</stat>
<stat pass="3" fail="0" skip="0" id="s1-s1-s5" name="Trello Api Lists Tests">Trello.Api.Trello Api Lists Tests</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
