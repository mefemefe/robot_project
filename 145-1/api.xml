<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 5.0.1 (Python 3.10.5 on linux)" generated="20220705 09:42:54.568" rpa="false" schemaversion="3">
<suite id="s1" name="Trello" source="/trello">
<suite id="s1-s1" name="Api" source="/trello/api">
<suite id="s1-s1-s1" name="Trello Api Boards Tests" source="/trello/api/trello_api_boards_tests.robot">
<kw name="Create Trello Session" library="TrelloAPI" type="SETUP">
<doc>Creates a Trello Session</doc>
<kw name="Create Session" library="request_own_library">
<arg>${API_BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<status status="PASS" starttime="20220705 09:42:54.692" endtime="20220705 09:42:54.693"/>
</kw>
<status status="PASS" starttime="20220705 09:42:54.691" endtime="20220705 09:42:54.693"/>
</kw>
<test id="s1-s1-s1-t1" name="CREATE a board" line="9">
<kw name="Create A Board" library="Board">
<var>${response}</var>
<arg>NewBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 09:42:54.695" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 09:42:54.695" endtime="20220705 09:42:54.695"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 09:42:54.695" endtime="20220705 09:42:54.695"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 09:42:54.696" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220705 09:42:54.695" endtime="20220705 09:42:54.696"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 09:42:54.947" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 09:42:54.696" endtime="20220705 09:42:54.947"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 09:42:54.948" endtime="20220705 09:42:54.948"/>
</return>
<msg timestamp="20220705 09:42:54.948" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 09:42:54.694" endtime="20220705 09:42:54.948"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 09:42:54.948" endtime="20220705 09:42:54.948"/>
</return>
<msg timestamp="20220705 09:42:54.948" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 09:42:54.694" endtime="20220705 09:42:54.948"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>board</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 09:42:54.949" endtime="20220705 09:42:54.953"/>
</kw>
<status status="PASS" starttime="20220705 09:42:54.948" endtime="20220705 09:42:54.953"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${response.json()}[id]</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${response.json()}[id]</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 09:42:54.955" level="INFO">${url} = boards/62c4079e7e15706b5a8f7654</msg>
<status status="PASS" starttime="20220705 09:42:54.955" endtime="20220705 09:42:54.955"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 09:42:55.285" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 09:42:54.955" endtime="20220705 09:42:55.285"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 09:42:55.285" endtime="20220705 09:42:55.285"/>
</return>
<msg timestamp="20220705 09:42:55.285" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 09:42:54.955" endtime="20220705 09:42:55.286"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 09:42:55.286" endtime="20220705 09:42:55.286"/>
</return>
<status status="PASS" starttime="20220705 09:42:54.954" endtime="20220705 09:42:55.286"/>
</kw>
<status status="PASS" starttime="20220705 09:42:54.954" endtime="20220705 09:42:55.286"/>
</kw>
<doc>Verify that a board can be create through API</doc>
<tag>api</tag>
<tag>board.create</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220705 09:42:54.693" endtime="20220705 09:42:55.286"/>
</test>
<test id="s1-s1-s1-t2" name="UPDATE a Board's name" line="16">
<kw name="Create A Board" library="Board">
<var>${response}</var>
<arg>NewBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 09:42:55.288" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 09:42:55.288" endtime="20220705 09:42:55.288"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 09:42:55.288" endtime="20220705 09:42:55.289"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 09:42:55.289" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220705 09:42:55.289" endtime="20220705 09:42:55.290"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 09:42:55.454" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 09:42:55.290" endtime="20220705 09:42:55.454"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 09:42:55.454" endtime="20220705 09:42:55.454"/>
</return>
<msg timestamp="20220705 09:42:55.455" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 09:42:55.287" endtime="20220705 09:42:55.455"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 09:42:55.455" endtime="20220705 09:42:55.455"/>
</return>
<msg timestamp="20220705 09:42:55.455" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 09:42:55.287" endtime="20220705 09:42:55.455"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>board</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 09:42:55.455" endtime="20220705 09:42:55.459"/>
</kw>
<status status="PASS" starttime="20220705 09:42:55.455" endtime="20220705 09:42:55.459"/>
</kw>
<kw name="Update A Board" library="Board">
<arg>${response.json()}[id]</arg>
<arg>name</arg>
<arg>NewName</arg>
<doc>Updates the board with the given ID
optional_args: name, desc, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 09:42:55.461" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 09:42:55.461" endtime="20220705 09:42:55.461"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 09:42:55.461" endtime="20220705 09:42:55.461"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 09:42:55.462" level="INFO">${url} = boards/62c4079fd3f96f5f5046d4ff</msg>
<status status="PASS" starttime="20220705 09:42:55.461" endtime="20220705 09:42:55.462"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 09:42:55.541" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 09:42:55.462" endtime="20220705 09:42:55.541"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 09:42:55.541" endtime="20220705 09:42:55.541"/>
</return>
<msg timestamp="20220705 09:42:55.541" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 09:42:55.460" endtime="20220705 09:42:55.541"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 09:42:55.541" endtime="20220705 09:42:55.541"/>
</return>
<status status="PASS" starttime="20220705 09:42:55.460" endtime="20220705 09:42:55.541"/>
</kw>
<kw name="Get A Board" library="Board">
<var>${new_response}</var>
<arg>${response.json()}[id]</arg>
<doc>Gets the Board with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 09:42:55.543" level="INFO">${url} = boards/62c4079fd3f96f5f5046d4ff</msg>
<status status="PASS" starttime="20220705 09:42:55.543" endtime="20220705 09:42:55.543"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 09:42:55.589" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 09:42:55.544" endtime="20220705 09:42:55.589"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 09:42:55.589" endtime="20220705 09:42:55.589"/>
</return>
<msg timestamp="20220705 09:42:55.589" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 09:42:55.543" endtime="20220705 09:42:55.589"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 09:42:55.589" endtime="20220705 09:42:55.589"/>
</return>
<msg timestamp="20220705 09:42:55.589" level="INFO">${new_response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 09:42:55.542" endtime="20220705 09:42:55.589"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${new_response}</arg>
<arg>board</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 09:42:55.590" endtime="20220705 09:42:55.594"/>
</kw>
<status status="PASS" starttime="20220705 09:42:55.589" endtime="20220705 09:42:55.594"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${new_response.json()}[name]</arg>
<arg>NewName</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220705 09:42:55.594" endtime="20220705 09:42:55.595"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${response.json()}[id]</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${response.json()}[id]</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 09:42:55.597" level="INFO">${url} = boards/62c4079fd3f96f5f5046d4ff</msg>
<status status="PASS" starttime="20220705 09:42:55.597" endtime="20220705 09:42:55.597"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 09:42:55.901" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 09:42:55.598" endtime="20220705 09:42:55.901"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 09:42:55.901" endtime="20220705 09:42:55.901"/>
</return>
<msg timestamp="20220705 09:42:55.901" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 09:42:55.596" endtime="20220705 09:42:55.901"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 09:42:55.901" endtime="20220705 09:42:55.901"/>
</return>
<status status="PASS" starttime="20220705 09:42:55.595" endtime="20220705 09:42:55.902"/>
</kw>
<status status="PASS" starttime="20220705 09:42:55.595" endtime="20220705 09:42:55.902"/>
</kw>
<doc>Verify that a board's name can be updated through API</doc>
<tag>api</tag>
<tag>board.update</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220705 09:42:55.286" endtime="20220705 09:42:55.902"/>
</test>
<test id="s1-s1-s1-t3" name="DELETE A Board" line="27">
<kw name="Create A Board" library="Board">
<var>${response}</var>
<arg>NewBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 09:42:55.904" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 09:42:55.904" endtime="20220705 09:42:55.904"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 09:42:55.904" endtime="20220705 09:42:55.904"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 09:42:55.905" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220705 09:42:55.904" endtime="20220705 09:42:55.905"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 09:42:56.067" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 09:42:55.905" endtime="20220705 09:42:56.067"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 09:42:56.067" endtime="20220705 09:42:56.067"/>
</return>
<msg timestamp="20220705 09:42:56.068" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 09:42:55.903" endtime="20220705 09:42:56.068"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 09:42:56.068" endtime="20220705 09:42:56.068"/>
</return>
<msg timestamp="20220705 09:42:56.068" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 09:42:55.903" endtime="20220705 09:42:56.068"/>
</kw>
<kw name="Delete A Board" library="Board">
<arg>${response.json()}[id]</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 09:42:56.070" level="INFO">${url} = boards/62c4079f6dc62b036cff7bde</msg>
<status status="PASS" starttime="20220705 09:42:56.070" endtime="20220705 09:42:56.070"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 09:42:56.504" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 09:42:56.070" endtime="20220705 09:42:56.504"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 09:42:56.504" endtime="20220705 09:42:56.504"/>
</return>
<msg timestamp="20220705 09:42:56.505" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 09:42:56.069" endtime="20220705 09:42:56.505"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 09:42:56.505" endtime="20220705 09:42:56.505"/>
</return>
<status status="PASS" starttime="20220705 09:42:56.068" endtime="20220705 09:42:56.505"/>
</kw>
<kw name="Get A Board" library="Board">
<arg>${response.json()}[id]</arg>
<arg>status_code=404</arg>
<doc>Gets the Board with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 09:42:56.507" level="INFO">${url} = boards/62c4079f6dc62b036cff7bde</msg>
<status status="PASS" starttime="20220705 09:42:56.506" endtime="20220705 09:42:56.507"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 09:42:56.541" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220705 09:42:56.507" endtime="20220705 09:42:56.541"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 09:42:56.541" endtime="20220705 09:42:56.541"/>
</return>
<msg timestamp="20220705 09:42:56.541" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220705 09:42:56.506" endtime="20220705 09:42:56.541"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 09:42:56.541" endtime="20220705 09:42:56.542"/>
</return>
<status status="PASS" starttime="20220705 09:42:56.505" endtime="20220705 09:42:56.542"/>
</kw>
<doc>Verify that a board can be deleted through API</doc>
<tag>api</tag>
<tag>board.delete</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220705 09:42:55.902" endtime="20220705 09:42:56.542"/>
</test>
<test id="s1-s1-s1-t4" name="GET Information of A Board" line="34">
<kw name="Create A Board" library="Board">
<var>${response}</var>
<arg>BoardTest</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 09:42:56.544" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 09:42:56.544" endtime="20220705 09:42:56.544"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 09:42:56.544" endtime="20220705 09:42:56.544"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 09:42:56.545" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220705 09:42:56.544" endtime="20220705 09:42:56.545"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 09:42:56.705" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 09:42:56.545" endtime="20220705 09:42:56.705"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 09:42:56.705" endtime="20220705 09:42:56.705"/>
</return>
<msg timestamp="20220705 09:42:56.705" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 09:42:56.543" endtime="20220705 09:42:56.705"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 09:42:56.705" endtime="20220705 09:42:56.705"/>
</return>
<msg timestamp="20220705 09:42:56.706" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 09:42:56.543" endtime="20220705 09:42:56.706"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>board</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 09:42:56.706" endtime="20220705 09:42:56.710"/>
</kw>
<status status="PASS" starttime="20220705 09:42:56.706" endtime="20220705 09:42:56.710"/>
</kw>
<kw name="Get A Board" library="Board">
<var>${response2}</var>
<arg>${response.json()}[id]</arg>
<doc>Gets the Board with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 09:42:56.712" level="INFO">${url} = boards/62c407a061e2c2633c8df5ed</msg>
<status status="PASS" starttime="20220705 09:42:56.712" endtime="20220705 09:42:56.712"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 09:42:56.767" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 09:42:56.712" endtime="20220705 09:42:56.767"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 09:42:56.767" endtime="20220705 09:42:56.767"/>
</return>
<msg timestamp="20220705 09:42:56.768" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 09:42:56.711" endtime="20220705 09:42:56.768"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 09:42:56.768" endtime="20220705 09:42:56.768"/>
</return>
<msg timestamp="20220705 09:42:56.768" level="INFO">${response2} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 09:42:56.710" endtime="20220705 09:42:56.768"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response2}</arg>
<arg>board</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 09:42:56.769" endtime="20220705 09:42:56.772"/>
</kw>
<status status="PASS" starttime="20220705 09:42:56.768" endtime="20220705 09:42:56.772"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${response2.json()}[name]</arg>
<arg>BoardTest</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220705 09:42:56.772" endtime="20220705 09:42:56.773"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${response.json()}[id]</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${response.json()}[id]</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 09:42:56.775" level="INFO">${url} = boards/62c407a061e2c2633c8df5ed</msg>
<status status="PASS" starttime="20220705 09:42:56.775" endtime="20220705 09:42:56.775"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 09:42:57.120" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 09:42:56.775" endtime="20220705 09:42:57.120"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 09:42:57.120" endtime="20220705 09:42:57.120"/>
</return>
<msg timestamp="20220705 09:42:57.120" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 09:42:56.774" endtime="20220705 09:42:57.120"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 09:42:57.120" endtime="20220705 09:42:57.120"/>
</return>
<status status="PASS" starttime="20220705 09:42:56.774" endtime="20220705 09:42:57.121"/>
</kw>
<status status="PASS" starttime="20220705 09:42:56.773" endtime="20220705 09:42:57.121"/>
</kw>
<doc>Verify that a board's information can be accesed through API</doc>
<tag>api</tag>
<tag>board.get</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220705 09:42:56.542" endtime="20220705 09:42:57.121"/>
</test>
<test id="s1-s1-s1-t5" name="UPDATE a Board's description" line="45">
<kw name="Create A Board" library="Board">
<var>${response}</var>
<arg>NewBoardForTest</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 09:42:57.124" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 09:42:57.123" endtime="20220705 09:42:57.124"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 09:42:57.124" endtime="20220705 09:42:57.124"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 09:42:57.125" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220705 09:42:57.124" endtime="20220705 09:42:57.125"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 09:42:57.356" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 09:42:57.125" endtime="20220705 09:42:57.356"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 09:42:57.356" endtime="20220705 09:42:57.356"/>
</return>
<msg timestamp="20220705 09:42:57.356" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 09:42:57.123" endtime="20220705 09:42:57.356"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 09:42:57.356" endtime="20220705 09:42:57.356"/>
</return>
<msg timestamp="20220705 09:42:57.357" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 09:42:57.123" endtime="20220705 09:42:57.357"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>board</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 09:42:57.357" endtime="20220705 09:42:57.361"/>
</kw>
<status status="PASS" starttime="20220705 09:42:57.357" endtime="20220705 09:42:57.361"/>
</kw>
<kw name="Update A Board" library="Board">
<arg>${response.json()}[id]</arg>
<arg>desc</arg>
<arg>sampleDescription</arg>
<doc>Updates the board with the given ID
optional_args: name, desc, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 09:42:57.363" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 09:42:57.363" endtime="20220705 09:42:57.363"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 09:42:57.363" endtime="20220705 09:42:57.363"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 09:42:57.364" level="INFO">${url} = boards/62c407a13d4d7e135885387b</msg>
<status status="PASS" starttime="20220705 09:42:57.363" endtime="20220705 09:42:57.364"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 09:42:57.460" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 09:42:57.364" endtime="20220705 09:42:57.460"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 09:42:57.460" endtime="20220705 09:42:57.460"/>
</return>
<msg timestamp="20220705 09:42:57.460" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 09:42:57.362" endtime="20220705 09:42:57.460"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 09:42:57.461" endtime="20220705 09:42:57.461"/>
</return>
<status status="PASS" starttime="20220705 09:42:57.362" endtime="20220705 09:42:57.461"/>
</kw>
<kw name="Get A Board" library="Board">
<var>${new_response}</var>
<arg>${response.json()}[id]</arg>
<doc>Gets the Board with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 09:42:57.463" level="INFO">${url} = boards/62c407a13d4d7e135885387b</msg>
<status status="PASS" starttime="20220705 09:42:57.462" endtime="20220705 09:42:57.463"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 09:42:57.504" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 09:42:57.463" endtime="20220705 09:42:57.504"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 09:42:57.504" endtime="20220705 09:42:57.504"/>
</return>
<msg timestamp="20220705 09:42:57.504" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 09:42:57.462" endtime="20220705 09:42:57.504"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 09:42:57.504" endtime="20220705 09:42:57.504"/>
</return>
<msg timestamp="20220705 09:42:57.505" level="INFO">${new_response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 09:42:57.461" endtime="20220705 09:42:57.505"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${new_response.json()}[desc]</arg>
<arg>sampleDescription</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220705 09:42:57.505" endtime="20220705 09:42:57.505"/>
</kw>
<kw name="Update A Board" library="Board">
<arg>${response.json()}[id]</arg>
<arg>desc</arg>
<arg>updatedDescription</arg>
<doc>Updates the board with the given ID
optional_args: name, desc, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 09:42:57.507" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 09:42:57.507" endtime="20220705 09:42:57.507"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 09:42:57.507" endtime="20220705 09:42:57.508"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 09:42:57.508" level="INFO">${url} = boards/62c407a13d4d7e135885387b</msg>
<status status="PASS" starttime="20220705 09:42:57.508" endtime="20220705 09:42:57.508"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 09:42:57.606" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 09:42:57.508" endtime="20220705 09:42:57.606"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 09:42:57.606" endtime="20220705 09:42:57.606"/>
</return>
<msg timestamp="20220705 09:42:57.606" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 09:42:57.506" endtime="20220705 09:42:57.607"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 09:42:57.607" endtime="20220705 09:42:57.607"/>
</return>
<status status="PASS" starttime="20220705 09:42:57.506" endtime="20220705 09:42:57.607"/>
</kw>
<kw name="Get A Board" library="Board">
<var>${new_response2}</var>
<arg>${response.json()}[id]</arg>
<doc>Gets the Board with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 09:42:57.609" level="INFO">${url} = boards/62c407a13d4d7e135885387b</msg>
<status status="PASS" starttime="20220705 09:42:57.608" endtime="20220705 09:42:57.609"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 09:42:57.654" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 09:42:57.609" endtime="20220705 09:42:57.654"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 09:42:57.654" endtime="20220705 09:42:57.654"/>
</return>
<msg timestamp="20220705 09:42:57.655" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 09:42:57.608" endtime="20220705 09:42:57.655"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 09:42:57.655" endtime="20220705 09:42:57.655"/>
</return>
<msg timestamp="20220705 09:42:57.655" level="INFO">${new_response2} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 09:42:57.607" endtime="20220705 09:42:57.655"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${new_response2.json()}[desc]</arg>
<arg>updatedDescription</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220705 09:42:57.655" endtime="20220705 09:42:57.656"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${response.json()}[id]</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${response.json()}[id]</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 09:42:57.658" level="INFO">${url} = boards/62c407a13d4d7e135885387b</msg>
<status status="PASS" starttime="20220705 09:42:57.658" endtime="20220705 09:42:57.658"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 09:42:58.520" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 09:42:57.659" endtime="20220705 09:42:58.520"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 09:42:58.520" endtime="20220705 09:42:58.520"/>
</return>
<msg timestamp="20220705 09:42:58.521" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 09:42:57.658" endtime="20220705 09:42:58.521"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 09:42:58.521" endtime="20220705 09:42:58.521"/>
</return>
<status status="PASS" starttime="20220705 09:42:57.657" endtime="20220705 09:42:58.521"/>
</kw>
<status status="PASS" starttime="20220705 09:42:57.656" endtime="20220705 09:42:58.521"/>
</kw>
<doc>Verify that a board's description can be updated through API</doc>
<tag>api</tag>
<tag>board.update</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220705 09:42:57.121" endtime="20220705 09:42:58.521"/>
</test>
<kw name="Delete All Sessions" library="request_own_library" type="TEARDOWN">
<status status="PASS" starttime="20220705 09:42:58.522" endtime="20220705 09:42:58.523"/>
</kw>
<doc>Example Test with Trello API Boards</doc>
<status status="PASS" starttime="20220705 09:42:54.587" endtime="20220705 09:42:58.523"/>
</suite>
<suite id="s1-s1-s2" name="Trello Api Cards Tests" source="/trello/api/trello_api_cards_tests.robot">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Create Trello Session</arg>
<arg>Setup Board And List</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Create Trello Session" library="TrelloAPI">
<doc>Creates a Trello Session</doc>
<kw name="Create Session" library="request_own_library">
<arg>${API_BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<status status="PASS" starttime="20220705 09:42:58.534" endtime="20220705 09:42:58.535"/>
</kw>
<status status="PASS" starttime="20220705 09:42:58.534" endtime="20220705 09:42:58.535"/>
</kw>
<kw name="Setup Board And List">
<doc>Create a board and save its ID and its first list's ID</doc>
<kw name="Create A Board" library="Board">
<var>${BOARD}</var>
<arg>TestBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 09:42:58.536" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 09:42:58.535" endtime="20220705 09:42:58.536"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 09:42:58.536" endtime="20220705 09:42:58.536"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 09:42:58.537" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220705 09:42:58.536" endtime="20220705 09:42:58.537"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 09:42:58.753" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 09:42:58.537" endtime="20220705 09:42:58.753"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 09:42:58.753" endtime="20220705 09:42:58.753"/>
</return>
<msg timestamp="20220705 09:42:58.754" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 09:42:58.535" endtime="20220705 09:42:58.754"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 09:42:58.754" endtime="20220705 09:42:58.754"/>
</return>
<msg timestamp="20220705 09:42:58.754" level="INFO">${BOARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 09:42:58.535" endtime="20220705 09:42:58.754"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_BOARD_ID}</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220705 09:42:58.755" level="INFO">${TEST_SUITE_BOARD_ID} = 62c407a25f79917a4ee4b25d</msg>
<status status="PASS" starttime="20220705 09:42:58.754" endtime="20220705 09:42:58.755"/>
</kw>
<kw name="Get Lists On A Board" library="Board">
<var>${LISTS}</var>
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Get all the lists in a board</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>lists_on_board</arg>
<arg>${id}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 09:42:58.756" level="INFO">${url} = boards/62c407a25f79917a4ee4b25d/lists/</msg>
<status status="PASS" starttime="20220705 09:42:58.756" endtime="20220705 09:42:58.756"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 09:42:58.808" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 09:42:58.756" endtime="20220705 09:42:58.808"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 09:42:58.808" endtime="20220705 09:42:58.808"/>
</return>
<msg timestamp="20220705 09:42:58.808" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 09:42:58.756" endtime="20220705 09:42:58.808"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 09:42:58.808" endtime="20220705 09:42:58.809"/>
</return>
<msg timestamp="20220705 09:42:58.809" level="INFO">${LISTS} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 09:42:58.755" endtime="20220705 09:42:58.809"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_LIST_ID}</arg>
<arg>${LISTS.json()}[0][id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220705 09:42:58.810" level="INFO">${TEST_SUITE_LIST_ID} = 62c407a25f79917a4ee4b264</msg>
<status status="PASS" starttime="20220705 09:42:58.809" endtime="20220705 09:42:58.810"/>
</kw>
<status status="PASS" starttime="20220705 09:42:58.535" endtime="20220705 09:42:58.810"/>
</kw>
<status status="PASS" starttime="20220705 09:42:58.534" endtime="20220705 09:42:58.810"/>
</kw>
<test id="s1-s1-s2-t1" name="Verify A Card Can Be Created" line="13">
<kw name="Create A Card" library="Card">
<var>${response}</var>
<arg>name</arg>
<arg>RFCard2</arg>
<doc>Creates a new card in the given list.
required_args: listId
optional_args: name, desc, pos, idCardSource, idLabels, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>@{optional_args}</arg>
<arg>idList</arg>
<arg>${idList}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 09:42:58.812" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 09:42:58.812" endtime="20220705 09:42:58.812"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 09:42:58.812" endtime="20220705 09:42:58.812"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 09:42:58.813" level="INFO">${url} = cards/</msg>
<status status="PASS" starttime="20220705 09:42:58.812" endtime="20220705 09:42:58.813"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 09:42:58.974" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 09:42:58.813" endtime="20220705 09:42:58.974"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 09:42:58.974" endtime="20220705 09:42:58.974"/>
</return>
<msg timestamp="20220705 09:42:58.974" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 09:42:58.811" endtime="20220705 09:42:58.974"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 09:42:58.974" endtime="20220705 09:42:58.974"/>
</return>
<msg timestamp="20220705 09:42:58.974" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 09:42:58.811" endtime="20220705 09:42:58.974"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>card</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 09:42:58.975" endtime="20220705 09:42:58.980"/>
</kw>
<status status="PASS" starttime="20220705 09:42:58.975" endtime="20220705 09:42:58.980"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 09:42:58.981" endtime="20220705 09:42:58.981"/>
</return>
<msg timestamp="20220705 09:42:58.982" level="INFO">${CARD_ID} = 62c407a2d640ef528b7addba</msg>
<status status="PASS" starttime="20220705 09:42:58.981" endtime="20220705 09:42:58.982"/>
</kw>
<kw name="Get A Card" library="Card">
<var>${response}</var>
<arg>${CARD_ID}</arg>
<doc>Gets the card with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 09:42:58.983" level="INFO">${url} = cards/62c407a2d640ef528b7addba</msg>
<status status="PASS" starttime="20220705 09:42:58.982" endtime="20220705 09:42:58.983"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 09:42:59.040" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 09:42:58.983" endtime="20220705 09:42:59.040"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 09:42:59.040" endtime="20220705 09:42:59.040"/>
</return>
<msg timestamp="20220705 09:42:59.040" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 09:42:58.982" endtime="20220705 09:42:59.040"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 09:42:59.040" endtime="20220705 09:42:59.040"/>
</return>
<msg timestamp="20220705 09:42:59.040" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 09:42:58.982" endtime="20220705 09:42:59.040"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_NAME}</var>
<arg>${response}</arg>
<arg>name</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 09:42:59.041" endtime="20220705 09:42:59.041"/>
</return>
<msg timestamp="20220705 09:42:59.042" level="INFO">${CARD_NAME} = RFCard2</msg>
<status status="PASS" starttime="20220705 09:42:59.041" endtime="20220705 09:42:59.042"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${CARD_NAME}</arg>
<arg>RFCard2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220705 09:42:59.042" endtime="20220705 09:42:59.042"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Card</arg>
<arg>${CARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Card" library="Card">
<arg>${CARD_ID}</arg>
<doc>Deletes the card with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 09:42:59.043" level="INFO">${url} = cards/62c407a2d640ef528b7addba</msg>
<status status="PASS" starttime="20220705 09:42:59.043" endtime="20220705 09:42:59.043"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 09:42:59.204" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 09:42:59.044" endtime="20220705 09:42:59.204"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 09:42:59.204" endtime="20220705 09:42:59.204"/>
</return>
<msg timestamp="20220705 09:42:59.204" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 09:42:59.043" endtime="20220705 09:42:59.204"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 09:42:59.204" endtime="20220705 09:42:59.204"/>
</return>
<status status="PASS" starttime="20220705 09:42:59.042" endtime="20220705 09:42:59.205"/>
</kw>
<status status="PASS" starttime="20220705 09:42:59.042" endtime="20220705 09:42:59.205"/>
</kw>
<doc>Verify that a card can be created through API</doc>
<tag>api</tag>
<tag>card.create</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220705 09:42:58.810" endtime="20220705 09:42:59.205"/>
</test>
<test id="s1-s1-s2-t2" name="Verify A Card Can Be Closed" line="24">
<kw name="Create A Card" library="Card">
<var>${response}</var>
<doc>Creates a new card in the given list.
required_args: listId
optional_args: name, desc, pos, idCardSource, idLabels, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>@{optional_args}</arg>
<arg>idList</arg>
<arg>${idList}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 09:42:59.207" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 09:42:59.207" endtime="20220705 09:42:59.207"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 09:42:59.207" endtime="20220705 09:42:59.207"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 09:42:59.208" level="INFO">${url} = cards/</msg>
<status status="PASS" starttime="20220705 09:42:59.208" endtime="20220705 09:42:59.208"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 09:42:59.368" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 09:42:59.208" endtime="20220705 09:42:59.368"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 09:42:59.368" endtime="20220705 09:42:59.368"/>
</return>
<msg timestamp="20220705 09:42:59.368" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 09:42:59.206" endtime="20220705 09:42:59.368"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 09:42:59.369" endtime="20220705 09:42:59.369"/>
</return>
<msg timestamp="20220705 09:42:59.369" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 09:42:59.206" endtime="20220705 09:42:59.369"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 09:42:59.369" endtime="20220705 09:42:59.369"/>
</return>
<msg timestamp="20220705 09:42:59.370" level="INFO">${CARD_ID} = 62c407a31d507e747e4494eb</msg>
<status status="PASS" starttime="20220705 09:42:59.369" endtime="20220705 09:42:59.370"/>
</kw>
<kw name="Archive A Card" library="Card">
<arg>${CARD_ID}</arg>
<doc>Modifies the card status to closed.</doc>
<kw name="Update A Card" library="Card">
<var>${response}</var>
<arg>${id}</arg>
<arg>closed</arg>
<arg>true</arg>
<arg>status_code=${status_code}</arg>
<doc>Updates the card with the given ID
optional_args: name, desc, closed, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<arg>status_code=${status_code}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 09:42:59.373" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 09:42:59.372" endtime="20220705 09:42:59.373"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 09:42:59.373" endtime="20220705 09:42:59.373"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 09:42:59.373" level="INFO">${url} = cards/62c407a31d507e747e4494eb</msg>
<status status="PASS" starttime="20220705 09:42:59.373" endtime="20220705 09:42:59.373"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 09:42:59.494" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 09:42:59.373" endtime="20220705 09:42:59.494"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 09:42:59.494" endtime="20220705 09:42:59.494"/>
</return>
<msg timestamp="20220705 09:42:59.494" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 09:42:59.372" endtime="20220705 09:42:59.494"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 09:42:59.494" endtime="20220705 09:42:59.494"/>
</return>
<msg timestamp="20220705 09:42:59.495" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 09:42:59.371" endtime="20220705 09:42:59.495"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 09:42:59.495" endtime="20220705 09:42:59.495"/>
</return>
<status status="PASS" starttime="20220705 09:42:59.370" endtime="20220705 09:42:59.495"/>
</kw>
<kw name="Get A Card" library="Card">
<var>${response}</var>
<arg>${CARD_ID}</arg>
<doc>Gets the card with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 09:42:59.496" level="INFO">${url} = cards/62c407a31d507e747e4494eb</msg>
<status status="PASS" starttime="20220705 09:42:59.496" endtime="20220705 09:42:59.496"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 09:42:59.558" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 09:42:59.497" endtime="20220705 09:42:59.558"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 09:42:59.558" endtime="20220705 09:42:59.558"/>
</return>
<msg timestamp="20220705 09:42:59.558" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 09:42:59.496" endtime="20220705 09:42:59.558"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 09:42:59.558" endtime="20220705 09:42:59.558"/>
</return>
<msg timestamp="20220705 09:42:59.559" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 09:42:59.495" endtime="20220705 09:42:59.559"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_CLOSED}</var>
<arg>${response}</arg>
<arg>closed</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 09:42:59.559" endtime="20220705 09:42:59.559"/>
</return>
<msg timestamp="20220705 09:42:59.560" level="INFO">${CARD_CLOSED} = True</msg>
<status status="PASS" starttime="20220705 09:42:59.559" endtime="20220705 09:42:59.560"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${CARD_CLOSED}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220705 09:42:59.560" endtime="20220705 09:42:59.560"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Card</arg>
<arg>${CARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Card" library="Card">
<arg>${CARD_ID}</arg>
<doc>Deletes the card with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 09:42:59.562" level="INFO">${url} = cards/62c407a31d507e747e4494eb</msg>
<status status="PASS" starttime="20220705 09:42:59.562" endtime="20220705 09:42:59.562"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 09:42:59.701" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 09:42:59.562" endtime="20220705 09:42:59.701"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 09:42:59.701" endtime="20220705 09:42:59.701"/>
</return>
<msg timestamp="20220705 09:42:59.702" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 09:42:59.561" endtime="20220705 09:42:59.702"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 09:42:59.702" endtime="20220705 09:42:59.702"/>
</return>
<status status="PASS" starttime="20220705 09:42:59.561" endtime="20220705 09:42:59.702"/>
</kw>
<status status="PASS" starttime="20220705 09:42:59.561" endtime="20220705 09:42:59.702"/>
</kw>
<doc>Verify that a card can be closed through API</doc>
<tag>api</tag>
<tag>card.close</tag>
<tag>regression</tag>
<status status="PASS" starttime="20220705 09:42:59.205" endtime="20220705 09:42:59.702"/>
</test>
<test id="s1-s1-s2-t3" name="Verify A Card Can Be Deleted" line="35">
<kw name="Create A Card" library="Card">
<var>${response}</var>
<doc>Creates a new card in the given list.
required_args: listId
optional_args: name, desc, pos, idCardSource, idLabels, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>@{optional_args}</arg>
<arg>idList</arg>
<arg>${idList}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 09:42:59.705" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 09:42:59.705" endtime="20220705 09:42:59.705"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 09:42:59.705" endtime="20220705 09:42:59.705"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 09:42:59.706" level="INFO">${url} = cards/</msg>
<status status="PASS" starttime="20220705 09:42:59.705" endtime="20220705 09:42:59.706"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 09:42:59.855" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 09:42:59.706" endtime="20220705 09:42:59.855"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 09:42:59.855" endtime="20220705 09:42:59.855"/>
</return>
<msg timestamp="20220705 09:42:59.855" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 09:42:59.704" endtime="20220705 09:42:59.855"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 09:42:59.855" endtime="20220705 09:42:59.855"/>
</return>
<msg timestamp="20220705 09:42:59.855" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 09:42:59.703" endtime="20220705 09:42:59.855"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 09:42:59.856" endtime="20220705 09:42:59.856"/>
</return>
<msg timestamp="20220705 09:42:59.857" level="INFO">${CARD_ID} = 62c407a3806686216e8fbd89</msg>
<status status="PASS" starttime="20220705 09:42:59.856" endtime="20220705 09:42:59.857"/>
</kw>
<kw name="Delete A Card" library="Card">
<var>${response}</var>
<arg>${CARD_ID}</arg>
<doc>Deletes the card with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 09:42:59.858" level="INFO">${url} = cards/62c407a3806686216e8fbd89</msg>
<status status="PASS" starttime="20220705 09:42:59.858" endtime="20220705 09:42:59.858"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 09:43:00.067" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 09:42:59.858" endtime="20220705 09:43:00.067"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 09:43:00.067" endtime="20220705 09:43:00.067"/>
</return>
<msg timestamp="20220705 09:43:00.068" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 09:42:59.857" endtime="20220705 09:43:00.068"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 09:43:00.068" endtime="20220705 09:43:00.068"/>
</return>
<msg timestamp="20220705 09:43:00.068" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 09:42:59.857" endtime="20220705 09:43:00.068"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>delete</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 09:43:00.069" endtime="20220705 09:43:00.071"/>
</kw>
<status status="PASS" starttime="20220705 09:43:00.068" endtime="20220705 09:43:00.071"/>
</kw>
<kw name="Get A Card" library="Card">
<arg>${CARD_ID}</arg>
<arg>status_code=404</arg>
<doc>Gets the card with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 09:43:00.072" level="INFO">${url} = cards/62c407a3806686216e8fbd89</msg>
<status status="PASS" starttime="20220705 09:43:00.072" endtime="20220705 09:43:00.072"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 09:43:00.112" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220705 09:43:00.072" endtime="20220705 09:43:00.112"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 09:43:00.112" endtime="20220705 09:43:00.112"/>
</return>
<msg timestamp="20220705 09:43:00.112" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220705 09:43:00.071" endtime="20220705 09:43:00.112"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 09:43:00.112" endtime="20220705 09:43:00.112"/>
</return>
<status status="PASS" starttime="20220705 09:43:00.071" endtime="20220705 09:43:00.113"/>
</kw>
<doc>Verify that a card can be deleted through API</doc>
<tag>api</tag>
<tag>card.delete</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220705 09:42:59.702" endtime="20220705 09:43:00.113"/>
</test>
<test id="s1-s1-s2-t4" name="Verify A Card Can Be Updated" line="44">
<kw name="Create A Card" library="Card">
<var>${response}</var>
<arg>name</arg>
<arg>RFCard4</arg>
<doc>Creates a new card in the given list.
required_args: listId
optional_args: name, desc, pos, idCardSource, idLabels, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>@{optional_args}</arg>
<arg>idList</arg>
<arg>${idList}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 09:43:00.116" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 09:43:00.115" endtime="20220705 09:43:00.116"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 09:43:00.116" endtime="20220705 09:43:00.116"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 09:43:00.117" level="INFO">${url} = cards/</msg>
<status status="PASS" starttime="20220705 09:43:00.116" endtime="20220705 09:43:00.117"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 09:43:00.248" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 09:43:00.117" endtime="20220705 09:43:00.248"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 09:43:00.248" endtime="20220705 09:43:00.248"/>
</return>
<msg timestamp="20220705 09:43:00.248" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 09:43:00.115" endtime="20220705 09:43:00.248"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 09:43:00.248" endtime="20220705 09:43:00.249"/>
</return>
<msg timestamp="20220705 09:43:00.249" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 09:43:00.114" endtime="20220705 09:43:00.249"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 09:43:00.249" endtime="20220705 09:43:00.249"/>
</return>
<msg timestamp="20220705 09:43:00.250" level="INFO">${CARD_ID} = 62c407a488f1ca297e0e6e5f</msg>
<status status="PASS" starttime="20220705 09:43:00.249" endtime="20220705 09:43:00.250"/>
</kw>
<kw name="Update A Card" library="Card">
<var>${response}</var>
<arg>${CARD_ID}</arg>
<arg>name</arg>
<arg>RFCard5</arg>
<arg>desc</arg>
<arg>Description</arg>
<doc>Updates the card with the given ID
optional_args: name, desc, closed, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<arg>status_code=${status_code}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 09:43:00.251" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 09:43:00.251" endtime="20220705 09:43:00.252"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 09:43:00.252" endtime="20220705 09:43:00.252"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 09:43:00.252" level="INFO">${url} = cards/62c407a488f1ca297e0e6e5f</msg>
<status status="PASS" starttime="20220705 09:43:00.252" endtime="20220705 09:43:00.252"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 09:43:00.396" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 09:43:00.252" endtime="20220705 09:43:00.396"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 09:43:00.396" endtime="20220705 09:43:00.396"/>
</return>
<msg timestamp="20220705 09:43:00.396" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 09:43:00.251" endtime="20220705 09:43:00.396"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 09:43:00.396" endtime="20220705 09:43:00.396"/>
</return>
<msg timestamp="20220705 09:43:00.396" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 09:43:00.250" endtime="20220705 09:43:00.397"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>card</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 09:43:00.397" endtime="20220705 09:43:00.402"/>
</kw>
<status status="PASS" starttime="20220705 09:43:00.397" endtime="20220705 09:43:00.402"/>
</kw>
<kw name="Get A Card" library="Card">
<var>${response}</var>
<arg>${CARD_ID}</arg>
<doc>Gets the card with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 09:43:00.403" level="INFO">${url} = cards/62c407a488f1ca297e0e6e5f</msg>
<status status="PASS" starttime="20220705 09:43:00.403" endtime="20220705 09:43:00.403"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 09:43:00.744" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 09:43:00.404" endtime="20220705 09:43:00.744"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 09:43:00.744" endtime="20220705 09:43:00.744"/>
</return>
<msg timestamp="20220705 09:43:00.744" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 09:43:00.403" endtime="20220705 09:43:00.744"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 09:43:00.745" endtime="20220705 09:43:00.745"/>
</return>
<msg timestamp="20220705 09:43:00.745" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 09:43:00.402" endtime="20220705 09:43:00.745"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_NAME}</var>
<arg>${response}</arg>
<arg>name</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 09:43:00.745" endtime="20220705 09:43:00.745"/>
</return>
<msg timestamp="20220705 09:43:00.746" level="INFO">${CARD_NAME} = RFCard5</msg>
<status status="PASS" starttime="20220705 09:43:00.745" endtime="20220705 09:43:00.746"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_DESC}</var>
<arg>${response}</arg>
<arg>desc</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 09:43:00.747" endtime="20220705 09:43:00.747"/>
</return>
<msg timestamp="20220705 09:43:00.747" level="INFO">${CARD_DESC} = Description</msg>
<status status="PASS" starttime="20220705 09:43:00.746" endtime="20220705 09:43:00.748"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${CARD_NAME}</arg>
<arg>RFCard5</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220705 09:43:00.748" endtime="20220705 09:43:00.748"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${CARD_DESC}</arg>
<arg>Description</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220705 09:43:00.748" endtime="20220705 09:43:00.748"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Card</arg>
<arg>${CARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Card" library="Card">
<arg>${CARD_ID}</arg>
<doc>Deletes the card with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 09:43:00.750" level="INFO">${url} = cards/62c407a488f1ca297e0e6e5f</msg>
<status status="PASS" starttime="20220705 09:43:00.750" endtime="20220705 09:43:00.750"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 09:43:00.917" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 09:43:00.750" endtime="20220705 09:43:00.918"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 09:43:00.918" endtime="20220705 09:43:00.918"/>
</return>
<msg timestamp="20220705 09:43:00.918" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 09:43:00.749" endtime="20220705 09:43:00.918"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 09:43:00.918" endtime="20220705 09:43:00.918"/>
</return>
<status status="PASS" starttime="20220705 09:43:00.749" endtime="20220705 09:43:00.918"/>
</kw>
<status status="PASS" starttime="20220705 09:43:00.749" endtime="20220705 09:43:00.918"/>
</kw>
<doc>Verify that a card's name and Description can be updated through API</doc>
<tag>api</tag>
<tag>card.update</tag>
<tag>regression</tag>
<status status="PASS" starttime="20220705 09:43:00.113" endtime="20220705 09:43:00.918"/>
</test>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Teardown Board</arg>
<arg>Delete All Sessions</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Teardown Board">
<doc>Delete the board created for this suite</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 09:43:00.922" level="INFO">${url} = boards/62c407a25f79917a4ee4b25d</msg>
<status status="PASS" starttime="20220705 09:43:00.922" endtime="20220705 09:43:00.922"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 09:43:01.257" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 09:43:00.922" endtime="20220705 09:43:01.257"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 09:43:01.257" endtime="20220705 09:43:01.257"/>
</return>
<msg timestamp="20220705 09:43:01.258" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 09:43:00.921" endtime="20220705 09:43:01.258"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 09:43:01.258" endtime="20220705 09:43:01.258"/>
</return>
<status status="PASS" starttime="20220705 09:43:00.921" endtime="20220705 09:43:01.258"/>
</kw>
<status status="PASS" starttime="20220705 09:43:00.920" endtime="20220705 09:43:01.258"/>
</kw>
<status status="PASS" starttime="20220705 09:43:00.920" endtime="20220705 09:43:01.258"/>
</kw>
<kw name="Delete All Sessions" library="request_own_library">
<status status="PASS" starttime="20220705 09:43:01.258" endtime="20220705 09:43:01.259"/>
</kw>
<status status="PASS" starttime="20220705 09:43:00.920" endtime="20220705 09:43:01.260"/>
</kw>
<doc>Example Test with Trello API Cards</doc>
<status status="PASS" starttime="20220705 09:42:58.525" endtime="20220705 09:43:01.260"/>
</suite>
<suite id="s1-s1-s3" name="Trello Api Checklists Tests" source="/trello/api/trello_api_checklists_tests.robot">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Create Trello Session</arg>
<arg>Setup Board, List And Card</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Create Trello Session" library="TrelloAPI">
<doc>Creates a Trello Session</doc>
<kw name="Create Session" library="request_own_library">
<arg>${API_BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<status status="PASS" starttime="20220705 09:43:01.271" endtime="20220705 09:43:01.271"/>
</kw>
<status status="PASS" starttime="20220705 09:43:01.271" endtime="20220705 09:43:01.271"/>
</kw>
<kw name="Setup Board, List And Card">
<doc>Create a board and save its ID and its first list's ID</doc>
<kw name="Create A Board" library="Board">
<var>${BOARD}</var>
<arg>TestBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 09:43:01.273" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 09:43:01.272" endtime="20220705 09:43:01.273"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 09:43:01.273" endtime="20220705 09:43:01.273"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 09:43:01.274" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220705 09:43:01.273" endtime="20220705 09:43:01.274"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 09:43:01.654" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 09:43:01.274" endtime="20220705 09:43:01.654"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 09:43:01.654" endtime="20220705 09:43:01.654"/>
</return>
<msg timestamp="20220705 09:43:01.655" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 09:43:01.272" endtime="20220705 09:43:01.655"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 09:43:01.655" endtime="20220705 09:43:01.655"/>
</return>
<msg timestamp="20220705 09:43:01.655" level="INFO">${BOARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 09:43:01.272" endtime="20220705 09:43:01.655"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_BOARD_ID}</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220705 09:43:01.656" level="INFO">${TEST_SUITE_BOARD_ID} = 62c407a55759e545381274ce</msg>
<status status="PASS" starttime="20220705 09:43:01.655" endtime="20220705 09:43:01.656"/>
</kw>
<kw name="Get Lists On A Board" library="Board">
<var>${LISTS}</var>
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Get all the lists in a board</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>lists_on_board</arg>
<arg>${id}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 09:43:01.657" level="INFO">${url} = boards/62c407a55759e545381274ce/lists/</msg>
<status status="PASS" starttime="20220705 09:43:01.657" endtime="20220705 09:43:01.657"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 09:43:01.705" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 09:43:01.657" endtime="20220705 09:43:01.705"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 09:43:01.705" endtime="20220705 09:43:01.705"/>
</return>
<msg timestamp="20220705 09:43:01.705" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 09:43:01.657" endtime="20220705 09:43:01.706"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 09:43:01.706" endtime="20220705 09:43:01.706"/>
</return>
<msg timestamp="20220705 09:43:01.706" level="INFO">${LISTS} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 09:43:01.656" endtime="20220705 09:43:01.706"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_LIST_ID}</arg>
<arg>${LISTS.json()}[0][id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220705 09:43:01.707" level="INFO">${TEST_SUITE_LIST_ID} = 62c407a55759e545381274d5</msg>
<status status="PASS" starttime="20220705 09:43:01.706" endtime="20220705 09:43:01.707"/>
</kw>
<kw name="Create A Card" library="Card">
<var>${CARD}</var>
<arg>name</arg>
<arg>TestCard</arg>
<doc>Creates a new card in the given list.
required_args: listId
optional_args: name, desc, pos, idCardSource, idLabels, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>@{optional_args}</arg>
<arg>idList</arg>
<arg>${idList}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 09:43:01.708" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 09:43:01.708" endtime="20220705 09:43:01.708"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 09:43:01.709" endtime="20220705 09:43:01.709"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 09:43:01.709" level="INFO">${url} = cards/</msg>
<status status="PASS" starttime="20220705 09:43:01.709" endtime="20220705 09:43:01.710"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 09:43:01.903" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 09:43:01.710" endtime="20220705 09:43:01.903"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 09:43:01.904" endtime="20220705 09:43:01.904"/>
</return>
<msg timestamp="20220705 09:43:01.904" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 09:43:01.708" endtime="20220705 09:43:01.904"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 09:43:01.904" endtime="20220705 09:43:01.904"/>
</return>
<msg timestamp="20220705 09:43:01.904" level="INFO">${CARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 09:43:01.707" endtime="20220705 09:43:01.904"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_CARD_ID}</arg>
<arg>${CARD.json()}[id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220705 09:43:01.905" level="INFO">${TEST_SUITE_CARD_ID} = 62c407a5165fce814e25a2e2</msg>
<status status="PASS" starttime="20220705 09:43:01.904" endtime="20220705 09:43:01.905"/>
</kw>
<status status="PASS" starttime="20220705 09:43:01.272" endtime="20220705 09:43:01.905"/>
</kw>
<status status="PASS" starttime="20220705 09:43:01.270" endtime="20220705 09:43:01.906"/>
</kw>
<test id="s1-s1-s3-t1" name="Verify A Checklist Can Be Created" line="14">
<kw name="Create A Checklist" library="Checklist">
<var>${response}</var>
<arg>name</arg>
<arg>TestChecklist</arg>
<arg>idCard=${TEST_SUITE_CARD_ID}</arg>
<doc>Creates a new checklist in the given card.
required_args: idCard
optional_args: name, pos, idChecklistSource
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>@{optional_args}</arg>
<arg>idCard</arg>
<arg>${idCard}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 09:43:01.908" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 09:43:01.907" endtime="20220705 09:43:01.908"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 09:43:01.908" endtime="20220705 09:43:01.908"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 09:43:01.909" level="INFO">${url} = checklists/</msg>
<status status="PASS" starttime="20220705 09:43:01.908" endtime="20220705 09:43:01.909"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 09:43:02.017" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 09:43:01.909" endtime="20220705 09:43:02.017"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 09:43:02.017" endtime="20220705 09:43:02.017"/>
</return>
<msg timestamp="20220705 09:43:02.017" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 09:43:01.907" endtime="20220705 09:43:02.017"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 09:43:02.017" endtime="20220705 09:43:02.017"/>
</return>
<msg timestamp="20220705 09:43:02.018" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 09:43:01.906" endtime="20220705 09:43:02.018"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${checklist_id}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 09:43:02.018" endtime="20220705 09:43:02.018"/>
</return>
<msg timestamp="20220705 09:43:02.019" level="INFO">${checklist_id} = 62c407a5f7fb7a14cd7fe9ff</msg>
<status status="PASS" starttime="20220705 09:43:02.018" endtime="20220705 09:43:02.019"/>
</kw>
<kw name="Get A Checklist" library="Checklist">
<var>${response}</var>
<arg>${checklist_id}</arg>
<doc>Gets the checklist with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 09:43:02.020" level="INFO">${url} = checklists/62c407a5f7fb7a14cd7fe9ff</msg>
<status status="PASS" starttime="20220705 09:43:02.020" endtime="20220705 09:43:02.021"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 09:43:02.080" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 09:43:02.021" endtime="20220705 09:43:02.080"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 09:43:02.080" endtime="20220705 09:43:02.080"/>
</return>
<msg timestamp="20220705 09:43:02.081" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 09:43:02.020" endtime="20220705 09:43:02.081"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 09:43:02.081" endtime="20220705 09:43:02.081"/>
</return>
<msg timestamp="20220705 09:43:02.081" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 09:43:02.019" endtime="20220705 09:43:02.081"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${checklist_name}</var>
<arg>${response}</arg>
<arg>name</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 09:43:02.082" endtime="20220705 09:43:02.082"/>
</return>
<msg timestamp="20220705 09:43:02.082" level="INFO">${checklist_name} = TestChecklist</msg>
<status status="PASS" starttime="20220705 09:43:02.081" endtime="20220705 09:43:02.082"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${checklist_name}</arg>
<arg>TestChecklist</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220705 09:43:02.083" endtime="20220705 09:43:02.083"/>
</kw>
<kw name="Delete A Checklist" library="Checklist" type="TEARDOWN">
<arg>${checklist_id}</arg>
<doc>Deletes the checklist with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 09:43:02.084" level="INFO">${url} = checklists/62c407a5f7fb7a14cd7fe9ff</msg>
<status status="PASS" starttime="20220705 09:43:02.084" endtime="20220705 09:43:02.084"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 09:43:02.194" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 09:43:02.085" endtime="20220705 09:43:02.194"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 09:43:02.195" endtime="20220705 09:43:02.195"/>
</return>
<msg timestamp="20220705 09:43:02.195" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 09:43:02.084" endtime="20220705 09:43:02.195"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 09:43:02.195" endtime="20220705 09:43:02.195"/>
</return>
<status status="PASS" starttime="20220705 09:43:02.083" endtime="20220705 09:43:02.195"/>
</kw>
<doc>Verify that a checklist can be created through API</doc>
<tag>api</tag>
<tag>checklist.create</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220705 09:43:01.906" endtime="20220705 09:43:02.195"/>
</test>
<test id="s1-s1-s3-t2" name="Verify A Checklist Can Be Deleted" line="24">
<kw name="Create A Checklist" library="Checklist">
<var>${response}</var>
<arg>name</arg>
<arg>TestChecklist</arg>
<arg>idCard=${TEST_SUITE_CARD_ID}</arg>
<doc>Creates a new checklist in the given card.
required_args: idCard
optional_args: name, pos, idChecklistSource
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>@{optional_args}</arg>
<arg>idCard</arg>
<arg>${idCard}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 09:43:02.198" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 09:43:02.198" endtime="20220705 09:43:02.198"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 09:43:02.198" endtime="20220705 09:43:02.198"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 09:43:02.199" level="INFO">${url} = checklists/</msg>
<status status="PASS" starttime="20220705 09:43:02.198" endtime="20220705 09:43:02.199"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 09:43:02.325" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 09:43:02.199" endtime="20220705 09:43:02.325"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 09:43:02.326" endtime="20220705 09:43:02.326"/>
</return>
<msg timestamp="20220705 09:43:02.326" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 09:43:02.197" endtime="20220705 09:43:02.326"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 09:43:02.326" endtime="20220705 09:43:02.326"/>
</return>
<msg timestamp="20220705 09:43:02.326" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 09:43:02.196" endtime="20220705 09:43:02.326"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${checklist_id}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 09:43:02.327" endtime="20220705 09:43:02.327"/>
</return>
<msg timestamp="20220705 09:43:02.328" level="INFO">${checklist_id} = 62c407a60bcdda2d244e529c</msg>
<status status="PASS" starttime="20220705 09:43:02.326" endtime="20220705 09:43:02.328"/>
</kw>
<kw name="Delete A Checklist" library="Checklist">
<var>${response}</var>
<arg>${checklist_id}</arg>
<doc>Deletes the checklist with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 09:43:02.329" level="INFO">${url} = checklists/62c407a60bcdda2d244e529c</msg>
<status status="PASS" starttime="20220705 09:43:02.329" endtime="20220705 09:43:02.329"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 09:43:02.437" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 09:43:02.330" endtime="20220705 09:43:02.437"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 09:43:02.437" endtime="20220705 09:43:02.437"/>
</return>
<msg timestamp="20220705 09:43:02.437" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 09:43:02.329" endtime="20220705 09:43:02.437"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 09:43:02.437" endtime="20220705 09:43:02.437"/>
</return>
<msg timestamp="20220705 09:43:02.438" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 09:43:02.328" endtime="20220705 09:43:02.438"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>delete</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 09:43:02.438" endtime="20220705 09:43:02.440"/>
</kw>
<status status="PASS" starttime="20220705 09:43:02.438" endtime="20220705 09:43:02.440"/>
</kw>
<kw name="Get A Checklist" library="Checklist">
<arg>${checklist_id}</arg>
<arg>status_code=404</arg>
<doc>Gets the checklist with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 09:43:02.442" level="INFO">${url} = checklists/62c407a60bcdda2d244e529c</msg>
<status status="PASS" starttime="20220705 09:43:02.441" endtime="20220705 09:43:02.442"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 09:43:02.478" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220705 09:43:02.442" endtime="20220705 09:43:02.478"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 09:43:02.478" endtime="20220705 09:43:02.478"/>
</return>
<msg timestamp="20220705 09:43:02.478" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220705 09:43:02.441" endtime="20220705 09:43:02.478"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 09:43:02.478" endtime="20220705 09:43:02.478"/>
</return>
<status status="PASS" starttime="20220705 09:43:02.441" endtime="20220705 09:43:02.478"/>
</kw>
<doc>Verify that a checklist can be deleted through API</doc>
<tag>api</tag>
<tag>checklist.delete</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220705 09:43:02.196" endtime="20220705 09:43:02.479"/>
</test>
<test id="s1-s1-s3-t3" name="Verify A Checklist Can Be Updated" line="33">
<kw name="Create A Checklist" library="Checklist">
<var>${response}</var>
<arg>name</arg>
<arg>TestChecklist</arg>
<arg>idCard=${TEST_SUITE_CARD_ID}</arg>
<doc>Creates a new checklist in the given card.
required_args: idCard
optional_args: name, pos, idChecklistSource
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>@{optional_args}</arg>
<arg>idCard</arg>
<arg>${idCard}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 09:43:02.482" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 09:43:02.481" endtime="20220705 09:43:02.482"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 09:43:02.483" endtime="20220705 09:43:02.483"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 09:43:02.484" level="INFO">${url} = checklists/</msg>
<status status="PASS" starttime="20220705 09:43:02.483" endtime="20220705 09:43:02.484"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 09:43:02.595" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 09:43:02.484" endtime="20220705 09:43:02.595"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 09:43:02.595" endtime="20220705 09:43:02.595"/>
</return>
<msg timestamp="20220705 09:43:02.595" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 09:43:02.480" endtime="20220705 09:43:02.595"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 09:43:02.595" endtime="20220705 09:43:02.596"/>
</return>
<msg timestamp="20220705 09:43:02.596" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 09:43:02.480" endtime="20220705 09:43:02.596"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${checklist_id}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 09:43:02.596" endtime="20220705 09:43:02.596"/>
</return>
<msg timestamp="20220705 09:43:02.597" level="INFO">${checklist_id} = 62c407a636ac285b1a5bd8a9</msg>
<status status="PASS" starttime="20220705 09:43:02.596" endtime="20220705 09:43:02.597"/>
</kw>
<kw name="Update A Checklist" library="Checklist">
<var>${response}</var>
<arg>${checklist_id}</arg>
<arg>name</arg>
<arg>TestChecklist2</arg>
<doc>Updates the checklist with the given ID
optional_args: name, pos
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<arg>status_code=${status_code}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 09:43:02.599" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 09:43:02.598" endtime="20220705 09:43:02.599"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 09:43:02.599" endtime="20220705 09:43:02.599"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 09:43:02.600" level="INFO">${url} = checklists/62c407a636ac285b1a5bd8a9</msg>
<status status="PASS" starttime="20220705 09:43:02.599" endtime="20220705 09:43:02.600"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 09:43:02.693" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 09:43:02.600" endtime="20220705 09:43:02.693"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 09:43:02.694" endtime="20220705 09:43:02.694"/>
</return>
<msg timestamp="20220705 09:43:02.694" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 09:43:02.598" endtime="20220705 09:43:02.694"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 09:43:02.694" endtime="20220705 09:43:02.694"/>
</return>
<msg timestamp="20220705 09:43:02.694" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 09:43:02.597" endtime="20220705 09:43:02.694"/>
</kw>
<kw name="Get A Checklist" library="Checklist">
<var>${response}</var>
<arg>${checklist_id}</arg>
<doc>Gets the checklist with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 09:43:02.696" level="INFO">${url} = checklists/62c407a636ac285b1a5bd8a9</msg>
<status status="PASS" starttime="20220705 09:43:02.695" endtime="20220705 09:43:02.696"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 09:43:02.755" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 09:43:02.696" endtime="20220705 09:43:02.755"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 09:43:02.755" endtime="20220705 09:43:02.755"/>
</return>
<msg timestamp="20220705 09:43:02.755" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 09:43:02.695" endtime="20220705 09:43:02.755"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 09:43:02.755" endtime="20220705 09:43:02.755"/>
</return>
<msg timestamp="20220705 09:43:02.756" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 09:43:02.694" endtime="20220705 09:43:02.756"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${checklist_name}</var>
<arg>${response}</arg>
<arg>name</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 09:43:02.756" endtime="20220705 09:43:02.756"/>
</return>
<msg timestamp="20220705 09:43:02.757" level="INFO">${checklist_name} = TestChecklist2</msg>
<status status="PASS" starttime="20220705 09:43:02.756" endtime="20220705 09:43:02.757"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${checklist_name}</arg>
<arg>TestChecklist2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220705 09:43:02.757" endtime="20220705 09:43:02.758"/>
</kw>
<kw name="Delete A Checklist" library="Checklist" type="TEARDOWN">
<arg>${checklist_id}</arg>
<doc>Deletes the checklist with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 09:43:02.772" level="INFO">${url} = checklists/62c407a636ac285b1a5bd8a9</msg>
<status status="PASS" starttime="20220705 09:43:02.771" endtime="20220705 09:43:02.772"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 09:43:02.896" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 09:43:02.772" endtime="20220705 09:43:02.896"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 09:43:02.896" endtime="20220705 09:43:02.896"/>
</return>
<msg timestamp="20220705 09:43:02.897" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 09:43:02.771" endtime="20220705 09:43:02.897"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 09:43:02.897" endtime="20220705 09:43:02.897"/>
</return>
<status status="PASS" starttime="20220705 09:43:02.758" endtime="20220705 09:43:02.897"/>
</kw>
<doc>Verify that a checklist's name can be updated through API</doc>
<tag>api</tag>
<tag>checklist.update</tag>
<tag>regression</tag>
<status status="PASS" starttime="20220705 09:43:02.479" endtime="20220705 09:43:02.897"/>
</test>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Teardown Board</arg>
<arg>Delete All Sessions</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Teardown Board">
<doc>Delete the board created for this suite</doc>
<kw name="Delete A Board" library="Board">
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 09:43:02.900" level="INFO">${url} = boards/62c407a55759e545381274ce</msg>
<status status="PASS" starttime="20220705 09:43:02.899" endtime="20220705 09:43:02.900"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 09:43:03.217" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 09:43:02.900" endtime="20220705 09:43:03.217"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 09:43:03.217" endtime="20220705 09:43:03.217"/>
</return>
<msg timestamp="20220705 09:43:03.218" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 09:43:02.899" endtime="20220705 09:43:03.218"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 09:43:03.218" endtime="20220705 09:43:03.218"/>
</return>
<status status="PASS" starttime="20220705 09:43:02.899" endtime="20220705 09:43:03.218"/>
</kw>
<status status="PASS" starttime="20220705 09:43:02.898" endtime="20220705 09:43:03.218"/>
</kw>
<kw name="Delete All Sessions" library="request_own_library">
<status status="PASS" starttime="20220705 09:43:03.218" endtime="20220705 09:43:03.219"/>
</kw>
<status status="PASS" starttime="20220705 09:43:02.898" endtime="20220705 09:43:03.220"/>
</kw>
<doc>Example Test with Trello API Checklists</doc>
<status status="PASS" starttime="20220705 09:43:01.261" endtime="20220705 09:43:03.220"/>
</suite>
<suite id="s1-s1-s4" name="Trello Api Labels Tests" source="/trello/api/trello_api_labels_tests.robot">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Create Trello Session</arg>
<arg>Setup Board And List</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Create Trello Session" library="TrelloAPI">
<doc>Creates a Trello Session</doc>
<kw name="Create Session" library="request_own_library">
<arg>${API_BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<status status="PASS" starttime="20220705 09:43:03.231" endtime="20220705 09:43:03.231"/>
</kw>
<status status="PASS" starttime="20220705 09:43:03.231" endtime="20220705 09:43:03.231"/>
</kw>
<kw name="Setup Board And List">
<doc>Create a board and save its ID and its first list's ID</doc>
<kw name="Create A Board" library="Board">
<var>${BOARD}</var>
<arg>TestBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 09:43:03.232" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 09:43:03.232" endtime="20220705 09:43:03.232"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 09:43:03.232" endtime="20220705 09:43:03.233"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 09:43:03.233" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220705 09:43:03.233" endtime="20220705 09:43:03.233"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 09:43:03.557" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 09:43:03.233" endtime="20220705 09:43:03.557"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 09:43:03.557" endtime="20220705 09:43:03.557"/>
</return>
<msg timestamp="20220705 09:43:03.558" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 09:43:03.232" endtime="20220705 09:43:03.558"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 09:43:03.558" endtime="20220705 09:43:03.558"/>
</return>
<msg timestamp="20220705 09:43:03.558" level="INFO">${BOARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 09:43:03.231" endtime="20220705 09:43:03.558"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_BOARD_ID}</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220705 09:43:03.559" level="INFO">${TEST_SUITE_BOARD_ID} = 62c407a71cec925ddafb9340</msg>
<status status="PASS" starttime="20220705 09:43:03.558" endtime="20220705 09:43:03.559"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${LISTS}</var>
<arg>boards/${TEST_SUITE_BOARD_ID}/lists</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 09:43:03.615" level="INFO">${LISTS} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 09:43:03.559" endtime="20220705 09:43:03.615"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_LIST_ID}</arg>
<arg>${LISTS.json()}[0][id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220705 09:43:03.616" level="INFO">${TEST_SUITE_LIST_ID} = 62c407a71cec925ddafb9347</msg>
<status status="PASS" starttime="20220705 09:43:03.615" endtime="20220705 09:43:03.616"/>
</kw>
<status status="PASS" starttime="20220705 09:43:03.231" endtime="20220705 09:43:03.616"/>
</kw>
<status status="PASS" starttime="20220705 09:43:03.230" endtime="20220705 09:43:03.616"/>
</kw>
<test id="s1-s1-s4-t1" name="Create and get label on board" line="14">
<kw name="Create A Label" library="Label">
<var>${response}</var>
<arg>name</arg>
<arg>label2</arg>
<arg>color</arg>
<arg>yellow</arg>
<doc>Creates a new label in the given board.
required_args: idBoard
optional_args: name, color
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>idBoard</arg>
<arg>${idBoard}</arg>
<arg>@{optional_args}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 09:43:03.618" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 09:43:03.618" endtime="20220705 09:43:03.618"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 09:43:03.618" endtime="20220705 09:43:03.619"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 09:43:03.619" level="INFO">${url} = labels/</msg>
<status status="PASS" starttime="20220705 09:43:03.619" endtime="20220705 09:43:03.620"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 09:43:03.720" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 09:43:03.620" endtime="20220705 09:43:03.720"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 09:43:03.720" endtime="20220705 09:43:03.720"/>
</return>
<msg timestamp="20220705 09:43:03.720" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 09:43:03.618" endtime="20220705 09:43:03.720"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 09:43:03.720" endtime="20220705 09:43:03.720"/>
</return>
<msg timestamp="20220705 09:43:03.720" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 09:43:03.617" endtime="20220705 09:43:03.720"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>label</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 09:43:03.721" endtime="20220705 09:43:03.723"/>
</kw>
<status status="PASS" starttime="20220705 09:43:03.721" endtime="20220705 09:43:03.723"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${LABEL_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 09:43:03.723" endtime="20220705 09:43:03.724"/>
</return>
<msg timestamp="20220705 09:43:03.724" level="INFO">${LABEL_ID} = 62c407a730bd47580cc7f147</msg>
<status status="PASS" starttime="20220705 09:43:03.723" endtime="20220705 09:43:03.724"/>
</kw>
<kw name="Get A Label" library="Label">
<var>${response}</var>
<arg>${LABEL_ID}</arg>
<doc>Gets the label with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 09:43:03.726" level="INFO">${url} = labels/62c407a730bd47580cc7f147</msg>
<status status="PASS" starttime="20220705 09:43:03.725" endtime="20220705 09:43:03.726"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 09:43:03.773" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 09:43:03.726" endtime="20220705 09:43:03.773"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 09:43:03.773" endtime="20220705 09:43:03.773"/>
</return>
<msg timestamp="20220705 09:43:03.773" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 09:43:03.725" endtime="20220705 09:43:03.773"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 09:43:03.773" endtime="20220705 09:43:03.773"/>
</return>
<msg timestamp="20220705 09:43:03.773" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 09:43:03.724" endtime="20220705 09:43:03.774"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${LABEL_COLOR}</var>
<arg>${response}</arg>
<arg>color</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 09:43:03.774" endtime="20220705 09:43:03.774"/>
</return>
<msg timestamp="20220705 09:43:03.775" level="INFO">${LABEL_COLOR} = yellow</msg>
<status status="PASS" starttime="20220705 09:43:03.774" endtime="20220705 09:43:03.775"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${LABEL_NAME}</var>
<arg>${response}</arg>
<arg>name</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 09:43:03.775" endtime="20220705 09:43:03.775"/>
</return>
<msg timestamp="20220705 09:43:03.776" level="INFO">${LABEL_NAME} = label2</msg>
<status status="PASS" starttime="20220705 09:43:03.775" endtime="20220705 09:43:03.776"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${LABEL_COLOR}</arg>
<arg>yellow</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220705 09:43:03.776" endtime="20220705 09:43:03.777"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${LABEL_NAME}</arg>
<arg>label2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220705 09:43:03.777" endtime="20220705 09:43:03.777"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Label</arg>
<arg>${LABEL_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Label" library="Label">
<arg>${LABEL_ID}</arg>
<doc>Deletes the label with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 09:43:03.778" level="INFO">${url} = labels/62c407a730bd47580cc7f147</msg>
<status status="PASS" starttime="20220705 09:43:03.778" endtime="20220705 09:43:03.778"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 09:43:03.882" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 09:43:03.778" endtime="20220705 09:43:03.882"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 09:43:03.882" endtime="20220705 09:43:03.882"/>
</return>
<msg timestamp="20220705 09:43:03.883" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 09:43:03.778" endtime="20220705 09:43:03.883"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 09:43:03.883" endtime="20220705 09:43:03.883"/>
</return>
<status status="PASS" starttime="20220705 09:43:03.777" endtime="20220705 09:43:03.883"/>
</kw>
<status status="PASS" starttime="20220705 09:43:03.777" endtime="20220705 09:43:03.883"/>
</kw>
<doc>Verify that a label can be created through API</doc>
<tag>api</tag>
<tag>label.create</tag>
<tag>label.get</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220705 09:43:03.617" endtime="20220705 09:43:03.883"/>
</test>
<test id="s1-s1-s4-t2" name="Update label on board" line="28">
<kw name="Create A Label" library="Label">
<var>${response}</var>
<arg>name</arg>
<arg>label2</arg>
<arg>color</arg>
<arg>yellow</arg>
<doc>Creates a new label in the given board.
required_args: idBoard
optional_args: name, color
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>idBoard</arg>
<arg>${idBoard}</arg>
<arg>@{optional_args}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 09:43:03.886" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 09:43:03.886" endtime="20220705 09:43:03.886"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 09:43:03.886" endtime="20220705 09:43:03.886"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 09:43:03.887" level="INFO">${url} = labels/</msg>
<status status="PASS" starttime="20220705 09:43:03.886" endtime="20220705 09:43:03.887"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 09:43:03.972" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 09:43:03.887" endtime="20220705 09:43:03.972"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 09:43:03.972" endtime="20220705 09:43:03.972"/>
</return>
<msg timestamp="20220705 09:43:03.972" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 09:43:03.885" endtime="20220705 09:43:03.972"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 09:43:03.972" endtime="20220705 09:43:03.972"/>
</return>
<msg timestamp="20220705 09:43:03.972" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 09:43:03.885" endtime="20220705 09:43:03.972"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>label</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 09:43:03.973" endtime="20220705 09:43:03.975"/>
</kw>
<status status="PASS" starttime="20220705 09:43:03.973" endtime="20220705 09:43:03.975"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${LABEL_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 09:43:03.975" endtime="20220705 09:43:03.976"/>
</return>
<msg timestamp="20220705 09:43:03.976" level="INFO">${LABEL_ID} = 62c407a76c8a021dea3f2838</msg>
<status status="PASS" starttime="20220705 09:43:03.975" endtime="20220705 09:43:03.976"/>
</kw>
<kw name="Update A Label" library="Label">
<var>${new_response}</var>
<arg>${LABEL_ID}</arg>
<arg>name</arg>
<arg>label3</arg>
<arg>color</arg>
<arg>orange</arg>
<doc>Updates the label with the given ID
optional_args: name, color
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 09:43:03.978" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 09:43:03.977" endtime="20220705 09:43:03.978"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 09:43:03.978" endtime="20220705 09:43:03.978"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 09:43:03.978" level="INFO">${url} = labels/62c407a76c8a021dea3f2838</msg>
<status status="PASS" starttime="20220705 09:43:03.978" endtime="20220705 09:43:03.978"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 09:43:04.074" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 09:43:03.978" endtime="20220705 09:43:04.074"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 09:43:04.074" endtime="20220705 09:43:04.075"/>
</return>
<msg timestamp="20220705 09:43:04.075" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 09:43:03.977" endtime="20220705 09:43:04.075"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 09:43:04.075" endtime="20220705 09:43:04.075"/>
</return>
<msg timestamp="20220705 09:43:04.075" level="INFO">${new_response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 09:43:03.976" endtime="20220705 09:43:04.075"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${NEW_LABEL_COLOR}</var>
<arg>${new_response}</arg>
<arg>color</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 09:43:04.076" endtime="20220705 09:43:04.076"/>
</return>
<msg timestamp="20220705 09:43:04.077" level="INFO">${NEW_LABEL_COLOR} = orange</msg>
<status status="PASS" starttime="20220705 09:43:04.075" endtime="20220705 09:43:04.077"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${NEW_LABEL_NAME}</var>
<arg>${new_response}</arg>
<arg>name</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 09:43:04.077" endtime="20220705 09:43:04.077"/>
</return>
<msg timestamp="20220705 09:43:04.078" level="INFO">${NEW_LABEL_NAME} = label3</msg>
<status status="PASS" starttime="20220705 09:43:04.077" endtime="20220705 09:43:04.078"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${NEW_LABEL_COLOR}</arg>
<arg>orange</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220705 09:43:04.078" endtime="20220705 09:43:04.078"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${NEW_LABEL_NAME}</arg>
<arg>label3</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220705 09:43:04.078" endtime="20220705 09:43:04.079"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Label</arg>
<arg>${LABEL_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Label" library="Label">
<arg>${LABEL_ID}</arg>
<doc>Deletes the label with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 09:43:04.081" level="INFO">${url} = labels/62c407a76c8a021dea3f2838</msg>
<status status="PASS" starttime="20220705 09:43:04.081" endtime="20220705 09:43:04.081"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 09:43:04.305" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 09:43:04.081" endtime="20220705 09:43:04.305"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 09:43:04.305" endtime="20220705 09:43:04.306"/>
</return>
<msg timestamp="20220705 09:43:04.306" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 09:43:04.080" endtime="20220705 09:43:04.306"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 09:43:04.306" endtime="20220705 09:43:04.306"/>
</return>
<status status="PASS" starttime="20220705 09:43:04.079" endtime="20220705 09:43:04.306"/>
</kw>
<status status="PASS" starttime="20220705 09:43:04.079" endtime="20220705 09:43:04.306"/>
</kw>
<doc>Verify that a label's name and color can be updated through API</doc>
<tag>api</tag>
<tag>label.update</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220705 09:43:03.883" endtime="20220705 09:43:04.306"/>
</test>
<test id="s1-s1-s4-t3" name="Delete label on board" line="41">
<kw name="Create A Label" library="Label">
<var>${response}</var>
<arg>name</arg>
<arg>label2</arg>
<arg>color</arg>
<arg>yellow</arg>
<doc>Creates a new label in the given board.
required_args: idBoard
optional_args: name, color
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>idBoard</arg>
<arg>${idBoard}</arg>
<arg>@{optional_args}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 09:43:04.309" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 09:43:04.309" endtime="20220705 09:43:04.309"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 09:43:04.309" endtime="20220705 09:43:04.309"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 09:43:04.310" level="INFO">${url} = labels/</msg>
<status status="PASS" starttime="20220705 09:43:04.309" endtime="20220705 09:43:04.310"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 09:43:04.395" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 09:43:04.310" endtime="20220705 09:43:04.395"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 09:43:04.396" endtime="20220705 09:43:04.396"/>
</return>
<msg timestamp="20220705 09:43:04.396" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 09:43:04.308" endtime="20220705 09:43:04.396"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 09:43:04.396" endtime="20220705 09:43:04.396"/>
</return>
<msg timestamp="20220705 09:43:04.396" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 09:43:04.308" endtime="20220705 09:43:04.396"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${LABEL_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 09:43:04.397" endtime="20220705 09:43:04.397"/>
</return>
<msg timestamp="20220705 09:43:04.398" level="INFO">${LABEL_ID} = 62c407a861397c33afe9ebfe</msg>
<status status="PASS" starttime="20220705 09:43:04.396" endtime="20220705 09:43:04.398"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Label</arg>
<arg>${LABEL_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Label" library="Label">
<arg>${LABEL_ID}</arg>
<doc>Deletes the label with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 09:43:04.400" level="INFO">${url} = labels/62c407a861397c33afe9ebfe</msg>
<status status="PASS" starttime="20220705 09:43:04.399" endtime="20220705 09:43:04.400"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 09:43:04.504" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 09:43:04.400" endtime="20220705 09:43:04.504"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 09:43:04.504" endtime="20220705 09:43:04.504"/>
</return>
<msg timestamp="20220705 09:43:04.504" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 09:43:04.399" endtime="20220705 09:43:04.504"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 09:43:04.504" endtime="20220705 09:43:04.504"/>
</return>
<status status="PASS" starttime="20220705 09:43:04.398" endtime="20220705 09:43:04.505"/>
</kw>
<status status="PASS" starttime="20220705 09:43:04.398" endtime="20220705 09:43:04.505"/>
</kw>
<kw name="Get A Label" library="Label">
<arg>${LABEL_ID}</arg>
<arg>status_code=404</arg>
<doc>Gets the label with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 09:43:04.506" level="INFO">${url} = labels/62c407a861397c33afe9ebfe</msg>
<status status="PASS" starttime="20220705 09:43:04.506" endtime="20220705 09:43:04.506"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 09:43:04.548" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220705 09:43:04.506" endtime="20220705 09:43:04.548"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 09:43:04.548" endtime="20220705 09:43:04.548"/>
</return>
<msg timestamp="20220705 09:43:04.548" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220705 09:43:04.505" endtime="20220705 09:43:04.548"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 09:43:04.548" endtime="20220705 09:43:04.549"/>
</return>
<status status="PASS" starttime="20220705 09:43:04.505" endtime="20220705 09:43:04.549"/>
</kw>
<doc>Verify that a label can be deleted through API</doc>
<tag>api</tag>
<tag>label.delete</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220705 09:43:04.307" endtime="20220705 09:43:04.549"/>
</test>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Teardown Board</arg>
<arg>Delete All Sessions</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Teardown Board">
<doc>Delete the board created for this session.</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 09:43:04.552" level="INFO">${url} = boards/62c407a71cec925ddafb9340</msg>
<status status="PASS" starttime="20220705 09:43:04.551" endtime="20220705 09:43:04.552"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 09:43:04.883" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 09:43:04.552" endtime="20220705 09:43:04.883"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 09:43:04.883" endtime="20220705 09:43:04.883"/>
</return>
<msg timestamp="20220705 09:43:04.883" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 09:43:04.551" endtime="20220705 09:43:04.883"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 09:43:04.883" endtime="20220705 09:43:04.883"/>
</return>
<status status="PASS" starttime="20220705 09:43:04.550" endtime="20220705 09:43:04.883"/>
</kw>
<status status="PASS" starttime="20220705 09:43:04.550" endtime="20220705 09:43:04.883"/>
</kw>
<status status="PASS" starttime="20220705 09:43:04.550" endtime="20220705 09:43:04.884"/>
</kw>
<kw name="Delete All Sessions" library="request_own_library">
<status status="PASS" starttime="20220705 09:43:04.884" endtime="20220705 09:43:04.885"/>
</kw>
<status status="PASS" starttime="20220705 09:43:04.550" endtime="20220705 09:43:04.885"/>
</kw>
<doc>Example Test with Trello API Cards</doc>
<status status="PASS" starttime="20220705 09:43:03.221" endtime="20220705 09:43:04.885"/>
</suite>
<suite id="s1-s1-s5" name="Trello Api Lists Tests" source="/trello/api/trello_api_lists_tests.robot">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Create Trello Session</arg>
<arg>Setup Board</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Create Trello Session" library="TrelloAPI">
<doc>Creates a Trello Session</doc>
<kw name="Create Session" library="request_own_library">
<arg>${API_BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<status status="PASS" starttime="20220705 09:43:04.896" endtime="20220705 09:43:04.896"/>
</kw>
<status status="PASS" starttime="20220705 09:43:04.896" endtime="20220705 09:43:04.896"/>
</kw>
<kw name="Setup Board">
<doc>Create a board and save it's id for the suite</doc>
<kw name="Create A Board" library="Board">
<var>${BOARD}</var>
<arg>TestBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 09:43:04.897" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 09:43:04.897" endtime="20220705 09:43:04.897"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 09:43:04.897" endtime="20220705 09:43:04.898"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 09:43:04.898" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220705 09:43:04.898" endtime="20220705 09:43:04.898"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 09:43:05.084" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 09:43:04.898" endtime="20220705 09:43:05.084"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 09:43:05.084" endtime="20220705 09:43:05.084"/>
</return>
<msg timestamp="20220705 09:43:05.085" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 09:43:04.897" endtime="20220705 09:43:05.085"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 09:43:05.085" endtime="20220705 09:43:05.085"/>
</return>
<msg timestamp="20220705 09:43:05.085" level="INFO">${BOARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 09:43:04.897" endtime="20220705 09:43:05.085"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Set Suite Variable</arg>
<arg>\${TEST_SUITE_BOARD_ID}</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_BOARD_ID}</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220705 09:43:05.086" level="INFO">${TEST_SUITE_BOARD_ID} = 62c407a850b3484f94985f1c</msg>
<status status="PASS" starttime="20220705 09:43:05.085" endtime="20220705 09:43:05.086"/>
</kw>
<status status="PASS" starttime="20220705 09:43:05.085" endtime="20220705 09:43:05.086"/>
</kw>
<status status="PASS" starttime="20220705 09:43:04.896" endtime="20220705 09:43:05.087"/>
</kw>
<status status="PASS" starttime="20220705 09:43:04.895" endtime="20220705 09:43:05.087"/>
</kw>
<test id="s1-s1-s5-t1" name="CREATE a list" line="13">
<kw name="Create A List" library="List">
<var>${response}</var>
<arg>NewList</arg>
<doc>Creates a new List
board id
name the list will have
optional_args: idListSource, pos, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>list</arg>
<arg>name</arg>
<arg>${name}</arg>
<arg>idBoard</arg>
<arg>${idBoard}</arg>
<arg>@{optional_args}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 09:43:05.089" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 09:43:05.088" endtime="20220705 09:43:05.089"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 09:43:05.089" endtime="20220705 09:43:05.089"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 09:43:05.090" level="INFO">${url} = lists/</msg>
<status status="PASS" starttime="20220705 09:43:05.089" endtime="20220705 09:43:05.090"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 09:43:05.196" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 09:43:05.090" endtime="20220705 09:43:05.196"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 09:43:05.196" endtime="20220705 09:43:05.196"/>
</return>
<msg timestamp="20220705 09:43:05.197" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 09:43:05.088" endtime="20220705 09:43:05.197"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 09:43:05.197" endtime="20220705 09:43:05.197"/>
</return>
<msg timestamp="20220705 09:43:05.197" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 09:43:05.087" endtime="20220705 09:43:05.197"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>list</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 09:43:05.198" endtime="20220705 09:43:05.200"/>
</kw>
<status status="PASS" starttime="20220705 09:43:05.197" endtime="20220705 09:43:05.200"/>
</kw>
<doc>Verify that a list can be created through API</doc>
<tag>api</tag>
<tag>list.create</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220705 09:43:05.087" endtime="20220705 09:43:05.200"/>
</test>
<test id="s1-s1-s5-t2" name="UPDATE a list" line="19">
<kw name="Create A List" library="List">
<var>${response}</var>
<arg>NewList</arg>
<doc>Creates a new List
board id
name the list will have
optional_args: idListSource, pos, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>list</arg>
<arg>name</arg>
<arg>${name}</arg>
<arg>idBoard</arg>
<arg>${idBoard}</arg>
<arg>@{optional_args}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 09:43:05.203" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 09:43:05.202" endtime="20220705 09:43:05.203"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 09:43:05.203" endtime="20220705 09:43:05.203"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 09:43:05.204" level="INFO">${url} = lists/</msg>
<status status="PASS" starttime="20220705 09:43:05.203" endtime="20220705 09:43:05.204"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 09:43:05.287" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 09:43:05.204" endtime="20220705 09:43:05.287"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 09:43:05.287" endtime="20220705 09:43:05.287"/>
</return>
<msg timestamp="20220705 09:43:05.287" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 09:43:05.202" endtime="20220705 09:43:05.287"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 09:43:05.287" endtime="20220705 09:43:05.287"/>
</return>
<msg timestamp="20220705 09:43:05.287" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 09:43:05.201" endtime="20220705 09:43:05.287"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>list</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 09:43:05.288" endtime="20220705 09:43:05.290"/>
</kw>
<status status="PASS" starttime="20220705 09:43:05.288" endtime="20220705 09:43:05.290"/>
</kw>
<kw name="Update A List" library="List">
<arg>${response.json()}[id]</arg>
<arg>name</arg>
<arg>NewName</arg>
<doc>Updates the board with the given ID
optional_args: name, idListSource, pos, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>list</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 09:43:05.292" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 09:43:05.292" endtime="20220705 09:43:05.292"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 09:43:05.292" endtime="20220705 09:43:05.292"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 09:43:05.293" level="INFO">${url} = lists/62c407a9b491a745d92a4f2a</msg>
<status status="PASS" starttime="20220705 09:43:05.292" endtime="20220705 09:43:05.293"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 09:43:05.371" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 09:43:05.293" endtime="20220705 09:43:05.371"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 09:43:05.371" endtime="20220705 09:43:05.371"/>
</return>
<msg timestamp="20220705 09:43:05.372" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 09:43:05.291" endtime="20220705 09:43:05.372"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 09:43:05.372" endtime="20220705 09:43:05.372"/>
</return>
<status status="PASS" starttime="20220705 09:43:05.290" endtime="20220705 09:43:05.372"/>
</kw>
<kw name="Get A List" library="List">
<var>${new_response}</var>
<arg>${response.json()}[id]</arg>
<doc>Gets the List with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>list</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 09:43:05.375" level="INFO">${url} = lists/62c407a9b491a745d92a4f2a</msg>
<status status="PASS" starttime="20220705 09:43:05.374" endtime="20220705 09:43:05.375"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 09:43:05.423" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 09:43:05.375" endtime="20220705 09:43:05.423"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 09:43:05.423" endtime="20220705 09:43:05.423"/>
</return>
<msg timestamp="20220705 09:43:05.423" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 09:43:05.373" endtime="20220705 09:43:05.423"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 09:43:05.423" endtime="20220705 09:43:05.423"/>
</return>
<msg timestamp="20220705 09:43:05.424" level="INFO">${new_response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 09:43:05.372" endtime="20220705 09:43:05.424"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${new_response}</arg>
<arg>list</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 09:43:05.424" endtime="20220705 09:43:05.426"/>
</kw>
<status status="PASS" starttime="20220705 09:43:05.424" endtime="20220705 09:43:05.426"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${new_response.json()}[name]</arg>
<arg>NewName</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220705 09:43:05.426" endtime="20220705 09:43:05.427"/>
</kw>
<doc>Verify that a lists name can be updated through API</doc>
<tag>api</tag>
<tag>list.update</tag>
<tag>regression</tag>
<status status="PASS" starttime="20220705 09:43:05.200" endtime="20220705 09:43:05.427"/>
</test>
<test id="s1-s1-s5-t3" name="ARCHIVE A list" line="29">
<kw name="Create A List" library="List">
<var>${response}</var>
<arg>NewList</arg>
<doc>Creates a new List
board id
name the list will have
optional_args: idListSource, pos, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>list</arg>
<arg>name</arg>
<arg>${name}</arg>
<arg>idBoard</arg>
<arg>${idBoard}</arg>
<arg>@{optional_args}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 09:43:05.432" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 09:43:05.432" endtime="20220705 09:43:05.432"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 09:43:05.432" endtime="20220705 09:43:05.432"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 09:43:05.433" level="INFO">${url} = lists/</msg>
<status status="PASS" starttime="20220705 09:43:05.432" endtime="20220705 09:43:05.433"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 09:43:05.537" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 09:43:05.433" endtime="20220705 09:43:05.537"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 09:43:05.537" endtime="20220705 09:43:05.537"/>
</return>
<msg timestamp="20220705 09:43:05.537" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 09:43:05.431" endtime="20220705 09:43:05.537"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 09:43:05.537" endtime="20220705 09:43:05.537"/>
</return>
<msg timestamp="20220705 09:43:05.538" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 09:43:05.429" endtime="20220705 09:43:05.538"/>
</kw>
<kw name="Archive A List" library="List">
<arg>${response.json()}[id]</arg>
<doc>Deletes the list with the given ID</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>archive_list</arg>
<arg>${id}</arg>
<arg>value</arg>
<arg>true</arg>
<arg>status_code=${status_code}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 09:43:05.540" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 09:43:05.539" endtime="20220705 09:43:05.540"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 09:43:05.540" endtime="20220705 09:43:05.540"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 09:43:05.541" level="INFO">${url} = lists/62c407a9e08e1434b4388c79/closed</msg>
<status status="PASS" starttime="20220705 09:43:05.540" endtime="20220705 09:43:05.541"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 09:43:05.627" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 09:43:05.541" endtime="20220705 09:43:05.627"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 09:43:05.627" endtime="20220705 09:43:05.627"/>
</return>
<msg timestamp="20220705 09:43:05.628" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 09:43:05.539" endtime="20220705 09:43:05.628"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 09:43:05.628" endtime="20220705 09:43:05.628"/>
</return>
<status status="PASS" starttime="20220705 09:43:05.538" endtime="20220705 09:43:05.628"/>
</kw>
<kw name="Get A List" library="List">
<var>${new_response}</var>
<arg>${response.json()}[id]</arg>
<doc>Gets the List with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>list</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 09:43:05.630" level="INFO">${url} = lists/62c407a9e08e1434b4388c79</msg>
<status status="PASS" starttime="20220705 09:43:05.630" endtime="20220705 09:43:05.630"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 09:43:05.682" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 09:43:05.630" endtime="20220705 09:43:05.682"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 09:43:05.682" endtime="20220705 09:43:05.682"/>
</return>
<msg timestamp="20220705 09:43:05.682" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 09:43:05.629" endtime="20220705 09:43:05.682"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 09:43:05.682" endtime="20220705 09:43:05.682"/>
</return>
<msg timestamp="20220705 09:43:05.682" level="INFO">${new_response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 09:43:05.628" endtime="20220705 09:43:05.682"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${new_response.json()}[closed]</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220705 09:43:05.682" endtime="20220705 09:43:05.683"/>
</kw>
<doc>Verify that a list can be archived through API</doc>
<tag>api</tag>
<tag>list.archive</tag>
<tag>regression</tag>
<status status="PASS" starttime="20220705 09:43:05.428" endtime="20220705 09:43:05.683"/>
</test>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Teardown Board</arg>
<arg>Delete All Sessions</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Teardown Board">
<doc>Delete the board created for this suite.</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 09:43:05.687" level="INFO">${url} = boards/62c407a850b3484f94985f1c</msg>
<status status="PASS" starttime="20220705 09:43:05.686" endtime="20220705 09:43:05.687"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 09:43:06.031" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 09:43:05.687" endtime="20220705 09:43:06.031"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 09:43:06.031" endtime="20220705 09:43:06.031"/>
</return>
<msg timestamp="20220705 09:43:06.031" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 09:43:05.686" endtime="20220705 09:43:06.031"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 09:43:06.031" endtime="20220705 09:43:06.031"/>
</return>
<status status="PASS" starttime="20220705 09:43:05.686" endtime="20220705 09:43:06.032"/>
</kw>
<status status="PASS" starttime="20220705 09:43:05.685" endtime="20220705 09:43:06.032"/>
</kw>
<status status="PASS" starttime="20220705 09:43:05.684" endtime="20220705 09:43:06.032"/>
</kw>
<kw name="Delete All Sessions" library="request_own_library">
<status status="PASS" starttime="20220705 09:43:06.032" endtime="20220705 09:43:06.033"/>
</kw>
<status status="PASS" starttime="20220705 09:43:05.684" endtime="20220705 09:43:06.033"/>
</kw>
<doc>Example Test with Trello API lists</doc>
<status status="PASS" starttime="20220705 09:43:04.887" endtime="20220705 09:43:06.033"/>
</suite>
<status status="PASS" starttime="20220705 09:42:54.586" endtime="20220705 09:43:06.036"/>
</suite>
<status status="PASS" starttime="20220705 09:42:54.569" endtime="20220705 09:43:06.038"/>
</suite>
<statistics>
<total>
<stat pass="18" fail="0" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="18" fail="0" skip="0">api</stat>
<stat pass="1" fail="0" skip="0">board.create</stat>
<stat pass="1" fail="0" skip="0">board.delete</stat>
<stat pass="1" fail="0" skip="0">board.get</stat>
<stat pass="2" fail="0" skip="0">board.update</stat>
<stat pass="1" fail="0" skip="0">card.close</stat>
<stat pass="1" fail="0" skip="0">card.create</stat>
<stat pass="1" fail="0" skip="0">card.delete</stat>
<stat pass="1" fail="0" skip="0">card.update</stat>
<stat pass="1" fail="0" skip="0">checklist.create</stat>
<stat pass="1" fail="0" skip="0">checklist.delete</stat>
<stat pass="1" fail="0" skip="0">checklist.update</stat>
<stat pass="1" fail="0" skip="0">label.create</stat>
<stat pass="1" fail="0" skip="0">label.delete</stat>
<stat pass="1" fail="0" skip="0">label.get</stat>
<stat pass="1" fail="0" skip="0">label.update</stat>
<stat pass="1" fail="0" skip="0">list.archive</stat>
<stat pass="1" fail="0" skip="0">list.create</stat>
<stat pass="1" fail="0" skip="0">list.update</stat>
<stat pass="5" fail="0" skip="0">regression</stat>
<stat pass="13" fail="0" skip="0">smoke</stat>
</tag>
<suite>
<stat pass="18" fail="0" skip="0" id="s1" name="Trello">Trello</stat>
<stat pass="18" fail="0" skip="0" id="s1-s1" name="Api">Trello.Api</stat>
<stat pass="5" fail="0" skip="0" id="s1-s1-s1" name="Trello Api Boards Tests">Trello.Api.Trello Api Boards Tests</stat>
<stat pass="4" fail="0" skip="0" id="s1-s1-s2" name="Trello Api Cards Tests">Trello.Api.Trello Api Cards Tests</stat>
<stat pass="3" fail="0" skip="0" id="s1-s1-s3" name="Trello Api Checklists Tests">Trello.Api.Trello Api Checklists Tests</stat>
<stat pass="3" fail="0" skip="0" id="s1-s1-s4" name="Trello Api Labels Tests">Trello.Api.Trello Api Labels Tests</stat>
<stat pass="3" fail="0" skip="0" id="s1-s1-s5" name="Trello Api Lists Tests">Trello.Api.Trello Api Lists Tests</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
