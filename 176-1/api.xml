<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 5.0.1 (Python 3.10.5 on linux)" generated="20220708 06:13:06.625" rpa="false" schemaversion="3">
<suite id="s1" name="Trello" source="/trello">
<suite id="s1-s1" name="Api" source="/trello/api">
<suite id="s1-s1-s1" name="Trello Api Boards Tests" source="/trello/api/trello_api_boards_tests.robot">
<kw name="Create Trello Session" library="TrelloAPI" type="SETUP">
<doc>Creates a Trello Session</doc>
<kw name="Create Session" library="request_own_library">
<arg>${API_BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<status status="PASS" starttime="20220708 06:13:06.769" endtime="20220708 06:13:06.770"/>
</kw>
<status status="PASS" starttime="20220708 06:13:06.768" endtime="20220708 06:13:06.770"/>
</kw>
<test id="s1-s1-s1-t1" name="CREATE a board" line="9">
<kw name="Create A Board" library="Board">
<var>${response}</var>
<arg>NewBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220708 06:13:06.772" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220708 06:13:06.772" endtime="20220708 06:13:06.772"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220708 06:13:06.772" endtime="20220708 06:13:06.773"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220708 06:13:06.773" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220708 06:13:06.773" endtime="20220708 06:13:06.774"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220708 06:13:07.135" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 06:13:06.774" endtime="20220708 06:13:07.135"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 06:13:07.135" endtime="20220708 06:13:07.135"/>
</return>
<msg timestamp="20220708 06:13:07.135" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 06:13:06.771" endtime="20220708 06:13:07.135"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 06:13:07.135" endtime="20220708 06:13:07.135"/>
</return>
<msg timestamp="20220708 06:13:07.135" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 06:13:06.771" endtime="20220708 06:13:07.135"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>board</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220708 06:13:07.136" endtime="20220708 06:13:07.142"/>
</kw>
<status status="PASS" starttime="20220708 06:13:07.136" endtime="20220708 06:13:07.142"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${response.json()}[id]</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${response.json()}[id]</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220708 06:13:07.145" level="INFO">${url} = boards/62c7caf21768b13dd9747fd9</msg>
<status status="PASS" starttime="20220708 06:13:07.145" endtime="20220708 06:13:07.146"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220708 06:13:07.503" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 06:13:07.146" endtime="20220708 06:13:07.503"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 06:13:07.503" endtime="20220708 06:13:07.503"/>
</return>
<msg timestamp="20220708 06:13:07.503" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 06:13:07.144" endtime="20220708 06:13:07.503"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 06:13:07.503" endtime="20220708 06:13:07.503"/>
</return>
<status status="PASS" starttime="20220708 06:13:07.143" endtime="20220708 06:13:07.503"/>
</kw>
<status status="PASS" starttime="20220708 06:13:07.142" endtime="20220708 06:13:07.503"/>
</kw>
<doc>Verify that a board can be create through API</doc>
<tag>api</tag>
<tag>board.create</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220708 06:13:06.770" endtime="20220708 06:13:07.503"/>
</test>
<test id="s1-s1-s1-t2" name="UPDATE a Board's name" line="16">
<kw name="Create A Board" library="Board">
<var>${response}</var>
<arg>NewBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220708 06:13:07.506" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220708 06:13:07.506" endtime="20220708 06:13:07.506"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220708 06:13:07.507" endtime="20220708 06:13:07.507"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220708 06:13:07.508" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220708 06:13:07.507" endtime="20220708 06:13:07.508"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220708 06:13:07.738" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 06:13:07.508" endtime="20220708 06:13:07.738"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 06:13:07.738" endtime="20220708 06:13:07.738"/>
</return>
<msg timestamp="20220708 06:13:07.738" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 06:13:07.506" endtime="20220708 06:13:07.738"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 06:13:07.738" endtime="20220708 06:13:07.739"/>
</return>
<msg timestamp="20220708 06:13:07.739" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 06:13:07.505" endtime="20220708 06:13:07.739"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>board</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220708 06:13:07.739" endtime="20220708 06:13:07.743"/>
</kw>
<status status="PASS" starttime="20220708 06:13:07.739" endtime="20220708 06:13:07.744"/>
</kw>
<kw name="Update A Board" library="Board">
<arg>${response.json()}[id]</arg>
<arg>name</arg>
<arg>NewName</arg>
<doc>Updates the board with the given ID
optional_args: name, desc, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220708 06:13:07.745" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220708 06:13:07.745" endtime="20220708 06:13:07.745"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220708 06:13:07.746" endtime="20220708 06:13:07.746"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220708 06:13:07.746" level="INFO">${url} = boards/62c7caf34f72cb75c02ffb4f</msg>
<status status="PASS" starttime="20220708 06:13:07.746" endtime="20220708 06:13:07.746"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220708 06:13:07.875" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 06:13:07.746" endtime="20220708 06:13:07.875"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 06:13:07.875" endtime="20220708 06:13:07.875"/>
</return>
<msg timestamp="20220708 06:13:07.875" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 06:13:07.745" endtime="20220708 06:13:07.875"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 06:13:07.875" endtime="20220708 06:13:07.875"/>
</return>
<status status="PASS" starttime="20220708 06:13:07.744" endtime="20220708 06:13:07.876"/>
</kw>
<kw name="Get A Board" library="Board">
<var>${new_response}</var>
<arg>${response.json()}[id]</arg>
<doc>Gets the Board with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220708 06:13:07.878" level="INFO">${url} = boards/62c7caf34f72cb75c02ffb4f</msg>
<status status="PASS" starttime="20220708 06:13:07.878" endtime="20220708 06:13:07.878"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220708 06:13:07.957" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 06:13:07.878" endtime="20220708 06:13:07.957"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 06:13:07.957" endtime="20220708 06:13:07.958"/>
</return>
<msg timestamp="20220708 06:13:07.958" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 06:13:07.877" endtime="20220708 06:13:07.958"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 06:13:07.958" endtime="20220708 06:13:07.958"/>
</return>
<msg timestamp="20220708 06:13:07.958" level="INFO">${new_response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 06:13:07.876" endtime="20220708 06:13:07.958"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${new_response}</arg>
<arg>board</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220708 06:13:07.959" endtime="20220708 06:13:07.963"/>
</kw>
<status status="PASS" starttime="20220708 06:13:07.958" endtime="20220708 06:13:07.964"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${new_response.json()}[name]</arg>
<arg>NewName</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220708 06:13:07.964" endtime="20220708 06:13:07.965"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${response.json()}[id]</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${response.json()}[id]</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220708 06:13:07.967" level="INFO">${url} = boards/62c7caf34f72cb75c02ffb4f</msg>
<status status="PASS" starttime="20220708 06:13:07.966" endtime="20220708 06:13:07.967"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220708 06:13:08.330" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 06:13:07.967" endtime="20220708 06:13:08.330"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 06:13:08.330" endtime="20220708 06:13:08.330"/>
</return>
<msg timestamp="20220708 06:13:08.331" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 06:13:07.966" endtime="20220708 06:13:08.331"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 06:13:08.331" endtime="20220708 06:13:08.331"/>
</return>
<status status="PASS" starttime="20220708 06:13:07.965" endtime="20220708 06:13:08.331"/>
</kw>
<status status="PASS" starttime="20220708 06:13:07.965" endtime="20220708 06:13:08.331"/>
</kw>
<doc>Verify that a board's name can be updated through API</doc>
<tag>api</tag>
<tag>board.update</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220708 06:13:07.504" endtime="20220708 06:13:08.331"/>
</test>
<test id="s1-s1-s1-t3" name="DELETE A Board" line="27">
<kw name="Create A Board" library="Board">
<var>${response}</var>
<arg>NewBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220708 06:13:08.334" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220708 06:13:08.333" endtime="20220708 06:13:08.334"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220708 06:13:08.334" endtime="20220708 06:13:08.334"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220708 06:13:08.335" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220708 06:13:08.334" endtime="20220708 06:13:08.335"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220708 06:13:08.580" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 06:13:08.335" endtime="20220708 06:13:08.580"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 06:13:08.580" endtime="20220708 06:13:08.580"/>
</return>
<msg timestamp="20220708 06:13:08.580" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 06:13:08.333" endtime="20220708 06:13:08.580"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 06:13:08.580" endtime="20220708 06:13:08.581"/>
</return>
<msg timestamp="20220708 06:13:08.581" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 06:13:08.332" endtime="20220708 06:13:08.581"/>
</kw>
<kw name="Delete A Board" library="Board">
<arg>${response.json()}[id]</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220708 06:13:08.583" level="INFO">${url} = boards/62c7caf48316bc70ecc02184</msg>
<status status="PASS" starttime="20220708 06:13:08.583" endtime="20220708 06:13:08.583"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220708 06:13:08.929" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 06:13:08.583" endtime="20220708 06:13:08.929"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 06:13:08.929" endtime="20220708 06:13:08.929"/>
</return>
<msg timestamp="20220708 06:13:08.929" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 06:13:08.582" endtime="20220708 06:13:08.929"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 06:13:08.929" endtime="20220708 06:13:08.930"/>
</return>
<status status="PASS" starttime="20220708 06:13:08.581" endtime="20220708 06:13:08.930"/>
</kw>
<kw name="Get A Board" library="Board">
<arg>${response.json()}[id]</arg>
<arg>status_code=404</arg>
<doc>Gets the Board with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220708 06:13:08.932" level="INFO">${url} = boards/62c7caf48316bc70ecc02184</msg>
<status status="PASS" starttime="20220708 06:13:08.932" endtime="20220708 06:13:08.932"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220708 06:13:09.004" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220708 06:13:08.932" endtime="20220708 06:13:09.004"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 06:13:09.004" endtime="20220708 06:13:09.004"/>
</return>
<msg timestamp="20220708 06:13:09.004" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220708 06:13:08.931" endtime="20220708 06:13:09.004"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 06:13:09.004" endtime="20220708 06:13:09.004"/>
</return>
<status status="PASS" starttime="20220708 06:13:08.930" endtime="20220708 06:13:09.004"/>
</kw>
<doc>Verify that a board can be deleted through API</doc>
<tag>api</tag>
<tag>board.delete</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220708 06:13:08.332" endtime="20220708 06:13:09.005"/>
</test>
<test id="s1-s1-s1-t4" name="GET Information of A Board" line="34">
<kw name="Create A Board" library="Board">
<var>${response}</var>
<arg>BoardTest</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220708 06:13:09.007" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220708 06:13:09.007" endtime="20220708 06:13:09.007"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220708 06:13:09.007" endtime="20220708 06:13:09.007"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220708 06:13:09.008" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220708 06:13:09.007" endtime="20220708 06:13:09.008"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220708 06:13:09.232" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 06:13:09.008" endtime="20220708 06:13:09.232"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 06:13:09.232" endtime="20220708 06:13:09.233"/>
</return>
<msg timestamp="20220708 06:13:09.233" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 06:13:09.006" endtime="20220708 06:13:09.233"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 06:13:09.233" endtime="20220708 06:13:09.233"/>
</return>
<msg timestamp="20220708 06:13:09.233" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 06:13:09.006" endtime="20220708 06:13:09.233"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>board</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220708 06:13:09.234" endtime="20220708 06:13:09.239"/>
</kw>
<status status="PASS" starttime="20220708 06:13:09.233" endtime="20220708 06:13:09.239"/>
</kw>
<kw name="Get A Board" library="Board">
<var>${response2}</var>
<arg>${response.json()}[id]</arg>
<doc>Gets the Board with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220708 06:13:09.241" level="INFO">${url} = boards/62c7caf5a53d351fd8c3f21a</msg>
<status status="PASS" starttime="20220708 06:13:09.241" endtime="20220708 06:13:09.241"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220708 06:13:09.327" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 06:13:09.241" endtime="20220708 06:13:09.327"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 06:13:09.327" endtime="20220708 06:13:09.327"/>
</return>
<msg timestamp="20220708 06:13:09.328" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 06:13:09.240" endtime="20220708 06:13:09.328"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 06:13:09.328" endtime="20220708 06:13:09.328"/>
</return>
<msg timestamp="20220708 06:13:09.328" level="INFO">${response2} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 06:13:09.239" endtime="20220708 06:13:09.328"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response2}</arg>
<arg>board</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220708 06:13:09.329" endtime="20220708 06:13:09.333"/>
</kw>
<status status="PASS" starttime="20220708 06:13:09.328" endtime="20220708 06:13:09.333"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${response2.json()}[name]</arg>
<arg>BoardTest</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220708 06:13:09.333" endtime="20220708 06:13:09.334"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${response.json()}[id]</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${response.json()}[id]</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220708 06:13:09.336" level="INFO">${url} = boards/62c7caf5a53d351fd8c3f21a</msg>
<status status="PASS" starttime="20220708 06:13:09.336" endtime="20220708 06:13:09.336"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220708 06:13:09.709" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 06:13:09.336" endtime="20220708 06:13:09.709"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 06:13:09.709" endtime="20220708 06:13:09.709"/>
</return>
<msg timestamp="20220708 06:13:09.709" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 06:13:09.335" endtime="20220708 06:13:09.709"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 06:13:09.710" endtime="20220708 06:13:09.710"/>
</return>
<status status="PASS" starttime="20220708 06:13:09.334" endtime="20220708 06:13:09.710"/>
</kw>
<status status="PASS" starttime="20220708 06:13:09.334" endtime="20220708 06:13:09.710"/>
</kw>
<doc>Verify that a board's information can be accesed through API</doc>
<tag>api</tag>
<tag>board.get</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220708 06:13:09.005" endtime="20220708 06:13:09.710"/>
</test>
<test id="s1-s1-s1-t5" name="UPDATE a Board's description" line="45">
<kw name="Create A Board" library="Board">
<var>${response}</var>
<arg>NewBoardForTest</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220708 06:13:09.713" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220708 06:13:09.713" endtime="20220708 06:13:09.713"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220708 06:13:09.713" endtime="20220708 06:13:09.714"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220708 06:13:09.714" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220708 06:13:09.714" endtime="20220708 06:13:09.715"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220708 06:13:09.935" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 06:13:09.715" endtime="20220708 06:13:09.935"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 06:13:09.935" endtime="20220708 06:13:09.935"/>
</return>
<msg timestamp="20220708 06:13:09.936" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 06:13:09.712" endtime="20220708 06:13:09.936"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 06:13:09.936" endtime="20220708 06:13:09.936"/>
</return>
<msg timestamp="20220708 06:13:09.936" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 06:13:09.712" endtime="20220708 06:13:09.936"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>board</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220708 06:13:09.937" endtime="20220708 06:13:09.941"/>
</kw>
<status status="PASS" starttime="20220708 06:13:09.936" endtime="20220708 06:13:09.941"/>
</kw>
<kw name="Update A Board" library="Board">
<arg>${response.json()}[id]</arg>
<arg>desc</arg>
<arg>sampleDescription</arg>
<doc>Updates the board with the given ID
optional_args: name, desc, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220708 06:13:09.943" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220708 06:13:09.943" endtime="20220708 06:13:09.943"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220708 06:13:09.943" endtime="20220708 06:13:09.943"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220708 06:13:09.944" level="INFO">${url} = boards/62c7caf5c8dbd81a6ebf122e</msg>
<status status="PASS" starttime="20220708 06:13:09.944" endtime="20220708 06:13:09.944"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220708 06:13:10.059" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 06:13:09.944" endtime="20220708 06:13:10.059"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 06:13:10.059" endtime="20220708 06:13:10.059"/>
</return>
<msg timestamp="20220708 06:13:10.060" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 06:13:09.942" endtime="20220708 06:13:10.060"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 06:13:10.060" endtime="20220708 06:13:10.060"/>
</return>
<status status="PASS" starttime="20220708 06:13:09.942" endtime="20220708 06:13:10.060"/>
</kw>
<kw name="Get A Board" library="Board">
<var>${new_response}</var>
<arg>${response.json()}[id]</arg>
<doc>Gets the Board with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220708 06:13:10.062" level="INFO">${url} = boards/62c7caf5c8dbd81a6ebf122e</msg>
<status status="PASS" starttime="20220708 06:13:10.062" endtime="20220708 06:13:10.062"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220708 06:13:10.149" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 06:13:10.062" endtime="20220708 06:13:10.149"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 06:13:10.149" endtime="20220708 06:13:10.149"/>
</return>
<msg timestamp="20220708 06:13:10.149" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 06:13:10.061" endtime="20220708 06:13:10.150"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 06:13:10.150" endtime="20220708 06:13:10.150"/>
</return>
<msg timestamp="20220708 06:13:10.150" level="INFO">${new_response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 06:13:10.060" endtime="20220708 06:13:10.150"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${new_response.json()}[desc]</arg>
<arg>sampleDescription</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220708 06:13:10.150" endtime="20220708 06:13:10.151"/>
</kw>
<kw name="Update A Board" library="Board">
<arg>${response.json()}[id]</arg>
<arg>desc</arg>
<arg>updatedDescription</arg>
<doc>Updates the board with the given ID
optional_args: name, desc, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220708 06:13:10.153" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220708 06:13:10.153" endtime="20220708 06:13:10.153"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220708 06:13:10.153" endtime="20220708 06:13:10.153"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220708 06:13:10.154" level="INFO">${url} = boards/62c7caf5c8dbd81a6ebf122e</msg>
<status status="PASS" starttime="20220708 06:13:10.153" endtime="20220708 06:13:10.154"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220708 06:13:10.282" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 06:13:10.154" endtime="20220708 06:13:10.282"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 06:13:10.282" endtime="20220708 06:13:10.282"/>
</return>
<msg timestamp="20220708 06:13:10.283" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 06:13:10.152" endtime="20220708 06:13:10.283"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 06:13:10.283" endtime="20220708 06:13:10.283"/>
</return>
<status status="PASS" starttime="20220708 06:13:10.151" endtime="20220708 06:13:10.283"/>
</kw>
<kw name="Get A Board" library="Board">
<var>${new_response2}</var>
<arg>${response.json()}[id]</arg>
<doc>Gets the Board with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220708 06:13:10.285" level="INFO">${url} = boards/62c7caf5c8dbd81a6ebf122e</msg>
<status status="PASS" starttime="20220708 06:13:10.285" endtime="20220708 06:13:10.285"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220708 06:13:10.378" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 06:13:10.285" endtime="20220708 06:13:10.378"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 06:13:10.378" endtime="20220708 06:13:10.378"/>
</return>
<msg timestamp="20220708 06:13:10.379" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 06:13:10.284" endtime="20220708 06:13:10.379"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 06:13:10.379" endtime="20220708 06:13:10.379"/>
</return>
<msg timestamp="20220708 06:13:10.379" level="INFO">${new_response2} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 06:13:10.283" endtime="20220708 06:13:10.379"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${new_response2.json()}[desc]</arg>
<arg>updatedDescription</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220708 06:13:10.379" endtime="20220708 06:13:10.380"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${response.json()}[id]</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${response.json()}[id]</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220708 06:13:10.383" level="INFO">${url} = boards/62c7caf5c8dbd81a6ebf122e</msg>
<status status="PASS" starttime="20220708 06:13:10.383" endtime="20220708 06:13:10.383"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220708 06:13:10.847" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 06:13:10.383" endtime="20220708 06:13:10.847"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 06:13:10.847" endtime="20220708 06:13:10.848"/>
</return>
<msg timestamp="20220708 06:13:10.848" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 06:13:10.382" endtime="20220708 06:13:10.848"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 06:13:10.848" endtime="20220708 06:13:10.848"/>
</return>
<status status="PASS" starttime="20220708 06:13:10.381" endtime="20220708 06:13:10.848"/>
</kw>
<status status="PASS" starttime="20220708 06:13:10.381" endtime="20220708 06:13:10.848"/>
</kw>
<doc>Verify that a board's description can be updated through API</doc>
<tag>api</tag>
<tag>board.update</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220708 06:13:09.710" endtime="20220708 06:13:10.848"/>
</test>
<kw name="Delete All Sessions" library="request_own_library" type="TEARDOWN">
<status status="PASS" starttime="20220708 06:13:10.850" endtime="20220708 06:13:10.851"/>
</kw>
<doc>Example Test with Trello API Boards</doc>
<status status="PASS" starttime="20220708 06:13:06.648" endtime="20220708 06:13:10.851"/>
</suite>
<suite id="s1-s1-s2" name="Trello Api Cards Tests" source="/trello/api/trello_api_cards_tests.robot">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Create Trello Session</arg>
<arg>Setup Board And List</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Create Trello Session" library="TrelloAPI">
<doc>Creates a Trello Session</doc>
<kw name="Create Session" library="request_own_library">
<arg>${API_BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<status status="PASS" starttime="20220708 06:13:10.863" endtime="20220708 06:13:10.864"/>
</kw>
<status status="PASS" starttime="20220708 06:13:10.863" endtime="20220708 06:13:10.864"/>
</kw>
<kw name="Setup Board And List">
<doc>Create a board and save its ID and its first list's ID</doc>
<kw name="Create A Board" library="Board">
<var>${BOARD}</var>
<arg>TestBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220708 06:13:10.865" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220708 06:13:10.865" endtime="20220708 06:13:10.865"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220708 06:13:10.865" endtime="20220708 06:13:10.865"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220708 06:13:10.866" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220708 06:13:10.865" endtime="20220708 06:13:10.866"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220708 06:13:11.254" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 06:13:10.866" endtime="20220708 06:13:11.254"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 06:13:11.254" endtime="20220708 06:13:11.254"/>
</return>
<msg timestamp="20220708 06:13:11.254" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 06:13:10.864" endtime="20220708 06:13:11.254"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 06:13:11.254" endtime="20220708 06:13:11.254"/>
</return>
<msg timestamp="20220708 06:13:11.255" level="INFO">${BOARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 06:13:10.864" endtime="20220708 06:13:11.255"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_BOARD_ID}</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220708 06:13:11.256" level="INFO">${TEST_SUITE_BOARD_ID} = 62c7caf7377a257c855f44d7</msg>
<status status="PASS" starttime="20220708 06:13:11.255" endtime="20220708 06:13:11.256"/>
</kw>
<kw name="Get Lists On A Board" library="Board">
<var>${LISTS}</var>
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Get all the lists in a board</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>lists_on_board</arg>
<arg>${id}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220708 06:13:11.257" level="INFO">${url} = boards/62c7caf7377a257c855f44d7/lists/</msg>
<status status="PASS" starttime="20220708 06:13:11.257" endtime="20220708 06:13:11.257"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220708 06:13:11.358" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 06:13:11.257" endtime="20220708 06:13:11.358"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 06:13:11.358" endtime="20220708 06:13:11.358"/>
</return>
<msg timestamp="20220708 06:13:11.358" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 06:13:11.257" endtime="20220708 06:13:11.358"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 06:13:11.358" endtime="20220708 06:13:11.359"/>
</return>
<msg timestamp="20220708 06:13:11.359" level="INFO">${LISTS} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 06:13:11.256" endtime="20220708 06:13:11.359"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_LIST_ID}</arg>
<arg>${LISTS.json()}[0][id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220708 06:13:11.360" level="INFO">${TEST_SUITE_LIST_ID} = 62c7caf7377a257c855f44de</msg>
<status status="PASS" starttime="20220708 06:13:11.359" endtime="20220708 06:13:11.360"/>
</kw>
<status status="PASS" starttime="20220708 06:13:10.864" endtime="20220708 06:13:11.360"/>
</kw>
<status status="PASS" starttime="20220708 06:13:10.863" endtime="20220708 06:13:11.360"/>
</kw>
<test id="s1-s1-s2-t1" name="Verify A Card Can Be Created" line="13">
<kw name="Create A Card" library="Card">
<var>${response}</var>
<arg>name</arg>
<arg>RFCard2</arg>
<doc>Creates a new card in the given list.
required_args: listId
optional_args: name, desc, pos, idCardSource, idLabels, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>@{optional_args}</arg>
<arg>idList</arg>
<arg>${idList}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220708 06:13:11.362" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220708 06:13:11.362" endtime="20220708 06:13:11.362"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220708 06:13:11.363" endtime="20220708 06:13:11.363"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220708 06:13:11.364" level="INFO">${url} = cards/</msg>
<status status="PASS" starttime="20220708 06:13:11.363" endtime="20220708 06:13:11.364"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220708 06:13:11.619" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 06:13:11.364" endtime="20220708 06:13:11.619"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 06:13:11.619" endtime="20220708 06:13:11.619"/>
</return>
<msg timestamp="20220708 06:13:11.620" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 06:13:11.362" endtime="20220708 06:13:11.620"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 06:13:11.620" endtime="20220708 06:13:11.620"/>
</return>
<msg timestamp="20220708 06:13:11.620" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 06:13:11.361" endtime="20220708 06:13:11.620"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>card</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220708 06:13:11.621" endtime="20220708 06:13:11.626"/>
</kw>
<status status="PASS" starttime="20220708 06:13:11.620" endtime="20220708 06:13:11.626"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220708 06:13:11.627" endtime="20220708 06:13:11.627"/>
</return>
<msg timestamp="20220708 06:13:11.628" level="INFO">${CARD_ID} = 62c7caf7ce76b671535a0f00</msg>
<status status="PASS" starttime="20220708 06:13:11.627" endtime="20220708 06:13:11.628"/>
</kw>
<kw name="Get A Card" library="Card">
<var>${response}</var>
<arg>${CARD_ID}</arg>
<doc>Gets the card with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220708 06:13:11.629" level="INFO">${url} = cards/62c7caf7ce76b671535a0f00</msg>
<status status="PASS" starttime="20220708 06:13:11.629" endtime="20220708 06:13:11.629"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220708 06:13:11.727" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 06:13:11.629" endtime="20220708 06:13:11.727"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 06:13:11.727" endtime="20220708 06:13:11.727"/>
</return>
<msg timestamp="20220708 06:13:11.727" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 06:13:11.628" endtime="20220708 06:13:11.727"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 06:13:11.727" endtime="20220708 06:13:11.727"/>
</return>
<msg timestamp="20220708 06:13:11.728" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 06:13:11.628" endtime="20220708 06:13:11.728"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_NAME}</var>
<arg>${response}</arg>
<arg>name</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220708 06:13:11.728" endtime="20220708 06:13:11.728"/>
</return>
<msg timestamp="20220708 06:13:11.729" level="INFO">${CARD_NAME} = RFCard2</msg>
<status status="PASS" starttime="20220708 06:13:11.728" endtime="20220708 06:13:11.729"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${CARD_NAME}</arg>
<arg>RFCard2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220708 06:13:11.729" endtime="20220708 06:13:11.730"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Card</arg>
<arg>${CARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Card" library="Card">
<arg>${CARD_ID}</arg>
<doc>Deletes the card with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220708 06:13:11.732" level="INFO">${url} = cards/62c7caf7ce76b671535a0f00</msg>
<status status="PASS" starttime="20220708 06:13:11.731" endtime="20220708 06:13:11.732"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220708 06:13:11.924" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 06:13:11.732" endtime="20220708 06:13:11.924"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 06:13:11.924" endtime="20220708 06:13:11.924"/>
</return>
<msg timestamp="20220708 06:13:11.925" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 06:13:11.731" endtime="20220708 06:13:11.925"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 06:13:11.925" endtime="20220708 06:13:11.925"/>
</return>
<status status="PASS" starttime="20220708 06:13:11.730" endtime="20220708 06:13:11.925"/>
</kw>
<status status="PASS" starttime="20220708 06:13:11.730" endtime="20220708 06:13:11.925"/>
</kw>
<doc>Verify that a card can be created through API</doc>
<tag>api</tag>
<tag>card.create</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220708 06:13:11.360" endtime="20220708 06:13:11.925"/>
</test>
<test id="s1-s1-s2-t2" name="Verify A Card Can Be Closed" line="24">
<kw name="Create A Card" library="Card">
<var>${response}</var>
<doc>Creates a new card in the given list.
required_args: listId
optional_args: name, desc, pos, idCardSource, idLabels, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>@{optional_args}</arg>
<arg>idList</arg>
<arg>${idList}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220708 06:13:11.929" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220708 06:13:11.928" endtime="20220708 06:13:11.929"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220708 06:13:11.929" endtime="20220708 06:13:11.929"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220708 06:13:11.930" level="INFO">${url} = cards/</msg>
<status status="PASS" starttime="20220708 06:13:11.929" endtime="20220708 06:13:11.930"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220708 06:13:12.112" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 06:13:11.930" endtime="20220708 06:13:12.113"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 06:13:12.113" endtime="20220708 06:13:12.113"/>
</return>
<msg timestamp="20220708 06:13:12.113" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 06:13:11.928" endtime="20220708 06:13:12.113"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 06:13:12.113" endtime="20220708 06:13:12.113"/>
</return>
<msg timestamp="20220708 06:13:12.113" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 06:13:11.927" endtime="20220708 06:13:12.113"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220708 06:13:12.114" endtime="20220708 06:13:12.114"/>
</return>
<msg timestamp="20220708 06:13:12.115" level="INFO">${CARD_ID} = 62c7caf8152b3063f809cf17</msg>
<status status="PASS" starttime="20220708 06:13:12.114" endtime="20220708 06:13:12.115"/>
</kw>
<kw name="Archive A Card" library="Card">
<arg>${CARD_ID}</arg>
<doc>Modifies the card status to closed.</doc>
<kw name="Update A Card" library="Card">
<var>${response}</var>
<arg>${id}</arg>
<arg>closed</arg>
<arg>true</arg>
<arg>status_code=${status_code}</arg>
<doc>Updates the card with the given ID
optional_args: name, desc, closed, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<arg>status_code=${status_code}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220708 06:13:12.118" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220708 06:13:12.117" endtime="20220708 06:13:12.118"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220708 06:13:12.118" endtime="20220708 06:13:12.118"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220708 06:13:12.119" level="INFO">${url} = cards/62c7caf8152b3063f809cf17</msg>
<status status="PASS" starttime="20220708 06:13:12.118" endtime="20220708 06:13:12.119"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220708 06:13:12.290" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 06:13:12.119" endtime="20220708 06:13:12.290"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 06:13:12.290" endtime="20220708 06:13:12.290"/>
</return>
<msg timestamp="20220708 06:13:12.291" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 06:13:12.117" endtime="20220708 06:13:12.291"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 06:13:12.291" endtime="20220708 06:13:12.291"/>
</return>
<msg timestamp="20220708 06:13:12.291" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 06:13:12.116" endtime="20220708 06:13:12.291"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 06:13:12.291" endtime="20220708 06:13:12.291"/>
</return>
<status status="PASS" starttime="20220708 06:13:12.115" endtime="20220708 06:13:12.291"/>
</kw>
<kw name="Get A Card" library="Card">
<var>${response}</var>
<arg>${CARD_ID}</arg>
<doc>Gets the card with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220708 06:13:12.293" level="INFO">${url} = cards/62c7caf8152b3063f809cf17</msg>
<status status="PASS" starttime="20220708 06:13:12.293" endtime="20220708 06:13:12.293"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220708 06:13:12.396" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 06:13:12.293" endtime="20220708 06:13:12.396"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 06:13:12.396" endtime="20220708 06:13:12.396"/>
</return>
<msg timestamp="20220708 06:13:12.397" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 06:13:12.292" endtime="20220708 06:13:12.397"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 06:13:12.397" endtime="20220708 06:13:12.397"/>
</return>
<msg timestamp="20220708 06:13:12.397" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 06:13:12.292" endtime="20220708 06:13:12.397"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_CLOSED}</var>
<arg>${response}</arg>
<arg>closed</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220708 06:13:12.398" endtime="20220708 06:13:12.398"/>
</return>
<msg timestamp="20220708 06:13:12.399" level="INFO">${CARD_CLOSED} = True</msg>
<status status="PASS" starttime="20220708 06:13:12.397" endtime="20220708 06:13:12.399"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${CARD_CLOSED}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220708 06:13:12.399" endtime="20220708 06:13:12.399"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Card</arg>
<arg>${CARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Card" library="Card">
<arg>${CARD_ID}</arg>
<doc>Deletes the card with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220708 06:13:12.401" level="INFO">${url} = cards/62c7caf8152b3063f809cf17</msg>
<status status="PASS" starttime="20220708 06:13:12.401" endtime="20220708 06:13:12.401"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220708 06:13:12.590" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 06:13:12.402" endtime="20220708 06:13:12.590"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 06:13:12.590" endtime="20220708 06:13:12.590"/>
</return>
<msg timestamp="20220708 06:13:12.591" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 06:13:12.400" endtime="20220708 06:13:12.591"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 06:13:12.591" endtime="20220708 06:13:12.591"/>
</return>
<status status="PASS" starttime="20220708 06:13:12.400" endtime="20220708 06:13:12.591"/>
</kw>
<status status="PASS" starttime="20220708 06:13:12.400" endtime="20220708 06:13:12.591"/>
</kw>
<doc>Verify that a card can be closed through API</doc>
<tag>api</tag>
<tag>card.close</tag>
<tag>regression</tag>
<status status="PASS" starttime="20220708 06:13:11.926" endtime="20220708 06:13:12.591"/>
</test>
<test id="s1-s1-s2-t3" name="Verify A Card Can Be Deleted" line="35">
<kw name="Create A Card" library="Card">
<var>${response}</var>
<doc>Creates a new card in the given list.
required_args: listId
optional_args: name, desc, pos, idCardSource, idLabels, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>@{optional_args}</arg>
<arg>idList</arg>
<arg>${idList}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220708 06:13:12.595" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220708 06:13:12.595" endtime="20220708 06:13:12.595"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220708 06:13:12.595" endtime="20220708 06:13:12.595"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220708 06:13:12.596" level="INFO">${url} = cards/</msg>
<status status="PASS" starttime="20220708 06:13:12.595" endtime="20220708 06:13:12.596"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220708 06:13:12.803" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 06:13:12.596" endtime="20220708 06:13:12.803"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 06:13:12.803" endtime="20220708 06:13:12.803"/>
</return>
<msg timestamp="20220708 06:13:12.803" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 06:13:12.593" endtime="20220708 06:13:12.803"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 06:13:12.803" endtime="20220708 06:13:12.803"/>
</return>
<msg timestamp="20220708 06:13:12.804" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 06:13:12.593" endtime="20220708 06:13:12.804"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220708 06:13:12.804" endtime="20220708 06:13:12.804"/>
</return>
<msg timestamp="20220708 06:13:12.805" level="INFO">${CARD_ID} = 62c7caf874bdfa654f68df02</msg>
<status status="PASS" starttime="20220708 06:13:12.804" endtime="20220708 06:13:12.805"/>
</kw>
<kw name="Delete A Card" library="Card">
<var>${response}</var>
<arg>${CARD_ID}</arg>
<doc>Deletes the card with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220708 06:13:12.807" level="INFO">${url} = cards/62c7caf874bdfa654f68df02</msg>
<status status="PASS" starttime="20220708 06:13:12.807" endtime="20220708 06:13:12.807"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220708 06:13:13.003" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 06:13:12.807" endtime="20220708 06:13:13.003"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 06:13:13.003" endtime="20220708 06:13:13.003"/>
</return>
<msg timestamp="20220708 06:13:13.004" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 06:13:12.806" endtime="20220708 06:13:13.004"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 06:13:13.004" endtime="20220708 06:13:13.004"/>
</return>
<msg timestamp="20220708 06:13:13.004" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 06:13:12.805" endtime="20220708 06:13:13.004"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>delete</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220708 06:13:13.005" endtime="20220708 06:13:13.007"/>
</kw>
<status status="PASS" starttime="20220708 06:13:13.004" endtime="20220708 06:13:13.007"/>
</kw>
<kw name="Get A Card" library="Card">
<arg>${CARD_ID}</arg>
<arg>status_code=404</arg>
<doc>Gets the card with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220708 06:13:13.008" level="INFO">${url} = cards/62c7caf874bdfa654f68df02</msg>
<status status="PASS" starttime="20220708 06:13:13.008" endtime="20220708 06:13:13.008"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220708 06:13:13.096" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220708 06:13:13.008" endtime="20220708 06:13:13.096"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 06:13:13.096" endtime="20220708 06:13:13.096"/>
</return>
<msg timestamp="20220708 06:13:13.097" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220708 06:13:13.007" endtime="20220708 06:13:13.097"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 06:13:13.097" endtime="20220708 06:13:13.097"/>
</return>
<status status="PASS" starttime="20220708 06:13:13.007" endtime="20220708 06:13:13.097"/>
</kw>
<doc>Verify that a card can be deleted through API</doc>
<tag>api</tag>
<tag>card.delete</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220708 06:13:12.592" endtime="20220708 06:13:13.097"/>
</test>
<test id="s1-s1-s2-t4" name="Verify A Card Can Be Updated" line="44">
<kw name="Create A Card" library="Card">
<var>${response}</var>
<arg>name</arg>
<arg>RFCard4</arg>
<doc>Creates a new card in the given list.
required_args: listId
optional_args: name, desc, pos, idCardSource, idLabels, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>@{optional_args}</arg>
<arg>idList</arg>
<arg>${idList}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220708 06:13:13.100" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220708 06:13:13.100" endtime="20220708 06:13:13.100"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220708 06:13:13.101" endtime="20220708 06:13:13.101"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220708 06:13:13.102" level="INFO">${url} = cards/</msg>
<status status="PASS" starttime="20220708 06:13:13.101" endtime="20220708 06:13:13.102"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220708 06:13:13.317" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 06:13:13.102" endtime="20220708 06:13:13.317"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 06:13:13.317" endtime="20220708 06:13:13.317"/>
</return>
<msg timestamp="20220708 06:13:13.317" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 06:13:13.100" endtime="20220708 06:13:13.317"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 06:13:13.317" endtime="20220708 06:13:13.317"/>
</return>
<msg timestamp="20220708 06:13:13.318" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 06:13:13.099" endtime="20220708 06:13:13.318"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220708 06:13:13.318" endtime="20220708 06:13:13.318"/>
</return>
<msg timestamp="20220708 06:13:13.319" level="INFO">${CARD_ID} = 62c7caf962b68552276e5333</msg>
<status status="PASS" starttime="20220708 06:13:13.318" endtime="20220708 06:13:13.319"/>
</kw>
<kw name="Update A Card" library="Card">
<var>${response}</var>
<arg>${CARD_ID}</arg>
<arg>name</arg>
<arg>RFCard5</arg>
<arg>desc</arg>
<arg>Description</arg>
<doc>Updates the card with the given ID
optional_args: name, desc, closed, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<arg>status_code=${status_code}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220708 06:13:13.321" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220708 06:13:13.321" endtime="20220708 06:13:13.321"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220708 06:13:13.321" endtime="20220708 06:13:13.321"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220708 06:13:13.322" level="INFO">${url} = cards/62c7caf962b68552276e5333</msg>
<status status="PASS" starttime="20220708 06:13:13.321" endtime="20220708 06:13:13.322"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220708 06:13:13.504" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 06:13:13.322" endtime="20220708 06:13:13.504"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 06:13:13.504" endtime="20220708 06:13:13.504"/>
</return>
<msg timestamp="20220708 06:13:13.504" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 06:13:13.320" endtime="20220708 06:13:13.504"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 06:13:13.504" endtime="20220708 06:13:13.504"/>
</return>
<msg timestamp="20220708 06:13:13.505" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 06:13:13.320" endtime="20220708 06:13:13.505"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>card</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220708 06:13:13.505" endtime="20220708 06:13:13.512"/>
</kw>
<status status="PASS" starttime="20220708 06:13:13.505" endtime="20220708 06:13:13.512"/>
</kw>
<kw name="Get A Card" library="Card">
<var>${response}</var>
<arg>${CARD_ID}</arg>
<doc>Gets the card with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220708 06:13:13.514" level="INFO">${url} = cards/62c7caf962b68552276e5333</msg>
<status status="PASS" starttime="20220708 06:13:13.513" endtime="20220708 06:13:13.514"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220708 06:13:13.609" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 06:13:13.514" endtime="20220708 06:13:13.610"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 06:13:13.610" endtime="20220708 06:13:13.610"/>
</return>
<msg timestamp="20220708 06:13:13.610" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 06:13:13.513" endtime="20220708 06:13:13.610"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 06:13:13.610" endtime="20220708 06:13:13.610"/>
</return>
<msg timestamp="20220708 06:13:13.610" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 06:13:13.512" endtime="20220708 06:13:13.610"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_NAME}</var>
<arg>${response}</arg>
<arg>name</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220708 06:13:13.611" endtime="20220708 06:13:13.611"/>
</return>
<msg timestamp="20220708 06:13:13.612" level="INFO">${CARD_NAME} = RFCard5</msg>
<status status="PASS" starttime="20220708 06:13:13.611" endtime="20220708 06:13:13.612"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_DESC}</var>
<arg>${response}</arg>
<arg>desc</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220708 06:13:13.613" endtime="20220708 06:13:13.613"/>
</return>
<msg timestamp="20220708 06:13:13.614" level="INFO">${CARD_DESC} = Description</msg>
<status status="PASS" starttime="20220708 06:13:13.612" endtime="20220708 06:13:13.614"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${CARD_NAME}</arg>
<arg>RFCard5</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220708 06:13:13.614" endtime="20220708 06:13:13.614"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${CARD_DESC}</arg>
<arg>Description</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220708 06:13:13.614" endtime="20220708 06:13:13.614"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Card</arg>
<arg>${CARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Card" library="Card">
<arg>${CARD_ID}</arg>
<doc>Deletes the card with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220708 06:13:13.616" level="INFO">${url} = cards/62c7caf962b68552276e5333</msg>
<status status="PASS" starttime="20220708 06:13:13.616" endtime="20220708 06:13:13.616"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220708 06:13:13.829" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 06:13:13.616" endtime="20220708 06:13:13.830"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 06:13:13.830" endtime="20220708 06:13:13.830"/>
</return>
<msg timestamp="20220708 06:13:13.830" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 06:13:13.615" endtime="20220708 06:13:13.830"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 06:13:13.830" endtime="20220708 06:13:13.830"/>
</return>
<status status="PASS" starttime="20220708 06:13:13.615" endtime="20220708 06:13:13.830"/>
</kw>
<status status="PASS" starttime="20220708 06:13:13.615" endtime="20220708 06:13:13.830"/>
</kw>
<doc>Verify that a card's name and Description can be updated through API</doc>
<tag>api</tag>
<tag>card.update</tag>
<tag>regression</tag>
<status status="PASS" starttime="20220708 06:13:13.098" endtime="20220708 06:13:13.831"/>
</test>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Teardown Board</arg>
<arg>Delete All Sessions</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Teardown Board">
<doc>Delete the board created for this suite</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220708 06:13:13.834" level="INFO">${url} = boards/62c7caf7377a257c855f44d7</msg>
<status status="PASS" starttime="20220708 06:13:13.834" endtime="20220708 06:13:13.834"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220708 06:13:14.286" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 06:13:13.834" endtime="20220708 06:13:14.286"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 06:13:14.286" endtime="20220708 06:13:14.286"/>
</return>
<msg timestamp="20220708 06:13:14.286" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 06:13:13.833" endtime="20220708 06:13:14.286"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 06:13:14.286" endtime="20220708 06:13:14.286"/>
</return>
<status status="PASS" starttime="20220708 06:13:13.832" endtime="20220708 06:13:14.287"/>
</kw>
<status status="PASS" starttime="20220708 06:13:13.832" endtime="20220708 06:13:14.287"/>
</kw>
<status status="PASS" starttime="20220708 06:13:13.832" endtime="20220708 06:13:14.287"/>
</kw>
<kw name="Delete All Sessions" library="request_own_library">
<status status="PASS" starttime="20220708 06:13:14.287" endtime="20220708 06:13:14.288"/>
</kw>
<status status="PASS" starttime="20220708 06:13:13.831" endtime="20220708 06:13:14.288"/>
</kw>
<doc>Example Test with Trello API Cards</doc>
<status status="PASS" starttime="20220708 06:13:10.853" endtime="20220708 06:13:14.288"/>
</suite>
<suite id="s1-s1-s3" name="Trello Api Checklists Tests" source="/trello/api/trello_api_checklists_tests.robot">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Create Trello Session</arg>
<arg>Setup Board, List And Card</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Create Trello Session" library="TrelloAPI">
<doc>Creates a Trello Session</doc>
<kw name="Create Session" library="request_own_library">
<arg>${API_BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<status status="PASS" starttime="20220708 06:13:14.302" endtime="20220708 06:13:14.302"/>
</kw>
<status status="PASS" starttime="20220708 06:13:14.302" endtime="20220708 06:13:14.303"/>
</kw>
<kw name="Setup Board, List And Card">
<doc>Create a board and save its ID and its first list's ID</doc>
<kw name="Create A Board" library="Board">
<var>${BOARD}</var>
<arg>TestBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220708 06:13:14.304" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220708 06:13:14.303" endtime="20220708 06:13:14.304"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220708 06:13:14.304" endtime="20220708 06:13:14.304"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220708 06:13:14.305" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220708 06:13:14.304" endtime="20220708 06:13:14.305"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220708 06:13:14.633" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 06:13:14.305" endtime="20220708 06:13:14.633"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 06:13:14.633" endtime="20220708 06:13:14.633"/>
</return>
<msg timestamp="20220708 06:13:14.633" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 06:13:14.303" endtime="20220708 06:13:14.633"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 06:13:14.633" endtime="20220708 06:13:14.633"/>
</return>
<msg timestamp="20220708 06:13:14.634" level="INFO">${BOARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 06:13:14.303" endtime="20220708 06:13:14.634"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_BOARD_ID}</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220708 06:13:14.635" level="INFO">${TEST_SUITE_BOARD_ID} = 62c7cafae514291bfad273c5</msg>
<status status="PASS" starttime="20220708 06:13:14.634" endtime="20220708 06:13:14.635"/>
</kw>
<kw name="Get Lists On A Board" library="Board">
<var>${LISTS}</var>
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Get all the lists in a board</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>lists_on_board</arg>
<arg>${id}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220708 06:13:14.636" level="INFO">${url} = boards/62c7cafae514291bfad273c5/lists/</msg>
<status status="PASS" starttime="20220708 06:13:14.636" endtime="20220708 06:13:14.637"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220708 06:13:14.723" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 06:13:14.637" endtime="20220708 06:13:14.723"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 06:13:14.723" endtime="20220708 06:13:14.723"/>
</return>
<msg timestamp="20220708 06:13:14.723" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 06:13:14.636" endtime="20220708 06:13:14.723"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 06:13:14.723" endtime="20220708 06:13:14.723"/>
</return>
<msg timestamp="20220708 06:13:14.724" level="INFO">${LISTS} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 06:13:14.635" endtime="20220708 06:13:14.724"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_LIST_ID}</arg>
<arg>${LISTS.json()}[0][id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220708 06:13:14.725" level="INFO">${TEST_SUITE_LIST_ID} = 62c7cafae514291bfad273cc</msg>
<status status="PASS" starttime="20220708 06:13:14.724" endtime="20220708 06:13:14.725"/>
</kw>
<kw name="Create A Card" library="Card">
<var>${CARD}</var>
<arg>name</arg>
<arg>TestCard</arg>
<doc>Creates a new card in the given list.
required_args: listId
optional_args: name, desc, pos, idCardSource, idLabels, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>@{optional_args}</arg>
<arg>idList</arg>
<arg>${idList}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220708 06:13:14.727" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220708 06:13:14.727" endtime="20220708 06:13:14.727"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220708 06:13:14.727" endtime="20220708 06:13:14.727"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220708 06:13:14.728" level="INFO">${url} = cards/</msg>
<status status="PASS" starttime="20220708 06:13:14.728" endtime="20220708 06:13:14.728"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220708 06:13:14.942" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 06:13:14.729" endtime="20220708 06:13:14.942"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 06:13:14.942" endtime="20220708 06:13:14.943"/>
</return>
<msg timestamp="20220708 06:13:14.943" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 06:13:14.726" endtime="20220708 06:13:14.943"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 06:13:14.943" endtime="20220708 06:13:14.943"/>
</return>
<msg timestamp="20220708 06:13:14.943" level="INFO">${CARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 06:13:14.725" endtime="20220708 06:13:14.943"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_CARD_ID}</arg>
<arg>${CARD.json()}[id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220708 06:13:14.944" level="INFO">${TEST_SUITE_CARD_ID} = 62c7cafade7cad8b1dbe2664</msg>
<status status="PASS" starttime="20220708 06:13:14.943" endtime="20220708 06:13:14.944"/>
</kw>
<status status="PASS" starttime="20220708 06:13:14.303" endtime="20220708 06:13:14.945"/>
</kw>
<status status="PASS" starttime="20220708 06:13:14.302" endtime="20220708 06:13:14.945"/>
</kw>
<test id="s1-s1-s3-t1" name="Verify A Checklist Can Be Created" line="14">
<kw name="Create A Checklist" library="Checklist">
<var>${response}</var>
<arg>name</arg>
<arg>TestChecklist</arg>
<arg>idCard=${TEST_SUITE_CARD_ID}</arg>
<doc>Creates a new checklist in the given card.
required_args: idCard
optional_args: name, pos, idChecklistSource
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>@{optional_args}</arg>
<arg>idCard</arg>
<arg>${idCard}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220708 06:13:14.947" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220708 06:13:14.947" endtime="20220708 06:13:14.947"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220708 06:13:14.947" endtime="20220708 06:13:14.947"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220708 06:13:14.948" level="INFO">${url} = checklists/</msg>
<status status="PASS" starttime="20220708 06:13:14.947" endtime="20220708 06:13:14.948"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220708 06:13:15.447" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 06:13:14.948" endtime="20220708 06:13:15.447"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 06:13:15.447" endtime="20220708 06:13:15.447"/>
</return>
<msg timestamp="20220708 06:13:15.447" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 06:13:14.946" endtime="20220708 06:13:15.447"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 06:13:15.448" endtime="20220708 06:13:15.448"/>
</return>
<msg timestamp="20220708 06:13:15.448" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 06:13:14.945" endtime="20220708 06:13:15.448"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${checklist_id}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220708 06:13:15.448" endtime="20220708 06:13:15.449"/>
</return>
<msg timestamp="20220708 06:13:15.449" level="INFO">${checklist_id} = 62c7cafb4660ac2de76d3329</msg>
<status status="PASS" starttime="20220708 06:13:15.448" endtime="20220708 06:13:15.450"/>
</kw>
<kw name="Get A Checklist" library="Checklist">
<var>${response}</var>
<arg>${checklist_id}</arg>
<doc>Gets the checklist with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220708 06:13:15.451" level="INFO">${url} = checklists/62c7cafb4660ac2de76d3329</msg>
<status status="PASS" starttime="20220708 06:13:15.451" endtime="20220708 06:13:15.451"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220708 06:13:15.535" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 06:13:15.451" endtime="20220708 06:13:15.535"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 06:13:15.535" endtime="20220708 06:13:15.536"/>
</return>
<msg timestamp="20220708 06:13:15.536" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 06:13:15.450" endtime="20220708 06:13:15.536"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 06:13:15.536" endtime="20220708 06:13:15.536"/>
</return>
<msg timestamp="20220708 06:13:15.536" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 06:13:15.450" endtime="20220708 06:13:15.536"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${checklist_name}</var>
<arg>${response}</arg>
<arg>name</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220708 06:13:15.537" endtime="20220708 06:13:15.537"/>
</return>
<msg timestamp="20220708 06:13:15.538" level="INFO">${checklist_name} = TestChecklist</msg>
<status status="PASS" starttime="20220708 06:13:15.536" endtime="20220708 06:13:15.538"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${checklist_name}</arg>
<arg>TestChecklist</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220708 06:13:15.538" endtime="20220708 06:13:15.538"/>
</kw>
<kw name="Delete A Checklist" library="Checklist" type="TEARDOWN">
<arg>${checklist_id}</arg>
<doc>Deletes the checklist with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220708 06:13:15.540" level="INFO">${url} = checklists/62c7cafb4660ac2de76d3329</msg>
<status status="PASS" starttime="20220708 06:13:15.540" endtime="20220708 06:13:15.540"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220708 06:13:15.685" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 06:13:15.540" endtime="20220708 06:13:15.685"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 06:13:15.685" endtime="20220708 06:13:15.685"/>
</return>
<msg timestamp="20220708 06:13:15.686" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 06:13:15.539" endtime="20220708 06:13:15.686"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 06:13:15.686" endtime="20220708 06:13:15.686"/>
</return>
<status status="PASS" starttime="20220708 06:13:15.539" endtime="20220708 06:13:15.686"/>
</kw>
<doc>Verify that a checklist can be created through API</doc>
<tag>api</tag>
<tag>checklist.create</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220708 06:13:14.945" endtime="20220708 06:13:15.686"/>
</test>
<test id="s1-s1-s3-t2" name="Verify A Checklist Can Be Deleted" line="24">
<kw name="Create A Checklist" library="Checklist">
<var>${response}</var>
<arg>name</arg>
<arg>TestChecklist</arg>
<arg>idCard=${TEST_SUITE_CARD_ID}</arg>
<doc>Creates a new checklist in the given card.
required_args: idCard
optional_args: name, pos, idChecklistSource
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>@{optional_args}</arg>
<arg>idCard</arg>
<arg>${idCard}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220708 06:13:15.690" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220708 06:13:15.690" endtime="20220708 06:13:15.690"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220708 06:13:15.690" endtime="20220708 06:13:15.690"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220708 06:13:15.691" level="INFO">${url} = checklists/</msg>
<status status="PASS" starttime="20220708 06:13:15.690" endtime="20220708 06:13:15.691"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220708 06:13:15.830" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 06:13:15.692" endtime="20220708 06:13:15.830"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 06:13:15.830" endtime="20220708 06:13:15.830"/>
</return>
<msg timestamp="20220708 06:13:15.830" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 06:13:15.689" endtime="20220708 06:13:15.830"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 06:13:15.830" endtime="20220708 06:13:15.831"/>
</return>
<msg timestamp="20220708 06:13:15.831" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 06:13:15.688" endtime="20220708 06:13:15.831"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${checklist_id}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220708 06:13:15.831" endtime="20220708 06:13:15.831"/>
</return>
<msg timestamp="20220708 06:13:15.833" level="INFO">${checklist_id} = 62c7cafb7059735344c61e79</msg>
<status status="PASS" starttime="20220708 06:13:15.831" endtime="20220708 06:13:15.833"/>
</kw>
<kw name="Delete A Checklist" library="Checklist">
<var>${response}</var>
<arg>${checklist_id}</arg>
<doc>Deletes the checklist with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220708 06:13:15.834" level="INFO">${url} = checklists/62c7cafb7059735344c61e79</msg>
<status status="PASS" starttime="20220708 06:13:15.834" endtime="20220708 06:13:15.835"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220708 06:13:15.972" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 06:13:15.835" endtime="20220708 06:13:15.972"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 06:13:15.972" endtime="20220708 06:13:15.972"/>
</return>
<msg timestamp="20220708 06:13:15.972" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 06:13:15.833" endtime="20220708 06:13:15.972"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 06:13:15.972" endtime="20220708 06:13:15.973"/>
</return>
<msg timestamp="20220708 06:13:15.973" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 06:13:15.833" endtime="20220708 06:13:15.973"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>delete</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220708 06:13:15.973" endtime="20220708 06:13:15.976"/>
</kw>
<status status="PASS" starttime="20220708 06:13:15.973" endtime="20220708 06:13:15.976"/>
</kw>
<kw name="Get A Checklist" library="Checklist">
<arg>${checklist_id}</arg>
<arg>status_code=404</arg>
<doc>Gets the checklist with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220708 06:13:15.978" level="INFO">${url} = checklists/62c7cafb7059735344c61e79</msg>
<status status="PASS" starttime="20220708 06:13:15.977" endtime="20220708 06:13:15.978"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220708 06:13:16.046" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220708 06:13:15.978" endtime="20220708 06:13:16.046"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 06:13:16.046" endtime="20220708 06:13:16.046"/>
</return>
<msg timestamp="20220708 06:13:16.046" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220708 06:13:15.977" endtime="20220708 06:13:16.046"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 06:13:16.046" endtime="20220708 06:13:16.046"/>
</return>
<status status="PASS" starttime="20220708 06:13:15.976" endtime="20220708 06:13:16.047"/>
</kw>
<doc>Verify that a checklist can be deleted through API</doc>
<tag>api</tag>
<tag>checklist.delete</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220708 06:13:15.687" endtime="20220708 06:13:16.047"/>
</test>
<test id="s1-s1-s3-t3" name="Verify A Checklist Can Be Updated" line="33">
<kw name="Create A Checklist" library="Checklist">
<var>${response}</var>
<arg>name</arg>
<arg>TestChecklist</arg>
<arg>idCard=${TEST_SUITE_CARD_ID}</arg>
<doc>Creates a new checklist in the given card.
required_args: idCard
optional_args: name, pos, idChecklistSource
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>@{optional_args}</arg>
<arg>idCard</arg>
<arg>${idCard}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220708 06:13:16.052" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220708 06:13:16.050" endtime="20220708 06:13:16.052"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220708 06:13:16.052" endtime="20220708 06:13:16.052"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220708 06:13:16.053" level="INFO">${url} = checklists/</msg>
<status status="PASS" starttime="20220708 06:13:16.052" endtime="20220708 06:13:16.053"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220708 06:13:16.198" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 06:13:16.053" endtime="20220708 06:13:16.198"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 06:13:16.198" endtime="20220708 06:13:16.198"/>
</return>
<msg timestamp="20220708 06:13:16.198" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 06:13:16.049" endtime="20220708 06:13:16.198"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 06:13:16.198" endtime="20220708 06:13:16.198"/>
</return>
<msg timestamp="20220708 06:13:16.198" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 06:13:16.049" endtime="20220708 06:13:16.198"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${checklist_id}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220708 06:13:16.199" endtime="20220708 06:13:16.199"/>
</return>
<msg timestamp="20220708 06:13:16.200" level="INFO">${checklist_id} = 62c7cafc8de52d37e301b2ba</msg>
<status status="PASS" starttime="20220708 06:13:16.199" endtime="20220708 06:13:16.200"/>
</kw>
<kw name="Update A Checklist" library="Checklist">
<var>${response}</var>
<arg>${checklist_id}</arg>
<arg>name</arg>
<arg>TestChecklist2</arg>
<doc>Updates the checklist with the given ID
optional_args: name, pos
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<arg>status_code=${status_code}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220708 06:13:16.202" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220708 06:13:16.201" endtime="20220708 06:13:16.202"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220708 06:13:16.202" endtime="20220708 06:13:16.202"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220708 06:13:16.203" level="INFO">${url} = checklists/62c7cafc8de52d37e301b2ba</msg>
<status status="PASS" starttime="20220708 06:13:16.202" endtime="20220708 06:13:16.203"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220708 06:13:16.314" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 06:13:16.203" endtime="20220708 06:13:16.314"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 06:13:16.314" endtime="20220708 06:13:16.314"/>
</return>
<msg timestamp="20220708 06:13:16.315" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 06:13:16.201" endtime="20220708 06:13:16.315"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 06:13:16.315" endtime="20220708 06:13:16.315"/>
</return>
<msg timestamp="20220708 06:13:16.315" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 06:13:16.200" endtime="20220708 06:13:16.315"/>
</kw>
<kw name="Get A Checklist" library="Checklist">
<var>${response}</var>
<arg>${checklist_id}</arg>
<doc>Gets the checklist with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220708 06:13:16.317" level="INFO">${url} = checklists/62c7cafc8de52d37e301b2ba</msg>
<status status="PASS" starttime="20220708 06:13:16.316" endtime="20220708 06:13:16.317"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220708 06:13:16.397" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 06:13:16.317" endtime="20220708 06:13:16.397"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 06:13:16.397" endtime="20220708 06:13:16.397"/>
</return>
<msg timestamp="20220708 06:13:16.398" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 06:13:16.316" endtime="20220708 06:13:16.398"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 06:13:16.398" endtime="20220708 06:13:16.398"/>
</return>
<msg timestamp="20220708 06:13:16.398" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 06:13:16.315" endtime="20220708 06:13:16.398"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${checklist_name}</var>
<arg>${response}</arg>
<arg>name</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220708 06:13:16.399" endtime="20220708 06:13:16.399"/>
</return>
<msg timestamp="20220708 06:13:16.400" level="INFO">${checklist_name} = TestChecklist2</msg>
<status status="PASS" starttime="20220708 06:13:16.398" endtime="20220708 06:13:16.400"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${checklist_name}</arg>
<arg>TestChecklist2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220708 06:13:16.400" endtime="20220708 06:13:16.400"/>
</kw>
<kw name="Delete A Checklist" library="Checklist" type="TEARDOWN">
<arg>${checklist_id}</arg>
<doc>Deletes the checklist with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220708 06:13:16.413" level="INFO">${url} = checklists/62c7cafc8de52d37e301b2ba</msg>
<status status="PASS" starttime="20220708 06:13:16.413" endtime="20220708 06:13:16.414"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220708 06:13:16.555" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 06:13:16.414" endtime="20220708 06:13:16.555"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 06:13:16.555" endtime="20220708 06:13:16.555"/>
</return>
<msg timestamp="20220708 06:13:16.555" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 06:13:16.413" endtime="20220708 06:13:16.555"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 06:13:16.555" endtime="20220708 06:13:16.555"/>
</return>
<status status="PASS" starttime="20220708 06:13:16.400" endtime="20220708 06:13:16.555"/>
</kw>
<doc>Verify that a checklist's name can be updated through API</doc>
<tag>api</tag>
<tag>checklist.update</tag>
<tag>regression</tag>
<status status="PASS" starttime="20220708 06:13:16.047" endtime="20220708 06:13:16.556"/>
</test>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Teardown Board</arg>
<arg>Delete All Sessions</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Teardown Board">
<doc>Delete the board created for this suite</doc>
<kw name="Delete A Board" library="Board">
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220708 06:13:16.558" level="INFO">${url} = boards/62c7cafae514291bfad273c5</msg>
<status status="PASS" starttime="20220708 06:13:16.558" endtime="20220708 06:13:16.558"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220708 06:13:16.976" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 06:13:16.558" endtime="20220708 06:13:16.976"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 06:13:16.976" endtime="20220708 06:13:16.976"/>
</return>
<msg timestamp="20220708 06:13:16.977" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 06:13:16.557" endtime="20220708 06:13:16.977"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 06:13:16.977" endtime="20220708 06:13:16.977"/>
</return>
<status status="PASS" starttime="20220708 06:13:16.557" endtime="20220708 06:13:16.977"/>
</kw>
<status status="PASS" starttime="20220708 06:13:16.557" endtime="20220708 06:13:16.977"/>
</kw>
<kw name="Delete All Sessions" library="request_own_library">
<status status="PASS" starttime="20220708 06:13:16.978" endtime="20220708 06:13:16.979"/>
</kw>
<status status="PASS" starttime="20220708 06:13:16.556" endtime="20220708 06:13:16.979"/>
</kw>
<doc>Example Test with Trello API Checklists</doc>
<status status="PASS" starttime="20220708 06:13:14.290" endtime="20220708 06:13:16.979"/>
</suite>
<suite id="s1-s1-s4" name="Trello Api Labels Tests" source="/trello/api/trello_api_labels_tests.robot">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Create Trello Session</arg>
<arg>Setup Board And List</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Create Trello Session" library="TrelloAPI">
<doc>Creates a Trello Session</doc>
<kw name="Create Session" library="request_own_library">
<arg>${API_BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<status status="PASS" starttime="20220708 06:13:16.991" endtime="20220708 06:13:16.991"/>
</kw>
<status status="PASS" starttime="20220708 06:13:16.990" endtime="20220708 06:13:16.991"/>
</kw>
<kw name="Setup Board And List">
<doc>Create a board and save its ID and its first list's ID</doc>
<kw name="Create A Board" library="Board">
<var>${BOARD}</var>
<arg>TestBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220708 06:13:16.992" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220708 06:13:16.992" endtime="20220708 06:13:16.992"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220708 06:13:16.992" endtime="20220708 06:13:16.993"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220708 06:13:16.993" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220708 06:13:16.993" endtime="20220708 06:13:16.993"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220708 06:13:17.333" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 06:13:16.993" endtime="20220708 06:13:17.333"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 06:13:17.334" endtime="20220708 06:13:17.334"/>
</return>
<msg timestamp="20220708 06:13:17.334" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 06:13:16.992" endtime="20220708 06:13:17.334"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 06:13:17.334" endtime="20220708 06:13:17.334"/>
</return>
<msg timestamp="20220708 06:13:17.334" level="INFO">${BOARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 06:13:16.991" endtime="20220708 06:13:17.334"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_BOARD_ID}</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220708 06:13:17.336" level="INFO">${TEST_SUITE_BOARD_ID} = 62c7cafd977d9a4621bb5da0</msg>
<status status="PASS" starttime="20220708 06:13:17.335" endtime="20220708 06:13:17.336"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${LISTS}</var>
<arg>boards/${TEST_SUITE_BOARD_ID}/lists</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220708 06:13:17.424" level="INFO">${LISTS} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 06:13:17.336" endtime="20220708 06:13:17.424"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_LIST_ID}</arg>
<arg>${LISTS.json()}[0][id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220708 06:13:17.425" level="INFO">${TEST_SUITE_LIST_ID} = 62c7cafd977d9a4621bb5da7</msg>
<status status="PASS" starttime="20220708 06:13:17.424" endtime="20220708 06:13:17.425"/>
</kw>
<status status="PASS" starttime="20220708 06:13:16.991" endtime="20220708 06:13:17.426"/>
</kw>
<status status="PASS" starttime="20220708 06:13:16.990" endtime="20220708 06:13:17.426"/>
</kw>
<test id="s1-s1-s4-t1" name="Create and get label on board" line="14">
<kw name="Create A Label" library="Label">
<var>${response}</var>
<arg>name</arg>
<arg>label2</arg>
<arg>color</arg>
<arg>yellow</arg>
<doc>Creates a new label in the given board.
required_args: idBoard
optional_args: name, color
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>idBoard</arg>
<arg>${idBoard}</arg>
<arg>@{optional_args}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220708 06:13:17.428" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220708 06:13:17.428" endtime="20220708 06:13:17.428"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220708 06:13:17.428" endtime="20220708 06:13:17.428"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220708 06:13:17.429" level="INFO">${url} = labels/</msg>
<status status="PASS" starttime="20220708 06:13:17.428" endtime="20220708 06:13:17.429"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220708 06:13:17.544" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 06:13:17.429" endtime="20220708 06:13:17.544"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 06:13:17.544" endtime="20220708 06:13:17.544"/>
</return>
<msg timestamp="20220708 06:13:17.544" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 06:13:17.427" endtime="20220708 06:13:17.544"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 06:13:17.544" endtime="20220708 06:13:17.544"/>
</return>
<msg timestamp="20220708 06:13:17.545" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 06:13:17.427" endtime="20220708 06:13:17.545"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>label</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220708 06:13:17.545" endtime="20220708 06:13:17.548"/>
</kw>
<status status="PASS" starttime="20220708 06:13:17.545" endtime="20220708 06:13:17.548"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${LABEL_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220708 06:13:17.548" endtime="20220708 06:13:17.548"/>
</return>
<msg timestamp="20220708 06:13:17.549" level="INFO">${LABEL_ID} = 62c7cafd81567b675b332d80</msg>
<status status="PASS" starttime="20220708 06:13:17.548" endtime="20220708 06:13:17.549"/>
</kw>
<kw name="Get A Label" library="Label">
<var>${response}</var>
<arg>${LABEL_ID}</arg>
<doc>Gets the label with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220708 06:13:17.550" level="INFO">${url} = labels/62c7cafd81567b675b332d80</msg>
<status status="PASS" starttime="20220708 06:13:17.550" endtime="20220708 06:13:17.550"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220708 06:13:17.631" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 06:13:17.551" endtime="20220708 06:13:17.631"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 06:13:17.631" endtime="20220708 06:13:17.631"/>
</return>
<msg timestamp="20220708 06:13:17.632" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 06:13:17.550" endtime="20220708 06:13:17.632"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 06:13:17.632" endtime="20220708 06:13:17.632"/>
</return>
<msg timestamp="20220708 06:13:17.632" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 06:13:17.549" endtime="20220708 06:13:17.632"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${LABEL_COLOR}</var>
<arg>${response}</arg>
<arg>color</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220708 06:13:17.633" endtime="20220708 06:13:17.633"/>
</return>
<msg timestamp="20220708 06:13:17.634" level="INFO">${LABEL_COLOR} = yellow</msg>
<status status="PASS" starttime="20220708 06:13:17.632" endtime="20220708 06:13:17.634"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${LABEL_NAME}</var>
<arg>${response}</arg>
<arg>name</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220708 06:13:17.634" endtime="20220708 06:13:17.634"/>
</return>
<msg timestamp="20220708 06:13:17.635" level="INFO">${LABEL_NAME} = label2</msg>
<status status="PASS" starttime="20220708 06:13:17.634" endtime="20220708 06:13:17.635"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${LABEL_COLOR}</arg>
<arg>yellow</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220708 06:13:17.635" endtime="20220708 06:13:17.636"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${LABEL_NAME}</arg>
<arg>label2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220708 06:13:17.636" endtime="20220708 06:13:17.636"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Label</arg>
<arg>${LABEL_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Label" library="Label">
<arg>${LABEL_ID}</arg>
<doc>Deletes the label with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220708 06:13:17.638" level="INFO">${url} = labels/62c7cafd81567b675b332d80</msg>
<status status="PASS" starttime="20220708 06:13:17.638" endtime="20220708 06:13:17.638"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220708 06:13:17.796" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 06:13:17.638" endtime="20220708 06:13:17.796"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 06:13:17.796" endtime="20220708 06:13:17.796"/>
</return>
<msg timestamp="20220708 06:13:17.796" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 06:13:17.637" endtime="20220708 06:13:17.796"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 06:13:17.796" endtime="20220708 06:13:17.797"/>
</return>
<status status="PASS" starttime="20220708 06:13:17.637" endtime="20220708 06:13:17.797"/>
</kw>
<status status="PASS" starttime="20220708 06:13:17.636" endtime="20220708 06:13:17.797"/>
</kw>
<doc>Verify that a label can be created through API</doc>
<tag>api</tag>
<tag>label.create</tag>
<tag>label.get</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220708 06:13:17.426" endtime="20220708 06:13:17.797"/>
</test>
<test id="s1-s1-s4-t2" name="Update label on board" line="28">
<kw name="Create A Label" library="Label">
<var>${response}</var>
<arg>name</arg>
<arg>label2</arg>
<arg>color</arg>
<arg>yellow</arg>
<doc>Creates a new label in the given board.
required_args: idBoard
optional_args: name, color
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>idBoard</arg>
<arg>${idBoard}</arg>
<arg>@{optional_args}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220708 06:13:17.800" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220708 06:13:17.800" endtime="20220708 06:13:17.800"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220708 06:13:17.800" endtime="20220708 06:13:17.801"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220708 06:13:17.802" level="INFO">${url} = labels/</msg>
<status status="PASS" starttime="20220708 06:13:17.801" endtime="20220708 06:13:17.802"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220708 06:13:17.922" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 06:13:17.802" endtime="20220708 06:13:17.922"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 06:13:17.922" endtime="20220708 06:13:17.922"/>
</return>
<msg timestamp="20220708 06:13:17.923" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 06:13:17.799" endtime="20220708 06:13:17.923"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 06:13:17.923" endtime="20220708 06:13:17.923"/>
</return>
<msg timestamp="20220708 06:13:17.923" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 06:13:17.799" endtime="20220708 06:13:17.923"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>label</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220708 06:13:17.924" endtime="20220708 06:13:17.926"/>
</kw>
<status status="PASS" starttime="20220708 06:13:17.923" endtime="20220708 06:13:17.926"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${LABEL_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220708 06:13:17.926" endtime="20220708 06:13:17.926"/>
</return>
<msg timestamp="20220708 06:13:17.927" level="INFO">${LABEL_ID} = 62c7cafdb97897422fda3a78</msg>
<status status="PASS" starttime="20220708 06:13:17.926" endtime="20220708 06:13:17.927"/>
</kw>
<kw name="Update A Label" library="Label">
<var>${new_response}</var>
<arg>${LABEL_ID}</arg>
<arg>name</arg>
<arg>label3</arg>
<arg>color</arg>
<arg>orange</arg>
<doc>Updates the label with the given ID
optional_args: name, color
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220708 06:13:17.928" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220708 06:13:17.928" endtime="20220708 06:13:17.928"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220708 06:13:17.929" endtime="20220708 06:13:17.929"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220708 06:13:17.929" level="INFO">${url} = labels/62c7cafdb97897422fda3a78</msg>
<status status="PASS" starttime="20220708 06:13:17.929" endtime="20220708 06:13:17.929"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220708 06:13:18.058" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 06:13:17.929" endtime="20220708 06:13:18.058"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 06:13:18.058" endtime="20220708 06:13:18.058"/>
</return>
<msg timestamp="20220708 06:13:18.058" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 06:13:17.928" endtime="20220708 06:13:18.058"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 06:13:18.058" endtime="20220708 06:13:18.058"/>
</return>
<msg timestamp="20220708 06:13:18.058" level="INFO">${new_response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 06:13:17.927" endtime="20220708 06:13:18.058"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${NEW_LABEL_COLOR}</var>
<arg>${new_response}</arg>
<arg>color</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220708 06:13:18.059" endtime="20220708 06:13:18.059"/>
</return>
<msg timestamp="20220708 06:13:18.060" level="INFO">${NEW_LABEL_COLOR} = orange</msg>
<status status="PASS" starttime="20220708 06:13:18.059" endtime="20220708 06:13:18.060"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${NEW_LABEL_NAME}</var>
<arg>${new_response}</arg>
<arg>name</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220708 06:13:18.061" endtime="20220708 06:13:18.061"/>
</return>
<msg timestamp="20220708 06:13:18.061" level="INFO">${NEW_LABEL_NAME} = label3</msg>
<status status="PASS" starttime="20220708 06:13:18.060" endtime="20220708 06:13:18.062"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${NEW_LABEL_COLOR}</arg>
<arg>orange</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220708 06:13:18.062" endtime="20220708 06:13:18.062"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${NEW_LABEL_NAME}</arg>
<arg>label3</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220708 06:13:18.062" endtime="20220708 06:13:18.062"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Label</arg>
<arg>${LABEL_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Label" library="Label">
<arg>${LABEL_ID}</arg>
<doc>Deletes the label with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220708 06:13:18.065" level="INFO">${url} = labels/62c7cafdb97897422fda3a78</msg>
<status status="PASS" starttime="20220708 06:13:18.064" endtime="20220708 06:13:18.065"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220708 06:13:18.202" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 06:13:18.065" endtime="20220708 06:13:18.202"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 06:13:18.203" endtime="20220708 06:13:18.203"/>
</return>
<msg timestamp="20220708 06:13:18.203" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 06:13:18.064" endtime="20220708 06:13:18.203"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 06:13:18.203" endtime="20220708 06:13:18.203"/>
</return>
<status status="PASS" starttime="20220708 06:13:18.063" endtime="20220708 06:13:18.203"/>
</kw>
<status status="PASS" starttime="20220708 06:13:18.063" endtime="20220708 06:13:18.203"/>
</kw>
<doc>Verify that a label's name and color can be updated through API</doc>
<tag>api</tag>
<tag>label.update</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220708 06:13:17.797" endtime="20220708 06:13:18.203"/>
</test>
<test id="s1-s1-s4-t3" name="Delete label on board" line="41">
<kw name="Create A Label" library="Label">
<var>${response}</var>
<arg>name</arg>
<arg>label2</arg>
<arg>color</arg>
<arg>yellow</arg>
<doc>Creates a new label in the given board.
required_args: idBoard
optional_args: name, color
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>idBoard</arg>
<arg>${idBoard}</arg>
<arg>@{optional_args}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220708 06:13:18.206" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220708 06:13:18.205" endtime="20220708 06:13:18.206"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220708 06:13:18.206" endtime="20220708 06:13:18.206"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220708 06:13:18.207" level="INFO">${url} = labels/</msg>
<status status="PASS" starttime="20220708 06:13:18.206" endtime="20220708 06:13:18.207"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220708 06:13:18.332" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 06:13:18.207" endtime="20220708 06:13:18.332"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 06:13:18.333" endtime="20220708 06:13:18.333"/>
</return>
<msg timestamp="20220708 06:13:18.333" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 06:13:18.205" endtime="20220708 06:13:18.333"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 06:13:18.333" endtime="20220708 06:13:18.333"/>
</return>
<msg timestamp="20220708 06:13:18.333" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 06:13:18.204" endtime="20220708 06:13:18.333"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${LABEL_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220708 06:13:18.334" endtime="20220708 06:13:18.334"/>
</return>
<msg timestamp="20220708 06:13:18.335" level="INFO">${LABEL_ID} = 62c7cafe184d411b96a8db9c</msg>
<status status="PASS" starttime="20220708 06:13:18.333" endtime="20220708 06:13:18.335"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Label</arg>
<arg>${LABEL_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Label" library="Label">
<arg>${LABEL_ID}</arg>
<doc>Deletes the label with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220708 06:13:18.337" level="INFO">${url} = labels/62c7cafe184d411b96a8db9c</msg>
<status status="PASS" starttime="20220708 06:13:18.337" endtime="20220708 06:13:18.337"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220708 06:13:18.477" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 06:13:18.337" endtime="20220708 06:13:18.477"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 06:13:18.477" endtime="20220708 06:13:18.478"/>
</return>
<msg timestamp="20220708 06:13:18.478" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 06:13:18.336" endtime="20220708 06:13:18.478"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 06:13:18.478" endtime="20220708 06:13:18.478"/>
</return>
<status status="PASS" starttime="20220708 06:13:18.335" endtime="20220708 06:13:18.478"/>
</kw>
<status status="PASS" starttime="20220708 06:13:18.335" endtime="20220708 06:13:18.478"/>
</kw>
<kw name="Get A Label" library="Label">
<arg>${LABEL_ID}</arg>
<arg>status_code=404</arg>
<doc>Gets the label with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220708 06:13:18.480" level="INFO">${url} = labels/62c7cafe184d411b96a8db9c</msg>
<status status="PASS" starttime="20220708 06:13:18.479" endtime="20220708 06:13:18.480"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220708 06:13:18.549" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220708 06:13:18.480" endtime="20220708 06:13:18.549"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 06:13:18.549" endtime="20220708 06:13:18.549"/>
</return>
<msg timestamp="20220708 06:13:18.549" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220708 06:13:18.479" endtime="20220708 06:13:18.550"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 06:13:18.550" endtime="20220708 06:13:18.550"/>
</return>
<status status="PASS" starttime="20220708 06:13:18.478" endtime="20220708 06:13:18.550"/>
</kw>
<doc>Verify that a label can be deleted through API</doc>
<tag>api</tag>
<tag>label.delete</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220708 06:13:18.204" endtime="20220708 06:13:18.550"/>
</test>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Teardown Board</arg>
<arg>Delete All Sessions</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Teardown Board">
<doc>Delete the board created for this session.</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220708 06:13:18.553" level="INFO">${url} = boards/62c7cafd977d9a4621bb5da0</msg>
<status status="PASS" starttime="20220708 06:13:18.553" endtime="20220708 06:13:18.553"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220708 06:13:18.912" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 06:13:18.554" endtime="20220708 06:13:18.912"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 06:13:18.912" endtime="20220708 06:13:18.912"/>
</return>
<msg timestamp="20220708 06:13:18.913" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 06:13:18.552" endtime="20220708 06:13:18.913"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 06:13:18.913" endtime="20220708 06:13:18.913"/>
</return>
<status status="PASS" starttime="20220708 06:13:18.552" endtime="20220708 06:13:18.913"/>
</kw>
<status status="PASS" starttime="20220708 06:13:18.552" endtime="20220708 06:13:18.913"/>
</kw>
<status status="PASS" starttime="20220708 06:13:18.551" endtime="20220708 06:13:18.913"/>
</kw>
<kw name="Delete All Sessions" library="request_own_library">
<status status="PASS" starttime="20220708 06:13:18.913" endtime="20220708 06:13:18.915"/>
</kw>
<status status="PASS" starttime="20220708 06:13:18.551" endtime="20220708 06:13:18.915"/>
</kw>
<doc>Example Test with Trello API Cards</doc>
<status status="PASS" starttime="20220708 06:13:16.981" endtime="20220708 06:13:18.915"/>
</suite>
<suite id="s1-s1-s5" name="Trello Api Lists Tests" source="/trello/api/trello_api_lists_tests.robot">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Create Trello Session</arg>
<arg>Setup Board</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Create Trello Session" library="TrelloAPI">
<doc>Creates a Trello Session</doc>
<kw name="Create Session" library="request_own_library">
<arg>${API_BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<status status="PASS" starttime="20220708 06:13:18.929" endtime="20220708 06:13:18.929"/>
</kw>
<status status="PASS" starttime="20220708 06:13:18.929" endtime="20220708 06:13:18.930"/>
</kw>
<kw name="Setup Board">
<doc>Create a board and save it's id for the suite</doc>
<kw name="Create A Board" library="Board">
<var>${BOARD}</var>
<arg>TestBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220708 06:13:18.931" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220708 06:13:18.931" endtime="20220708 06:13:18.931"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220708 06:13:18.931" endtime="20220708 06:13:18.931"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220708 06:13:18.932" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220708 06:13:18.931" endtime="20220708 06:13:18.932"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220708 06:13:19.338" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 06:13:18.932" endtime="20220708 06:13:19.338"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 06:13:19.338" endtime="20220708 06:13:19.338"/>
</return>
<msg timestamp="20220708 06:13:19.338" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 06:13:18.930" endtime="20220708 06:13:19.338"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 06:13:19.338" endtime="20220708 06:13:19.338"/>
</return>
<msg timestamp="20220708 06:13:19.339" level="INFO">${BOARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 06:13:18.930" endtime="20220708 06:13:19.339"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Set Suite Variable</arg>
<arg>\${TEST_SUITE_BOARD_ID}</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_BOARD_ID}</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220708 06:13:19.340" level="INFO">${TEST_SUITE_BOARD_ID} = 62c7caff6ded177c4435d94a</msg>
<status status="PASS" starttime="20220708 06:13:19.339" endtime="20220708 06:13:19.340"/>
</kw>
<status status="PASS" starttime="20220708 06:13:19.339" endtime="20220708 06:13:19.340"/>
</kw>
<status status="PASS" starttime="20220708 06:13:18.930" endtime="20220708 06:13:19.341"/>
</kw>
<status status="PASS" starttime="20220708 06:13:18.929" endtime="20220708 06:13:19.341"/>
</kw>
<test id="s1-s1-s5-t1" name="CREATE a list" line="13">
<kw name="Create A List" library="List">
<var>${response}</var>
<arg>NewList</arg>
<doc>Creates a new List
board id
name the list will have
optional_args: idListSource, pos, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>list</arg>
<arg>name</arg>
<arg>${name}</arg>
<arg>idBoard</arg>
<arg>${idBoard}</arg>
<arg>@{optional_args}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220708 06:13:19.343" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220708 06:13:19.342" endtime="20220708 06:13:19.343"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220708 06:13:19.343" endtime="20220708 06:13:19.343"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220708 06:13:19.344" level="INFO">${url} = lists/</msg>
<status status="PASS" starttime="20220708 06:13:19.343" endtime="20220708 06:13:19.344"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220708 06:13:19.480" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 06:13:19.344" endtime="20220708 06:13:19.480"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 06:13:19.480" endtime="20220708 06:13:19.480"/>
</return>
<msg timestamp="20220708 06:13:19.480" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 06:13:19.342" endtime="20220708 06:13:19.480"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 06:13:19.480" endtime="20220708 06:13:19.480"/>
</return>
<msg timestamp="20220708 06:13:19.481" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 06:13:19.341" endtime="20220708 06:13:19.481"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>list</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220708 06:13:19.481" endtime="20220708 06:13:19.483"/>
</kw>
<status status="PASS" starttime="20220708 06:13:19.481" endtime="20220708 06:13:19.484"/>
</kw>
<doc>Verify that a list can be created through API</doc>
<tag>api</tag>
<tag>list.create</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220708 06:13:19.341" endtime="20220708 06:13:19.484"/>
</test>
<test id="s1-s1-s5-t2" name="UPDATE a list" line="19">
<kw name="Create A List" library="List">
<var>${response}</var>
<arg>NewList</arg>
<doc>Creates a new List
board id
name the list will have
optional_args: idListSource, pos, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>list</arg>
<arg>name</arg>
<arg>${name}</arg>
<arg>idBoard</arg>
<arg>${idBoard}</arg>
<arg>@{optional_args}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220708 06:13:19.486" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220708 06:13:19.486" endtime="20220708 06:13:19.486"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220708 06:13:19.486" endtime="20220708 06:13:19.486"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220708 06:13:19.487" level="INFO">${url} = lists/</msg>
<status status="PASS" starttime="20220708 06:13:19.486" endtime="20220708 06:13:19.487"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220708 06:13:19.622" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 06:13:19.487" endtime="20220708 06:13:19.622"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 06:13:19.622" endtime="20220708 06:13:19.622"/>
</return>
<msg timestamp="20220708 06:13:19.623" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 06:13:19.485" endtime="20220708 06:13:19.623"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 06:13:19.623" endtime="20220708 06:13:19.623"/>
</return>
<msg timestamp="20220708 06:13:19.623" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 06:13:19.485" endtime="20220708 06:13:19.623"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>list</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220708 06:13:19.624" endtime="20220708 06:13:19.626"/>
</kw>
<status status="PASS" starttime="20220708 06:13:19.623" endtime="20220708 06:13:19.626"/>
</kw>
<kw name="Update A List" library="List">
<arg>${response.json()}[id]</arg>
<arg>name</arg>
<arg>NewName</arg>
<doc>Updates the board with the given ID
optional_args: name, idListSource, pos, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>list</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220708 06:13:19.628" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220708 06:13:19.627" endtime="20220708 06:13:19.628"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220708 06:13:19.628" endtime="20220708 06:13:19.628"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220708 06:13:19.629" level="INFO">${url} = lists/62c7cafffe8a6b7fa24f8794</msg>
<status status="PASS" starttime="20220708 06:13:19.628" endtime="20220708 06:13:19.629"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220708 06:13:19.740" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 06:13:19.629" endtime="20220708 06:13:19.740"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 06:13:19.740" endtime="20220708 06:13:19.740"/>
</return>
<msg timestamp="20220708 06:13:19.741" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 06:13:19.627" endtime="20220708 06:13:19.741"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 06:13:19.741" endtime="20220708 06:13:19.741"/>
</return>
<status status="PASS" starttime="20220708 06:13:19.626" endtime="20220708 06:13:19.741"/>
</kw>
<kw name="Get A List" library="List">
<var>${new_response}</var>
<arg>${response.json()}[id]</arg>
<doc>Gets the List with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>list</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220708 06:13:19.743" level="INFO">${url} = lists/62c7cafffe8a6b7fa24f8794</msg>
<status status="PASS" starttime="20220708 06:13:19.743" endtime="20220708 06:13:19.743"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220708 06:13:19.828" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 06:13:19.743" endtime="20220708 06:13:19.828"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 06:13:19.828" endtime="20220708 06:13:19.828"/>
</return>
<msg timestamp="20220708 06:13:19.829" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 06:13:19.742" endtime="20220708 06:13:19.829"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 06:13:19.829" endtime="20220708 06:13:19.829"/>
</return>
<msg timestamp="20220708 06:13:19.829" level="INFO">${new_response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 06:13:19.741" endtime="20220708 06:13:19.829"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${new_response}</arg>
<arg>list</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220708 06:13:19.830" endtime="20220708 06:13:19.831"/>
</kw>
<status status="PASS" starttime="20220708 06:13:19.829" endtime="20220708 06:13:19.832"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${new_response.json()}[name]</arg>
<arg>NewName</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220708 06:13:19.832" endtime="20220708 06:13:19.832"/>
</kw>
<doc>Verify that a lists name can be updated through API</doc>
<tag>api</tag>
<tag>list.update</tag>
<tag>regression</tag>
<status status="PASS" starttime="20220708 06:13:19.484" endtime="20220708 06:13:19.833"/>
</test>
<test id="s1-s1-s5-t3" name="ARCHIVE A list" line="29">
<kw name="Create A List" library="List">
<var>${response}</var>
<arg>NewList</arg>
<doc>Creates a new List
board id
name the list will have
optional_args: idListSource, pos, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>list</arg>
<arg>name</arg>
<arg>${name}</arg>
<arg>idBoard</arg>
<arg>${idBoard}</arg>
<arg>@{optional_args}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220708 06:13:19.836" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220708 06:13:19.836" endtime="20220708 06:13:19.836"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220708 06:13:19.836" endtime="20220708 06:13:19.837"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220708 06:13:19.837" level="INFO">${url} = lists/</msg>
<status status="PASS" starttime="20220708 06:13:19.837" endtime="20220708 06:13:19.837"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220708 06:13:19.982" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 06:13:19.838" endtime="20220708 06:13:19.982"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 06:13:19.982" endtime="20220708 06:13:19.982"/>
</return>
<msg timestamp="20220708 06:13:19.983" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 06:13:19.835" endtime="20220708 06:13:19.983"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 06:13:19.983" endtime="20220708 06:13:19.983"/>
</return>
<msg timestamp="20220708 06:13:19.983" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 06:13:19.834" endtime="20220708 06:13:19.983"/>
</kw>
<kw name="Archive A List" library="List">
<arg>${response.json()}[id]</arg>
<doc>Deletes the list with the given ID</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>archive_list</arg>
<arg>${id}</arg>
<arg>value</arg>
<arg>true</arg>
<arg>status_code=${status_code}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220708 06:13:19.985" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220708 06:13:19.985" endtime="20220708 06:13:19.985"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220708 06:13:19.985" endtime="20220708 06:13:19.986"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220708 06:13:19.986" level="INFO">${url} = lists/62c7caff93c83c7bb4620c80/closed</msg>
<status status="PASS" starttime="20220708 06:13:19.986" endtime="20220708 06:13:19.986"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220708 06:13:20.111" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 06:13:19.986" endtime="20220708 06:13:20.111"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 06:13:20.111" endtime="20220708 06:13:20.111"/>
</return>
<msg timestamp="20220708 06:13:20.111" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 06:13:19.984" endtime="20220708 06:13:20.111"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 06:13:20.111" endtime="20220708 06:13:20.111"/>
</return>
<status status="PASS" starttime="20220708 06:13:19.983" endtime="20220708 06:13:20.112"/>
</kw>
<kw name="Get A List" library="List">
<var>${new_response}</var>
<arg>${response.json()}[id]</arg>
<doc>Gets the List with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>list</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220708 06:13:20.113" level="INFO">${url} = lists/62c7caff93c83c7bb4620c80</msg>
<status status="PASS" starttime="20220708 06:13:20.113" endtime="20220708 06:13:20.113"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220708 06:13:20.188" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 06:13:20.114" endtime="20220708 06:13:20.188"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 06:13:20.188" endtime="20220708 06:13:20.189"/>
</return>
<msg timestamp="20220708 06:13:20.189" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 06:13:20.113" endtime="20220708 06:13:20.189"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 06:13:20.189" endtime="20220708 06:13:20.189"/>
</return>
<msg timestamp="20220708 06:13:20.189" level="INFO">${new_response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 06:13:20.112" endtime="20220708 06:13:20.189"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${new_response.json()}[closed]</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220708 06:13:20.189" endtime="20220708 06:13:20.190"/>
</kw>
<doc>Verify that a list can be archived through API</doc>
<tag>api</tag>
<tag>list.archive</tag>
<tag>regression</tag>
<status status="PASS" starttime="20220708 06:13:19.833" endtime="20220708 06:13:20.191"/>
</test>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Teardown Board</arg>
<arg>Delete All Sessions</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Teardown Board">
<doc>Delete the board created for this suite.</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220708 06:13:20.194" level="INFO">${url} = boards/62c7caff6ded177c4435d94a</msg>
<status status="PASS" starttime="20220708 06:13:20.194" endtime="20220708 06:13:20.194"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220708 06:13:20.602" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 06:13:20.194" endtime="20220708 06:13:20.602"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 06:13:20.602" endtime="20220708 06:13:20.602"/>
</return>
<msg timestamp="20220708 06:13:20.603" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220708 06:13:20.193" endtime="20220708 06:13:20.603"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220708 06:13:20.603" endtime="20220708 06:13:20.603"/>
</return>
<status status="PASS" starttime="20220708 06:13:20.193" endtime="20220708 06:13:20.603"/>
</kw>
<status status="PASS" starttime="20220708 06:13:20.193" endtime="20220708 06:13:20.603"/>
</kw>
<status status="PASS" starttime="20220708 06:13:20.192" endtime="20220708 06:13:20.603"/>
</kw>
<kw name="Delete All Sessions" library="request_own_library">
<status status="PASS" starttime="20220708 06:13:20.603" endtime="20220708 06:13:20.605"/>
</kw>
<status status="PASS" starttime="20220708 06:13:20.191" endtime="20220708 06:13:20.605"/>
</kw>
<doc>Example Test with Trello API lists</doc>
<status status="PASS" starttime="20220708 06:13:18.916" endtime="20220708 06:13:20.605"/>
</suite>
<status status="PASS" starttime="20220708 06:13:06.646" endtime="20220708 06:13:20.607"/>
</suite>
<status status="PASS" starttime="20220708 06:13:06.626" endtime="20220708 06:13:20.610"/>
</suite>
<statistics>
<total>
<stat pass="18" fail="0" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="18" fail="0" skip="0">api</stat>
<stat pass="1" fail="0" skip="0">board.create</stat>
<stat pass="1" fail="0" skip="0">board.delete</stat>
<stat pass="1" fail="0" skip="0">board.get</stat>
<stat pass="2" fail="0" skip="0">board.update</stat>
<stat pass="1" fail="0" skip="0">card.close</stat>
<stat pass="1" fail="0" skip="0">card.create</stat>
<stat pass="1" fail="0" skip="0">card.delete</stat>
<stat pass="1" fail="0" skip="0">card.update</stat>
<stat pass="1" fail="0" skip="0">checklist.create</stat>
<stat pass="1" fail="0" skip="0">checklist.delete</stat>
<stat pass="1" fail="0" skip="0">checklist.update</stat>
<stat pass="1" fail="0" skip="0">label.create</stat>
<stat pass="1" fail="0" skip="0">label.delete</stat>
<stat pass="1" fail="0" skip="0">label.get</stat>
<stat pass="1" fail="0" skip="0">label.update</stat>
<stat pass="1" fail="0" skip="0">list.archive</stat>
<stat pass="1" fail="0" skip="0">list.create</stat>
<stat pass="1" fail="0" skip="0">list.update</stat>
<stat pass="5" fail="0" skip="0">regression</stat>
<stat pass="13" fail="0" skip="0">smoke</stat>
</tag>
<suite>
<stat pass="18" fail="0" skip="0" id="s1" name="Trello">Trello</stat>
<stat pass="18" fail="0" skip="0" id="s1-s1" name="Api">Trello.Api</stat>
<stat pass="5" fail="0" skip="0" id="s1-s1-s1" name="Trello Api Boards Tests">Trello.Api.Trello Api Boards Tests</stat>
<stat pass="4" fail="0" skip="0" id="s1-s1-s2" name="Trello Api Cards Tests">Trello.Api.Trello Api Cards Tests</stat>
<stat pass="3" fail="0" skip="0" id="s1-s1-s3" name="Trello Api Checklists Tests">Trello.Api.Trello Api Checklists Tests</stat>
<stat pass="3" fail="0" skip="0" id="s1-s1-s4" name="Trello Api Labels Tests">Trello.Api.Trello Api Labels Tests</stat>
<stat pass="3" fail="0" skip="0" id="s1-s1-s5" name="Trello Api Lists Tests">Trello.Api.Trello Api Lists Tests</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
