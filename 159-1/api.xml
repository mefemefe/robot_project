<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 5.0.1 (Python 3.10.5 on linux)" generated="20220705 18:29:09.534" rpa="false" schemaversion="3">
<suite id="s1" name="Trello" source="/trello">
<suite id="s1-s1" name="Api" source="/trello/api">
<suite id="s1-s1-s1" name="Trello Api Boards Tests" source="/trello/api/trello_api_boards_tests.robot">
<kw name="Create Trello Session" library="TrelloAPI" type="SETUP">
<doc>Creates a Trello Session</doc>
<kw name="Create Session" library="request_own_library">
<arg>${API_BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<status status="PASS" starttime="20220705 18:29:09.663" endtime="20220705 18:29:09.663"/>
</kw>
<status status="PASS" starttime="20220705 18:29:09.660" endtime="20220705 18:29:09.663"/>
</kw>
<test id="s1-s1-s1-t1" name="CREATE a board" line="9">
<kw name="Create A Board" library="Board">
<var>${response}</var>
<arg>NewBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 18:29:09.665" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 18:29:09.665" endtime="20220705 18:29:09.665"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 18:29:09.665" endtime="20220705 18:29:09.666"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 18:29:09.666" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220705 18:29:09.666" endtime="20220705 18:29:09.666"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 18:29:10.059" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 18:29:09.666" endtime="20220705 18:29:10.059"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 18:29:10.059" endtime="20220705 18:29:10.059"/>
</return>
<msg timestamp="20220705 18:29:10.059" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 18:29:09.665" endtime="20220705 18:29:10.059"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 18:29:10.059" endtime="20220705 18:29:10.059"/>
</return>
<msg timestamp="20220705 18:29:10.059" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 18:29:09.664" endtime="20220705 18:29:10.059"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>board</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 18:29:10.060" endtime="20220705 18:29:10.064"/>
</kw>
<status status="PASS" starttime="20220705 18:29:10.060" endtime="20220705 18:29:10.064"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${response.json()}[id]</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${response.json()}[id]</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 18:29:10.066" level="INFO">${url} = boards/62c482f5500c2e76540b0bed</msg>
<status status="PASS" starttime="20220705 18:29:10.066" endtime="20220705 18:29:10.066"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 18:29:10.485" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 18:29:10.067" endtime="20220705 18:29:10.485"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 18:29:10.485" endtime="20220705 18:29:10.485"/>
</return>
<msg timestamp="20220705 18:29:10.485" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 18:29:10.066" endtime="20220705 18:29:10.485"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 18:29:10.485" endtime="20220705 18:29:10.485"/>
</return>
<status status="PASS" starttime="20220705 18:29:10.065" endtime="20220705 18:29:10.485"/>
</kw>
<status status="PASS" starttime="20220705 18:29:10.065" endtime="20220705 18:29:10.485"/>
</kw>
<doc>Verify that a board can be create through API</doc>
<tag>api</tag>
<tag>board.create</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220705 18:29:09.664" endtime="20220705 18:29:10.485"/>
</test>
<test id="s1-s1-s1-t2" name="UPDATE a Board's name" line="16">
<kw name="Create A Board" library="Board">
<var>${response}</var>
<arg>NewBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 18:29:10.487" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 18:29:10.487" endtime="20220705 18:29:10.487"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 18:29:10.487" endtime="20220705 18:29:10.488"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 18:29:10.488" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220705 18:29:10.488" endtime="20220705 18:29:10.488"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 18:29:10.727" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 18:29:10.488" endtime="20220705 18:29:10.727"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 18:29:10.727" endtime="20220705 18:29:10.727"/>
</return>
<msg timestamp="20220705 18:29:10.727" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 18:29:10.487" endtime="20220705 18:29:10.727"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 18:29:10.727" endtime="20220705 18:29:10.727"/>
</return>
<msg timestamp="20220705 18:29:10.727" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 18:29:10.486" endtime="20220705 18:29:10.728"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>board</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 18:29:10.728" endtime="20220705 18:29:10.732"/>
</kw>
<status status="PASS" starttime="20220705 18:29:10.728" endtime="20220705 18:29:10.732"/>
</kw>
<kw name="Update A Board" library="Board">
<arg>${response.json()}[id]</arg>
<arg>name</arg>
<arg>NewName</arg>
<doc>Updates the board with the given ID
optional_args: name, desc, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 18:29:10.733" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 18:29:10.733" endtime="20220705 18:29:10.733"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 18:29:10.733" endtime="20220705 18:29:10.734"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 18:29:10.734" level="INFO">${url} = boards/62c482f65212d08d94e82d79</msg>
<status status="PASS" starttime="20220705 18:29:10.734" endtime="20220705 18:29:10.734"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 18:29:10.912" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 18:29:10.734" endtime="20220705 18:29:10.912"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 18:29:10.912" endtime="20220705 18:29:10.912"/>
</return>
<msg timestamp="20220705 18:29:10.913" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 18:29:10.733" endtime="20220705 18:29:10.913"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 18:29:10.913" endtime="20220705 18:29:10.913"/>
</return>
<status status="PASS" starttime="20220705 18:29:10.732" endtime="20220705 18:29:10.913"/>
</kw>
<kw name="Get A Board" library="Board">
<var>${new_response}</var>
<arg>${response.json()}[id]</arg>
<doc>Gets the Board with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 18:29:10.915" level="INFO">${url} = boards/62c482f65212d08d94e82d79</msg>
<status status="PASS" starttime="20220705 18:29:10.914" endtime="20220705 18:29:10.915"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 18:29:11.027" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 18:29:10.915" endtime="20220705 18:29:11.027"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 18:29:11.027" endtime="20220705 18:29:11.028"/>
</return>
<msg timestamp="20220705 18:29:11.028" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 18:29:10.914" endtime="20220705 18:29:11.028"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 18:29:11.028" endtime="20220705 18:29:11.028"/>
</return>
<msg timestamp="20220705 18:29:11.028" level="INFO">${new_response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 18:29:10.913" endtime="20220705 18:29:11.028"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${new_response}</arg>
<arg>board</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 18:29:11.029" endtime="20220705 18:29:11.032"/>
</kw>
<status status="PASS" starttime="20220705 18:29:11.028" endtime="20220705 18:29:11.032"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${new_response.json()}[name]</arg>
<arg>NewName</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220705 18:29:11.033" endtime="20220705 18:29:11.033"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${response.json()}[id]</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${response.json()}[id]</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 18:29:11.035" level="INFO">${url} = boards/62c482f65212d08d94e82d79</msg>
<status status="PASS" starttime="20220705 18:29:11.035" endtime="20220705 18:29:11.035"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 18:29:11.437" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 18:29:11.036" endtime="20220705 18:29:11.437"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 18:29:11.437" endtime="20220705 18:29:11.437"/>
</return>
<msg timestamp="20220705 18:29:11.438" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 18:29:11.034" endtime="20220705 18:29:11.438"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 18:29:11.438" endtime="20220705 18:29:11.438"/>
</return>
<status status="PASS" starttime="20220705 18:29:11.034" endtime="20220705 18:29:11.438"/>
</kw>
<status status="PASS" starttime="20220705 18:29:11.033" endtime="20220705 18:29:11.438"/>
</kw>
<doc>Verify that a board's name can be updated through API</doc>
<tag>api</tag>
<tag>board.update</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220705 18:29:10.486" endtime="20220705 18:29:11.438"/>
</test>
<test id="s1-s1-s1-t3" name="DELETE A Board" line="27">
<kw name="Create A Board" library="Board">
<var>${response}</var>
<arg>NewBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 18:29:11.441" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 18:29:11.441" endtime="20220705 18:29:11.441"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 18:29:11.441" endtime="20220705 18:29:11.441"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 18:29:11.442" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220705 18:29:11.441" endtime="20220705 18:29:11.442"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 18:29:11.683" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 18:29:11.442" endtime="20220705 18:29:11.683"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 18:29:11.683" endtime="20220705 18:29:11.683"/>
</return>
<msg timestamp="20220705 18:29:11.684" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 18:29:11.440" endtime="20220705 18:29:11.684"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 18:29:11.684" endtime="20220705 18:29:11.684"/>
</return>
<msg timestamp="20220705 18:29:11.684" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 18:29:11.440" endtime="20220705 18:29:11.684"/>
</kw>
<kw name="Delete A Board" library="Board">
<arg>${response.json()}[id]</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 18:29:11.686" level="INFO">${url} = boards/62c482f7f622b67ba8ff37ae</msg>
<status status="PASS" starttime="20220705 18:29:11.685" endtime="20220705 18:29:11.686"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 18:29:12.068" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 18:29:11.686" endtime="20220705 18:29:12.068"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 18:29:12.068" endtime="20220705 18:29:12.069"/>
</return>
<msg timestamp="20220705 18:29:12.069" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 18:29:11.685" endtime="20220705 18:29:12.069"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 18:29:12.069" endtime="20220705 18:29:12.069"/>
</return>
<status status="PASS" starttime="20220705 18:29:11.684" endtime="20220705 18:29:12.069"/>
</kw>
<kw name="Get A Board" library="Board">
<arg>${response.json()}[id]</arg>
<arg>status_code=404</arg>
<doc>Gets the Board with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 18:29:12.071" level="INFO">${url} = boards/62c482f7f622b67ba8ff37ae</msg>
<status status="PASS" starttime="20220705 18:29:12.070" endtime="20220705 18:29:12.071"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 18:29:12.182" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220705 18:29:12.071" endtime="20220705 18:29:12.182"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 18:29:12.182" endtime="20220705 18:29:12.182"/>
</return>
<msg timestamp="20220705 18:29:12.182" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220705 18:29:12.070" endtime="20220705 18:29:12.182"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 18:29:12.182" endtime="20220705 18:29:12.182"/>
</return>
<status status="PASS" starttime="20220705 18:29:12.069" endtime="20220705 18:29:12.182"/>
</kw>
<doc>Verify that a board can be deleted through API</doc>
<tag>api</tag>
<tag>board.delete</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220705 18:29:11.438" endtime="20220705 18:29:12.182"/>
</test>
<test id="s1-s1-s1-t4" name="GET Information of A Board" line="34">
<kw name="Create A Board" library="Board">
<var>${response}</var>
<arg>BoardTest</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 18:29:12.184" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 18:29:12.184" endtime="20220705 18:29:12.184"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 18:29:12.184" endtime="20220705 18:29:12.185"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 18:29:12.185" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220705 18:29:12.185" endtime="20220705 18:29:12.185"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 18:29:12.406" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 18:29:12.185" endtime="20220705 18:29:12.406"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 18:29:12.406" endtime="20220705 18:29:12.406"/>
</return>
<msg timestamp="20220705 18:29:12.406" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 18:29:12.184" endtime="20220705 18:29:12.406"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 18:29:12.406" endtime="20220705 18:29:12.406"/>
</return>
<msg timestamp="20220705 18:29:12.406" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 18:29:12.183" endtime="20220705 18:29:12.406"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>board</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 18:29:12.407" endtime="20220705 18:29:12.411"/>
</kw>
<status status="PASS" starttime="20220705 18:29:12.406" endtime="20220705 18:29:12.411"/>
</kw>
<kw name="Get A Board" library="Board">
<var>${response2}</var>
<arg>${response.json()}[id]</arg>
<doc>Gets the Board with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 18:29:12.413" level="INFO">${url} = boards/62c482f81249e814cf73ff7a</msg>
<status status="PASS" starttime="20220705 18:29:12.413" endtime="20220705 18:29:12.413"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 18:29:12.534" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 18:29:12.413" endtime="20220705 18:29:12.534"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 18:29:12.534" endtime="20220705 18:29:12.534"/>
</return>
<msg timestamp="20220705 18:29:12.535" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 18:29:12.412" endtime="20220705 18:29:12.535"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 18:29:12.535" endtime="20220705 18:29:12.535"/>
</return>
<msg timestamp="20220705 18:29:12.535" level="INFO">${response2} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 18:29:12.412" endtime="20220705 18:29:12.535"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response2}</arg>
<arg>board</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 18:29:12.535" endtime="20220705 18:29:12.539"/>
</kw>
<status status="PASS" starttime="20220705 18:29:12.535" endtime="20220705 18:29:12.539"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${response2.json()}[name]</arg>
<arg>BoardTest</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220705 18:29:12.539" endtime="20220705 18:29:12.540"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${response.json()}[id]</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${response.json()}[id]</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 18:29:12.542" level="INFO">${url} = boards/62c482f81249e814cf73ff7a</msg>
<status status="PASS" starttime="20220705 18:29:12.542" endtime="20220705 18:29:12.542"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 18:29:12.996" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 18:29:12.543" endtime="20220705 18:29:12.996"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 18:29:12.996" endtime="20220705 18:29:12.996"/>
</return>
<msg timestamp="20220705 18:29:12.997" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 18:29:12.541" endtime="20220705 18:29:12.997"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 18:29:12.997" endtime="20220705 18:29:12.997"/>
</return>
<status status="PASS" starttime="20220705 18:29:12.541" endtime="20220705 18:29:12.997"/>
</kw>
<status status="PASS" starttime="20220705 18:29:12.540" endtime="20220705 18:29:12.997"/>
</kw>
<doc>Verify that a board's information can be accesed through API</doc>
<tag>api</tag>
<tag>board.get</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220705 18:29:12.183" endtime="20220705 18:29:12.997"/>
</test>
<test id="s1-s1-s1-t5" name="UPDATE a Board's description" line="45">
<kw name="Create A Board" library="Board">
<var>${response}</var>
<arg>NewBoardForTest</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 18:29:12.999" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 18:29:12.999" endtime="20220705 18:29:12.999"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 18:29:12.999" endtime="20220705 18:29:12.999"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 18:29:13.000" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220705 18:29:13.000" endtime="20220705 18:29:13.000"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 18:29:13.248" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 18:29:13.000" endtime="20220705 18:29:13.248"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 18:29:13.248" endtime="20220705 18:29:13.248"/>
</return>
<msg timestamp="20220705 18:29:13.248" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 18:29:12.998" endtime="20220705 18:29:13.249"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 18:29:13.249" endtime="20220705 18:29:13.249"/>
</return>
<msg timestamp="20220705 18:29:13.249" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 18:29:12.998" endtime="20220705 18:29:13.249"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>board</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 18:29:13.249" endtime="20220705 18:29:13.253"/>
</kw>
<status status="PASS" starttime="20220705 18:29:13.249" endtime="20220705 18:29:13.253"/>
</kw>
<kw name="Update A Board" library="Board">
<arg>${response.json()}[id]</arg>
<arg>desc</arg>
<arg>sampleDescription</arg>
<doc>Updates the board with the given ID
optional_args: name, desc, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 18:29:13.255" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 18:29:13.255" endtime="20220705 18:29:13.255"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 18:29:13.255" endtime="20220705 18:29:13.255"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 18:29:13.255" level="INFO">${url} = boards/62c482f96732178765a77ed9</msg>
<status status="PASS" starttime="20220705 18:29:13.255" endtime="20220705 18:29:13.255"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 18:29:13.457" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 18:29:13.255" endtime="20220705 18:29:13.457"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 18:29:13.457" endtime="20220705 18:29:13.457"/>
</return>
<msg timestamp="20220705 18:29:13.458" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 18:29:13.254" endtime="20220705 18:29:13.458"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 18:29:13.458" endtime="20220705 18:29:13.458"/>
</return>
<status status="PASS" starttime="20220705 18:29:13.253" endtime="20220705 18:29:13.458"/>
</kw>
<kw name="Get A Board" library="Board">
<var>${new_response}</var>
<arg>${response.json()}[id]</arg>
<doc>Gets the Board with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 18:29:13.460" level="INFO">${url} = boards/62c482f96732178765a77ed9</msg>
<status status="PASS" starttime="20220705 18:29:13.459" endtime="20220705 18:29:13.460"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 18:29:13.579" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 18:29:13.460" endtime="20220705 18:29:13.579"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 18:29:13.579" endtime="20220705 18:29:13.579"/>
</return>
<msg timestamp="20220705 18:29:13.580" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 18:29:13.459" endtime="20220705 18:29:13.580"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 18:29:13.580" endtime="20220705 18:29:13.580"/>
</return>
<msg timestamp="20220705 18:29:13.580" level="INFO">${new_response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 18:29:13.458" endtime="20220705 18:29:13.580"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${new_response.json()}[desc]</arg>
<arg>sampleDescription</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220705 18:29:13.580" endtime="20220705 18:29:13.581"/>
</kw>
<kw name="Update A Board" library="Board">
<arg>${response.json()}[id]</arg>
<arg>desc</arg>
<arg>updatedDescription</arg>
<doc>Updates the board with the given ID
optional_args: name, desc, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 18:29:13.582" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 18:29:13.582" endtime="20220705 18:29:13.583"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 18:29:13.583" endtime="20220705 18:29:13.583"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 18:29:13.583" level="INFO">${url} = boards/62c482f96732178765a77ed9</msg>
<status status="PASS" starttime="20220705 18:29:13.583" endtime="20220705 18:29:13.583"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 18:29:13.770" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 18:29:13.583" endtime="20220705 18:29:13.770"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 18:29:13.770" endtime="20220705 18:29:13.770"/>
</return>
<msg timestamp="20220705 18:29:13.770" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 18:29:13.582" endtime="20220705 18:29:13.770"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 18:29:13.770" endtime="20220705 18:29:13.771"/>
</return>
<status status="PASS" starttime="20220705 18:29:13.581" endtime="20220705 18:29:13.771"/>
</kw>
<kw name="Get A Board" library="Board">
<var>${new_response2}</var>
<arg>${response.json()}[id]</arg>
<doc>Gets the Board with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 18:29:13.772" level="INFO">${url} = boards/62c482f96732178765a77ed9</msg>
<status status="PASS" starttime="20220705 18:29:13.772" endtime="20220705 18:29:13.772"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 18:29:13.907" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 18:29:13.773" endtime="20220705 18:29:13.907"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 18:29:13.907" endtime="20220705 18:29:13.907"/>
</return>
<msg timestamp="20220705 18:29:13.907" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 18:29:13.772" endtime="20220705 18:29:13.907"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 18:29:13.907" endtime="20220705 18:29:13.907"/>
</return>
<msg timestamp="20220705 18:29:13.907" level="INFO">${new_response2} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 18:29:13.771" endtime="20220705 18:29:13.908"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${new_response2.json()}[desc]</arg>
<arg>updatedDescription</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220705 18:29:13.908" endtime="20220705 18:29:13.908"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${response.json()}[id]</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${response.json()}[id]</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 18:29:13.910" level="INFO">${url} = boards/62c482f96732178765a77ed9</msg>
<status status="PASS" starttime="20220705 18:29:13.910" endtime="20220705 18:29:13.910"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 18:29:14.333" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 18:29:13.910" endtime="20220705 18:29:14.333"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 18:29:14.333" endtime="20220705 18:29:14.333"/>
</return>
<msg timestamp="20220705 18:29:14.333" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 18:29:13.910" endtime="20220705 18:29:14.333"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 18:29:14.333" endtime="20220705 18:29:14.333"/>
</return>
<status status="PASS" starttime="20220705 18:29:13.909" endtime="20220705 18:29:14.333"/>
</kw>
<status status="PASS" starttime="20220705 18:29:13.909" endtime="20220705 18:29:14.333"/>
</kw>
<doc>Verify that a board's description can be updated through API</doc>
<tag>api</tag>
<tag>board.update</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220705 18:29:12.997" endtime="20220705 18:29:14.333"/>
</test>
<kw name="Delete All Sessions" library="request_own_library" type="TEARDOWN">
<status status="PASS" starttime="20220705 18:29:14.335" endtime="20220705 18:29:14.335"/>
</kw>
<doc>Example Test with Trello API Boards</doc>
<status status="PASS" starttime="20220705 18:29:09.554" endtime="20220705 18:29:14.336"/>
</suite>
<suite id="s1-s1-s2" name="Trello Api Cards Tests" source="/trello/api/trello_api_cards_tests.robot">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Create Trello Session</arg>
<arg>Setup Board And List</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Create Trello Session" library="TrelloAPI">
<doc>Creates a Trello Session</doc>
<kw name="Create Session" library="request_own_library">
<arg>${API_BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<status status="PASS" starttime="20220705 18:29:14.347" endtime="20220705 18:29:14.347"/>
</kw>
<status status="PASS" starttime="20220705 18:29:14.346" endtime="20220705 18:29:14.347"/>
</kw>
<kw name="Setup Board And List">
<doc>Create a board and save its ID and its first list's ID</doc>
<kw name="Create A Board" library="Board">
<var>${BOARD}</var>
<arg>TestBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 18:29:14.348" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 18:29:14.348" endtime="20220705 18:29:14.348"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 18:29:14.348" endtime="20220705 18:29:14.348"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 18:29:14.349" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220705 18:29:14.348" endtime="20220705 18:29:14.349"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 18:29:14.637" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 18:29:14.349" endtime="20220705 18:29:14.637"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 18:29:14.637" endtime="20220705 18:29:14.637"/>
</return>
<msg timestamp="20220705 18:29:14.638" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 18:29:14.347" endtime="20220705 18:29:14.638"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 18:29:14.638" endtime="20220705 18:29:14.638"/>
</return>
<msg timestamp="20220705 18:29:14.638" level="INFO">${BOARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 18:29:14.347" endtime="20220705 18:29:14.638"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_BOARD_ID}</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220705 18:29:14.639" level="INFO">${TEST_SUITE_BOARD_ID} = 62c482fa7cef5722d1c9dd67</msg>
<status status="PASS" starttime="20220705 18:29:14.638" endtime="20220705 18:29:14.639"/>
</kw>
<kw name="Get Lists On A Board" library="Board">
<var>${LISTS}</var>
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Get all the lists in a board</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>lists_on_board</arg>
<arg>${id}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 18:29:14.640" level="INFO">${url} = boards/62c482fa7cef5722d1c9dd67/lists/</msg>
<status status="PASS" starttime="20220705 18:29:14.640" endtime="20220705 18:29:14.640"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 18:29:14.757" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 18:29:14.640" endtime="20220705 18:29:14.757"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 18:29:14.757" endtime="20220705 18:29:14.757"/>
</return>
<msg timestamp="20220705 18:29:14.757" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 18:29:14.639" endtime="20220705 18:29:14.757"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 18:29:14.757" endtime="20220705 18:29:14.757"/>
</return>
<msg timestamp="20220705 18:29:14.757" level="INFO">${LISTS} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 18:29:14.639" endtime="20220705 18:29:14.757"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_LIST_ID}</arg>
<arg>${LISTS.json()}[0][id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220705 18:29:14.758" level="INFO">${TEST_SUITE_LIST_ID} = 62c482fa7cef5722d1c9dd6e</msg>
<status status="PASS" starttime="20220705 18:29:14.758" endtime="20220705 18:29:14.758"/>
</kw>
<status status="PASS" starttime="20220705 18:29:14.347" endtime="20220705 18:29:14.758"/>
</kw>
<status status="PASS" starttime="20220705 18:29:14.346" endtime="20220705 18:29:14.759"/>
</kw>
<test id="s1-s1-s2-t1" name="Verify A Card Can Be Created" line="13">
<kw name="Create A Card" library="Card">
<var>${response}</var>
<arg>name</arg>
<arg>RFCard2</arg>
<doc>Creates a new card in the given list.
required_args: listId
optional_args: name, desc, pos, idCardSource, idLabels, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>@{optional_args}</arg>
<arg>idList</arg>
<arg>${idList}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 18:29:14.760" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 18:29:14.760" endtime="20220705 18:29:14.760"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 18:29:14.760" endtime="20220705 18:29:14.761"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 18:29:14.761" level="INFO">${url} = cards/</msg>
<status status="PASS" starttime="20220705 18:29:14.761" endtime="20220705 18:29:14.761"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 18:29:15.007" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 18:29:14.761" endtime="20220705 18:29:15.007"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 18:29:15.007" endtime="20220705 18:29:15.007"/>
</return>
<msg timestamp="20220705 18:29:15.007" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 18:29:14.760" endtime="20220705 18:29:15.007"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 18:29:15.007" endtime="20220705 18:29:15.007"/>
</return>
<msg timestamp="20220705 18:29:15.007" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 18:29:14.759" endtime="20220705 18:29:15.007"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>card</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 18:29:15.008" endtime="20220705 18:29:15.012"/>
</kw>
<status status="PASS" starttime="20220705 18:29:15.007" endtime="20220705 18:29:15.013"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 18:29:15.013" endtime="20220705 18:29:15.013"/>
</return>
<msg timestamp="20220705 18:29:15.014" level="INFO">${CARD_ID} = 62c482fad80f403cd5c66a3e</msg>
<status status="PASS" starttime="20220705 18:29:15.013" endtime="20220705 18:29:15.014"/>
</kw>
<kw name="Get A Card" library="Card">
<var>${response}</var>
<arg>${CARD_ID}</arg>
<doc>Gets the card with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 18:29:15.015" level="INFO">${url} = cards/62c482fad80f403cd5c66a3e</msg>
<status status="PASS" starttime="20220705 18:29:15.015" endtime="20220705 18:29:15.015"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 18:29:15.139" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 18:29:15.015" endtime="20220705 18:29:15.139"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 18:29:15.139" endtime="20220705 18:29:15.139"/>
</return>
<msg timestamp="20220705 18:29:15.139" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 18:29:15.014" endtime="20220705 18:29:15.140"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 18:29:15.140" endtime="20220705 18:29:15.140"/>
</return>
<msg timestamp="20220705 18:29:15.140" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 18:29:15.014" endtime="20220705 18:29:15.140"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_NAME}</var>
<arg>${response}</arg>
<arg>name</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 18:29:15.140" endtime="20220705 18:29:15.140"/>
</return>
<msg timestamp="20220705 18:29:15.141" level="INFO">${CARD_NAME} = RFCard2</msg>
<status status="PASS" starttime="20220705 18:29:15.140" endtime="20220705 18:29:15.141"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${CARD_NAME}</arg>
<arg>RFCard2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220705 18:29:15.141" endtime="20220705 18:29:15.141"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Card</arg>
<arg>${CARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Card" library="Card">
<arg>${CARD_ID}</arg>
<doc>Deletes the card with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 18:29:15.143" level="INFO">${url} = cards/62c482fad80f403cd5c66a3e</msg>
<status status="PASS" starttime="20220705 18:29:15.143" endtime="20220705 18:29:15.143"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 18:29:15.384" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 18:29:15.143" endtime="20220705 18:29:15.384"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 18:29:15.385" endtime="20220705 18:29:15.385"/>
</return>
<msg timestamp="20220705 18:29:15.385" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 18:29:15.142" endtime="20220705 18:29:15.385"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 18:29:15.385" endtime="20220705 18:29:15.385"/>
</return>
<status status="PASS" starttime="20220705 18:29:15.142" endtime="20220705 18:29:15.385"/>
</kw>
<status status="PASS" starttime="20220705 18:29:15.142" endtime="20220705 18:29:15.385"/>
</kw>
<doc>Verify that a card can be created through API</doc>
<tag>api</tag>
<tag>card.create</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220705 18:29:14.759" endtime="20220705 18:29:15.385"/>
</test>
<test id="s1-s1-s2-t2" name="Verify A Card Can Be Closed" line="24">
<kw name="Create A Card" library="Card">
<var>${response}</var>
<doc>Creates a new card in the given list.
required_args: listId
optional_args: name, desc, pos, idCardSource, idLabels, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>@{optional_args}</arg>
<arg>idList</arg>
<arg>${idList}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 18:29:15.388" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 18:29:15.387" endtime="20220705 18:29:15.388"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 18:29:15.388" endtime="20220705 18:29:15.388"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 18:29:15.389" level="INFO">${url} = cards/</msg>
<status status="PASS" starttime="20220705 18:29:15.388" endtime="20220705 18:29:15.389"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 18:29:15.602" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 18:29:15.389" endtime="20220705 18:29:15.602"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 18:29:15.602" endtime="20220705 18:29:15.602"/>
</return>
<msg timestamp="20220705 18:29:15.602" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 18:29:15.387" endtime="20220705 18:29:15.602"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 18:29:15.602" endtime="20220705 18:29:15.603"/>
</return>
<msg timestamp="20220705 18:29:15.603" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 18:29:15.387" endtime="20220705 18:29:15.603"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 18:29:15.603" endtime="20220705 18:29:15.603"/>
</return>
<msg timestamp="20220705 18:29:15.604" level="INFO">${CARD_ID} = 62c482fbb16623371ed51f9b</msg>
<status status="PASS" starttime="20220705 18:29:15.603" endtime="20220705 18:29:15.604"/>
</kw>
<kw name="Archive A Card" library="Card">
<arg>${CARD_ID}</arg>
<doc>Modifies the card status to closed.</doc>
<kw name="Update A Card" library="Card">
<var>${response}</var>
<arg>${id}</arg>
<arg>closed</arg>
<arg>true</arg>
<arg>status_code=${status_code}</arg>
<doc>Updates the card with the given ID
optional_args: name, desc, closed, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<arg>status_code=${status_code}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 18:29:15.606" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 18:29:15.606" endtime="20220705 18:29:15.606"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 18:29:15.606" endtime="20220705 18:29:15.606"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 18:29:15.606" level="INFO">${url} = cards/62c482fbb16623371ed51f9b</msg>
<status status="PASS" starttime="20220705 18:29:15.606" endtime="20220705 18:29:15.606"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 18:29:15.811" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 18:29:15.607" endtime="20220705 18:29:15.811"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 18:29:15.811" endtime="20220705 18:29:15.811"/>
</return>
<msg timestamp="20220705 18:29:15.811" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 18:29:15.605" endtime="20220705 18:29:15.811"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 18:29:15.811" endtime="20220705 18:29:15.811"/>
</return>
<msg timestamp="20220705 18:29:15.811" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 18:29:15.604" endtime="20220705 18:29:15.811"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 18:29:15.811" endtime="20220705 18:29:15.811"/>
</return>
<status status="PASS" starttime="20220705 18:29:15.604" endtime="20220705 18:29:15.811"/>
</kw>
<kw name="Get A Card" library="Card">
<var>${response}</var>
<arg>${CARD_ID}</arg>
<doc>Gets the card with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 18:29:15.813" level="INFO">${url} = cards/62c482fbb16623371ed51f9b</msg>
<status status="PASS" starttime="20220705 18:29:15.812" endtime="20220705 18:29:15.813"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 18:29:15.940" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 18:29:15.813" endtime="20220705 18:29:15.940"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 18:29:15.940" endtime="20220705 18:29:15.940"/>
</return>
<msg timestamp="20220705 18:29:15.940" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 18:29:15.812" endtime="20220705 18:29:15.940"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 18:29:15.940" endtime="20220705 18:29:15.940"/>
</return>
<msg timestamp="20220705 18:29:15.940" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 18:29:15.812" endtime="20220705 18:29:15.940"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_CLOSED}</var>
<arg>${response}</arg>
<arg>closed</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 18:29:15.941" endtime="20220705 18:29:15.941"/>
</return>
<msg timestamp="20220705 18:29:15.942" level="INFO">${CARD_CLOSED} = True</msg>
<status status="PASS" starttime="20220705 18:29:15.940" endtime="20220705 18:29:15.942"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${CARD_CLOSED}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220705 18:29:15.942" endtime="20220705 18:29:15.942"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Card</arg>
<arg>${CARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Card" library="Card">
<arg>${CARD_ID}</arg>
<doc>Deletes the card with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 18:29:15.943" level="INFO">${url} = cards/62c482fbb16623371ed51f9b</msg>
<status status="PASS" starttime="20220705 18:29:15.943" endtime="20220705 18:29:15.943"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 18:29:16.153" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 18:29:15.944" endtime="20220705 18:29:16.153"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 18:29:16.153" endtime="20220705 18:29:16.153"/>
</return>
<msg timestamp="20220705 18:29:16.153" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 18:29:15.943" endtime="20220705 18:29:16.153"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 18:29:16.153" endtime="20220705 18:29:16.154"/>
</return>
<status status="PASS" starttime="20220705 18:29:15.942" endtime="20220705 18:29:16.154"/>
</kw>
<status status="PASS" starttime="20220705 18:29:15.942" endtime="20220705 18:29:16.154"/>
</kw>
<doc>Verify that a card can be closed through API</doc>
<tag>api</tag>
<tag>card.close</tag>
<tag>regression</tag>
<status status="PASS" starttime="20220705 18:29:15.386" endtime="20220705 18:29:16.154"/>
</test>
<test id="s1-s1-s2-t3" name="Verify A Card Can Be Deleted" line="35">
<kw name="Create A Card" library="Card">
<var>${response}</var>
<doc>Creates a new card in the given list.
required_args: listId
optional_args: name, desc, pos, idCardSource, idLabels, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>@{optional_args}</arg>
<arg>idList</arg>
<arg>${idList}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 18:29:16.157" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 18:29:16.156" endtime="20220705 18:29:16.157"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 18:29:16.157" endtime="20220705 18:29:16.157"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 18:29:16.158" level="INFO">${url} = cards/</msg>
<status status="PASS" starttime="20220705 18:29:16.157" endtime="20220705 18:29:16.158"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 18:29:16.372" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 18:29:16.158" endtime="20220705 18:29:16.372"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 18:29:16.372" endtime="20220705 18:29:16.372"/>
</return>
<msg timestamp="20220705 18:29:16.372" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 18:29:16.155" endtime="20220705 18:29:16.372"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 18:29:16.372" endtime="20220705 18:29:16.372"/>
</return>
<msg timestamp="20220705 18:29:16.372" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 18:29:16.155" endtime="20220705 18:29:16.372"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 18:29:16.373" endtime="20220705 18:29:16.373"/>
</return>
<msg timestamp="20220705 18:29:16.374" level="INFO">${CARD_ID} = 62c482fcdffec88105aa9752</msg>
<status status="PASS" starttime="20220705 18:29:16.373" endtime="20220705 18:29:16.374"/>
</kw>
<kw name="Delete A Card" library="Card">
<var>${response}</var>
<arg>${CARD_ID}</arg>
<doc>Deletes the card with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 18:29:16.375" level="INFO">${url} = cards/62c482fcdffec88105aa9752</msg>
<status status="PASS" starttime="20220705 18:29:16.375" endtime="20220705 18:29:16.375"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 18:29:16.590" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 18:29:16.375" endtime="20220705 18:29:16.590"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 18:29:16.591" endtime="20220705 18:29:16.591"/>
</return>
<msg timestamp="20220705 18:29:16.591" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 18:29:16.374" endtime="20220705 18:29:16.591"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 18:29:16.591" endtime="20220705 18:29:16.591"/>
</return>
<msg timestamp="20220705 18:29:16.591" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 18:29:16.374" endtime="20220705 18:29:16.591"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>delete</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 18:29:16.592" endtime="20220705 18:29:16.593"/>
</kw>
<status status="PASS" starttime="20220705 18:29:16.591" endtime="20220705 18:29:16.593"/>
</kw>
<kw name="Get A Card" library="Card">
<arg>${CARD_ID}</arg>
<arg>status_code=404</arg>
<doc>Gets the card with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 18:29:16.595" level="INFO">${url} = cards/62c482fcdffec88105aa9752</msg>
<status status="PASS" starttime="20220705 18:29:16.594" endtime="20220705 18:29:16.595"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 18:29:16.699" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220705 18:29:16.595" endtime="20220705 18:29:16.700"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 18:29:16.700" endtime="20220705 18:29:16.700"/>
</return>
<msg timestamp="20220705 18:29:16.700" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220705 18:29:16.594" endtime="20220705 18:29:16.700"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 18:29:16.700" endtime="20220705 18:29:16.700"/>
</return>
<status status="PASS" starttime="20220705 18:29:16.594" endtime="20220705 18:29:16.700"/>
</kw>
<doc>Verify that a card can be deleted through API</doc>
<tag>api</tag>
<tag>card.delete</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220705 18:29:16.154" endtime="20220705 18:29:16.700"/>
</test>
<test id="s1-s1-s2-t4" name="Verify A Card Can Be Updated" line="44">
<kw name="Create A Card" library="Card">
<var>${response}</var>
<arg>name</arg>
<arg>RFCard4</arg>
<doc>Creates a new card in the given list.
required_args: listId
optional_args: name, desc, pos, idCardSource, idLabels, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>@{optional_args}</arg>
<arg>idList</arg>
<arg>${idList}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 18:29:16.703" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 18:29:16.702" endtime="20220705 18:29:16.703"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 18:29:16.703" endtime="20220705 18:29:16.703"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 18:29:16.704" level="INFO">${url} = cards/</msg>
<status status="PASS" starttime="20220705 18:29:16.703" endtime="20220705 18:29:16.704"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 18:29:16.914" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 18:29:16.704" endtime="20220705 18:29:16.914"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 18:29:16.914" endtime="20220705 18:29:16.914"/>
</return>
<msg timestamp="20220705 18:29:16.914" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 18:29:16.702" endtime="20220705 18:29:16.914"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 18:29:16.914" endtime="20220705 18:29:16.914"/>
</return>
<msg timestamp="20220705 18:29:16.914" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 18:29:16.701" endtime="20220705 18:29:16.914"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 18:29:16.915" endtime="20220705 18:29:16.915"/>
</return>
<msg timestamp="20220705 18:29:16.915" level="INFO">${CARD_ID} = 62c482fc5f05c5286f53b897</msg>
<status status="PASS" starttime="20220705 18:29:16.914" endtime="20220705 18:29:16.916"/>
</kw>
<kw name="Update A Card" library="Card">
<var>${response}</var>
<arg>${CARD_ID}</arg>
<arg>name</arg>
<arg>RFCard5</arg>
<arg>desc</arg>
<arg>Description</arg>
<doc>Updates the card with the given ID
optional_args: name, desc, closed, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<arg>status_code=${status_code}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 18:29:16.917" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 18:29:16.917" endtime="20220705 18:29:16.917"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 18:29:16.917" endtime="20220705 18:29:16.917"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 18:29:16.917" level="INFO">${url} = cards/62c482fc5f05c5286f53b897</msg>
<status status="PASS" starttime="20220705 18:29:16.917" endtime="20220705 18:29:16.917"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 18:29:17.139" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 18:29:16.917" endtime="20220705 18:29:17.139"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 18:29:17.139" endtime="20220705 18:29:17.139"/>
</return>
<msg timestamp="20220705 18:29:17.140" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 18:29:16.916" endtime="20220705 18:29:17.140"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 18:29:17.140" endtime="20220705 18:29:17.140"/>
</return>
<msg timestamp="20220705 18:29:17.140" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 18:29:16.916" endtime="20220705 18:29:17.140"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>card</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 18:29:17.140" endtime="20220705 18:29:17.146"/>
</kw>
<status status="PASS" starttime="20220705 18:29:17.140" endtime="20220705 18:29:17.146"/>
</kw>
<kw name="Get A Card" library="Card">
<var>${response}</var>
<arg>${CARD_ID}</arg>
<doc>Gets the card with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 18:29:17.147" level="INFO">${url} = cards/62c482fc5f05c5286f53b897</msg>
<status status="PASS" starttime="20220705 18:29:17.147" endtime="20220705 18:29:17.147"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 18:29:17.271" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 18:29:17.147" endtime="20220705 18:29:17.271"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 18:29:17.271" endtime="20220705 18:29:17.271"/>
</return>
<msg timestamp="20220705 18:29:17.271" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 18:29:17.146" endtime="20220705 18:29:17.272"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 18:29:17.272" endtime="20220705 18:29:17.272"/>
</return>
<msg timestamp="20220705 18:29:17.272" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 18:29:17.146" endtime="20220705 18:29:17.272"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_NAME}</var>
<arg>${response}</arg>
<arg>name</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 18:29:17.272" endtime="20220705 18:29:17.272"/>
</return>
<msg timestamp="20220705 18:29:17.273" level="INFO">${CARD_NAME} = RFCard5</msg>
<status status="PASS" starttime="20220705 18:29:17.272" endtime="20220705 18:29:17.273"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_DESC}</var>
<arg>${response}</arg>
<arg>desc</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 18:29:17.273" endtime="20220705 18:29:17.273"/>
</return>
<msg timestamp="20220705 18:29:17.274" level="INFO">${CARD_DESC} = Description</msg>
<status status="PASS" starttime="20220705 18:29:17.273" endtime="20220705 18:29:17.274"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${CARD_NAME}</arg>
<arg>RFCard5</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220705 18:29:17.274" endtime="20220705 18:29:17.274"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${CARD_DESC}</arg>
<arg>Description</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220705 18:29:17.274" endtime="20220705 18:29:17.275"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Card</arg>
<arg>${CARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Card" library="Card">
<arg>${CARD_ID}</arg>
<doc>Deletes the card with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 18:29:17.276" level="INFO">${url} = cards/62c482fc5f05c5286f53b897</msg>
<status status="PASS" starttime="20220705 18:29:17.276" endtime="20220705 18:29:17.276"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 18:29:17.487" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 18:29:17.276" endtime="20220705 18:29:17.487"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 18:29:17.487" endtime="20220705 18:29:17.487"/>
</return>
<msg timestamp="20220705 18:29:17.488" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 18:29:17.275" endtime="20220705 18:29:17.488"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 18:29:17.488" endtime="20220705 18:29:17.488"/>
</return>
<status status="PASS" starttime="20220705 18:29:17.275" endtime="20220705 18:29:17.488"/>
</kw>
<status status="PASS" starttime="20220705 18:29:17.275" endtime="20220705 18:29:17.488"/>
</kw>
<doc>Verify that a card's name and Description can be updated through API</doc>
<tag>api</tag>
<tag>card.update</tag>
<tag>regression</tag>
<status status="PASS" starttime="20220705 18:29:16.701" endtime="20220705 18:29:17.488"/>
</test>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Teardown Board</arg>
<arg>Delete All Sessions</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Teardown Board">
<doc>Delete the board created for this suite</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 18:29:17.491" level="INFO">${url} = boards/62c482fa7cef5722d1c9dd67</msg>
<status status="PASS" starttime="20220705 18:29:17.491" endtime="20220705 18:29:17.491"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 18:29:17.900" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 18:29:17.491" endtime="20220705 18:29:17.900"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 18:29:17.900" endtime="20220705 18:29:17.901"/>
</return>
<msg timestamp="20220705 18:29:17.901" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 18:29:17.490" endtime="20220705 18:29:17.901"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 18:29:17.901" endtime="20220705 18:29:17.901"/>
</return>
<status status="PASS" starttime="20220705 18:29:17.490" endtime="20220705 18:29:17.901"/>
</kw>
<status status="PASS" starttime="20220705 18:29:17.489" endtime="20220705 18:29:17.901"/>
</kw>
<status status="PASS" starttime="20220705 18:29:17.489" endtime="20220705 18:29:17.901"/>
</kw>
<kw name="Delete All Sessions" library="request_own_library">
<status status="PASS" starttime="20220705 18:29:17.901" endtime="20220705 18:29:17.902"/>
</kw>
<status status="PASS" starttime="20220705 18:29:17.489" endtime="20220705 18:29:17.902"/>
</kw>
<doc>Example Test with Trello API Cards</doc>
<status status="PASS" starttime="20220705 18:29:14.337" endtime="20220705 18:29:17.902"/>
</suite>
<suite id="s1-s1-s3" name="Trello Api Checklists Tests" source="/trello/api/trello_api_checklists_tests.robot">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Create Trello Session</arg>
<arg>Setup Board, List And Card</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Create Trello Session" library="TrelloAPI">
<doc>Creates a Trello Session</doc>
<kw name="Create Session" library="request_own_library">
<arg>${API_BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<status status="PASS" starttime="20220705 18:29:17.912" endtime="20220705 18:29:17.913"/>
</kw>
<status status="PASS" starttime="20220705 18:29:17.912" endtime="20220705 18:29:17.913"/>
</kw>
<kw name="Setup Board, List And Card">
<doc>Create a board and save its ID and its first list's ID</doc>
<kw name="Create A Board" library="Board">
<var>${BOARD}</var>
<arg>TestBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 18:29:17.914" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 18:29:17.913" endtime="20220705 18:29:17.914"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 18:29:17.914" endtime="20220705 18:29:17.914"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 18:29:17.915" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220705 18:29:17.914" endtime="20220705 18:29:17.915"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 18:29:18.235" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 18:29:17.915" endtime="20220705 18:29:18.235"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 18:29:18.235" endtime="20220705 18:29:18.235"/>
</return>
<msg timestamp="20220705 18:29:18.235" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 18:29:17.913" endtime="20220705 18:29:18.235"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 18:29:18.236" endtime="20220705 18:29:18.236"/>
</return>
<msg timestamp="20220705 18:29:18.236" level="INFO">${BOARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 18:29:17.913" endtime="20220705 18:29:18.236"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_BOARD_ID}</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220705 18:29:18.237" level="INFO">${TEST_SUITE_BOARD_ID} = 62c482fed0a0108994b1a912</msg>
<status status="PASS" starttime="20220705 18:29:18.236" endtime="20220705 18:29:18.237"/>
</kw>
<kw name="Get Lists On A Board" library="Board">
<var>${LISTS}</var>
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Get all the lists in a board</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>lists_on_board</arg>
<arg>${id}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 18:29:18.238" level="INFO">${url} = boards/62c482fed0a0108994b1a912/lists/</msg>
<status status="PASS" starttime="20220705 18:29:18.237" endtime="20220705 18:29:18.238"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 18:29:18.361" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 18:29:18.238" endtime="20220705 18:29:18.361"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 18:29:18.361" endtime="20220705 18:29:18.361"/>
</return>
<msg timestamp="20220705 18:29:18.361" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 18:29:18.237" endtime="20220705 18:29:18.361"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 18:29:18.361" endtime="20220705 18:29:18.361"/>
</return>
<msg timestamp="20220705 18:29:18.361" level="INFO">${LISTS} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 18:29:18.237" endtime="20220705 18:29:18.361"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_LIST_ID}</arg>
<arg>${LISTS.json()}[0][id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220705 18:29:18.362" level="INFO">${TEST_SUITE_LIST_ID} = 62c482fed0a0108994b1a919</msg>
<status status="PASS" starttime="20220705 18:29:18.362" endtime="20220705 18:29:18.362"/>
</kw>
<kw name="Create A Card" library="Card">
<var>${CARD}</var>
<arg>name</arg>
<arg>TestCard</arg>
<doc>Creates a new card in the given list.
required_args: listId
optional_args: name, desc, pos, idCardSource, idLabels, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>@{optional_args}</arg>
<arg>idList</arg>
<arg>${idList}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 18:29:18.364" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 18:29:18.364" endtime="20220705 18:29:18.364"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 18:29:18.364" endtime="20220705 18:29:18.364"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 18:29:18.365" level="INFO">${url} = cards/</msg>
<status status="PASS" starttime="20220705 18:29:18.364" endtime="20220705 18:29:18.365"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 18:29:18.601" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 18:29:18.365" endtime="20220705 18:29:18.601"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 18:29:18.601" endtime="20220705 18:29:18.601"/>
</return>
<msg timestamp="20220705 18:29:18.601" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 18:29:18.363" endtime="20220705 18:29:18.601"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 18:29:18.601" endtime="20220705 18:29:18.601"/>
</return>
<msg timestamp="20220705 18:29:18.602" level="INFO">${CARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 18:29:18.363" endtime="20220705 18:29:18.602"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_CARD_ID}</arg>
<arg>${CARD.json()}[id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220705 18:29:18.603" level="INFO">${TEST_SUITE_CARD_ID} = 62c482fe190d9f43bc661c43</msg>
<status status="PASS" starttime="20220705 18:29:18.602" endtime="20220705 18:29:18.603"/>
</kw>
<status status="PASS" starttime="20220705 18:29:17.913" endtime="20220705 18:29:18.603"/>
</kw>
<status status="PASS" starttime="20220705 18:29:17.912" endtime="20220705 18:29:18.603"/>
</kw>
<test id="s1-s1-s3-t1" name="Verify A Checklist Can Be Created" line="14">
<kw name="Create A Checklist" library="Checklist">
<var>${response}</var>
<arg>name</arg>
<arg>TestChecklist</arg>
<arg>idCard=${TEST_SUITE_CARD_ID}</arg>
<doc>Creates a new checklist in the given card.
required_args: idCard
optional_args: name, pos, idChecklistSource
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>@{optional_args}</arg>
<arg>idCard</arg>
<arg>${idCard}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 18:29:18.605" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 18:29:18.604" endtime="20220705 18:29:18.605"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 18:29:18.605" endtime="20220705 18:29:18.605"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 18:29:18.606" level="INFO">${url} = checklists/</msg>
<status status="PASS" starttime="20220705 18:29:18.605" endtime="20220705 18:29:18.606"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 18:29:18.788" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 18:29:18.606" endtime="20220705 18:29:18.788"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 18:29:18.788" endtime="20220705 18:29:18.788"/>
</return>
<msg timestamp="20220705 18:29:18.788" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 18:29:18.604" endtime="20220705 18:29:18.788"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 18:29:18.788" endtime="20220705 18:29:18.788"/>
</return>
<msg timestamp="20220705 18:29:18.789" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 18:29:18.603" endtime="20220705 18:29:18.789"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${checklist_id}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 18:29:18.789" endtime="20220705 18:29:18.789"/>
</return>
<msg timestamp="20220705 18:29:18.790" level="INFO">${checklist_id} = 62c482fe87feb674a2ab0758</msg>
<status status="PASS" starttime="20220705 18:29:18.789" endtime="20220705 18:29:18.790"/>
</kw>
<kw name="Get A Checklist" library="Checklist">
<var>${response}</var>
<arg>${checklist_id}</arg>
<doc>Gets the checklist with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 18:29:18.791" level="INFO">${url} = checklists/62c482fe87feb674a2ab0758</msg>
<status status="PASS" starttime="20220705 18:29:18.791" endtime="20220705 18:29:18.791"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 18:29:18.929" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 18:29:18.791" endtime="20220705 18:29:18.929"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 18:29:18.929" endtime="20220705 18:29:18.929"/>
</return>
<msg timestamp="20220705 18:29:18.929" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 18:29:18.790" endtime="20220705 18:29:18.929"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 18:29:18.929" endtime="20220705 18:29:18.929"/>
</return>
<msg timestamp="20220705 18:29:18.929" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 18:29:18.790" endtime="20220705 18:29:18.929"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${checklist_name}</var>
<arg>${response}</arg>
<arg>name</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 18:29:18.930" endtime="20220705 18:29:18.930"/>
</return>
<msg timestamp="20220705 18:29:18.931" level="INFO">${checklist_name} = TestChecklist</msg>
<status status="PASS" starttime="20220705 18:29:18.930" endtime="20220705 18:29:18.931"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${checklist_name}</arg>
<arg>TestChecklist</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220705 18:29:18.931" endtime="20220705 18:29:18.931"/>
</kw>
<kw name="Delete A Checklist" library="Checklist" type="TEARDOWN">
<arg>${checklist_id}</arg>
<doc>Deletes the checklist with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 18:29:18.932" level="INFO">${url} = checklists/62c482fe87feb674a2ab0758</msg>
<status status="PASS" starttime="20220705 18:29:18.932" endtime="20220705 18:29:18.932"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 18:29:19.111" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 18:29:18.932" endtime="20220705 18:29:19.111"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 18:29:19.111" endtime="20220705 18:29:19.111"/>
</return>
<msg timestamp="20220705 18:29:19.112" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 18:29:18.932" endtime="20220705 18:29:19.112"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 18:29:19.112" endtime="20220705 18:29:19.112"/>
</return>
<status status="PASS" starttime="20220705 18:29:18.931" endtime="20220705 18:29:19.112"/>
</kw>
<doc>Verify that a checklist can be created through API</doc>
<tag>api</tag>
<tag>checklist.create</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220705 18:29:18.603" endtime="20220705 18:29:19.112"/>
</test>
<test id="s1-s1-s3-t2" name="Verify A Checklist Can Be Deleted" line="24">
<kw name="Create A Checklist" library="Checklist">
<var>${response}</var>
<arg>name</arg>
<arg>TestChecklist</arg>
<arg>idCard=${TEST_SUITE_CARD_ID}</arg>
<doc>Creates a new checklist in the given card.
required_args: idCard
optional_args: name, pos, idChecklistSource
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>@{optional_args}</arg>
<arg>idCard</arg>
<arg>${idCard}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 18:29:19.114" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 18:29:19.114" endtime="20220705 18:29:19.114"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 18:29:19.114" endtime="20220705 18:29:19.115"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 18:29:19.115" level="INFO">${url} = checklists/</msg>
<status status="PASS" starttime="20220705 18:29:19.115" endtime="20220705 18:29:19.115"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 18:29:19.283" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 18:29:19.116" endtime="20220705 18:29:19.283"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 18:29:19.283" endtime="20220705 18:29:19.283"/>
</return>
<msg timestamp="20220705 18:29:19.283" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 18:29:19.114" endtime="20220705 18:29:19.283"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 18:29:19.283" endtime="20220705 18:29:19.283"/>
</return>
<msg timestamp="20220705 18:29:19.283" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 18:29:19.113" endtime="20220705 18:29:19.283"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${checklist_id}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 18:29:19.284" endtime="20220705 18:29:19.284"/>
</return>
<msg timestamp="20220705 18:29:19.285" level="INFO">${checklist_id} = 62c482ff5fba735573e0d4eb</msg>
<status status="PASS" starttime="20220705 18:29:19.284" endtime="20220705 18:29:19.285"/>
</kw>
<kw name="Delete A Checklist" library="Checklist">
<var>${response}</var>
<arg>${checklist_id}</arg>
<doc>Deletes the checklist with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 18:29:19.286" level="INFO">${url} = checklists/62c482ff5fba735573e0d4eb</msg>
<status status="PASS" starttime="20220705 18:29:19.286" endtime="20220705 18:29:19.286"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 18:29:19.444" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 18:29:19.286" endtime="20220705 18:29:19.444"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 18:29:19.444" endtime="20220705 18:29:19.444"/>
</return>
<msg timestamp="20220705 18:29:19.444" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 18:29:19.285" endtime="20220705 18:29:19.444"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 18:29:19.444" endtime="20220705 18:29:19.444"/>
</return>
<msg timestamp="20220705 18:29:19.444" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 18:29:19.285" endtime="20220705 18:29:19.444"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>delete</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 18:29:19.445" endtime="20220705 18:29:19.447"/>
</kw>
<status status="PASS" starttime="20220705 18:29:19.445" endtime="20220705 18:29:19.447"/>
</kw>
<kw name="Get A Checklist" library="Checklist">
<arg>${checklist_id}</arg>
<arg>status_code=404</arg>
<doc>Gets the checklist with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 18:29:19.448" level="INFO">${url} = checklists/62c482ff5fba735573e0d4eb</msg>
<status status="PASS" starttime="20220705 18:29:19.448" endtime="20220705 18:29:19.448"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 18:29:19.554" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220705 18:29:19.448" endtime="20220705 18:29:19.554"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 18:29:19.554" endtime="20220705 18:29:19.554"/>
</return>
<msg timestamp="20220705 18:29:19.554" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220705 18:29:19.447" endtime="20220705 18:29:19.554"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 18:29:19.554" endtime="20220705 18:29:19.554"/>
</return>
<status status="PASS" starttime="20220705 18:29:19.447" endtime="20220705 18:29:19.555"/>
</kw>
<doc>Verify that a checklist can be deleted through API</doc>
<tag>api</tag>
<tag>checklist.delete</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220705 18:29:19.112" endtime="20220705 18:29:19.555"/>
</test>
<test id="s1-s1-s3-t3" name="Verify A Checklist Can Be Updated" line="33">
<kw name="Create A Checklist" library="Checklist">
<var>${response}</var>
<arg>name</arg>
<arg>TestChecklist</arg>
<arg>idCard=${TEST_SUITE_CARD_ID}</arg>
<doc>Creates a new checklist in the given card.
required_args: idCard
optional_args: name, pos, idChecklistSource
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>@{optional_args}</arg>
<arg>idCard</arg>
<arg>${idCard}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 18:29:19.558" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 18:29:19.557" endtime="20220705 18:29:19.558"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 18:29:19.559" endtime="20220705 18:29:19.559"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 18:29:19.559" level="INFO">${url} = checklists/</msg>
<status status="PASS" starttime="20220705 18:29:19.559" endtime="20220705 18:29:19.560"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 18:29:19.758" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 18:29:19.560" endtime="20220705 18:29:19.758"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 18:29:19.758" endtime="20220705 18:29:19.758"/>
</return>
<msg timestamp="20220705 18:29:19.758" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 18:29:19.556" endtime="20220705 18:29:19.758"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 18:29:19.758" endtime="20220705 18:29:19.758"/>
</return>
<msg timestamp="20220705 18:29:19.758" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 18:29:19.556" endtime="20220705 18:29:19.758"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${checklist_id}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 18:29:19.759" endtime="20220705 18:29:19.759"/>
</return>
<msg timestamp="20220705 18:29:19.760" level="INFO">${checklist_id} = 62c482ff9375ea6dfc3fb21f</msg>
<status status="PASS" starttime="20220705 18:29:19.759" endtime="20220705 18:29:19.760"/>
</kw>
<kw name="Update A Checklist" library="Checklist">
<var>${response}</var>
<arg>${checklist_id}</arg>
<arg>name</arg>
<arg>TestChecklist2</arg>
<doc>Updates the checklist with the given ID
optional_args: name, pos
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<arg>status_code=${status_code}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 18:29:19.761" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 18:29:19.761" endtime="20220705 18:29:19.761"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 18:29:19.761" endtime="20220705 18:29:19.761"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 18:29:19.761" level="INFO">${url} = checklists/62c482ff9375ea6dfc3fb21f</msg>
<status status="PASS" starttime="20220705 18:29:19.761" endtime="20220705 18:29:19.761"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 18:29:19.910" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 18:29:19.762" endtime="20220705 18:29:19.910"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 18:29:19.910" endtime="20220705 18:29:19.910"/>
</return>
<msg timestamp="20220705 18:29:19.910" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 18:29:19.760" endtime="20220705 18:29:19.910"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 18:29:19.910" endtime="20220705 18:29:19.910"/>
</return>
<msg timestamp="20220705 18:29:19.911" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 18:29:19.760" endtime="20220705 18:29:19.911"/>
</kw>
<kw name="Get A Checklist" library="Checklist">
<var>${response}</var>
<arg>${checklist_id}</arg>
<doc>Gets the checklist with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 18:29:19.912" level="INFO">${url} = checklists/62c482ff9375ea6dfc3fb21f</msg>
<status status="PASS" starttime="20220705 18:29:19.912" endtime="20220705 18:29:19.912"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 18:29:20.035" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 18:29:19.912" endtime="20220705 18:29:20.035"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 18:29:20.035" endtime="20220705 18:29:20.035"/>
</return>
<msg timestamp="20220705 18:29:20.036" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 18:29:19.911" endtime="20220705 18:29:20.036"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 18:29:20.036" endtime="20220705 18:29:20.036"/>
</return>
<msg timestamp="20220705 18:29:20.036" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 18:29:19.911" endtime="20220705 18:29:20.036"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${checklist_name}</var>
<arg>${response}</arg>
<arg>name</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 18:29:20.036" endtime="20220705 18:29:20.036"/>
</return>
<msg timestamp="20220705 18:29:20.037" level="INFO">${checklist_name} = TestChecklist2</msg>
<status status="PASS" starttime="20220705 18:29:20.036" endtime="20220705 18:29:20.037"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${checklist_name}</arg>
<arg>TestChecklist2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220705 18:29:20.037" endtime="20220705 18:29:20.037"/>
</kw>
<kw name="Delete A Checklist" library="Checklist" type="TEARDOWN">
<arg>${checklist_id}</arg>
<doc>Deletes the checklist with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 18:29:20.048" level="INFO">${url} = checklists/62c482ff9375ea6dfc3fb21f</msg>
<status status="PASS" starttime="20220705 18:29:20.048" endtime="20220705 18:29:20.048"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 18:29:20.223" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 18:29:20.048" endtime="20220705 18:29:20.223"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 18:29:20.224" endtime="20220705 18:29:20.224"/>
</return>
<msg timestamp="20220705 18:29:20.224" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 18:29:20.047" endtime="20220705 18:29:20.224"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 18:29:20.224" endtime="20220705 18:29:20.224"/>
</return>
<status status="PASS" starttime="20220705 18:29:20.038" endtime="20220705 18:29:20.224"/>
</kw>
<doc>Verify that a checklist's name can be updated through API</doc>
<tag>api</tag>
<tag>checklist.update</tag>
<tag>regression</tag>
<status status="PASS" starttime="20220705 18:29:19.555" endtime="20220705 18:29:20.224"/>
</test>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Teardown Board</arg>
<arg>Delete All Sessions</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Teardown Board">
<doc>Delete the board created for this suite</doc>
<kw name="Delete A Board" library="Board">
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 18:29:20.226" level="INFO">${url} = boards/62c482fed0a0108994b1a912</msg>
<status status="PASS" starttime="20220705 18:29:20.226" endtime="20220705 18:29:20.226"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 18:29:20.666" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 18:29:20.226" endtime="20220705 18:29:20.666"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 18:29:20.666" endtime="20220705 18:29:20.666"/>
</return>
<msg timestamp="20220705 18:29:20.666" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 18:29:20.225" endtime="20220705 18:29:20.666"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 18:29:20.666" endtime="20220705 18:29:20.666"/>
</return>
<status status="PASS" starttime="20220705 18:29:20.225" endtime="20220705 18:29:20.666"/>
</kw>
<status status="PASS" starttime="20220705 18:29:20.225" endtime="20220705 18:29:20.666"/>
</kw>
<kw name="Delete All Sessions" library="request_own_library">
<status status="PASS" starttime="20220705 18:29:20.667" endtime="20220705 18:29:20.667"/>
</kw>
<status status="PASS" starttime="20220705 18:29:20.225" endtime="20220705 18:29:20.667"/>
</kw>
<doc>Example Test with Trello API Checklists</doc>
<status status="PASS" starttime="20220705 18:29:17.904" endtime="20220705 18:29:20.668"/>
</suite>
<suite id="s1-s1-s4" name="Trello Api Labels Tests" source="/trello/api/trello_api_labels_tests.robot">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Create Trello Session</arg>
<arg>Setup Board And List</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Create Trello Session" library="TrelloAPI">
<doc>Creates a Trello Session</doc>
<kw name="Create Session" library="request_own_library">
<arg>${API_BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<status status="PASS" starttime="20220705 18:29:20.677" endtime="20220705 18:29:20.677"/>
</kw>
<status status="PASS" starttime="20220705 18:29:20.677" endtime="20220705 18:29:20.677"/>
</kw>
<kw name="Setup Board And List">
<doc>Create a board and save its ID and its first list's ID</doc>
<kw name="Create A Board" library="Board">
<var>${BOARD}</var>
<arg>TestBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 18:29:20.678" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 18:29:20.678" endtime="20220705 18:29:20.678"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 18:29:20.678" endtime="20220705 18:29:20.678"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 18:29:20.679" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220705 18:29:20.678" endtime="20220705 18:29:20.679"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 18:29:20.957" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 18:29:20.679" endtime="20220705 18:29:20.957"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 18:29:20.957" endtime="20220705 18:29:20.957"/>
</return>
<msg timestamp="20220705 18:29:20.957" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 18:29:20.678" endtime="20220705 18:29:20.957"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 18:29:20.957" endtime="20220705 18:29:20.957"/>
</return>
<msg timestamp="20220705 18:29:20.957" level="INFO">${BOARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 18:29:20.677" endtime="20220705 18:29:20.957"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_BOARD_ID}</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220705 18:29:20.958" level="INFO">${TEST_SUITE_BOARD_ID} = 62c4830041bb977386536ecd</msg>
<status status="PASS" starttime="20220705 18:29:20.958" endtime="20220705 18:29:20.958"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${LISTS}</var>
<arg>boards/${TEST_SUITE_BOARD_ID}/lists</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 18:29:21.109" level="INFO">${LISTS} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 18:29:20.958" endtime="20220705 18:29:21.109"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_LIST_ID}</arg>
<arg>${LISTS.json()}[0][id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220705 18:29:21.110" level="INFO">${TEST_SUITE_LIST_ID} = 62c4830041bb977386536ed4</msg>
<status status="PASS" starttime="20220705 18:29:21.110" endtime="20220705 18:29:21.110"/>
</kw>
<status status="PASS" starttime="20220705 18:29:20.677" endtime="20220705 18:29:21.111"/>
</kw>
<status status="PASS" starttime="20220705 18:29:20.676" endtime="20220705 18:29:21.111"/>
</kw>
<test id="s1-s1-s4-t1" name="Create and get label on board" line="14">
<kw name="Create A Label" library="Label">
<var>${response}</var>
<arg>name</arg>
<arg>label2</arg>
<arg>color</arg>
<arg>yellow</arg>
<doc>Creates a new label in the given board.
required_args: idBoard
optional_args: name, color
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>idBoard</arg>
<arg>${idBoard}</arg>
<arg>@{optional_args}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 18:29:21.113" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 18:29:21.112" endtime="20220705 18:29:21.113"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 18:29:21.113" endtime="20220705 18:29:21.113"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 18:29:21.114" level="INFO">${url} = labels/</msg>
<status status="PASS" starttime="20220705 18:29:21.113" endtime="20220705 18:29:21.114"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 18:29:21.270" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 18:29:21.114" endtime="20220705 18:29:21.270"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 18:29:21.270" endtime="20220705 18:29:21.270"/>
</return>
<msg timestamp="20220705 18:29:21.270" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 18:29:21.112" endtime="20220705 18:29:21.270"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 18:29:21.270" endtime="20220705 18:29:21.270"/>
</return>
<msg timestamp="20220705 18:29:21.271" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 18:29:21.111" endtime="20220705 18:29:21.271"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>label</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 18:29:21.271" endtime="20220705 18:29:21.273"/>
</kw>
<status status="PASS" starttime="20220705 18:29:21.271" endtime="20220705 18:29:21.273"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${LABEL_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 18:29:21.273" endtime="20220705 18:29:21.273"/>
</return>
<msg timestamp="20220705 18:29:21.274" level="INFO">${LABEL_ID} = 62c4830163e7b0022ab99d71</msg>
<status status="PASS" starttime="20220705 18:29:21.273" endtime="20220705 18:29:21.274"/>
</kw>
<kw name="Get A Label" library="Label">
<var>${response}</var>
<arg>${LABEL_ID}</arg>
<doc>Gets the label with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 18:29:21.275" level="INFO">${url} = labels/62c4830163e7b0022ab99d71</msg>
<status status="PASS" starttime="20220705 18:29:21.275" endtime="20220705 18:29:21.275"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 18:29:21.415" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 18:29:21.275" endtime="20220705 18:29:21.415"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 18:29:21.415" endtime="20220705 18:29:21.415"/>
</return>
<msg timestamp="20220705 18:29:21.415" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 18:29:21.274" endtime="20220705 18:29:21.415"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 18:29:21.415" endtime="20220705 18:29:21.415"/>
</return>
<msg timestamp="20220705 18:29:21.415" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 18:29:21.274" endtime="20220705 18:29:21.415"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${LABEL_COLOR}</var>
<arg>${response}</arg>
<arg>color</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 18:29:21.416" endtime="20220705 18:29:21.416"/>
</return>
<msg timestamp="20220705 18:29:21.417" level="INFO">${LABEL_COLOR} = yellow</msg>
<status status="PASS" starttime="20220705 18:29:21.416" endtime="20220705 18:29:21.417"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${LABEL_NAME}</var>
<arg>${response}</arg>
<arg>name</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 18:29:21.417" endtime="20220705 18:29:21.417"/>
</return>
<msg timestamp="20220705 18:29:21.418" level="INFO">${LABEL_NAME} = label2</msg>
<status status="PASS" starttime="20220705 18:29:21.417" endtime="20220705 18:29:21.418"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${LABEL_COLOR}</arg>
<arg>yellow</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220705 18:29:21.418" endtime="20220705 18:29:21.418"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${LABEL_NAME}</arg>
<arg>label2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220705 18:29:21.418" endtime="20220705 18:29:21.419"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Label</arg>
<arg>${LABEL_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Label" library="Label">
<arg>${LABEL_ID}</arg>
<doc>Deletes the label with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 18:29:21.420" level="INFO">${url} = labels/62c4830163e7b0022ab99d71</msg>
<status status="PASS" starttime="20220705 18:29:21.420" endtime="20220705 18:29:21.420"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 18:29:21.622" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 18:29:21.420" endtime="20220705 18:29:21.622"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 18:29:21.622" endtime="20220705 18:29:21.622"/>
</return>
<msg timestamp="20220705 18:29:21.623" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 18:29:21.419" endtime="20220705 18:29:21.623"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 18:29:21.623" endtime="20220705 18:29:21.623"/>
</return>
<status status="PASS" starttime="20220705 18:29:21.419" endtime="20220705 18:29:21.623"/>
</kw>
<status status="PASS" starttime="20220705 18:29:21.419" endtime="20220705 18:29:21.623"/>
</kw>
<doc>Verify that a label can be created through API</doc>
<tag>api</tag>
<tag>label.create</tag>
<tag>label.get</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220705 18:29:21.111" endtime="20220705 18:29:21.623"/>
</test>
<test id="s1-s1-s4-t2" name="Update label on board" line="28">
<kw name="Create A Label" library="Label">
<var>${response}</var>
<arg>name</arg>
<arg>label2</arg>
<arg>color</arg>
<arg>yellow</arg>
<doc>Creates a new label in the given board.
required_args: idBoard
optional_args: name, color
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>idBoard</arg>
<arg>${idBoard}</arg>
<arg>@{optional_args}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 18:29:21.625" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 18:29:21.625" endtime="20220705 18:29:21.625"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 18:29:21.625" endtime="20220705 18:29:21.626"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 18:29:21.626" level="INFO">${url} = labels/</msg>
<status status="PASS" starttime="20220705 18:29:21.626" endtime="20220705 18:29:21.626"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 18:29:21.795" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 18:29:21.626" endtime="20220705 18:29:21.795"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 18:29:21.795" endtime="20220705 18:29:21.795"/>
</return>
<msg timestamp="20220705 18:29:21.795" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 18:29:21.625" endtime="20220705 18:29:21.795"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 18:29:21.795" endtime="20220705 18:29:21.795"/>
</return>
<msg timestamp="20220705 18:29:21.796" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 18:29:21.624" endtime="20220705 18:29:21.796"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>label</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 18:29:21.796" endtime="20220705 18:29:21.798"/>
</kw>
<status status="PASS" starttime="20220705 18:29:21.796" endtime="20220705 18:29:21.798"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${LABEL_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 18:29:21.799" endtime="20220705 18:29:21.799"/>
</return>
<msg timestamp="20220705 18:29:21.799" level="INFO">${LABEL_ID} = 62c4830129323609b7687908</msg>
<status status="PASS" starttime="20220705 18:29:21.798" endtime="20220705 18:29:21.799"/>
</kw>
<kw name="Update A Label" library="Label">
<var>${new_response}</var>
<arg>${LABEL_ID}</arg>
<arg>name</arg>
<arg>label3</arg>
<arg>color</arg>
<arg>orange</arg>
<doc>Updates the label with the given ID
optional_args: name, color
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 18:29:21.800" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 18:29:21.800" endtime="20220705 18:29:21.800"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 18:29:21.800" endtime="20220705 18:29:21.801"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 18:29:21.801" level="INFO">${url} = labels/62c4830129323609b7687908</msg>
<status status="PASS" starttime="20220705 18:29:21.801" endtime="20220705 18:29:21.801"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 18:29:21.974" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 18:29:21.801" endtime="20220705 18:29:21.974"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 18:29:21.974" endtime="20220705 18:29:21.974"/>
</return>
<msg timestamp="20220705 18:29:21.975" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 18:29:21.800" endtime="20220705 18:29:21.975"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 18:29:21.975" endtime="20220705 18:29:21.975"/>
</return>
<msg timestamp="20220705 18:29:21.975" level="INFO">${new_response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 18:29:21.799" endtime="20220705 18:29:21.975"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${NEW_LABEL_COLOR}</var>
<arg>${new_response}</arg>
<arg>color</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 18:29:21.975" endtime="20220705 18:29:21.975"/>
</return>
<msg timestamp="20220705 18:29:21.976" level="INFO">${NEW_LABEL_COLOR} = orange</msg>
<status status="PASS" starttime="20220705 18:29:21.975" endtime="20220705 18:29:21.976"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${NEW_LABEL_NAME}</var>
<arg>${new_response}</arg>
<arg>name</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 18:29:21.977" endtime="20220705 18:29:21.977"/>
</return>
<msg timestamp="20220705 18:29:21.977" level="INFO">${NEW_LABEL_NAME} = label3</msg>
<status status="PASS" starttime="20220705 18:29:21.976" endtime="20220705 18:29:21.977"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${NEW_LABEL_COLOR}</arg>
<arg>orange</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220705 18:29:21.977" endtime="20220705 18:29:21.978"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${NEW_LABEL_NAME}</arg>
<arg>label3</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220705 18:29:21.978" endtime="20220705 18:29:21.978"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Label</arg>
<arg>${LABEL_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Label" library="Label">
<arg>${LABEL_ID}</arg>
<doc>Deletes the label with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 18:29:21.979" level="INFO">${url} = labels/62c4830129323609b7687908</msg>
<status status="PASS" starttime="20220705 18:29:21.979" endtime="20220705 18:29:21.979"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 18:29:22.159" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 18:29:21.980" endtime="20220705 18:29:22.159"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 18:29:22.159" endtime="20220705 18:29:22.159"/>
</return>
<msg timestamp="20220705 18:29:22.160" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 18:29:21.979" endtime="20220705 18:29:22.160"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 18:29:22.160" endtime="20220705 18:29:22.160"/>
</return>
<status status="PASS" starttime="20220705 18:29:21.978" endtime="20220705 18:29:22.160"/>
</kw>
<status status="PASS" starttime="20220705 18:29:21.978" endtime="20220705 18:29:22.160"/>
</kw>
<doc>Verify that a label's name and color can be updated through API</doc>
<tag>api</tag>
<tag>label.update</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220705 18:29:21.623" endtime="20220705 18:29:22.160"/>
</test>
<test id="s1-s1-s4-t3" name="Delete label on board" line="41">
<kw name="Create A Label" library="Label">
<var>${response}</var>
<arg>name</arg>
<arg>label2</arg>
<arg>color</arg>
<arg>yellow</arg>
<doc>Creates a new label in the given board.
required_args: idBoard
optional_args: name, color
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>idBoard</arg>
<arg>${idBoard}</arg>
<arg>@{optional_args}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 18:29:22.162" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 18:29:22.162" endtime="20220705 18:29:22.162"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 18:29:22.162" endtime="20220705 18:29:22.163"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 18:29:22.163" level="INFO">${url} = labels/</msg>
<status status="PASS" starttime="20220705 18:29:22.163" endtime="20220705 18:29:22.163"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 18:29:22.321" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 18:29:22.164" endtime="20220705 18:29:22.321"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 18:29:22.321" endtime="20220705 18:29:22.322"/>
</return>
<msg timestamp="20220705 18:29:22.322" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 18:29:22.162" endtime="20220705 18:29:22.322"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 18:29:22.322" endtime="20220705 18:29:22.322"/>
</return>
<msg timestamp="20220705 18:29:22.322" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 18:29:22.161" endtime="20220705 18:29:22.322"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${LABEL_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 18:29:22.322" endtime="20220705 18:29:22.323"/>
</return>
<msg timestamp="20220705 18:29:22.323" level="INFO">${LABEL_ID} = 62c48302aa9fd4105e3883f3</msg>
<status status="PASS" starttime="20220705 18:29:22.322" endtime="20220705 18:29:22.323"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Label</arg>
<arg>${LABEL_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Label" library="Label">
<arg>${LABEL_ID}</arg>
<doc>Deletes the label with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 18:29:22.325" level="INFO">${url} = labels/62c48302aa9fd4105e3883f3</msg>
<status status="PASS" starttime="20220705 18:29:22.324" endtime="20220705 18:29:22.325"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 18:29:22.523" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 18:29:22.325" endtime="20220705 18:29:22.523"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 18:29:22.523" endtime="20220705 18:29:22.523"/>
</return>
<msg timestamp="20220705 18:29:22.524" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 18:29:22.324" endtime="20220705 18:29:22.524"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 18:29:22.524" endtime="20220705 18:29:22.524"/>
</return>
<status status="PASS" starttime="20220705 18:29:22.324" endtime="20220705 18:29:22.524"/>
</kw>
<status status="PASS" starttime="20220705 18:29:22.323" endtime="20220705 18:29:22.524"/>
</kw>
<kw name="Get A Label" library="Label">
<arg>${LABEL_ID}</arg>
<arg>status_code=404</arg>
<doc>Gets the label with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 18:29:22.525" level="INFO">${url} = labels/62c48302aa9fd4105e3883f3</msg>
<status status="PASS" starttime="20220705 18:29:22.525" endtime="20220705 18:29:22.525"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 18:29:22.632" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220705 18:29:22.525" endtime="20220705 18:29:22.632"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 18:29:22.632" endtime="20220705 18:29:22.632"/>
</return>
<msg timestamp="20220705 18:29:22.633" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220705 18:29:22.524" endtime="20220705 18:29:22.633"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 18:29:22.633" endtime="20220705 18:29:22.633"/>
</return>
<status status="PASS" starttime="20220705 18:29:22.524" endtime="20220705 18:29:22.633"/>
</kw>
<doc>Verify that a label can be deleted through API</doc>
<tag>api</tag>
<tag>label.delete</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220705 18:29:22.160" endtime="20220705 18:29:22.633"/>
</test>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Teardown Board</arg>
<arg>Delete All Sessions</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Teardown Board">
<doc>Delete the board created for this session.</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 18:29:22.636" level="INFO">${url} = boards/62c4830041bb977386536ecd</msg>
<status status="PASS" starttime="20220705 18:29:22.635" endtime="20220705 18:29:22.636"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 18:29:23.010" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 18:29:22.636" endtime="20220705 18:29:23.010"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 18:29:23.010" endtime="20220705 18:29:23.010"/>
</return>
<msg timestamp="20220705 18:29:23.010" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 18:29:22.635" endtime="20220705 18:29:23.010"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 18:29:23.010" endtime="20220705 18:29:23.010"/>
</return>
<status status="PASS" starttime="20220705 18:29:22.635" endtime="20220705 18:29:23.010"/>
</kw>
<status status="PASS" starttime="20220705 18:29:22.634" endtime="20220705 18:29:23.011"/>
</kw>
<status status="PASS" starttime="20220705 18:29:22.634" endtime="20220705 18:29:23.011"/>
</kw>
<kw name="Delete All Sessions" library="request_own_library">
<status status="PASS" starttime="20220705 18:29:23.011" endtime="20220705 18:29:23.012"/>
</kw>
<status status="PASS" starttime="20220705 18:29:22.634" endtime="20220705 18:29:23.012"/>
</kw>
<doc>Example Test with Trello API Cards</doc>
<status status="PASS" starttime="20220705 18:29:20.669" endtime="20220705 18:29:23.012"/>
</suite>
<suite id="s1-s1-s5" name="Trello Api Lists Tests" source="/trello/api/trello_api_lists_tests.robot">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Create Trello Session</arg>
<arg>Setup Board</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Create Trello Session" library="TrelloAPI">
<doc>Creates a Trello Session</doc>
<kw name="Create Session" library="request_own_library">
<arg>${API_BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<status status="PASS" starttime="20220705 18:29:23.022" endtime="20220705 18:29:23.023"/>
</kw>
<status status="PASS" starttime="20220705 18:29:23.022" endtime="20220705 18:29:23.023"/>
</kw>
<kw name="Setup Board">
<doc>Create a board and save it's id for the suite</doc>
<kw name="Create A Board" library="Board">
<var>${BOARD}</var>
<arg>TestBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 18:29:23.024" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 18:29:23.024" endtime="20220705 18:29:23.024"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 18:29:23.024" endtime="20220705 18:29:23.024"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 18:29:23.025" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220705 18:29:23.024" endtime="20220705 18:29:23.025"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 18:29:23.304" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 18:29:23.025" endtime="20220705 18:29:23.304"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 18:29:23.304" endtime="20220705 18:29:23.304"/>
</return>
<msg timestamp="20220705 18:29:23.305" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 18:29:23.023" endtime="20220705 18:29:23.305"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 18:29:23.305" endtime="20220705 18:29:23.305"/>
</return>
<msg timestamp="20220705 18:29:23.305" level="INFO">${BOARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 18:29:23.023" endtime="20220705 18:29:23.305"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Set Suite Variable</arg>
<arg>\${TEST_SUITE_BOARD_ID}</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_BOARD_ID}</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220705 18:29:23.306" level="INFO">${TEST_SUITE_BOARD_ID} = 62c483038ca6136d8edca7ba</msg>
<status status="PASS" starttime="20220705 18:29:23.305" endtime="20220705 18:29:23.306"/>
</kw>
<status status="PASS" starttime="20220705 18:29:23.305" endtime="20220705 18:29:23.306"/>
</kw>
<status status="PASS" starttime="20220705 18:29:23.023" endtime="20220705 18:29:23.306"/>
</kw>
<status status="PASS" starttime="20220705 18:29:23.022" endtime="20220705 18:29:23.306"/>
</kw>
<test id="s1-s1-s5-t1" name="CREATE a list" line="13">
<kw name="Create A List" library="List">
<var>${response}</var>
<arg>NewList</arg>
<doc>Creates a new List
board id
name the list will have
optional_args: idListSource, pos, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>list</arg>
<arg>name</arg>
<arg>${name}</arg>
<arg>idBoard</arg>
<arg>${idBoard}</arg>
<arg>@{optional_args}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 18:29:23.308" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 18:29:23.308" endtime="20220705 18:29:23.308"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 18:29:23.308" endtime="20220705 18:29:23.308"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 18:29:23.309" level="INFO">${url} = lists/</msg>
<status status="PASS" starttime="20220705 18:29:23.308" endtime="20220705 18:29:23.309"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 18:29:23.476" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 18:29:23.309" endtime="20220705 18:29:23.476"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 18:29:23.476" endtime="20220705 18:29:23.477"/>
</return>
<msg timestamp="20220705 18:29:23.477" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 18:29:23.307" endtime="20220705 18:29:23.477"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 18:29:23.477" endtime="20220705 18:29:23.477"/>
</return>
<msg timestamp="20220705 18:29:23.477" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 18:29:23.307" endtime="20220705 18:29:23.477"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>list</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 18:29:23.478" endtime="20220705 18:29:23.479"/>
</kw>
<status status="PASS" starttime="20220705 18:29:23.477" endtime="20220705 18:29:23.480"/>
</kw>
<doc>Verify that a list can be created through API</doc>
<tag>api</tag>
<tag>list.create</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220705 18:29:23.306" endtime="20220705 18:29:23.480"/>
</test>
<test id="s1-s1-s5-t2" name="UPDATE a list" line="19">
<kw name="Create A List" library="List">
<var>${response}</var>
<arg>NewList</arg>
<doc>Creates a new List
board id
name the list will have
optional_args: idListSource, pos, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>list</arg>
<arg>name</arg>
<arg>${name}</arg>
<arg>idBoard</arg>
<arg>${idBoard}</arg>
<arg>@{optional_args}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 18:29:23.482" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 18:29:23.482" endtime="20220705 18:29:23.482"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 18:29:23.482" endtime="20220705 18:29:23.482"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 18:29:23.483" level="INFO">${url} = lists/</msg>
<status status="PASS" starttime="20220705 18:29:23.482" endtime="20220705 18:29:23.483"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 18:29:23.672" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 18:29:23.483" endtime="20220705 18:29:23.672"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 18:29:23.672" endtime="20220705 18:29:23.672"/>
</return>
<msg timestamp="20220705 18:29:23.672" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 18:29:23.481" endtime="20220705 18:29:23.672"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 18:29:23.672" endtime="20220705 18:29:23.672"/>
</return>
<msg timestamp="20220705 18:29:23.672" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 18:29:23.481" endtime="20220705 18:29:23.672"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>list</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 18:29:23.673" endtime="20220705 18:29:23.674"/>
</kw>
<status status="PASS" starttime="20220705 18:29:23.672" endtime="20220705 18:29:23.674"/>
</kw>
<kw name="Update A List" library="List">
<arg>${response.json()}[id]</arg>
<arg>name</arg>
<arg>NewName</arg>
<doc>Updates the board with the given ID
optional_args: name, idListSource, pos, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>list</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 18:29:23.676" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 18:29:23.676" endtime="20220705 18:29:23.676"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 18:29:23.676" endtime="20220705 18:29:23.676"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 18:29:23.677" level="INFO">${url} = lists/62c4830384ef8b33ff9e0c16</msg>
<status status="PASS" starttime="20220705 18:29:23.676" endtime="20220705 18:29:23.677"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 18:29:23.833" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 18:29:23.677" endtime="20220705 18:29:23.833"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 18:29:23.833" endtime="20220705 18:29:23.833"/>
</return>
<msg timestamp="20220705 18:29:23.833" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 18:29:23.675" endtime="20220705 18:29:23.833"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 18:29:23.833" endtime="20220705 18:29:23.833"/>
</return>
<status status="PASS" starttime="20220705 18:29:23.674" endtime="20220705 18:29:23.834"/>
</kw>
<kw name="Get A List" library="List">
<var>${new_response}</var>
<arg>${response.json()}[id]</arg>
<doc>Gets the List with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>list</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 18:29:23.835" level="INFO">${url} = lists/62c4830384ef8b33ff9e0c16</msg>
<status status="PASS" starttime="20220705 18:29:23.835" endtime="20220705 18:29:23.835"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 18:29:23.946" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 18:29:23.836" endtime="20220705 18:29:23.946"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 18:29:23.946" endtime="20220705 18:29:23.946"/>
</return>
<msg timestamp="20220705 18:29:23.946" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 18:29:23.835" endtime="20220705 18:29:23.947"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 18:29:23.947" endtime="20220705 18:29:23.947"/>
</return>
<msg timestamp="20220705 18:29:23.947" level="INFO">${new_response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 18:29:23.834" endtime="20220705 18:29:23.947"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${new_response}</arg>
<arg>list</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 18:29:23.947" endtime="20220705 18:29:23.949"/>
</kw>
<status status="PASS" starttime="20220705 18:29:23.947" endtime="20220705 18:29:23.949"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${new_response.json()}[name]</arg>
<arg>NewName</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220705 18:29:23.949" endtime="20220705 18:29:23.950"/>
</kw>
<doc>Verify that a lists name can be updated through API</doc>
<tag>api</tag>
<tag>list.update</tag>
<tag>regression</tag>
<status status="PASS" starttime="20220705 18:29:23.480" endtime="20220705 18:29:23.950"/>
</test>
<test id="s1-s1-s5-t3" name="ARCHIVE A list" line="29">
<kw name="Create A List" library="List">
<var>${response}</var>
<arg>NewList</arg>
<doc>Creates a new List
board id
name the list will have
optional_args: idListSource, pos, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>list</arg>
<arg>name</arg>
<arg>${name}</arg>
<arg>idBoard</arg>
<arg>${idBoard}</arg>
<arg>@{optional_args}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 18:29:23.951" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 18:29:23.951" endtime="20220705 18:29:23.952"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 18:29:23.952" endtime="20220705 18:29:23.953"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 18:29:23.954" level="INFO">${url} = lists/</msg>
<status status="PASS" starttime="20220705 18:29:23.953" endtime="20220705 18:29:23.954"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 18:29:24.113" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 18:29:23.954" endtime="20220705 18:29:24.113"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 18:29:24.113" endtime="20220705 18:29:24.113"/>
</return>
<msg timestamp="20220705 18:29:24.113" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 18:29:23.951" endtime="20220705 18:29:24.113"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 18:29:24.113" endtime="20220705 18:29:24.113"/>
</return>
<msg timestamp="20220705 18:29:24.113" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 18:29:23.951" endtime="20220705 18:29:24.113"/>
</kw>
<kw name="Archive A List" library="List">
<arg>${response.json()}[id]</arg>
<doc>Deletes the list with the given ID</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>archive_list</arg>
<arg>${id}</arg>
<arg>value</arg>
<arg>true</arg>
<arg>status_code=${status_code}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 18:29:24.115" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 18:29:24.115" endtime="20220705 18:29:24.115"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 18:29:24.115" endtime="20220705 18:29:24.116"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 18:29:24.116" level="INFO">${url} = lists/62c48304d20e9c3b99cc98e9/closed</msg>
<status status="PASS" starttime="20220705 18:29:24.116" endtime="20220705 18:29:24.116"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 18:29:24.309" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 18:29:24.116" endtime="20220705 18:29:24.310"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 18:29:24.310" endtime="20220705 18:29:24.310"/>
</return>
<msg timestamp="20220705 18:29:24.310" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 18:29:24.114" endtime="20220705 18:29:24.310"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 18:29:24.310" endtime="20220705 18:29:24.310"/>
</return>
<status status="PASS" starttime="20220705 18:29:24.114" endtime="20220705 18:29:24.310"/>
</kw>
<kw name="Get A List" library="List">
<var>${new_response}</var>
<arg>${response.json()}[id]</arg>
<doc>Gets the List with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>list</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 18:29:24.312" level="INFO">${url} = lists/62c48304d20e9c3b99cc98e9</msg>
<status status="PASS" starttime="20220705 18:29:24.312" endtime="20220705 18:29:24.312"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 18:29:24.430" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 18:29:24.312" endtime="20220705 18:29:24.430"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 18:29:24.430" endtime="20220705 18:29:24.430"/>
</return>
<msg timestamp="20220705 18:29:24.431" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 18:29:24.311" endtime="20220705 18:29:24.431"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 18:29:24.431" endtime="20220705 18:29:24.431"/>
</return>
<msg timestamp="20220705 18:29:24.431" level="INFO">${new_response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 18:29:24.310" endtime="20220705 18:29:24.431"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${new_response.json()}[closed]</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220705 18:29:24.431" endtime="20220705 18:29:24.432"/>
</kw>
<doc>Verify that a list can be archived through API</doc>
<tag>api</tag>
<tag>list.archive</tag>
<tag>regression</tag>
<status status="PASS" starttime="20220705 18:29:23.950" endtime="20220705 18:29:24.432"/>
</test>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Teardown Board</arg>
<arg>Delete All Sessions</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Teardown Board">
<doc>Delete the board created for this suite.</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 18:29:24.435" level="INFO">${url} = boards/62c483038ca6136d8edca7ba</msg>
<status status="PASS" starttime="20220705 18:29:24.434" endtime="20220705 18:29:24.435"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 18:29:24.846" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 18:29:24.435" endtime="20220705 18:29:24.847"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 18:29:24.847" endtime="20220705 18:29:24.847"/>
</return>
<msg timestamp="20220705 18:29:24.847" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 18:29:24.434" endtime="20220705 18:29:24.847"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 18:29:24.847" endtime="20220705 18:29:24.847"/>
</return>
<status status="PASS" starttime="20220705 18:29:24.433" endtime="20220705 18:29:24.847"/>
</kw>
<status status="PASS" starttime="20220705 18:29:24.433" endtime="20220705 18:29:24.847"/>
</kw>
<status status="PASS" starttime="20220705 18:29:24.433" endtime="20220705 18:29:24.847"/>
</kw>
<kw name="Delete All Sessions" library="request_own_library">
<status status="PASS" starttime="20220705 18:29:24.847" endtime="20220705 18:29:24.848"/>
</kw>
<status status="PASS" starttime="20220705 18:29:24.432" endtime="20220705 18:29:24.848"/>
</kw>
<doc>Example Test with Trello API lists</doc>
<status status="PASS" starttime="20220705 18:29:23.013" endtime="20220705 18:29:24.848"/>
</suite>
<status status="PASS" starttime="20220705 18:29:09.552" endtime="20220705 18:29:24.850"/>
</suite>
<status status="PASS" starttime="20220705 18:29:09.535" endtime="20220705 18:29:24.852"/>
</suite>
<statistics>
<total>
<stat pass="18" fail="0" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="18" fail="0" skip="0">api</stat>
<stat pass="1" fail="0" skip="0">board.create</stat>
<stat pass="1" fail="0" skip="0">board.delete</stat>
<stat pass="1" fail="0" skip="0">board.get</stat>
<stat pass="2" fail="0" skip="0">board.update</stat>
<stat pass="1" fail="0" skip="0">card.close</stat>
<stat pass="1" fail="0" skip="0">card.create</stat>
<stat pass="1" fail="0" skip="0">card.delete</stat>
<stat pass="1" fail="0" skip="0">card.update</stat>
<stat pass="1" fail="0" skip="0">checklist.create</stat>
<stat pass="1" fail="0" skip="0">checklist.delete</stat>
<stat pass="1" fail="0" skip="0">checklist.update</stat>
<stat pass="1" fail="0" skip="0">label.create</stat>
<stat pass="1" fail="0" skip="0">label.delete</stat>
<stat pass="1" fail="0" skip="0">label.get</stat>
<stat pass="1" fail="0" skip="0">label.update</stat>
<stat pass="1" fail="0" skip="0">list.archive</stat>
<stat pass="1" fail="0" skip="0">list.create</stat>
<stat pass="1" fail="0" skip="0">list.update</stat>
<stat pass="5" fail="0" skip="0">regression</stat>
<stat pass="13" fail="0" skip="0">smoke</stat>
</tag>
<suite>
<stat pass="18" fail="0" skip="0" id="s1" name="Trello">Trello</stat>
<stat pass="18" fail="0" skip="0" id="s1-s1" name="Api">Trello.Api</stat>
<stat pass="5" fail="0" skip="0" id="s1-s1-s1" name="Trello Api Boards Tests">Trello.Api.Trello Api Boards Tests</stat>
<stat pass="4" fail="0" skip="0" id="s1-s1-s2" name="Trello Api Cards Tests">Trello.Api.Trello Api Cards Tests</stat>
<stat pass="3" fail="0" skip="0" id="s1-s1-s3" name="Trello Api Checklists Tests">Trello.Api.Trello Api Checklists Tests</stat>
<stat pass="3" fail="0" skip="0" id="s1-s1-s4" name="Trello Api Labels Tests">Trello.Api.Trello Api Labels Tests</stat>
<stat pass="3" fail="0" skip="0" id="s1-s1-s5" name="Trello Api Lists Tests">Trello.Api.Trello Api Lists Tests</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
