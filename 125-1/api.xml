<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 5.0.1 (Python 3.10.5 on linux)" generated="20220704 21:20:00.579" rpa="false" schemaversion="3">
<suite id="s1" name="Trello" source="/trello">
<suite id="s1-s1" name="Api" source="/trello/api">
<suite id="s1-s1-s1" name="Trello Api Boards Tests" source="/trello/api/trello_api_boards_tests.robot">
<kw name="Create Trello Session" library="TrelloAPI" type="SETUP">
<doc>Creates a Trello Session</doc>
<kw name="Create Session" library="request_own_library">
<arg>${API_BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<status status="PASS" starttime="20220704 21:20:00.706" endtime="20220704 21:20:00.707"/>
</kw>
<status status="PASS" starttime="20220704 21:20:00.705" endtime="20220704 21:20:00.707"/>
</kw>
<test id="s1-s1-s1-t1" name="CREATE a board" line="9">
<kw name="Create A Board" library="Board">
<var>${response}</var>
<arg>NewBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 21:20:00.709" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 21:20:00.709" endtime="20220704 21:20:00.709"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 21:20:00.709" endtime="20220704 21:20:00.709"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 21:20:00.710" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220704 21:20:00.709" endtime="20220704 21:20:00.710"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 21:20:00.927" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:20:00.710" endtime="20220704 21:20:00.927"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:20:00.927" endtime="20220704 21:20:00.927"/>
</return>
<msg timestamp="20220704 21:20:00.928" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:20:00.708" endtime="20220704 21:20:00.928"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:20:00.928" endtime="20220704 21:20:00.928"/>
</return>
<msg timestamp="20220704 21:20:00.928" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:20:00.708" endtime="20220704 21:20:00.928"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>board</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220704 21:20:00.928" endtime="20220704 21:20:00.932"/>
</kw>
<status status="PASS" starttime="20220704 21:20:00.928" endtime="20220704 21:20:00.932"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${response.json()}[id]</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${response.json()}[id]</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 21:20:00.934" level="INFO">${url} = boards/62c3598026a3548db0a7ef9b</msg>
<status status="PASS" starttime="20220704 21:20:00.934" endtime="20220704 21:20:00.934"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 21:20:01.247" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:20:00.934" endtime="20220704 21:20:01.247"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:20:01.247" endtime="20220704 21:20:01.247"/>
</return>
<msg timestamp="20220704 21:20:01.247" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:20:00.934" endtime="20220704 21:20:01.248"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:20:01.248" endtime="20220704 21:20:01.248"/>
</return>
<status status="PASS" starttime="20220704 21:20:00.933" endtime="20220704 21:20:01.248"/>
</kw>
<status status="PASS" starttime="20220704 21:20:00.933" endtime="20220704 21:20:01.248"/>
</kw>
<doc>Verify that a board can be create through API</doc>
<tag>api</tag>
<tag>board.create</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220704 21:20:00.707" endtime="20220704 21:20:01.248"/>
</test>
<test id="s1-s1-s1-t2" name="UPDATE a Board's name" line="16">
<kw name="Create A Board" library="Board">
<var>${response}</var>
<arg>NewBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 21:20:01.251" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 21:20:01.251" endtime="20220704 21:20:01.251"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 21:20:01.251" endtime="20220704 21:20:01.251"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 21:20:01.252" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220704 21:20:01.251" endtime="20220704 21:20:01.252"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 21:20:01.398" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:20:01.252" endtime="20220704 21:20:01.398"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:20:01.398" endtime="20220704 21:20:01.398"/>
</return>
<msg timestamp="20220704 21:20:01.399" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:20:01.250" endtime="20220704 21:20:01.399"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:20:01.399" endtime="20220704 21:20:01.399"/>
</return>
<msg timestamp="20220704 21:20:01.399" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:20:01.250" endtime="20220704 21:20:01.399"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>board</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220704 21:20:01.400" endtime="20220704 21:20:01.404"/>
</kw>
<status status="PASS" starttime="20220704 21:20:01.399" endtime="20220704 21:20:01.404"/>
</kw>
<kw name="Update A Board" library="Board">
<arg>${response.json()}[id]</arg>
<arg>name</arg>
<arg>NewName</arg>
<doc>Updates the board with the given ID
optional_args: name, desc, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 21:20:01.406" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 21:20:01.406" endtime="20220704 21:20:01.406"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 21:20:01.406" endtime="20220704 21:20:01.406"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 21:20:01.406" level="INFO">${url} = boards/62c35981493e8752636e8f5f</msg>
<status status="PASS" starttime="20220704 21:20:01.406" endtime="20220704 21:20:01.406"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 21:20:01.505" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:20:01.406" endtime="20220704 21:20:01.505"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:20:01.505" endtime="20220704 21:20:01.505"/>
</return>
<msg timestamp="20220704 21:20:01.506" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:20:01.405" endtime="20220704 21:20:01.506"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:20:01.506" endtime="20220704 21:20:01.506"/>
</return>
<status status="PASS" starttime="20220704 21:20:01.404" endtime="20220704 21:20:01.506"/>
</kw>
<kw name="Get A Board" library="Board">
<var>${new_response}</var>
<arg>${response.json()}[id]</arg>
<doc>Gets the Board with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 21:20:01.508" level="INFO">${url} = boards/62c35981493e8752636e8f5f</msg>
<status status="PASS" starttime="20220704 21:20:01.507" endtime="20220704 21:20:01.508"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 21:20:01.565" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:20:01.508" endtime="20220704 21:20:01.565"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:20:01.565" endtime="20220704 21:20:01.565"/>
</return>
<msg timestamp="20220704 21:20:01.565" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:20:01.507" endtime="20220704 21:20:01.565"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:20:01.566" endtime="20220704 21:20:01.566"/>
</return>
<msg timestamp="20220704 21:20:01.566" level="INFO">${new_response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:20:01.506" endtime="20220704 21:20:01.566"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${new_response}</arg>
<arg>board</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220704 21:20:01.566" endtime="20220704 21:20:01.570"/>
</kw>
<status status="PASS" starttime="20220704 21:20:01.566" endtime="20220704 21:20:01.570"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${new_response.json()}[name]</arg>
<arg>NewName</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220704 21:20:01.570" endtime="20220704 21:20:01.571"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${response.json()}[id]</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${response.json()}[id]</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 21:20:01.574" level="INFO">${url} = boards/62c35981493e8752636e8f5f</msg>
<status status="PASS" starttime="20220704 21:20:01.573" endtime="20220704 21:20:01.574"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 21:20:01.857" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:20:01.574" endtime="20220704 21:20:01.857"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:20:01.857" endtime="20220704 21:20:01.858"/>
</return>
<msg timestamp="20220704 21:20:01.858" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:20:01.572" endtime="20220704 21:20:01.858"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:20:01.858" endtime="20220704 21:20:01.858"/>
</return>
<status status="PASS" starttime="20220704 21:20:01.572" endtime="20220704 21:20:01.858"/>
</kw>
<status status="PASS" starttime="20220704 21:20:01.571" endtime="20220704 21:20:01.858"/>
</kw>
<doc>Verify that a board's name can be updated through API</doc>
<tag>api</tag>
<tag>board.update</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220704 21:20:01.248" endtime="20220704 21:20:01.858"/>
</test>
<test id="s1-s1-s1-t3" name="DELETE A Board" line="27">
<kw name="Create A Board" library="Board">
<var>${response}</var>
<arg>NewBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 21:20:01.861" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 21:20:01.861" endtime="20220704 21:20:01.861"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 21:20:01.861" endtime="20220704 21:20:01.862"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 21:20:01.863" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220704 21:20:01.862" endtime="20220704 21:20:01.863"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 21:20:02.009" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:20:01.863" endtime="20220704 21:20:02.009"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:20:02.010" endtime="20220704 21:20:02.010"/>
</return>
<msg timestamp="20220704 21:20:02.010" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:20:01.861" endtime="20220704 21:20:02.010"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:20:02.010" endtime="20220704 21:20:02.010"/>
</return>
<msg timestamp="20220704 21:20:02.010" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:20:01.860" endtime="20220704 21:20:02.010"/>
</kw>
<kw name="Delete A Board" library="Board">
<arg>${response.json()}[id]</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 21:20:02.012" level="INFO">${url} = boards/62c3598171fcf53fa335dc72</msg>
<status status="PASS" starttime="20220704 21:20:02.012" endtime="20220704 21:20:02.012"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 21:20:02.355" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:20:02.012" endtime="20220704 21:20:02.355"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:20:02.355" endtime="20220704 21:20:02.355"/>
</return>
<msg timestamp="20220704 21:20:02.355" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:20:02.011" endtime="20220704 21:20:02.355"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:20:02.355" endtime="20220704 21:20:02.355"/>
</return>
<status status="PASS" starttime="20220704 21:20:02.010" endtime="20220704 21:20:02.355"/>
</kw>
<kw name="Get A Board" library="Board">
<arg>${response.json()}[id]</arg>
<arg>status_code=404</arg>
<doc>Gets the Board with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 21:20:02.358" level="INFO">${url} = boards/62c3598171fcf53fa335dc72</msg>
<status status="PASS" starttime="20220704 21:20:02.357" endtime="20220704 21:20:02.358"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 21:20:02.395" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220704 21:20:02.358" endtime="20220704 21:20:02.395"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:20:02.395" endtime="20220704 21:20:02.395"/>
</return>
<msg timestamp="20220704 21:20:02.395" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220704 21:20:02.357" endtime="20220704 21:20:02.395"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:20:02.395" endtime="20220704 21:20:02.395"/>
</return>
<status status="PASS" starttime="20220704 21:20:02.356" endtime="20220704 21:20:02.396"/>
</kw>
<doc>Verify that a board can be deleted through API</doc>
<tag>api</tag>
<tag>board.delete</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220704 21:20:01.859" endtime="20220704 21:20:02.396"/>
</test>
<test id="s1-s1-s1-t4" name="GET Information of A Board" line="34">
<kw name="Create A Board" library="Board">
<var>${response}</var>
<arg>BoardTest</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 21:20:02.399" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 21:20:02.399" endtime="20220704 21:20:02.399"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 21:20:02.399" endtime="20220704 21:20:02.399"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 21:20:02.400" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220704 21:20:02.399" endtime="20220704 21:20:02.400"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 21:20:02.540" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:20:02.400" endtime="20220704 21:20:02.540"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:20:02.540" endtime="20220704 21:20:02.540"/>
</return>
<msg timestamp="20220704 21:20:02.541" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:20:02.398" endtime="20220704 21:20:02.541"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:20:02.541" endtime="20220704 21:20:02.541"/>
</return>
<msg timestamp="20220704 21:20:02.541" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:20:02.398" endtime="20220704 21:20:02.541"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>board</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220704 21:20:02.541" endtime="20220704 21:20:02.545"/>
</kw>
<status status="PASS" starttime="20220704 21:20:02.541" endtime="20220704 21:20:02.546"/>
</kw>
<kw name="Get A Board" library="Board">
<var>${response2}</var>
<arg>${response.json()}[id]</arg>
<doc>Gets the Board with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 21:20:02.547" level="INFO">${url} = boards/62c359821bb6707e2ca60785</msg>
<status status="PASS" starttime="20220704 21:20:02.547" endtime="20220704 21:20:02.547"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 21:20:02.591" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:20:02.547" endtime="20220704 21:20:02.591"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:20:02.591" endtime="20220704 21:20:02.591"/>
</return>
<msg timestamp="20220704 21:20:02.591" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:20:02.546" endtime="20220704 21:20:02.591"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:20:02.591" endtime="20220704 21:20:02.591"/>
</return>
<msg timestamp="20220704 21:20:02.591" level="INFO">${response2} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:20:02.546" endtime="20220704 21:20:02.591"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response2}</arg>
<arg>board</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220704 21:20:02.592" endtime="20220704 21:20:02.596"/>
</kw>
<status status="PASS" starttime="20220704 21:20:02.592" endtime="20220704 21:20:02.596"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${response2.json()}[name]</arg>
<arg>BoardTest</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220704 21:20:02.596" endtime="20220704 21:20:02.597"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${response.json()}[id]</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${response.json()}[id]</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 21:20:02.599" level="INFO">${url} = boards/62c359821bb6707e2ca60785</msg>
<status status="PASS" starttime="20220704 21:20:02.598" endtime="20220704 21:20:02.599"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 21:20:02.912" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:20:02.599" endtime="20220704 21:20:02.912"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:20:02.912" endtime="20220704 21:20:02.912"/>
</return>
<msg timestamp="20220704 21:20:02.913" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:20:02.598" endtime="20220704 21:20:02.913"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:20:02.913" endtime="20220704 21:20:02.913"/>
</return>
<status status="PASS" starttime="20220704 21:20:02.597" endtime="20220704 21:20:02.913"/>
</kw>
<status status="PASS" starttime="20220704 21:20:02.597" endtime="20220704 21:20:02.913"/>
</kw>
<doc>Verify that a board's information can be accesed through API</doc>
<tag>api</tag>
<tag>board.get</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220704 21:20:02.397" endtime="20220704 21:20:02.913"/>
</test>
<test id="s1-s1-s1-t5" name="UPDATE a Board's description" line="45">
<kw name="Create A Board" library="Board">
<var>${response}</var>
<arg>NewBoardForTest</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 21:20:02.916" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 21:20:02.916" endtime="20220704 21:20:02.916"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 21:20:02.917" endtime="20220704 21:20:02.917"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 21:20:02.918" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220704 21:20:02.917" endtime="20220704 21:20:02.918"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 21:20:03.092" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:20:02.918" endtime="20220704 21:20:03.092"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:20:03.092" endtime="20220704 21:20:03.093"/>
</return>
<msg timestamp="20220704 21:20:03.093" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:20:02.916" endtime="20220704 21:20:03.093"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:20:03.093" endtime="20220704 21:20:03.093"/>
</return>
<msg timestamp="20220704 21:20:03.093" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:20:02.915" endtime="20220704 21:20:03.093"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>board</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220704 21:20:03.094" endtime="20220704 21:20:03.097"/>
</kw>
<status status="PASS" starttime="20220704 21:20:03.093" endtime="20220704 21:20:03.098"/>
</kw>
<kw name="Update A Board" library="Board">
<arg>${response.json()}[id]</arg>
<arg>desc</arg>
<arg>sampleDescription</arg>
<doc>Updates the board with the given ID
optional_args: name, desc, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 21:20:03.099" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 21:20:03.099" endtime="20220704 21:20:03.099"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 21:20:03.099" endtime="20220704 21:20:03.100"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 21:20:03.100" level="INFO">${url} = boards/62c35982e4eb6f79585bf8d6</msg>
<status status="PASS" starttime="20220704 21:20:03.100" endtime="20220704 21:20:03.100"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 21:20:03.200" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:20:03.100" endtime="20220704 21:20:03.200"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:20:03.200" endtime="20220704 21:20:03.200"/>
</return>
<msg timestamp="20220704 21:20:03.200" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:20:03.099" endtime="20220704 21:20:03.200"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:20:03.200" endtime="20220704 21:20:03.200"/>
</return>
<status status="PASS" starttime="20220704 21:20:03.098" endtime="20220704 21:20:03.201"/>
</kw>
<kw name="Get A Board" library="Board">
<var>${new_response}</var>
<arg>${response.json()}[id]</arg>
<doc>Gets the Board with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 21:20:03.203" level="INFO">${url} = boards/62c35982e4eb6f79585bf8d6</msg>
<status status="PASS" starttime="20220704 21:20:03.202" endtime="20220704 21:20:03.203"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 21:20:03.245" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:20:03.203" endtime="20220704 21:20:03.245"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:20:03.245" endtime="20220704 21:20:03.246"/>
</return>
<msg timestamp="20220704 21:20:03.246" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:20:03.202" endtime="20220704 21:20:03.246"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:20:03.246" endtime="20220704 21:20:03.246"/>
</return>
<msg timestamp="20220704 21:20:03.246" level="INFO">${new_response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:20:03.201" endtime="20220704 21:20:03.246"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${new_response.json()}[desc]</arg>
<arg>sampleDescription</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220704 21:20:03.246" endtime="20220704 21:20:03.247"/>
</kw>
<kw name="Update A Board" library="Board">
<arg>${response.json()}[id]</arg>
<arg>desc</arg>
<arg>updatedDescription</arg>
<doc>Updates the board with the given ID
optional_args: name, desc, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 21:20:03.249" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 21:20:03.249" endtime="20220704 21:20:03.249"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 21:20:03.249" endtime="20220704 21:20:03.249"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 21:20:03.250" level="INFO">${url} = boards/62c35982e4eb6f79585bf8d6</msg>
<status status="PASS" starttime="20220704 21:20:03.249" endtime="20220704 21:20:03.250"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 21:20:03.340" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:20:03.250" endtime="20220704 21:20:03.340"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:20:03.340" endtime="20220704 21:20:03.340"/>
</return>
<msg timestamp="20220704 21:20:03.341" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:20:03.248" endtime="20220704 21:20:03.341"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:20:03.341" endtime="20220704 21:20:03.341"/>
</return>
<status status="PASS" starttime="20220704 21:20:03.247" endtime="20220704 21:20:03.341"/>
</kw>
<kw name="Get A Board" library="Board">
<var>${new_response2}</var>
<arg>${response.json()}[id]</arg>
<doc>Gets the Board with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 21:20:03.343" level="INFO">${url} = boards/62c35982e4eb6f79585bf8d6</msg>
<status status="PASS" starttime="20220704 21:20:03.343" endtime="20220704 21:20:03.343"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 21:20:03.392" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:20:03.343" endtime="20220704 21:20:03.392"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:20:03.392" endtime="20220704 21:20:03.392"/>
</return>
<msg timestamp="20220704 21:20:03.392" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:20:03.342" endtime="20220704 21:20:03.392"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:20:03.392" endtime="20220704 21:20:03.392"/>
</return>
<msg timestamp="20220704 21:20:03.393" level="INFO">${new_response2} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:20:03.341" endtime="20220704 21:20:03.393"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${new_response2.json()}[desc]</arg>
<arg>updatedDescription</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220704 21:20:03.393" endtime="20220704 21:20:03.394"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${response.json()}[id]</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${response.json()}[id]</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 21:20:03.396" level="INFO">${url} = boards/62c35982e4eb6f79585bf8d6</msg>
<status status="PASS" starttime="20220704 21:20:03.396" endtime="20220704 21:20:03.396"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 21:20:03.706" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:20:03.396" endtime="20220704 21:20:03.706"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:20:03.706" endtime="20220704 21:20:03.706"/>
</return>
<msg timestamp="20220704 21:20:03.706" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:20:03.395" endtime="20220704 21:20:03.706"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:20:03.706" endtime="20220704 21:20:03.706"/>
</return>
<status status="PASS" starttime="20220704 21:20:03.394" endtime="20220704 21:20:03.707"/>
</kw>
<status status="PASS" starttime="20220704 21:20:03.394" endtime="20220704 21:20:03.707"/>
</kw>
<doc>Verify that a board's description can be updated through API</doc>
<tag>api</tag>
<tag>board.update</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220704 21:20:02.914" endtime="20220704 21:20:03.707"/>
</test>
<kw name="Delete All Sessions" library="request_own_library" type="TEARDOWN">
<status status="PASS" starttime="20220704 21:20:03.708" endtime="20220704 21:20:03.710"/>
</kw>
<doc>Example Test with Trello API Boards</doc>
<status status="PASS" starttime="20220704 21:20:00.600" endtime="20220704 21:20:03.710"/>
</suite>
<suite id="s1-s1-s2" name="Trello Api Cards Tests" source="/trello/api/trello_api_cards_tests.robot">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Create Trello Session</arg>
<arg>Setup Board And List</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Create Trello Session" library="TrelloAPI">
<doc>Creates a Trello Session</doc>
<kw name="Create Session" library="request_own_library">
<arg>${API_BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<status status="PASS" starttime="20220704 21:20:03.723" endtime="20220704 21:20:03.723"/>
</kw>
<status status="PASS" starttime="20220704 21:20:03.722" endtime="20220704 21:20:03.723"/>
</kw>
<kw name="Setup Board And List">
<doc>Create a board and save its ID and its first list's ID</doc>
<kw name="Create A Board" library="Board">
<var>${BOARD}</var>
<arg>TestBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 21:20:03.724" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 21:20:03.724" endtime="20220704 21:20:03.724"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 21:20:03.724" endtime="20220704 21:20:03.724"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 21:20:03.725" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220704 21:20:03.724" endtime="20220704 21:20:03.725"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 21:20:03.922" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:20:03.725" endtime="20220704 21:20:03.922"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:20:03.922" endtime="20220704 21:20:03.922"/>
</return>
<msg timestamp="20220704 21:20:03.923" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:20:03.723" endtime="20220704 21:20:03.923"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:20:03.923" endtime="20220704 21:20:03.923"/>
</return>
<msg timestamp="20220704 21:20:03.923" level="INFO">${BOARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:20:03.723" endtime="20220704 21:20:03.923"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_BOARD_ID}</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220704 21:20:03.924" level="INFO">${TEST_SUITE_BOARD_ID} = 62c3598334243a4539d42ffa</msg>
<status status="PASS" starttime="20220704 21:20:03.923" endtime="20220704 21:20:03.924"/>
</kw>
<kw name="Get Lists On A Board" library="Board">
<var>${LISTS}</var>
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Get all the lists in a board</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>lists_on_board</arg>
<arg>${id}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 21:20:03.925" level="INFO">${url} = boards/62c3598334243a4539d42ffa/lists/</msg>
<status status="PASS" starttime="20220704 21:20:03.925" endtime="20220704 21:20:03.925"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 21:20:03.971" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:20:03.925" endtime="20220704 21:20:03.971"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:20:03.971" endtime="20220704 21:20:03.971"/>
</return>
<msg timestamp="20220704 21:20:03.971" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:20:03.925" endtime="20220704 21:20:03.971"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:20:03.971" endtime="20220704 21:20:03.971"/>
</return>
<msg timestamp="20220704 21:20:03.971" level="INFO">${LISTS} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:20:03.924" endtime="20220704 21:20:03.972"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_LIST_ID}</arg>
<arg>${LISTS.json()}[0][id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220704 21:20:03.973" level="INFO">${TEST_SUITE_LIST_ID} = 62c3598334243a4539d43001</msg>
<status status="PASS" starttime="20220704 21:20:03.972" endtime="20220704 21:20:03.973"/>
</kw>
<status status="PASS" starttime="20220704 21:20:03.723" endtime="20220704 21:20:03.973"/>
</kw>
<status status="PASS" starttime="20220704 21:20:03.722" endtime="20220704 21:20:03.973"/>
</kw>
<test id="s1-s1-s2-t1" name="Verify A Card Can Be Created" line="13">
<kw name="Create A Card" library="Card">
<var>${response}</var>
<arg>name</arg>
<arg>RFCard2</arg>
<doc>Creates a new card in the given list.
required_args: listId
optional_args: name, desc, pos, idCardSource, idLabels, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>@{optional_args}</arg>
<arg>idList</arg>
<arg>${idList}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 21:20:03.975" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 21:20:03.975" endtime="20220704 21:20:03.975"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 21:20:03.975" endtime="20220704 21:20:03.976"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 21:20:03.976" level="INFO">${url} = cards/</msg>
<status status="PASS" starttime="20220704 21:20:03.976" endtime="20220704 21:20:03.977"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 21:20:04.133" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:20:03.977" endtime="20220704 21:20:04.133"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:20:04.133" endtime="20220704 21:20:04.133"/>
</return>
<msg timestamp="20220704 21:20:04.133" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:20:03.974" endtime="20220704 21:20:04.133"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:20:04.133" endtime="20220704 21:20:04.133"/>
</return>
<msg timestamp="20220704 21:20:04.133" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:20:03.974" endtime="20220704 21:20:04.133"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>card</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220704 21:20:04.134" endtime="20220704 21:20:04.139"/>
</kw>
<status status="PASS" starttime="20220704 21:20:04.133" endtime="20220704 21:20:04.140"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 21:20:04.140" endtime="20220704 21:20:04.140"/>
</return>
<msg timestamp="20220704 21:20:04.141" level="INFO">${CARD_ID} = 62c35984a27e670130b40360</msg>
<status status="PASS" starttime="20220704 21:20:04.140" endtime="20220704 21:20:04.141"/>
</kw>
<kw name="Get A Card" library="Card">
<var>${response}</var>
<arg>${CARD_ID}</arg>
<doc>Gets the card with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 21:20:04.142" level="INFO">${url} = cards/62c35984a27e670130b40360</msg>
<status status="PASS" starttime="20220704 21:20:04.142" endtime="20220704 21:20:04.142"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 21:20:04.212" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:20:04.142" endtime="20220704 21:20:04.213"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:20:04.213" endtime="20220704 21:20:04.213"/>
</return>
<msg timestamp="20220704 21:20:04.213" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:20:04.141" endtime="20220704 21:20:04.213"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:20:04.213" endtime="20220704 21:20:04.213"/>
</return>
<msg timestamp="20220704 21:20:04.213" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:20:04.141" endtime="20220704 21:20:04.213"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_NAME}</var>
<arg>${response}</arg>
<arg>name</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 21:20:04.214" endtime="20220704 21:20:04.214"/>
</return>
<msg timestamp="20220704 21:20:04.215" level="INFO">${CARD_NAME} = RFCard2</msg>
<status status="PASS" starttime="20220704 21:20:04.213" endtime="20220704 21:20:04.215"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${CARD_NAME}</arg>
<arg>RFCard2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220704 21:20:04.215" endtime="20220704 21:20:04.215"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Card</arg>
<arg>${CARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Card" library="Card">
<arg>${CARD_ID}</arg>
<doc>Deletes the card with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 21:20:04.217" level="INFO">${url} = cards/62c35984a27e670130b40360</msg>
<status status="PASS" starttime="20220704 21:20:04.217" endtime="20220704 21:20:04.217"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 21:20:04.371" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:20:04.217" endtime="20220704 21:20:04.371"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:20:04.371" endtime="20220704 21:20:04.371"/>
</return>
<msg timestamp="20220704 21:20:04.371" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:20:04.216" endtime="20220704 21:20:04.371"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:20:04.371" endtime="20220704 21:20:04.371"/>
</return>
<status status="PASS" starttime="20220704 21:20:04.216" endtime="20220704 21:20:04.372"/>
</kw>
<status status="PASS" starttime="20220704 21:20:04.215" endtime="20220704 21:20:04.372"/>
</kw>
<doc>Verify that a card can be created through API</doc>
<tag>api</tag>
<tag>card.create</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220704 21:20:03.973" endtime="20220704 21:20:04.372"/>
</test>
<test id="s1-s1-s2-t2" name="Verify A Card Can Be Closed" line="24">
<kw name="Create A Card" library="Card">
<var>${response}</var>
<doc>Creates a new card in the given list.
required_args: listId
optional_args: name, desc, pos, idCardSource, idLabels, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>@{optional_args}</arg>
<arg>idList</arg>
<arg>${idList}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 21:20:04.375" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 21:20:04.374" endtime="20220704 21:20:04.375"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 21:20:04.375" endtime="20220704 21:20:04.375"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 21:20:04.376" level="INFO">${url} = cards/</msg>
<status status="PASS" starttime="20220704 21:20:04.375" endtime="20220704 21:20:04.376"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 21:20:04.523" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:20:04.376" endtime="20220704 21:20:04.523"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:20:04.523" endtime="20220704 21:20:04.523"/>
</return>
<msg timestamp="20220704 21:20:04.523" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:20:04.374" endtime="20220704 21:20:04.523"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:20:04.523" endtime="20220704 21:20:04.523"/>
</return>
<msg timestamp="20220704 21:20:04.523" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:20:04.373" endtime="20220704 21:20:04.523"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 21:20:04.524" endtime="20220704 21:20:04.524"/>
</return>
<msg timestamp="20220704 21:20:04.525" level="INFO">${CARD_ID} = 62c35984c58a0d523f02b766</msg>
<status status="PASS" starttime="20220704 21:20:04.523" endtime="20220704 21:20:04.525"/>
</kw>
<kw name="Archive A Card" library="Card">
<arg>${CARD_ID}</arg>
<doc>Modifies the card status to closed.</doc>
<kw name="Update A Card" library="Card">
<var>${response}</var>
<arg>${id}</arg>
<arg>closed</arg>
<arg>true</arg>
<arg>status_code=${status_code}</arg>
<doc>Updates the card with the given ID
optional_args: name, desc, closed, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<arg>status_code=${status_code}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 21:20:04.527" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 21:20:04.527" endtime="20220704 21:20:04.527"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 21:20:04.527" endtime="20220704 21:20:04.528"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 21:20:04.528" level="INFO">${url} = cards/62c35984c58a0d523f02b766</msg>
<status status="PASS" starttime="20220704 21:20:04.528" endtime="20220704 21:20:04.528"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 21:20:04.652" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:20:04.528" endtime="20220704 21:20:04.652"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:20:04.652" endtime="20220704 21:20:04.652"/>
</return>
<msg timestamp="20220704 21:20:04.652" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:20:04.526" endtime="20220704 21:20:04.652"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:20:04.652" endtime="20220704 21:20:04.652"/>
</return>
<msg timestamp="20220704 21:20:04.652" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:20:04.525" endtime="20220704 21:20:04.652"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:20:04.652" endtime="20220704 21:20:04.652"/>
</return>
<status status="PASS" starttime="20220704 21:20:04.525" endtime="20220704 21:20:04.653"/>
</kw>
<kw name="Get A Card" library="Card">
<var>${response}</var>
<arg>${CARD_ID}</arg>
<doc>Gets the card with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 21:20:04.654" level="INFO">${url} = cards/62c35984c58a0d523f02b766</msg>
<status status="PASS" starttime="20220704 21:20:04.654" endtime="20220704 21:20:04.654"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 21:20:04.709" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:20:04.654" endtime="20220704 21:20:04.709"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:20:04.709" endtime="20220704 21:20:04.709"/>
</return>
<msg timestamp="20220704 21:20:04.709" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:20:04.653" endtime="20220704 21:20:04.709"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:20:04.709" endtime="20220704 21:20:04.709"/>
</return>
<msg timestamp="20220704 21:20:04.709" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:20:04.653" endtime="20220704 21:20:04.709"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_CLOSED}</var>
<arg>${response}</arg>
<arg>closed</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 21:20:04.710" endtime="20220704 21:20:04.710"/>
</return>
<msg timestamp="20220704 21:20:04.711" level="INFO">${CARD_CLOSED} = True</msg>
<status status="PASS" starttime="20220704 21:20:04.709" endtime="20220704 21:20:04.711"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${CARD_CLOSED}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220704 21:20:04.711" endtime="20220704 21:20:04.711"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Card</arg>
<arg>${CARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Card" library="Card">
<arg>${CARD_ID}</arg>
<doc>Deletes the card with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 21:20:04.713" level="INFO">${url} = cards/62c35984c58a0d523f02b766</msg>
<status status="PASS" starttime="20220704 21:20:04.712" endtime="20220704 21:20:04.713"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 21:20:04.835" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:20:04.713" endtime="20220704 21:20:04.835"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:20:04.835" endtime="20220704 21:20:04.835"/>
</return>
<msg timestamp="20220704 21:20:04.835" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:20:04.712" endtime="20220704 21:20:04.835"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:20:04.836" endtime="20220704 21:20:04.836"/>
</return>
<status status="PASS" starttime="20220704 21:20:04.712" endtime="20220704 21:20:04.836"/>
</kw>
<status status="PASS" starttime="20220704 21:20:04.711" endtime="20220704 21:20:04.836"/>
</kw>
<doc>Verify that a card can be closed through API</doc>
<tag>api</tag>
<tag>card.close</tag>
<tag>regression</tag>
<status status="PASS" starttime="20220704 21:20:04.372" endtime="20220704 21:20:04.836"/>
</test>
<test id="s1-s1-s2-t3" name="Verify A Card Can Be Deleted" line="35">
<kw name="Create A Card" library="Card">
<var>${response}</var>
<doc>Creates a new card in the given list.
required_args: listId
optional_args: name, desc, pos, idCardSource, idLabels, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>@{optional_args}</arg>
<arg>idList</arg>
<arg>${idList}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 21:20:04.839" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 21:20:04.839" endtime="20220704 21:20:04.839"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 21:20:04.839" endtime="20220704 21:20:04.840"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 21:20:04.840" level="INFO">${url} = cards/</msg>
<status status="PASS" starttime="20220704 21:20:04.840" endtime="20220704 21:20:04.840"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 21:20:04.976" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:20:04.841" endtime="20220704 21:20:04.977"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:20:04.977" endtime="20220704 21:20:04.977"/>
</return>
<msg timestamp="20220704 21:20:04.977" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:20:04.838" endtime="20220704 21:20:04.977"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:20:04.977" endtime="20220704 21:20:04.977"/>
</return>
<msg timestamp="20220704 21:20:04.977" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:20:04.837" endtime="20220704 21:20:04.977"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 21:20:04.978" endtime="20220704 21:20:04.978"/>
</return>
<msg timestamp="20220704 21:20:04.979" level="INFO">${CARD_ID} = 62c35984a37a0a145c6caa97</msg>
<status status="PASS" starttime="20220704 21:20:04.977" endtime="20220704 21:20:04.979"/>
</kw>
<kw name="Delete A Card" library="Card">
<var>${response}</var>
<arg>${CARD_ID}</arg>
<doc>Deletes the card with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 21:20:04.980" level="INFO">${url} = cards/62c35984a37a0a145c6caa97</msg>
<status status="PASS" starttime="20220704 21:20:04.980" endtime="20220704 21:20:04.980"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 21:20:05.119" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:20:04.980" endtime="20220704 21:20:05.120"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:20:05.120" endtime="20220704 21:20:05.120"/>
</return>
<msg timestamp="20220704 21:20:05.120" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:20:04.979" endtime="20220704 21:20:05.120"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:20:05.120" endtime="20220704 21:20:05.120"/>
</return>
<msg timestamp="20220704 21:20:05.120" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:20:04.979" endtime="20220704 21:20:05.120"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>delete</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220704 21:20:05.121" endtime="20220704 21:20:05.123"/>
</kw>
<status status="PASS" starttime="20220704 21:20:05.120" endtime="20220704 21:20:05.123"/>
</kw>
<kw name="Get A Card" library="Card">
<arg>${CARD_ID}</arg>
<arg>status_code=404</arg>
<doc>Gets the card with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 21:20:05.124" level="INFO">${url} = cards/62c35984a37a0a145c6caa97</msg>
<status status="PASS" starttime="20220704 21:20:05.124" endtime="20220704 21:20:05.125"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 21:20:05.159" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220704 21:20:05.125" endtime="20220704 21:20:05.159"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:20:05.159" endtime="20220704 21:20:05.159"/>
</return>
<msg timestamp="20220704 21:20:05.159" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220704 21:20:05.124" endtime="20220704 21:20:05.159"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:20:05.159" endtime="20220704 21:20:05.159"/>
</return>
<status status="PASS" starttime="20220704 21:20:05.123" endtime="20220704 21:20:05.159"/>
</kw>
<doc>Verify that a card can be deleted through API</doc>
<tag>api</tag>
<tag>card.delete</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220704 21:20:04.836" endtime="20220704 21:20:05.160"/>
</test>
<test id="s1-s1-s2-t4" name="Verify A Card Can Be Updated" line="44">
<kw name="Create A Card" library="Card">
<var>${response}</var>
<arg>name</arg>
<arg>RFCard4</arg>
<doc>Creates a new card in the given list.
required_args: listId
optional_args: name, desc, pos, idCardSource, idLabels, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>@{optional_args}</arg>
<arg>idList</arg>
<arg>${idList}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 21:20:05.162" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 21:20:05.162" endtime="20220704 21:20:05.162"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 21:20:05.162" endtime="20220704 21:20:05.163"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 21:20:05.164" level="INFO">${url} = cards/</msg>
<status status="PASS" starttime="20220704 21:20:05.163" endtime="20220704 21:20:05.164"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 21:20:05.315" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:20:05.164" endtime="20220704 21:20:05.315"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:20:05.315" endtime="20220704 21:20:05.315"/>
</return>
<msg timestamp="20220704 21:20:05.316" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:20:05.161" endtime="20220704 21:20:05.316"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:20:05.316" endtime="20220704 21:20:05.316"/>
</return>
<msg timestamp="20220704 21:20:05.316" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:20:05.161" endtime="20220704 21:20:05.316"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 21:20:05.317" endtime="20220704 21:20:05.317"/>
</return>
<msg timestamp="20220704 21:20:05.317" level="INFO">${CARD_ID} = 62c35985865df31a04f74e1f</msg>
<status status="PASS" starttime="20220704 21:20:05.316" endtime="20220704 21:20:05.317"/>
</kw>
<kw name="Update A Card" library="Card">
<var>${response}</var>
<arg>${CARD_ID}</arg>
<arg>name</arg>
<arg>RFCard5</arg>
<arg>desc</arg>
<arg>Description</arg>
<doc>Updates the card with the given ID
optional_args: name, desc, closed, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<arg>status_code=${status_code}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 21:20:05.319" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 21:20:05.319" endtime="20220704 21:20:05.319"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 21:20:05.319" endtime="20220704 21:20:05.319"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 21:20:05.320" level="INFO">${url} = cards/62c35985865df31a04f74e1f</msg>
<status status="PASS" starttime="20220704 21:20:05.319" endtime="20220704 21:20:05.320"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 21:20:05.472" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:20:05.320" endtime="20220704 21:20:05.472"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:20:05.472" endtime="20220704 21:20:05.473"/>
</return>
<msg timestamp="20220704 21:20:05.473" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:20:05.318" endtime="20220704 21:20:05.473"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:20:05.473" endtime="20220704 21:20:05.473"/>
</return>
<msg timestamp="20220704 21:20:05.473" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:20:05.318" endtime="20220704 21:20:05.473"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>card</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220704 21:20:05.474" endtime="20220704 21:20:05.479"/>
</kw>
<status status="PASS" starttime="20220704 21:20:05.473" endtime="20220704 21:20:05.479"/>
</kw>
<kw name="Get A Card" library="Card">
<var>${response}</var>
<arg>${CARD_ID}</arg>
<doc>Gets the card with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 21:20:05.480" level="INFO">${url} = cards/62c35985865df31a04f74e1f</msg>
<status status="PASS" starttime="20220704 21:20:05.480" endtime="20220704 21:20:05.480"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 21:20:05.529" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:20:05.480" endtime="20220704 21:20:05.529"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:20:05.529" endtime="20220704 21:20:05.529"/>
</return>
<msg timestamp="20220704 21:20:05.530" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:20:05.479" endtime="20220704 21:20:05.530"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:20:05.530" endtime="20220704 21:20:05.530"/>
</return>
<msg timestamp="20220704 21:20:05.530" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:20:05.479" endtime="20220704 21:20:05.530"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_NAME}</var>
<arg>${response}</arg>
<arg>name</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 21:20:05.531" endtime="20220704 21:20:05.531"/>
</return>
<msg timestamp="20220704 21:20:05.531" level="INFO">${CARD_NAME} = RFCard5</msg>
<status status="PASS" starttime="20220704 21:20:05.530" endtime="20220704 21:20:05.531"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_DESC}</var>
<arg>${response}</arg>
<arg>desc</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 21:20:05.532" endtime="20220704 21:20:05.532"/>
</return>
<msg timestamp="20220704 21:20:05.533" level="INFO">${CARD_DESC} = Description</msg>
<status status="PASS" starttime="20220704 21:20:05.532" endtime="20220704 21:20:05.533"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${CARD_NAME}</arg>
<arg>RFCard5</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220704 21:20:05.533" endtime="20220704 21:20:05.533"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${CARD_DESC}</arg>
<arg>Description</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220704 21:20:05.533" endtime="20220704 21:20:05.534"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Card</arg>
<arg>${CARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Card" library="Card">
<arg>${CARD_ID}</arg>
<doc>Deletes the card with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 21:20:05.535" level="INFO">${url} = cards/62c35985865df31a04f74e1f</msg>
<status status="PASS" starttime="20220704 21:20:05.535" endtime="20220704 21:20:05.535"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 21:20:05.699" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:20:05.536" endtime="20220704 21:20:05.699"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:20:05.700" endtime="20220704 21:20:05.700"/>
</return>
<msg timestamp="20220704 21:20:05.700" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:20:05.535" endtime="20220704 21:20:05.700"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:20:05.700" endtime="20220704 21:20:05.700"/>
</return>
<status status="PASS" starttime="20220704 21:20:05.534" endtime="20220704 21:20:05.700"/>
</kw>
<status status="PASS" starttime="20220704 21:20:05.534" endtime="20220704 21:20:05.700"/>
</kw>
<doc>Verify that a card's name and Description can be updated through API</doc>
<tag>api</tag>
<tag>card.update</tag>
<tag>regression</tag>
<status status="PASS" starttime="20220704 21:20:05.160" endtime="20220704 21:20:05.700"/>
</test>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Teardown Board</arg>
<arg>Delete All Sessions</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Teardown Board">
<doc>Delete the board created for this suite</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 21:20:05.704" level="INFO">${url} = boards/62c3598334243a4539d42ffa</msg>
<status status="PASS" starttime="20220704 21:20:05.703" endtime="20220704 21:20:05.704"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 21:20:05.996" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:20:05.704" endtime="20220704 21:20:05.997"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:20:05.997" endtime="20220704 21:20:05.997"/>
</return>
<msg timestamp="20220704 21:20:05.997" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:20:05.703" endtime="20220704 21:20:05.997"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:20:05.997" endtime="20220704 21:20:05.997"/>
</return>
<status status="PASS" starttime="20220704 21:20:05.702" endtime="20220704 21:20:05.997"/>
</kw>
<status status="PASS" starttime="20220704 21:20:05.702" endtime="20220704 21:20:05.997"/>
</kw>
<status status="PASS" starttime="20220704 21:20:05.702" endtime="20220704 21:20:05.997"/>
</kw>
<kw name="Delete All Sessions" library="request_own_library">
<status status="PASS" starttime="20220704 21:20:05.998" endtime="20220704 21:20:05.999"/>
</kw>
<status status="PASS" starttime="20220704 21:20:05.701" endtime="20220704 21:20:05.999"/>
</kw>
<doc>Example Test with Trello API Cards</doc>
<status status="PASS" starttime="20220704 21:20:03.712" endtime="20220704 21:20:05.999"/>
</suite>
<suite id="s1-s1-s3" name="Trello Api Checklists Tests" source="/trello/api/trello_api_checklists_tests.robot">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Create Trello Session</arg>
<arg>Setup Board, List And Card</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Create Trello Session" library="TrelloAPI">
<doc>Creates a Trello Session</doc>
<kw name="Create Session" library="request_own_library">
<arg>${API_BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<status status="PASS" starttime="20220704 21:20:06.010" endtime="20220704 21:20:06.010"/>
</kw>
<status status="PASS" starttime="20220704 21:20:06.010" endtime="20220704 21:20:06.011"/>
</kw>
<kw name="Setup Board, List And Card">
<doc>Create a board and save its ID and its first list's ID</doc>
<kw name="Create A Board" library="Board">
<var>${BOARD}</var>
<arg>TestBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 21:20:06.012" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 21:20:06.011" endtime="20220704 21:20:06.012"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 21:20:06.012" endtime="20220704 21:20:06.012"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 21:20:06.013" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220704 21:20:06.012" endtime="20220704 21:20:06.013"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 21:20:06.181" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:20:06.013" endtime="20220704 21:20:06.182"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:20:06.182" endtime="20220704 21:20:06.182"/>
</return>
<msg timestamp="20220704 21:20:06.182" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:20:06.011" endtime="20220704 21:20:06.182"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:20:06.182" endtime="20220704 21:20:06.182"/>
</return>
<msg timestamp="20220704 21:20:06.182" level="INFO">${BOARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:20:06.011" endtime="20220704 21:20:06.182"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_BOARD_ID}</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220704 21:20:06.183" level="INFO">${TEST_SUITE_BOARD_ID} = 62c359866d2a4f44ad79b7ed</msg>
<status status="PASS" starttime="20220704 21:20:06.182" endtime="20220704 21:20:06.183"/>
</kw>
<kw name="Get Lists On A Board" library="Board">
<var>${LISTS}</var>
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Get all the lists in a board</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>lists_on_board</arg>
<arg>${id}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 21:20:06.184" level="INFO">${url} = boards/62c359866d2a4f44ad79b7ed/lists/</msg>
<status status="PASS" starttime="20220704 21:20:06.184" endtime="20220704 21:20:06.185"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 21:20:06.229" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:20:06.185" endtime="20220704 21:20:06.229"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:20:06.229" endtime="20220704 21:20:06.230"/>
</return>
<msg timestamp="20220704 21:20:06.230" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:20:06.184" endtime="20220704 21:20:06.230"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:20:06.230" endtime="20220704 21:20:06.230"/>
</return>
<msg timestamp="20220704 21:20:06.230" level="INFO">${LISTS} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:20:06.183" endtime="20220704 21:20:06.230"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_LIST_ID}</arg>
<arg>${LISTS.json()}[0][id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220704 21:20:06.231" level="INFO">${TEST_SUITE_LIST_ID} = 62c359866d2a4f44ad79b7f4</msg>
<status status="PASS" starttime="20220704 21:20:06.230" endtime="20220704 21:20:06.231"/>
</kw>
<kw name="Create A Card" library="Card">
<var>${CARD}</var>
<arg>name</arg>
<arg>TestCard</arg>
<doc>Creates a new card in the given list.
required_args: listId
optional_args: name, desc, pos, idCardSource, idLabels, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>@{optional_args}</arg>
<arg>idList</arg>
<arg>${idList}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 21:20:06.233" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 21:20:06.233" endtime="20220704 21:20:06.233"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 21:20:06.233" endtime="20220704 21:20:06.233"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 21:20:06.234" level="INFO">${url} = cards/</msg>
<status status="PASS" starttime="20220704 21:20:06.233" endtime="20220704 21:20:06.234"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 21:20:06.403" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:20:06.234" endtime="20220704 21:20:06.403"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:20:06.403" endtime="20220704 21:20:06.403"/>
</return>
<msg timestamp="20220704 21:20:06.403" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:20:06.232" endtime="20220704 21:20:06.403"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:20:06.403" endtime="20220704 21:20:06.404"/>
</return>
<msg timestamp="20220704 21:20:06.404" level="INFO">${CARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:20:06.231" endtime="20220704 21:20:06.404"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_CARD_ID}</arg>
<arg>${CARD.json()}[id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220704 21:20:06.405" level="INFO">${TEST_SUITE_CARD_ID} = 62c35986e518c785ae0d8506</msg>
<status status="PASS" starttime="20220704 21:20:06.404" endtime="20220704 21:20:06.405"/>
</kw>
<status status="PASS" starttime="20220704 21:20:06.011" endtime="20220704 21:20:06.405"/>
</kw>
<status status="PASS" starttime="20220704 21:20:06.010" endtime="20220704 21:20:06.405"/>
</kw>
<test id="s1-s1-s3-t1" name="Verify A Checklist Can Be Created" line="14">
<kw name="Create A Checklist" library="Checklist">
<var>${response}</var>
<arg>name</arg>
<arg>TestChecklist</arg>
<arg>idCard=${TEST_SUITE_CARD_ID}</arg>
<doc>Creates a new checklist in the given card.
required_args: idCard
optional_args: name, pos, idChecklistSource
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>@{optional_args}</arg>
<arg>idCard</arg>
<arg>${idCard}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 21:20:06.407" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 21:20:06.407" endtime="20220704 21:20:06.407"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 21:20:06.407" endtime="20220704 21:20:06.407"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 21:20:06.408" level="INFO">${url} = checklists/</msg>
<status status="PASS" starttime="20220704 21:20:06.408" endtime="20220704 21:20:06.408"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 21:20:06.505" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:20:06.408" endtime="20220704 21:20:06.505"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:20:06.506" endtime="20220704 21:20:06.506"/>
</return>
<msg timestamp="20220704 21:20:06.506" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:20:06.406" endtime="20220704 21:20:06.506"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:20:06.506" endtime="20220704 21:20:06.506"/>
</return>
<msg timestamp="20220704 21:20:06.506" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:20:06.406" endtime="20220704 21:20:06.506"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${checklist_id}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 21:20:06.507" endtime="20220704 21:20:06.507"/>
</return>
<msg timestamp="20220704 21:20:06.508" level="INFO">${checklist_id} = 62c359868c04e51359bea60e</msg>
<status status="PASS" starttime="20220704 21:20:06.506" endtime="20220704 21:20:06.508"/>
</kw>
<kw name="Get A Checklist" library="Checklist">
<var>${response}</var>
<arg>${checklist_id}</arg>
<doc>Gets the checklist with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 21:20:06.509" level="INFO">${url} = checklists/62c359868c04e51359bea60e</msg>
<status status="PASS" starttime="20220704 21:20:06.509" endtime="20220704 21:20:06.509"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 21:20:06.554" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:20:06.509" endtime="20220704 21:20:06.554"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:20:06.554" endtime="20220704 21:20:06.554"/>
</return>
<msg timestamp="20220704 21:20:06.555" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:20:06.508" endtime="20220704 21:20:06.555"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:20:06.555" endtime="20220704 21:20:06.555"/>
</return>
<msg timestamp="20220704 21:20:06.555" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:20:06.508" endtime="20220704 21:20:06.555"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${checklist_name}</var>
<arg>${response}</arg>
<arg>name</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 21:20:06.556" endtime="20220704 21:20:06.556"/>
</return>
<msg timestamp="20220704 21:20:06.556" level="INFO">${checklist_name} = TestChecklist</msg>
<status status="PASS" starttime="20220704 21:20:06.555" endtime="20220704 21:20:06.556"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${checklist_name}</arg>
<arg>TestChecklist</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220704 21:20:06.556" endtime="20220704 21:20:06.557"/>
</kw>
<kw name="Delete A Checklist" library="Checklist" type="TEARDOWN">
<arg>${checklist_id}</arg>
<doc>Deletes the checklist with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 21:20:06.558" level="INFO">${url} = checklists/62c359868c04e51359bea60e</msg>
<status status="PASS" starttime="20220704 21:20:06.558" endtime="20220704 21:20:06.558"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 21:20:06.662" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:20:06.558" endtime="20220704 21:20:06.662"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:20:06.662" endtime="20220704 21:20:06.662"/>
</return>
<msg timestamp="20220704 21:20:06.663" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:20:06.557" endtime="20220704 21:20:06.663"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:20:06.663" endtime="20220704 21:20:06.663"/>
</return>
<status status="PASS" starttime="20220704 21:20:06.557" endtime="20220704 21:20:06.663"/>
</kw>
<doc>Verify that a checklist can be created through API</doc>
<tag>api</tag>
<tag>checklist.create</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220704 21:20:06.405" endtime="20220704 21:20:06.663"/>
</test>
<test id="s1-s1-s3-t2" name="Verify A Checklist Can Be Deleted" line="24">
<kw name="Create A Checklist" library="Checklist">
<var>${response}</var>
<arg>name</arg>
<arg>TestChecklist</arg>
<arg>idCard=${TEST_SUITE_CARD_ID}</arg>
<doc>Creates a new checklist in the given card.
required_args: idCard
optional_args: name, pos, idChecklistSource
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>@{optional_args}</arg>
<arg>idCard</arg>
<arg>${idCard}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 21:20:06.665" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 21:20:06.665" endtime="20220704 21:20:06.665"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 21:20:06.666" endtime="20220704 21:20:06.666"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 21:20:06.667" level="INFO">${url} = checklists/</msg>
<status status="PASS" starttime="20220704 21:20:06.666" endtime="20220704 21:20:06.667"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 21:20:06.785" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:20:06.667" endtime="20220704 21:20:06.785"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:20:06.785" endtime="20220704 21:20:06.785"/>
</return>
<msg timestamp="20220704 21:20:06.785" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:20:06.665" endtime="20220704 21:20:06.785"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:20:06.785" endtime="20220704 21:20:06.785"/>
</return>
<msg timestamp="20220704 21:20:06.786" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:20:06.664" endtime="20220704 21:20:06.786"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${checklist_id}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 21:20:06.786" endtime="20220704 21:20:06.786"/>
</return>
<msg timestamp="20220704 21:20:06.787" level="INFO">${checklist_id} = 62c359867220b387ed32ddef</msg>
<status status="PASS" starttime="20220704 21:20:06.786" endtime="20220704 21:20:06.787"/>
</kw>
<kw name="Delete A Checklist" library="Checklist">
<var>${response}</var>
<arg>${checklist_id}</arg>
<doc>Deletes the checklist with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 21:20:06.789" level="INFO">${url} = checklists/62c359867220b387ed32ddef</msg>
<status status="PASS" starttime="20220704 21:20:06.788" endtime="20220704 21:20:06.789"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 21:20:06.881" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:20:06.789" endtime="20220704 21:20:06.881"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:20:06.882" endtime="20220704 21:20:06.882"/>
</return>
<msg timestamp="20220704 21:20:06.882" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:20:06.788" endtime="20220704 21:20:06.882"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:20:06.882" endtime="20220704 21:20:06.882"/>
</return>
<msg timestamp="20220704 21:20:06.882" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:20:06.788" endtime="20220704 21:20:06.882"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>delete</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220704 21:20:06.883" endtime="20220704 21:20:06.885"/>
</kw>
<status status="PASS" starttime="20220704 21:20:06.882" endtime="20220704 21:20:06.885"/>
</kw>
<kw name="Get A Checklist" library="Checklist">
<arg>${checklist_id}</arg>
<arg>status_code=404</arg>
<doc>Gets the checklist with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 21:20:06.886" level="INFO">${url} = checklists/62c359867220b387ed32ddef</msg>
<status status="PASS" starttime="20220704 21:20:06.886" endtime="20220704 21:20:06.886"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 21:20:06.921" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220704 21:20:06.886" endtime="20220704 21:20:06.922"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:20:06.922" endtime="20220704 21:20:06.922"/>
</return>
<msg timestamp="20220704 21:20:06.922" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220704 21:20:06.885" endtime="20220704 21:20:06.922"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:20:06.922" endtime="20220704 21:20:06.922"/>
</return>
<status status="PASS" starttime="20220704 21:20:06.885" endtime="20220704 21:20:06.922"/>
</kw>
<doc>Verify that a checklist can be deleted through API</doc>
<tag>api</tag>
<tag>checklist.delete</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220704 21:20:06.663" endtime="20220704 21:20:06.922"/>
</test>
<test id="s1-s1-s3-t3" name="Verify A Checklist Can Be Updated" line="33">
<kw name="Create A Checklist" library="Checklist">
<var>${response}</var>
<arg>name</arg>
<arg>TestChecklist</arg>
<arg>idCard=${TEST_SUITE_CARD_ID}</arg>
<doc>Creates a new checklist in the given card.
required_args: idCard
optional_args: name, pos, idChecklistSource
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>@{optional_args}</arg>
<arg>idCard</arg>
<arg>${idCard}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 21:20:06.927" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 21:20:06.925" endtime="20220704 21:20:06.927"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 21:20:06.927" endtime="20220704 21:20:06.927"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 21:20:06.928" level="INFO">${url} = checklists/</msg>
<status status="PASS" starttime="20220704 21:20:06.927" endtime="20220704 21:20:06.928"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 21:20:07.032" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:20:06.928" endtime="20220704 21:20:07.032"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:20:07.032" endtime="20220704 21:20:07.032"/>
</return>
<msg timestamp="20220704 21:20:07.032" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:20:06.925" endtime="20220704 21:20:07.033"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:20:07.033" endtime="20220704 21:20:07.033"/>
</return>
<msg timestamp="20220704 21:20:07.033" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:20:06.924" endtime="20220704 21:20:07.033"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${checklist_id}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 21:20:07.033" endtime="20220704 21:20:07.033"/>
</return>
<msg timestamp="20220704 21:20:07.034" level="INFO">${checklist_id} = 62c35986e5de0b406adee913</msg>
<status status="PASS" starttime="20220704 21:20:07.033" endtime="20220704 21:20:07.034"/>
</kw>
<kw name="Update A Checklist" library="Checklist">
<var>${response}</var>
<arg>${checklist_id}</arg>
<arg>name</arg>
<arg>TestChecklist2</arg>
<doc>Updates the checklist with the given ID
optional_args: name, pos
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<arg>status_code=${status_code}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 21:20:07.035" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 21:20:07.035" endtime="20220704 21:20:07.035"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 21:20:07.035" endtime="20220704 21:20:07.036"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 21:20:07.036" level="INFO">${url} = checklists/62c35986e5de0b406adee913</msg>
<status status="PASS" starttime="20220704 21:20:07.036" endtime="20220704 21:20:07.036"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 21:20:07.111" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:20:07.036" endtime="20220704 21:20:07.111"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:20:07.111" endtime="20220704 21:20:07.111"/>
</return>
<msg timestamp="20220704 21:20:07.111" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:20:07.035" endtime="20220704 21:20:07.112"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:20:07.112" endtime="20220704 21:20:07.112"/>
</return>
<msg timestamp="20220704 21:20:07.112" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:20:07.034" endtime="20220704 21:20:07.112"/>
</kw>
<kw name="Get A Checklist" library="Checklist">
<var>${response}</var>
<arg>${checklist_id}</arg>
<doc>Gets the checklist with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 21:20:07.113" level="INFO">${url} = checklists/62c35986e5de0b406adee913</msg>
<status status="PASS" starttime="20220704 21:20:07.113" endtime="20220704 21:20:07.113"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 21:20:07.159" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:20:07.113" endtime="20220704 21:20:07.159"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:20:07.159" endtime="20220704 21:20:07.159"/>
</return>
<msg timestamp="20220704 21:20:07.159" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:20:07.112" endtime="20220704 21:20:07.159"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:20:07.159" endtime="20220704 21:20:07.159"/>
</return>
<msg timestamp="20220704 21:20:07.159" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:20:07.112" endtime="20220704 21:20:07.159"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${checklist_name}</var>
<arg>${response}</arg>
<arg>name</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 21:20:07.160" endtime="20220704 21:20:07.160"/>
</return>
<msg timestamp="20220704 21:20:07.161" level="INFO">${checklist_name} = TestChecklist2</msg>
<status status="PASS" starttime="20220704 21:20:07.159" endtime="20220704 21:20:07.161"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${checklist_name}</arg>
<arg>TestChecklist2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220704 21:20:07.161" endtime="20220704 21:20:07.161"/>
</kw>
<kw name="Delete A Checklist" library="Checklist" type="TEARDOWN">
<arg>${checklist_id}</arg>
<doc>Deletes the checklist with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 21:20:07.176" level="INFO">${url} = checklists/62c35986e5de0b406adee913</msg>
<status status="PASS" starttime="20220704 21:20:07.175" endtime="20220704 21:20:07.176"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 21:20:07.273" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:20:07.176" endtime="20220704 21:20:07.273"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:20:07.273" endtime="20220704 21:20:07.273"/>
</return>
<msg timestamp="20220704 21:20:07.273" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:20:07.175" endtime="20220704 21:20:07.273"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:20:07.273" endtime="20220704 21:20:07.273"/>
</return>
<status status="PASS" starttime="20220704 21:20:07.161" endtime="20220704 21:20:07.273"/>
</kw>
<doc>Verify that a checklist's name can be updated through API</doc>
<tag>api</tag>
<tag>checklist.update</tag>
<tag>regression</tag>
<status status="PASS" starttime="20220704 21:20:06.923" endtime="20220704 21:20:07.273"/>
</test>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Teardown Board</arg>
<arg>Delete All Sessions</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Teardown Board">
<doc>Delete the board created for this suite</doc>
<kw name="Delete A Board" library="Board">
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 21:20:07.276" level="INFO">${url} = boards/62c359866d2a4f44ad79b7ed</msg>
<status status="PASS" starttime="20220704 21:20:07.276" endtime="20220704 21:20:07.276"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 21:20:07.619" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:20:07.277" endtime="20220704 21:20:07.619"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:20:07.619" endtime="20220704 21:20:07.619"/>
</return>
<msg timestamp="20220704 21:20:07.619" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:20:07.276" endtime="20220704 21:20:07.619"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:20:07.619" endtime="20220704 21:20:07.619"/>
</return>
<status status="PASS" starttime="20220704 21:20:07.275" endtime="20220704 21:20:07.619"/>
</kw>
<status status="PASS" starttime="20220704 21:20:07.275" endtime="20220704 21:20:07.620"/>
</kw>
<kw name="Delete All Sessions" library="request_own_library">
<status status="PASS" starttime="20220704 21:20:07.620" endtime="20220704 21:20:07.621"/>
</kw>
<status status="PASS" starttime="20220704 21:20:07.274" endtime="20220704 21:20:07.621"/>
</kw>
<doc>Example Test with Trello API Checklists</doc>
<status status="PASS" starttime="20220704 21:20:06.000" endtime="20220704 21:20:07.621"/>
</suite>
<suite id="s1-s1-s4" name="Trello Api Labels Tests" source="/trello/api/trello_api_labels_tests.robot">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Create Trello Session</arg>
<arg>Setup Board And List</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Create Trello Session" library="TrelloAPI">
<doc>Creates a Trello Session</doc>
<kw name="Create Session" library="request_own_library">
<arg>${API_BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<status status="PASS" starttime="20220704 21:20:07.632" endtime="20220704 21:20:07.633"/>
</kw>
<status status="PASS" starttime="20220704 21:20:07.632" endtime="20220704 21:20:07.633"/>
</kw>
<kw name="Setup Board And List">
<doc>Create a board and save its ID and its first list's ID</doc>
<kw name="Create A Board" library="Board">
<var>${BOARD}</var>
<arg>TestBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 21:20:07.634" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 21:20:07.634" endtime="20220704 21:20:07.634"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 21:20:07.634" endtime="20220704 21:20:07.634"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 21:20:07.635" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220704 21:20:07.634" endtime="20220704 21:20:07.635"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 21:20:07.809" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:20:07.635" endtime="20220704 21:20:07.810"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:20:07.810" endtime="20220704 21:20:07.810"/>
</return>
<msg timestamp="20220704 21:20:07.810" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:20:07.633" endtime="20220704 21:20:07.810"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:20:07.810" endtime="20220704 21:20:07.810"/>
</return>
<msg timestamp="20220704 21:20:07.810" level="INFO">${BOARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:20:07.633" endtime="20220704 21:20:07.810"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_BOARD_ID}</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220704 21:20:07.811" level="INFO">${TEST_SUITE_BOARD_ID} = 62c3598719dcf708329dce92</msg>
<status status="PASS" starttime="20220704 21:20:07.810" endtime="20220704 21:20:07.811"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${LISTS}</var>
<arg>boards/${TEST_SUITE_BOARD_ID}/lists</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 21:20:07.880" level="INFO">${LISTS} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:20:07.811" endtime="20220704 21:20:07.880"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_LIST_ID}</arg>
<arg>${LISTS.json()}[0][id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220704 21:20:07.881" level="INFO">${TEST_SUITE_LIST_ID} = 62c3598719dcf708329dce99</msg>
<status status="PASS" starttime="20220704 21:20:07.880" endtime="20220704 21:20:07.881"/>
</kw>
<status status="PASS" starttime="20220704 21:20:07.633" endtime="20220704 21:20:07.881"/>
</kw>
<status status="PASS" starttime="20220704 21:20:07.632" endtime="20220704 21:20:07.881"/>
</kw>
<test id="s1-s1-s4-t1" name="Create and get label on board" line="14">
<kw name="Create A Label" library="Label">
<var>${response}</var>
<arg>name</arg>
<arg>label2</arg>
<arg>color</arg>
<arg>yellow</arg>
<doc>Creates a new label in the given board.
required_args: idBoard
optional_args: name, color
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>idBoard</arg>
<arg>${idBoard}</arg>
<arg>@{optional_args}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 21:20:07.883" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 21:20:07.883" endtime="20220704 21:20:07.883"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 21:20:07.883" endtime="20220704 21:20:07.884"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 21:20:07.885" level="INFO">${url} = labels/</msg>
<status status="PASS" starttime="20220704 21:20:07.884" endtime="20220704 21:20:07.885"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 21:20:07.980" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:20:07.885" endtime="20220704 21:20:07.980"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:20:07.980" endtime="20220704 21:20:07.981"/>
</return>
<msg timestamp="20220704 21:20:07.981" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:20:07.883" endtime="20220704 21:20:07.981"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:20:07.981" endtime="20220704 21:20:07.981"/>
</return>
<msg timestamp="20220704 21:20:07.981" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:20:07.882" endtime="20220704 21:20:07.981"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>label</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220704 21:20:07.982" endtime="20220704 21:20:07.984"/>
</kw>
<status status="PASS" starttime="20220704 21:20:07.981" endtime="20220704 21:20:07.984"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${LABEL_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 21:20:07.984" endtime="20220704 21:20:07.984"/>
</return>
<msg timestamp="20220704 21:20:07.985" level="INFO">${LABEL_ID} = 62c35987b39a8786a63cc09b</msg>
<status status="PASS" starttime="20220704 21:20:07.984" endtime="20220704 21:20:07.985"/>
</kw>
<kw name="Get A Label" library="Label">
<var>${response}</var>
<arg>${LABEL_ID}</arg>
<doc>Gets the label with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 21:20:07.986" level="INFO">${url} = labels/62c35987b39a8786a63cc09b</msg>
<status status="PASS" starttime="20220704 21:20:07.986" endtime="20220704 21:20:07.986"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 21:20:08.037" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:20:07.987" endtime="20220704 21:20:08.037"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:20:08.037" endtime="20220704 21:20:08.037"/>
</return>
<msg timestamp="20220704 21:20:08.038" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:20:07.986" endtime="20220704 21:20:08.038"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:20:08.038" endtime="20220704 21:20:08.038"/>
</return>
<msg timestamp="20220704 21:20:08.038" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:20:07.985" endtime="20220704 21:20:08.038"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${LABEL_COLOR}</var>
<arg>${response}</arg>
<arg>color</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 21:20:08.038" endtime="20220704 21:20:08.039"/>
</return>
<msg timestamp="20220704 21:20:08.039" level="INFO">${LABEL_COLOR} = yellow</msg>
<status status="PASS" starttime="20220704 21:20:08.038" endtime="20220704 21:20:08.039"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${LABEL_NAME}</var>
<arg>${response}</arg>
<arg>name</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 21:20:08.040" endtime="20220704 21:20:08.040"/>
</return>
<msg timestamp="20220704 21:20:08.041" level="INFO">${LABEL_NAME} = label2</msg>
<status status="PASS" starttime="20220704 21:20:08.039" endtime="20220704 21:20:08.041"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${LABEL_COLOR}</arg>
<arg>yellow</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220704 21:20:08.041" endtime="20220704 21:20:08.041"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${LABEL_NAME}</arg>
<arg>label2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220704 21:20:08.041" endtime="20220704 21:20:08.041"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Label</arg>
<arg>${LABEL_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Label" library="Label">
<arg>${LABEL_ID}</arg>
<doc>Deletes the label with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 21:20:08.043" level="INFO">${url} = labels/62c35987b39a8786a63cc09b</msg>
<status status="PASS" starttime="20220704 21:20:08.042" endtime="20220704 21:20:08.043"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 21:20:08.158" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:20:08.043" endtime="20220704 21:20:08.158"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:20:08.158" endtime="20220704 21:20:08.158"/>
</return>
<msg timestamp="20220704 21:20:08.158" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:20:08.042" endtime="20220704 21:20:08.158"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:20:08.158" endtime="20220704 21:20:08.158"/>
</return>
<status status="PASS" starttime="20220704 21:20:08.042" endtime="20220704 21:20:08.158"/>
</kw>
<status status="PASS" starttime="20220704 21:20:08.041" endtime="20220704 21:20:08.159"/>
</kw>
<doc>Verify that a label can be created through API</doc>
<tag>api</tag>
<tag>label.create</tag>
<tag>label.get</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220704 21:20:07.881" endtime="20220704 21:20:08.159"/>
</test>
<test id="s1-s1-s4-t2" name="Update label on board" line="28">
<kw name="Create A Label" library="Label">
<var>${response}</var>
<arg>name</arg>
<arg>label2</arg>
<arg>color</arg>
<arg>yellow</arg>
<doc>Creates a new label in the given board.
required_args: idBoard
optional_args: name, color
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>idBoard</arg>
<arg>${idBoard}</arg>
<arg>@{optional_args}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 21:20:08.162" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 21:20:08.161" endtime="20220704 21:20:08.162"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 21:20:08.162" endtime="20220704 21:20:08.162"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 21:20:08.163" level="INFO">${url} = labels/</msg>
<status status="PASS" starttime="20220704 21:20:08.162" endtime="20220704 21:20:08.163"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 21:20:08.251" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:20:08.163" endtime="20220704 21:20:08.251"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:20:08.251" endtime="20220704 21:20:08.251"/>
</return>
<msg timestamp="20220704 21:20:08.252" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:20:08.161" endtime="20220704 21:20:08.252"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:20:08.252" endtime="20220704 21:20:08.252"/>
</return>
<msg timestamp="20220704 21:20:08.252" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:20:08.160" endtime="20220704 21:20:08.252"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>label</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220704 21:20:08.252" endtime="20220704 21:20:08.254"/>
</kw>
<status status="PASS" starttime="20220704 21:20:08.252" endtime="20220704 21:20:08.254"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${LABEL_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 21:20:08.255" endtime="20220704 21:20:08.255"/>
</return>
<msg timestamp="20220704 21:20:08.256" level="INFO">${LABEL_ID} = 62c35988ceb7623b56af030b</msg>
<status status="PASS" starttime="20220704 21:20:08.255" endtime="20220704 21:20:08.256"/>
</kw>
<kw name="Update A Label" library="Label">
<var>${new_response}</var>
<arg>${LABEL_ID}</arg>
<arg>name</arg>
<arg>label3</arg>
<arg>color</arg>
<arg>orange</arg>
<doc>Updates the label with the given ID
optional_args: name, color
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 21:20:08.257" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 21:20:08.256" endtime="20220704 21:20:08.257"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 21:20:08.257" endtime="20220704 21:20:08.257"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 21:20:08.257" level="INFO">${url} = labels/62c35988ceb7623b56af030b</msg>
<status status="PASS" starttime="20220704 21:20:08.257" endtime="20220704 21:20:08.257"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 21:20:08.359" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:20:08.257" endtime="20220704 21:20:08.359"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:20:08.359" endtime="20220704 21:20:08.359"/>
</return>
<msg timestamp="20220704 21:20:08.359" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:20:08.256" endtime="20220704 21:20:08.359"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:20:08.359" endtime="20220704 21:20:08.359"/>
</return>
<msg timestamp="20220704 21:20:08.359" level="INFO">${new_response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:20:08.256" endtime="20220704 21:20:08.359"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${NEW_LABEL_COLOR}</var>
<arg>${new_response}</arg>
<arg>color</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 21:20:08.360" endtime="20220704 21:20:08.360"/>
</return>
<msg timestamp="20220704 21:20:08.361" level="INFO">${NEW_LABEL_COLOR} = orange</msg>
<status status="PASS" starttime="20220704 21:20:08.360" endtime="20220704 21:20:08.361"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${NEW_LABEL_NAME}</var>
<arg>${new_response}</arg>
<arg>name</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 21:20:08.361" endtime="20220704 21:20:08.361"/>
</return>
<msg timestamp="20220704 21:20:08.362" level="INFO">${NEW_LABEL_NAME} = label3</msg>
<status status="PASS" starttime="20220704 21:20:08.361" endtime="20220704 21:20:08.362"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${NEW_LABEL_COLOR}</arg>
<arg>orange</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220704 21:20:08.362" endtime="20220704 21:20:08.362"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${NEW_LABEL_NAME}</arg>
<arg>label3</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220704 21:20:08.363" endtime="20220704 21:20:08.363"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Label</arg>
<arg>${LABEL_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Label" library="Label">
<arg>${LABEL_ID}</arg>
<doc>Deletes the label with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 21:20:08.365" level="INFO">${url} = labels/62c35988ceb7623b56af030b</msg>
<status status="PASS" starttime="20220704 21:20:08.365" endtime="20220704 21:20:08.365"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 21:20:08.486" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:20:08.365" endtime="20220704 21:20:08.486"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:20:08.486" endtime="20220704 21:20:08.486"/>
</return>
<msg timestamp="20220704 21:20:08.486" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:20:08.364" endtime="20220704 21:20:08.486"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:20:08.486" endtime="20220704 21:20:08.486"/>
</return>
<status status="PASS" starttime="20220704 21:20:08.363" endtime="20220704 21:20:08.486"/>
</kw>
<status status="PASS" starttime="20220704 21:20:08.363" endtime="20220704 21:20:08.487"/>
</kw>
<doc>Verify that a label's name and color can be updated through API</doc>
<tag>api</tag>
<tag>label.update</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220704 21:20:08.159" endtime="20220704 21:20:08.487"/>
</test>
<test id="s1-s1-s4-t3" name="Delete label on board" line="41">
<kw name="Create A Label" library="Label">
<var>${response}</var>
<arg>name</arg>
<arg>label2</arg>
<arg>color</arg>
<arg>yellow</arg>
<doc>Creates a new label in the given board.
required_args: idBoard
optional_args: name, color
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>idBoard</arg>
<arg>${idBoard}</arg>
<arg>@{optional_args}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 21:20:08.489" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 21:20:08.489" endtime="20220704 21:20:08.489"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 21:20:08.489" endtime="20220704 21:20:08.490"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 21:20:08.490" level="INFO">${url} = labels/</msg>
<status status="PASS" starttime="20220704 21:20:08.490" endtime="20220704 21:20:08.490"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 21:20:08.574" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:20:08.490" endtime="20220704 21:20:08.574"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:20:08.574" endtime="20220704 21:20:08.574"/>
</return>
<msg timestamp="20220704 21:20:08.574" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:20:08.489" endtime="20220704 21:20:08.574"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:20:08.574" endtime="20220704 21:20:08.574"/>
</return>
<msg timestamp="20220704 21:20:08.575" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:20:08.488" endtime="20220704 21:20:08.575"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${LABEL_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 21:20:08.575" endtime="20220704 21:20:08.575"/>
</return>
<msg timestamp="20220704 21:20:08.576" level="INFO">${LABEL_ID} = 62c35988fd62ba5b55dfcace</msg>
<status status="PASS" starttime="20220704 21:20:08.575" endtime="20220704 21:20:08.576"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Label</arg>
<arg>${LABEL_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Label" library="Label">
<arg>${LABEL_ID}</arg>
<doc>Deletes the label with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 21:20:08.578" level="INFO">${url} = labels/62c35988fd62ba5b55dfcace</msg>
<status status="PASS" starttime="20220704 21:20:08.578" endtime="20220704 21:20:08.578"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 21:20:08.690" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:20:08.578" endtime="20220704 21:20:08.690"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:20:08.690" endtime="20220704 21:20:08.690"/>
</return>
<msg timestamp="20220704 21:20:08.690" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:20:08.577" endtime="20220704 21:20:08.691"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:20:08.691" endtime="20220704 21:20:08.691"/>
</return>
<status status="PASS" starttime="20220704 21:20:08.576" endtime="20220704 21:20:08.691"/>
</kw>
<status status="PASS" starttime="20220704 21:20:08.576" endtime="20220704 21:20:08.691"/>
</kw>
<kw name="Get A Label" library="Label">
<arg>${LABEL_ID}</arg>
<arg>status_code=404</arg>
<doc>Gets the label with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 21:20:08.692" level="INFO">${url} = labels/62c35988fd62ba5b55dfcace</msg>
<status status="PASS" starttime="20220704 21:20:08.692" endtime="20220704 21:20:08.692"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 21:20:08.723" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220704 21:20:08.692" endtime="20220704 21:20:08.723"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:20:08.723" endtime="20220704 21:20:08.723"/>
</return>
<msg timestamp="20220704 21:20:08.724" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220704 21:20:08.691" endtime="20220704 21:20:08.724"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:20:08.724" endtime="20220704 21:20:08.724"/>
</return>
<status status="PASS" starttime="20220704 21:20:08.691" endtime="20220704 21:20:08.724"/>
</kw>
<doc>Verify that a label can be deleted through API</doc>
<tag>api</tag>
<tag>label.delete</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220704 21:20:08.487" endtime="20220704 21:20:08.724"/>
</test>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Teardown Board</arg>
<arg>Delete All Sessions</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Teardown Board">
<doc>Delete the board created for this session.</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 21:20:08.727" level="INFO">${url} = boards/62c3598719dcf708329dce92</msg>
<status status="PASS" starttime="20220704 21:20:08.726" endtime="20220704 21:20:08.727"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 21:20:09.021" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:20:08.727" endtime="20220704 21:20:09.021"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:20:09.021" endtime="20220704 21:20:09.021"/>
</return>
<msg timestamp="20220704 21:20:09.022" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:20:08.726" endtime="20220704 21:20:09.022"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:20:09.022" endtime="20220704 21:20:09.022"/>
</return>
<status status="PASS" starttime="20220704 21:20:08.726" endtime="20220704 21:20:09.022"/>
</kw>
<status status="PASS" starttime="20220704 21:20:08.725" endtime="20220704 21:20:09.022"/>
</kw>
<status status="PASS" starttime="20220704 21:20:08.725" endtime="20220704 21:20:09.022"/>
</kw>
<kw name="Delete All Sessions" library="request_own_library">
<status status="PASS" starttime="20220704 21:20:09.022" endtime="20220704 21:20:09.023"/>
</kw>
<status status="PASS" starttime="20220704 21:20:08.725" endtime="20220704 21:20:09.023"/>
</kw>
<doc>Example Test with Trello API Cards</doc>
<status status="PASS" starttime="20220704 21:20:07.622" endtime="20220704 21:20:09.024"/>
</suite>
<suite id="s1-s1-s5" name="Trello Api Lists Tests" source="/trello/api/trello_api_lists_tests.robot">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Create Trello Session</arg>
<arg>Setup Board</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Create Trello Session" library="TrelloAPI">
<doc>Creates a Trello Session</doc>
<kw name="Create Session" library="request_own_library">
<arg>${API_BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<status status="PASS" starttime="20220704 21:20:09.033" endtime="20220704 21:20:09.034"/>
</kw>
<status status="PASS" starttime="20220704 21:20:09.033" endtime="20220704 21:20:09.034"/>
</kw>
<kw name="Setup Board">
<doc>Create a board and save it's id for the suite</doc>
<kw name="Create A Board" library="Board">
<var>${BOARD}</var>
<arg>TestBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 21:20:09.035" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 21:20:09.035" endtime="20220704 21:20:09.035"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 21:20:09.035" endtime="20220704 21:20:09.035"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 21:20:09.036" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220704 21:20:09.035" endtime="20220704 21:20:09.036"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 21:20:09.206" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:20:09.036" endtime="20220704 21:20:09.206"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:20:09.206" endtime="20220704 21:20:09.206"/>
</return>
<msg timestamp="20220704 21:20:09.206" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:20:09.034" endtime="20220704 21:20:09.206"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:20:09.206" endtime="20220704 21:20:09.206"/>
</return>
<msg timestamp="20220704 21:20:09.206" level="INFO">${BOARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:20:09.034" endtime="20220704 21:20:09.206"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Set Suite Variable</arg>
<arg>\${TEST_SUITE_BOARD_ID}</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_BOARD_ID}</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220704 21:20:09.208" level="INFO">${TEST_SUITE_BOARD_ID} = 62c359897c9903889b5f3e49</msg>
<status status="PASS" starttime="20220704 21:20:09.207" endtime="20220704 21:20:09.208"/>
</kw>
<status status="PASS" starttime="20220704 21:20:09.207" endtime="20220704 21:20:09.208"/>
</kw>
<status status="PASS" starttime="20220704 21:20:09.034" endtime="20220704 21:20:09.208"/>
</kw>
<status status="PASS" starttime="20220704 21:20:09.033" endtime="20220704 21:20:09.208"/>
</kw>
<test id="s1-s1-s5-t1" name="CREATE a list" line="13">
<kw name="Create A List" library="List">
<var>${response}</var>
<arg>NewList</arg>
<doc>Creates a new List
board id
name the list will have
optional_args: idListSource, pos, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>list</arg>
<arg>name</arg>
<arg>${name}</arg>
<arg>idBoard</arg>
<arg>${idBoard}</arg>
<arg>@{optional_args}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 21:20:09.210" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 21:20:09.210" endtime="20220704 21:20:09.210"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 21:20:09.210" endtime="20220704 21:20:09.210"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 21:20:09.211" level="INFO">${url} = lists/</msg>
<status status="PASS" starttime="20220704 21:20:09.210" endtime="20220704 21:20:09.211"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 21:20:09.313" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:20:09.211" endtime="20220704 21:20:09.313"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:20:09.313" endtime="20220704 21:20:09.313"/>
</return>
<msg timestamp="20220704 21:20:09.313" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:20:09.209" endtime="20220704 21:20:09.313"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:20:09.313" endtime="20220704 21:20:09.313"/>
</return>
<msg timestamp="20220704 21:20:09.314" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:20:09.209" endtime="20220704 21:20:09.314"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>list</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220704 21:20:09.314" endtime="20220704 21:20:09.316"/>
</kw>
<status status="PASS" starttime="20220704 21:20:09.314" endtime="20220704 21:20:09.316"/>
</kw>
<doc>Verify that a list can be created through API</doc>
<tag>api</tag>
<tag>list.create</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220704 21:20:09.208" endtime="20220704 21:20:09.316"/>
</test>
<test id="s1-s1-s5-t2" name="UPDATE a list" line="19">
<kw name="Create A List" library="List">
<var>${response}</var>
<arg>NewList</arg>
<doc>Creates a new List
board id
name the list will have
optional_args: idListSource, pos, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>list</arg>
<arg>name</arg>
<arg>${name}</arg>
<arg>idBoard</arg>
<arg>${idBoard}</arg>
<arg>@{optional_args}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 21:20:09.319" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 21:20:09.318" endtime="20220704 21:20:09.319"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 21:20:09.319" endtime="20220704 21:20:09.319"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 21:20:09.320" level="INFO">${url} = lists/</msg>
<status status="PASS" starttime="20220704 21:20:09.319" endtime="20220704 21:20:09.320"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 21:20:09.416" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:20:09.320" endtime="20220704 21:20:09.417"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:20:09.417" endtime="20220704 21:20:09.417"/>
</return>
<msg timestamp="20220704 21:20:09.417" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:20:09.318" endtime="20220704 21:20:09.417"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:20:09.417" endtime="20220704 21:20:09.417"/>
</return>
<msg timestamp="20220704 21:20:09.417" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:20:09.317" endtime="20220704 21:20:09.417"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>list</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220704 21:20:09.418" endtime="20220704 21:20:09.420"/>
</kw>
<status status="PASS" starttime="20220704 21:20:09.417" endtime="20220704 21:20:09.420"/>
</kw>
<kw name="Update A List" library="List">
<arg>${response.json()}[id]</arg>
<arg>name</arg>
<arg>NewName</arg>
<doc>Updates the board with the given ID
optional_args: name, idListSource, pos, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>list</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 21:20:09.422" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 21:20:09.422" endtime="20220704 21:20:09.422"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 21:20:09.422" endtime="20220704 21:20:09.423"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 21:20:09.423" level="INFO">${url} = lists/62c35989bfb6a951f8ccc458</msg>
<status status="PASS" starttime="20220704 21:20:09.423" endtime="20220704 21:20:09.423"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 21:20:09.505" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:20:09.423" endtime="20220704 21:20:09.505"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:20:09.505" endtime="20220704 21:20:09.505"/>
</return>
<msg timestamp="20220704 21:20:09.505" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:20:09.421" endtime="20220704 21:20:09.505"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:20:09.505" endtime="20220704 21:20:09.505"/>
</return>
<status status="PASS" starttime="20220704 21:20:09.420" endtime="20220704 21:20:09.505"/>
</kw>
<kw name="Get A List" library="List">
<var>${new_response}</var>
<arg>${response.json()}[id]</arg>
<doc>Gets the List with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>list</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 21:20:09.507" level="INFO">${url} = lists/62c35989bfb6a951f8ccc458</msg>
<status status="PASS" starttime="20220704 21:20:09.507" endtime="20220704 21:20:09.507"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 21:20:09.550" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:20:09.507" endtime="20220704 21:20:09.550"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:20:09.550" endtime="20220704 21:20:09.550"/>
</return>
<msg timestamp="20220704 21:20:09.551" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:20:09.506" endtime="20220704 21:20:09.551"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:20:09.551" endtime="20220704 21:20:09.551"/>
</return>
<msg timestamp="20220704 21:20:09.551" level="INFO">${new_response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:20:09.506" endtime="20220704 21:20:09.551"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${new_response}</arg>
<arg>list</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220704 21:20:09.551" endtime="20220704 21:20:09.553"/>
</kw>
<status status="PASS" starttime="20220704 21:20:09.551" endtime="20220704 21:20:09.553"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${new_response.json()}[name]</arg>
<arg>NewName</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220704 21:20:09.553" endtime="20220704 21:20:09.554"/>
</kw>
<doc>Verify that a lists name can be updated through API</doc>
<tag>api</tag>
<tag>list.update</tag>
<tag>regression</tag>
<status status="PASS" starttime="20220704 21:20:09.317" endtime="20220704 21:20:09.554"/>
</test>
<test id="s1-s1-s5-t3" name="ARCHIVE A list" line="29">
<kw name="Create A List" library="List">
<var>${response}</var>
<arg>NewList</arg>
<doc>Creates a new List
board id
name the list will have
optional_args: idListSource, pos, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>list</arg>
<arg>name</arg>
<arg>${name}</arg>
<arg>idBoard</arg>
<arg>${idBoard}</arg>
<arg>@{optional_args}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 21:20:09.557" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 21:20:09.557" endtime="20220704 21:20:09.557"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 21:20:09.557" endtime="20220704 21:20:09.558"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 21:20:09.558" level="INFO">${url} = lists/</msg>
<status status="PASS" starttime="20220704 21:20:09.558" endtime="20220704 21:20:09.558"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 21:20:09.683" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:20:09.558" endtime="20220704 21:20:09.683"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:20:09.683" endtime="20220704 21:20:09.683"/>
</return>
<msg timestamp="20220704 21:20:09.683" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:20:09.557" endtime="20220704 21:20:09.683"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:20:09.683" endtime="20220704 21:20:09.683"/>
</return>
<msg timestamp="20220704 21:20:09.683" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:20:09.555" endtime="20220704 21:20:09.684"/>
</kw>
<kw name="Archive A List" library="List">
<arg>${response.json()}[id]</arg>
<doc>Deletes the list with the given ID</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>archive_list</arg>
<arg>${id}</arg>
<arg>value</arg>
<arg>true</arg>
<arg>status_code=${status_code}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 21:20:09.686" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 21:20:09.685" endtime="20220704 21:20:09.686"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 21:20:09.686" endtime="20220704 21:20:09.686"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 21:20:09.686" level="INFO">${url} = lists/62c35989ea7f8f25cfd920a9/closed</msg>
<status status="PASS" starttime="20220704 21:20:09.686" endtime="20220704 21:20:09.686"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 21:20:09.768" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:20:09.687" endtime="20220704 21:20:09.768"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:20:09.768" endtime="20220704 21:20:09.768"/>
</return>
<msg timestamp="20220704 21:20:09.768" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:20:09.685" endtime="20220704 21:20:09.768"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:20:09.768" endtime="20220704 21:20:09.768"/>
</return>
<status status="PASS" starttime="20220704 21:20:09.684" endtime="20220704 21:20:09.768"/>
</kw>
<kw name="Get A List" library="List">
<var>${new_response}</var>
<arg>${response.json()}[id]</arg>
<doc>Gets the List with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>list</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 21:20:09.770" level="INFO">${url} = lists/62c35989ea7f8f25cfd920a9</msg>
<status status="PASS" starttime="20220704 21:20:09.770" endtime="20220704 21:20:09.770"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 21:20:09.810" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:20:09.770" endtime="20220704 21:20:09.810"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:20:09.810" endtime="20220704 21:20:09.810"/>
</return>
<msg timestamp="20220704 21:20:09.810" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:20:09.769" endtime="20220704 21:20:09.810"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:20:09.810" endtime="20220704 21:20:09.810"/>
</return>
<msg timestamp="20220704 21:20:09.810" level="INFO">${new_response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:20:09.769" endtime="20220704 21:20:09.810"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${new_response.json()}[closed]</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220704 21:20:09.811" endtime="20220704 21:20:09.811"/>
</kw>
<doc>Verify that a list can be archived through API</doc>
<tag>api</tag>
<tag>list.archive</tag>
<tag>regression</tag>
<status status="PASS" starttime="20220704 21:20:09.555" endtime="20220704 21:20:09.812"/>
</test>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Teardown Board</arg>
<arg>Delete All Sessions</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Teardown Board">
<doc>Delete the board created for this suite.</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 21:20:09.815" level="INFO">${url} = boards/62c359897c9903889b5f3e49</msg>
<status status="PASS" starttime="20220704 21:20:09.814" endtime="20220704 21:20:09.815"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 21:20:10.090" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:20:09.815" endtime="20220704 21:20:10.090"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:20:10.090" endtime="20220704 21:20:10.090"/>
</return>
<msg timestamp="20220704 21:20:10.090" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:20:09.814" endtime="20220704 21:20:10.090"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:20:10.090" endtime="20220704 21:20:10.091"/>
</return>
<status status="PASS" starttime="20220704 21:20:09.814" endtime="20220704 21:20:10.091"/>
</kw>
<status status="PASS" starttime="20220704 21:20:09.813" endtime="20220704 21:20:10.091"/>
</kw>
<status status="PASS" starttime="20220704 21:20:09.813" endtime="20220704 21:20:10.091"/>
</kw>
<kw name="Delete All Sessions" library="request_own_library">
<status status="PASS" starttime="20220704 21:20:10.091" endtime="20220704 21:20:10.092"/>
</kw>
<status status="PASS" starttime="20220704 21:20:09.812" endtime="20220704 21:20:10.092"/>
</kw>
<doc>Example Test with Trello API lists</doc>
<status status="PASS" starttime="20220704 21:20:09.025" endtime="20220704 21:20:10.092"/>
</suite>
<status status="PASS" starttime="20220704 21:20:00.598" endtime="20220704 21:20:10.094"/>
</suite>
<status status="PASS" starttime="20220704 21:20:00.580" endtime="20220704 21:20:10.096"/>
</suite>
<statistics>
<total>
<stat pass="18" fail="0" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="18" fail="0" skip="0">api</stat>
<stat pass="1" fail="0" skip="0">board.create</stat>
<stat pass="1" fail="0" skip="0">board.delete</stat>
<stat pass="1" fail="0" skip="0">board.get</stat>
<stat pass="2" fail="0" skip="0">board.update</stat>
<stat pass="1" fail="0" skip="0">card.close</stat>
<stat pass="1" fail="0" skip="0">card.create</stat>
<stat pass="1" fail="0" skip="0">card.delete</stat>
<stat pass="1" fail="0" skip="0">card.update</stat>
<stat pass="1" fail="0" skip="0">checklist.create</stat>
<stat pass="1" fail="0" skip="0">checklist.delete</stat>
<stat pass="1" fail="0" skip="0">checklist.update</stat>
<stat pass="1" fail="0" skip="0">label.create</stat>
<stat pass="1" fail="0" skip="0">label.delete</stat>
<stat pass="1" fail="0" skip="0">label.get</stat>
<stat pass="1" fail="0" skip="0">label.update</stat>
<stat pass="1" fail="0" skip="0">list.archive</stat>
<stat pass="1" fail="0" skip="0">list.create</stat>
<stat pass="1" fail="0" skip="0">list.update</stat>
<stat pass="5" fail="0" skip="0">regression</stat>
<stat pass="13" fail="0" skip="0">smoke</stat>
</tag>
<suite>
<stat pass="18" fail="0" skip="0" id="s1" name="Trello">Trello</stat>
<stat pass="18" fail="0" skip="0" id="s1-s1" name="Api">Trello.Api</stat>
<stat pass="5" fail="0" skip="0" id="s1-s1-s1" name="Trello Api Boards Tests">Trello.Api.Trello Api Boards Tests</stat>
<stat pass="4" fail="0" skip="0" id="s1-s1-s2" name="Trello Api Cards Tests">Trello.Api.Trello Api Cards Tests</stat>
<stat pass="3" fail="0" skip="0" id="s1-s1-s3" name="Trello Api Checklists Tests">Trello.Api.Trello Api Checklists Tests</stat>
<stat pass="3" fail="0" skip="0" id="s1-s1-s4" name="Trello Api Labels Tests">Trello.Api.Trello Api Labels Tests</stat>
<stat pass="3" fail="0" skip="0" id="s1-s1-s5" name="Trello Api Lists Tests">Trello.Api.Trello Api Lists Tests</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
