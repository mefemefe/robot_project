<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 5.0.1 (Python 3.10.5 on linux)" generated="20220706 04:05:15.704" rpa="false" schemaversion="3">
<suite id="s1" name="Trello" source="/trello">
<suite id="s1-s1" name="Api" source="/trello/api">
<suite id="s1-s1-s1" name="Trello Api Boards Tests" source="/trello/api/trello_api_boards_tests.robot">
<kw name="Create Trello Session" library="TrelloAPI" type="SETUP">
<doc>Creates a Trello Session</doc>
<kw name="Create Session" library="request_own_library">
<arg>${API_BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<status status="PASS" starttime="20220706 04:05:15.874" endtime="20220706 04:05:15.874"/>
</kw>
<status status="PASS" starttime="20220706 04:05:15.872" endtime="20220706 04:05:15.874"/>
</kw>
<test id="s1-s1-s1-t1" name="CREATE a board" line="9">
<kw name="Create A Board" library="Board">
<var>${response}</var>
<arg>NewBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220706 04:05:15.877" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220706 04:05:15.876" endtime="20220706 04:05:15.877"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220706 04:05:15.877" endtime="20220706 04:05:15.877"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220706 04:05:15.878" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220706 04:05:15.877" endtime="20220706 04:05:15.878"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220706 04:05:16.133" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 04:05:15.878" endtime="20220706 04:05:16.133"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 04:05:16.133" endtime="20220706 04:05:16.133"/>
</return>
<msg timestamp="20220706 04:05:16.133" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 04:05:15.876" endtime="20220706 04:05:16.134"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 04:05:16.134" endtime="20220706 04:05:16.134"/>
</return>
<msg timestamp="20220706 04:05:16.134" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 04:05:15.875" endtime="20220706 04:05:16.134"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>board</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220706 04:05:16.135" endtime="20220706 04:05:16.140"/>
</kw>
<status status="PASS" starttime="20220706 04:05:16.134" endtime="20220706 04:05:16.140"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${response.json()}[id]</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${response.json()}[id]</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220706 04:05:16.143" level="INFO">${url} = boards/62c509fba8481715730e8f7d</msg>
<status status="PASS" starttime="20220706 04:05:16.142" endtime="20220706 04:05:16.143"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220706 04:05:16.509" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 04:05:16.143" endtime="20220706 04:05:16.509"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 04:05:16.509" endtime="20220706 04:05:16.509"/>
</return>
<msg timestamp="20220706 04:05:16.509" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 04:05:16.142" endtime="20220706 04:05:16.510"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 04:05:16.510" endtime="20220706 04:05:16.510"/>
</return>
<status status="PASS" starttime="20220706 04:05:16.141" endtime="20220706 04:05:16.510"/>
</kw>
<status status="PASS" starttime="20220706 04:05:16.141" endtime="20220706 04:05:16.510"/>
</kw>
<doc>Verify that a board can be create through API</doc>
<tag>api</tag>
<tag>board.create</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220706 04:05:15.875" endtime="20220706 04:05:16.510"/>
</test>
<test id="s1-s1-s1-t2" name="UPDATE a Board's name" line="16">
<kw name="Create A Board" library="Board">
<var>${response}</var>
<arg>NewBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220706 04:05:16.513" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220706 04:05:16.513" endtime="20220706 04:05:16.513"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220706 04:05:16.513" endtime="20220706 04:05:16.513"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220706 04:05:16.514" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220706 04:05:16.513" endtime="20220706 04:05:16.514"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220706 04:05:16.732" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 04:05:16.514" endtime="20220706 04:05:16.732"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 04:05:16.732" endtime="20220706 04:05:16.732"/>
</return>
<msg timestamp="20220706 04:05:16.732" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 04:05:16.512" endtime="20220706 04:05:16.732"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 04:05:16.732" endtime="20220706 04:05:16.732"/>
</return>
<msg timestamp="20220706 04:05:16.732" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 04:05:16.511" endtime="20220706 04:05:16.733"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>board</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220706 04:05:16.733" endtime="20220706 04:05:16.738"/>
</kw>
<status status="PASS" starttime="20220706 04:05:16.733" endtime="20220706 04:05:16.738"/>
</kw>
<kw name="Update A Board" library="Board">
<arg>${response.json()}[id]</arg>
<arg>name</arg>
<arg>NewName</arg>
<doc>Updates the board with the given ID
optional_args: name, desc, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220706 04:05:16.741" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220706 04:05:16.740" endtime="20220706 04:05:16.741"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220706 04:05:16.741" endtime="20220706 04:05:16.741"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220706 04:05:16.741" level="INFO">${url} = boards/62c509fced41b445b3241947</msg>
<status status="PASS" starttime="20220706 04:05:16.741" endtime="20220706 04:05:16.741"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220706 04:05:16.887" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 04:05:16.742" endtime="20220706 04:05:16.887"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 04:05:16.887" endtime="20220706 04:05:16.887"/>
</return>
<msg timestamp="20220706 04:05:16.888" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 04:05:16.740" endtime="20220706 04:05:16.888"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 04:05:16.888" endtime="20220706 04:05:16.888"/>
</return>
<status status="PASS" starttime="20220706 04:05:16.739" endtime="20220706 04:05:16.888"/>
</kw>
<kw name="Get A Board" library="Board">
<var>${new_response}</var>
<arg>${response.json()}[id]</arg>
<doc>Gets the Board with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220706 04:05:16.890" level="INFO">${url} = boards/62c509fced41b445b3241947</msg>
<status status="PASS" starttime="20220706 04:05:16.890" endtime="20220706 04:05:16.890"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220706 04:05:17.112" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 04:05:16.891" endtime="20220706 04:05:17.112"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 04:05:17.112" endtime="20220706 04:05:17.112"/>
</return>
<msg timestamp="20220706 04:05:17.113" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 04:05:16.889" endtime="20220706 04:05:17.113"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 04:05:17.113" endtime="20220706 04:05:17.113"/>
</return>
<msg timestamp="20220706 04:05:17.113" level="INFO">${new_response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 04:05:16.888" endtime="20220706 04:05:17.113"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${new_response}</arg>
<arg>board</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220706 04:05:17.114" endtime="20220706 04:05:17.119"/>
</kw>
<status status="PASS" starttime="20220706 04:05:17.113" endtime="20220706 04:05:17.119"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${new_response.json()}[name]</arg>
<arg>NewName</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220706 04:05:17.119" endtime="20220706 04:05:17.120"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${response.json()}[id]</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${response.json()}[id]</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220706 04:05:17.123" level="INFO">${url} = boards/62c509fced41b445b3241947</msg>
<status status="PASS" starttime="20220706 04:05:17.122" endtime="20220706 04:05:17.123"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220706 04:05:17.548" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 04:05:17.123" endtime="20220706 04:05:17.548"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 04:05:17.548" endtime="20220706 04:05:17.549"/>
</return>
<msg timestamp="20220706 04:05:17.549" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 04:05:17.122" endtime="20220706 04:05:17.549"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 04:05:17.549" endtime="20220706 04:05:17.549"/>
</return>
<status status="PASS" starttime="20220706 04:05:17.121" endtime="20220706 04:05:17.549"/>
</kw>
<status status="PASS" starttime="20220706 04:05:17.120" endtime="20220706 04:05:17.549"/>
</kw>
<doc>Verify that a board's name can be updated through API</doc>
<tag>api</tag>
<tag>board.update</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220706 04:05:16.511" endtime="20220706 04:05:17.549"/>
</test>
<test id="s1-s1-s1-t3" name="DELETE A Board" line="27">
<kw name="Create A Board" library="Board">
<var>${response}</var>
<arg>NewBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220706 04:05:17.553" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220706 04:05:17.552" endtime="20220706 04:05:17.553"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220706 04:05:17.553" endtime="20220706 04:05:17.553"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220706 04:05:17.554" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220706 04:05:17.553" endtime="20220706 04:05:17.554"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220706 04:05:17.785" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 04:05:17.554" endtime="20220706 04:05:17.785"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 04:05:17.786" endtime="20220706 04:05:17.786"/>
</return>
<msg timestamp="20220706 04:05:17.786" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 04:05:17.552" endtime="20220706 04:05:17.786"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 04:05:17.786" endtime="20220706 04:05:17.786"/>
</return>
<msg timestamp="20220706 04:05:17.786" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 04:05:17.551" endtime="20220706 04:05:17.786"/>
</kw>
<kw name="Delete A Board" library="Board">
<arg>${response.json()}[id]</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220706 04:05:17.789" level="INFO">${url} = boards/62c509fd6226cc0b6653aaca</msg>
<status status="PASS" starttime="20220706 04:05:17.788" endtime="20220706 04:05:17.789"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220706 04:05:18.158" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 04:05:17.789" endtime="20220706 04:05:18.158"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 04:05:18.158" endtime="20220706 04:05:18.158"/>
</return>
<msg timestamp="20220706 04:05:18.158" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 04:05:17.788" endtime="20220706 04:05:18.158"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 04:05:18.158" endtime="20220706 04:05:18.158"/>
</return>
<status status="PASS" starttime="20220706 04:05:17.786" endtime="20220706 04:05:18.159"/>
</kw>
<kw name="Get A Board" library="Board">
<arg>${response.json()}[id]</arg>
<arg>status_code=404</arg>
<doc>Gets the Board with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220706 04:05:18.161" level="INFO">${url} = boards/62c509fd6226cc0b6653aaca</msg>
<status status="PASS" starttime="20220706 04:05:18.161" endtime="20220706 04:05:18.161"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220706 04:05:18.254" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220706 04:05:18.161" endtime="20220706 04:05:18.254"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 04:05:18.254" endtime="20220706 04:05:18.254"/>
</return>
<msg timestamp="20220706 04:05:18.254" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220706 04:05:18.160" endtime="20220706 04:05:18.254"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 04:05:18.254" endtime="20220706 04:05:18.254"/>
</return>
<status status="PASS" starttime="20220706 04:05:18.159" endtime="20220706 04:05:18.254"/>
</kw>
<doc>Verify that a board can be deleted through API</doc>
<tag>api</tag>
<tag>board.delete</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220706 04:05:17.551" endtime="20220706 04:05:18.255"/>
</test>
<test id="s1-s1-s1-t4" name="GET Information of A Board" line="34">
<kw name="Create A Board" library="Board">
<var>${response}</var>
<arg>BoardTest</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220706 04:05:18.258" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220706 04:05:18.257" endtime="20220706 04:05:18.258"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220706 04:05:18.258" endtime="20220706 04:05:18.258"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220706 04:05:18.259" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220706 04:05:18.258" endtime="20220706 04:05:18.259"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220706 04:05:18.460" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 04:05:18.259" endtime="20220706 04:05:18.460"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 04:05:18.460" endtime="20220706 04:05:18.460"/>
</return>
<msg timestamp="20220706 04:05:18.460" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 04:05:18.257" endtime="20220706 04:05:18.461"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 04:05:18.461" endtime="20220706 04:05:18.461"/>
</return>
<msg timestamp="20220706 04:05:18.461" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 04:05:18.256" endtime="20220706 04:05:18.461"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>board</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220706 04:05:18.462" endtime="20220706 04:05:18.467"/>
</kw>
<status status="PASS" starttime="20220706 04:05:18.461" endtime="20220706 04:05:18.467"/>
</kw>
<kw name="Get A Board" library="Board">
<var>${response2}</var>
<arg>${response.json()}[id]</arg>
<doc>Gets the Board with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220706 04:05:18.469" level="INFO">${url} = boards/62c509fecafd5a2ccc1691b3</msg>
<status status="PASS" starttime="20220706 04:05:18.469" endtime="20220706 04:05:18.469"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220706 04:05:18.568" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 04:05:18.469" endtime="20220706 04:05:18.568"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 04:05:18.568" endtime="20220706 04:05:18.568"/>
</return>
<msg timestamp="20220706 04:05:18.569" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 04:05:18.468" endtime="20220706 04:05:18.569"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 04:05:18.569" endtime="20220706 04:05:18.569"/>
</return>
<msg timestamp="20220706 04:05:18.569" level="INFO">${response2} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 04:05:18.467" endtime="20220706 04:05:18.569"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response2}</arg>
<arg>board</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220706 04:05:18.570" endtime="20220706 04:05:18.575"/>
</kw>
<status status="PASS" starttime="20220706 04:05:18.569" endtime="20220706 04:05:18.575"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${response2.json()}[name]</arg>
<arg>BoardTest</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220706 04:05:18.575" endtime="20220706 04:05:18.576"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${response.json()}[id]</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${response.json()}[id]</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220706 04:05:18.579" level="INFO">${url} = boards/62c509fecafd5a2ccc1691b3</msg>
<status status="PASS" starttime="20220706 04:05:18.578" endtime="20220706 04:05:18.579"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220706 04:05:18.976" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 04:05:18.579" endtime="20220706 04:05:18.976"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 04:05:18.976" endtime="20220706 04:05:18.976"/>
</return>
<msg timestamp="20220706 04:05:18.976" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 04:05:18.578" endtime="20220706 04:05:18.976"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 04:05:18.977" endtime="20220706 04:05:18.977"/>
</return>
<status status="PASS" starttime="20220706 04:05:18.577" endtime="20220706 04:05:18.977"/>
</kw>
<status status="PASS" starttime="20220706 04:05:18.576" endtime="20220706 04:05:18.977"/>
</kw>
<doc>Verify that a board's information can be accesed through API</doc>
<tag>api</tag>
<tag>board.get</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220706 04:05:18.256" endtime="20220706 04:05:18.977"/>
</test>
<test id="s1-s1-s1-t5" name="UPDATE a Board's description" line="45">
<kw name="Create A Board" library="Board">
<var>${response}</var>
<arg>NewBoardForTest</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220706 04:05:18.980" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220706 04:05:18.980" endtime="20220706 04:05:18.980"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220706 04:05:18.980" endtime="20220706 04:05:18.980"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220706 04:05:18.981" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220706 04:05:18.980" endtime="20220706 04:05:18.981"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220706 04:05:19.184" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 04:05:18.981" endtime="20220706 04:05:19.184"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 04:05:19.184" endtime="20220706 04:05:19.184"/>
</return>
<msg timestamp="20220706 04:05:19.184" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 04:05:18.979" endtime="20220706 04:05:19.184"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 04:05:19.184" endtime="20220706 04:05:19.185"/>
</return>
<msg timestamp="20220706 04:05:19.185" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 04:05:18.978" endtime="20220706 04:05:19.185"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>board</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220706 04:05:19.186" endtime="20220706 04:05:19.191"/>
</kw>
<status status="PASS" starttime="20220706 04:05:19.185" endtime="20220706 04:05:19.191"/>
</kw>
<kw name="Update A Board" library="Board">
<arg>${response.json()}[id]</arg>
<arg>desc</arg>
<arg>sampleDescription</arg>
<doc>Updates the board with the given ID
optional_args: name, desc, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220706 04:05:19.193" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220706 04:05:19.193" endtime="20220706 04:05:19.193"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220706 04:05:19.193" endtime="20220706 04:05:19.193"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220706 04:05:19.194" level="INFO">${url} = boards/62c509ff34e76562658bbadf</msg>
<status status="PASS" starttime="20220706 04:05:19.193" endtime="20220706 04:05:19.194"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220706 04:05:19.344" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 04:05:19.194" endtime="20220706 04:05:19.344"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 04:05:19.344" endtime="20220706 04:05:19.344"/>
</return>
<msg timestamp="20220706 04:05:19.345" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 04:05:19.192" endtime="20220706 04:05:19.345"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 04:05:19.345" endtime="20220706 04:05:19.345"/>
</return>
<status status="PASS" starttime="20220706 04:05:19.191" endtime="20220706 04:05:19.345"/>
</kw>
<kw name="Get A Board" library="Board">
<var>${new_response}</var>
<arg>${response.json()}[id]</arg>
<doc>Gets the Board with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220706 04:05:19.347" level="INFO">${url} = boards/62c509ff34e76562658bbadf</msg>
<status status="PASS" starttime="20220706 04:05:19.347" endtime="20220706 04:05:19.347"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220706 04:05:19.453" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 04:05:19.347" endtime="20220706 04:05:19.453"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 04:05:19.453" endtime="20220706 04:05:19.453"/>
</return>
<msg timestamp="20220706 04:05:19.453" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 04:05:19.346" endtime="20220706 04:05:19.453"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 04:05:19.453" endtime="20220706 04:05:19.453"/>
</return>
<msg timestamp="20220706 04:05:19.454" level="INFO">${new_response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 04:05:19.345" endtime="20220706 04:05:19.454"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${new_response.json()}[desc]</arg>
<arg>sampleDescription</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220706 04:05:19.454" endtime="20220706 04:05:19.455"/>
</kw>
<kw name="Update A Board" library="Board">
<arg>${response.json()}[id]</arg>
<arg>desc</arg>
<arg>updatedDescription</arg>
<doc>Updates the board with the given ID
optional_args: name, desc, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220706 04:05:19.457" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220706 04:05:19.457" endtime="20220706 04:05:19.457"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220706 04:05:19.457" endtime="20220706 04:05:19.457"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220706 04:05:19.458" level="INFO">${url} = boards/62c509ff34e76562658bbadf</msg>
<status status="PASS" starttime="20220706 04:05:19.458" endtime="20220706 04:05:19.458"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220706 04:05:19.607" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 04:05:19.458" endtime="20220706 04:05:19.607"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 04:05:19.607" endtime="20220706 04:05:19.607"/>
</return>
<msg timestamp="20220706 04:05:19.607" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 04:05:19.456" endtime="20220706 04:05:19.607"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 04:05:19.607" endtime="20220706 04:05:19.607"/>
</return>
<status status="PASS" starttime="20220706 04:05:19.455" endtime="20220706 04:05:19.608"/>
</kw>
<kw name="Get A Board" library="Board">
<var>${new_response2}</var>
<arg>${response.json()}[id]</arg>
<doc>Gets the Board with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220706 04:05:19.610" level="INFO">${url} = boards/62c509ff34e76562658bbadf</msg>
<status status="PASS" starttime="20220706 04:05:19.610" endtime="20220706 04:05:19.610"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220706 04:05:19.711" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 04:05:19.610" endtime="20220706 04:05:19.711"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 04:05:19.711" endtime="20220706 04:05:19.711"/>
</return>
<msg timestamp="20220706 04:05:19.711" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 04:05:19.609" endtime="20220706 04:05:19.711"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 04:05:19.711" endtime="20220706 04:05:19.711"/>
</return>
<msg timestamp="20220706 04:05:19.712" level="INFO">${new_response2} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 04:05:19.608" endtime="20220706 04:05:19.712"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${new_response2.json()}[desc]</arg>
<arg>updatedDescription</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220706 04:05:19.712" endtime="20220706 04:05:19.713"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${response.json()}[id]</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${response.json()}[id]</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220706 04:05:19.715" level="INFO">${url} = boards/62c509ff34e76562658bbadf</msg>
<status status="PASS" starttime="20220706 04:05:19.715" endtime="20220706 04:05:19.716"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220706 04:05:20.078" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 04:05:19.716" endtime="20220706 04:05:20.078"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 04:05:20.079" endtime="20220706 04:05:20.079"/>
</return>
<msg timestamp="20220706 04:05:20.079" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 04:05:19.714" endtime="20220706 04:05:20.079"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 04:05:20.079" endtime="20220706 04:05:20.079"/>
</return>
<status status="PASS" starttime="20220706 04:05:19.713" endtime="20220706 04:05:20.079"/>
</kw>
<status status="PASS" starttime="20220706 04:05:19.713" endtime="20220706 04:05:20.079"/>
</kw>
<doc>Verify that a board's description can be updated through API</doc>
<tag>api</tag>
<tag>board.update</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220706 04:05:18.977" endtime="20220706 04:05:20.079"/>
</test>
<kw name="Delete All Sessions" library="request_own_library" type="TEARDOWN">
<status status="PASS" starttime="20220706 04:05:20.081" endtime="20220706 04:05:20.082"/>
</kw>
<doc>Example Test with Trello API Boards</doc>
<status status="PASS" starttime="20220706 04:05:15.733" endtime="20220706 04:05:20.083"/>
</suite>
<suite id="s1-s1-s2" name="Trello Api Cards Tests" source="/trello/api/trello_api_cards_tests.robot">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Create Trello Session</arg>
<arg>Setup Board And List</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Create Trello Session" library="TrelloAPI">
<doc>Creates a Trello Session</doc>
<kw name="Create Session" library="request_own_library">
<arg>${API_BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<status status="PASS" starttime="20220706 04:05:20.098" endtime="20220706 04:05:20.098"/>
</kw>
<status status="PASS" starttime="20220706 04:05:20.098" endtime="20220706 04:05:20.099"/>
</kw>
<kw name="Setup Board And List">
<doc>Create a board and save its ID and its first list's ID</doc>
<kw name="Create A Board" library="Board">
<var>${BOARD}</var>
<arg>TestBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220706 04:05:20.100" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220706 04:05:20.100" endtime="20220706 04:05:20.100"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220706 04:05:20.100" endtime="20220706 04:05:20.101"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220706 04:05:20.102" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220706 04:05:20.101" endtime="20220706 04:05:20.102"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220706 04:05:20.356" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 04:05:20.102" endtime="20220706 04:05:20.356"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 04:05:20.356" endtime="20220706 04:05:20.356"/>
</return>
<msg timestamp="20220706 04:05:20.356" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 04:05:20.099" endtime="20220706 04:05:20.356"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 04:05:20.356" endtime="20220706 04:05:20.356"/>
</return>
<msg timestamp="20220706 04:05:20.357" level="INFO">${BOARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 04:05:20.099" endtime="20220706 04:05:20.357"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_BOARD_ID}</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220706 04:05:20.358" level="INFO">${TEST_SUITE_BOARD_ID} = 62c50a0046f8ac86c4870498</msg>
<status status="PASS" starttime="20220706 04:05:20.357" endtime="20220706 04:05:20.358"/>
</kw>
<kw name="Get Lists On A Board" library="Board">
<var>${LISTS}</var>
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Get all the lists in a board</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>lists_on_board</arg>
<arg>${id}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220706 04:05:20.360" level="INFO">${url} = boards/62c50a0046f8ac86c4870498/lists/</msg>
<status status="PASS" starttime="20220706 04:05:20.359" endtime="20220706 04:05:20.360"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220706 04:05:20.465" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 04:05:20.360" endtime="20220706 04:05:20.465"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 04:05:20.465" endtime="20220706 04:05:20.465"/>
</return>
<msg timestamp="20220706 04:05:20.466" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 04:05:20.359" endtime="20220706 04:05:20.466"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 04:05:20.466" endtime="20220706 04:05:20.466"/>
</return>
<msg timestamp="20220706 04:05:20.466" level="INFO">${LISTS} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 04:05:20.358" endtime="20220706 04:05:20.466"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_LIST_ID}</arg>
<arg>${LISTS.json()}[0][id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220706 04:05:20.467" level="INFO">${TEST_SUITE_LIST_ID} = 62c50a0046f8ac86c487049f</msg>
<status status="PASS" starttime="20220706 04:05:20.466" endtime="20220706 04:05:20.467"/>
</kw>
<status status="PASS" starttime="20220706 04:05:20.099" endtime="20220706 04:05:20.468"/>
</kw>
<status status="PASS" starttime="20220706 04:05:20.097" endtime="20220706 04:05:20.468"/>
</kw>
<test id="s1-s1-s2-t1" name="Verify A Card Can Be Created" line="13">
<kw name="Create A Card" library="Card">
<var>${response}</var>
<arg>name</arg>
<arg>RFCard2</arg>
<doc>Creates a new card in the given list.
required_args: listId
optional_args: name, desc, pos, idCardSource, idLabels, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>@{optional_args}</arg>
<arg>idList</arg>
<arg>${idList}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220706 04:05:20.470" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220706 04:05:20.470" endtime="20220706 04:05:20.470"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220706 04:05:20.470" endtime="20220706 04:05:20.471"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220706 04:05:20.472" level="INFO">${url} = cards/</msg>
<status status="PASS" starttime="20220706 04:05:20.471" endtime="20220706 04:05:20.472"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220706 04:05:20.685" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 04:05:20.472" endtime="20220706 04:05:20.686"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 04:05:20.686" endtime="20220706 04:05:20.686"/>
</return>
<msg timestamp="20220706 04:05:20.686" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 04:05:20.469" endtime="20220706 04:05:20.686"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 04:05:20.686" endtime="20220706 04:05:20.686"/>
</return>
<msg timestamp="20220706 04:05:20.686" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 04:05:20.468" endtime="20220706 04:05:20.686"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>card</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220706 04:05:20.687" endtime="20220706 04:05:20.693"/>
</kw>
<status status="PASS" starttime="20220706 04:05:20.687" endtime="20220706 04:05:20.694"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220706 04:05:20.694" endtime="20220706 04:05:20.694"/>
</return>
<msg timestamp="20220706 04:05:20.695" level="INFO">${CARD_ID} = 62c50a004472e5140d2c5f1d</msg>
<status status="PASS" starttime="20220706 04:05:20.694" endtime="20220706 04:05:20.695"/>
</kw>
<kw name="Get A Card" library="Card">
<var>${response}</var>
<arg>${CARD_ID}</arg>
<doc>Gets the card with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220706 04:05:20.696" level="INFO">${url} = cards/62c50a004472e5140d2c5f1d</msg>
<status status="PASS" starttime="20220706 04:05:20.696" endtime="20220706 04:05:20.697"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220706 04:05:20.812" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 04:05:20.697" endtime="20220706 04:05:20.812"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 04:05:20.812" endtime="20220706 04:05:20.812"/>
</return>
<msg timestamp="20220706 04:05:20.813" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 04:05:20.696" endtime="20220706 04:05:20.813"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 04:05:20.813" endtime="20220706 04:05:20.813"/>
</return>
<msg timestamp="20220706 04:05:20.813" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 04:05:20.695" endtime="20220706 04:05:20.813"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_NAME}</var>
<arg>${response}</arg>
<arg>name</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220706 04:05:20.814" endtime="20220706 04:05:20.814"/>
</return>
<msg timestamp="20220706 04:05:20.815" level="INFO">${CARD_NAME} = RFCard2</msg>
<status status="PASS" starttime="20220706 04:05:20.813" endtime="20220706 04:05:20.815"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${CARD_NAME}</arg>
<arg>RFCard2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220706 04:05:20.815" endtime="20220706 04:05:20.815"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Card</arg>
<arg>${CARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Card" library="Card">
<arg>${CARD_ID}</arg>
<doc>Deletes the card with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220706 04:05:20.818" level="INFO">${url} = cards/62c50a004472e5140d2c5f1d</msg>
<status status="PASS" starttime="20220706 04:05:20.817" endtime="20220706 04:05:20.818"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220706 04:05:21.015" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 04:05:20.818" endtime="20220706 04:05:21.015"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 04:05:21.015" endtime="20220706 04:05:21.015"/>
</return>
<msg timestamp="20220706 04:05:21.015" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 04:05:20.817" endtime="20220706 04:05:21.015"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 04:05:21.015" endtime="20220706 04:05:21.015"/>
</return>
<status status="PASS" starttime="20220706 04:05:20.816" endtime="20220706 04:05:21.016"/>
</kw>
<status status="PASS" starttime="20220706 04:05:20.816" endtime="20220706 04:05:21.016"/>
</kw>
<doc>Verify that a card can be created through API</doc>
<tag>api</tag>
<tag>card.create</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220706 04:05:20.468" endtime="20220706 04:05:21.016"/>
</test>
<test id="s1-s1-s2-t2" name="Verify A Card Can Be Closed" line="24">
<kw name="Create A Card" library="Card">
<var>${response}</var>
<doc>Creates a new card in the given list.
required_args: listId
optional_args: name, desc, pos, idCardSource, idLabels, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>@{optional_args}</arg>
<arg>idList</arg>
<arg>${idList}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220706 04:05:21.019" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220706 04:05:21.018" endtime="20220706 04:05:21.019"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220706 04:05:21.019" endtime="20220706 04:05:21.019"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220706 04:05:21.020" level="INFO">${url} = cards/</msg>
<status status="PASS" starttime="20220706 04:05:21.019" endtime="20220706 04:05:21.020"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220706 04:05:21.210" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 04:05:21.020" endtime="20220706 04:05:21.211"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 04:05:21.211" endtime="20220706 04:05:21.211"/>
</return>
<msg timestamp="20220706 04:05:21.211" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 04:05:21.017" endtime="20220706 04:05:21.211"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 04:05:21.211" endtime="20220706 04:05:21.211"/>
</return>
<msg timestamp="20220706 04:05:21.211" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 04:05:21.017" endtime="20220706 04:05:21.211"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220706 04:05:21.212" endtime="20220706 04:05:21.212"/>
</return>
<msg timestamp="20220706 04:05:21.213" level="INFO">${CARD_ID} = 62c50a01bba6780226198a38</msg>
<status status="PASS" starttime="20220706 04:05:21.212" endtime="20220706 04:05:21.213"/>
</kw>
<kw name="Archive A Card" library="Card">
<arg>${CARD_ID}</arg>
<doc>Modifies the card status to closed.</doc>
<kw name="Update A Card" library="Card">
<var>${response}</var>
<arg>${id}</arg>
<arg>closed</arg>
<arg>true</arg>
<arg>status_code=${status_code}</arg>
<doc>Updates the card with the given ID
optional_args: name, desc, closed, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<arg>status_code=${status_code}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220706 04:05:21.216" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220706 04:05:21.215" endtime="20220706 04:05:21.216"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220706 04:05:21.216" endtime="20220706 04:05:21.216"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220706 04:05:21.217" level="INFO">${url} = cards/62c50a01bba6780226198a38</msg>
<status status="PASS" starttime="20220706 04:05:21.216" endtime="20220706 04:05:21.217"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220706 04:05:21.418" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 04:05:21.217" endtime="20220706 04:05:21.418"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 04:05:21.418" endtime="20220706 04:05:21.418"/>
</return>
<msg timestamp="20220706 04:05:21.418" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 04:05:21.215" endtime="20220706 04:05:21.418"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 04:05:21.418" endtime="20220706 04:05:21.418"/>
</return>
<msg timestamp="20220706 04:05:21.419" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 04:05:21.214" endtime="20220706 04:05:21.419"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 04:05:21.419" endtime="20220706 04:05:21.419"/>
</return>
<status status="PASS" starttime="20220706 04:05:21.213" endtime="20220706 04:05:21.419"/>
</kw>
<kw name="Get A Card" library="Card">
<var>${response}</var>
<arg>${CARD_ID}</arg>
<doc>Gets the card with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220706 04:05:21.421" level="INFO">${url} = cards/62c50a01bba6780226198a38</msg>
<status status="PASS" starttime="20220706 04:05:21.420" endtime="20220706 04:05:21.421"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220706 04:05:21.531" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 04:05:21.421" endtime="20220706 04:05:21.531"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 04:05:21.531" endtime="20220706 04:05:21.531"/>
</return>
<msg timestamp="20220706 04:05:21.531" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 04:05:21.420" endtime="20220706 04:05:21.532"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 04:05:21.532" endtime="20220706 04:05:21.532"/>
</return>
<msg timestamp="20220706 04:05:21.532" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 04:05:21.419" endtime="20220706 04:05:21.532"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_CLOSED}</var>
<arg>${response}</arg>
<arg>closed</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220706 04:05:21.533" endtime="20220706 04:05:21.533"/>
</return>
<msg timestamp="20220706 04:05:21.534" level="INFO">${CARD_CLOSED} = True</msg>
<status status="PASS" starttime="20220706 04:05:21.532" endtime="20220706 04:05:21.534"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${CARD_CLOSED}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220706 04:05:21.534" endtime="20220706 04:05:21.534"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Card</arg>
<arg>${CARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Card" library="Card">
<arg>${CARD_ID}</arg>
<doc>Deletes the card with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220706 04:05:21.536" level="INFO">${url} = cards/62c50a01bba6780226198a38</msg>
<status status="PASS" starttime="20220706 04:05:21.536" endtime="20220706 04:05:21.536"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220706 04:05:21.743" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 04:05:21.536" endtime="20220706 04:05:21.743"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 04:05:21.743" endtime="20220706 04:05:21.743"/>
</return>
<msg timestamp="20220706 04:05:21.743" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 04:05:21.535" endtime="20220706 04:05:21.743"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 04:05:21.743" endtime="20220706 04:05:21.744"/>
</return>
<status status="PASS" starttime="20220706 04:05:21.535" endtime="20220706 04:05:21.744"/>
</kw>
<status status="PASS" starttime="20220706 04:05:21.534" endtime="20220706 04:05:21.744"/>
</kw>
<doc>Verify that a card can be closed through API</doc>
<tag>api</tag>
<tag>card.close</tag>
<tag>regression</tag>
<status status="PASS" starttime="20220706 04:05:21.016" endtime="20220706 04:05:21.744"/>
</test>
<test id="s1-s1-s2-t3" name="Verify A Card Can Be Deleted" line="35">
<kw name="Create A Card" library="Card">
<var>${response}</var>
<doc>Creates a new card in the given list.
required_args: listId
optional_args: name, desc, pos, idCardSource, idLabels, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>@{optional_args}</arg>
<arg>idList</arg>
<arg>${idList}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220706 04:05:21.747" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220706 04:05:21.747" endtime="20220706 04:05:21.747"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220706 04:05:21.748" endtime="20220706 04:05:21.748"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220706 04:05:21.749" level="INFO">${url} = cards/</msg>
<status status="PASS" starttime="20220706 04:05:21.748" endtime="20220706 04:05:21.749"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220706 04:05:21.957" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 04:05:21.749" endtime="20220706 04:05:21.957"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 04:05:21.957" endtime="20220706 04:05:21.957"/>
</return>
<msg timestamp="20220706 04:05:21.958" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 04:05:21.746" endtime="20220706 04:05:21.958"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 04:05:21.958" endtime="20220706 04:05:21.958"/>
</return>
<msg timestamp="20220706 04:05:21.958" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 04:05:21.745" endtime="20220706 04:05:21.958"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220706 04:05:21.959" endtime="20220706 04:05:21.959"/>
</return>
<msg timestamp="20220706 04:05:21.960" level="INFO">${CARD_ID} = 62c50a01c1be321cd97d3fe1</msg>
<status status="PASS" starttime="20220706 04:05:21.958" endtime="20220706 04:05:21.960"/>
</kw>
<kw name="Delete A Card" library="Card">
<var>${response}</var>
<arg>${CARD_ID}</arg>
<doc>Deletes the card with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220706 04:05:21.961" level="INFO">${url} = cards/62c50a01c1be321cd97d3fe1</msg>
<status status="PASS" starttime="20220706 04:05:21.961" endtime="20220706 04:05:21.961"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220706 04:05:22.164" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 04:05:21.961" endtime="20220706 04:05:22.164"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 04:05:22.164" endtime="20220706 04:05:22.164"/>
</return>
<msg timestamp="20220706 04:05:22.164" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 04:05:21.960" endtime="20220706 04:05:22.164"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 04:05:22.164" endtime="20220706 04:05:22.164"/>
</return>
<msg timestamp="20220706 04:05:22.165" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 04:05:21.960" endtime="20220706 04:05:22.165"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>delete</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220706 04:05:22.166" endtime="20220706 04:05:22.168"/>
</kw>
<status status="PASS" starttime="20220706 04:05:22.165" endtime="20220706 04:05:22.168"/>
</kw>
<kw name="Get A Card" library="Card">
<arg>${CARD_ID}</arg>
<arg>status_code=404</arg>
<doc>Gets the card with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220706 04:05:22.170" level="INFO">${url} = cards/62c50a01c1be321cd97d3fe1</msg>
<status status="PASS" starttime="20220706 04:05:22.169" endtime="20220706 04:05:22.170"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220706 04:05:22.267" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220706 04:05:22.170" endtime="20220706 04:05:22.267"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 04:05:22.267" endtime="20220706 04:05:22.267"/>
</return>
<msg timestamp="20220706 04:05:22.267" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220706 04:05:22.169" endtime="20220706 04:05:22.267"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 04:05:22.267" endtime="20220706 04:05:22.268"/>
</return>
<status status="PASS" starttime="20220706 04:05:22.168" endtime="20220706 04:05:22.268"/>
</kw>
<doc>Verify that a card can be deleted through API</doc>
<tag>api</tag>
<tag>card.delete</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220706 04:05:21.744" endtime="20220706 04:05:22.268"/>
</test>
<test id="s1-s1-s2-t4" name="Verify A Card Can Be Updated" line="44">
<kw name="Create A Card" library="Card">
<var>${response}</var>
<arg>name</arg>
<arg>RFCard4</arg>
<doc>Creates a new card in the given list.
required_args: listId
optional_args: name, desc, pos, idCardSource, idLabels, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>@{optional_args}</arg>
<arg>idList</arg>
<arg>${idList}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220706 04:05:22.272" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220706 04:05:22.271" endtime="20220706 04:05:22.272"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220706 04:05:22.272" endtime="20220706 04:05:22.272"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220706 04:05:22.273" level="INFO">${url} = cards/</msg>
<status status="PASS" starttime="20220706 04:05:22.272" endtime="20220706 04:05:22.273"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220706 04:05:22.498" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 04:05:22.273" endtime="20220706 04:05:22.498"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 04:05:22.498" endtime="20220706 04:05:22.498"/>
</return>
<msg timestamp="20220706 04:05:22.498" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 04:05:22.271" endtime="20220706 04:05:22.498"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 04:05:22.498" endtime="20220706 04:05:22.498"/>
</return>
<msg timestamp="20220706 04:05:22.499" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 04:05:22.270" endtime="20220706 04:05:22.499"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220706 04:05:22.499" endtime="20220706 04:05:22.499"/>
</return>
<msg timestamp="20220706 04:05:22.501" level="INFO">${CARD_ID} = 62c50a028d30ba8f3386b502</msg>
<status status="PASS" starttime="20220706 04:05:22.499" endtime="20220706 04:05:22.501"/>
</kw>
<kw name="Update A Card" library="Card">
<var>${response}</var>
<arg>${CARD_ID}</arg>
<arg>name</arg>
<arg>RFCard5</arg>
<arg>desc</arg>
<arg>Description</arg>
<doc>Updates the card with the given ID
optional_args: name, desc, closed, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<arg>status_code=${status_code}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220706 04:05:22.502" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220706 04:05:22.502" endtime="20220706 04:05:22.503"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220706 04:05:22.503" endtime="20220706 04:05:22.503"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220706 04:05:22.503" level="INFO">${url} = cards/62c50a028d30ba8f3386b502</msg>
<status status="PASS" starttime="20220706 04:05:22.503" endtime="20220706 04:05:22.503"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220706 04:05:22.689" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 04:05:22.504" endtime="20220706 04:05:22.689"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 04:05:22.689" endtime="20220706 04:05:22.689"/>
</return>
<msg timestamp="20220706 04:05:22.690" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 04:05:22.501" endtime="20220706 04:05:22.690"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 04:05:22.690" endtime="20220706 04:05:22.690"/>
</return>
<msg timestamp="20220706 04:05:22.690" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 04:05:22.501" endtime="20220706 04:05:22.690"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>card</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220706 04:05:22.691" endtime="20220706 04:05:22.697"/>
</kw>
<status status="PASS" starttime="20220706 04:05:22.690" endtime="20220706 04:05:22.697"/>
</kw>
<kw name="Get A Card" library="Card">
<var>${response}</var>
<arg>${CARD_ID}</arg>
<doc>Gets the card with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220706 04:05:22.699" level="INFO">${url} = cards/62c50a028d30ba8f3386b502</msg>
<status status="PASS" starttime="20220706 04:05:22.699" endtime="20220706 04:05:22.699"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220706 04:05:22.819" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 04:05:22.699" endtime="20220706 04:05:22.819"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 04:05:22.819" endtime="20220706 04:05:22.819"/>
</return>
<msg timestamp="20220706 04:05:22.820" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 04:05:22.698" endtime="20220706 04:05:22.820"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 04:05:22.820" endtime="20220706 04:05:22.820"/>
</return>
<msg timestamp="20220706 04:05:22.820" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 04:05:22.697" endtime="20220706 04:05:22.820"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_NAME}</var>
<arg>${response}</arg>
<arg>name</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220706 04:05:22.821" endtime="20220706 04:05:22.821"/>
</return>
<msg timestamp="20220706 04:05:22.822" level="INFO">${CARD_NAME} = RFCard5</msg>
<status status="PASS" starttime="20220706 04:05:22.820" endtime="20220706 04:05:22.822"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_DESC}</var>
<arg>${response}</arg>
<arg>desc</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220706 04:05:22.822" endtime="20220706 04:05:22.822"/>
</return>
<msg timestamp="20220706 04:05:22.823" level="INFO">${CARD_DESC} = Description</msg>
<status status="PASS" starttime="20220706 04:05:22.822" endtime="20220706 04:05:22.823"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${CARD_NAME}</arg>
<arg>RFCard5</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220706 04:05:22.823" endtime="20220706 04:05:22.824"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${CARD_DESC}</arg>
<arg>Description</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220706 04:05:22.824" endtime="20220706 04:05:22.824"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Card</arg>
<arg>${CARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Card" library="Card">
<arg>${CARD_ID}</arg>
<doc>Deletes the card with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220706 04:05:22.826" level="INFO">${url} = cards/62c50a028d30ba8f3386b502</msg>
<status status="PASS" starttime="20220706 04:05:22.826" endtime="20220706 04:05:22.826"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220706 04:05:23.025" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 04:05:22.827" endtime="20220706 04:05:23.025"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 04:05:23.025" endtime="20220706 04:05:23.025"/>
</return>
<msg timestamp="20220706 04:05:23.026" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 04:05:22.825" endtime="20220706 04:05:23.026"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 04:05:23.026" endtime="20220706 04:05:23.026"/>
</return>
<status status="PASS" starttime="20220706 04:05:22.825" endtime="20220706 04:05:23.026"/>
</kw>
<status status="PASS" starttime="20220706 04:05:22.824" endtime="20220706 04:05:23.026"/>
</kw>
<doc>Verify that a card's name and Description can be updated through API</doc>
<tag>api</tag>
<tag>card.update</tag>
<tag>regression</tag>
<status status="PASS" starttime="20220706 04:05:22.268" endtime="20220706 04:05:23.026"/>
</test>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Teardown Board</arg>
<arg>Delete All Sessions</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Teardown Board">
<doc>Delete the board created for this suite</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220706 04:05:23.031" level="INFO">${url} = boards/62c50a0046f8ac86c4870498</msg>
<status status="PASS" starttime="20220706 04:05:23.030" endtime="20220706 04:05:23.031"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220706 04:05:23.426" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 04:05:23.031" endtime="20220706 04:05:23.426"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 04:05:23.426" endtime="20220706 04:05:23.427"/>
</return>
<msg timestamp="20220706 04:05:23.427" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 04:05:23.029" endtime="20220706 04:05:23.427"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 04:05:23.427" endtime="20220706 04:05:23.427"/>
</return>
<status status="PASS" starttime="20220706 04:05:23.029" endtime="20220706 04:05:23.427"/>
</kw>
<status status="PASS" starttime="20220706 04:05:23.028" endtime="20220706 04:05:23.427"/>
</kw>
<status status="PASS" starttime="20220706 04:05:23.028" endtime="20220706 04:05:23.427"/>
</kw>
<kw name="Delete All Sessions" library="request_own_library">
<status status="PASS" starttime="20220706 04:05:23.428" endtime="20220706 04:05:23.429"/>
</kw>
<status status="PASS" starttime="20220706 04:05:23.028" endtime="20220706 04:05:23.429"/>
</kw>
<doc>Example Test with Trello API Cards</doc>
<status status="PASS" starttime="20220706 04:05:20.085" endtime="20220706 04:05:23.429"/>
</suite>
<suite id="s1-s1-s3" name="Trello Api Checklists Tests" source="/trello/api/trello_api_checklists_tests.robot">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Create Trello Session</arg>
<arg>Setup Board, List And Card</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Create Trello Session" library="TrelloAPI">
<doc>Creates a Trello Session</doc>
<kw name="Create Session" library="request_own_library">
<arg>${API_BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<status status="PASS" starttime="20220706 04:05:23.444" endtime="20220706 04:05:23.444"/>
</kw>
<status status="PASS" starttime="20220706 04:05:23.443" endtime="20220706 04:05:23.444"/>
</kw>
<kw name="Setup Board, List And Card">
<doc>Create a board and save its ID and its first list's ID</doc>
<kw name="Create A Board" library="Board">
<var>${BOARD}</var>
<arg>TestBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220706 04:05:23.446" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220706 04:05:23.445" endtime="20220706 04:05:23.446"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220706 04:05:23.446" endtime="20220706 04:05:23.446"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220706 04:05:23.447" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220706 04:05:23.446" endtime="20220706 04:05:23.447"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220706 04:05:23.679" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 04:05:23.447" endtime="20220706 04:05:23.679"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 04:05:23.679" endtime="20220706 04:05:23.679"/>
</return>
<msg timestamp="20220706 04:05:23.679" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 04:05:23.445" endtime="20220706 04:05:23.679"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 04:05:23.679" endtime="20220706 04:05:23.679"/>
</return>
<msg timestamp="20220706 04:05:23.680" level="INFO">${BOARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 04:05:23.445" endtime="20220706 04:05:23.680"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_BOARD_ID}</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220706 04:05:23.681" level="INFO">${TEST_SUITE_BOARD_ID} = 62c50a034995e7103b352962</msg>
<status status="PASS" starttime="20220706 04:05:23.680" endtime="20220706 04:05:23.681"/>
</kw>
<kw name="Get Lists On A Board" library="Board">
<var>${LISTS}</var>
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Get all the lists in a board</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>lists_on_board</arg>
<arg>${id}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220706 04:05:23.682" level="INFO">${url} = boards/62c50a034995e7103b352962/lists/</msg>
<status status="PASS" starttime="20220706 04:05:23.682" endtime="20220706 04:05:23.682"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220706 04:05:23.789" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 04:05:23.683" endtime="20220706 04:05:23.789"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 04:05:23.789" endtime="20220706 04:05:23.789"/>
</return>
<msg timestamp="20220706 04:05:23.789" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 04:05:23.682" endtime="20220706 04:05:23.789"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 04:05:23.789" endtime="20220706 04:05:23.789"/>
</return>
<msg timestamp="20220706 04:05:23.790" level="INFO">${LISTS} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 04:05:23.681" endtime="20220706 04:05:23.790"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_LIST_ID}</arg>
<arg>${LISTS.json()}[0][id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220706 04:05:23.791" level="INFO">${TEST_SUITE_LIST_ID} = 62c50a034995e7103b352969</msg>
<status status="PASS" starttime="20220706 04:05:23.790" endtime="20220706 04:05:23.791"/>
</kw>
<kw name="Create A Card" library="Card">
<var>${CARD}</var>
<arg>name</arg>
<arg>TestCard</arg>
<doc>Creates a new card in the given list.
required_args: listId
optional_args: name, desc, pos, idCardSource, idLabels, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>@{optional_args}</arg>
<arg>idList</arg>
<arg>${idList}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220706 04:05:23.793" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220706 04:05:23.793" endtime="20220706 04:05:23.793"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220706 04:05:23.793" endtime="20220706 04:05:23.793"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220706 04:05:23.794" level="INFO">${url} = cards/</msg>
<status status="PASS" starttime="20220706 04:05:23.793" endtime="20220706 04:05:23.794"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220706 04:05:24.004" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 04:05:23.794" endtime="20220706 04:05:24.004"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 04:05:24.004" endtime="20220706 04:05:24.004"/>
</return>
<msg timestamp="20220706 04:05:24.005" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 04:05:23.792" endtime="20220706 04:05:24.005"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 04:05:24.005" endtime="20220706 04:05:24.005"/>
</return>
<msg timestamp="20220706 04:05:24.005" level="INFO">${CARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 04:05:23.791" endtime="20220706 04:05:24.005"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_CARD_ID}</arg>
<arg>${CARD.json()}[id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220706 04:05:24.006" level="INFO">${TEST_SUITE_CARD_ID} = 62c50a039c97f56af81042cd</msg>
<status status="PASS" starttime="20220706 04:05:24.005" endtime="20220706 04:05:24.006"/>
</kw>
<status status="PASS" starttime="20220706 04:05:23.444" endtime="20220706 04:05:24.006"/>
</kw>
<status status="PASS" starttime="20220706 04:05:23.443" endtime="20220706 04:05:24.006"/>
</kw>
<test id="s1-s1-s3-t1" name="Verify A Checklist Can Be Created" line="14">
<kw name="Create A Checklist" library="Checklist">
<var>${response}</var>
<arg>name</arg>
<arg>TestChecklist</arg>
<arg>idCard=${TEST_SUITE_CARD_ID}</arg>
<doc>Creates a new checklist in the given card.
required_args: idCard
optional_args: name, pos, idChecklistSource
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>@{optional_args}</arg>
<arg>idCard</arg>
<arg>${idCard}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220706 04:05:24.009" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220706 04:05:24.009" endtime="20220706 04:05:24.009"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220706 04:05:24.009" endtime="20220706 04:05:24.009"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220706 04:05:24.010" level="INFO">${url} = checklists/</msg>
<status status="PASS" starttime="20220706 04:05:24.009" endtime="20220706 04:05:24.010"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220706 04:05:24.182" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 04:05:24.010" endtime="20220706 04:05:24.183"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 04:05:24.183" endtime="20220706 04:05:24.183"/>
</return>
<msg timestamp="20220706 04:05:24.183" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 04:05:24.008" endtime="20220706 04:05:24.183"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 04:05:24.183" endtime="20220706 04:05:24.183"/>
</return>
<msg timestamp="20220706 04:05:24.184" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 04:05:24.007" endtime="20220706 04:05:24.184"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${checklist_id}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220706 04:05:24.184" endtime="20220706 04:05:24.184"/>
</return>
<msg timestamp="20220706 04:05:24.185" level="INFO">${checklist_id} = 62c50a04da24705dd262d09e</msg>
<status status="PASS" starttime="20220706 04:05:24.184" endtime="20220706 04:05:24.185"/>
</kw>
<kw name="Get A Checklist" library="Checklist">
<var>${response}</var>
<arg>${checklist_id}</arg>
<doc>Gets the checklist with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220706 04:05:24.187" level="INFO">${url} = checklists/62c50a04da24705dd262d09e</msg>
<status status="PASS" starttime="20220706 04:05:24.187" endtime="20220706 04:05:24.187"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220706 04:05:24.290" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 04:05:24.187" endtime="20220706 04:05:24.290"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 04:05:24.290" endtime="20220706 04:05:24.290"/>
</return>
<msg timestamp="20220706 04:05:24.290" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 04:05:24.186" endtime="20220706 04:05:24.291"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 04:05:24.291" endtime="20220706 04:05:24.291"/>
</return>
<msg timestamp="20220706 04:05:24.291" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 04:05:24.185" endtime="20220706 04:05:24.291"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${checklist_name}</var>
<arg>${response}</arg>
<arg>name</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220706 04:05:24.292" endtime="20220706 04:05:24.292"/>
</return>
<msg timestamp="20220706 04:05:24.293" level="INFO">${checklist_name} = TestChecklist</msg>
<status status="PASS" starttime="20220706 04:05:24.291" endtime="20220706 04:05:24.293"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${checklist_name}</arg>
<arg>TestChecklist</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220706 04:05:24.293" endtime="20220706 04:05:24.293"/>
</kw>
<kw name="Delete A Checklist" library="Checklist" type="TEARDOWN">
<arg>${checklist_id}</arg>
<doc>Deletes the checklist with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220706 04:05:24.295" level="INFO">${url} = checklists/62c50a04da24705dd262d09e</msg>
<status status="PASS" starttime="20220706 04:05:24.295" endtime="20220706 04:05:24.295"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220706 04:05:24.465" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 04:05:24.295" endtime="20220706 04:05:24.465"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 04:05:24.465" endtime="20220706 04:05:24.465"/>
</return>
<msg timestamp="20220706 04:05:24.465" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 04:05:24.294" endtime="20220706 04:05:24.465"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 04:05:24.465" endtime="20220706 04:05:24.465"/>
</return>
<status status="PASS" starttime="20220706 04:05:24.293" endtime="20220706 04:05:24.465"/>
</kw>
<doc>Verify that a checklist can be created through API</doc>
<tag>api</tag>
<tag>checklist.create</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220706 04:05:24.007" endtime="20220706 04:05:24.466"/>
</test>
<test id="s1-s1-s3-t2" name="Verify A Checklist Can Be Deleted" line="24">
<kw name="Create A Checklist" library="Checklist">
<var>${response}</var>
<arg>name</arg>
<arg>TestChecklist</arg>
<arg>idCard=${TEST_SUITE_CARD_ID}</arg>
<doc>Creates a new checklist in the given card.
required_args: idCard
optional_args: name, pos, idChecklistSource
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>@{optional_args}</arg>
<arg>idCard</arg>
<arg>${idCard}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220706 04:05:24.469" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220706 04:05:24.469" endtime="20220706 04:05:24.469"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220706 04:05:24.469" endtime="20220706 04:05:24.470"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220706 04:05:24.471" level="INFO">${url} = checklists/</msg>
<status status="PASS" starttime="20220706 04:05:24.470" endtime="20220706 04:05:24.471"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220706 04:05:24.652" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 04:05:24.471" endtime="20220706 04:05:24.652"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 04:05:24.652" endtime="20220706 04:05:24.652"/>
</return>
<msg timestamp="20220706 04:05:24.652" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 04:05:24.468" endtime="20220706 04:05:24.652"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 04:05:24.652" endtime="20220706 04:05:24.653"/>
</return>
<msg timestamp="20220706 04:05:24.653" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 04:05:24.467" endtime="20220706 04:05:24.653"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${checklist_id}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220706 04:05:24.653" endtime="20220706 04:05:24.654"/>
</return>
<msg timestamp="20220706 04:05:24.655" level="INFO">${checklist_id} = 62c50a0460e34c2607a38148</msg>
<status status="PASS" starttime="20220706 04:05:24.653" endtime="20220706 04:05:24.655"/>
</kw>
<kw name="Delete A Checklist" library="Checklist">
<var>${response}</var>
<arg>${checklist_id}</arg>
<doc>Deletes the checklist with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220706 04:05:24.656" level="INFO">${url} = checklists/62c50a0460e34c2607a38148</msg>
<status status="PASS" starttime="20220706 04:05:24.656" endtime="20220706 04:05:24.656"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220706 04:05:24.807" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 04:05:24.657" endtime="20220706 04:05:24.807"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 04:05:24.807" endtime="20220706 04:05:24.807"/>
</return>
<msg timestamp="20220706 04:05:24.808" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 04:05:24.655" endtime="20220706 04:05:24.808"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 04:05:24.808" endtime="20220706 04:05:24.808"/>
</return>
<msg timestamp="20220706 04:05:24.808" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 04:05:24.655" endtime="20220706 04:05:24.808"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>delete</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220706 04:05:24.809" endtime="20220706 04:05:24.811"/>
</kw>
<status status="PASS" starttime="20220706 04:05:24.808" endtime="20220706 04:05:24.811"/>
</kw>
<kw name="Get A Checklist" library="Checklist">
<arg>${checklist_id}</arg>
<arg>status_code=404</arg>
<doc>Gets the checklist with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220706 04:05:24.813" level="INFO">${url} = checklists/62c50a0460e34c2607a38148</msg>
<status status="PASS" starttime="20220706 04:05:24.813" endtime="20220706 04:05:24.813"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220706 04:05:24.908" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220706 04:05:24.813" endtime="20220706 04:05:24.908"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 04:05:24.909" endtime="20220706 04:05:24.909"/>
</return>
<msg timestamp="20220706 04:05:24.909" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220706 04:05:24.812" endtime="20220706 04:05:24.909"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 04:05:24.909" endtime="20220706 04:05:24.909"/>
</return>
<status status="PASS" starttime="20220706 04:05:24.811" endtime="20220706 04:05:24.909"/>
</kw>
<doc>Verify that a checklist can be deleted through API</doc>
<tag>api</tag>
<tag>checklist.delete</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220706 04:05:24.466" endtime="20220706 04:05:24.909"/>
</test>
<test id="s1-s1-s3-t3" name="Verify A Checklist Can Be Updated" line="33">
<kw name="Create A Checklist" library="Checklist">
<var>${response}</var>
<arg>name</arg>
<arg>TestChecklist</arg>
<arg>idCard=${TEST_SUITE_CARD_ID}</arg>
<doc>Creates a new checklist in the given card.
required_args: idCard
optional_args: name, pos, idChecklistSource
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>@{optional_args}</arg>
<arg>idCard</arg>
<arg>${idCard}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220706 04:05:24.914" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220706 04:05:24.912" endtime="20220706 04:05:24.914"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220706 04:05:24.914" endtime="20220706 04:05:24.915"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220706 04:05:24.916" level="INFO">${url} = checklists/</msg>
<status status="PASS" starttime="20220706 04:05:24.915" endtime="20220706 04:05:24.916"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220706 04:05:25.084" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 04:05:24.916" endtime="20220706 04:05:25.084"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 04:05:25.084" endtime="20220706 04:05:25.084"/>
</return>
<msg timestamp="20220706 04:05:25.084" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 04:05:24.911" endtime="20220706 04:05:25.084"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 04:05:25.084" endtime="20220706 04:05:25.084"/>
</return>
<msg timestamp="20220706 04:05:25.085" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 04:05:24.911" endtime="20220706 04:05:25.085"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${checklist_id}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220706 04:05:25.085" endtime="20220706 04:05:25.085"/>
</return>
<msg timestamp="20220706 04:05:25.086" level="INFO">${checklist_id} = 62c50a05ad9ed86c53bf708f</msg>
<status status="PASS" starttime="20220706 04:05:25.085" endtime="20220706 04:05:25.086"/>
</kw>
<kw name="Update A Checklist" library="Checklist">
<var>${response}</var>
<arg>${checklist_id}</arg>
<arg>name</arg>
<arg>TestChecklist2</arg>
<doc>Updates the checklist with the given ID
optional_args: name, pos
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<arg>status_code=${status_code}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220706 04:05:25.088" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220706 04:05:25.088" endtime="20220706 04:05:25.088"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220706 04:05:25.088" endtime="20220706 04:05:25.089"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220706 04:05:25.089" level="INFO">${url} = checklists/62c50a05ad9ed86c53bf708f</msg>
<status status="PASS" starttime="20220706 04:05:25.089" endtime="20220706 04:05:25.089"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220706 04:05:25.238" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 04:05:25.089" endtime="20220706 04:05:25.238"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 04:05:25.238" endtime="20220706 04:05:25.238"/>
</return>
<msg timestamp="20220706 04:05:25.238" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 04:05:25.087" endtime="20220706 04:05:25.238"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 04:05:25.238" endtime="20220706 04:05:25.238"/>
</return>
<msg timestamp="20220706 04:05:25.239" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 04:05:25.087" endtime="20220706 04:05:25.239"/>
</kw>
<kw name="Get A Checklist" library="Checklist">
<var>${response}</var>
<arg>${checklist_id}</arg>
<doc>Gets the checklist with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220706 04:05:25.240" level="INFO">${url} = checklists/62c50a05ad9ed86c53bf708f</msg>
<status status="PASS" starttime="20220706 04:05:25.240" endtime="20220706 04:05:25.240"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220706 04:05:25.347" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 04:05:25.240" endtime="20220706 04:05:25.347"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 04:05:25.347" endtime="20220706 04:05:25.347"/>
</return>
<msg timestamp="20220706 04:05:25.347" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 04:05:25.239" endtime="20220706 04:05:25.347"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 04:05:25.347" endtime="20220706 04:05:25.347"/>
</return>
<msg timestamp="20220706 04:05:25.348" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 04:05:25.239" endtime="20220706 04:05:25.348"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${checklist_name}</var>
<arg>${response}</arg>
<arg>name</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220706 04:05:25.348" endtime="20220706 04:05:25.348"/>
</return>
<msg timestamp="20220706 04:05:25.349" level="INFO">${checklist_name} = TestChecklist2</msg>
<status status="PASS" starttime="20220706 04:05:25.348" endtime="20220706 04:05:25.349"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${checklist_name}</arg>
<arg>TestChecklist2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220706 04:05:25.350" endtime="20220706 04:05:25.350"/>
</kw>
<kw name="Delete A Checklist" library="Checklist" type="TEARDOWN">
<arg>${checklist_id}</arg>
<doc>Deletes the checklist with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220706 04:05:25.363" level="INFO">${url} = checklists/62c50a05ad9ed86c53bf708f</msg>
<status status="PASS" starttime="20220706 04:05:25.363" endtime="20220706 04:05:25.363"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220706 04:05:25.529" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 04:05:25.363" endtime="20220706 04:05:25.530"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 04:05:25.530" endtime="20220706 04:05:25.530"/>
</return>
<msg timestamp="20220706 04:05:25.530" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 04:05:25.362" endtime="20220706 04:05:25.530"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 04:05:25.530" endtime="20220706 04:05:25.530"/>
</return>
<status status="PASS" starttime="20220706 04:05:25.350" endtime="20220706 04:05:25.530"/>
</kw>
<doc>Verify that a checklist's name can be updated through API</doc>
<tag>api</tag>
<tag>checklist.update</tag>
<tag>regression</tag>
<status status="PASS" starttime="20220706 04:05:24.910" endtime="20220706 04:05:25.530"/>
</test>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Teardown Board</arg>
<arg>Delete All Sessions</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Teardown Board">
<doc>Delete the board created for this suite</doc>
<kw name="Delete A Board" library="Board">
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220706 04:05:25.534" level="INFO">${url} = boards/62c50a034995e7103b352962</msg>
<status status="PASS" starttime="20220706 04:05:25.533" endtime="20220706 04:05:25.534"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220706 04:05:25.904" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 04:05:25.534" endtime="20220706 04:05:25.904"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 04:05:25.904" endtime="20220706 04:05:25.904"/>
</return>
<msg timestamp="20220706 04:05:25.904" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 04:05:25.533" endtime="20220706 04:05:25.904"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 04:05:25.904" endtime="20220706 04:05:25.904"/>
</return>
<status status="PASS" starttime="20220706 04:05:25.532" endtime="20220706 04:05:25.905"/>
</kw>
<status status="PASS" starttime="20220706 04:05:25.532" endtime="20220706 04:05:25.905"/>
</kw>
<kw name="Delete All Sessions" library="request_own_library">
<status status="PASS" starttime="20220706 04:05:25.905" endtime="20220706 04:05:25.906"/>
</kw>
<status status="PASS" starttime="20220706 04:05:25.532" endtime="20220706 04:05:25.906"/>
</kw>
<doc>Example Test with Trello API Checklists</doc>
<status status="PASS" starttime="20220706 04:05:23.431" endtime="20220706 04:05:25.906"/>
</suite>
<suite id="s1-s1-s4" name="Trello Api Labels Tests" source="/trello/api/trello_api_labels_tests.robot">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Create Trello Session</arg>
<arg>Setup Board And List</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Create Trello Session" library="TrelloAPI">
<doc>Creates a Trello Session</doc>
<kw name="Create Session" library="request_own_library">
<arg>${API_BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<status status="PASS" starttime="20220706 04:05:25.927" endtime="20220706 04:05:25.928"/>
</kw>
<status status="PASS" starttime="20220706 04:05:25.927" endtime="20220706 04:05:25.928"/>
</kw>
<kw name="Setup Board And List">
<doc>Create a board and save its ID and its first list's ID</doc>
<kw name="Create A Board" library="Board">
<var>${BOARD}</var>
<arg>TestBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220706 04:05:25.929" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220706 04:05:25.929" endtime="20220706 04:05:25.929"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220706 04:05:25.929" endtime="20220706 04:05:25.930"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220706 04:05:25.931" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220706 04:05:25.930" endtime="20220706 04:05:25.931"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220706 04:05:26.179" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 04:05:25.931" endtime="20220706 04:05:26.179"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 04:05:26.179" endtime="20220706 04:05:26.179"/>
</return>
<msg timestamp="20220706 04:05:26.179" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 04:05:25.928" endtime="20220706 04:05:26.179"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 04:05:26.179" endtime="20220706 04:05:26.179"/>
</return>
<msg timestamp="20220706 04:05:26.180" level="INFO">${BOARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 04:05:25.928" endtime="20220706 04:05:26.180"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_BOARD_ID}</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220706 04:05:26.181" level="INFO">${TEST_SUITE_BOARD_ID} = 62c50a0675597a766fca61e6</msg>
<status status="PASS" starttime="20220706 04:05:26.180" endtime="20220706 04:05:26.181"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${LISTS}</var>
<arg>boards/${TEST_SUITE_BOARD_ID}/lists</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220706 04:05:26.285" level="INFO">${LISTS} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 04:05:26.181" endtime="20220706 04:05:26.285"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_LIST_ID}</arg>
<arg>${LISTS.json()}[0][id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220706 04:05:26.286" level="INFO">${TEST_SUITE_LIST_ID} = 62c50a0675597a766fca61ed</msg>
<status status="PASS" starttime="20220706 04:05:26.285" endtime="20220706 04:05:26.286"/>
</kw>
<status status="PASS" starttime="20220706 04:05:25.928" endtime="20220706 04:05:26.286"/>
</kw>
<status status="PASS" starttime="20220706 04:05:25.927" endtime="20220706 04:05:26.287"/>
</kw>
<test id="s1-s1-s4-t1" name="Create and get label on board" line="14">
<kw name="Create A Label" library="Label">
<var>${response}</var>
<arg>name</arg>
<arg>label2</arg>
<arg>color</arg>
<arg>yellow</arg>
<doc>Creates a new label in the given board.
required_args: idBoard
optional_args: name, color
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>idBoard</arg>
<arg>${idBoard}</arg>
<arg>@{optional_args}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220706 04:05:26.289" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220706 04:05:26.289" endtime="20220706 04:05:26.289"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220706 04:05:26.289" endtime="20220706 04:05:26.290"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220706 04:05:26.291" level="INFO">${url} = labels/</msg>
<status status="PASS" starttime="20220706 04:05:26.290" endtime="20220706 04:05:26.291"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220706 04:05:26.440" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 04:05:26.291" endtime="20220706 04:05:26.440"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 04:05:26.440" endtime="20220706 04:05:26.440"/>
</return>
<msg timestamp="20220706 04:05:26.441" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 04:05:26.288" endtime="20220706 04:05:26.441"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 04:05:26.441" endtime="20220706 04:05:26.441"/>
</return>
<msg timestamp="20220706 04:05:26.441" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 04:05:26.287" endtime="20220706 04:05:26.441"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>label</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220706 04:05:26.442" endtime="20220706 04:05:26.444"/>
</kw>
<status status="PASS" starttime="20220706 04:05:26.441" endtime="20220706 04:05:26.444"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${LABEL_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220706 04:05:26.445" endtime="20220706 04:05:26.445"/>
</return>
<msg timestamp="20220706 04:05:26.445" level="INFO">${LABEL_ID} = 62c50a0657e6cb5c1836ac05</msg>
<status status="PASS" starttime="20220706 04:05:26.444" endtime="20220706 04:05:26.446"/>
</kw>
<kw name="Get A Label" library="Label">
<var>${response}</var>
<arg>${LABEL_ID}</arg>
<doc>Gets the label with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220706 04:05:26.447" level="INFO">${url} = labels/62c50a0657e6cb5c1836ac05</msg>
<status status="PASS" starttime="20220706 04:05:26.447" endtime="20220706 04:05:26.447"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220706 04:05:26.547" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 04:05:26.447" endtime="20220706 04:05:26.547"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 04:05:26.548" endtime="20220706 04:05:26.548"/>
</return>
<msg timestamp="20220706 04:05:26.548" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 04:05:26.446" endtime="20220706 04:05:26.548"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 04:05:26.548" endtime="20220706 04:05:26.548"/>
</return>
<msg timestamp="20220706 04:05:26.548" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 04:05:26.446" endtime="20220706 04:05:26.548"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${LABEL_COLOR}</var>
<arg>${response}</arg>
<arg>color</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220706 04:05:26.549" endtime="20220706 04:05:26.549"/>
</return>
<msg timestamp="20220706 04:05:26.550" level="INFO">${LABEL_COLOR} = yellow</msg>
<status status="PASS" starttime="20220706 04:05:26.549" endtime="20220706 04:05:26.550"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${LABEL_NAME}</var>
<arg>${response}</arg>
<arg>name</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220706 04:05:26.550" endtime="20220706 04:05:26.551"/>
</return>
<msg timestamp="20220706 04:05:26.551" level="INFO">${LABEL_NAME} = label2</msg>
<status status="PASS" starttime="20220706 04:05:26.550" endtime="20220706 04:05:26.551"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${LABEL_COLOR}</arg>
<arg>yellow</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220706 04:05:26.552" endtime="20220706 04:05:26.552"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${LABEL_NAME}</arg>
<arg>label2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220706 04:05:26.552" endtime="20220706 04:05:26.553"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Label</arg>
<arg>${LABEL_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Label" library="Label">
<arg>${LABEL_ID}</arg>
<doc>Deletes the label with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220706 04:05:26.555" level="INFO">${url} = labels/62c50a0657e6cb5c1836ac05</msg>
<status status="PASS" starttime="20220706 04:05:26.554" endtime="20220706 04:05:26.555"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220706 04:05:26.724" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 04:05:26.555" endtime="20220706 04:05:26.724"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 04:05:26.724" endtime="20220706 04:05:26.724"/>
</return>
<msg timestamp="20220706 04:05:26.725" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 04:05:26.554" endtime="20220706 04:05:26.725"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 04:05:26.725" endtime="20220706 04:05:26.725"/>
</return>
<status status="PASS" starttime="20220706 04:05:26.553" endtime="20220706 04:05:26.725"/>
</kw>
<status status="PASS" starttime="20220706 04:05:26.553" endtime="20220706 04:05:26.725"/>
</kw>
<doc>Verify that a label can be created through API</doc>
<tag>api</tag>
<tag>label.create</tag>
<tag>label.get</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220706 04:05:26.287" endtime="20220706 04:05:26.725"/>
</test>
<test id="s1-s1-s4-t2" name="Update label on board" line="28">
<kw name="Create A Label" library="Label">
<var>${response}</var>
<arg>name</arg>
<arg>label2</arg>
<arg>color</arg>
<arg>yellow</arg>
<doc>Creates a new label in the given board.
required_args: idBoard
optional_args: name, color
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>idBoard</arg>
<arg>${idBoard}</arg>
<arg>@{optional_args}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220706 04:05:26.728" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220706 04:05:26.728" endtime="20220706 04:05:26.728"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220706 04:05:26.728" endtime="20220706 04:05:26.729"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220706 04:05:26.730" level="INFO">${url} = labels/</msg>
<status status="PASS" starttime="20220706 04:05:26.729" endtime="20220706 04:05:26.730"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220706 04:05:26.875" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 04:05:26.730" endtime="20220706 04:05:26.875"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 04:05:26.875" endtime="20220706 04:05:26.876"/>
</return>
<msg timestamp="20220706 04:05:26.876" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 04:05:26.727" endtime="20220706 04:05:26.876"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 04:05:26.876" endtime="20220706 04:05:26.876"/>
</return>
<msg timestamp="20220706 04:05:26.876" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 04:05:26.727" endtime="20220706 04:05:26.876"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>label</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220706 04:05:26.877" endtime="20220706 04:05:26.880"/>
</kw>
<status status="PASS" starttime="20220706 04:05:26.877" endtime="20220706 04:05:26.880"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${LABEL_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220706 04:05:26.880" endtime="20220706 04:05:26.880"/>
</return>
<msg timestamp="20220706 04:05:26.881" level="INFO">${LABEL_ID} = 62c50a06b505e3187fe8fa36</msg>
<status status="PASS" starttime="20220706 04:05:26.880" endtime="20220706 04:05:26.881"/>
</kw>
<kw name="Update A Label" library="Label">
<var>${new_response}</var>
<arg>${LABEL_ID}</arg>
<arg>name</arg>
<arg>label3</arg>
<arg>color</arg>
<arg>orange</arg>
<doc>Updates the label with the given ID
optional_args: name, color
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220706 04:05:26.883" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220706 04:05:26.882" endtime="20220706 04:05:26.883"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220706 04:05:26.883" endtime="20220706 04:05:26.883"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220706 04:05:26.884" level="INFO">${url} = labels/62c50a06b505e3187fe8fa36</msg>
<status status="PASS" starttime="20220706 04:05:26.883" endtime="20220706 04:05:26.884"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220706 04:05:27.044" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 04:05:26.884" endtime="20220706 04:05:27.044"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 04:05:27.045" endtime="20220706 04:05:27.045"/>
</return>
<msg timestamp="20220706 04:05:27.045" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 04:05:26.882" endtime="20220706 04:05:27.045"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 04:05:27.045" endtime="20220706 04:05:27.045"/>
</return>
<msg timestamp="20220706 04:05:27.045" level="INFO">${new_response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 04:05:26.881" endtime="20220706 04:05:27.045"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${NEW_LABEL_COLOR}</var>
<arg>${new_response}</arg>
<arg>color</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220706 04:05:27.046" endtime="20220706 04:05:27.046"/>
</return>
<msg timestamp="20220706 04:05:27.047" level="INFO">${NEW_LABEL_COLOR} = orange</msg>
<status status="PASS" starttime="20220706 04:05:27.046" endtime="20220706 04:05:27.047"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${NEW_LABEL_NAME}</var>
<arg>${new_response}</arg>
<arg>name</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220706 04:05:27.047" endtime="20220706 04:05:27.048"/>
</return>
<msg timestamp="20220706 04:05:27.048" level="INFO">${NEW_LABEL_NAME} = label3</msg>
<status status="PASS" starttime="20220706 04:05:27.047" endtime="20220706 04:05:27.048"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${NEW_LABEL_COLOR}</arg>
<arg>orange</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220706 04:05:27.049" endtime="20220706 04:05:27.049"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${NEW_LABEL_NAME}</arg>
<arg>label3</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220706 04:05:27.049" endtime="20220706 04:05:27.049"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Label</arg>
<arg>${LABEL_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Label" library="Label">
<arg>${LABEL_ID}</arg>
<doc>Deletes the label with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220706 04:05:27.052" level="INFO">${url} = labels/62c50a06b505e3187fe8fa36</msg>
<status status="PASS" starttime="20220706 04:05:27.051" endtime="20220706 04:05:27.052"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220706 04:05:27.216" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 04:05:27.052" endtime="20220706 04:05:27.216"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 04:05:27.216" endtime="20220706 04:05:27.216"/>
</return>
<msg timestamp="20220706 04:05:27.217" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 04:05:27.050" endtime="20220706 04:05:27.217"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 04:05:27.217" endtime="20220706 04:05:27.217"/>
</return>
<status status="PASS" starttime="20220706 04:05:27.050" endtime="20220706 04:05:27.217"/>
</kw>
<status status="PASS" starttime="20220706 04:05:27.050" endtime="20220706 04:05:27.217"/>
</kw>
<doc>Verify that a label's name and color can be updated through API</doc>
<tag>api</tag>
<tag>label.update</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220706 04:05:26.726" endtime="20220706 04:05:27.217"/>
</test>
<test id="s1-s1-s4-t3" name="Delete label on board" line="41">
<kw name="Create A Label" library="Label">
<var>${response}</var>
<arg>name</arg>
<arg>label2</arg>
<arg>color</arg>
<arg>yellow</arg>
<doc>Creates a new label in the given board.
required_args: idBoard
optional_args: name, color
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>idBoard</arg>
<arg>${idBoard}</arg>
<arg>@{optional_args}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220706 04:05:27.220" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220706 04:05:27.219" endtime="20220706 04:05:27.220"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220706 04:05:27.220" endtime="20220706 04:05:27.220"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220706 04:05:27.221" level="INFO">${url} = labels/</msg>
<status status="PASS" starttime="20220706 04:05:27.220" endtime="20220706 04:05:27.221"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220706 04:05:27.359" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 04:05:27.221" endtime="20220706 04:05:27.359"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 04:05:27.359" endtime="20220706 04:05:27.359"/>
</return>
<msg timestamp="20220706 04:05:27.359" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 04:05:27.219" endtime="20220706 04:05:27.359"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 04:05:27.359" endtime="20220706 04:05:27.359"/>
</return>
<msg timestamp="20220706 04:05:27.359" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 04:05:27.218" endtime="20220706 04:05:27.359"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${LABEL_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220706 04:05:27.360" endtime="20220706 04:05:27.360"/>
</return>
<msg timestamp="20220706 04:05:27.361" level="INFO">${LABEL_ID} = 62c50a07b1aca98660b34d6b</msg>
<status status="PASS" starttime="20220706 04:05:27.360" endtime="20220706 04:05:27.361"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Label</arg>
<arg>${LABEL_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Label" library="Label">
<arg>${LABEL_ID}</arg>
<doc>Deletes the label with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220706 04:05:27.363" level="INFO">${url} = labels/62c50a07b1aca98660b34d6b</msg>
<status status="PASS" starttime="20220706 04:05:27.363" endtime="20220706 04:05:27.363"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220706 04:05:27.518" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 04:05:27.363" endtime="20220706 04:05:27.518"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 04:05:27.518" endtime="20220706 04:05:27.518"/>
</return>
<msg timestamp="20220706 04:05:27.519" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 04:05:27.362" endtime="20220706 04:05:27.519"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 04:05:27.519" endtime="20220706 04:05:27.519"/>
</return>
<status status="PASS" starttime="20220706 04:05:27.362" endtime="20220706 04:05:27.519"/>
</kw>
<status status="PASS" starttime="20220706 04:05:27.361" endtime="20220706 04:05:27.519"/>
</kw>
<kw name="Get A Label" library="Label">
<arg>${LABEL_ID}</arg>
<arg>status_code=404</arg>
<doc>Gets the label with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220706 04:05:27.521" level="INFO">${url} = labels/62c50a07b1aca98660b34d6b</msg>
<status status="PASS" starttime="20220706 04:05:27.520" endtime="20220706 04:05:27.521"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220706 04:05:27.612" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220706 04:05:27.521" endtime="20220706 04:05:27.612"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 04:05:27.612" endtime="20220706 04:05:27.612"/>
</return>
<msg timestamp="20220706 04:05:27.613" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220706 04:05:27.520" endtime="20220706 04:05:27.613"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 04:05:27.613" endtime="20220706 04:05:27.613"/>
</return>
<status status="PASS" starttime="20220706 04:05:27.519" endtime="20220706 04:05:27.613"/>
</kw>
<doc>Verify that a label can be deleted through API</doc>
<tag>api</tag>
<tag>label.delete</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220706 04:05:27.218" endtime="20220706 04:05:27.613"/>
</test>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Teardown Board</arg>
<arg>Delete All Sessions</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Teardown Board">
<doc>Delete the board created for this session.</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220706 04:05:27.617" level="INFO">${url} = boards/62c50a0675597a766fca61e6</msg>
<status status="PASS" starttime="20220706 04:05:27.616" endtime="20220706 04:05:27.617"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220706 04:05:27.955" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 04:05:27.617" endtime="20220706 04:05:27.955"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 04:05:27.955" endtime="20220706 04:05:27.956"/>
</return>
<msg timestamp="20220706 04:05:27.956" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 04:05:27.616" endtime="20220706 04:05:27.956"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 04:05:27.956" endtime="20220706 04:05:27.956"/>
</return>
<status status="PASS" starttime="20220706 04:05:27.615" endtime="20220706 04:05:27.956"/>
</kw>
<status status="PASS" starttime="20220706 04:05:27.615" endtime="20220706 04:05:27.956"/>
</kw>
<status status="PASS" starttime="20220706 04:05:27.614" endtime="20220706 04:05:27.956"/>
</kw>
<kw name="Delete All Sessions" library="request_own_library">
<status status="PASS" starttime="20220706 04:05:27.957" endtime="20220706 04:05:27.958"/>
</kw>
<status status="PASS" starttime="20220706 04:05:27.614" endtime="20220706 04:05:27.958"/>
</kw>
<doc>Example Test with Trello API Cards</doc>
<status status="PASS" starttime="20220706 04:05:25.908" endtime="20220706 04:05:27.958"/>
</suite>
<suite id="s1-s1-s5" name="Trello Api Lists Tests" source="/trello/api/trello_api_lists_tests.robot">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Create Trello Session</arg>
<arg>Setup Board</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Create Trello Session" library="TrelloAPI">
<doc>Creates a Trello Session</doc>
<kw name="Create Session" library="request_own_library">
<arg>${API_BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<status status="PASS" starttime="20220706 04:05:27.971" endtime="20220706 04:05:27.971"/>
</kw>
<status status="PASS" starttime="20220706 04:05:27.971" endtime="20220706 04:05:27.971"/>
</kw>
<kw name="Setup Board">
<doc>Create a board and save it's id for the suite</doc>
<kw name="Create A Board" library="Board">
<var>${BOARD}</var>
<arg>TestBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220706 04:05:27.973" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220706 04:05:27.973" endtime="20220706 04:05:27.973"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220706 04:05:27.973" endtime="20220706 04:05:27.973"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220706 04:05:27.974" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220706 04:05:27.974" endtime="20220706 04:05:27.974"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220706 04:05:28.201" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 04:05:27.975" endtime="20220706 04:05:28.201"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 04:05:28.201" endtime="20220706 04:05:28.201"/>
</return>
<msg timestamp="20220706 04:05:28.201" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 04:05:27.972" endtime="20220706 04:05:28.201"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 04:05:28.201" endtime="20220706 04:05:28.202"/>
</return>
<msg timestamp="20220706 04:05:28.202" level="INFO">${BOARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 04:05:27.972" endtime="20220706 04:05:28.202"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Set Suite Variable</arg>
<arg>\${TEST_SUITE_BOARD_ID}</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_BOARD_ID}</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220706 04:05:28.203" level="INFO">${TEST_SUITE_BOARD_ID} = 62c50a081b34df6130f3c47a</msg>
<status status="PASS" starttime="20220706 04:05:28.202" endtime="20220706 04:05:28.203"/>
</kw>
<status status="PASS" starttime="20220706 04:05:28.202" endtime="20220706 04:05:28.203"/>
</kw>
<status status="PASS" starttime="20220706 04:05:27.971" endtime="20220706 04:05:28.204"/>
</kw>
<status status="PASS" starttime="20220706 04:05:27.970" endtime="20220706 04:05:28.204"/>
</kw>
<test id="s1-s1-s5-t1" name="CREATE a list" line="13">
<kw name="Create A List" library="List">
<var>${response}</var>
<arg>NewList</arg>
<doc>Creates a new List
board id
name the list will have
optional_args: idListSource, pos, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>list</arg>
<arg>name</arg>
<arg>${name}</arg>
<arg>idBoard</arg>
<arg>${idBoard}</arg>
<arg>@{optional_args}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220706 04:05:28.206" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220706 04:05:28.206" endtime="20220706 04:05:28.206"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220706 04:05:28.206" endtime="20220706 04:05:28.207"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220706 04:05:28.208" level="INFO">${url} = lists/</msg>
<status status="PASS" starttime="20220706 04:05:28.207" endtime="20220706 04:05:28.208"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220706 04:05:28.372" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 04:05:28.208" endtime="20220706 04:05:28.372"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 04:05:28.372" endtime="20220706 04:05:28.373"/>
</return>
<msg timestamp="20220706 04:05:28.373" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 04:05:28.205" endtime="20220706 04:05:28.373"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 04:05:28.373" endtime="20220706 04:05:28.373"/>
</return>
<msg timestamp="20220706 04:05:28.373" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 04:05:28.205" endtime="20220706 04:05:28.373"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>list</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220706 04:05:28.374" endtime="20220706 04:05:28.376"/>
</kw>
<status status="PASS" starttime="20220706 04:05:28.373" endtime="20220706 04:05:28.377"/>
</kw>
<doc>Verify that a list can be created through API</doc>
<tag>api</tag>
<tag>list.create</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220706 04:05:28.204" endtime="20220706 04:05:28.377"/>
</test>
<test id="s1-s1-s5-t2" name="UPDATE a list" line="19">
<kw name="Create A List" library="List">
<var>${response}</var>
<arg>NewList</arg>
<doc>Creates a new List
board id
name the list will have
optional_args: idListSource, pos, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>list</arg>
<arg>name</arg>
<arg>${name}</arg>
<arg>idBoard</arg>
<arg>${idBoard}</arg>
<arg>@{optional_args}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220706 04:05:28.380" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220706 04:05:28.379" endtime="20220706 04:05:28.380"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220706 04:05:28.380" endtime="20220706 04:05:28.380"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220706 04:05:28.381" level="INFO">${url} = lists/</msg>
<status status="PASS" starttime="20220706 04:05:28.380" endtime="20220706 04:05:28.381"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220706 04:05:28.550" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 04:05:28.381" endtime="20220706 04:05:28.550"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 04:05:28.550" endtime="20220706 04:05:28.550"/>
</return>
<msg timestamp="20220706 04:05:28.551" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 04:05:28.379" endtime="20220706 04:05:28.551"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 04:05:28.551" endtime="20220706 04:05:28.551"/>
</return>
<msg timestamp="20220706 04:05:28.551" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 04:05:28.378" endtime="20220706 04:05:28.551"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>list</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220706 04:05:28.552" endtime="20220706 04:05:28.554"/>
</kw>
<status status="PASS" starttime="20220706 04:05:28.551" endtime="20220706 04:05:28.554"/>
</kw>
<kw name="Update A List" library="List">
<arg>${response.json()}[id]</arg>
<arg>name</arg>
<arg>NewName</arg>
<doc>Updates the board with the given ID
optional_args: name, idListSource, pos, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>list</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220706 04:05:28.556" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220706 04:05:28.555" endtime="20220706 04:05:28.556"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220706 04:05:28.556" endtime="20220706 04:05:28.556"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220706 04:05:28.557" level="INFO">${url} = lists/62c50a08d1ee396398159d8a</msg>
<status status="PASS" starttime="20220706 04:05:28.556" endtime="20220706 04:05:28.557"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220706 04:05:28.686" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 04:05:28.557" endtime="20220706 04:05:28.686"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 04:05:28.686" endtime="20220706 04:05:28.686"/>
</return>
<msg timestamp="20220706 04:05:28.686" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 04:05:28.555" endtime="20220706 04:05:28.686"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 04:05:28.686" endtime="20220706 04:05:28.687"/>
</return>
<status status="PASS" starttime="20220706 04:05:28.554" endtime="20220706 04:05:28.687"/>
</kw>
<kw name="Get A List" library="List">
<var>${new_response}</var>
<arg>${response.json()}[id]</arg>
<doc>Gets the List with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>list</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220706 04:05:28.689" level="INFO">${url} = lists/62c50a08d1ee396398159d8a</msg>
<status status="PASS" starttime="20220706 04:05:28.689" endtime="20220706 04:05:28.689"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220706 04:05:28.799" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 04:05:28.689" endtime="20220706 04:05:28.799"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 04:05:28.799" endtime="20220706 04:05:28.799"/>
</return>
<msg timestamp="20220706 04:05:28.799" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 04:05:28.688" endtime="20220706 04:05:28.799"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 04:05:28.799" endtime="20220706 04:05:28.800"/>
</return>
<msg timestamp="20220706 04:05:28.800" level="INFO">${new_response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 04:05:28.687" endtime="20220706 04:05:28.800"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${new_response}</arg>
<arg>list</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220706 04:05:28.800" endtime="20220706 04:05:28.802"/>
</kw>
<status status="PASS" starttime="20220706 04:05:28.800" endtime="20220706 04:05:28.802"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${new_response.json()}[name]</arg>
<arg>NewName</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220706 04:05:28.803" endtime="20220706 04:05:28.803"/>
</kw>
<doc>Verify that a lists name can be updated through API</doc>
<tag>api</tag>
<tag>list.update</tag>
<tag>regression</tag>
<status status="PASS" starttime="20220706 04:05:28.377" endtime="20220706 04:05:28.804"/>
</test>
<test id="s1-s1-s5-t3" name="ARCHIVE A list" line="29">
<kw name="Create A List" library="List">
<var>${response}</var>
<arg>NewList</arg>
<doc>Creates a new List
board id
name the list will have
optional_args: idListSource, pos, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>list</arg>
<arg>name</arg>
<arg>${name}</arg>
<arg>idBoard</arg>
<arg>${idBoard}</arg>
<arg>@{optional_args}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220706 04:05:28.806" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220706 04:05:28.806" endtime="20220706 04:05:28.806"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220706 04:05:28.806" endtime="20220706 04:05:28.808"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220706 04:05:28.809" level="INFO">${url} = lists/</msg>
<status status="PASS" starttime="20220706 04:05:28.808" endtime="20220706 04:05:28.809"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220706 04:05:28.957" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 04:05:28.809" endtime="20220706 04:05:28.957"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 04:05:28.957" endtime="20220706 04:05:28.957"/>
</return>
<msg timestamp="20220706 04:05:28.957" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 04:05:28.805" endtime="20220706 04:05:28.957"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 04:05:28.957" endtime="20220706 04:05:28.957"/>
</return>
<msg timestamp="20220706 04:05:28.958" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 04:05:28.805" endtime="20220706 04:05:28.958"/>
</kw>
<kw name="Archive A List" library="List">
<arg>${response.json()}[id]</arg>
<doc>Deletes the list with the given ID</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>archive_list</arg>
<arg>${id}</arg>
<arg>value</arg>
<arg>true</arg>
<arg>status_code=${status_code}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220706 04:05:28.960" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220706 04:05:28.960" endtime="20220706 04:05:28.960"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220706 04:05:28.960" endtime="20220706 04:05:28.961"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220706 04:05:28.961" level="INFO">${url} = lists/62c50a0804ec650e07651614/closed</msg>
<status status="PASS" starttime="20220706 04:05:28.961" endtime="20220706 04:05:28.961"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220706 04:05:29.123" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 04:05:28.961" endtime="20220706 04:05:29.123"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 04:05:29.123" endtime="20220706 04:05:29.123"/>
</return>
<msg timestamp="20220706 04:05:29.123" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 04:05:28.959" endtime="20220706 04:05:29.123"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 04:05:29.123" endtime="20220706 04:05:29.123"/>
</return>
<status status="PASS" starttime="20220706 04:05:28.958" endtime="20220706 04:05:29.124"/>
</kw>
<kw name="Get A List" library="List">
<var>${new_response}</var>
<arg>${response.json()}[id]</arg>
<doc>Gets the List with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>list</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220706 04:05:29.126" level="INFO">${url} = lists/62c50a0804ec650e07651614</msg>
<status status="PASS" starttime="20220706 04:05:29.126" endtime="20220706 04:05:29.126"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220706 04:05:29.226" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 04:05:29.126" endtime="20220706 04:05:29.226"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 04:05:29.226" endtime="20220706 04:05:29.226"/>
</return>
<msg timestamp="20220706 04:05:29.226" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 04:05:29.125" endtime="20220706 04:05:29.226"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 04:05:29.226" endtime="20220706 04:05:29.226"/>
</return>
<msg timestamp="20220706 04:05:29.226" level="INFO">${new_response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 04:05:29.124" endtime="20220706 04:05:29.226"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${new_response.json()}[closed]</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220706 04:05:29.227" endtime="20220706 04:05:29.228"/>
</kw>
<doc>Verify that a list can be archived through API</doc>
<tag>api</tag>
<tag>list.archive</tag>
<tag>regression</tag>
<status status="PASS" starttime="20220706 04:05:28.804" endtime="20220706 04:05:29.228"/>
</test>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Teardown Board</arg>
<arg>Delete All Sessions</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Teardown Board">
<doc>Delete the board created for this suite.</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220706 04:05:29.232" level="INFO">${url} = boards/62c50a081b34df6130f3c47a</msg>
<status status="PASS" starttime="20220706 04:05:29.231" endtime="20220706 04:05:29.232"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220706 04:05:29.597" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 04:05:29.232" endtime="20220706 04:05:29.597"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 04:05:29.597" endtime="20220706 04:05:29.598"/>
</return>
<msg timestamp="20220706 04:05:29.598" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 04:05:29.231" endtime="20220706 04:05:29.598"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 04:05:29.598" endtime="20220706 04:05:29.598"/>
</return>
<status status="PASS" starttime="20220706 04:05:29.230" endtime="20220706 04:05:29.598"/>
</kw>
<status status="PASS" starttime="20220706 04:05:29.230" endtime="20220706 04:05:29.598"/>
</kw>
<status status="PASS" starttime="20220706 04:05:29.229" endtime="20220706 04:05:29.598"/>
</kw>
<kw name="Delete All Sessions" library="request_own_library">
<status status="PASS" starttime="20220706 04:05:29.599" endtime="20220706 04:05:29.600"/>
</kw>
<status status="PASS" starttime="20220706 04:05:29.229" endtime="20220706 04:05:29.600"/>
</kw>
<doc>Example Test with Trello API lists</doc>
<status status="PASS" starttime="20220706 04:05:27.960" endtime="20220706 04:05:29.600"/>
</suite>
<status status="PASS" starttime="20220706 04:05:15.730" endtime="20220706 04:05:29.602"/>
</suite>
<status status="PASS" starttime="20220706 04:05:15.705" endtime="20220706 04:05:29.605"/>
</suite>
<statistics>
<total>
<stat pass="18" fail="0" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="18" fail="0" skip="0">api</stat>
<stat pass="1" fail="0" skip="0">board.create</stat>
<stat pass="1" fail="0" skip="0">board.delete</stat>
<stat pass="1" fail="0" skip="0">board.get</stat>
<stat pass="2" fail="0" skip="0">board.update</stat>
<stat pass="1" fail="0" skip="0">card.close</stat>
<stat pass="1" fail="0" skip="0">card.create</stat>
<stat pass="1" fail="0" skip="0">card.delete</stat>
<stat pass="1" fail="0" skip="0">card.update</stat>
<stat pass="1" fail="0" skip="0">checklist.create</stat>
<stat pass="1" fail="0" skip="0">checklist.delete</stat>
<stat pass="1" fail="0" skip="0">checklist.update</stat>
<stat pass="1" fail="0" skip="0">label.create</stat>
<stat pass="1" fail="0" skip="0">label.delete</stat>
<stat pass="1" fail="0" skip="0">label.get</stat>
<stat pass="1" fail="0" skip="0">label.update</stat>
<stat pass="1" fail="0" skip="0">list.archive</stat>
<stat pass="1" fail="0" skip="0">list.create</stat>
<stat pass="1" fail="0" skip="0">list.update</stat>
<stat pass="5" fail="0" skip="0">regression</stat>
<stat pass="13" fail="0" skip="0">smoke</stat>
</tag>
<suite>
<stat pass="18" fail="0" skip="0" id="s1" name="Trello">Trello</stat>
<stat pass="18" fail="0" skip="0" id="s1-s1" name="Api">Trello.Api</stat>
<stat pass="5" fail="0" skip="0" id="s1-s1-s1" name="Trello Api Boards Tests">Trello.Api.Trello Api Boards Tests</stat>
<stat pass="4" fail="0" skip="0" id="s1-s1-s2" name="Trello Api Cards Tests">Trello.Api.Trello Api Cards Tests</stat>
<stat pass="3" fail="0" skip="0" id="s1-s1-s3" name="Trello Api Checklists Tests">Trello.Api.Trello Api Checklists Tests</stat>
<stat pass="3" fail="0" skip="0" id="s1-s1-s4" name="Trello Api Labels Tests">Trello.Api.Trello Api Labels Tests</stat>
<stat pass="3" fail="0" skip="0" id="s1-s1-s5" name="Trello Api Lists Tests">Trello.Api.Trello Api Lists Tests</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
