<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 5.0.1 (Python 3.10.5 on linux)" generated="20220705 04:42:19.521" rpa="false" schemaversion="3">
<suite id="s1" name="Trello" source="/trello">
<suite id="s1-s1" name="Api" source="/trello/api">
<suite id="s1-s1-s1" name="Trello Api Boards Tests" source="/trello/api/trello_api_boards_tests.robot">
<kw name="Create Trello Session" library="TrelloAPI" type="SETUP">
<doc>Creates a Trello Session</doc>
<kw name="Create Session" library="request_own_library">
<arg>${API_BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<status status="PASS" starttime="20220705 04:42:19.644" endtime="20220705 04:42:19.644"/>
</kw>
<status status="PASS" starttime="20220705 04:42:19.643" endtime="20220705 04:42:19.644"/>
</kw>
<test id="s1-s1-s1-t1" name="CREATE a board" line="9">
<kw name="Create A Board" library="Board">
<var>${response}</var>
<arg>NewBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 04:42:19.646" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 04:42:19.646" endtime="20220705 04:42:19.646"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 04:42:19.646" endtime="20220705 04:42:19.646"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 04:42:19.647" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220705 04:42:19.647" endtime="20220705 04:42:19.647"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 04:42:19.959" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 04:42:19.647" endtime="20220705 04:42:19.959"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 04:42:19.959" endtime="20220705 04:42:19.959"/>
</return>
<msg timestamp="20220705 04:42:19.960" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 04:42:19.645" endtime="20220705 04:42:19.960"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 04:42:19.960" endtime="20220705 04:42:19.960"/>
</return>
<msg timestamp="20220705 04:42:19.960" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 04:42:19.645" endtime="20220705 04:42:19.960"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>board</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 04:42:19.960" endtime="20220705 04:42:19.965"/>
</kw>
<status status="PASS" starttime="20220705 04:42:19.960" endtime="20220705 04:42:19.965"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${response.json()}[id]</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${response.json()}[id]</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 04:42:19.967" level="INFO">${url} = boards/62c3c12baa9f7928a111aefe</msg>
<status status="PASS" starttime="20220705 04:42:19.967" endtime="20220705 04:42:19.967"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 04:42:20.327" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 04:42:19.967" endtime="20220705 04:42:20.327"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 04:42:20.327" endtime="20220705 04:42:20.327"/>
</return>
<msg timestamp="20220705 04:42:20.327" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 04:42:19.966" endtime="20220705 04:42:20.327"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 04:42:20.327" endtime="20220705 04:42:20.327"/>
</return>
<status status="PASS" starttime="20220705 04:42:19.965" endtime="20220705 04:42:20.328"/>
</kw>
<status status="PASS" starttime="20220705 04:42:19.965" endtime="20220705 04:42:20.328"/>
</kw>
<doc>Verify that a board can be create through API</doc>
<tag>api</tag>
<tag>board.create</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220705 04:42:19.645" endtime="20220705 04:42:20.328"/>
</test>
<test id="s1-s1-s1-t2" name="UPDATE a Board's name" line="16">
<kw name="Create A Board" library="Board">
<var>${response}</var>
<arg>NewBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 04:42:20.330" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 04:42:20.329" endtime="20220705 04:42:20.330"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 04:42:20.330" endtime="20220705 04:42:20.330"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 04:42:20.331" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220705 04:42:20.330" endtime="20220705 04:42:20.331"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 04:42:20.534" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 04:42:20.331" endtime="20220705 04:42:20.534"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 04:42:20.534" endtime="20220705 04:42:20.534"/>
</return>
<msg timestamp="20220705 04:42:20.534" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 04:42:20.329" endtime="20220705 04:42:20.534"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 04:42:20.534" endtime="20220705 04:42:20.534"/>
</return>
<msg timestamp="20220705 04:42:20.535" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 04:42:20.329" endtime="20220705 04:42:20.535"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>board</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 04:42:20.535" endtime="20220705 04:42:20.539"/>
</kw>
<status status="PASS" starttime="20220705 04:42:20.535" endtime="20220705 04:42:20.539"/>
</kw>
<kw name="Update A Board" library="Board">
<arg>${response.json()}[id]</arg>
<arg>name</arg>
<arg>NewName</arg>
<doc>Updates the board with the given ID
optional_args: name, desc, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 04:42:20.540" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 04:42:20.540" endtime="20220705 04:42:20.540"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 04:42:20.541" endtime="20220705 04:42:20.541"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 04:42:20.541" level="INFO">${url} = boards/62c3c12c6873ce3817e211ff</msg>
<status status="PASS" starttime="20220705 04:42:20.541" endtime="20220705 04:42:20.541"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 04:42:20.664" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 04:42:20.541" endtime="20220705 04:42:20.665"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 04:42:20.665" endtime="20220705 04:42:20.665"/>
</return>
<msg timestamp="20220705 04:42:20.665" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 04:42:20.540" endtime="20220705 04:42:20.665"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 04:42:20.665" endtime="20220705 04:42:20.665"/>
</return>
<status status="PASS" starttime="20220705 04:42:20.539" endtime="20220705 04:42:20.665"/>
</kw>
<kw name="Get A Board" library="Board">
<var>${new_response}</var>
<arg>${response.json()}[id]</arg>
<doc>Gets the Board with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 04:42:20.667" level="INFO">${url} = boards/62c3c12c6873ce3817e211ff</msg>
<status status="PASS" starttime="20220705 04:42:20.667" endtime="20220705 04:42:20.667"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 04:42:20.746" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 04:42:20.667" endtime="20220705 04:42:20.746"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 04:42:20.746" endtime="20220705 04:42:20.746"/>
</return>
<msg timestamp="20220705 04:42:20.746" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 04:42:20.666" endtime="20220705 04:42:20.746"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 04:42:20.746" endtime="20220705 04:42:20.746"/>
</return>
<msg timestamp="20220705 04:42:20.747" level="INFO">${new_response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 04:42:20.665" endtime="20220705 04:42:20.747"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${new_response}</arg>
<arg>board</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 04:42:20.747" endtime="20220705 04:42:20.751"/>
</kw>
<status status="PASS" starttime="20220705 04:42:20.747" endtime="20220705 04:42:20.751"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${new_response.json()}[name]</arg>
<arg>NewName</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220705 04:42:20.751" endtime="20220705 04:42:20.752"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${response.json()}[id]</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${response.json()}[id]</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 04:42:20.754" level="INFO">${url} = boards/62c3c12c6873ce3817e211ff</msg>
<status status="PASS" starttime="20220705 04:42:20.753" endtime="20220705 04:42:20.754"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 04:42:21.137" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 04:42:20.754" endtime="20220705 04:42:21.137"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 04:42:21.137" endtime="20220705 04:42:21.137"/>
</return>
<msg timestamp="20220705 04:42:21.137" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 04:42:20.753" endtime="20220705 04:42:21.137"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 04:42:21.137" endtime="20220705 04:42:21.138"/>
</return>
<status status="PASS" starttime="20220705 04:42:20.752" endtime="20220705 04:42:21.138"/>
</kw>
<status status="PASS" starttime="20220705 04:42:20.752" endtime="20220705 04:42:21.138"/>
</kw>
<doc>Verify that a board's name can be updated through API</doc>
<tag>api</tag>
<tag>board.update</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220705 04:42:20.328" endtime="20220705 04:42:21.138"/>
</test>
<test id="s1-s1-s1-t3" name="DELETE A Board" line="27">
<kw name="Create A Board" library="Board">
<var>${response}</var>
<arg>NewBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 04:42:21.140" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 04:42:21.140" endtime="20220705 04:42:21.140"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 04:42:21.140" endtime="20220705 04:42:21.140"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 04:42:21.141" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220705 04:42:21.140" endtime="20220705 04:42:21.141"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 04:42:21.324" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 04:42:21.141" endtime="20220705 04:42:21.324"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 04:42:21.324" endtime="20220705 04:42:21.324"/>
</return>
<msg timestamp="20220705 04:42:21.324" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 04:42:21.139" endtime="20220705 04:42:21.324"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 04:42:21.324" endtime="20220705 04:42:21.324"/>
</return>
<msg timestamp="20220705 04:42:21.324" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 04:42:21.139" endtime="20220705 04:42:21.324"/>
</kw>
<kw name="Delete A Board" library="Board">
<arg>${response.json()}[id]</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 04:42:21.326" level="INFO">${url} = boards/62c3c12d0121182018234fa8</msg>
<status status="PASS" starttime="20220705 04:42:21.326" endtime="20220705 04:42:21.326"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 04:42:21.670" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 04:42:21.326" endtime="20220705 04:42:21.670"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 04:42:21.670" endtime="20220705 04:42:21.670"/>
</return>
<msg timestamp="20220705 04:42:21.670" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 04:42:21.325" endtime="20220705 04:42:21.670"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 04:42:21.670" endtime="20220705 04:42:21.671"/>
</return>
<status status="PASS" starttime="20220705 04:42:21.324" endtime="20220705 04:42:21.671"/>
</kw>
<kw name="Get A Board" library="Board">
<arg>${response.json()}[id]</arg>
<arg>status_code=404</arg>
<doc>Gets the Board with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 04:42:21.672" level="INFO">${url} = boards/62c3c12d0121182018234fa8</msg>
<status status="PASS" starttime="20220705 04:42:21.672" endtime="20220705 04:42:21.673"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 04:42:21.743" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220705 04:42:21.673" endtime="20220705 04:42:21.743"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 04:42:21.743" endtime="20220705 04:42:21.743"/>
</return>
<msg timestamp="20220705 04:42:21.743" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220705 04:42:21.672" endtime="20220705 04:42:21.743"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 04:42:21.743" endtime="20220705 04:42:21.743"/>
</return>
<status status="PASS" starttime="20220705 04:42:21.671" endtime="20220705 04:42:21.743"/>
</kw>
<doc>Verify that a board can be deleted through API</doc>
<tag>api</tag>
<tag>board.delete</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220705 04:42:21.139" endtime="20220705 04:42:21.744"/>
</test>
<test id="s1-s1-s1-t4" name="GET Information of A Board" line="34">
<kw name="Create A Board" library="Board">
<var>${response}</var>
<arg>BoardTest</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 04:42:21.746" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 04:42:21.746" endtime="20220705 04:42:21.746"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 04:42:21.746" endtime="20220705 04:42:21.746"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 04:42:21.747" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220705 04:42:21.746" endtime="20220705 04:42:21.747"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 04:42:21.947" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 04:42:21.747" endtime="20220705 04:42:21.947"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 04:42:21.947" endtime="20220705 04:42:21.947"/>
</return>
<msg timestamp="20220705 04:42:21.947" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 04:42:21.745" endtime="20220705 04:42:21.947"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 04:42:21.948" endtime="20220705 04:42:21.948"/>
</return>
<msg timestamp="20220705 04:42:21.948" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 04:42:21.745" endtime="20220705 04:42:21.948"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>board</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 04:42:21.948" endtime="20220705 04:42:21.952"/>
</kw>
<status status="PASS" starttime="20220705 04:42:21.948" endtime="20220705 04:42:21.952"/>
</kw>
<kw name="Get A Board" library="Board">
<var>${response2}</var>
<arg>${response.json()}[id]</arg>
<doc>Gets the Board with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 04:42:21.954" level="INFO">${url} = boards/62c3c12d837968586e08e700</msg>
<status status="PASS" starttime="20220705 04:42:21.954" endtime="20220705 04:42:21.954"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 04:42:22.032" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 04:42:21.954" endtime="20220705 04:42:22.032"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 04:42:22.032" endtime="20220705 04:42:22.032"/>
</return>
<msg timestamp="20220705 04:42:22.032" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 04:42:21.953" endtime="20220705 04:42:22.032"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 04:42:22.032" endtime="20220705 04:42:22.032"/>
</return>
<msg timestamp="20220705 04:42:22.032" level="INFO">${response2} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 04:42:21.952" endtime="20220705 04:42:22.032"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response2}</arg>
<arg>board</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 04:42:22.033" endtime="20220705 04:42:22.036"/>
</kw>
<status status="PASS" starttime="20220705 04:42:22.033" endtime="20220705 04:42:22.037"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${response2.json()}[name]</arg>
<arg>BoardTest</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220705 04:42:22.037" endtime="20220705 04:42:22.037"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${response.json()}[id]</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${response.json()}[id]</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 04:42:22.040" level="INFO">${url} = boards/62c3c12d837968586e08e700</msg>
<status status="PASS" starttime="20220705 04:42:22.039" endtime="20220705 04:42:22.040"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 04:42:22.377" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 04:42:22.040" endtime="20220705 04:42:22.377"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 04:42:22.377" endtime="20220705 04:42:22.377"/>
</return>
<msg timestamp="20220705 04:42:22.377" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 04:42:22.039" endtime="20220705 04:42:22.377"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 04:42:22.377" endtime="20220705 04:42:22.377"/>
</return>
<status status="PASS" starttime="20220705 04:42:22.038" endtime="20220705 04:42:22.377"/>
</kw>
<status status="PASS" starttime="20220705 04:42:22.038" endtime="20220705 04:42:22.377"/>
</kw>
<doc>Verify that a board's information can be accesed through API</doc>
<tag>api</tag>
<tag>board.get</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220705 04:42:21.744" endtime="20220705 04:42:22.377"/>
</test>
<test id="s1-s1-s1-t5" name="UPDATE a Board's description" line="45">
<kw name="Create A Board" library="Board">
<var>${response}</var>
<arg>NewBoardForTest</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 04:42:22.379" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 04:42:22.379" endtime="20220705 04:42:22.379"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 04:42:22.380" endtime="20220705 04:42:22.380"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 04:42:22.380" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220705 04:42:22.380" endtime="20220705 04:42:22.381"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 04:42:22.593" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 04:42:22.381" endtime="20220705 04:42:22.593"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 04:42:22.593" endtime="20220705 04:42:22.593"/>
</return>
<msg timestamp="20220705 04:42:22.593" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 04:42:22.379" endtime="20220705 04:42:22.593"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 04:42:22.593" endtime="20220705 04:42:22.593"/>
</return>
<msg timestamp="20220705 04:42:22.593" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 04:42:22.379" endtime="20220705 04:42:22.593"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>board</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 04:42:22.594" endtime="20220705 04:42:22.598"/>
</kw>
<status status="PASS" starttime="20220705 04:42:22.594" endtime="20220705 04:42:22.598"/>
</kw>
<kw name="Update A Board" library="Board">
<arg>${response.json()}[id]</arg>
<arg>desc</arg>
<arg>sampleDescription</arg>
<doc>Updates the board with the given ID
optional_args: name, desc, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 04:42:22.600" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 04:42:22.599" endtime="20220705 04:42:22.600"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 04:42:22.600" endtime="20220705 04:42:22.600"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 04:42:22.600" level="INFO">${url} = boards/62c3c12ee8c0162191fd1996</msg>
<status status="PASS" starttime="20220705 04:42:22.600" endtime="20220705 04:42:22.600"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 04:42:22.715" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 04:42:22.600" endtime="20220705 04:42:22.715"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 04:42:22.715" endtime="20220705 04:42:22.715"/>
</return>
<msg timestamp="20220705 04:42:22.716" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 04:42:22.599" endtime="20220705 04:42:22.716"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 04:42:22.716" endtime="20220705 04:42:22.716"/>
</return>
<status status="PASS" starttime="20220705 04:42:22.598" endtime="20220705 04:42:22.716"/>
</kw>
<kw name="Get A Board" library="Board">
<var>${new_response}</var>
<arg>${response.json()}[id]</arg>
<doc>Gets the Board with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 04:42:22.718" level="INFO">${url} = boards/62c3c12ee8c0162191fd1996</msg>
<status status="PASS" starttime="20220705 04:42:22.717" endtime="20220705 04:42:22.718"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 04:42:22.796" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 04:42:22.718" endtime="20220705 04:42:22.796"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 04:42:22.796" endtime="20220705 04:42:22.796"/>
</return>
<msg timestamp="20220705 04:42:22.796" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 04:42:22.717" endtime="20220705 04:42:22.796"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 04:42:22.796" endtime="20220705 04:42:22.796"/>
</return>
<msg timestamp="20220705 04:42:22.796" level="INFO">${new_response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 04:42:22.716" endtime="20220705 04:42:22.796"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${new_response.json()}[desc]</arg>
<arg>sampleDescription</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220705 04:42:22.796" endtime="20220705 04:42:22.797"/>
</kw>
<kw name="Update A Board" library="Board">
<arg>${response.json()}[id]</arg>
<arg>desc</arg>
<arg>updatedDescription</arg>
<doc>Updates the board with the given ID
optional_args: name, desc, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 04:42:22.799" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 04:42:22.799" endtime="20220705 04:42:22.799"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 04:42:22.799" endtime="20220705 04:42:22.799"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 04:42:22.800" level="INFO">${url} = boards/62c3c12ee8c0162191fd1996</msg>
<status status="PASS" starttime="20220705 04:42:22.799" endtime="20220705 04:42:22.800"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 04:42:22.919" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 04:42:22.800" endtime="20220705 04:42:22.919"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 04:42:22.919" endtime="20220705 04:42:22.919"/>
</return>
<msg timestamp="20220705 04:42:22.919" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 04:42:22.798" endtime="20220705 04:42:22.919"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 04:42:22.919" endtime="20220705 04:42:22.919"/>
</return>
<status status="PASS" starttime="20220705 04:42:22.797" endtime="20220705 04:42:22.919"/>
</kw>
<kw name="Get A Board" library="Board">
<var>${new_response2}</var>
<arg>${response.json()}[id]</arg>
<doc>Gets the Board with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 04:42:22.921" level="INFO">${url} = boards/62c3c12ee8c0162191fd1996</msg>
<status status="PASS" starttime="20220705 04:42:22.921" endtime="20220705 04:42:22.921"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 04:42:23.009" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 04:42:22.921" endtime="20220705 04:42:23.009"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 04:42:23.009" endtime="20220705 04:42:23.009"/>
</return>
<msg timestamp="20220705 04:42:23.009" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 04:42:22.920" endtime="20220705 04:42:23.009"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 04:42:23.009" endtime="20220705 04:42:23.009"/>
</return>
<msg timestamp="20220705 04:42:23.009" level="INFO">${new_response2} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 04:42:22.919" endtime="20220705 04:42:23.009"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${new_response2.json()}[desc]</arg>
<arg>updatedDescription</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220705 04:42:23.009" endtime="20220705 04:42:23.010"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${response.json()}[id]</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${response.json()}[id]</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 04:42:23.012" level="INFO">${url} = boards/62c3c12ee8c0162191fd1996</msg>
<status status="PASS" starttime="20220705 04:42:23.012" endtime="20220705 04:42:23.012"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 04:42:23.339" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 04:42:23.012" endtime="20220705 04:42:23.339"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 04:42:23.339" endtime="20220705 04:42:23.339"/>
</return>
<msg timestamp="20220705 04:42:23.339" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 04:42:23.011" endtime="20220705 04:42:23.339"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 04:42:23.339" endtime="20220705 04:42:23.340"/>
</return>
<status status="PASS" starttime="20220705 04:42:23.011" endtime="20220705 04:42:23.340"/>
</kw>
<status status="PASS" starttime="20220705 04:42:23.010" endtime="20220705 04:42:23.340"/>
</kw>
<doc>Verify that a board's description can be updated through API</doc>
<tag>api</tag>
<tag>board.update</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220705 04:42:22.378" endtime="20220705 04:42:23.340"/>
</test>
<kw name="Delete All Sessions" library="request_own_library" type="TEARDOWN">
<status status="PASS" starttime="20220705 04:42:23.341" endtime="20220705 04:42:23.342"/>
</kw>
<doc>Example Test with Trello API Boards</doc>
<status status="PASS" starttime="20220705 04:42:19.540" endtime="20220705 04:42:23.342"/>
</suite>
<suite id="s1-s1-s2" name="Trello Api Cards Tests" source="/trello/api/trello_api_cards_tests.robot">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Create Trello Session</arg>
<arg>Setup Board And List</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Create Trello Session" library="TrelloAPI">
<doc>Creates a Trello Session</doc>
<kw name="Create Session" library="request_own_library">
<arg>${API_BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<status status="PASS" starttime="20220705 04:42:23.353" endtime="20220705 04:42:23.353"/>
</kw>
<status status="PASS" starttime="20220705 04:42:23.352" endtime="20220705 04:42:23.353"/>
</kw>
<kw name="Setup Board And List">
<doc>Create a board and save its ID and its first list's ID</doc>
<kw name="Create A Board" library="Board">
<var>${BOARD}</var>
<arg>TestBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 04:42:23.354" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 04:42:23.354" endtime="20220705 04:42:23.354"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 04:42:23.354" endtime="20220705 04:42:23.354"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 04:42:23.355" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220705 04:42:23.354" endtime="20220705 04:42:23.355"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 04:42:23.626" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 04:42:23.355" endtime="20220705 04:42:23.626"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 04:42:23.626" endtime="20220705 04:42:23.626"/>
</return>
<msg timestamp="20220705 04:42:23.626" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 04:42:23.353" endtime="20220705 04:42:23.626"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 04:42:23.626" endtime="20220705 04:42:23.626"/>
</return>
<msg timestamp="20220705 04:42:23.627" level="INFO">${BOARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 04:42:23.353" endtime="20220705 04:42:23.627"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_BOARD_ID}</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220705 04:42:23.628" level="INFO">${TEST_SUITE_BOARD_ID} = 62c3c12f534fd06c80519887</msg>
<status status="PASS" starttime="20220705 04:42:23.627" endtime="20220705 04:42:23.628"/>
</kw>
<kw name="Get Lists On A Board" library="Board">
<var>${LISTS}</var>
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Get all the lists in a board</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>lists_on_board</arg>
<arg>${id}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 04:42:23.629" level="INFO">${url} = boards/62c3c12f534fd06c80519887/lists/</msg>
<status status="PASS" starttime="20220705 04:42:23.628" endtime="20220705 04:42:23.629"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 04:42:23.706" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 04:42:23.629" endtime="20220705 04:42:23.706"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 04:42:23.706" endtime="20220705 04:42:23.706"/>
</return>
<msg timestamp="20220705 04:42:23.707" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 04:42:23.628" endtime="20220705 04:42:23.707"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 04:42:23.707" endtime="20220705 04:42:23.707"/>
</return>
<msg timestamp="20220705 04:42:23.707" level="INFO">${LISTS} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 04:42:23.628" endtime="20220705 04:42:23.707"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_LIST_ID}</arg>
<arg>${LISTS.json()}[0][id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220705 04:42:23.708" level="INFO">${TEST_SUITE_LIST_ID} = 62c3c12f534fd06c8051988e</msg>
<status status="PASS" starttime="20220705 04:42:23.707" endtime="20220705 04:42:23.708"/>
</kw>
<status status="PASS" starttime="20220705 04:42:23.353" endtime="20220705 04:42:23.708"/>
</kw>
<status status="PASS" starttime="20220705 04:42:23.352" endtime="20220705 04:42:23.708"/>
</kw>
<test id="s1-s1-s2-t1" name="Verify A Card Can Be Created" line="13">
<kw name="Create A Card" library="Card">
<var>${response}</var>
<arg>name</arg>
<arg>RFCard2</arg>
<doc>Creates a new card in the given list.
required_args: listId
optional_args: name, desc, pos, idCardSource, idLabels, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>@{optional_args}</arg>
<arg>idList</arg>
<arg>${idList}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 04:42:23.710" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 04:42:23.710" endtime="20220705 04:42:23.710"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 04:42:23.710" endtime="20220705 04:42:23.710"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 04:42:23.711" level="INFO">${url} = cards/</msg>
<status status="PASS" starttime="20220705 04:42:23.710" endtime="20220705 04:42:23.711"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 04:42:23.911" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 04:42:23.711" endtime="20220705 04:42:23.911"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 04:42:23.911" endtime="20220705 04:42:23.911"/>
</return>
<msg timestamp="20220705 04:42:23.911" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 04:42:23.709" endtime="20220705 04:42:23.911"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 04:42:23.911" endtime="20220705 04:42:23.911"/>
</return>
<msg timestamp="20220705 04:42:23.912" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 04:42:23.709" endtime="20220705 04:42:23.912"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>card</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 04:42:23.912" endtime="20220705 04:42:23.917"/>
</kw>
<status status="PASS" starttime="20220705 04:42:23.912" endtime="20220705 04:42:23.917"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 04:42:23.917" endtime="20220705 04:42:23.917"/>
</return>
<msg timestamp="20220705 04:42:23.918" level="INFO">${CARD_ID} = 62c3c12f8cd45378a297c617</msg>
<status status="PASS" starttime="20220705 04:42:23.917" endtime="20220705 04:42:23.918"/>
</kw>
<kw name="Get A Card" library="Card">
<var>${response}</var>
<arg>${CARD_ID}</arg>
<doc>Gets the card with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 04:42:23.919" level="INFO">${url} = cards/62c3c12f8cd45378a297c617</msg>
<status status="PASS" starttime="20220705 04:42:23.919" endtime="20220705 04:42:23.919"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 04:42:24.009" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 04:42:23.919" endtime="20220705 04:42:24.010"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 04:42:24.010" endtime="20220705 04:42:24.010"/>
</return>
<msg timestamp="20220705 04:42:24.010" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 04:42:23.919" endtime="20220705 04:42:24.010"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 04:42:24.010" endtime="20220705 04:42:24.010"/>
</return>
<msg timestamp="20220705 04:42:24.010" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 04:42:23.918" endtime="20220705 04:42:24.010"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_NAME}</var>
<arg>${response}</arg>
<arg>name</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 04:42:24.011" endtime="20220705 04:42:24.011"/>
</return>
<msg timestamp="20220705 04:42:24.011" level="INFO">${CARD_NAME} = RFCard2</msg>
<status status="PASS" starttime="20220705 04:42:24.010" endtime="20220705 04:42:24.011"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${CARD_NAME}</arg>
<arg>RFCard2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220705 04:42:24.011" endtime="20220705 04:42:24.012"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Card</arg>
<arg>${CARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Card" library="Card">
<arg>${CARD_ID}</arg>
<doc>Deletes the card with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 04:42:24.013" level="INFO">${url} = cards/62c3c12f8cd45378a297c617</msg>
<status status="PASS" starttime="20220705 04:42:24.013" endtime="20220705 04:42:24.013"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 04:42:24.188" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 04:42:24.013" endtime="20220705 04:42:24.188"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 04:42:24.188" endtime="20220705 04:42:24.188"/>
</return>
<msg timestamp="20220705 04:42:24.188" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 04:42:24.012" endtime="20220705 04:42:24.188"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 04:42:24.188" endtime="20220705 04:42:24.188"/>
</return>
<status status="PASS" starttime="20220705 04:42:24.012" endtime="20220705 04:42:24.189"/>
</kw>
<status status="PASS" starttime="20220705 04:42:24.012" endtime="20220705 04:42:24.189"/>
</kw>
<doc>Verify that a card can be created through API</doc>
<tag>api</tag>
<tag>card.create</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220705 04:42:23.708" endtime="20220705 04:42:24.189"/>
</test>
<test id="s1-s1-s2-t2" name="Verify A Card Can Be Closed" line="24">
<kw name="Create A Card" library="Card">
<var>${response}</var>
<doc>Creates a new card in the given list.
required_args: listId
optional_args: name, desc, pos, idCardSource, idLabels, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>@{optional_args}</arg>
<arg>idList</arg>
<arg>${idList}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 04:42:24.191" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 04:42:24.191" endtime="20220705 04:42:24.191"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 04:42:24.191" endtime="20220705 04:42:24.191"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 04:42:24.192" level="INFO">${url} = cards/</msg>
<status status="PASS" starttime="20220705 04:42:24.191" endtime="20220705 04:42:24.192"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 04:42:24.357" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 04:42:24.192" endtime="20220705 04:42:24.357"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 04:42:24.357" endtime="20220705 04:42:24.357"/>
</return>
<msg timestamp="20220705 04:42:24.357" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 04:42:24.190" endtime="20220705 04:42:24.357"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 04:42:24.357" endtime="20220705 04:42:24.357"/>
</return>
<msg timestamp="20220705 04:42:24.358" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 04:42:24.190" endtime="20220705 04:42:24.358"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 04:42:24.358" endtime="20220705 04:42:24.358"/>
</return>
<msg timestamp="20220705 04:42:24.359" level="INFO">${CARD_ID} = 62c3c13080a1715f3d6f4af0</msg>
<status status="PASS" starttime="20220705 04:42:24.358" endtime="20220705 04:42:24.359"/>
</kw>
<kw name="Archive A Card" library="Card">
<arg>${CARD_ID}</arg>
<doc>Modifies the card status to closed.</doc>
<kw name="Update A Card" library="Card">
<var>${response}</var>
<arg>${id}</arg>
<arg>closed</arg>
<arg>true</arg>
<arg>status_code=${status_code}</arg>
<doc>Updates the card with the given ID
optional_args: name, desc, closed, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<arg>status_code=${status_code}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 04:42:24.361" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 04:42:24.360" endtime="20220705 04:42:24.361"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 04:42:24.361" endtime="20220705 04:42:24.361"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 04:42:24.361" level="INFO">${url} = cards/62c3c13080a1715f3d6f4af0</msg>
<status status="PASS" starttime="20220705 04:42:24.361" endtime="20220705 04:42:24.361"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 04:42:24.509" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 04:42:24.361" endtime="20220705 04:42:24.510"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 04:42:24.510" endtime="20220705 04:42:24.510"/>
</return>
<msg timestamp="20220705 04:42:24.510" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 04:42:24.360" endtime="20220705 04:42:24.510"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 04:42:24.510" endtime="20220705 04:42:24.510"/>
</return>
<msg timestamp="20220705 04:42:24.510" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 04:42:24.359" endtime="20220705 04:42:24.510"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 04:42:24.510" endtime="20220705 04:42:24.510"/>
</return>
<status status="PASS" starttime="20220705 04:42:24.359" endtime="20220705 04:42:24.510"/>
</kw>
<kw name="Get A Card" library="Card">
<var>${response}</var>
<arg>${CARD_ID}</arg>
<doc>Gets the card with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 04:42:24.512" level="INFO">${url} = cards/62c3c13080a1715f3d6f4af0</msg>
<status status="PASS" starttime="20220705 04:42:24.511" endtime="20220705 04:42:24.512"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 04:42:24.597" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 04:42:24.512" endtime="20220705 04:42:24.597"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 04:42:24.597" endtime="20220705 04:42:24.597"/>
</return>
<msg timestamp="20220705 04:42:24.598" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 04:42:24.511" endtime="20220705 04:42:24.598"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 04:42:24.598" endtime="20220705 04:42:24.598"/>
</return>
<msg timestamp="20220705 04:42:24.598" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 04:42:24.511" endtime="20220705 04:42:24.598"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_CLOSED}</var>
<arg>${response}</arg>
<arg>closed</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 04:42:24.598" endtime="20220705 04:42:24.598"/>
</return>
<msg timestamp="20220705 04:42:24.599" level="INFO">${CARD_CLOSED} = True</msg>
<status status="PASS" starttime="20220705 04:42:24.598" endtime="20220705 04:42:24.599"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${CARD_CLOSED}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220705 04:42:24.599" endtime="20220705 04:42:24.600"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Card</arg>
<arg>${CARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Card" library="Card">
<arg>${CARD_ID}</arg>
<doc>Deletes the card with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 04:42:24.601" level="INFO">${url} = cards/62c3c13080a1715f3d6f4af0</msg>
<status status="PASS" starttime="20220705 04:42:24.601" endtime="20220705 04:42:24.601"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 04:42:24.758" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 04:42:24.601" endtime="20220705 04:42:24.758"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 04:42:24.758" endtime="20220705 04:42:24.758"/>
</return>
<msg timestamp="20220705 04:42:24.759" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 04:42:24.600" endtime="20220705 04:42:24.759"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 04:42:24.759" endtime="20220705 04:42:24.759"/>
</return>
<status status="PASS" starttime="20220705 04:42:24.600" endtime="20220705 04:42:24.759"/>
</kw>
<status status="PASS" starttime="20220705 04:42:24.600" endtime="20220705 04:42:24.759"/>
</kw>
<doc>Verify that a card can be closed through API</doc>
<tag>api</tag>
<tag>card.close</tag>
<tag>regression</tag>
<status status="PASS" starttime="20220705 04:42:24.189" endtime="20220705 04:42:24.759"/>
</test>
<test id="s1-s1-s2-t3" name="Verify A Card Can Be Deleted" line="35">
<kw name="Create A Card" library="Card">
<var>${response}</var>
<doc>Creates a new card in the given list.
required_args: listId
optional_args: name, desc, pos, idCardSource, idLabels, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>@{optional_args}</arg>
<arg>idList</arg>
<arg>${idList}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 04:42:24.761" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 04:42:24.761" endtime="20220705 04:42:24.761"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 04:42:24.761" endtime="20220705 04:42:24.762"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 04:42:24.762" level="INFO">${url} = cards/</msg>
<status status="PASS" starttime="20220705 04:42:24.762" endtime="20220705 04:42:24.762"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 04:42:24.958" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 04:42:24.763" endtime="20220705 04:42:24.958"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 04:42:24.958" endtime="20220705 04:42:24.958"/>
</return>
<msg timestamp="20220705 04:42:24.959" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 04:42:24.760" endtime="20220705 04:42:24.959"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 04:42:24.959" endtime="20220705 04:42:24.959"/>
</return>
<msg timestamp="20220705 04:42:24.959" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 04:42:24.760" endtime="20220705 04:42:24.959"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 04:42:24.959" endtime="20220705 04:42:24.959"/>
</return>
<msg timestamp="20220705 04:42:24.960" level="INFO">${CARD_ID} = 62c3c1301a87f9566e20ca28</msg>
<status status="PASS" starttime="20220705 04:42:24.959" endtime="20220705 04:42:24.960"/>
</kw>
<kw name="Delete A Card" library="Card">
<var>${response}</var>
<arg>${CARD_ID}</arg>
<doc>Deletes the card with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 04:42:24.961" level="INFO">${url} = cards/62c3c1301a87f9566e20ca28</msg>
<status status="PASS" starttime="20220705 04:42:24.961" endtime="20220705 04:42:24.961"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 04:42:25.145" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 04:42:24.961" endtime="20220705 04:42:25.145"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 04:42:25.145" endtime="20220705 04:42:25.145"/>
</return>
<msg timestamp="20220705 04:42:25.145" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 04:42:24.961" endtime="20220705 04:42:25.145"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 04:42:25.145" endtime="20220705 04:42:25.145"/>
</return>
<msg timestamp="20220705 04:42:25.145" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 04:42:24.960" endtime="20220705 04:42:25.145"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>delete</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 04:42:25.146" endtime="20220705 04:42:25.148"/>
</kw>
<status status="PASS" starttime="20220705 04:42:25.146" endtime="20220705 04:42:25.148"/>
</kw>
<kw name="Get A Card" library="Card">
<arg>${CARD_ID}</arg>
<arg>status_code=404</arg>
<doc>Gets the card with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 04:42:25.149" level="INFO">${url} = cards/62c3c1301a87f9566e20ca28</msg>
<status status="PASS" starttime="20220705 04:42:25.149" endtime="20220705 04:42:25.149"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 04:42:25.211" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220705 04:42:25.149" endtime="20220705 04:42:25.211"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 04:42:25.211" endtime="20220705 04:42:25.211"/>
</return>
<msg timestamp="20220705 04:42:25.211" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220705 04:42:25.148" endtime="20220705 04:42:25.211"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 04:42:25.212" endtime="20220705 04:42:25.212"/>
</return>
<status status="PASS" starttime="20220705 04:42:25.148" endtime="20220705 04:42:25.212"/>
</kw>
<doc>Verify that a card can be deleted through API</doc>
<tag>api</tag>
<tag>card.delete</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220705 04:42:24.759" endtime="20220705 04:42:25.212"/>
</test>
<test id="s1-s1-s2-t4" name="Verify A Card Can Be Updated" line="44">
<kw name="Create A Card" library="Card">
<var>${response}</var>
<arg>name</arg>
<arg>RFCard4</arg>
<doc>Creates a new card in the given list.
required_args: listId
optional_args: name, desc, pos, idCardSource, idLabels, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>@{optional_args}</arg>
<arg>idList</arg>
<arg>${idList}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 04:42:25.214" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 04:42:25.214" endtime="20220705 04:42:25.214"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 04:42:25.214" endtime="20220705 04:42:25.215"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 04:42:25.215" level="INFO">${url} = cards/</msg>
<status status="PASS" starttime="20220705 04:42:25.215" endtime="20220705 04:42:25.215"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 04:42:25.390" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 04:42:25.215" endtime="20220705 04:42:25.390"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 04:42:25.390" endtime="20220705 04:42:25.390"/>
</return>
<msg timestamp="20220705 04:42:25.390" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 04:42:25.213" endtime="20220705 04:42:25.390"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 04:42:25.390" endtime="20220705 04:42:25.390"/>
</return>
<msg timestamp="20220705 04:42:25.390" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 04:42:25.213" endtime="20220705 04:42:25.390"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 04:42:25.391" endtime="20220705 04:42:25.391"/>
</return>
<msg timestamp="20220705 04:42:25.392" level="INFO">${CARD_ID} = 62c3c131256b126d26cca89f</msg>
<status status="PASS" starttime="20220705 04:42:25.391" endtime="20220705 04:42:25.392"/>
</kw>
<kw name="Update A Card" library="Card">
<var>${response}</var>
<arg>${CARD_ID}</arg>
<arg>name</arg>
<arg>RFCard5</arg>
<arg>desc</arg>
<arg>Description</arg>
<doc>Updates the card with the given ID
optional_args: name, desc, closed, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<arg>status_code=${status_code}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 04:42:25.393" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 04:42:25.393" endtime="20220705 04:42:25.393"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 04:42:25.393" endtime="20220705 04:42:25.393"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 04:42:25.393" level="INFO">${url} = cards/62c3c131256b126d26cca89f</msg>
<status status="PASS" starttime="20220705 04:42:25.393" endtime="20220705 04:42:25.394"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 04:42:25.552" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 04:42:25.394" endtime="20220705 04:42:25.552"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 04:42:25.552" endtime="20220705 04:42:25.552"/>
</return>
<msg timestamp="20220705 04:42:25.552" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 04:42:25.392" endtime="20220705 04:42:25.552"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 04:42:25.552" endtime="20220705 04:42:25.552"/>
</return>
<msg timestamp="20220705 04:42:25.552" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 04:42:25.392" endtime="20220705 04:42:25.553"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>card</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 04:42:25.553" endtime="20220705 04:42:25.558"/>
</kw>
<status status="PASS" starttime="20220705 04:42:25.553" endtime="20220705 04:42:25.558"/>
</kw>
<kw name="Get A Card" library="Card">
<var>${response}</var>
<arg>${CARD_ID}</arg>
<doc>Gets the card with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 04:42:25.559" level="INFO">${url} = cards/62c3c131256b126d26cca89f</msg>
<status status="PASS" starttime="20220705 04:42:25.559" endtime="20220705 04:42:25.559"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 04:42:25.644" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 04:42:25.559" endtime="20220705 04:42:25.644"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 04:42:25.644" endtime="20220705 04:42:25.644"/>
</return>
<msg timestamp="20220705 04:42:25.644" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 04:42:25.559" endtime="20220705 04:42:25.644"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 04:42:25.644" endtime="20220705 04:42:25.644"/>
</return>
<msg timestamp="20220705 04:42:25.644" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 04:42:25.558" endtime="20220705 04:42:25.645"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_NAME}</var>
<arg>${response}</arg>
<arg>name</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 04:42:25.645" endtime="20220705 04:42:25.645"/>
</return>
<msg timestamp="20220705 04:42:25.646" level="INFO">${CARD_NAME} = RFCard5</msg>
<status status="PASS" starttime="20220705 04:42:25.645" endtime="20220705 04:42:25.646"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_DESC}</var>
<arg>${response}</arg>
<arg>desc</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 04:42:25.646" endtime="20220705 04:42:25.646"/>
</return>
<msg timestamp="20220705 04:42:25.647" level="INFO">${CARD_DESC} = Description</msg>
<status status="PASS" starttime="20220705 04:42:25.646" endtime="20220705 04:42:25.647"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${CARD_NAME}</arg>
<arg>RFCard5</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220705 04:42:25.647" endtime="20220705 04:42:25.647"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${CARD_DESC}</arg>
<arg>Description</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220705 04:42:25.647" endtime="20220705 04:42:25.647"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Card</arg>
<arg>${CARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Card" library="Card">
<arg>${CARD_ID}</arg>
<doc>Deletes the card with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 04:42:25.649" level="INFO">${url} = cards/62c3c131256b126d26cca89f</msg>
<status status="PASS" starttime="20220705 04:42:25.649" endtime="20220705 04:42:25.649"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 04:42:25.816" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 04:42:25.649" endtime="20220705 04:42:25.816"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 04:42:25.817" endtime="20220705 04:42:25.817"/>
</return>
<msg timestamp="20220705 04:42:25.817" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 04:42:25.648" endtime="20220705 04:42:25.817"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 04:42:25.817" endtime="20220705 04:42:25.817"/>
</return>
<status status="PASS" starttime="20220705 04:42:25.648" endtime="20220705 04:42:25.817"/>
</kw>
<status status="PASS" starttime="20220705 04:42:25.648" endtime="20220705 04:42:25.817"/>
</kw>
<doc>Verify that a card's name and Description can be updated through API</doc>
<tag>api</tag>
<tag>card.update</tag>
<tag>regression</tag>
<status status="PASS" starttime="20220705 04:42:25.212" endtime="20220705 04:42:25.817"/>
</test>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Teardown Board</arg>
<arg>Delete All Sessions</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Teardown Board">
<doc>Delete the board created for this suite</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 04:42:25.820" level="INFO">${url} = boards/62c3c12f534fd06c80519887</msg>
<status status="PASS" starttime="20220705 04:42:25.819" endtime="20220705 04:42:25.820"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 04:42:26.162" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 04:42:25.820" endtime="20220705 04:42:26.162"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 04:42:26.162" endtime="20220705 04:42:26.162"/>
</return>
<msg timestamp="20220705 04:42:26.162" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 04:42:25.819" endtime="20220705 04:42:26.162"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 04:42:26.162" endtime="20220705 04:42:26.163"/>
</return>
<status status="PASS" starttime="20220705 04:42:25.818" endtime="20220705 04:42:26.163"/>
</kw>
<status status="PASS" starttime="20220705 04:42:25.818" endtime="20220705 04:42:26.163"/>
</kw>
<status status="PASS" starttime="20220705 04:42:25.818" endtime="20220705 04:42:26.163"/>
</kw>
<kw name="Delete All Sessions" library="request_own_library">
<status status="PASS" starttime="20220705 04:42:26.163" endtime="20220705 04:42:26.164"/>
</kw>
<status status="PASS" starttime="20220705 04:42:25.818" endtime="20220705 04:42:26.164"/>
</kw>
<doc>Example Test with Trello API Cards</doc>
<status status="PASS" starttime="20220705 04:42:23.343" endtime="20220705 04:42:26.164"/>
</suite>
<suite id="s1-s1-s3" name="Trello Api Checklists Tests" source="/trello/api/trello_api_checklists_tests.robot">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Create Trello Session</arg>
<arg>Setup Board, List And Card</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Create Trello Session" library="TrelloAPI">
<doc>Creates a Trello Session</doc>
<kw name="Create Session" library="request_own_library">
<arg>${API_BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<status status="PASS" starttime="20220705 04:42:26.174" endtime="20220705 04:42:26.174"/>
</kw>
<status status="PASS" starttime="20220705 04:42:26.174" endtime="20220705 04:42:26.175"/>
</kw>
<kw name="Setup Board, List And Card">
<doc>Create a board and save its ID and its first list's ID</doc>
<kw name="Create A Board" library="Board">
<var>${BOARD}</var>
<arg>TestBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 04:42:26.176" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 04:42:26.175" endtime="20220705 04:42:26.176"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 04:42:26.176" endtime="20220705 04:42:26.176"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 04:42:26.177" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220705 04:42:26.176" endtime="20220705 04:42:26.177"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 04:42:26.468" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 04:42:26.177" endtime="20220705 04:42:26.468"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 04:42:26.468" endtime="20220705 04:42:26.468"/>
</return>
<msg timestamp="20220705 04:42:26.468" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 04:42:26.175" endtime="20220705 04:42:26.468"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 04:42:26.468" endtime="20220705 04:42:26.468"/>
</return>
<msg timestamp="20220705 04:42:26.469" level="INFO">${BOARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 04:42:26.175" endtime="20220705 04:42:26.469"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_BOARD_ID}</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220705 04:42:26.470" level="INFO">${TEST_SUITE_BOARD_ID} = 62c3c132b16623371e3b6754</msg>
<status status="PASS" starttime="20220705 04:42:26.469" endtime="20220705 04:42:26.470"/>
</kw>
<kw name="Get Lists On A Board" library="Board">
<var>${LISTS}</var>
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Get all the lists in a board</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>lists_on_board</arg>
<arg>${id}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 04:42:26.471" level="INFO">${url} = boards/62c3c132b16623371e3b6754/lists/</msg>
<status status="PASS" starttime="20220705 04:42:26.470" endtime="20220705 04:42:26.471"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 04:42:26.542" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 04:42:26.471" endtime="20220705 04:42:26.542"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 04:42:26.542" endtime="20220705 04:42:26.542"/>
</return>
<msg timestamp="20220705 04:42:26.542" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 04:42:26.470" endtime="20220705 04:42:26.542"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 04:42:26.542" endtime="20220705 04:42:26.543"/>
</return>
<msg timestamp="20220705 04:42:26.543" level="INFO">${LISTS} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 04:42:26.470" endtime="20220705 04:42:26.543"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_LIST_ID}</arg>
<arg>${LISTS.json()}[0][id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220705 04:42:26.544" level="INFO">${TEST_SUITE_LIST_ID} = 62c3c132b16623371e3b675b</msg>
<status status="PASS" starttime="20220705 04:42:26.543" endtime="20220705 04:42:26.544"/>
</kw>
<kw name="Create A Card" library="Card">
<var>${CARD}</var>
<arg>name</arg>
<arg>TestCard</arg>
<doc>Creates a new card in the given list.
required_args: listId
optional_args: name, desc, pos, idCardSource, idLabels, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>@{optional_args}</arg>
<arg>idList</arg>
<arg>${idList}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 04:42:26.545" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 04:42:26.545" endtime="20220705 04:42:26.545"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 04:42:26.545" endtime="20220705 04:42:26.545"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 04:42:26.546" level="INFO">${url} = cards/</msg>
<status status="PASS" starttime="20220705 04:42:26.546" endtime="20220705 04:42:26.546"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 04:42:26.743" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 04:42:26.546" endtime="20220705 04:42:26.744"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 04:42:26.744" endtime="20220705 04:42:26.744"/>
</return>
<msg timestamp="20220705 04:42:26.744" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 04:42:26.544" endtime="20220705 04:42:26.744"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 04:42:26.744" endtime="20220705 04:42:26.744"/>
</return>
<msg timestamp="20220705 04:42:26.744" level="INFO">${CARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 04:42:26.544" endtime="20220705 04:42:26.744"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_CARD_ID}</arg>
<arg>${CARD.json()}[id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220705 04:42:26.745" level="INFO">${TEST_SUITE_CARD_ID} = 62c3c132c327c21b4bc126c2</msg>
<status status="PASS" starttime="20220705 04:42:26.744" endtime="20220705 04:42:26.745"/>
</kw>
<status status="PASS" starttime="20220705 04:42:26.175" endtime="20220705 04:42:26.745"/>
</kw>
<status status="PASS" starttime="20220705 04:42:26.174" endtime="20220705 04:42:26.745"/>
</kw>
<test id="s1-s1-s3-t1" name="Verify A Checklist Can Be Created" line="14">
<kw name="Create A Checklist" library="Checklist">
<var>${response}</var>
<arg>name</arg>
<arg>TestChecklist</arg>
<arg>idCard=${TEST_SUITE_CARD_ID}</arg>
<doc>Creates a new checklist in the given card.
required_args: idCard
optional_args: name, pos, idChecklistSource
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>@{optional_args}</arg>
<arg>idCard</arg>
<arg>${idCard}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 04:42:26.747" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 04:42:26.747" endtime="20220705 04:42:26.747"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 04:42:26.747" endtime="20220705 04:42:26.748"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 04:42:26.748" level="INFO">${url} = checklists/</msg>
<status status="PASS" starttime="20220705 04:42:26.748" endtime="20220705 04:42:26.748"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 04:42:26.881" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 04:42:26.748" endtime="20220705 04:42:26.881"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 04:42:26.881" endtime="20220705 04:42:26.881"/>
</return>
<msg timestamp="20220705 04:42:26.881" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 04:42:26.747" endtime="20220705 04:42:26.881"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 04:42:26.881" endtime="20220705 04:42:26.881"/>
</return>
<msg timestamp="20220705 04:42:26.881" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 04:42:26.746" endtime="20220705 04:42:26.881"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${checklist_id}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 04:42:26.882" endtime="20220705 04:42:26.882"/>
</return>
<msg timestamp="20220705 04:42:26.883" level="INFO">${checklist_id} = 62c3c132328bec5bec218932</msg>
<status status="PASS" starttime="20220705 04:42:26.882" endtime="20220705 04:42:26.883"/>
</kw>
<kw name="Get A Checklist" library="Checklist">
<var>${response}</var>
<arg>${checklist_id}</arg>
<doc>Gets the checklist with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 04:42:26.884" level="INFO">${url} = checklists/62c3c132328bec5bec218932</msg>
<status status="PASS" starttime="20220705 04:42:26.884" endtime="20220705 04:42:26.884"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 04:42:26.985" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 04:42:26.884" endtime="20220705 04:42:26.985"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 04:42:26.986" endtime="20220705 04:42:26.986"/>
</return>
<msg timestamp="20220705 04:42:26.986" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 04:42:26.883" endtime="20220705 04:42:26.986"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 04:42:26.986" endtime="20220705 04:42:26.986"/>
</return>
<msg timestamp="20220705 04:42:26.986" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 04:42:26.883" endtime="20220705 04:42:26.986"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${checklist_name}</var>
<arg>${response}</arg>
<arg>name</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 04:42:26.987" endtime="20220705 04:42:26.987"/>
</return>
<msg timestamp="20220705 04:42:26.987" level="INFO">${checklist_name} = TestChecklist</msg>
<status status="PASS" starttime="20220705 04:42:26.986" endtime="20220705 04:42:26.987"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${checklist_name}</arg>
<arg>TestChecklist</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220705 04:42:26.988" endtime="20220705 04:42:26.988"/>
</kw>
<kw name="Delete A Checklist" library="Checklist" type="TEARDOWN">
<arg>${checklist_id}</arg>
<doc>Deletes the checklist with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 04:42:26.989" level="INFO">${url} = checklists/62c3c132328bec5bec218932</msg>
<status status="PASS" starttime="20220705 04:42:26.989" endtime="20220705 04:42:26.989"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 04:42:27.112" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 04:42:26.989" endtime="20220705 04:42:27.112"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 04:42:27.112" endtime="20220705 04:42:27.112"/>
</return>
<msg timestamp="20220705 04:42:27.112" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 04:42:26.988" endtime="20220705 04:42:27.112"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 04:42:27.112" endtime="20220705 04:42:27.112"/>
</return>
<status status="PASS" starttime="20220705 04:42:26.988" endtime="20220705 04:42:27.112"/>
</kw>
<doc>Verify that a checklist can be created through API</doc>
<tag>api</tag>
<tag>checklist.create</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220705 04:42:26.745" endtime="20220705 04:42:27.112"/>
</test>
<test id="s1-s1-s3-t2" name="Verify A Checklist Can Be Deleted" line="24">
<kw name="Create A Checklist" library="Checklist">
<var>${response}</var>
<arg>name</arg>
<arg>TestChecklist</arg>
<arg>idCard=${TEST_SUITE_CARD_ID}</arg>
<doc>Creates a new checklist in the given card.
required_args: idCard
optional_args: name, pos, idChecklistSource
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>@{optional_args}</arg>
<arg>idCard</arg>
<arg>${idCard}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 04:42:27.115" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 04:42:27.115" endtime="20220705 04:42:27.115"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 04:42:27.115" endtime="20220705 04:42:27.115"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 04:42:27.116" level="INFO">${url} = checklists/</msg>
<status status="PASS" starttime="20220705 04:42:27.115" endtime="20220705 04:42:27.116"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 04:42:27.244" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 04:42:27.116" endtime="20220705 04:42:27.244"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 04:42:27.245" endtime="20220705 04:42:27.245"/>
</return>
<msg timestamp="20220705 04:42:27.245" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 04:42:27.114" endtime="20220705 04:42:27.245"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 04:42:27.245" endtime="20220705 04:42:27.245"/>
</return>
<msg timestamp="20220705 04:42:27.245" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 04:42:27.113" endtime="20220705 04:42:27.245"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${checklist_id}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 04:42:27.246" endtime="20220705 04:42:27.246"/>
</return>
<msg timestamp="20220705 04:42:27.247" level="INFO">${checklist_id} = 62c3c133c14e4d5fbfc0254f</msg>
<status status="PASS" starttime="20220705 04:42:27.245" endtime="20220705 04:42:27.247"/>
</kw>
<kw name="Delete A Checklist" library="Checklist">
<var>${response}</var>
<arg>${checklist_id}</arg>
<doc>Deletes the checklist with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 04:42:27.248" level="INFO">${url} = checklists/62c3c133c14e4d5fbfc0254f</msg>
<status status="PASS" starttime="20220705 04:42:27.248" endtime="20220705 04:42:27.248"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 04:42:27.414" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 04:42:27.248" endtime="20220705 04:42:27.414"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 04:42:27.414" endtime="20220705 04:42:27.414"/>
</return>
<msg timestamp="20220705 04:42:27.415" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 04:42:27.247" endtime="20220705 04:42:27.415"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 04:42:27.415" endtime="20220705 04:42:27.415"/>
</return>
<msg timestamp="20220705 04:42:27.415" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 04:42:27.247" endtime="20220705 04:42:27.415"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>delete</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 04:42:27.415" endtime="20220705 04:42:27.417"/>
</kw>
<status status="PASS" starttime="20220705 04:42:27.415" endtime="20220705 04:42:27.417"/>
</kw>
<kw name="Get A Checklist" library="Checklist">
<arg>${checklist_id}</arg>
<arg>status_code=404</arg>
<doc>Gets the checklist with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 04:42:27.418" level="INFO">${url} = checklists/62c3c133c14e4d5fbfc0254f</msg>
<status status="PASS" starttime="20220705 04:42:27.418" endtime="20220705 04:42:27.418"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 04:42:27.481" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220705 04:42:27.419" endtime="20220705 04:42:27.481"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 04:42:27.481" endtime="20220705 04:42:27.481"/>
</return>
<msg timestamp="20220705 04:42:27.481" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220705 04:42:27.418" endtime="20220705 04:42:27.481"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 04:42:27.481" endtime="20220705 04:42:27.481"/>
</return>
<status status="PASS" starttime="20220705 04:42:27.417" endtime="20220705 04:42:27.481"/>
</kw>
<doc>Verify that a checklist can be deleted through API</doc>
<tag>api</tag>
<tag>checklist.delete</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220705 04:42:27.113" endtime="20220705 04:42:27.481"/>
</test>
<test id="s1-s1-s3-t3" name="Verify A Checklist Can Be Updated" line="33">
<kw name="Create A Checklist" library="Checklist">
<var>${response}</var>
<arg>name</arg>
<arg>TestChecklist</arg>
<arg>idCard=${TEST_SUITE_CARD_ID}</arg>
<doc>Creates a new checklist in the given card.
required_args: idCard
optional_args: name, pos, idChecklistSource
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>@{optional_args}</arg>
<arg>idCard</arg>
<arg>${idCard}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 04:42:27.485" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 04:42:27.483" endtime="20220705 04:42:27.485"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 04:42:27.485" endtime="20220705 04:42:27.485"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 04:42:27.486" level="INFO">${url} = checklists/</msg>
<status status="PASS" starttime="20220705 04:42:27.485" endtime="20220705 04:42:27.486"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 04:42:27.610" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 04:42:27.486" endtime="20220705 04:42:27.610"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 04:42:27.611" endtime="20220705 04:42:27.611"/>
</return>
<msg timestamp="20220705 04:42:27.611" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 04:42:27.483" endtime="20220705 04:42:27.611"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 04:42:27.611" endtime="20220705 04:42:27.611"/>
</return>
<msg timestamp="20220705 04:42:27.611" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 04:42:27.482" endtime="20220705 04:42:27.611"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${checklist_id}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 04:42:27.612" endtime="20220705 04:42:27.612"/>
</return>
<msg timestamp="20220705 04:42:27.612" level="INFO">${checklist_id} = 62c3c1336872315247b0207e</msg>
<status status="PASS" starttime="20220705 04:42:27.611" endtime="20220705 04:42:27.612"/>
</kw>
<kw name="Update A Checklist" library="Checklist">
<var>${response}</var>
<arg>${checklist_id}</arg>
<arg>name</arg>
<arg>TestChecklist2</arg>
<doc>Updates the checklist with the given ID
optional_args: name, pos
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<arg>status_code=${status_code}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 04:42:27.613" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 04:42:27.613" endtime="20220705 04:42:27.613"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 04:42:27.614" endtime="20220705 04:42:27.614"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 04:42:27.614" level="INFO">${url} = checklists/62c3c1336872315247b0207e</msg>
<status status="PASS" starttime="20220705 04:42:27.614" endtime="20220705 04:42:27.614"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 04:42:27.729" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 04:42:27.614" endtime="20220705 04:42:27.729"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 04:42:27.729" endtime="20220705 04:42:27.729"/>
</return>
<msg timestamp="20220705 04:42:27.729" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 04:42:27.613" endtime="20220705 04:42:27.730"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 04:42:27.730" endtime="20220705 04:42:27.730"/>
</return>
<msg timestamp="20220705 04:42:27.730" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 04:42:27.612" endtime="20220705 04:42:27.730"/>
</kw>
<kw name="Get A Checklist" library="Checklist">
<var>${response}</var>
<arg>${checklist_id}</arg>
<doc>Gets the checklist with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 04:42:27.731" level="INFO">${url} = checklists/62c3c1336872315247b0207e</msg>
<status status="PASS" starttime="20220705 04:42:27.731" endtime="20220705 04:42:27.731"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 04:42:27.818" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 04:42:27.731" endtime="20220705 04:42:27.818"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 04:42:27.818" endtime="20220705 04:42:27.818"/>
</return>
<msg timestamp="20220705 04:42:27.818" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 04:42:27.730" endtime="20220705 04:42:27.818"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 04:42:27.818" endtime="20220705 04:42:27.818"/>
</return>
<msg timestamp="20220705 04:42:27.818" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 04:42:27.730" endtime="20220705 04:42:27.818"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${checklist_name}</var>
<arg>${response}</arg>
<arg>name</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 04:42:27.819" endtime="20220705 04:42:27.819"/>
</return>
<msg timestamp="20220705 04:42:27.819" level="INFO">${checklist_name} = TestChecklist2</msg>
<status status="PASS" starttime="20220705 04:42:27.818" endtime="20220705 04:42:27.819"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${checklist_name}</arg>
<arg>TestChecklist2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220705 04:42:27.820" endtime="20220705 04:42:27.820"/>
</kw>
<kw name="Delete A Checklist" library="Checklist" type="TEARDOWN">
<arg>${checklist_id}</arg>
<doc>Deletes the checklist with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 04:42:27.830" level="INFO">${url} = checklists/62c3c1336872315247b0207e</msg>
<status status="PASS" starttime="20220705 04:42:27.830" endtime="20220705 04:42:27.830"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 04:42:27.969" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 04:42:27.830" endtime="20220705 04:42:27.969"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 04:42:27.969" endtime="20220705 04:42:27.969"/>
</return>
<msg timestamp="20220705 04:42:27.969" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 04:42:27.829" endtime="20220705 04:42:27.969"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 04:42:27.969" endtime="20220705 04:42:27.969"/>
</return>
<status status="PASS" starttime="20220705 04:42:27.820" endtime="20220705 04:42:27.969"/>
</kw>
<doc>Verify that a checklist's name can be updated through API</doc>
<tag>api</tag>
<tag>checklist.update</tag>
<tag>regression</tag>
<status status="PASS" starttime="20220705 04:42:27.482" endtime="20220705 04:42:27.969"/>
</test>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Teardown Board</arg>
<arg>Delete All Sessions</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Teardown Board">
<doc>Delete the board created for this suite</doc>
<kw name="Delete A Board" library="Board">
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 04:42:27.972" level="INFO">${url} = boards/62c3c132b16623371e3b6754</msg>
<status status="PASS" starttime="20220705 04:42:27.971" endtime="20220705 04:42:27.972"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 04:42:28.300" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 04:42:27.972" endtime="20220705 04:42:28.300"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 04:42:28.300" endtime="20220705 04:42:28.300"/>
</return>
<msg timestamp="20220705 04:42:28.300" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 04:42:27.971" endtime="20220705 04:42:28.301"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 04:42:28.301" endtime="20220705 04:42:28.301"/>
</return>
<status status="PASS" starttime="20220705 04:42:27.971" endtime="20220705 04:42:28.301"/>
</kw>
<status status="PASS" starttime="20220705 04:42:27.971" endtime="20220705 04:42:28.301"/>
</kw>
<kw name="Delete All Sessions" library="request_own_library">
<status status="PASS" starttime="20220705 04:42:28.301" endtime="20220705 04:42:28.302"/>
</kw>
<status status="PASS" starttime="20220705 04:42:27.970" endtime="20220705 04:42:28.302"/>
</kw>
<doc>Example Test with Trello API Checklists</doc>
<status status="PASS" starttime="20220705 04:42:26.165" endtime="20220705 04:42:28.302"/>
</suite>
<suite id="s1-s1-s4" name="Trello Api Labels Tests" source="/trello/api/trello_api_labels_tests.robot">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Create Trello Session</arg>
<arg>Setup Board And List</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Create Trello Session" library="TrelloAPI">
<doc>Creates a Trello Session</doc>
<kw name="Create Session" library="request_own_library">
<arg>${API_BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<status status="PASS" starttime="20220705 04:42:28.312" endtime="20220705 04:42:28.312"/>
</kw>
<status status="PASS" starttime="20220705 04:42:28.312" endtime="20220705 04:42:28.312"/>
</kw>
<kw name="Setup Board And List">
<doc>Create a board and save its ID and its first list's ID</doc>
<kw name="Create A Board" library="Board">
<var>${BOARD}</var>
<arg>TestBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 04:42:28.313" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 04:42:28.313" endtime="20220705 04:42:28.313"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 04:42:28.313" endtime="20220705 04:42:28.313"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 04:42:28.314" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220705 04:42:28.313" endtime="20220705 04:42:28.314"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 04:42:28.632" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 04:42:28.314" endtime="20220705 04:42:28.632"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 04:42:28.632" endtime="20220705 04:42:28.632"/>
</return>
<msg timestamp="20220705 04:42:28.632" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 04:42:28.313" endtime="20220705 04:42:28.632"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 04:42:28.632" endtime="20220705 04:42:28.632"/>
</return>
<msg timestamp="20220705 04:42:28.633" level="INFO">${BOARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 04:42:28.312" endtime="20220705 04:42:28.633"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_BOARD_ID}</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220705 04:42:28.634" level="INFO">${TEST_SUITE_BOARD_ID} = 62c3c13496fd695655d45c9f</msg>
<status status="PASS" starttime="20220705 04:42:28.633" endtime="20220705 04:42:28.634"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${LISTS}</var>
<arg>boards/${TEST_SUITE_BOARD_ID}/lists</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 04:42:28.706" level="INFO">${LISTS} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 04:42:28.634" endtime="20220705 04:42:28.706"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_LIST_ID}</arg>
<arg>${LISTS.json()}[0][id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220705 04:42:28.707" level="INFO">${TEST_SUITE_LIST_ID} = 62c3c13496fd695655d45ca6</msg>
<status status="PASS" starttime="20220705 04:42:28.707" endtime="20220705 04:42:28.708"/>
</kw>
<status status="PASS" starttime="20220705 04:42:28.312" endtime="20220705 04:42:28.708"/>
</kw>
<status status="PASS" starttime="20220705 04:42:28.311" endtime="20220705 04:42:28.708"/>
</kw>
<test id="s1-s1-s4-t1" name="Create and get label on board" line="14">
<kw name="Create A Label" library="Label">
<var>${response}</var>
<arg>name</arg>
<arg>label2</arg>
<arg>color</arg>
<arg>yellow</arg>
<doc>Creates a new label in the given board.
required_args: idBoard
optional_args: name, color
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>idBoard</arg>
<arg>${idBoard}</arg>
<arg>@{optional_args}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 04:42:28.709" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 04:42:28.709" endtime="20220705 04:42:28.709"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 04:42:28.710" endtime="20220705 04:42:28.710"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 04:42:28.710" level="INFO">${url} = labels/</msg>
<status status="PASS" starttime="20220705 04:42:28.710" endtime="20220705 04:42:28.710"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 04:42:28.819" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 04:42:28.711" endtime="20220705 04:42:28.819"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 04:42:28.819" endtime="20220705 04:42:28.819"/>
</return>
<msg timestamp="20220705 04:42:28.819" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 04:42:28.709" endtime="20220705 04:42:28.820"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 04:42:28.820" endtime="20220705 04:42:28.820"/>
</return>
<msg timestamp="20220705 04:42:28.820" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 04:42:28.708" endtime="20220705 04:42:28.820"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>label</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 04:42:28.820" endtime="20220705 04:42:28.822"/>
</kw>
<status status="PASS" starttime="20220705 04:42:28.820" endtime="20220705 04:42:28.822"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${LABEL_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 04:42:28.822" endtime="20220705 04:42:28.823"/>
</return>
<msg timestamp="20220705 04:42:28.823" level="INFO">${LABEL_ID} = 62c3c13453a8220e9b62cced</msg>
<status status="PASS" starttime="20220705 04:42:28.822" endtime="20220705 04:42:28.823"/>
</kw>
<kw name="Get A Label" library="Label">
<var>${response}</var>
<arg>${LABEL_ID}</arg>
<doc>Gets the label with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 04:42:28.824" level="INFO">${url} = labels/62c3c13453a8220e9b62cced</msg>
<status status="PASS" starttime="20220705 04:42:28.824" endtime="20220705 04:42:28.824"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 04:42:28.908" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 04:42:28.824" endtime="20220705 04:42:28.908"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 04:42:28.908" endtime="20220705 04:42:28.909"/>
</return>
<msg timestamp="20220705 04:42:28.909" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 04:42:28.824" endtime="20220705 04:42:28.909"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 04:42:28.909" endtime="20220705 04:42:28.909"/>
</return>
<msg timestamp="20220705 04:42:28.909" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 04:42:28.823" endtime="20220705 04:42:28.909"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${LABEL_COLOR}</var>
<arg>${response}</arg>
<arg>color</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 04:42:28.909" endtime="20220705 04:42:28.910"/>
</return>
<msg timestamp="20220705 04:42:28.910" level="INFO">${LABEL_COLOR} = yellow</msg>
<status status="PASS" starttime="20220705 04:42:28.909" endtime="20220705 04:42:28.910"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${LABEL_NAME}</var>
<arg>${response}</arg>
<arg>name</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 04:42:28.911" endtime="20220705 04:42:28.911"/>
</return>
<msg timestamp="20220705 04:42:28.911" level="INFO">${LABEL_NAME} = label2</msg>
<status status="PASS" starttime="20220705 04:42:28.910" endtime="20220705 04:42:28.911"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${LABEL_COLOR}</arg>
<arg>yellow</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220705 04:42:28.911" endtime="20220705 04:42:28.912"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${LABEL_NAME}</arg>
<arg>label2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220705 04:42:28.912" endtime="20220705 04:42:28.912"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Label</arg>
<arg>${LABEL_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Label" library="Label">
<arg>${LABEL_ID}</arg>
<doc>Deletes the label with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 04:42:28.913" level="INFO">${url} = labels/62c3c13453a8220e9b62cced</msg>
<status status="PASS" starttime="20220705 04:42:28.913" endtime="20220705 04:42:28.913"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 04:42:29.042" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 04:42:28.913" endtime="20220705 04:42:29.042"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 04:42:29.043" endtime="20220705 04:42:29.043"/>
</return>
<msg timestamp="20220705 04:42:29.043" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 04:42:28.913" endtime="20220705 04:42:29.043"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 04:42:29.043" endtime="20220705 04:42:29.043"/>
</return>
<status status="PASS" starttime="20220705 04:42:28.912" endtime="20220705 04:42:29.043"/>
</kw>
<status status="PASS" starttime="20220705 04:42:28.912" endtime="20220705 04:42:29.043"/>
</kw>
<doc>Verify that a label can be created through API</doc>
<tag>api</tag>
<tag>label.create</tag>
<tag>label.get</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220705 04:42:28.708" endtime="20220705 04:42:29.043"/>
</test>
<test id="s1-s1-s4-t2" name="Update label on board" line="28">
<kw name="Create A Label" library="Label">
<var>${response}</var>
<arg>name</arg>
<arg>label2</arg>
<arg>color</arg>
<arg>yellow</arg>
<doc>Creates a new label in the given board.
required_args: idBoard
optional_args: name, color
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>idBoard</arg>
<arg>${idBoard}</arg>
<arg>@{optional_args}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 04:42:29.046" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 04:42:29.045" endtime="20220705 04:42:29.046"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 04:42:29.046" endtime="20220705 04:42:29.046"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 04:42:29.047" level="INFO">${url} = labels/</msg>
<status status="PASS" starttime="20220705 04:42:29.046" endtime="20220705 04:42:29.047"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 04:42:29.167" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 04:42:29.047" endtime="20220705 04:42:29.167"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 04:42:29.167" endtime="20220705 04:42:29.168"/>
</return>
<msg timestamp="20220705 04:42:29.168" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 04:42:29.045" endtime="20220705 04:42:29.168"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 04:42:29.168" endtime="20220705 04:42:29.168"/>
</return>
<msg timestamp="20220705 04:42:29.168" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 04:42:29.045" endtime="20220705 04:42:29.168"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>label</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 04:42:29.168" endtime="20220705 04:42:29.170"/>
</kw>
<status status="PASS" starttime="20220705 04:42:29.168" endtime="20220705 04:42:29.170"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${LABEL_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 04:42:29.171" endtime="20220705 04:42:29.171"/>
</return>
<msg timestamp="20220705 04:42:29.171" level="INFO">${LABEL_ID} = 62c3c13513431e0b747ee362</msg>
<status status="PASS" starttime="20220705 04:42:29.170" endtime="20220705 04:42:29.171"/>
</kw>
<kw name="Update A Label" library="Label">
<var>${new_response}</var>
<arg>${LABEL_ID}</arg>
<arg>name</arg>
<arg>label3</arg>
<arg>color</arg>
<arg>orange</arg>
<doc>Updates the label with the given ID
optional_args: name, color
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 04:42:29.172" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 04:42:29.172" endtime="20220705 04:42:29.172"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 04:42:29.173" endtime="20220705 04:42:29.173"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 04:42:29.173" level="INFO">${url} = labels/62c3c13513431e0b747ee362</msg>
<status status="PASS" starttime="20220705 04:42:29.173" endtime="20220705 04:42:29.173"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 04:42:29.304" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 04:42:29.173" endtime="20220705 04:42:29.304"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 04:42:29.304" endtime="20220705 04:42:29.304"/>
</return>
<msg timestamp="20220705 04:42:29.304" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 04:42:29.172" endtime="20220705 04:42:29.304"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 04:42:29.304" endtime="20220705 04:42:29.305"/>
</return>
<msg timestamp="20220705 04:42:29.305" level="INFO">${new_response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 04:42:29.171" endtime="20220705 04:42:29.305"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${NEW_LABEL_COLOR}</var>
<arg>${new_response}</arg>
<arg>color</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 04:42:29.305" endtime="20220705 04:42:29.305"/>
</return>
<msg timestamp="20220705 04:42:29.306" level="INFO">${NEW_LABEL_COLOR} = orange</msg>
<status status="PASS" starttime="20220705 04:42:29.305" endtime="20220705 04:42:29.306"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${NEW_LABEL_NAME}</var>
<arg>${new_response}</arg>
<arg>name</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 04:42:29.306" endtime="20220705 04:42:29.306"/>
</return>
<msg timestamp="20220705 04:42:29.307" level="INFO">${NEW_LABEL_NAME} = label3</msg>
<status status="PASS" starttime="20220705 04:42:29.306" endtime="20220705 04:42:29.307"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${NEW_LABEL_COLOR}</arg>
<arg>orange</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220705 04:42:29.307" endtime="20220705 04:42:29.307"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${NEW_LABEL_NAME}</arg>
<arg>label3</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220705 04:42:29.307" endtime="20220705 04:42:29.308"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Label</arg>
<arg>${LABEL_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Label" library="Label">
<arg>${LABEL_ID}</arg>
<doc>Deletes the label with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 04:42:29.309" level="INFO">${url} = labels/62c3c13513431e0b747ee362</msg>
<status status="PASS" starttime="20220705 04:42:29.309" endtime="20220705 04:42:29.309"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 04:42:29.434" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 04:42:29.310" endtime="20220705 04:42:29.434"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 04:42:29.434" endtime="20220705 04:42:29.434"/>
</return>
<msg timestamp="20220705 04:42:29.434" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 04:42:29.309" endtime="20220705 04:42:29.434"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 04:42:29.434" endtime="20220705 04:42:29.435"/>
</return>
<status status="PASS" starttime="20220705 04:42:29.308" endtime="20220705 04:42:29.435"/>
</kw>
<status status="PASS" starttime="20220705 04:42:29.308" endtime="20220705 04:42:29.435"/>
</kw>
<doc>Verify that a label's name and color can be updated through API</doc>
<tag>api</tag>
<tag>label.update</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220705 04:42:29.044" endtime="20220705 04:42:29.435"/>
</test>
<test id="s1-s1-s4-t3" name="Delete label on board" line="41">
<kw name="Create A Label" library="Label">
<var>${response}</var>
<arg>name</arg>
<arg>label2</arg>
<arg>color</arg>
<arg>yellow</arg>
<doc>Creates a new label in the given board.
required_args: idBoard
optional_args: name, color
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>idBoard</arg>
<arg>${idBoard}</arg>
<arg>@{optional_args}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 04:42:29.437" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 04:42:29.437" endtime="20220705 04:42:29.437"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 04:42:29.437" endtime="20220705 04:42:29.438"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 04:42:29.438" level="INFO">${url} = labels/</msg>
<status status="PASS" starttime="20220705 04:42:29.438" endtime="20220705 04:42:29.438"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 04:42:29.555" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 04:42:29.438" endtime="20220705 04:42:29.555"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 04:42:29.555" endtime="20220705 04:42:29.555"/>
</return>
<msg timestamp="20220705 04:42:29.555" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 04:42:29.437" endtime="20220705 04:42:29.555"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 04:42:29.555" endtime="20220705 04:42:29.555"/>
</return>
<msg timestamp="20220705 04:42:29.555" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 04:42:29.436" endtime="20220705 04:42:29.555"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${LABEL_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 04:42:29.556" endtime="20220705 04:42:29.556"/>
</return>
<msg timestamp="20220705 04:42:29.556" level="INFO">${LABEL_ID} = 62c3c135655d685ea8cc9b68</msg>
<status status="PASS" starttime="20220705 04:42:29.555" endtime="20220705 04:42:29.556"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Label</arg>
<arg>${LABEL_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Label" library="Label">
<arg>${LABEL_ID}</arg>
<doc>Deletes the label with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 04:42:29.558" level="INFO">${url} = labels/62c3c135655d685ea8cc9b68</msg>
<status status="PASS" starttime="20220705 04:42:29.558" endtime="20220705 04:42:29.558"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 04:42:29.680" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 04:42:29.558" endtime="20220705 04:42:29.680"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 04:42:29.680" endtime="20220705 04:42:29.680"/>
</return>
<msg timestamp="20220705 04:42:29.681" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 04:42:29.557" endtime="20220705 04:42:29.681"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 04:42:29.681" endtime="20220705 04:42:29.681"/>
</return>
<status status="PASS" starttime="20220705 04:42:29.557" endtime="20220705 04:42:29.681"/>
</kw>
<status status="PASS" starttime="20220705 04:42:29.557" endtime="20220705 04:42:29.681"/>
</kw>
<kw name="Get A Label" library="Label">
<arg>${LABEL_ID}</arg>
<arg>status_code=404</arg>
<doc>Gets the label with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 04:42:29.682" level="INFO">${url} = labels/62c3c135655d685ea8cc9b68</msg>
<status status="PASS" starttime="20220705 04:42:29.682" endtime="20220705 04:42:29.682"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 04:42:29.754" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220705 04:42:29.682" endtime="20220705 04:42:29.754"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 04:42:29.754" endtime="20220705 04:42:29.754"/>
</return>
<msg timestamp="20220705 04:42:29.755" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220705 04:42:29.681" endtime="20220705 04:42:29.755"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 04:42:29.755" endtime="20220705 04:42:29.755"/>
</return>
<status status="PASS" starttime="20220705 04:42:29.681" endtime="20220705 04:42:29.755"/>
</kw>
<doc>Verify that a label can be deleted through API</doc>
<tag>api</tag>
<tag>label.delete</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220705 04:42:29.435" endtime="20220705 04:42:29.755"/>
</test>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Teardown Board</arg>
<arg>Delete All Sessions</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Teardown Board">
<doc>Delete the board created for this session.</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 04:42:29.758" level="INFO">${url} = boards/62c3c13496fd695655d45c9f</msg>
<status status="PASS" starttime="20220705 04:42:29.757" endtime="20220705 04:42:29.758"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 04:42:30.083" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 04:42:29.758" endtime="20220705 04:42:30.083"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 04:42:30.083" endtime="20220705 04:42:30.083"/>
</return>
<msg timestamp="20220705 04:42:30.083" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 04:42:29.757" endtime="20220705 04:42:30.083"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 04:42:30.083" endtime="20220705 04:42:30.083"/>
</return>
<status status="PASS" starttime="20220705 04:42:29.757" endtime="20220705 04:42:30.083"/>
</kw>
<status status="PASS" starttime="20220705 04:42:29.756" endtime="20220705 04:42:30.083"/>
</kw>
<status status="PASS" starttime="20220705 04:42:29.756" endtime="20220705 04:42:30.083"/>
</kw>
<kw name="Delete All Sessions" library="request_own_library">
<status status="PASS" starttime="20220705 04:42:30.084" endtime="20220705 04:42:30.084"/>
</kw>
<status status="PASS" starttime="20220705 04:42:29.756" endtime="20220705 04:42:30.085"/>
</kw>
<doc>Example Test with Trello API Cards</doc>
<status status="PASS" starttime="20220705 04:42:28.303" endtime="20220705 04:42:30.085"/>
</suite>
<suite id="s1-s1-s5" name="Trello Api Lists Tests" source="/trello/api/trello_api_lists_tests.robot">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Create Trello Session</arg>
<arg>Setup Board</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Create Trello Session" library="TrelloAPI">
<doc>Creates a Trello Session</doc>
<kw name="Create Session" library="request_own_library">
<arg>${API_BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<status status="PASS" starttime="20220705 04:42:30.098" endtime="20220705 04:42:30.099"/>
</kw>
<status status="PASS" starttime="20220705 04:42:30.098" endtime="20220705 04:42:30.099"/>
</kw>
<kw name="Setup Board">
<doc>Create a board and save it's id for the suite</doc>
<kw name="Create A Board" library="Board">
<var>${BOARD}</var>
<arg>TestBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 04:42:30.100" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 04:42:30.099" endtime="20220705 04:42:30.100"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 04:42:30.100" endtime="20220705 04:42:30.100"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 04:42:30.101" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220705 04:42:30.100" endtime="20220705 04:42:30.101"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 04:42:30.413" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 04:42:30.101" endtime="20220705 04:42:30.413"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 04:42:30.413" endtime="20220705 04:42:30.413"/>
</return>
<msg timestamp="20220705 04:42:30.414" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 04:42:30.099" endtime="20220705 04:42:30.414"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 04:42:30.414" endtime="20220705 04:42:30.414"/>
</return>
<msg timestamp="20220705 04:42:30.414" level="INFO">${BOARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 04:42:30.099" endtime="20220705 04:42:30.414"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Set Suite Variable</arg>
<arg>\${TEST_SUITE_BOARD_ID}</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_BOARD_ID}</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220705 04:42:30.415" level="INFO">${TEST_SUITE_BOARD_ID} = 62c3c13695cff43eb3f20ae5</msg>
<status status="PASS" starttime="20220705 04:42:30.414" endtime="20220705 04:42:30.415"/>
</kw>
<status status="PASS" starttime="20220705 04:42:30.414" endtime="20220705 04:42:30.415"/>
</kw>
<status status="PASS" starttime="20220705 04:42:30.099" endtime="20220705 04:42:30.415"/>
</kw>
<status status="PASS" starttime="20220705 04:42:30.098" endtime="20220705 04:42:30.415"/>
</kw>
<test id="s1-s1-s5-t1" name="CREATE a list" line="13">
<kw name="Create A List" library="List">
<var>${response}</var>
<arg>NewList</arg>
<doc>Creates a new List
board id
name the list will have
optional_args: idListSource, pos, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>list</arg>
<arg>name</arg>
<arg>${name}</arg>
<arg>idBoard</arg>
<arg>${idBoard}</arg>
<arg>@{optional_args}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 04:42:30.417" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 04:42:30.417" endtime="20220705 04:42:30.417"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 04:42:30.417" endtime="20220705 04:42:30.417"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 04:42:30.418" level="INFO">${url} = lists/</msg>
<status status="PASS" starttime="20220705 04:42:30.417" endtime="20220705 04:42:30.418"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 04:42:30.547" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 04:42:30.418" endtime="20220705 04:42:30.547"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 04:42:30.547" endtime="20220705 04:42:30.547"/>
</return>
<msg timestamp="20220705 04:42:30.547" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 04:42:30.416" endtime="20220705 04:42:30.547"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 04:42:30.547" endtime="20220705 04:42:30.547"/>
</return>
<msg timestamp="20220705 04:42:30.547" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 04:42:30.416" endtime="20220705 04:42:30.547"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>list</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 04:42:30.548" endtime="20220705 04:42:30.549"/>
</kw>
<status status="PASS" starttime="20220705 04:42:30.547" endtime="20220705 04:42:30.550"/>
</kw>
<doc>Verify that a list can be created through API</doc>
<tag>api</tag>
<tag>list.create</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220705 04:42:30.415" endtime="20220705 04:42:30.550"/>
</test>
<test id="s1-s1-s5-t2" name="UPDATE a list" line="19">
<kw name="Create A List" library="List">
<var>${response}</var>
<arg>NewList</arg>
<doc>Creates a new List
board id
name the list will have
optional_args: idListSource, pos, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>list</arg>
<arg>name</arg>
<arg>${name}</arg>
<arg>idBoard</arg>
<arg>${idBoard}</arg>
<arg>@{optional_args}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 04:42:30.552" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 04:42:30.552" endtime="20220705 04:42:30.552"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 04:42:30.552" endtime="20220705 04:42:30.552"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 04:42:30.553" level="INFO">${url} = lists/</msg>
<status status="PASS" starttime="20220705 04:42:30.552" endtime="20220705 04:42:30.553"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 04:42:30.693" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 04:42:30.553" endtime="20220705 04:42:30.693"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 04:42:30.693" endtime="20220705 04:42:30.693"/>
</return>
<msg timestamp="20220705 04:42:30.693" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 04:42:30.551" endtime="20220705 04:42:30.693"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 04:42:30.693" endtime="20220705 04:42:30.693"/>
</return>
<msg timestamp="20220705 04:42:30.693" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 04:42:30.551" endtime="20220705 04:42:30.693"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>list</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 04:42:30.694" endtime="20220705 04:42:30.695"/>
</kw>
<status status="PASS" starttime="20220705 04:42:30.693" endtime="20220705 04:42:30.696"/>
</kw>
<kw name="Update A List" library="List">
<arg>${response.json()}[id]</arg>
<arg>name</arg>
<arg>NewName</arg>
<doc>Updates the board with the given ID
optional_args: name, idListSource, pos, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>list</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 04:42:30.697" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 04:42:30.697" endtime="20220705 04:42:30.697"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 04:42:30.697" endtime="20220705 04:42:30.698"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 04:42:30.698" level="INFO">${url} = lists/62c3c1361d02550cdbaf0d3a</msg>
<status status="PASS" starttime="20220705 04:42:30.698" endtime="20220705 04:42:30.698"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 04:42:30.805" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 04:42:30.698" endtime="20220705 04:42:30.805"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 04:42:30.805" endtime="20220705 04:42:30.805"/>
</return>
<msg timestamp="20220705 04:42:30.806" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 04:42:30.696" endtime="20220705 04:42:30.806"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 04:42:30.806" endtime="20220705 04:42:30.806"/>
</return>
<status status="PASS" starttime="20220705 04:42:30.696" endtime="20220705 04:42:30.806"/>
</kw>
<kw name="Get A List" library="List">
<var>${new_response}</var>
<arg>${response.json()}[id]</arg>
<doc>Gets the List with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>list</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 04:42:30.808" level="INFO">${url} = lists/62c3c1361d02550cdbaf0d3a</msg>
<status status="PASS" starttime="20220705 04:42:30.807" endtime="20220705 04:42:30.808"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 04:42:30.884" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 04:42:30.808" endtime="20220705 04:42:30.884"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 04:42:30.884" endtime="20220705 04:42:30.884"/>
</return>
<msg timestamp="20220705 04:42:30.884" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 04:42:30.807" endtime="20220705 04:42:30.884"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 04:42:30.884" endtime="20220705 04:42:30.884"/>
</return>
<msg timestamp="20220705 04:42:30.884" level="INFO">${new_response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 04:42:30.806" endtime="20220705 04:42:30.884"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${new_response}</arg>
<arg>list</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 04:42:30.885" endtime="20220705 04:42:30.886"/>
</kw>
<status status="PASS" starttime="20220705 04:42:30.884" endtime="20220705 04:42:30.886"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${new_response.json()}[name]</arg>
<arg>NewName</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220705 04:42:30.886" endtime="20220705 04:42:30.887"/>
</kw>
<doc>Verify that a lists name can be updated through API</doc>
<tag>api</tag>
<tag>list.update</tag>
<tag>regression</tag>
<status status="PASS" starttime="20220705 04:42:30.550" endtime="20220705 04:42:30.887"/>
</test>
<test id="s1-s1-s5-t3" name="ARCHIVE A list" line="29">
<kw name="Create A List" library="List">
<var>${response}</var>
<arg>NewList</arg>
<doc>Creates a new List
board id
name the list will have
optional_args: idListSource, pos, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>list</arg>
<arg>name</arg>
<arg>${name}</arg>
<arg>idBoard</arg>
<arg>${idBoard}</arg>
<arg>@{optional_args}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 04:42:30.890" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 04:42:30.890" endtime="20220705 04:42:30.890"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 04:42:30.890" endtime="20220705 04:42:30.891"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 04:42:30.891" level="INFO">${url} = lists/</msg>
<status status="PASS" starttime="20220705 04:42:30.891" endtime="20220705 04:42:30.891"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 04:42:31.014" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 04:42:30.891" endtime="20220705 04:42:31.014"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 04:42:31.014" endtime="20220705 04:42:31.014"/>
</return>
<msg timestamp="20220705 04:42:31.014" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 04:42:30.890" endtime="20220705 04:42:31.014"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 04:42:31.014" endtime="20220705 04:42:31.014"/>
</return>
<msg timestamp="20220705 04:42:31.015" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 04:42:30.888" endtime="20220705 04:42:31.015"/>
</kw>
<kw name="Archive A List" library="List">
<arg>${response.json()}[id]</arg>
<doc>Deletes the list with the given ID</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>archive_list</arg>
<arg>${id}</arg>
<arg>value</arg>
<arg>true</arg>
<arg>status_code=${status_code}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 04:42:31.016" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 04:42:31.016" endtime="20220705 04:42:31.016"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 04:42:31.016" endtime="20220705 04:42:31.017"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 04:42:31.017" level="INFO">${url} = lists/62c3c136bff36337a2a683e3/closed</msg>
<status status="PASS" starttime="20220705 04:42:31.017" endtime="20220705 04:42:31.017"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 04:42:31.138" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 04:42:31.017" endtime="20220705 04:42:31.138"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 04:42:31.138" endtime="20220705 04:42:31.138"/>
</return>
<msg timestamp="20220705 04:42:31.139" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 04:42:31.015" endtime="20220705 04:42:31.139"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 04:42:31.139" endtime="20220705 04:42:31.139"/>
</return>
<status status="PASS" starttime="20220705 04:42:31.015" endtime="20220705 04:42:31.139"/>
</kw>
<kw name="Get A List" library="List">
<var>${new_response}</var>
<arg>${response.json()}[id]</arg>
<doc>Gets the List with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>list</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 04:42:31.140" level="INFO">${url} = lists/62c3c136bff36337a2a683e3</msg>
<status status="PASS" starttime="20220705 04:42:31.140" endtime="20220705 04:42:31.140"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 04:42:31.215" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 04:42:31.141" endtime="20220705 04:42:31.215"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 04:42:31.215" endtime="20220705 04:42:31.215"/>
</return>
<msg timestamp="20220705 04:42:31.216" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 04:42:31.140" endtime="20220705 04:42:31.216"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 04:42:31.216" endtime="20220705 04:42:31.216"/>
</return>
<msg timestamp="20220705 04:42:31.216" level="INFO">${new_response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 04:42:31.139" endtime="20220705 04:42:31.216"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${new_response.json()}[closed]</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220705 04:42:31.216" endtime="20220705 04:42:31.217"/>
</kw>
<doc>Verify that a list can be archived through API</doc>
<tag>api</tag>
<tag>list.archive</tag>
<tag>regression</tag>
<status status="PASS" starttime="20220705 04:42:30.888" endtime="20220705 04:42:31.217"/>
</test>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Teardown Board</arg>
<arg>Delete All Sessions</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Teardown Board">
<doc>Delete the board created for this suite.</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 04:42:31.219" level="INFO">${url} = boards/62c3c13695cff43eb3f20ae5</msg>
<status status="PASS" starttime="20220705 04:42:31.219" endtime="20220705 04:42:31.219"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 04:42:31.558" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 04:42:31.219" endtime="20220705 04:42:31.558"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 04:42:31.558" endtime="20220705 04:42:31.558"/>
</return>
<msg timestamp="20220705 04:42:31.558" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 04:42:31.219" endtime="20220705 04:42:31.558"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 04:42:31.558" endtime="20220705 04:42:31.558"/>
</return>
<status status="PASS" starttime="20220705 04:42:31.218" endtime="20220705 04:42:31.558"/>
</kw>
<status status="PASS" starttime="20220705 04:42:31.218" endtime="20220705 04:42:31.558"/>
</kw>
<status status="PASS" starttime="20220705 04:42:31.218" endtime="20220705 04:42:31.558"/>
</kw>
<kw name="Delete All Sessions" library="request_own_library">
<status status="PASS" starttime="20220705 04:42:31.559" endtime="20220705 04:42:31.559"/>
</kw>
<status status="PASS" starttime="20220705 04:42:31.217" endtime="20220705 04:42:31.560"/>
</kw>
<doc>Example Test with Trello API lists</doc>
<status status="PASS" starttime="20220705 04:42:30.086" endtime="20220705 04:42:31.560"/>
</suite>
<status status="PASS" starttime="20220705 04:42:19.538" endtime="20220705 04:42:31.561"/>
</suite>
<status status="PASS" starttime="20220705 04:42:19.522" endtime="20220705 04:42:31.563"/>
</suite>
<statistics>
<total>
<stat pass="18" fail="0" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="18" fail="0" skip="0">api</stat>
<stat pass="1" fail="0" skip="0">board.create</stat>
<stat pass="1" fail="0" skip="0">board.delete</stat>
<stat pass="1" fail="0" skip="0">board.get</stat>
<stat pass="2" fail="0" skip="0">board.update</stat>
<stat pass="1" fail="0" skip="0">card.close</stat>
<stat pass="1" fail="0" skip="0">card.create</stat>
<stat pass="1" fail="0" skip="0">card.delete</stat>
<stat pass="1" fail="0" skip="0">card.update</stat>
<stat pass="1" fail="0" skip="0">checklist.create</stat>
<stat pass="1" fail="0" skip="0">checklist.delete</stat>
<stat pass="1" fail="0" skip="0">checklist.update</stat>
<stat pass="1" fail="0" skip="0">label.create</stat>
<stat pass="1" fail="0" skip="0">label.delete</stat>
<stat pass="1" fail="0" skip="0">label.get</stat>
<stat pass="1" fail="0" skip="0">label.update</stat>
<stat pass="1" fail="0" skip="0">list.archive</stat>
<stat pass="1" fail="0" skip="0">list.create</stat>
<stat pass="1" fail="0" skip="0">list.update</stat>
<stat pass="5" fail="0" skip="0">regression</stat>
<stat pass="13" fail="0" skip="0">smoke</stat>
</tag>
<suite>
<stat pass="18" fail="0" skip="0" id="s1" name="Trello">Trello</stat>
<stat pass="18" fail="0" skip="0" id="s1-s1" name="Api">Trello.Api</stat>
<stat pass="5" fail="0" skip="0" id="s1-s1-s1" name="Trello Api Boards Tests">Trello.Api.Trello Api Boards Tests</stat>
<stat pass="4" fail="0" skip="0" id="s1-s1-s2" name="Trello Api Cards Tests">Trello.Api.Trello Api Cards Tests</stat>
<stat pass="3" fail="0" skip="0" id="s1-s1-s3" name="Trello Api Checklists Tests">Trello.Api.Trello Api Checklists Tests</stat>
<stat pass="3" fail="0" skip="0" id="s1-s1-s4" name="Trello Api Labels Tests">Trello.Api.Trello Api Labels Tests</stat>
<stat pass="3" fail="0" skip="0" id="s1-s1-s5" name="Trello Api Lists Tests">Trello.Api.Trello Api Lists Tests</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
