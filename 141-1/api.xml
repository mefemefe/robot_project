<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 5.0.1 (Python 3.10.5 on linux)" generated="20220705 07:40:20.519" rpa="false" schemaversion="3">
<suite id="s1" name="Trello" source="/trello">
<suite id="s1-s1" name="Api" source="/trello/api">
<suite id="s1-s1-s1" name="Trello Api Boards Tests" source="/trello/api/trello_api_boards_tests.robot">
<kw name="Create Trello Session" library="TrelloAPI" type="SETUP">
<doc>Creates a Trello Session</doc>
<kw name="Create Session" library="request_own_library">
<arg>${API_BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<status status="PASS" starttime="20220705 07:40:20.629" endtime="20220705 07:40:20.629"/>
</kw>
<status status="PASS" starttime="20220705 07:40:20.628" endtime="20220705 07:40:20.629"/>
</kw>
<test id="s1-s1-s1-t1" name="CREATE a board" line="9">
<kw name="Create A Board" library="Board">
<var>${response}</var>
<arg>NewBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 07:40:20.631" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 07:40:20.631" endtime="20220705 07:40:20.631"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 07:40:20.631" endtime="20220705 07:40:20.631"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 07:40:20.632" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220705 07:40:20.631" endtime="20220705 07:40:20.632"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 07:40:20.971" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 07:40:20.632" endtime="20220705 07:40:20.971"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 07:40:20.971" endtime="20220705 07:40:20.971"/>
</return>
<msg timestamp="20220705 07:40:20.971" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 07:40:20.630" endtime="20220705 07:40:20.971"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 07:40:20.972" endtime="20220705 07:40:20.972"/>
</return>
<msg timestamp="20220705 07:40:20.972" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 07:40:20.630" endtime="20220705 07:40:20.972"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>board</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 07:40:20.972" endtime="20220705 07:40:20.976"/>
</kw>
<status status="PASS" starttime="20220705 07:40:20.972" endtime="20220705 07:40:20.976"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${response.json()}[id]</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${response.json()}[id]</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 07:40:20.978" level="INFO">${url} = boards/62c3eae4e6a0af7c4c1ff003</msg>
<status status="PASS" starttime="20220705 07:40:20.978" endtime="20220705 07:40:20.978"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 07:40:21.440" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 07:40:20.978" endtime="20220705 07:40:21.440"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 07:40:21.440" endtime="20220705 07:40:21.441"/>
</return>
<msg timestamp="20220705 07:40:21.441" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 07:40:20.978" endtime="20220705 07:40:21.441"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 07:40:21.441" endtime="20220705 07:40:21.441"/>
</return>
<status status="PASS" starttime="20220705 07:40:20.977" endtime="20220705 07:40:21.441"/>
</kw>
<status status="PASS" starttime="20220705 07:40:20.977" endtime="20220705 07:40:21.441"/>
</kw>
<doc>Verify that a board can be create through API</doc>
<tag>api</tag>
<tag>board.create</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220705 07:40:20.630" endtime="20220705 07:40:21.441"/>
</test>
<test id="s1-s1-s1-t2" name="UPDATE a Board's name" line="16">
<kw name="Create A Board" library="Board">
<var>${response}</var>
<arg>NewBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 07:40:21.444" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 07:40:21.443" endtime="20220705 07:40:21.444"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 07:40:21.444" endtime="20220705 07:40:21.444"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 07:40:21.445" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220705 07:40:21.444" endtime="20220705 07:40:21.445"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 07:40:21.681" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 07:40:21.445" endtime="20220705 07:40:21.681"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 07:40:21.681" endtime="20220705 07:40:21.681"/>
</return>
<msg timestamp="20220705 07:40:21.681" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 07:40:21.443" endtime="20220705 07:40:21.681"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 07:40:21.681" endtime="20220705 07:40:21.681"/>
</return>
<msg timestamp="20220705 07:40:21.682" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 07:40:21.442" endtime="20220705 07:40:21.682"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>board</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 07:40:21.682" endtime="20220705 07:40:21.686"/>
</kw>
<status status="PASS" starttime="20220705 07:40:21.682" endtime="20220705 07:40:21.686"/>
</kw>
<kw name="Update A Board" library="Board">
<arg>${response.json()}[id]</arg>
<arg>name</arg>
<arg>NewName</arg>
<doc>Updates the board with the given ID
optional_args: name, desc, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 07:40:21.687" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 07:40:21.687" endtime="20220705 07:40:21.687"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 07:40:21.687" endtime="20220705 07:40:21.687"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 07:40:21.688" level="INFO">${url} = boards/62c3eae5a80b2446d321ff12</msg>
<status status="PASS" starttime="20220705 07:40:21.687" endtime="20220705 07:40:21.688"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 07:40:21.847" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 07:40:21.688" endtime="20220705 07:40:21.847"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 07:40:21.847" endtime="20220705 07:40:21.848"/>
</return>
<msg timestamp="20220705 07:40:21.848" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 07:40:21.686" endtime="20220705 07:40:21.848"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 07:40:21.848" endtime="20220705 07:40:21.848"/>
</return>
<status status="PASS" starttime="20220705 07:40:21.686" endtime="20220705 07:40:21.848"/>
</kw>
<kw name="Get A Board" library="Board">
<var>${new_response}</var>
<arg>${response.json()}[id]</arg>
<doc>Gets the Board with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 07:40:21.850" level="INFO">${url} = boards/62c3eae5a80b2446d321ff12</msg>
<status status="PASS" starttime="20220705 07:40:21.850" endtime="20220705 07:40:21.850"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 07:40:21.966" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 07:40:21.850" endtime="20220705 07:40:21.966"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 07:40:21.966" endtime="20220705 07:40:21.966"/>
</return>
<msg timestamp="20220705 07:40:21.967" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 07:40:21.849" endtime="20220705 07:40:21.967"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 07:40:21.967" endtime="20220705 07:40:21.967"/>
</return>
<msg timestamp="20220705 07:40:21.967" level="INFO">${new_response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 07:40:21.848" endtime="20220705 07:40:21.967"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${new_response}</arg>
<arg>board</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 07:40:21.968" endtime="20220705 07:40:21.972"/>
</kw>
<status status="PASS" starttime="20220705 07:40:21.967" endtime="20220705 07:40:21.972"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${new_response.json()}[name]</arg>
<arg>NewName</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220705 07:40:21.972" endtime="20220705 07:40:21.973"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${response.json()}[id]</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${response.json()}[id]</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 07:40:21.975" level="INFO">${url} = boards/62c3eae5a80b2446d321ff12</msg>
<status status="PASS" starttime="20220705 07:40:21.975" endtime="20220705 07:40:21.975"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 07:40:22.396" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 07:40:21.975" endtime="20220705 07:40:22.396"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 07:40:22.396" endtime="20220705 07:40:22.396"/>
</return>
<msg timestamp="20220705 07:40:22.396" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 07:40:21.974" endtime="20220705 07:40:22.396"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 07:40:22.396" endtime="20220705 07:40:22.396"/>
</return>
<status status="PASS" starttime="20220705 07:40:21.973" endtime="20220705 07:40:22.396"/>
</kw>
<status status="PASS" starttime="20220705 07:40:21.973" endtime="20220705 07:40:22.397"/>
</kw>
<doc>Verify that a board's name can be updated through API</doc>
<tag>api</tag>
<tag>board.update</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220705 07:40:21.442" endtime="20220705 07:40:22.397"/>
</test>
<test id="s1-s1-s1-t3" name="DELETE A Board" line="27">
<kw name="Create A Board" library="Board">
<var>${response}</var>
<arg>NewBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 07:40:22.399" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 07:40:22.399" endtime="20220705 07:40:22.399"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 07:40:22.399" endtime="20220705 07:40:22.399"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 07:40:22.400" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220705 07:40:22.399" endtime="20220705 07:40:22.400"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 07:40:22.649" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 07:40:22.400" endtime="20220705 07:40:22.649"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 07:40:22.649" endtime="20220705 07:40:22.649"/>
</return>
<msg timestamp="20220705 07:40:22.649" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 07:40:22.398" endtime="20220705 07:40:22.649"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 07:40:22.649" endtime="20220705 07:40:22.649"/>
</return>
<msg timestamp="20220705 07:40:22.650" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 07:40:22.398" endtime="20220705 07:40:22.650"/>
</kw>
<kw name="Delete A Board" library="Board">
<arg>${response.json()}[id]</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 07:40:22.652" level="INFO">${url} = boards/62c3eae6978fc6866b8cacb9</msg>
<status status="PASS" starttime="20220705 07:40:22.651" endtime="20220705 07:40:22.652"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 07:40:23.084" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 07:40:22.652" endtime="20220705 07:40:23.084"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 07:40:23.084" endtime="20220705 07:40:23.084"/>
</return>
<msg timestamp="20220705 07:40:23.084" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 07:40:22.651" endtime="20220705 07:40:23.084"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 07:40:23.084" endtime="20220705 07:40:23.084"/>
</return>
<status status="PASS" starttime="20220705 07:40:22.650" endtime="20220705 07:40:23.085"/>
</kw>
<kw name="Get A Board" library="Board">
<arg>${response.json()}[id]</arg>
<arg>status_code=404</arg>
<doc>Gets the Board with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 07:40:23.087" level="INFO">${url} = boards/62c3eae6978fc6866b8cacb9</msg>
<status status="PASS" starttime="20220705 07:40:23.086" endtime="20220705 07:40:23.087"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 07:40:23.190" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220705 07:40:23.087" endtime="20220705 07:40:23.190"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 07:40:23.190" endtime="20220705 07:40:23.190"/>
</return>
<msg timestamp="20220705 07:40:23.190" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220705 07:40:23.086" endtime="20220705 07:40:23.190"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 07:40:23.190" endtime="20220705 07:40:23.190"/>
</return>
<status status="PASS" starttime="20220705 07:40:23.085" endtime="20220705 07:40:23.191"/>
</kw>
<doc>Verify that a board can be deleted through API</doc>
<tag>api</tag>
<tag>board.delete</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220705 07:40:22.397" endtime="20220705 07:40:23.191"/>
</test>
<test id="s1-s1-s1-t4" name="GET Information of A Board" line="34">
<kw name="Create A Board" library="Board">
<var>${response}</var>
<arg>BoardTest</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 07:40:23.193" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 07:40:23.193" endtime="20220705 07:40:23.193"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 07:40:23.193" endtime="20220705 07:40:23.193"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 07:40:23.194" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220705 07:40:23.194" endtime="20220705 07:40:23.194"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 07:40:23.426" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 07:40:23.194" endtime="20220705 07:40:23.426"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 07:40:23.426" endtime="20220705 07:40:23.426"/>
</return>
<msg timestamp="20220705 07:40:23.427" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 07:40:23.192" endtime="20220705 07:40:23.427"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 07:40:23.427" endtime="20220705 07:40:23.427"/>
</return>
<msg timestamp="20220705 07:40:23.427" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 07:40:23.192" endtime="20220705 07:40:23.427"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>board</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 07:40:23.428" endtime="20220705 07:40:23.432"/>
</kw>
<status status="PASS" starttime="20220705 07:40:23.427" endtime="20220705 07:40:23.432"/>
</kw>
<kw name="Get A Board" library="Board">
<var>${response2}</var>
<arg>${response.json()}[id]</arg>
<doc>Gets the Board with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 07:40:23.433" level="INFO">${url} = boards/62c3eae7229ab48649666999</msg>
<status status="PASS" starttime="20220705 07:40:23.433" endtime="20220705 07:40:23.433"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 07:40:23.547" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 07:40:23.434" endtime="20220705 07:40:23.547"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 07:40:23.547" endtime="20220705 07:40:23.547"/>
</return>
<msg timestamp="20220705 07:40:23.547" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 07:40:23.433" endtime="20220705 07:40:23.547"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 07:40:23.547" endtime="20220705 07:40:23.547"/>
</return>
<msg timestamp="20220705 07:40:23.548" level="INFO">${response2} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 07:40:23.432" endtime="20220705 07:40:23.548"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response2}</arg>
<arg>board</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 07:40:23.548" endtime="20220705 07:40:23.552"/>
</kw>
<status status="PASS" starttime="20220705 07:40:23.548" endtime="20220705 07:40:23.552"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${response2.json()}[name]</arg>
<arg>BoardTest</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220705 07:40:23.552" endtime="20220705 07:40:23.553"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${response.json()}[id]</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${response.json()}[id]</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 07:40:23.555" level="INFO">${url} = boards/62c3eae7229ab48649666999</msg>
<status status="PASS" starttime="20220705 07:40:23.555" endtime="20220705 07:40:23.555"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 07:40:23.946" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 07:40:23.555" endtime="20220705 07:40:23.946"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 07:40:23.946" endtime="20220705 07:40:23.946"/>
</return>
<msg timestamp="20220705 07:40:23.946" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 07:40:23.554" endtime="20220705 07:40:23.946"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 07:40:23.947" endtime="20220705 07:40:23.947"/>
</return>
<status status="PASS" starttime="20220705 07:40:23.553" endtime="20220705 07:40:23.947"/>
</kw>
<status status="PASS" starttime="20220705 07:40:23.553" endtime="20220705 07:40:23.947"/>
</kw>
<doc>Verify that a board's information can be accesed through API</doc>
<tag>api</tag>
<tag>board.get</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220705 07:40:23.191" endtime="20220705 07:40:23.947"/>
</test>
<test id="s1-s1-s1-t5" name="UPDATE a Board's description" line="45">
<kw name="Create A Board" library="Board">
<var>${response}</var>
<arg>NewBoardForTest</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 07:40:23.949" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 07:40:23.949" endtime="20220705 07:40:23.950"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 07:40:23.950" endtime="20220705 07:40:23.950"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 07:40:23.951" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220705 07:40:23.950" endtime="20220705 07:40:23.951"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 07:40:24.199" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 07:40:23.951" endtime="20220705 07:40:24.199"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 07:40:24.199" endtime="20220705 07:40:24.199"/>
</return>
<msg timestamp="20220705 07:40:24.199" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 07:40:23.949" endtime="20220705 07:40:24.199"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 07:40:24.199" endtime="20220705 07:40:24.199"/>
</return>
<msg timestamp="20220705 07:40:24.200" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 07:40:23.948" endtime="20220705 07:40:24.200"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>board</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 07:40:24.200" endtime="20220705 07:40:24.204"/>
</kw>
<status status="PASS" starttime="20220705 07:40:24.200" endtime="20220705 07:40:24.204"/>
</kw>
<kw name="Update A Board" library="Board">
<arg>${response.json()}[id]</arg>
<arg>desc</arg>
<arg>sampleDescription</arg>
<doc>Updates the board with the given ID
optional_args: name, desc, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 07:40:24.205" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 07:40:24.205" endtime="20220705 07:40:24.205"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 07:40:24.205" endtime="20220705 07:40:24.205"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 07:40:24.206" level="INFO">${url} = boards/62c3eae834dc8f2be8f49492</msg>
<status status="PASS" starttime="20220705 07:40:24.206" endtime="20220705 07:40:24.206"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 07:40:24.361" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 07:40:24.206" endtime="20220705 07:40:24.361"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 07:40:24.361" endtime="20220705 07:40:24.361"/>
</return>
<msg timestamp="20220705 07:40:24.361" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 07:40:24.205" endtime="20220705 07:40:24.361"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 07:40:24.361" endtime="20220705 07:40:24.361"/>
</return>
<status status="PASS" starttime="20220705 07:40:24.204" endtime="20220705 07:40:24.361"/>
</kw>
<kw name="Get A Board" library="Board">
<var>${new_response}</var>
<arg>${response.json()}[id]</arg>
<doc>Gets the Board with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 07:40:24.363" level="INFO">${url} = boards/62c3eae834dc8f2be8f49492</msg>
<status status="PASS" starttime="20220705 07:40:24.363" endtime="20220705 07:40:24.363"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 07:40:24.476" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 07:40:24.363" endtime="20220705 07:40:24.476"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 07:40:24.476" endtime="20220705 07:40:24.476"/>
</return>
<msg timestamp="20220705 07:40:24.477" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 07:40:24.362" endtime="20220705 07:40:24.477"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 07:40:24.477" endtime="20220705 07:40:24.477"/>
</return>
<msg timestamp="20220705 07:40:24.477" level="INFO">${new_response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 07:40:24.361" endtime="20220705 07:40:24.477"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${new_response.json()}[desc]</arg>
<arg>sampleDescription</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220705 07:40:24.477" endtime="20220705 07:40:24.478"/>
</kw>
<kw name="Update A Board" library="Board">
<arg>${response.json()}[id]</arg>
<arg>desc</arg>
<arg>updatedDescription</arg>
<doc>Updates the board with the given ID
optional_args: name, desc, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 07:40:24.480" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 07:40:24.480" endtime="20220705 07:40:24.480"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 07:40:24.480" endtime="20220705 07:40:24.480"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 07:40:24.481" level="INFO">${url} = boards/62c3eae834dc8f2be8f49492</msg>
<status status="PASS" starttime="20220705 07:40:24.480" endtime="20220705 07:40:24.481"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 07:40:24.629" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 07:40:24.481" endtime="20220705 07:40:24.629"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 07:40:24.629" endtime="20220705 07:40:24.629"/>
</return>
<msg timestamp="20220705 07:40:24.629" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 07:40:24.479" endtime="20220705 07:40:24.629"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 07:40:24.630" endtime="20220705 07:40:24.630"/>
</return>
<status status="PASS" starttime="20220705 07:40:24.478" endtime="20220705 07:40:24.630"/>
</kw>
<kw name="Get A Board" library="Board">
<var>${new_response2}</var>
<arg>${response.json()}[id]</arg>
<doc>Gets the Board with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 07:40:24.632" level="INFO">${url} = boards/62c3eae834dc8f2be8f49492</msg>
<status status="PASS" starttime="20220705 07:40:24.631" endtime="20220705 07:40:24.632"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 07:40:24.750" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 07:40:24.632" endtime="20220705 07:40:24.750"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 07:40:24.750" endtime="20220705 07:40:24.751"/>
</return>
<msg timestamp="20220705 07:40:24.751" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 07:40:24.631" endtime="20220705 07:40:24.751"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 07:40:24.751" endtime="20220705 07:40:24.751"/>
</return>
<msg timestamp="20220705 07:40:24.751" level="INFO">${new_response2} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 07:40:24.630" endtime="20220705 07:40:24.751"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${new_response2.json()}[desc]</arg>
<arg>updatedDescription</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220705 07:40:24.751" endtime="20220705 07:40:24.752"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${response.json()}[id]</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${response.json()}[id]</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 07:40:24.755" level="INFO">${url} = boards/62c3eae834dc8f2be8f49492</msg>
<status status="PASS" starttime="20220705 07:40:24.754" endtime="20220705 07:40:24.755"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 07:40:25.189" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 07:40:24.755" endtime="20220705 07:40:25.189"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 07:40:25.189" endtime="20220705 07:40:25.189"/>
</return>
<msg timestamp="20220705 07:40:25.189" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 07:40:24.754" endtime="20220705 07:40:25.189"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 07:40:25.189" endtime="20220705 07:40:25.189"/>
</return>
<status status="PASS" starttime="20220705 07:40:24.753" endtime="20220705 07:40:25.190"/>
</kw>
<status status="PASS" starttime="20220705 07:40:24.752" endtime="20220705 07:40:25.190"/>
</kw>
<doc>Verify that a board's description can be updated through API</doc>
<tag>api</tag>
<tag>board.update</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220705 07:40:23.947" endtime="20220705 07:40:25.190"/>
</test>
<kw name="Delete All Sessions" library="request_own_library" type="TEARDOWN">
<status status="PASS" starttime="20220705 07:40:25.191" endtime="20220705 07:40:25.192"/>
</kw>
<doc>Example Test with Trello API Boards</doc>
<status status="PASS" starttime="20220705 07:40:20.537" endtime="20220705 07:40:25.193"/>
</suite>
<suite id="s1-s1-s2" name="Trello Api Cards Tests" source="/trello/api/trello_api_cards_tests.robot">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Create Trello Session</arg>
<arg>Setup Board And List</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Create Trello Session" library="TrelloAPI">
<doc>Creates a Trello Session</doc>
<kw name="Create Session" library="request_own_library">
<arg>${API_BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<status status="PASS" starttime="20220705 07:40:25.204" endtime="20220705 07:40:25.204"/>
</kw>
<status status="PASS" starttime="20220705 07:40:25.203" endtime="20220705 07:40:25.204"/>
</kw>
<kw name="Setup Board And List">
<doc>Create a board and save its ID and its first list's ID</doc>
<kw name="Create A Board" library="Board">
<var>${BOARD}</var>
<arg>TestBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 07:40:25.205" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 07:40:25.205" endtime="20220705 07:40:25.205"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 07:40:25.205" endtime="20220705 07:40:25.205"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 07:40:25.206" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220705 07:40:25.206" endtime="20220705 07:40:25.206"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 07:40:25.476" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 07:40:25.206" endtime="20220705 07:40:25.476"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 07:40:25.476" endtime="20220705 07:40:25.476"/>
</return>
<msg timestamp="20220705 07:40:25.476" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 07:40:25.205" endtime="20220705 07:40:25.476"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 07:40:25.476" endtime="20220705 07:40:25.476"/>
</return>
<msg timestamp="20220705 07:40:25.476" level="INFO">${BOARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 07:40:25.205" endtime="20220705 07:40:25.476"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_BOARD_ID}</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220705 07:40:25.477" level="INFO">${TEST_SUITE_BOARD_ID} = 62c3eae9d8c8f88e66727fba</msg>
<status status="PASS" starttime="20220705 07:40:25.477" endtime="20220705 07:40:25.477"/>
</kw>
<kw name="Get Lists On A Board" library="Board">
<var>${LISTS}</var>
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Get all the lists in a board</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>lists_on_board</arg>
<arg>${id}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 07:40:25.479" level="INFO">${url} = boards/62c3eae9d8c8f88e66727fba/lists/</msg>
<status status="PASS" starttime="20220705 07:40:25.478" endtime="20220705 07:40:25.479"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 07:40:25.600" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 07:40:25.479" endtime="20220705 07:40:25.600"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 07:40:25.600" endtime="20220705 07:40:25.600"/>
</return>
<msg timestamp="20220705 07:40:25.600" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 07:40:25.478" endtime="20220705 07:40:25.601"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 07:40:25.601" endtime="20220705 07:40:25.601"/>
</return>
<msg timestamp="20220705 07:40:25.601" level="INFO">${LISTS} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 07:40:25.478" endtime="20220705 07:40:25.601"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_LIST_ID}</arg>
<arg>${LISTS.json()}[0][id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220705 07:40:25.602" level="INFO">${TEST_SUITE_LIST_ID} = 62c3eae9d8c8f88e66727fc1</msg>
<status status="PASS" starttime="20220705 07:40:25.601" endtime="20220705 07:40:25.602"/>
</kw>
<status status="PASS" starttime="20220705 07:40:25.204" endtime="20220705 07:40:25.602"/>
</kw>
<status status="PASS" starttime="20220705 07:40:25.203" endtime="20220705 07:40:25.602"/>
</kw>
<test id="s1-s1-s2-t1" name="Verify A Card Can Be Created" line="13">
<kw name="Create A Card" library="Card">
<var>${response}</var>
<arg>name</arg>
<arg>RFCard2</arg>
<doc>Creates a new card in the given list.
required_args: listId
optional_args: name, desc, pos, idCardSource, idLabels, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>@{optional_args}</arg>
<arg>idList</arg>
<arg>${idList}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 07:40:25.604" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 07:40:25.603" endtime="20220705 07:40:25.604"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 07:40:25.604" endtime="20220705 07:40:25.604"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 07:40:25.605" level="INFO">${url} = cards/</msg>
<status status="PASS" starttime="20220705 07:40:25.604" endtime="20220705 07:40:25.605"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 07:40:25.856" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 07:40:25.605" endtime="20220705 07:40:25.856"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 07:40:25.856" endtime="20220705 07:40:25.856"/>
</return>
<msg timestamp="20220705 07:40:25.856" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 07:40:25.603" endtime="20220705 07:40:25.856"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 07:40:25.856" endtime="20220705 07:40:25.856"/>
</return>
<msg timestamp="20220705 07:40:25.856" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 07:40:25.603" endtime="20220705 07:40:25.856"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>card</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 07:40:25.857" endtime="20220705 07:40:25.862"/>
</kw>
<status status="PASS" starttime="20220705 07:40:25.857" endtime="20220705 07:40:25.862"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 07:40:25.862" endtime="20220705 07:40:25.862"/>
</return>
<msg timestamp="20220705 07:40:25.863" level="INFO">${CARD_ID} = 62c3eae93792bc6098bae2cd</msg>
<status status="PASS" starttime="20220705 07:40:25.862" endtime="20220705 07:40:25.863"/>
</kw>
<kw name="Get A Card" library="Card">
<var>${response}</var>
<arg>${CARD_ID}</arg>
<doc>Gets the card with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 07:40:25.864" level="INFO">${url} = cards/62c3eae93792bc6098bae2cd</msg>
<status status="PASS" starttime="20220705 07:40:25.864" endtime="20220705 07:40:25.864"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 07:40:25.993" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 07:40:25.864" endtime="20220705 07:40:25.993"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 07:40:25.993" endtime="20220705 07:40:25.993"/>
</return>
<msg timestamp="20220705 07:40:25.993" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 07:40:25.863" endtime="20220705 07:40:25.993"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 07:40:25.993" endtime="20220705 07:40:25.993"/>
</return>
<msg timestamp="20220705 07:40:25.994" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 07:40:25.863" endtime="20220705 07:40:25.994"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_NAME}</var>
<arg>${response}</arg>
<arg>name</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 07:40:25.994" endtime="20220705 07:40:25.994"/>
</return>
<msg timestamp="20220705 07:40:25.995" level="INFO">${CARD_NAME} = RFCard2</msg>
<status status="PASS" starttime="20220705 07:40:25.994" endtime="20220705 07:40:25.995"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${CARD_NAME}</arg>
<arg>RFCard2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220705 07:40:25.995" endtime="20220705 07:40:25.995"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Card</arg>
<arg>${CARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Card" library="Card">
<arg>${CARD_ID}</arg>
<doc>Deletes the card with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 07:40:25.997" level="INFO">${url} = cards/62c3eae93792bc6098bae2cd</msg>
<status status="PASS" starttime="20220705 07:40:25.997" endtime="20220705 07:40:25.997"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 07:40:26.214" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 07:40:25.997" endtime="20220705 07:40:26.214"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 07:40:26.214" endtime="20220705 07:40:26.214"/>
</return>
<msg timestamp="20220705 07:40:26.214" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 07:40:25.996" endtime="20220705 07:40:26.214"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 07:40:26.214" endtime="20220705 07:40:26.214"/>
</return>
<status status="PASS" starttime="20220705 07:40:25.996" endtime="20220705 07:40:26.214"/>
</kw>
<status status="PASS" starttime="20220705 07:40:25.996" endtime="20220705 07:40:26.214"/>
</kw>
<doc>Verify that a card can be created through API</doc>
<tag>api</tag>
<tag>card.create</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220705 07:40:25.602" endtime="20220705 07:40:26.215"/>
</test>
<test id="s1-s1-s2-t2" name="Verify A Card Can Be Closed" line="24">
<kw name="Create A Card" library="Card">
<var>${response}</var>
<doc>Creates a new card in the given list.
required_args: listId
optional_args: name, desc, pos, idCardSource, idLabels, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>@{optional_args}</arg>
<arg>idList</arg>
<arg>${idList}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 07:40:26.218" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 07:40:26.217" endtime="20220705 07:40:26.218"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 07:40:26.218" endtime="20220705 07:40:26.218"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 07:40:26.219" level="INFO">${url} = cards/</msg>
<status status="PASS" starttime="20220705 07:40:26.218" endtime="20220705 07:40:26.219"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 07:40:26.459" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 07:40:26.219" endtime="20220705 07:40:26.459"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 07:40:26.459" endtime="20220705 07:40:26.460"/>
</return>
<msg timestamp="20220705 07:40:26.460" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 07:40:26.217" endtime="20220705 07:40:26.460"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 07:40:26.460" endtime="20220705 07:40:26.460"/>
</return>
<msg timestamp="20220705 07:40:26.460" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 07:40:26.216" endtime="20220705 07:40:26.460"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 07:40:26.461" endtime="20220705 07:40:26.461"/>
</return>
<msg timestamp="20220705 07:40:26.462" level="INFO">${CARD_ID} = 62c3eaea01f71b19bb0fb0eb</msg>
<status status="PASS" starttime="20220705 07:40:26.460" endtime="20220705 07:40:26.462"/>
</kw>
<kw name="Archive A Card" library="Card">
<arg>${CARD_ID}</arg>
<doc>Modifies the card status to closed.</doc>
<kw name="Update A Card" library="Card">
<var>${response}</var>
<arg>${id}</arg>
<arg>closed</arg>
<arg>true</arg>
<arg>status_code=${status_code}</arg>
<doc>Updates the card with the given ID
optional_args: name, desc, closed, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<arg>status_code=${status_code}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 07:40:26.464" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 07:40:26.464" endtime="20220705 07:40:26.464"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 07:40:26.464" endtime="20220705 07:40:26.464"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 07:40:26.465" level="INFO">${url} = cards/62c3eaea01f71b19bb0fb0eb</msg>
<status status="PASS" starttime="20220705 07:40:26.464" endtime="20220705 07:40:26.465"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 07:40:26.656" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 07:40:26.465" endtime="20220705 07:40:26.656"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 07:40:26.656" endtime="20220705 07:40:26.656"/>
</return>
<msg timestamp="20220705 07:40:26.656" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 07:40:26.463" endtime="20220705 07:40:26.656"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 07:40:26.656" endtime="20220705 07:40:26.656"/>
</return>
<msg timestamp="20220705 07:40:26.656" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 07:40:26.462" endtime="20220705 07:40:26.656"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 07:40:26.657" endtime="20220705 07:40:26.657"/>
</return>
<status status="PASS" starttime="20220705 07:40:26.462" endtime="20220705 07:40:26.657"/>
</kw>
<kw name="Get A Card" library="Card">
<var>${response}</var>
<arg>${CARD_ID}</arg>
<doc>Gets the card with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 07:40:26.658" level="INFO">${url} = cards/62c3eaea01f71b19bb0fb0eb</msg>
<status status="PASS" starttime="20220705 07:40:26.658" endtime="20220705 07:40:26.658"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 07:40:26.797" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 07:40:26.658" endtime="20220705 07:40:26.797"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 07:40:26.797" endtime="20220705 07:40:26.797"/>
</return>
<msg timestamp="20220705 07:40:26.797" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 07:40:26.657" endtime="20220705 07:40:26.797"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 07:40:26.797" endtime="20220705 07:40:26.797"/>
</return>
<msg timestamp="20220705 07:40:26.798" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 07:40:26.657" endtime="20220705 07:40:26.798"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_CLOSED}</var>
<arg>${response}</arg>
<arg>closed</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 07:40:26.798" endtime="20220705 07:40:26.798"/>
</return>
<msg timestamp="20220705 07:40:26.799" level="INFO">${CARD_CLOSED} = True</msg>
<status status="PASS" starttime="20220705 07:40:26.798" endtime="20220705 07:40:26.799"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${CARD_CLOSED}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220705 07:40:26.799" endtime="20220705 07:40:26.799"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Card</arg>
<arg>${CARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Card" library="Card">
<arg>${CARD_ID}</arg>
<doc>Deletes the card with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 07:40:26.801" level="INFO">${url} = cards/62c3eaea01f71b19bb0fb0eb</msg>
<status status="PASS" starttime="20220705 07:40:26.801" endtime="20220705 07:40:26.801"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 07:40:27.026" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 07:40:26.801" endtime="20220705 07:40:27.026"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 07:40:27.026" endtime="20220705 07:40:27.026"/>
</return>
<msg timestamp="20220705 07:40:27.027" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 07:40:26.800" endtime="20220705 07:40:27.027"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 07:40:27.027" endtime="20220705 07:40:27.027"/>
</return>
<status status="PASS" starttime="20220705 07:40:26.800" endtime="20220705 07:40:27.027"/>
</kw>
<status status="PASS" starttime="20220705 07:40:26.800" endtime="20220705 07:40:27.027"/>
</kw>
<doc>Verify that a card can be closed through API</doc>
<tag>api</tag>
<tag>card.close</tag>
<tag>regression</tag>
<status status="PASS" starttime="20220705 07:40:26.215" endtime="20220705 07:40:27.027"/>
</test>
<test id="s1-s1-s2-t3" name="Verify A Card Can Be Deleted" line="35">
<kw name="Create A Card" library="Card">
<var>${response}</var>
<doc>Creates a new card in the given list.
required_args: listId
optional_args: name, desc, pos, idCardSource, idLabels, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>@{optional_args}</arg>
<arg>idList</arg>
<arg>${idList}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 07:40:27.030" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 07:40:27.030" endtime="20220705 07:40:27.030"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 07:40:27.030" endtime="20220705 07:40:27.031"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 07:40:27.031" level="INFO">${url} = cards/</msg>
<status status="PASS" starttime="20220705 07:40:27.031" endtime="20220705 07:40:27.031"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 07:40:27.255" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 07:40:27.032" endtime="20220705 07:40:27.255"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 07:40:27.255" endtime="20220705 07:40:27.255"/>
</return>
<msg timestamp="20220705 07:40:27.256" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 07:40:27.029" endtime="20220705 07:40:27.256"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 07:40:27.256" endtime="20220705 07:40:27.256"/>
</return>
<msg timestamp="20220705 07:40:27.256" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 07:40:27.028" endtime="20220705 07:40:27.256"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 07:40:27.257" endtime="20220705 07:40:27.257"/>
</return>
<msg timestamp="20220705 07:40:27.257" level="INFO">${CARD_ID} = 62c3eaeb0ab6562246be0ddd</msg>
<status status="PASS" starttime="20220705 07:40:27.256" endtime="20220705 07:40:27.257"/>
</kw>
<kw name="Delete A Card" library="Card">
<var>${response}</var>
<arg>${CARD_ID}</arg>
<doc>Deletes the card with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 07:40:27.258" level="INFO">${url} = cards/62c3eaeb0ab6562246be0ddd</msg>
<status status="PASS" starttime="20220705 07:40:27.258" endtime="20220705 07:40:27.258"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 07:40:27.489" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 07:40:27.259" endtime="20220705 07:40:27.489"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 07:40:27.489" endtime="20220705 07:40:27.489"/>
</return>
<msg timestamp="20220705 07:40:27.490" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 07:40:27.258" endtime="20220705 07:40:27.490"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 07:40:27.490" endtime="20220705 07:40:27.490"/>
</return>
<msg timestamp="20220705 07:40:27.490" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 07:40:27.257" endtime="20220705 07:40:27.490"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>delete</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 07:40:27.491" endtime="20220705 07:40:27.492"/>
</kw>
<status status="PASS" starttime="20220705 07:40:27.490" endtime="20220705 07:40:27.492"/>
</kw>
<kw name="Get A Card" library="Card">
<arg>${CARD_ID}</arg>
<arg>status_code=404</arg>
<doc>Gets the card with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 07:40:27.493" level="INFO">${url} = cards/62c3eaeb0ab6562246be0ddd</msg>
<status status="PASS" starttime="20220705 07:40:27.493" endtime="20220705 07:40:27.493"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 07:40:27.600" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220705 07:40:27.493" endtime="20220705 07:40:27.601"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 07:40:27.601" endtime="20220705 07:40:27.601"/>
</return>
<msg timestamp="20220705 07:40:27.601" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220705 07:40:27.493" endtime="20220705 07:40:27.601"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 07:40:27.601" endtime="20220705 07:40:27.601"/>
</return>
<status status="PASS" starttime="20220705 07:40:27.492" endtime="20220705 07:40:27.601"/>
</kw>
<doc>Verify that a card can be deleted through API</doc>
<tag>api</tag>
<tag>card.delete</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220705 07:40:27.028" endtime="20220705 07:40:27.601"/>
</test>
<test id="s1-s1-s2-t4" name="Verify A Card Can Be Updated" line="44">
<kw name="Create A Card" library="Card">
<var>${response}</var>
<arg>name</arg>
<arg>RFCard4</arg>
<doc>Creates a new card in the given list.
required_args: listId
optional_args: name, desc, pos, idCardSource, idLabels, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>@{optional_args}</arg>
<arg>idList</arg>
<arg>${idList}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 07:40:27.604" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 07:40:27.604" endtime="20220705 07:40:27.604"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 07:40:27.604" endtime="20220705 07:40:27.604"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 07:40:27.605" level="INFO">${url} = cards/</msg>
<status status="PASS" starttime="20220705 07:40:27.604" endtime="20220705 07:40:27.605"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 07:40:27.811" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 07:40:27.605" endtime="20220705 07:40:27.811"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 07:40:27.811" endtime="20220705 07:40:27.811"/>
</return>
<msg timestamp="20220705 07:40:27.811" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 07:40:27.603" endtime="20220705 07:40:27.811"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 07:40:27.811" endtime="20220705 07:40:27.811"/>
</return>
<msg timestamp="20220705 07:40:27.812" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 07:40:27.603" endtime="20220705 07:40:27.812"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 07:40:27.812" endtime="20220705 07:40:27.812"/>
</return>
<msg timestamp="20220705 07:40:27.813" level="INFO">${CARD_ID} = 62c3eaebc5fa8d6d4b893310</msg>
<status status="PASS" starttime="20220705 07:40:27.812" endtime="20220705 07:40:27.813"/>
</kw>
<kw name="Update A Card" library="Card">
<var>${response}</var>
<arg>${CARD_ID}</arg>
<arg>name</arg>
<arg>RFCard5</arg>
<arg>desc</arg>
<arg>Description</arg>
<doc>Updates the card with the given ID
optional_args: name, desc, closed, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<arg>status_code=${status_code}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 07:40:27.814" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 07:40:27.814" endtime="20220705 07:40:27.815"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 07:40:27.815" endtime="20220705 07:40:27.815"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 07:40:27.815" level="INFO">${url} = cards/62c3eaebc5fa8d6d4b893310</msg>
<status status="PASS" starttime="20220705 07:40:27.815" endtime="20220705 07:40:27.815"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 07:40:28.047" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 07:40:27.815" endtime="20220705 07:40:28.047"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 07:40:28.047" endtime="20220705 07:40:28.047"/>
</return>
<msg timestamp="20220705 07:40:28.048" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 07:40:27.814" endtime="20220705 07:40:28.048"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 07:40:28.048" endtime="20220705 07:40:28.048"/>
</return>
<msg timestamp="20220705 07:40:28.048" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 07:40:27.813" endtime="20220705 07:40:28.048"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>card</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 07:40:28.048" endtime="20220705 07:40:28.053"/>
</kw>
<status status="PASS" starttime="20220705 07:40:28.048" endtime="20220705 07:40:28.053"/>
</kw>
<kw name="Get A Card" library="Card">
<var>${response}</var>
<arg>${CARD_ID}</arg>
<doc>Gets the card with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 07:40:28.054" level="INFO">${url} = cards/62c3eaebc5fa8d6d4b893310</msg>
<status status="PASS" starttime="20220705 07:40:28.054" endtime="20220705 07:40:28.054"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 07:40:28.180" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 07:40:28.054" endtime="20220705 07:40:28.180"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 07:40:28.180" endtime="20220705 07:40:28.181"/>
</return>
<msg timestamp="20220705 07:40:28.181" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 07:40:28.054" endtime="20220705 07:40:28.181"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 07:40:28.181" endtime="20220705 07:40:28.181"/>
</return>
<msg timestamp="20220705 07:40:28.181" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 07:40:28.053" endtime="20220705 07:40:28.181"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_NAME}</var>
<arg>${response}</arg>
<arg>name</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 07:40:28.182" endtime="20220705 07:40:28.182"/>
</return>
<msg timestamp="20220705 07:40:28.183" level="INFO">${CARD_NAME} = RFCard5</msg>
<status status="PASS" starttime="20220705 07:40:28.181" endtime="20220705 07:40:28.183"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_DESC}</var>
<arg>${response}</arg>
<arg>desc</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 07:40:28.183" endtime="20220705 07:40:28.183"/>
</return>
<msg timestamp="20220705 07:40:28.184" level="INFO">${CARD_DESC} = Description</msg>
<status status="PASS" starttime="20220705 07:40:28.183" endtime="20220705 07:40:28.184"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${CARD_NAME}</arg>
<arg>RFCard5</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220705 07:40:28.184" endtime="20220705 07:40:28.184"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${CARD_DESC}</arg>
<arg>Description</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220705 07:40:28.184" endtime="20220705 07:40:28.185"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Card</arg>
<arg>${CARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Card" library="Card">
<arg>${CARD_ID}</arg>
<doc>Deletes the card with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 07:40:28.186" level="INFO">${url} = cards/62c3eaebc5fa8d6d4b893310</msg>
<status status="PASS" starttime="20220705 07:40:28.186" endtime="20220705 07:40:28.186"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 07:40:28.468" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 07:40:28.186" endtime="20220705 07:40:28.468"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 07:40:28.468" endtime="20220705 07:40:28.469"/>
</return>
<msg timestamp="20220705 07:40:28.469" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 07:40:28.186" endtime="20220705 07:40:28.469"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 07:40:28.469" endtime="20220705 07:40:28.469"/>
</return>
<status status="PASS" starttime="20220705 07:40:28.185" endtime="20220705 07:40:28.469"/>
</kw>
<status status="PASS" starttime="20220705 07:40:28.185" endtime="20220705 07:40:28.469"/>
</kw>
<doc>Verify that a card's name and Description can be updated through API</doc>
<tag>api</tag>
<tag>card.update</tag>
<tag>regression</tag>
<status status="PASS" starttime="20220705 07:40:27.602" endtime="20220705 07:40:28.469"/>
</test>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Teardown Board</arg>
<arg>Delete All Sessions</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Teardown Board">
<doc>Delete the board created for this suite</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 07:40:28.473" level="INFO">${url} = boards/62c3eae9d8c8f88e66727fba</msg>
<status status="PASS" starttime="20220705 07:40:28.473" endtime="20220705 07:40:28.473"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 07:40:29.015" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 07:40:28.473" endtime="20220705 07:40:29.015"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 07:40:29.015" endtime="20220705 07:40:29.016"/>
</return>
<msg timestamp="20220705 07:40:29.016" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 07:40:28.472" endtime="20220705 07:40:29.016"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 07:40:29.016" endtime="20220705 07:40:29.016"/>
</return>
<status status="PASS" starttime="20220705 07:40:28.471" endtime="20220705 07:40:29.016"/>
</kw>
<status status="PASS" starttime="20220705 07:40:28.471" endtime="20220705 07:40:29.016"/>
</kw>
<status status="PASS" starttime="20220705 07:40:28.471" endtime="20220705 07:40:29.016"/>
</kw>
<kw name="Delete All Sessions" library="request_own_library">
<status status="PASS" starttime="20220705 07:40:29.016" endtime="20220705 07:40:29.018"/>
</kw>
<status status="PASS" starttime="20220705 07:40:28.471" endtime="20220705 07:40:29.018"/>
</kw>
<doc>Example Test with Trello API Cards</doc>
<status status="PASS" starttime="20220705 07:40:25.195" endtime="20220705 07:40:29.018"/>
</suite>
<suite id="s1-s1-s3" name="Trello Api Checklists Tests" source="/trello/api/trello_api_checklists_tests.robot">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Create Trello Session</arg>
<arg>Setup Board, List And Card</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Create Trello Session" library="TrelloAPI">
<doc>Creates a Trello Session</doc>
<kw name="Create Session" library="request_own_library">
<arg>${API_BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<status status="PASS" starttime="20220705 07:40:29.029" endtime="20220705 07:40:29.029"/>
</kw>
<status status="PASS" starttime="20220705 07:40:29.028" endtime="20220705 07:40:29.029"/>
</kw>
<kw name="Setup Board, List And Card">
<doc>Create a board and save its ID and its first list's ID</doc>
<kw name="Create A Board" library="Board">
<var>${BOARD}</var>
<arg>TestBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 07:40:29.030" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 07:40:29.030" endtime="20220705 07:40:29.030"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 07:40:29.030" endtime="20220705 07:40:29.030"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 07:40:29.031" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220705 07:40:29.030" endtime="20220705 07:40:29.031"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 07:40:29.309" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 07:40:29.031" endtime="20220705 07:40:29.309"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 07:40:29.309" endtime="20220705 07:40:29.309"/>
</return>
<msg timestamp="20220705 07:40:29.309" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 07:40:29.029" endtime="20220705 07:40:29.309"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 07:40:29.309" endtime="20220705 07:40:29.309"/>
</return>
<msg timestamp="20220705 07:40:29.310" level="INFO">${BOARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 07:40:29.029" endtime="20220705 07:40:29.310"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_BOARD_ID}</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220705 07:40:29.311" level="INFO">${TEST_SUITE_BOARD_ID} = 62c3eaed4d98283ffe3caa15</msg>
<status status="PASS" starttime="20220705 07:40:29.310" endtime="20220705 07:40:29.311"/>
</kw>
<kw name="Get Lists On A Board" library="Board">
<var>${LISTS}</var>
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Get all the lists in a board</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>lists_on_board</arg>
<arg>${id}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 07:40:29.312" level="INFO">${url} = boards/62c3eaed4d98283ffe3caa15/lists/</msg>
<status status="PASS" starttime="20220705 07:40:29.312" endtime="20220705 07:40:29.312"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 07:40:29.428" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 07:40:29.312" endtime="20220705 07:40:29.428"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 07:40:29.428" endtime="20220705 07:40:29.428"/>
</return>
<msg timestamp="20220705 07:40:29.429" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 07:40:29.311" endtime="20220705 07:40:29.429"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 07:40:29.429" endtime="20220705 07:40:29.429"/>
</return>
<msg timestamp="20220705 07:40:29.429" level="INFO">${LISTS} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 07:40:29.311" endtime="20220705 07:40:29.429"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_LIST_ID}</arg>
<arg>${LISTS.json()}[0][id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220705 07:40:29.430" level="INFO">${TEST_SUITE_LIST_ID} = 62c3eaed4d98283ffe3caa1c</msg>
<status status="PASS" starttime="20220705 07:40:29.429" endtime="20220705 07:40:29.430"/>
</kw>
<kw name="Create A Card" library="Card">
<var>${CARD}</var>
<arg>name</arg>
<arg>TestCard</arg>
<doc>Creates a new card in the given list.
required_args: listId
optional_args: name, desc, pos, idCardSource, idLabels, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>@{optional_args}</arg>
<arg>idList</arg>
<arg>${idList}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 07:40:29.432" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 07:40:29.432" endtime="20220705 07:40:29.432"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 07:40:29.432" endtime="20220705 07:40:29.432"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 07:40:29.433" level="INFO">${url} = cards/</msg>
<status status="PASS" starttime="20220705 07:40:29.432" endtime="20220705 07:40:29.433"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 07:40:29.694" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 07:40:29.433" endtime="20220705 07:40:29.694"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 07:40:29.694" endtime="20220705 07:40:29.694"/>
</return>
<msg timestamp="20220705 07:40:29.695" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 07:40:29.431" endtime="20220705 07:40:29.695"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 07:40:29.695" endtime="20220705 07:40:29.695"/>
</return>
<msg timestamp="20220705 07:40:29.695" level="INFO">${CARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 07:40:29.430" endtime="20220705 07:40:29.695"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_CARD_ID}</arg>
<arg>${CARD.json()}[id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220705 07:40:29.696" level="INFO">${TEST_SUITE_CARD_ID} = 62c3eaedc2800b5c13ec8790</msg>
<status status="PASS" starttime="20220705 07:40:29.695" endtime="20220705 07:40:29.696"/>
</kw>
<status status="PASS" starttime="20220705 07:40:29.029" endtime="20220705 07:40:29.696"/>
</kw>
<status status="PASS" starttime="20220705 07:40:29.028" endtime="20220705 07:40:29.696"/>
</kw>
<test id="s1-s1-s3-t1" name="Verify A Checklist Can Be Created" line="14">
<kw name="Create A Checklist" library="Checklist">
<var>${response}</var>
<arg>name</arg>
<arg>TestChecklist</arg>
<arg>idCard=${TEST_SUITE_CARD_ID}</arg>
<doc>Creates a new checklist in the given card.
required_args: idCard
optional_args: name, pos, idChecklistSource
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>@{optional_args}</arg>
<arg>idCard</arg>
<arg>${idCard}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 07:40:29.699" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 07:40:29.698" endtime="20220705 07:40:29.699"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 07:40:29.699" endtime="20220705 07:40:29.699"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 07:40:29.700" level="INFO">${url} = checklists/</msg>
<status status="PASS" starttime="20220705 07:40:29.699" endtime="20220705 07:40:29.700"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 07:40:29.881" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 07:40:29.700" endtime="20220705 07:40:29.881"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 07:40:29.881" endtime="20220705 07:40:29.881"/>
</return>
<msg timestamp="20220705 07:40:29.881" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 07:40:29.698" endtime="20220705 07:40:29.882"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 07:40:29.882" endtime="20220705 07:40:29.882"/>
</return>
<msg timestamp="20220705 07:40:29.882" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 07:40:29.697" endtime="20220705 07:40:29.882"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${checklist_id}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 07:40:29.882" endtime="20220705 07:40:29.882"/>
</return>
<msg timestamp="20220705 07:40:29.883" level="INFO">${checklist_id} = 62c3eaed29e2af6a8fec8e52</msg>
<status status="PASS" starttime="20220705 07:40:29.882" endtime="20220705 07:40:29.883"/>
</kw>
<kw name="Get A Checklist" library="Checklist">
<var>${response}</var>
<arg>${checklist_id}</arg>
<doc>Gets the checklist with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 07:40:29.884" level="INFO">${url} = checklists/62c3eaed29e2af6a8fec8e52</msg>
<status status="PASS" starttime="20220705 07:40:29.884" endtime="20220705 07:40:29.884"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 07:40:30.014" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 07:40:29.884" endtime="20220705 07:40:30.014"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 07:40:30.014" endtime="20220705 07:40:30.014"/>
</return>
<msg timestamp="20220705 07:40:30.015" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 07:40:29.884" endtime="20220705 07:40:30.015"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 07:40:30.015" endtime="20220705 07:40:30.015"/>
</return>
<msg timestamp="20220705 07:40:30.015" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 07:40:29.883" endtime="20220705 07:40:30.015"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${checklist_name}</var>
<arg>${response}</arg>
<arg>name</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 07:40:30.015" endtime="20220705 07:40:30.015"/>
</return>
<msg timestamp="20220705 07:40:30.016" level="INFO">${checklist_name} = TestChecklist</msg>
<status status="PASS" starttime="20220705 07:40:30.015" endtime="20220705 07:40:30.016"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${checklist_name}</arg>
<arg>TestChecklist</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220705 07:40:30.016" endtime="20220705 07:40:30.016"/>
</kw>
<kw name="Delete A Checklist" library="Checklist" type="TEARDOWN">
<arg>${checklist_id}</arg>
<doc>Deletes the checklist with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 07:40:30.017" level="INFO">${url} = checklists/62c3eaed29e2af6a8fec8e52</msg>
<status status="PASS" starttime="20220705 07:40:30.017" endtime="20220705 07:40:30.017"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 07:40:30.188" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 07:40:30.017" endtime="20220705 07:40:30.188"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 07:40:30.188" endtime="20220705 07:40:30.188"/>
</return>
<msg timestamp="20220705 07:40:30.189" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 07:40:30.017" endtime="20220705 07:40:30.189"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 07:40:30.189" endtime="20220705 07:40:30.189"/>
</return>
<status status="PASS" starttime="20220705 07:40:30.016" endtime="20220705 07:40:30.189"/>
</kw>
<doc>Verify that a checklist can be created through API</doc>
<tag>api</tag>
<tag>checklist.create</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220705 07:40:29.696" endtime="20220705 07:40:30.189"/>
</test>
<test id="s1-s1-s3-t2" name="Verify A Checklist Can Be Deleted" line="24">
<kw name="Create A Checklist" library="Checklist">
<var>${response}</var>
<arg>name</arg>
<arg>TestChecklist</arg>
<arg>idCard=${TEST_SUITE_CARD_ID}</arg>
<doc>Creates a new checklist in the given card.
required_args: idCard
optional_args: name, pos, idChecklistSource
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>@{optional_args}</arg>
<arg>idCard</arg>
<arg>${idCard}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 07:40:30.192" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 07:40:30.191" endtime="20220705 07:40:30.192"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 07:40:30.192" endtime="20220705 07:40:30.192"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 07:40:30.193" level="INFO">${url} = checklists/</msg>
<status status="PASS" starttime="20220705 07:40:30.192" endtime="20220705 07:40:30.193"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 07:40:30.376" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 07:40:30.193" endtime="20220705 07:40:30.376"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 07:40:30.376" endtime="20220705 07:40:30.376"/>
</return>
<msg timestamp="20220705 07:40:30.376" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 07:40:30.191" endtime="20220705 07:40:30.377"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 07:40:30.377" endtime="20220705 07:40:30.377"/>
</return>
<msg timestamp="20220705 07:40:30.377" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 07:40:30.190" endtime="20220705 07:40:30.377"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${checklist_id}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 07:40:30.377" endtime="20220705 07:40:30.377"/>
</return>
<msg timestamp="20220705 07:40:30.378" level="INFO">${checklist_id} = 62c3eaee70a1048ffc9bd18b</msg>
<status status="PASS" starttime="20220705 07:40:30.377" endtime="20220705 07:40:30.379"/>
</kw>
<kw name="Delete A Checklist" library="Checklist">
<var>${response}</var>
<arg>${checklist_id}</arg>
<doc>Deletes the checklist with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 07:40:30.380" level="INFO">${url} = checklists/62c3eaee70a1048ffc9bd18b</msg>
<status status="PASS" starttime="20220705 07:40:30.380" endtime="20220705 07:40:30.380"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 07:40:30.552" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 07:40:30.380" endtime="20220705 07:40:30.552"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 07:40:30.552" endtime="20220705 07:40:30.552"/>
</return>
<msg timestamp="20220705 07:40:30.552" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 07:40:30.379" endtime="20220705 07:40:30.552"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 07:40:30.553" endtime="20220705 07:40:30.553"/>
</return>
<msg timestamp="20220705 07:40:30.553" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 07:40:30.379" endtime="20220705 07:40:30.553"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>delete</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 07:40:30.553" endtime="20220705 07:40:30.555"/>
</kw>
<status status="PASS" starttime="20220705 07:40:30.553" endtime="20220705 07:40:30.555"/>
</kw>
<kw name="Get A Checklist" library="Checklist">
<arg>${checklist_id}</arg>
<arg>status_code=404</arg>
<doc>Gets the checklist with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 07:40:30.557" level="INFO">${url} = checklists/62c3eaee70a1048ffc9bd18b</msg>
<status status="PASS" starttime="20220705 07:40:30.556" endtime="20220705 07:40:30.557"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 07:40:30.669" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220705 07:40:30.557" endtime="20220705 07:40:30.669"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 07:40:30.669" endtime="20220705 07:40:30.669"/>
</return>
<msg timestamp="20220705 07:40:30.669" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220705 07:40:30.556" endtime="20220705 07:40:30.669"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 07:40:30.669" endtime="20220705 07:40:30.669"/>
</return>
<status status="PASS" starttime="20220705 07:40:30.555" endtime="20220705 07:40:30.670"/>
</kw>
<doc>Verify that a checklist can be deleted through API</doc>
<tag>api</tag>
<tag>checklist.delete</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220705 07:40:30.189" endtime="20220705 07:40:30.670"/>
</test>
<test id="s1-s1-s3-t3" name="Verify A Checklist Can Be Updated" line="33">
<kw name="Create A Checklist" library="Checklist">
<var>${response}</var>
<arg>name</arg>
<arg>TestChecklist</arg>
<arg>idCard=${TEST_SUITE_CARD_ID}</arg>
<doc>Creates a new checklist in the given card.
required_args: idCard
optional_args: name, pos, idChecklistSource
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>@{optional_args}</arg>
<arg>idCard</arg>
<arg>${idCard}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 07:40:30.674" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 07:40:30.673" endtime="20220705 07:40:30.674"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 07:40:30.674" endtime="20220705 07:40:30.675"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 07:40:30.675" level="INFO">${url} = checklists/</msg>
<status status="PASS" starttime="20220705 07:40:30.675" endtime="20220705 07:40:30.675"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 07:40:30.872" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 07:40:30.675" endtime="20220705 07:40:30.872"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 07:40:30.872" endtime="20220705 07:40:30.872"/>
</return>
<msg timestamp="20220705 07:40:30.872" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 07:40:30.672" endtime="20220705 07:40:30.872"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 07:40:30.872" endtime="20220705 07:40:30.872"/>
</return>
<msg timestamp="20220705 07:40:30.872" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 07:40:30.671" endtime="20220705 07:40:30.872"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${checklist_id}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 07:40:30.873" endtime="20220705 07:40:30.873"/>
</return>
<msg timestamp="20220705 07:40:30.874" level="INFO">${checklist_id} = 62c3eaee194cde3bcb75a316</msg>
<status status="PASS" starttime="20220705 07:40:30.873" endtime="20220705 07:40:30.874"/>
</kw>
<kw name="Update A Checklist" library="Checklist">
<var>${response}</var>
<arg>${checklist_id}</arg>
<arg>name</arg>
<arg>TestChecklist2</arg>
<doc>Updates the checklist with the given ID
optional_args: name, pos
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<arg>status_code=${status_code}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 07:40:30.875" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 07:40:30.875" endtime="20220705 07:40:30.875"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 07:40:30.875" endtime="20220705 07:40:30.875"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 07:40:30.876" level="INFO">${url} = checklists/62c3eaee194cde3bcb75a316</msg>
<status status="PASS" starttime="20220705 07:40:30.876" endtime="20220705 07:40:30.876"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 07:40:31.029" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 07:40:30.876" endtime="20220705 07:40:31.029"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 07:40:31.029" endtime="20220705 07:40:31.030"/>
</return>
<msg timestamp="20220705 07:40:31.030" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 07:40:30.874" endtime="20220705 07:40:31.030"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 07:40:31.030" endtime="20220705 07:40:31.030"/>
</return>
<msg timestamp="20220705 07:40:31.030" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 07:40:30.874" endtime="20220705 07:40:31.030"/>
</kw>
<kw name="Get A Checklist" library="Checklist">
<var>${response}</var>
<arg>${checklist_id}</arg>
<doc>Gets the checklist with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 07:40:31.032" level="INFO">${url} = checklists/62c3eaee194cde3bcb75a316</msg>
<status status="PASS" starttime="20220705 07:40:31.031" endtime="20220705 07:40:31.032"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 07:40:31.156" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 07:40:31.032" endtime="20220705 07:40:31.156"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 07:40:31.156" endtime="20220705 07:40:31.156"/>
</return>
<msg timestamp="20220705 07:40:31.157" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 07:40:31.031" endtime="20220705 07:40:31.157"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 07:40:31.157" endtime="20220705 07:40:31.157"/>
</return>
<msg timestamp="20220705 07:40:31.157" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 07:40:31.030" endtime="20220705 07:40:31.157"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${checklist_name}</var>
<arg>${response}</arg>
<arg>name</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 07:40:31.158" endtime="20220705 07:40:31.158"/>
</return>
<msg timestamp="20220705 07:40:31.158" level="INFO">${checklist_name} = TestChecklist2</msg>
<status status="PASS" starttime="20220705 07:40:31.157" endtime="20220705 07:40:31.158"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${checklist_name}</arg>
<arg>TestChecklist2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220705 07:40:31.159" endtime="20220705 07:40:31.159"/>
</kw>
<kw name="Delete A Checklist" library="Checklist" type="TEARDOWN">
<arg>${checklist_id}</arg>
<doc>Deletes the checklist with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 07:40:31.172" level="INFO">${url} = checklists/62c3eaee194cde3bcb75a316</msg>
<status status="PASS" starttime="20220705 07:40:31.172" endtime="20220705 07:40:31.172"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 07:40:31.384" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 07:40:31.172" endtime="20220705 07:40:31.384"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 07:40:31.384" endtime="20220705 07:40:31.384"/>
</return>
<msg timestamp="20220705 07:40:31.384" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 07:40:31.171" endtime="20220705 07:40:31.384"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 07:40:31.384" endtime="20220705 07:40:31.384"/>
</return>
<status status="PASS" starttime="20220705 07:40:31.159" endtime="20220705 07:40:31.384"/>
</kw>
<doc>Verify that a checklist's name can be updated through API</doc>
<tag>api</tag>
<tag>checklist.update</tag>
<tag>regression</tag>
<status status="PASS" starttime="20220705 07:40:30.670" endtime="20220705 07:40:31.384"/>
</test>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Teardown Board</arg>
<arg>Delete All Sessions</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Teardown Board">
<doc>Delete the board created for this suite</doc>
<kw name="Delete A Board" library="Board">
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 07:40:31.386" level="INFO">${url} = boards/62c3eaed4d98283ffe3caa15</msg>
<status status="PASS" starttime="20220705 07:40:31.386" endtime="20220705 07:40:31.386"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 07:40:31.869" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 07:40:31.387" endtime="20220705 07:40:31.869"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 07:40:31.869" endtime="20220705 07:40:31.869"/>
</return>
<msg timestamp="20220705 07:40:31.870" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 07:40:31.386" endtime="20220705 07:40:31.870"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 07:40:31.870" endtime="20220705 07:40:31.870"/>
</return>
<status status="PASS" starttime="20220705 07:40:31.386" endtime="20220705 07:40:31.870"/>
</kw>
<status status="PASS" starttime="20220705 07:40:31.385" endtime="20220705 07:40:31.870"/>
</kw>
<kw name="Delete All Sessions" library="request_own_library">
<status status="PASS" starttime="20220705 07:40:31.870" endtime="20220705 07:40:31.871"/>
</kw>
<status status="PASS" starttime="20220705 07:40:31.385" endtime="20220705 07:40:31.871"/>
</kw>
<doc>Example Test with Trello API Checklists</doc>
<status status="PASS" starttime="20220705 07:40:29.020" endtime="20220705 07:40:31.872"/>
</suite>
<suite id="s1-s1-s4" name="Trello Api Labels Tests" source="/trello/api/trello_api_labels_tests.robot">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Create Trello Session</arg>
<arg>Setup Board And List</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Create Trello Session" library="TrelloAPI">
<doc>Creates a Trello Session</doc>
<kw name="Create Session" library="request_own_library">
<arg>${API_BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<status status="PASS" starttime="20220705 07:40:31.881" endtime="20220705 07:40:31.881"/>
</kw>
<status status="PASS" starttime="20220705 07:40:31.881" endtime="20220705 07:40:31.881"/>
</kw>
<kw name="Setup Board And List">
<doc>Create a board and save its ID and its first list's ID</doc>
<kw name="Create A Board" library="Board">
<var>${BOARD}</var>
<arg>TestBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 07:40:31.882" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 07:40:31.882" endtime="20220705 07:40:31.882"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 07:40:31.882" endtime="20220705 07:40:31.883"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 07:40:31.883" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220705 07:40:31.883" endtime="20220705 07:40:31.883"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 07:40:32.176" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 07:40:31.883" endtime="20220705 07:40:32.176"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 07:40:32.176" endtime="20220705 07:40:32.176"/>
</return>
<msg timestamp="20220705 07:40:32.177" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 07:40:31.882" endtime="20220705 07:40:32.177"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 07:40:32.177" endtime="20220705 07:40:32.177"/>
</return>
<msg timestamp="20220705 07:40:32.177" level="INFO">${BOARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 07:40:31.882" endtime="20220705 07:40:32.177"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_BOARD_ID}</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220705 07:40:32.178" level="INFO">${TEST_SUITE_BOARD_ID} = 62c3eaf01da73c275c4b9c24</msg>
<status status="PASS" starttime="20220705 07:40:32.177" endtime="20220705 07:40:32.178"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${LISTS}</var>
<arg>boards/${TEST_SUITE_BOARD_ID}/lists</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 07:40:32.298" level="INFO">${LISTS} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 07:40:32.178" endtime="20220705 07:40:32.298"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_LIST_ID}</arg>
<arg>${LISTS.json()}[0][id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220705 07:40:32.299" level="INFO">${TEST_SUITE_LIST_ID} = 62c3eaf01da73c275c4b9c2b</msg>
<status status="PASS" starttime="20220705 07:40:32.298" endtime="20220705 07:40:32.299"/>
</kw>
<status status="PASS" starttime="20220705 07:40:31.882" endtime="20220705 07:40:32.299"/>
</kw>
<status status="PASS" starttime="20220705 07:40:31.881" endtime="20220705 07:40:32.299"/>
</kw>
<test id="s1-s1-s4-t1" name="Create and get label on board" line="14">
<kw name="Create A Label" library="Label">
<var>${response}</var>
<arg>name</arg>
<arg>label2</arg>
<arg>color</arg>
<arg>yellow</arg>
<doc>Creates a new label in the given board.
required_args: idBoard
optional_args: name, color
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>idBoard</arg>
<arg>${idBoard}</arg>
<arg>@{optional_args}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 07:40:32.301" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 07:40:32.301" endtime="20220705 07:40:32.301"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 07:40:32.301" endtime="20220705 07:40:32.301"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 07:40:32.302" level="INFO">${url} = labels/</msg>
<status status="PASS" starttime="20220705 07:40:32.301" endtime="20220705 07:40:32.302"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 07:40:32.474" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 07:40:32.302" endtime="20220705 07:40:32.474"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 07:40:32.474" endtime="20220705 07:40:32.474"/>
</return>
<msg timestamp="20220705 07:40:32.474" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 07:40:32.301" endtime="20220705 07:40:32.475"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 07:40:32.475" endtime="20220705 07:40:32.475"/>
</return>
<msg timestamp="20220705 07:40:32.475" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 07:40:32.300" endtime="20220705 07:40:32.475"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>label</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 07:40:32.475" endtime="20220705 07:40:32.477"/>
</kw>
<status status="PASS" starttime="20220705 07:40:32.475" endtime="20220705 07:40:32.478"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${LABEL_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 07:40:32.478" endtime="20220705 07:40:32.478"/>
</return>
<msg timestamp="20220705 07:40:32.479" level="INFO">${LABEL_ID} = 62c3eaf07018e50622fee333</msg>
<status status="PASS" starttime="20220705 07:40:32.478" endtime="20220705 07:40:32.479"/>
</kw>
<kw name="Get A Label" library="Label">
<var>${response}</var>
<arg>${LABEL_ID}</arg>
<doc>Gets the label with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 07:40:32.480" level="INFO">${url} = labels/62c3eaf07018e50622fee333</msg>
<status status="PASS" starttime="20220705 07:40:32.480" endtime="20220705 07:40:32.480"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 07:40:32.595" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 07:40:32.480" endtime="20220705 07:40:32.595"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 07:40:32.595" endtime="20220705 07:40:32.595"/>
</return>
<msg timestamp="20220705 07:40:32.595" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 07:40:32.479" endtime="20220705 07:40:32.596"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 07:40:32.596" endtime="20220705 07:40:32.596"/>
</return>
<msg timestamp="20220705 07:40:32.596" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 07:40:32.479" endtime="20220705 07:40:32.596"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${LABEL_COLOR}</var>
<arg>${response}</arg>
<arg>color</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 07:40:32.596" endtime="20220705 07:40:32.596"/>
</return>
<msg timestamp="20220705 07:40:32.597" level="INFO">${LABEL_COLOR} = yellow</msg>
<status status="PASS" starttime="20220705 07:40:32.596" endtime="20220705 07:40:32.597"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${LABEL_NAME}</var>
<arg>${response}</arg>
<arg>name</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 07:40:32.598" endtime="20220705 07:40:32.598"/>
</return>
<msg timestamp="20220705 07:40:32.598" level="INFO">${LABEL_NAME} = label2</msg>
<status status="PASS" starttime="20220705 07:40:32.597" endtime="20220705 07:40:32.598"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${LABEL_COLOR}</arg>
<arg>yellow</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220705 07:40:32.598" endtime="20220705 07:40:32.599"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${LABEL_NAME}</arg>
<arg>label2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220705 07:40:32.599" endtime="20220705 07:40:32.599"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Label</arg>
<arg>${LABEL_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Label" library="Label">
<arg>${LABEL_ID}</arg>
<doc>Deletes the label with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 07:40:32.601" level="INFO">${url} = labels/62c3eaf07018e50622fee333</msg>
<status status="PASS" starttime="20220705 07:40:32.601" endtime="20220705 07:40:32.601"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 07:40:32.793" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 07:40:32.601" endtime="20220705 07:40:32.793"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 07:40:32.793" endtime="20220705 07:40:32.793"/>
</return>
<msg timestamp="20220705 07:40:32.794" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 07:40:32.600" endtime="20220705 07:40:32.794"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 07:40:32.794" endtime="20220705 07:40:32.794"/>
</return>
<status status="PASS" starttime="20220705 07:40:32.600" endtime="20220705 07:40:32.794"/>
</kw>
<status status="PASS" starttime="20220705 07:40:32.600" endtime="20220705 07:40:32.794"/>
</kw>
<doc>Verify that a label can be created through API</doc>
<tag>api</tag>
<tag>label.create</tag>
<tag>label.get</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220705 07:40:32.299" endtime="20220705 07:40:32.794"/>
</test>
<test id="s1-s1-s4-t2" name="Update label on board" line="28">
<kw name="Create A Label" library="Label">
<var>${response}</var>
<arg>name</arg>
<arg>label2</arg>
<arg>color</arg>
<arg>yellow</arg>
<doc>Creates a new label in the given board.
required_args: idBoard
optional_args: name, color
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>idBoard</arg>
<arg>${idBoard}</arg>
<arg>@{optional_args}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 07:40:32.796" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 07:40:32.796" endtime="20220705 07:40:32.796"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 07:40:32.797" endtime="20220705 07:40:32.797"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 07:40:32.797" level="INFO">${url} = labels/</msg>
<status status="PASS" starttime="20220705 07:40:32.797" endtime="20220705 07:40:32.797"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 07:40:32.956" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 07:40:32.797" endtime="20220705 07:40:32.956"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 07:40:32.957" endtime="20220705 07:40:32.957"/>
</return>
<msg timestamp="20220705 07:40:32.957" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 07:40:32.796" endtime="20220705 07:40:32.957"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 07:40:32.957" endtime="20220705 07:40:32.957"/>
</return>
<msg timestamp="20220705 07:40:32.957" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 07:40:32.795" endtime="20220705 07:40:32.957"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>label</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 07:40:32.958" endtime="20220705 07:40:32.960"/>
</kw>
<status status="PASS" starttime="20220705 07:40:32.957" endtime="20220705 07:40:32.960"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${LABEL_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 07:40:32.960" endtime="20220705 07:40:32.960"/>
</return>
<msg timestamp="20220705 07:40:32.961" level="INFO">${LABEL_ID} = 62c3eaf08d24e18f4d1b8800</msg>
<status status="PASS" starttime="20220705 07:40:32.960" endtime="20220705 07:40:32.961"/>
</kw>
<kw name="Update A Label" library="Label">
<var>${new_response}</var>
<arg>${LABEL_ID}</arg>
<arg>name</arg>
<arg>label3</arg>
<arg>color</arg>
<arg>orange</arg>
<doc>Updates the label with the given ID
optional_args: name, color
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 07:40:32.962" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 07:40:32.961" endtime="20220705 07:40:32.962"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 07:40:32.962" endtime="20220705 07:40:32.962"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 07:40:32.962" level="INFO">${url} = labels/62c3eaf08d24e18f4d1b8800</msg>
<status status="PASS" starttime="20220705 07:40:32.962" endtime="20220705 07:40:32.962"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 07:40:33.145" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 07:40:32.962" endtime="20220705 07:40:33.145"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 07:40:33.145" endtime="20220705 07:40:33.145"/>
</return>
<msg timestamp="20220705 07:40:33.146" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 07:40:32.961" endtime="20220705 07:40:33.146"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 07:40:33.146" endtime="20220705 07:40:33.146"/>
</return>
<msg timestamp="20220705 07:40:33.146" level="INFO">${new_response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 07:40:32.961" endtime="20220705 07:40:33.146"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${NEW_LABEL_COLOR}</var>
<arg>${new_response}</arg>
<arg>color</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 07:40:33.146" endtime="20220705 07:40:33.147"/>
</return>
<msg timestamp="20220705 07:40:33.147" level="INFO">${NEW_LABEL_COLOR} = orange</msg>
<status status="PASS" starttime="20220705 07:40:33.146" endtime="20220705 07:40:33.147"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${NEW_LABEL_NAME}</var>
<arg>${new_response}</arg>
<arg>name</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 07:40:33.148" endtime="20220705 07:40:33.148"/>
</return>
<msg timestamp="20220705 07:40:33.149" level="INFO">${NEW_LABEL_NAME} = label3</msg>
<status status="PASS" starttime="20220705 07:40:33.147" endtime="20220705 07:40:33.149"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${NEW_LABEL_COLOR}</arg>
<arg>orange</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220705 07:40:33.149" endtime="20220705 07:40:33.149"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${NEW_LABEL_NAME}</arg>
<arg>label3</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220705 07:40:33.149" endtime="20220705 07:40:33.149"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Label</arg>
<arg>${LABEL_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Label" library="Label">
<arg>${LABEL_ID}</arg>
<doc>Deletes the label with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 07:40:33.151" level="INFO">${url} = labels/62c3eaf08d24e18f4d1b8800</msg>
<status status="PASS" starttime="20220705 07:40:33.151" endtime="20220705 07:40:33.151"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 07:40:33.349" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 07:40:33.151" endtime="20220705 07:40:33.349"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 07:40:33.349" endtime="20220705 07:40:33.349"/>
</return>
<msg timestamp="20220705 07:40:33.350" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 07:40:33.150" endtime="20220705 07:40:33.350"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 07:40:33.350" endtime="20220705 07:40:33.350"/>
</return>
<status status="PASS" starttime="20220705 07:40:33.150" endtime="20220705 07:40:33.350"/>
</kw>
<status status="PASS" starttime="20220705 07:40:33.150" endtime="20220705 07:40:33.350"/>
</kw>
<doc>Verify that a label's name and color can be updated through API</doc>
<tag>api</tag>
<tag>label.update</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220705 07:40:32.795" endtime="20220705 07:40:33.350"/>
</test>
<test id="s1-s1-s4-t3" name="Delete label on board" line="41">
<kw name="Create A Label" library="Label">
<var>${response}</var>
<arg>name</arg>
<arg>label2</arg>
<arg>color</arg>
<arg>yellow</arg>
<doc>Creates a new label in the given board.
required_args: idBoard
optional_args: name, color
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>idBoard</arg>
<arg>${idBoard}</arg>
<arg>@{optional_args}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 07:40:33.353" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 07:40:33.353" endtime="20220705 07:40:33.353"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 07:40:33.353" endtime="20220705 07:40:33.353"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 07:40:33.354" level="INFO">${url} = labels/</msg>
<status status="PASS" starttime="20220705 07:40:33.353" endtime="20220705 07:40:33.354"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 07:40:33.510" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 07:40:33.354" endtime="20220705 07:40:33.510"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 07:40:33.510" endtime="20220705 07:40:33.510"/>
</return>
<msg timestamp="20220705 07:40:33.511" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 07:40:33.352" endtime="20220705 07:40:33.511"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 07:40:33.511" endtime="20220705 07:40:33.511"/>
</return>
<msg timestamp="20220705 07:40:33.511" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 07:40:33.352" endtime="20220705 07:40:33.511"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${LABEL_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 07:40:33.512" endtime="20220705 07:40:33.512"/>
</return>
<msg timestamp="20220705 07:40:33.512" level="INFO">${LABEL_ID} = 62c3eaf1ff43fe0d4c723517</msg>
<status status="PASS" starttime="20220705 07:40:33.511" endtime="20220705 07:40:33.512"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Label</arg>
<arg>${LABEL_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Label" library="Label">
<arg>${LABEL_ID}</arg>
<doc>Deletes the label with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 07:40:33.514" level="INFO">${url} = labels/62c3eaf1ff43fe0d4c723517</msg>
<status status="PASS" starttime="20220705 07:40:33.514" endtime="20220705 07:40:33.514"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 07:40:33.715" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 07:40:33.514" endtime="20220705 07:40:33.715"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 07:40:33.715" endtime="20220705 07:40:33.715"/>
</return>
<msg timestamp="20220705 07:40:33.716" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 07:40:33.513" endtime="20220705 07:40:33.716"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 07:40:33.716" endtime="20220705 07:40:33.716"/>
</return>
<status status="PASS" starttime="20220705 07:40:33.513" endtime="20220705 07:40:33.716"/>
</kw>
<status status="PASS" starttime="20220705 07:40:33.513" endtime="20220705 07:40:33.716"/>
</kw>
<kw name="Get A Label" library="Label">
<arg>${LABEL_ID}</arg>
<arg>status_code=404</arg>
<doc>Gets the label with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 07:40:33.717" level="INFO">${url} = labels/62c3eaf1ff43fe0d4c723517</msg>
<status status="PASS" starttime="20220705 07:40:33.717" endtime="20220705 07:40:33.717"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 07:40:33.823" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220705 07:40:33.718" endtime="20220705 07:40:33.823"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 07:40:33.823" endtime="20220705 07:40:33.823"/>
</return>
<msg timestamp="20220705 07:40:33.824" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220705 07:40:33.717" endtime="20220705 07:40:33.824"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 07:40:33.824" endtime="20220705 07:40:33.824"/>
</return>
<status status="PASS" starttime="20220705 07:40:33.716" endtime="20220705 07:40:33.824"/>
</kw>
<doc>Verify that a label can be deleted through API</doc>
<tag>api</tag>
<tag>label.delete</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220705 07:40:33.350" endtime="20220705 07:40:33.824"/>
</test>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Teardown Board</arg>
<arg>Delete All Sessions</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Teardown Board">
<doc>Delete the board created for this session.</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 07:40:33.827" level="INFO">${url} = boards/62c3eaf01da73c275c4b9c24</msg>
<status status="PASS" starttime="20220705 07:40:33.827" endtime="20220705 07:40:33.827"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 07:40:34.241" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 07:40:33.827" endtime="20220705 07:40:34.241"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 07:40:34.241" endtime="20220705 07:40:34.241"/>
</return>
<msg timestamp="20220705 07:40:34.241" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 07:40:33.826" endtime="20220705 07:40:34.241"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 07:40:34.241" endtime="20220705 07:40:34.241"/>
</return>
<status status="PASS" starttime="20220705 07:40:33.826" endtime="20220705 07:40:34.242"/>
</kw>
<status status="PASS" starttime="20220705 07:40:33.826" endtime="20220705 07:40:34.242"/>
</kw>
<status status="PASS" starttime="20220705 07:40:33.825" endtime="20220705 07:40:34.242"/>
</kw>
<kw name="Delete All Sessions" library="request_own_library">
<status status="PASS" starttime="20220705 07:40:34.242" endtime="20220705 07:40:34.243"/>
</kw>
<status status="PASS" starttime="20220705 07:40:33.825" endtime="20220705 07:40:34.244"/>
</kw>
<doc>Example Test with Trello API Cards</doc>
<status status="PASS" starttime="20220705 07:40:31.873" endtime="20220705 07:40:34.244"/>
</suite>
<suite id="s1-s1-s5" name="Trello Api Lists Tests" source="/trello/api/trello_api_lists_tests.robot">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Create Trello Session</arg>
<arg>Setup Board</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Create Trello Session" library="TrelloAPI">
<doc>Creates a Trello Session</doc>
<kw name="Create Session" library="request_own_library">
<arg>${API_BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<status status="PASS" starttime="20220705 07:40:34.254" endtime="20220705 07:40:34.254"/>
</kw>
<status status="PASS" starttime="20220705 07:40:34.254" endtime="20220705 07:40:34.255"/>
</kw>
<kw name="Setup Board">
<doc>Create a board and save it's id for the suite</doc>
<kw name="Create A Board" library="Board">
<var>${BOARD}</var>
<arg>TestBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 07:40:34.256" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 07:40:34.256" endtime="20220705 07:40:34.256"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 07:40:34.256" endtime="20220705 07:40:34.257"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 07:40:34.258" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220705 07:40:34.257" endtime="20220705 07:40:34.258"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 07:40:34.547" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 07:40:34.258" endtime="20220705 07:40:34.547"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 07:40:34.547" endtime="20220705 07:40:34.547"/>
</return>
<msg timestamp="20220705 07:40:34.547" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 07:40:34.255" endtime="20220705 07:40:34.547"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 07:40:34.547" endtime="20220705 07:40:34.547"/>
</return>
<msg timestamp="20220705 07:40:34.548" level="INFO">${BOARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 07:40:34.255" endtime="20220705 07:40:34.548"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Set Suite Variable</arg>
<arg>\${TEST_SUITE_BOARD_ID}</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_BOARD_ID}</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220705 07:40:34.549" level="INFO">${TEST_SUITE_BOARD_ID} = 62c3eaf2c3e1cb47315a662d</msg>
<status status="PASS" starttime="20220705 07:40:34.548" endtime="20220705 07:40:34.549"/>
</kw>
<status status="PASS" starttime="20220705 07:40:34.548" endtime="20220705 07:40:34.549"/>
</kw>
<status status="PASS" starttime="20220705 07:40:34.255" endtime="20220705 07:40:34.549"/>
</kw>
<status status="PASS" starttime="20220705 07:40:34.254" endtime="20220705 07:40:34.549"/>
</kw>
<test id="s1-s1-s5-t1" name="CREATE a list" line="13">
<kw name="Create A List" library="List">
<var>${response}</var>
<arg>NewList</arg>
<doc>Creates a new List
board id
name the list will have
optional_args: idListSource, pos, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>list</arg>
<arg>name</arg>
<arg>${name}</arg>
<arg>idBoard</arg>
<arg>${idBoard}</arg>
<arg>@{optional_args}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 07:40:34.551" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 07:40:34.551" endtime="20220705 07:40:34.551"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 07:40:34.551" endtime="20220705 07:40:34.552"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 07:40:34.552" level="INFO">${url} = lists/</msg>
<status status="PASS" starttime="20220705 07:40:34.552" endtime="20220705 07:40:34.552"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 07:40:34.733" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 07:40:34.552" endtime="20220705 07:40:34.733"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 07:40:34.733" endtime="20220705 07:40:34.733"/>
</return>
<msg timestamp="20220705 07:40:34.733" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 07:40:34.551" endtime="20220705 07:40:34.733"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 07:40:34.733" endtime="20220705 07:40:34.734"/>
</return>
<msg timestamp="20220705 07:40:34.734" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 07:40:34.550" endtime="20220705 07:40:34.734"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>list</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 07:40:34.734" endtime="20220705 07:40:34.737"/>
</kw>
<status status="PASS" starttime="20220705 07:40:34.734" endtime="20220705 07:40:34.737"/>
</kw>
<doc>Verify that a list can be created through API</doc>
<tag>api</tag>
<tag>list.create</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220705 07:40:34.550" endtime="20220705 07:40:34.737"/>
</test>
<test id="s1-s1-s5-t2" name="UPDATE a list" line="19">
<kw name="Create A List" library="List">
<var>${response}</var>
<arg>NewList</arg>
<doc>Creates a new List
board id
name the list will have
optional_args: idListSource, pos, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>list</arg>
<arg>name</arg>
<arg>${name}</arg>
<arg>idBoard</arg>
<arg>${idBoard}</arg>
<arg>@{optional_args}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 07:40:34.739" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 07:40:34.739" endtime="20220705 07:40:34.739"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 07:40:34.739" endtime="20220705 07:40:34.740"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 07:40:34.740" level="INFO">${url} = lists/</msg>
<status status="PASS" starttime="20220705 07:40:34.740" endtime="20220705 07:40:34.740"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 07:40:34.947" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 07:40:34.741" endtime="20220705 07:40:34.947"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 07:40:34.947" endtime="20220705 07:40:34.947"/>
</return>
<msg timestamp="20220705 07:40:34.947" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 07:40:34.738" endtime="20220705 07:40:34.947"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 07:40:34.947" endtime="20220705 07:40:34.947"/>
</return>
<msg timestamp="20220705 07:40:34.948" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 07:40:34.738" endtime="20220705 07:40:34.948"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>list</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 07:40:34.948" endtime="20220705 07:40:34.950"/>
</kw>
<status status="PASS" starttime="20220705 07:40:34.948" endtime="20220705 07:40:34.950"/>
</kw>
<kw name="Update A List" library="List">
<arg>${response.json()}[id]</arg>
<arg>name</arg>
<arg>NewName</arg>
<doc>Updates the board with the given ID
optional_args: name, idListSource, pos, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>list</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 07:40:34.952" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 07:40:34.952" endtime="20220705 07:40:34.952"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 07:40:34.952" endtime="20220705 07:40:34.952"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 07:40:34.953" level="INFO">${url} = lists/62c3eaf24b0014366be97c79</msg>
<status status="PASS" starttime="20220705 07:40:34.952" endtime="20220705 07:40:34.953"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 07:40:35.116" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 07:40:34.953" endtime="20220705 07:40:35.116"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 07:40:35.116" endtime="20220705 07:40:35.116"/>
</return>
<msg timestamp="20220705 07:40:35.117" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 07:40:34.951" endtime="20220705 07:40:35.117"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 07:40:35.117" endtime="20220705 07:40:35.117"/>
</return>
<status status="PASS" starttime="20220705 07:40:34.950" endtime="20220705 07:40:35.117"/>
</kw>
<kw name="Get A List" library="List">
<var>${new_response}</var>
<arg>${response.json()}[id]</arg>
<doc>Gets the List with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>list</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 07:40:35.119" level="INFO">${url} = lists/62c3eaf24b0014366be97c79</msg>
<status status="PASS" starttime="20220705 07:40:35.118" endtime="20220705 07:40:35.119"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 07:40:35.245" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 07:40:35.119" endtime="20220705 07:40:35.245"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 07:40:35.245" endtime="20220705 07:40:35.245"/>
</return>
<msg timestamp="20220705 07:40:35.246" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 07:40:35.118" endtime="20220705 07:40:35.246"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 07:40:35.246" endtime="20220705 07:40:35.246"/>
</return>
<msg timestamp="20220705 07:40:35.246" level="INFO">${new_response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 07:40:35.117" endtime="20220705 07:40:35.246"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${new_response}</arg>
<arg>list</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 07:40:35.247" endtime="20220705 07:40:35.248"/>
</kw>
<status status="PASS" starttime="20220705 07:40:35.246" endtime="20220705 07:40:35.248"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${new_response.json()}[name]</arg>
<arg>NewName</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220705 07:40:35.249" endtime="20220705 07:40:35.249"/>
</kw>
<doc>Verify that a lists name can be updated through API</doc>
<tag>api</tag>
<tag>list.update</tag>
<tag>regression</tag>
<status status="PASS" starttime="20220705 07:40:34.737" endtime="20220705 07:40:35.249"/>
</test>
<test id="s1-s1-s5-t3" name="ARCHIVE A list" line="29">
<kw name="Create A List" library="List">
<var>${response}</var>
<arg>NewList</arg>
<doc>Creates a new List
board id
name the list will have
optional_args: idListSource, pos, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>list</arg>
<arg>name</arg>
<arg>${name}</arg>
<arg>idBoard</arg>
<arg>${idBoard}</arg>
<arg>@{optional_args}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 07:40:35.252" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 07:40:35.251" endtime="20220705 07:40:35.252"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 07:40:35.252" endtime="20220705 07:40:35.253"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 07:40:35.254" level="INFO">${url} = lists/</msg>
<status status="PASS" starttime="20220705 07:40:35.253" endtime="20220705 07:40:35.254"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 07:40:35.426" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 07:40:35.254" endtime="20220705 07:40:35.426"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 07:40:35.426" endtime="20220705 07:40:35.426"/>
</return>
<msg timestamp="20220705 07:40:35.426" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 07:40:35.251" endtime="20220705 07:40:35.426"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 07:40:35.427" endtime="20220705 07:40:35.427"/>
</return>
<msg timestamp="20220705 07:40:35.427" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 07:40:35.250" endtime="20220705 07:40:35.427"/>
</kw>
<kw name="Archive A List" library="List">
<arg>${response.json()}[id]</arg>
<doc>Deletes the list with the given ID</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>archive_list</arg>
<arg>${id}</arg>
<arg>value</arg>
<arg>true</arg>
<arg>status_code=${status_code}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 07:40:35.429" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 07:40:35.429" endtime="20220705 07:40:35.429"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 07:40:35.429" endtime="20220705 07:40:35.429"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 07:40:35.430" level="INFO">${url} = lists/62c3eaf373c94d0b27ff9ad5/closed</msg>
<status status="PASS" starttime="20220705 07:40:35.429" endtime="20220705 07:40:35.430"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 07:40:35.594" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 07:40:35.430" endtime="20220705 07:40:35.594"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 07:40:35.594" endtime="20220705 07:40:35.594"/>
</return>
<msg timestamp="20220705 07:40:35.595" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 07:40:35.428" endtime="20220705 07:40:35.595"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 07:40:35.595" endtime="20220705 07:40:35.595"/>
</return>
<status status="PASS" starttime="20220705 07:40:35.427" endtime="20220705 07:40:35.595"/>
</kw>
<kw name="Get A List" library="List">
<var>${new_response}</var>
<arg>${response.json()}[id]</arg>
<doc>Gets the List with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>list</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 07:40:35.597" level="INFO">${url} = lists/62c3eaf373c94d0b27ff9ad5</msg>
<status status="PASS" starttime="20220705 07:40:35.596" endtime="20220705 07:40:35.597"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 07:40:35.742" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 07:40:35.597" endtime="20220705 07:40:35.742"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 07:40:35.742" endtime="20220705 07:40:35.742"/>
</return>
<msg timestamp="20220705 07:40:35.742" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 07:40:35.596" endtime="20220705 07:40:35.742"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 07:40:35.742" endtime="20220705 07:40:35.742"/>
</return>
<msg timestamp="20220705 07:40:35.742" level="INFO">${new_response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 07:40:35.595" endtime="20220705 07:40:35.742"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${new_response.json()}[closed]</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220705 07:40:35.742" endtime="20220705 07:40:35.743"/>
</kw>
<doc>Verify that a list can be archived through API</doc>
<tag>api</tag>
<tag>list.archive</tag>
<tag>regression</tag>
<status status="PASS" starttime="20220705 07:40:35.250" endtime="20220705 07:40:35.743"/>
</test>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Teardown Board</arg>
<arg>Delete All Sessions</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Teardown Board">
<doc>Delete the board created for this suite.</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 07:40:35.746" level="INFO">${url} = boards/62c3eaf2c3e1cb47315a662d</msg>
<status status="PASS" starttime="20220705 07:40:35.746" endtime="20220705 07:40:35.746"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 07:40:36.176" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 07:40:35.746" endtime="20220705 07:40:36.176"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 07:40:36.176" endtime="20220705 07:40:36.176"/>
</return>
<msg timestamp="20220705 07:40:36.176" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 07:40:35.746" endtime="20220705 07:40:36.176"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 07:40:36.176" endtime="20220705 07:40:36.176"/>
</return>
<status status="PASS" starttime="20220705 07:40:35.745" endtime="20220705 07:40:36.176"/>
</kw>
<status status="PASS" starttime="20220705 07:40:35.745" endtime="20220705 07:40:36.176"/>
</kw>
<status status="PASS" starttime="20220705 07:40:35.744" endtime="20220705 07:40:36.176"/>
</kw>
<kw name="Delete All Sessions" library="request_own_library">
<status status="PASS" starttime="20220705 07:40:36.177" endtime="20220705 07:40:36.178"/>
</kw>
<status status="PASS" starttime="20220705 07:40:35.744" endtime="20220705 07:40:36.178"/>
</kw>
<doc>Example Test with Trello API lists</doc>
<status status="PASS" starttime="20220705 07:40:34.245" endtime="20220705 07:40:36.178"/>
</suite>
<status status="PASS" starttime="20220705 07:40:20.535" endtime="20220705 07:40:36.181"/>
</suite>
<status status="PASS" starttime="20220705 07:40:20.520" endtime="20220705 07:40:36.184"/>
</suite>
<statistics>
<total>
<stat pass="18" fail="0" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="18" fail="0" skip="0">api</stat>
<stat pass="1" fail="0" skip="0">board.create</stat>
<stat pass="1" fail="0" skip="0">board.delete</stat>
<stat pass="1" fail="0" skip="0">board.get</stat>
<stat pass="2" fail="0" skip="0">board.update</stat>
<stat pass="1" fail="0" skip="0">card.close</stat>
<stat pass="1" fail="0" skip="0">card.create</stat>
<stat pass="1" fail="0" skip="0">card.delete</stat>
<stat pass="1" fail="0" skip="0">card.update</stat>
<stat pass="1" fail="0" skip="0">checklist.create</stat>
<stat pass="1" fail="0" skip="0">checklist.delete</stat>
<stat pass="1" fail="0" skip="0">checklist.update</stat>
<stat pass="1" fail="0" skip="0">label.create</stat>
<stat pass="1" fail="0" skip="0">label.delete</stat>
<stat pass="1" fail="0" skip="0">label.get</stat>
<stat pass="1" fail="0" skip="0">label.update</stat>
<stat pass="1" fail="0" skip="0">list.archive</stat>
<stat pass="1" fail="0" skip="0">list.create</stat>
<stat pass="1" fail="0" skip="0">list.update</stat>
<stat pass="5" fail="0" skip="0">regression</stat>
<stat pass="13" fail="0" skip="0">smoke</stat>
</tag>
<suite>
<stat pass="18" fail="0" skip="0" id="s1" name="Trello">Trello</stat>
<stat pass="18" fail="0" skip="0" id="s1-s1" name="Api">Trello.Api</stat>
<stat pass="5" fail="0" skip="0" id="s1-s1-s1" name="Trello Api Boards Tests">Trello.Api.Trello Api Boards Tests</stat>
<stat pass="4" fail="0" skip="0" id="s1-s1-s2" name="Trello Api Cards Tests">Trello.Api.Trello Api Cards Tests</stat>
<stat pass="3" fail="0" skip="0" id="s1-s1-s3" name="Trello Api Checklists Tests">Trello.Api.Trello Api Checklists Tests</stat>
<stat pass="3" fail="0" skip="0" id="s1-s1-s4" name="Trello Api Labels Tests">Trello.Api.Trello Api Labels Tests</stat>
<stat pass="3" fail="0" skip="0" id="s1-s1-s5" name="Trello Api Lists Tests">Trello.Api.Trello Api Lists Tests</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
