<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 5.0.1 (Python 3.10.5 on linux)" generated="20220704 19:34:44.772" rpa="false" schemaversion="3">
<suite id="s1" name="Trello" source="/trello">
<suite id="s1-s1" name="Api" source="/trello/api">
<suite id="s1-s1-s1" name="Trello Api Boards Tests" source="/trello/api/trello_api_boards_tests.robot">
<kw name="Create Trello Session" library="TrelloAPI" type="SETUP">
<doc>Creates a Trello Session</doc>
<kw name="Create Session" library="request_own_library">
<arg>${API_BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<status status="PASS" starttime="20220704 19:34:44.881" endtime="20220704 19:34:44.881"/>
</kw>
<status status="PASS" starttime="20220704 19:34:44.880" endtime="20220704 19:34:44.882"/>
</kw>
<test id="s1-s1-s1-t1" name="CREATE a board" line="9">
<kw name="Create A Board" library="Board">
<var>${response}</var>
<arg>NewBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 19:34:44.883" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 19:34:44.883" endtime="20220704 19:34:44.884"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 19:34:44.884" endtime="20220704 19:34:44.884"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 19:34:44.884" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220704 19:34:44.884" endtime="20220704 19:34:44.884"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 19:34:45.203" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:34:44.884" endtime="20220704 19:34:45.203"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 19:34:45.203" endtime="20220704 19:34:45.203"/>
</return>
<msg timestamp="20220704 19:34:45.203" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:34:44.883" endtime="20220704 19:34:45.203"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 19:34:45.203" endtime="20220704 19:34:45.203"/>
</return>
<msg timestamp="20220704 19:34:45.203" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:34:44.883" endtime="20220704 19:34:45.203"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>board</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220704 19:34:45.204" endtime="20220704 19:34:45.208"/>
</kw>
<status status="PASS" starttime="20220704 19:34:45.203" endtime="20220704 19:34:45.208"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${response.json()}[id]</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${response.json()}[id]</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 19:34:45.209" level="INFO">${url} = boards/62c340d5686c33157bb924d9</msg>
<status status="PASS" starttime="20220704 19:34:45.209" endtime="20220704 19:34:45.209"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 19:34:45.553" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:34:45.209" endtime="20220704 19:34:45.553"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 19:34:45.553" endtime="20220704 19:34:45.553"/>
</return>
<msg timestamp="20220704 19:34:45.553" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:34:45.209" endtime="20220704 19:34:45.553"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 19:34:45.553" endtime="20220704 19:34:45.553"/>
</return>
<status status="PASS" starttime="20220704 19:34:45.208" endtime="20220704 19:34:45.553"/>
</kw>
<status status="PASS" starttime="20220704 19:34:45.208" endtime="20220704 19:34:45.554"/>
</kw>
<doc>Verify that a board can be create through API</doc>
<tag>api</tag>
<tag>board.create</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220704 19:34:44.882" endtime="20220704 19:34:45.554"/>
</test>
<test id="s1-s1-s1-t2" name="UPDATE a Board's name" line="16">
<kw name="Create A Board" library="Board">
<var>${response}</var>
<arg>NewBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 19:34:45.556" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 19:34:45.556" endtime="20220704 19:34:45.556"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 19:34:45.556" endtime="20220704 19:34:45.556"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 19:34:45.557" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220704 19:34:45.556" endtime="20220704 19:34:45.557"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 19:34:45.740" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:34:45.557" endtime="20220704 19:34:45.740"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 19:34:45.740" endtime="20220704 19:34:45.740"/>
</return>
<msg timestamp="20220704 19:34:45.740" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:34:45.555" endtime="20220704 19:34:45.740"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 19:34:45.740" endtime="20220704 19:34:45.740"/>
</return>
<msg timestamp="20220704 19:34:45.740" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:34:45.555" endtime="20220704 19:34:45.740"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>board</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220704 19:34:45.741" endtime="20220704 19:34:45.744"/>
</kw>
<status status="PASS" starttime="20220704 19:34:45.740" endtime="20220704 19:34:45.744"/>
</kw>
<kw name="Update A Board" library="Board">
<arg>${response.json()}[id]</arg>
<arg>name</arg>
<arg>NewName</arg>
<doc>Updates the board with the given ID
optional_args: name, desc, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 19:34:45.746" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 19:34:45.745" endtime="20220704 19:34:45.746"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 19:34:45.746" endtime="20220704 19:34:45.746"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 19:34:45.746" level="INFO">${url} = boards/62c340d5115cf04408e360a1</msg>
<status status="PASS" starttime="20220704 19:34:45.746" endtime="20220704 19:34:45.746"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 19:34:45.867" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:34:45.746" endtime="20220704 19:34:45.867"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 19:34:45.868" endtime="20220704 19:34:45.868"/>
</return>
<msg timestamp="20220704 19:34:45.868" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:34:45.745" endtime="20220704 19:34:45.868"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 19:34:45.868" endtime="20220704 19:34:45.868"/>
</return>
<status status="PASS" starttime="20220704 19:34:45.744" endtime="20220704 19:34:45.868"/>
</kw>
<kw name="Get A Board" library="Board">
<var>${new_response}</var>
<arg>${response.json()}[id]</arg>
<doc>Gets the Board with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 19:34:45.869" level="INFO">${url} = boards/62c340d5115cf04408e360a1</msg>
<status status="PASS" starttime="20220704 19:34:45.869" endtime="20220704 19:34:45.870"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 19:34:46.039" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:34:45.870" endtime="20220704 19:34:46.039"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 19:34:46.039" endtime="20220704 19:34:46.039"/>
</return>
<msg timestamp="20220704 19:34:46.039" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:34:45.869" endtime="20220704 19:34:46.039"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 19:34:46.039" endtime="20220704 19:34:46.039"/>
</return>
<msg timestamp="20220704 19:34:46.039" level="INFO">${new_response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:34:45.868" endtime="20220704 19:34:46.039"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${new_response}</arg>
<arg>board</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220704 19:34:46.040" endtime="20220704 19:34:46.043"/>
</kw>
<status status="PASS" starttime="20220704 19:34:46.040" endtime="20220704 19:34:46.043"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${new_response.json()}[name]</arg>
<arg>NewName</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220704 19:34:46.043" endtime="20220704 19:34:46.044"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${response.json()}[id]</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${response.json()}[id]</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 19:34:46.046" level="INFO">${url} = boards/62c340d5115cf04408e360a1</msg>
<status status="PASS" starttime="20220704 19:34:46.045" endtime="20220704 19:34:46.046"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 19:34:46.418" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:34:46.046" endtime="20220704 19:34:46.418"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 19:34:46.418" endtime="20220704 19:34:46.418"/>
</return>
<msg timestamp="20220704 19:34:46.418" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:34:46.045" endtime="20220704 19:34:46.418"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 19:34:46.418" endtime="20220704 19:34:46.418"/>
</return>
<status status="PASS" starttime="20220704 19:34:46.044" endtime="20220704 19:34:46.418"/>
</kw>
<status status="PASS" starttime="20220704 19:34:46.044" endtime="20220704 19:34:46.418"/>
</kw>
<doc>Verify that a board's name can be updated through API</doc>
<tag>api</tag>
<tag>board.update</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220704 19:34:45.554" endtime="20220704 19:34:46.418"/>
</test>
<test id="s1-s1-s1-t3" name="DELETE A Board" line="27">
<kw name="Create A Board" library="Board">
<var>${response}</var>
<arg>NewBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 19:34:46.420" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 19:34:46.420" endtime="20220704 19:34:46.420"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 19:34:46.420" endtime="20220704 19:34:46.421"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 19:34:46.421" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220704 19:34:46.421" endtime="20220704 19:34:46.421"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 19:34:46.626" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:34:46.421" endtime="20220704 19:34:46.626"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 19:34:46.626" endtime="20220704 19:34:46.626"/>
</return>
<msg timestamp="20220704 19:34:46.626" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:34:46.420" endtime="20220704 19:34:46.626"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 19:34:46.626" endtime="20220704 19:34:46.626"/>
</return>
<msg timestamp="20220704 19:34:46.626" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:34:46.419" endtime="20220704 19:34:46.626"/>
</kw>
<kw name="Delete A Board" library="Board">
<arg>${response.json()}[id]</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 19:34:46.628" level="INFO">${url} = boards/62c340d67855e44a64c107d2</msg>
<status status="PASS" starttime="20220704 19:34:46.627" endtime="20220704 19:34:46.628"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 19:34:46.950" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:34:46.628" endtime="20220704 19:34:46.950"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 19:34:46.950" endtime="20220704 19:34:46.950"/>
</return>
<msg timestamp="20220704 19:34:46.951" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:34:46.627" endtime="20220704 19:34:46.951"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 19:34:46.951" endtime="20220704 19:34:46.951"/>
</return>
<status status="PASS" starttime="20220704 19:34:46.626" endtime="20220704 19:34:46.951"/>
</kw>
<kw name="Get A Board" library="Board">
<arg>${response.json()}[id]</arg>
<arg>status_code=404</arg>
<doc>Gets the Board with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 19:34:46.952" level="INFO">${url} = boards/62c340d67855e44a64c107d2</msg>
<status status="PASS" starttime="20220704 19:34:46.952" endtime="20220704 19:34:46.952"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 19:34:47.026" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220704 19:34:46.952" endtime="20220704 19:34:47.026"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 19:34:47.026" endtime="20220704 19:34:47.026"/>
</return>
<msg timestamp="20220704 19:34:47.027" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220704 19:34:46.952" endtime="20220704 19:34:47.027"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 19:34:47.027" endtime="20220704 19:34:47.027"/>
</return>
<status status="PASS" starttime="20220704 19:34:46.951" endtime="20220704 19:34:47.027"/>
</kw>
<doc>Verify that a board can be deleted through API</doc>
<tag>api</tag>
<tag>board.delete</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220704 19:34:46.419" endtime="20220704 19:34:47.027"/>
</test>
<test id="s1-s1-s1-t4" name="GET Information of A Board" line="34">
<kw name="Create A Board" library="Board">
<var>${response}</var>
<arg>BoardTest</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 19:34:47.029" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 19:34:47.029" endtime="20220704 19:34:47.029"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 19:34:47.029" endtime="20220704 19:34:47.029"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 19:34:47.030" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220704 19:34:47.029" endtime="20220704 19:34:47.030"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 19:34:47.215" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:34:47.030" endtime="20220704 19:34:47.215"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 19:34:47.216" endtime="20220704 19:34:47.216"/>
</return>
<msg timestamp="20220704 19:34:47.216" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:34:47.029" endtime="20220704 19:34:47.216"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 19:34:47.216" endtime="20220704 19:34:47.216"/>
</return>
<msg timestamp="20220704 19:34:47.216" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:34:47.028" endtime="20220704 19:34:47.216"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>board</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220704 19:34:47.216" endtime="20220704 19:34:47.220"/>
</kw>
<status status="PASS" starttime="20220704 19:34:47.216" endtime="20220704 19:34:47.220"/>
</kw>
<kw name="Get A Board" library="Board">
<var>${response2}</var>
<arg>${response.json()}[id]</arg>
<doc>Gets the Board with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 19:34:47.221" level="INFO">${url} = boards/62c340d7a6a688218fc47392</msg>
<status status="PASS" starttime="20220704 19:34:47.221" endtime="20220704 19:34:47.221"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 19:34:47.300" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:34:47.221" endtime="20220704 19:34:47.300"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 19:34:47.300" endtime="20220704 19:34:47.301"/>
</return>
<msg timestamp="20220704 19:34:47.301" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:34:47.221" endtime="20220704 19:34:47.301"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 19:34:47.301" endtime="20220704 19:34:47.301"/>
</return>
<msg timestamp="20220704 19:34:47.301" level="INFO">${response2} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:34:47.220" endtime="20220704 19:34:47.301"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response2}</arg>
<arg>board</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220704 19:34:47.301" endtime="20220704 19:34:47.304"/>
</kw>
<status status="PASS" starttime="20220704 19:34:47.301" endtime="20220704 19:34:47.305"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${response2.json()}[name]</arg>
<arg>BoardTest</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220704 19:34:47.305" endtime="20220704 19:34:47.305"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${response.json()}[id]</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${response.json()}[id]</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 19:34:47.307" level="INFO">${url} = boards/62c340d7a6a688218fc47392</msg>
<status status="PASS" starttime="20220704 19:34:47.307" endtime="20220704 19:34:47.307"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 19:34:47.740" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:34:47.307" endtime="20220704 19:34:47.740"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 19:34:47.740" endtime="20220704 19:34:47.740"/>
</return>
<msg timestamp="20220704 19:34:47.740" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:34:47.306" endtime="20220704 19:34:47.740"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 19:34:47.740" endtime="20220704 19:34:47.740"/>
</return>
<status status="PASS" starttime="20220704 19:34:47.306" endtime="20220704 19:34:47.741"/>
</kw>
<status status="PASS" starttime="20220704 19:34:47.306" endtime="20220704 19:34:47.741"/>
</kw>
<doc>Verify that a board's information can be accesed through API</doc>
<tag>api</tag>
<tag>board.get</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220704 19:34:47.027" endtime="20220704 19:34:47.741"/>
</test>
<test id="s1-s1-s1-t5" name="UPDATE a Board's description" line="45">
<kw name="Create A Board" library="Board">
<var>${response}</var>
<arg>NewBoardForTest</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 19:34:47.743" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 19:34:47.743" endtime="20220704 19:34:47.743"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 19:34:47.743" endtime="20220704 19:34:47.743"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 19:34:47.744" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220704 19:34:47.743" endtime="20220704 19:34:47.744"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 19:34:47.944" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:34:47.744" endtime="20220704 19:34:47.944"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 19:34:47.944" endtime="20220704 19:34:47.944"/>
</return>
<msg timestamp="20220704 19:34:47.944" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:34:47.742" endtime="20220704 19:34:47.944"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 19:34:47.944" endtime="20220704 19:34:47.944"/>
</return>
<msg timestamp="20220704 19:34:47.944" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:34:47.742" endtime="20220704 19:34:47.944"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>board</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220704 19:34:47.945" endtime="20220704 19:34:47.948"/>
</kw>
<status status="PASS" starttime="20220704 19:34:47.944" endtime="20220704 19:34:47.948"/>
</kw>
<kw name="Update A Board" library="Board">
<arg>${response.json()}[id]</arg>
<arg>desc</arg>
<arg>sampleDescription</arg>
<doc>Updates the board with the given ID
optional_args: name, desc, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 19:34:47.949" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 19:34:47.949" endtime="20220704 19:34:47.949"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 19:34:47.949" endtime="20220704 19:34:47.950"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 19:34:47.950" level="INFO">${url} = boards/62c340d70736b326cb71343b</msg>
<status status="PASS" starttime="20220704 19:34:47.950" endtime="20220704 19:34:47.950"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 19:34:48.063" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:34:47.950" endtime="20220704 19:34:48.063"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 19:34:48.063" endtime="20220704 19:34:48.063"/>
</return>
<msg timestamp="20220704 19:34:48.063" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:34:47.949" endtime="20220704 19:34:48.063"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 19:34:48.063" endtime="20220704 19:34:48.063"/>
</return>
<status status="PASS" starttime="20220704 19:34:47.948" endtime="20220704 19:34:48.064"/>
</kw>
<kw name="Get A Board" library="Board">
<var>${new_response}</var>
<arg>${response.json()}[id]</arg>
<doc>Gets the Board with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 19:34:48.065" level="INFO">${url} = boards/62c340d70736b326cb71343b</msg>
<status status="PASS" starttime="20220704 19:34:48.065" endtime="20220704 19:34:48.065"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 19:34:48.143" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:34:48.065" endtime="20220704 19:34:48.143"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 19:34:48.143" endtime="20220704 19:34:48.143"/>
</return>
<msg timestamp="20220704 19:34:48.143" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:34:48.064" endtime="20220704 19:34:48.143"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 19:34:48.143" endtime="20220704 19:34:48.143"/>
</return>
<msg timestamp="20220704 19:34:48.144" level="INFO">${new_response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:34:48.064" endtime="20220704 19:34:48.144"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${new_response.json()}[desc]</arg>
<arg>sampleDescription</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220704 19:34:48.144" endtime="20220704 19:34:48.144"/>
</kw>
<kw name="Update A Board" library="Board">
<arg>${response.json()}[id]</arg>
<arg>desc</arg>
<arg>updatedDescription</arg>
<doc>Updates the board with the given ID
optional_args: name, desc, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 19:34:48.146" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 19:34:48.146" endtime="20220704 19:34:48.146"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 19:34:48.146" endtime="20220704 19:34:48.146"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 19:34:48.146" level="INFO">${url} = boards/62c340d70736b326cb71343b</msg>
<status status="PASS" starttime="20220704 19:34:48.146" endtime="20220704 19:34:48.146"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 19:34:48.280" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:34:48.147" endtime="20220704 19:34:48.280"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 19:34:48.280" endtime="20220704 19:34:48.280"/>
</return>
<msg timestamp="20220704 19:34:48.281" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:34:48.145" endtime="20220704 19:34:48.281"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 19:34:48.281" endtime="20220704 19:34:48.281"/>
</return>
<status status="PASS" starttime="20220704 19:34:48.144" endtime="20220704 19:34:48.281"/>
</kw>
<kw name="Get A Board" library="Board">
<var>${new_response2}</var>
<arg>${response.json()}[id]</arg>
<doc>Gets the Board with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 19:34:48.282" level="INFO">${url} = boards/62c340d70736b326cb71343b</msg>
<status status="PASS" starttime="20220704 19:34:48.282" endtime="20220704 19:34:48.282"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 19:34:48.364" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:34:48.283" endtime="20220704 19:34:48.364"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 19:34:48.364" endtime="20220704 19:34:48.364"/>
</return>
<msg timestamp="20220704 19:34:48.364" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:34:48.282" endtime="20220704 19:34:48.364"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 19:34:48.364" endtime="20220704 19:34:48.364"/>
</return>
<msg timestamp="20220704 19:34:48.364" level="INFO">${new_response2} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:34:48.281" endtime="20220704 19:34:48.364"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${new_response2.json()}[desc]</arg>
<arg>updatedDescription</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220704 19:34:48.364" endtime="20220704 19:34:48.365"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${response.json()}[id]</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${response.json()}[id]</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 19:34:48.367" level="INFO">${url} = boards/62c340d70736b326cb71343b</msg>
<status status="PASS" starttime="20220704 19:34:48.367" endtime="20220704 19:34:48.367"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 19:34:48.723" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:34:48.367" endtime="20220704 19:34:48.723"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 19:34:48.723" endtime="20220704 19:34:48.723"/>
</return>
<msg timestamp="20220704 19:34:48.723" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:34:48.366" endtime="20220704 19:34:48.723"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 19:34:48.723" endtime="20220704 19:34:48.723"/>
</return>
<status status="PASS" starttime="20220704 19:34:48.365" endtime="20220704 19:34:48.723"/>
</kw>
<status status="PASS" starttime="20220704 19:34:48.365" endtime="20220704 19:34:48.723"/>
</kw>
<doc>Verify that a board's description can be updated through API</doc>
<tag>api</tag>
<tag>board.update</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220704 19:34:47.741" endtime="20220704 19:34:48.723"/>
</test>
<kw name="Delete All Sessions" library="request_own_library" type="TEARDOWN">
<status status="PASS" starttime="20220704 19:34:48.724" endtime="20220704 19:34:48.725"/>
</kw>
<doc>Example Test with Trello API Boards</doc>
<status status="PASS" starttime="20220704 19:34:44.789" endtime="20220704 19:34:48.726"/>
</suite>
<suite id="s1-s1-s2" name="Trello Api Cards Tests" source="/trello/api/trello_api_cards_tests.robot">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Create Trello Session</arg>
<arg>Setup Board And List</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Create Trello Session" library="TrelloAPI">
<doc>Creates a Trello Session</doc>
<kw name="Create Session" library="request_own_library">
<arg>${API_BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<status status="PASS" starttime="20220704 19:34:48.736" endtime="20220704 19:34:48.736"/>
</kw>
<status status="PASS" starttime="20220704 19:34:48.736" endtime="20220704 19:34:48.736"/>
</kw>
<kw name="Setup Board And List">
<doc>Create a board and save its ID and its first list's ID</doc>
<kw name="Create A Board" library="Board">
<var>${BOARD}</var>
<arg>TestBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 19:34:48.737" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 19:34:48.737" endtime="20220704 19:34:48.737"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 19:34:48.737" endtime="20220704 19:34:48.737"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 19:34:48.738" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220704 19:34:48.737" endtime="20220704 19:34:48.738"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 19:34:49.012" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:34:48.738" endtime="20220704 19:34:49.012"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 19:34:49.012" endtime="20220704 19:34:49.012"/>
</return>
<msg timestamp="20220704 19:34:49.013" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:34:48.737" endtime="20220704 19:34:49.013"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 19:34:49.013" endtime="20220704 19:34:49.013"/>
</return>
<msg timestamp="20220704 19:34:49.013" level="INFO">${BOARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:34:48.737" endtime="20220704 19:34:49.013"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_BOARD_ID}</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220704 19:34:49.014" level="INFO">${TEST_SUITE_BOARD_ID} = 62c340d8cf108a6fd50a7f7d</msg>
<status status="PASS" starttime="20220704 19:34:49.013" endtime="20220704 19:34:49.014"/>
</kw>
<kw name="Get Lists On A Board" library="Board">
<var>${LISTS}</var>
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Get all the lists in a board</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>lists_on_board</arg>
<arg>${id}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 19:34:49.014" level="INFO">${url} = boards/62c340d8cf108a6fd50a7f7d/lists/</msg>
<status status="PASS" starttime="20220704 19:34:49.014" endtime="20220704 19:34:49.015"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 19:34:49.080" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:34:49.015" endtime="20220704 19:34:49.080"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 19:34:49.080" endtime="20220704 19:34:49.080"/>
</return>
<msg timestamp="20220704 19:34:49.080" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:34:49.014" endtime="20220704 19:34:49.080"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 19:34:49.080" endtime="20220704 19:34:49.081"/>
</return>
<msg timestamp="20220704 19:34:49.081" level="INFO">${LISTS} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:34:49.014" endtime="20220704 19:34:49.081"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_LIST_ID}</arg>
<arg>${LISTS.json()}[0][id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220704 19:34:49.081" level="INFO">${TEST_SUITE_LIST_ID} = 62c340d8cf108a6fd50a7f84</msg>
<status status="PASS" starttime="20220704 19:34:49.081" endtime="20220704 19:34:49.081"/>
</kw>
<status status="PASS" starttime="20220704 19:34:48.736" endtime="20220704 19:34:49.082"/>
</kw>
<status status="PASS" starttime="20220704 19:34:48.735" endtime="20220704 19:34:49.082"/>
</kw>
<test id="s1-s1-s2-t1" name="Verify A Card Can Be Created" line="13">
<kw name="Create A Card" library="Card">
<var>${response}</var>
<arg>name</arg>
<arg>RFCard2</arg>
<doc>Creates a new card in the given list.
required_args: listId
optional_args: name, desc, pos, idCardSource, idLabels, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>@{optional_args}</arg>
<arg>idList</arg>
<arg>${idList}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 19:34:49.083" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 19:34:49.083" endtime="20220704 19:34:49.083"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 19:34:49.083" endtime="20220704 19:34:49.084"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 19:34:49.084" level="INFO">${url} = cards/</msg>
<status status="PASS" starttime="20220704 19:34:49.084" endtime="20220704 19:34:49.084"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 19:34:49.265" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:34:49.084" endtime="20220704 19:34:49.265"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 19:34:49.265" endtime="20220704 19:34:49.265"/>
</return>
<msg timestamp="20220704 19:34:49.265" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:34:49.083" endtime="20220704 19:34:49.265"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 19:34:49.265" endtime="20220704 19:34:49.265"/>
</return>
<msg timestamp="20220704 19:34:49.265" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:34:49.082" endtime="20220704 19:34:49.265"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>card</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220704 19:34:49.266" endtime="20220704 19:34:49.270"/>
</kw>
<status status="PASS" starttime="20220704 19:34:49.265" endtime="20220704 19:34:49.270"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 19:34:49.270" endtime="20220704 19:34:49.270"/>
</return>
<msg timestamp="20220704 19:34:49.271" level="INFO">${CARD_ID} = 62c340d9d36e1457def07d26</msg>
<status status="PASS" starttime="20220704 19:34:49.270" endtime="20220704 19:34:49.271"/>
</kw>
<kw name="Get A Card" library="Card">
<var>${response}</var>
<arg>${CARD_ID}</arg>
<doc>Gets the card with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 19:34:49.272" level="INFO">${url} = cards/62c340d9d36e1457def07d26</msg>
<status status="PASS" starttime="20220704 19:34:49.272" endtime="20220704 19:34:49.272"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 19:34:49.356" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:34:49.272" endtime="20220704 19:34:49.356"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 19:34:49.356" endtime="20220704 19:34:49.356"/>
</return>
<msg timestamp="20220704 19:34:49.356" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:34:49.271" endtime="20220704 19:34:49.356"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 19:34:49.356" endtime="20220704 19:34:49.356"/>
</return>
<msg timestamp="20220704 19:34:49.356" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:34:49.271" endtime="20220704 19:34:49.356"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_NAME}</var>
<arg>${response}</arg>
<arg>name</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 19:34:49.357" endtime="20220704 19:34:49.357"/>
</return>
<msg timestamp="20220704 19:34:49.357" level="INFO">${CARD_NAME} = RFCard2</msg>
<status status="PASS" starttime="20220704 19:34:49.356" endtime="20220704 19:34:49.357"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${CARD_NAME}</arg>
<arg>RFCard2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220704 19:34:49.357" endtime="20220704 19:34:49.357"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Card</arg>
<arg>${CARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Card" library="Card">
<arg>${CARD_ID}</arg>
<doc>Deletes the card with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 19:34:49.359" level="INFO">${url} = cards/62c340d9d36e1457def07d26</msg>
<status status="PASS" starttime="20220704 19:34:49.359" endtime="20220704 19:34:49.359"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 19:34:49.538" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:34:49.359" endtime="20220704 19:34:49.538"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 19:34:49.538" endtime="20220704 19:34:49.538"/>
</return>
<msg timestamp="20220704 19:34:49.538" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:34:49.358" endtime="20220704 19:34:49.538"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 19:34:49.538" endtime="20220704 19:34:49.538"/>
</return>
<status status="PASS" starttime="20220704 19:34:49.358" endtime="20220704 19:34:49.538"/>
</kw>
<status status="PASS" starttime="20220704 19:34:49.358" endtime="20220704 19:34:49.538"/>
</kw>
<doc>Verify that a card can be created through API</doc>
<tag>api</tag>
<tag>card.create</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220704 19:34:49.082" endtime="20220704 19:34:49.538"/>
</test>
<test id="s1-s1-s2-t2" name="Verify A Card Can Be Closed" line="24">
<kw name="Create A Card" library="Card">
<var>${response}</var>
<doc>Creates a new card in the given list.
required_args: listId
optional_args: name, desc, pos, idCardSource, idLabels, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>@{optional_args}</arg>
<arg>idList</arg>
<arg>${idList}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 19:34:49.541" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 19:34:49.541" endtime="20220704 19:34:49.541"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 19:34:49.541" endtime="20220704 19:34:49.541"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 19:34:49.542" level="INFO">${url} = cards/</msg>
<status status="PASS" starttime="20220704 19:34:49.541" endtime="20220704 19:34:49.542"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 19:34:49.728" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:34:49.542" endtime="20220704 19:34:49.728"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 19:34:49.728" endtime="20220704 19:34:49.728"/>
</return>
<msg timestamp="20220704 19:34:49.728" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:34:49.540" endtime="20220704 19:34:49.728"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 19:34:49.729" endtime="20220704 19:34:49.729"/>
</return>
<msg timestamp="20220704 19:34:49.729" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:34:49.540" endtime="20220704 19:34:49.729"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 19:34:49.729" endtime="20220704 19:34:49.729"/>
</return>
<msg timestamp="20220704 19:34:49.730" level="INFO">${CARD_ID} = 62c340d961ea4a3642d85e40</msg>
<status status="PASS" starttime="20220704 19:34:49.729" endtime="20220704 19:34:49.730"/>
</kw>
<kw name="Archive A Card" library="Card">
<arg>${CARD_ID}</arg>
<doc>Modifies the card status to closed.</doc>
<kw name="Update A Card" library="Card">
<var>${response}</var>
<arg>${id}</arg>
<arg>closed</arg>
<arg>true</arg>
<arg>status_code=${status_code}</arg>
<doc>Updates the card with the given ID
optional_args: name, desc, closed, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<arg>status_code=${status_code}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 19:34:49.731" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 19:34:49.731" endtime="20220704 19:34:49.731"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 19:34:49.732" endtime="20220704 19:34:49.732"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 19:34:49.732" level="INFO">${url} = cards/62c340d961ea4a3642d85e40</msg>
<status status="PASS" starttime="20220704 19:34:49.732" endtime="20220704 19:34:49.732"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 19:34:49.883" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:34:49.732" endtime="20220704 19:34:49.883"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 19:34:49.883" endtime="20220704 19:34:49.883"/>
</return>
<msg timestamp="20220704 19:34:49.883" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:34:49.731" endtime="20220704 19:34:49.883"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 19:34:49.883" endtime="20220704 19:34:49.883"/>
</return>
<msg timestamp="20220704 19:34:49.883" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:34:49.730" endtime="20220704 19:34:49.883"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 19:34:49.884" endtime="20220704 19:34:49.884"/>
</return>
<status status="PASS" starttime="20220704 19:34:49.730" endtime="20220704 19:34:49.884"/>
</kw>
<kw name="Get A Card" library="Card">
<var>${response}</var>
<arg>${CARD_ID}</arg>
<doc>Gets the card with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 19:34:49.885" level="INFO">${url} = cards/62c340d961ea4a3642d85e40</msg>
<status status="PASS" starttime="20220704 19:34:49.884" endtime="20220704 19:34:49.885"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 19:34:49.970" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:34:49.885" endtime="20220704 19:34:49.970"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 19:34:49.970" endtime="20220704 19:34:49.970"/>
</return>
<msg timestamp="20220704 19:34:49.970" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:34:49.884" endtime="20220704 19:34:49.970"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 19:34:49.970" endtime="20220704 19:34:49.970"/>
</return>
<msg timestamp="20220704 19:34:49.971" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:34:49.884" endtime="20220704 19:34:49.971"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_CLOSED}</var>
<arg>${response}</arg>
<arg>closed</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 19:34:49.971" endtime="20220704 19:34:49.971"/>
</return>
<msg timestamp="20220704 19:34:49.972" level="INFO">${CARD_CLOSED} = True</msg>
<status status="PASS" starttime="20220704 19:34:49.971" endtime="20220704 19:34:49.972"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${CARD_CLOSED}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220704 19:34:49.972" endtime="20220704 19:34:49.972"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Card</arg>
<arg>${CARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Card" library="Card">
<arg>${CARD_ID}</arg>
<doc>Deletes the card with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 19:34:49.973" level="INFO">${url} = cards/62c340d961ea4a3642d85e40</msg>
<status status="PASS" starttime="20220704 19:34:49.973" endtime="20220704 19:34:49.973"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 19:34:50.141" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:34:49.973" endtime="20220704 19:34:50.142"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 19:34:50.142" endtime="20220704 19:34:50.142"/>
</return>
<msg timestamp="20220704 19:34:50.142" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:34:49.973" endtime="20220704 19:34:50.142"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 19:34:50.142" endtime="20220704 19:34:50.142"/>
</return>
<status status="PASS" starttime="20220704 19:34:49.972" endtime="20220704 19:34:50.142"/>
</kw>
<status status="PASS" starttime="20220704 19:34:49.972" endtime="20220704 19:34:50.142"/>
</kw>
<doc>Verify that a card can be closed through API</doc>
<tag>api</tag>
<tag>card.close</tag>
<tag>regression</tag>
<status status="PASS" starttime="20220704 19:34:49.539" endtime="20220704 19:34:50.142"/>
</test>
<test id="s1-s1-s2-t3" name="Verify A Card Can Be Deleted" line="35">
<kw name="Create A Card" library="Card">
<var>${response}</var>
<doc>Creates a new card in the given list.
required_args: listId
optional_args: name, desc, pos, idCardSource, idLabels, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>@{optional_args}</arg>
<arg>idList</arg>
<arg>${idList}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 19:34:50.145" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 19:34:50.145" endtime="20220704 19:34:50.145"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 19:34:50.145" endtime="20220704 19:34:50.145"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 19:34:50.146" level="INFO">${url} = cards/</msg>
<status status="PASS" starttime="20220704 19:34:50.145" endtime="20220704 19:34:50.146"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 19:34:50.311" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:34:50.146" endtime="20220704 19:34:50.311"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 19:34:50.311" endtime="20220704 19:34:50.311"/>
</return>
<msg timestamp="20220704 19:34:50.311" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:34:50.144" endtime="20220704 19:34:50.311"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 19:34:50.311" endtime="20220704 19:34:50.311"/>
</return>
<msg timestamp="20220704 19:34:50.311" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:34:50.143" endtime="20220704 19:34:50.311"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 19:34:50.312" endtime="20220704 19:34:50.312"/>
</return>
<msg timestamp="20220704 19:34:50.312" level="INFO">${CARD_ID} = 62c340dacde6cc14e50af797</msg>
<status status="PASS" starttime="20220704 19:34:50.312" endtime="20220704 19:34:50.313"/>
</kw>
<kw name="Delete A Card" library="Card">
<var>${response}</var>
<arg>${CARD_ID}</arg>
<doc>Deletes the card with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 19:34:50.314" level="INFO">${url} = cards/62c340dacde6cc14e50af797</msg>
<status status="PASS" starttime="20220704 19:34:50.313" endtime="20220704 19:34:50.314"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 19:34:50.479" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:34:50.314" endtime="20220704 19:34:50.479"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 19:34:50.479" endtime="20220704 19:34:50.479"/>
</return>
<msg timestamp="20220704 19:34:50.480" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:34:50.313" endtime="20220704 19:34:50.480"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 19:34:50.480" endtime="20220704 19:34:50.480"/>
</return>
<msg timestamp="20220704 19:34:50.480" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:34:50.313" endtime="20220704 19:34:50.480"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>delete</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220704 19:34:50.480" endtime="20220704 19:34:50.482"/>
</kw>
<status status="PASS" starttime="20220704 19:34:50.480" endtime="20220704 19:34:50.482"/>
</kw>
<kw name="Get A Card" library="Card">
<arg>${CARD_ID}</arg>
<arg>status_code=404</arg>
<doc>Gets the card with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 19:34:50.483" level="INFO">${url} = cards/62c340dacde6cc14e50af797</msg>
<status status="PASS" starttime="20220704 19:34:50.483" endtime="20220704 19:34:50.483"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 19:34:50.543" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220704 19:34:50.483" endtime="20220704 19:34:50.543"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 19:34:50.543" endtime="20220704 19:34:50.543"/>
</return>
<msg timestamp="20220704 19:34:50.543" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220704 19:34:50.482" endtime="20220704 19:34:50.544"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 19:34:50.544" endtime="20220704 19:34:50.544"/>
</return>
<status status="PASS" starttime="20220704 19:34:50.482" endtime="20220704 19:34:50.544"/>
</kw>
<doc>Verify that a card can be deleted through API</doc>
<tag>api</tag>
<tag>card.delete</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220704 19:34:50.143" endtime="20220704 19:34:50.544"/>
</test>
<test id="s1-s1-s2-t4" name="Verify A Card Can Be Updated" line="44">
<kw name="Create A Card" library="Card">
<var>${response}</var>
<arg>name</arg>
<arg>RFCard4</arg>
<doc>Creates a new card in the given list.
required_args: listId
optional_args: name, desc, pos, idCardSource, idLabels, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>@{optional_args}</arg>
<arg>idList</arg>
<arg>${idList}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 19:34:50.546" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 19:34:50.546" endtime="20220704 19:34:50.546"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 19:34:50.546" endtime="20220704 19:34:50.546"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 19:34:50.547" level="INFO">${url} = cards/</msg>
<status status="PASS" starttime="20220704 19:34:50.546" endtime="20220704 19:34:50.547"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 19:34:50.707" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:34:50.547" endtime="20220704 19:34:50.707"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 19:34:50.707" endtime="20220704 19:34:50.707"/>
</return>
<msg timestamp="20220704 19:34:50.707" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:34:50.545" endtime="20220704 19:34:50.707"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 19:34:50.707" endtime="20220704 19:34:50.707"/>
</return>
<msg timestamp="20220704 19:34:50.708" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:34:50.545" endtime="20220704 19:34:50.708"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 19:34:50.708" endtime="20220704 19:34:50.708"/>
</return>
<msg timestamp="20220704 19:34:50.709" level="INFO">${CARD_ID} = 62c340dac0f7e8030dfec560</msg>
<status status="PASS" starttime="20220704 19:34:50.708" endtime="20220704 19:34:50.709"/>
</kw>
<kw name="Update A Card" library="Card">
<var>${response}</var>
<arg>${CARD_ID}</arg>
<arg>name</arg>
<arg>RFCard5</arg>
<arg>desc</arg>
<arg>Description</arg>
<doc>Updates the card with the given ID
optional_args: name, desc, closed, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<arg>status_code=${status_code}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 19:34:50.710" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 19:34:50.710" endtime="20220704 19:34:50.710"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 19:34:50.710" endtime="20220704 19:34:50.710"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 19:34:50.710" level="INFO">${url} = cards/62c340dac0f7e8030dfec560</msg>
<status status="PASS" starttime="20220704 19:34:50.710" endtime="20220704 19:34:50.710"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 19:34:50.852" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:34:50.710" endtime="20220704 19:34:50.853"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 19:34:50.853" endtime="20220704 19:34:50.853"/>
</return>
<msg timestamp="20220704 19:34:50.853" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:34:50.709" endtime="20220704 19:34:50.853"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 19:34:50.853" endtime="20220704 19:34:50.853"/>
</return>
<msg timestamp="20220704 19:34:50.853" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:34:50.709" endtime="20220704 19:34:50.853"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>card</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220704 19:34:50.854" endtime="20220704 19:34:50.858"/>
</kw>
<status status="PASS" starttime="20220704 19:34:50.853" endtime="20220704 19:34:50.858"/>
</kw>
<kw name="Get A Card" library="Card">
<var>${response}</var>
<arg>${CARD_ID}</arg>
<doc>Gets the card with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 19:34:50.859" level="INFO">${url} = cards/62c340dac0f7e8030dfec560</msg>
<status status="PASS" starttime="20220704 19:34:50.859" endtime="20220704 19:34:50.859"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 19:34:50.935" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:34:50.859" endtime="20220704 19:34:50.935"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 19:34:50.935" endtime="20220704 19:34:50.935"/>
</return>
<msg timestamp="20220704 19:34:50.935" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:34:50.859" endtime="20220704 19:34:50.935"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 19:34:50.935" endtime="20220704 19:34:50.935"/>
</return>
<msg timestamp="20220704 19:34:50.935" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:34:50.858" endtime="20220704 19:34:50.936"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_NAME}</var>
<arg>${response}</arg>
<arg>name</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 19:34:50.936" endtime="20220704 19:34:50.936"/>
</return>
<msg timestamp="20220704 19:34:50.937" level="INFO">${CARD_NAME} = RFCard5</msg>
<status status="PASS" starttime="20220704 19:34:50.936" endtime="20220704 19:34:50.937"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_DESC}</var>
<arg>${response}</arg>
<arg>desc</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 19:34:50.937" endtime="20220704 19:34:50.937"/>
</return>
<msg timestamp="20220704 19:34:50.937" level="INFO">${CARD_DESC} = Description</msg>
<status status="PASS" starttime="20220704 19:34:50.937" endtime="20220704 19:34:50.937"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${CARD_NAME}</arg>
<arg>RFCard5</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220704 19:34:50.938" endtime="20220704 19:34:50.938"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${CARD_DESC}</arg>
<arg>Description</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220704 19:34:50.938" endtime="20220704 19:34:50.938"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Card</arg>
<arg>${CARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Card" library="Card">
<arg>${CARD_ID}</arg>
<doc>Deletes the card with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 19:34:50.939" level="INFO">${url} = cards/62c340dac0f7e8030dfec560</msg>
<status status="PASS" starttime="20220704 19:34:50.939" endtime="20220704 19:34:50.939"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 19:34:51.099" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:34:50.939" endtime="20220704 19:34:51.099"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 19:34:51.099" endtime="20220704 19:34:51.099"/>
</return>
<msg timestamp="20220704 19:34:51.099" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:34:50.939" endtime="20220704 19:34:51.099"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 19:34:51.099" endtime="20220704 19:34:51.099"/>
</return>
<status status="PASS" starttime="20220704 19:34:50.938" endtime="20220704 19:34:51.099"/>
</kw>
<status status="PASS" starttime="20220704 19:34:50.938" endtime="20220704 19:34:51.099"/>
</kw>
<doc>Verify that a card's name and Description can be updated through API</doc>
<tag>api</tag>
<tag>card.update</tag>
<tag>regression</tag>
<status status="PASS" starttime="20220704 19:34:50.544" endtime="20220704 19:34:51.099"/>
</test>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Teardown Board</arg>
<arg>Delete All Sessions</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Teardown Board">
<doc>Delete the board created for this suite</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 19:34:51.102" level="INFO">${url} = boards/62c340d8cf108a6fd50a7f7d</msg>
<status status="PASS" starttime="20220704 19:34:51.102" endtime="20220704 19:34:51.102"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 19:34:51.430" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:34:51.102" endtime="20220704 19:34:51.430"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 19:34:51.431" endtime="20220704 19:34:51.431"/>
</return>
<msg timestamp="20220704 19:34:51.431" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:34:51.101" endtime="20220704 19:34:51.431"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 19:34:51.431" endtime="20220704 19:34:51.431"/>
</return>
<status status="PASS" starttime="20220704 19:34:51.101" endtime="20220704 19:34:51.431"/>
</kw>
<status status="PASS" starttime="20220704 19:34:51.101" endtime="20220704 19:34:51.431"/>
</kw>
<status status="PASS" starttime="20220704 19:34:51.100" endtime="20220704 19:34:51.431"/>
</kw>
<kw name="Delete All Sessions" library="request_own_library">
<status status="PASS" starttime="20220704 19:34:51.431" endtime="20220704 19:34:51.432"/>
</kw>
<status status="PASS" starttime="20220704 19:34:51.100" endtime="20220704 19:34:51.432"/>
</kw>
<doc>Example Test with Trello API Cards</doc>
<status status="PASS" starttime="20220704 19:34:48.727" endtime="20220704 19:34:51.432"/>
</suite>
<suite id="s1-s1-s3" name="Trello Api Checklists Tests" source="/trello/api/trello_api_checklists_tests.robot">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Create Trello Session</arg>
<arg>Setup Board, List And Card</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Create Trello Session" library="TrelloAPI">
<doc>Creates a Trello Session</doc>
<kw name="Create Session" library="request_own_library">
<arg>${API_BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<status status="PASS" starttime="20220704 19:34:51.442" endtime="20220704 19:34:51.442"/>
</kw>
<status status="PASS" starttime="20220704 19:34:51.441" endtime="20220704 19:34:51.442"/>
</kw>
<kw name="Setup Board, List And Card">
<doc>Create a board and save its ID and its first list's ID</doc>
<kw name="Create A Board" library="Board">
<var>${BOARD}</var>
<arg>TestBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 19:34:51.443" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 19:34:51.443" endtime="20220704 19:34:51.443"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 19:34:51.443" endtime="20220704 19:34:51.443"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 19:34:51.444" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220704 19:34:51.443" endtime="20220704 19:34:51.444"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 19:34:51.696" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:34:51.444" endtime="20220704 19:34:51.696"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 19:34:51.696" endtime="20220704 19:34:51.696"/>
</return>
<msg timestamp="20220704 19:34:51.696" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:34:51.443" endtime="20220704 19:34:51.696"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 19:34:51.696" endtime="20220704 19:34:51.696"/>
</return>
<msg timestamp="20220704 19:34:51.696" level="INFO">${BOARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:34:51.442" endtime="20220704 19:34:51.696"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_BOARD_ID}</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220704 19:34:51.697" level="INFO">${TEST_SUITE_BOARD_ID} = 62c340dbf0176c291365e727</msg>
<status status="PASS" starttime="20220704 19:34:51.697" endtime="20220704 19:34:51.697"/>
</kw>
<kw name="Get Lists On A Board" library="Board">
<var>${LISTS}</var>
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Get all the lists in a board</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>lists_on_board</arg>
<arg>${id}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 19:34:51.698" level="INFO">${url} = boards/62c340dbf0176c291365e727/lists/</msg>
<status status="PASS" starttime="20220704 19:34:51.698" endtime="20220704 19:34:51.698"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 19:34:51.767" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:34:51.698" endtime="20220704 19:34:51.767"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 19:34:51.767" endtime="20220704 19:34:51.767"/>
</return>
<msg timestamp="20220704 19:34:51.767" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:34:51.698" endtime="20220704 19:34:51.767"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 19:34:51.768" endtime="20220704 19:34:51.768"/>
</return>
<msg timestamp="20220704 19:34:51.768" level="INFO">${LISTS} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:34:51.697" endtime="20220704 19:34:51.768"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_LIST_ID}</arg>
<arg>${LISTS.json()}[0][id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220704 19:34:51.768" level="INFO">${TEST_SUITE_LIST_ID} = 62c340dbf0176c291365e72e</msg>
<status status="PASS" starttime="20220704 19:34:51.768" endtime="20220704 19:34:51.769"/>
</kw>
<kw name="Create A Card" library="Card">
<var>${CARD}</var>
<arg>name</arg>
<arg>TestCard</arg>
<doc>Creates a new card in the given list.
required_args: listId
optional_args: name, desc, pos, idCardSource, idLabels, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>@{optional_args}</arg>
<arg>idList</arg>
<arg>${idList}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 19:34:51.770" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 19:34:51.770" endtime="20220704 19:34:51.770"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 19:34:51.770" endtime="20220704 19:34:51.770"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 19:34:51.771" level="INFO">${url} = cards/</msg>
<status status="PASS" starttime="20220704 19:34:51.770" endtime="20220704 19:34:51.771"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 19:34:51.959" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:34:51.771" endtime="20220704 19:34:51.959"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 19:34:51.959" endtime="20220704 19:34:51.959"/>
</return>
<msg timestamp="20220704 19:34:51.959" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:34:51.769" endtime="20220704 19:34:51.959"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 19:34:51.959" endtime="20220704 19:34:51.959"/>
</return>
<msg timestamp="20220704 19:34:51.959" level="INFO">${CARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:34:51.769" endtime="20220704 19:34:51.959"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_CARD_ID}</arg>
<arg>${CARD.json()}[id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220704 19:34:51.960" level="INFO">${TEST_SUITE_CARD_ID} = 62c340db9c72248d10702ed0</msg>
<status status="PASS" starttime="20220704 19:34:51.960" endtime="20220704 19:34:51.960"/>
</kw>
<status status="PASS" starttime="20220704 19:34:51.442" endtime="20220704 19:34:51.960"/>
</kw>
<status status="PASS" starttime="20220704 19:34:51.441" endtime="20220704 19:34:51.960"/>
</kw>
<test id="s1-s1-s3-t1" name="Verify A Checklist Can Be Created" line="14">
<kw name="Create A Checklist" library="Checklist">
<var>${response}</var>
<arg>name</arg>
<arg>TestChecklist</arg>
<arg>idCard=${TEST_SUITE_CARD_ID}</arg>
<doc>Creates a new checklist in the given card.
required_args: idCard
optional_args: name, pos, idChecklistSource
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>@{optional_args}</arg>
<arg>idCard</arg>
<arg>${idCard}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 19:34:51.962" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 19:34:51.962" endtime="20220704 19:34:51.962"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 19:34:51.962" endtime="20220704 19:34:51.963"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 19:34:51.963" level="INFO">${url} = checklists/</msg>
<status status="PASS" starttime="20220704 19:34:51.963" endtime="20220704 19:34:51.963"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 19:34:52.103" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:34:51.963" endtime="20220704 19:34:52.103"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 19:34:52.103" endtime="20220704 19:34:52.103"/>
</return>
<msg timestamp="20220704 19:34:52.103" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:34:51.962" endtime="20220704 19:34:52.103"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 19:34:52.103" endtime="20220704 19:34:52.103"/>
</return>
<msg timestamp="20220704 19:34:52.103" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:34:51.961" endtime="20220704 19:34:52.103"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${checklist_id}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 19:34:52.104" endtime="20220704 19:34:52.104"/>
</return>
<msg timestamp="20220704 19:34:52.104" level="INFO">${checklist_id} = 62c340dc310b436c5b8bfc1d</msg>
<status status="PASS" starttime="20220704 19:34:52.104" endtime="20220704 19:34:52.104"/>
</kw>
<kw name="Get A Checklist" library="Checklist">
<var>${response}</var>
<arg>${checklist_id}</arg>
<doc>Gets the checklist with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 19:34:52.105" level="INFO">${url} = checklists/62c340dc310b436c5b8bfc1d</msg>
<status status="PASS" starttime="20220704 19:34:52.105" endtime="20220704 19:34:52.105"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 19:34:52.192" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:34:52.106" endtime="20220704 19:34:52.193"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 19:34:52.193" endtime="20220704 19:34:52.193"/>
</return>
<msg timestamp="20220704 19:34:52.193" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:34:52.105" endtime="20220704 19:34:52.193"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 19:34:52.193" endtime="20220704 19:34:52.193"/>
</return>
<msg timestamp="20220704 19:34:52.193" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:34:52.105" endtime="20220704 19:34:52.193"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${checklist_name}</var>
<arg>${response}</arg>
<arg>name</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 19:34:52.193" endtime="20220704 19:34:52.194"/>
</return>
<msg timestamp="20220704 19:34:52.194" level="INFO">${checklist_name} = TestChecklist</msg>
<status status="PASS" starttime="20220704 19:34:52.193" endtime="20220704 19:34:52.194"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${checklist_name}</arg>
<arg>TestChecklist</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220704 19:34:52.194" endtime="20220704 19:34:52.194"/>
</kw>
<kw name="Delete A Checklist" library="Checklist" type="TEARDOWN">
<arg>${checklist_id}</arg>
<doc>Deletes the checklist with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 19:34:52.196" level="INFO">${url} = checklists/62c340dc310b436c5b8bfc1d</msg>
<status status="PASS" starttime="20220704 19:34:52.195" endtime="20220704 19:34:52.196"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 19:34:52.336" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:34:52.196" endtime="20220704 19:34:52.336"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 19:34:52.336" endtime="20220704 19:34:52.336"/>
</return>
<msg timestamp="20220704 19:34:52.336" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:34:52.195" endtime="20220704 19:34:52.336"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 19:34:52.336" endtime="20220704 19:34:52.336"/>
</return>
<status status="PASS" starttime="20220704 19:34:52.195" endtime="20220704 19:34:52.336"/>
</kw>
<doc>Verify that a checklist can be created through API</doc>
<tag>api</tag>
<tag>checklist.create</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220704 19:34:51.961" endtime="20220704 19:34:52.336"/>
</test>
<test id="s1-s1-s3-t2" name="Verify A Checklist Can Be Deleted" line="24">
<kw name="Create A Checklist" library="Checklist">
<var>${response}</var>
<arg>name</arg>
<arg>TestChecklist</arg>
<arg>idCard=${TEST_SUITE_CARD_ID}</arg>
<doc>Creates a new checklist in the given card.
required_args: idCard
optional_args: name, pos, idChecklistSource
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>@{optional_args}</arg>
<arg>idCard</arg>
<arg>${idCard}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 19:34:52.339" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 19:34:52.339" endtime="20220704 19:34:52.339"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 19:34:52.339" endtime="20220704 19:34:52.339"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 19:34:52.340" level="INFO">${url} = checklists/</msg>
<status status="PASS" starttime="20220704 19:34:52.339" endtime="20220704 19:34:52.340"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 19:34:52.484" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:34:52.340" endtime="20220704 19:34:52.484"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 19:34:52.484" endtime="20220704 19:34:52.484"/>
</return>
<msg timestamp="20220704 19:34:52.484" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:34:52.338" endtime="20220704 19:34:52.484"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 19:34:52.484" endtime="20220704 19:34:52.484"/>
</return>
<msg timestamp="20220704 19:34:52.484" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:34:52.338" endtime="20220704 19:34:52.484"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${checklist_id}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 19:34:52.485" endtime="20220704 19:34:52.485"/>
</return>
<msg timestamp="20220704 19:34:52.486" level="INFO">${checklist_id} = 62c340dc8cebff283a664425</msg>
<status status="PASS" starttime="20220704 19:34:52.485" endtime="20220704 19:34:52.486"/>
</kw>
<kw name="Delete A Checklist" library="Checklist">
<var>${response}</var>
<arg>${checklist_id}</arg>
<doc>Deletes the checklist with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 19:34:52.487" level="INFO">${url} = checklists/62c340dc8cebff283a664425</msg>
<status status="PASS" starttime="20220704 19:34:52.487" endtime="20220704 19:34:52.487"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 19:34:52.617" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:34:52.487" endtime="20220704 19:34:52.617"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 19:34:52.617" endtime="20220704 19:34:52.617"/>
</return>
<msg timestamp="20220704 19:34:52.618" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:34:52.486" endtime="20220704 19:34:52.618"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 19:34:52.618" endtime="20220704 19:34:52.618"/>
</return>
<msg timestamp="20220704 19:34:52.618" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:34:52.486" endtime="20220704 19:34:52.618"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>delete</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220704 19:34:52.618" endtime="20220704 19:34:52.620"/>
</kw>
<status status="PASS" starttime="20220704 19:34:52.618" endtime="20220704 19:34:52.620"/>
</kw>
<kw name="Get A Checklist" library="Checklist">
<arg>${checklist_id}</arg>
<arg>status_code=404</arg>
<doc>Gets the checklist with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 19:34:52.621" level="INFO">${url} = checklists/62c340dc8cebff283a664425</msg>
<status status="PASS" starttime="20220704 19:34:52.621" endtime="20220704 19:34:52.621"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 19:34:52.682" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220704 19:34:52.621" endtime="20220704 19:34:52.682"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 19:34:52.682" endtime="20220704 19:34:52.682"/>
</return>
<msg timestamp="20220704 19:34:52.682" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220704 19:34:52.620" endtime="20220704 19:34:52.682"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 19:34:52.682" endtime="20220704 19:34:52.682"/>
</return>
<status status="PASS" starttime="20220704 19:34:52.620" endtime="20220704 19:34:52.682"/>
</kw>
<doc>Verify that a checklist can be deleted through API</doc>
<tag>api</tag>
<tag>checklist.delete</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220704 19:34:52.337" endtime="20220704 19:34:52.683"/>
</test>
<test id="s1-s1-s3-t3" name="Verify A Checklist Can Be Updated" line="33">
<kw name="Create A Checklist" library="Checklist">
<var>${response}</var>
<arg>name</arg>
<arg>TestChecklist</arg>
<arg>idCard=${TEST_SUITE_CARD_ID}</arg>
<doc>Creates a new checklist in the given card.
required_args: idCard
optional_args: name, pos, idChecklistSource
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>@{optional_args}</arg>
<arg>idCard</arg>
<arg>${idCard}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 19:34:52.686" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 19:34:52.685" endtime="20220704 19:34:52.686"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 19:34:52.687" endtime="20220704 19:34:52.687"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 19:34:52.687" level="INFO">${url} = checklists/</msg>
<status status="PASS" starttime="20220704 19:34:52.687" endtime="20220704 19:34:52.687"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 19:34:52.900" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:34:52.688" endtime="20220704 19:34:52.900"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 19:34:52.901" endtime="20220704 19:34:52.901"/>
</return>
<msg timestamp="20220704 19:34:52.901" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:34:52.685" endtime="20220704 19:34:52.901"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 19:34:52.901" endtime="20220704 19:34:52.901"/>
</return>
<msg timestamp="20220704 19:34:52.901" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:34:52.684" endtime="20220704 19:34:52.901"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${checklist_id}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 19:34:52.901" endtime="20220704 19:34:52.901"/>
</return>
<msg timestamp="20220704 19:34:52.902" level="INFO">${checklist_id} = 62c340dce4608e148e07c2ec</msg>
<status status="PASS" starttime="20220704 19:34:52.901" endtime="20220704 19:34:52.902"/>
</kw>
<kw name="Update A Checklist" library="Checklist">
<var>${response}</var>
<arg>${checklist_id}</arg>
<arg>name</arg>
<arg>TestChecklist2</arg>
<doc>Updates the checklist with the given ID
optional_args: name, pos
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<arg>status_code=${status_code}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 19:34:52.903" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 19:34:52.903" endtime="20220704 19:34:52.903"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 19:34:52.903" endtime="20220704 19:34:52.903"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 19:34:52.904" level="INFO">${url} = checklists/62c340dce4608e148e07c2ec</msg>
<status status="PASS" starttime="20220704 19:34:52.903" endtime="20220704 19:34:52.904"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 19:34:53.005" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:34:52.904" endtime="20220704 19:34:53.005"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 19:34:53.005" endtime="20220704 19:34:53.005"/>
</return>
<msg timestamp="20220704 19:34:53.005" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:34:52.903" endtime="20220704 19:34:53.005"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 19:34:53.005" endtime="20220704 19:34:53.005"/>
</return>
<msg timestamp="20220704 19:34:53.005" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:34:52.902" endtime="20220704 19:34:53.005"/>
</kw>
<kw name="Get A Checklist" library="Checklist">
<var>${response}</var>
<arg>${checklist_id}</arg>
<doc>Gets the checklist with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 19:34:53.006" level="INFO">${url} = checklists/62c340dce4608e148e07c2ec</msg>
<status status="PASS" starttime="20220704 19:34:53.006" endtime="20220704 19:34:53.006"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 19:34:53.084" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:34:53.006" endtime="20220704 19:34:53.084"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 19:34:53.084" endtime="20220704 19:34:53.084"/>
</return>
<msg timestamp="20220704 19:34:53.084" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:34:53.006" endtime="20220704 19:34:53.084"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 19:34:53.084" endtime="20220704 19:34:53.084"/>
</return>
<msg timestamp="20220704 19:34:53.085" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:34:53.005" endtime="20220704 19:34:53.085"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${checklist_name}</var>
<arg>${response}</arg>
<arg>name</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 19:34:53.085" endtime="20220704 19:34:53.085"/>
</return>
<msg timestamp="20220704 19:34:53.085" level="INFO">${checklist_name} = TestChecklist2</msg>
<status status="PASS" starttime="20220704 19:34:53.085" endtime="20220704 19:34:53.086"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${checklist_name}</arg>
<arg>TestChecklist2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220704 19:34:53.086" endtime="20220704 19:34:53.086"/>
</kw>
<kw name="Delete A Checklist" library="Checklist" type="TEARDOWN">
<arg>${checklist_id}</arg>
<doc>Deletes the checklist with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 19:34:53.096" level="INFO">${url} = checklists/62c340dce4608e148e07c2ec</msg>
<status status="PASS" starttime="20220704 19:34:53.095" endtime="20220704 19:34:53.096"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 19:34:53.221" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:34:53.096" endtime="20220704 19:34:53.221"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 19:34:53.222" endtime="20220704 19:34:53.222"/>
</return>
<msg timestamp="20220704 19:34:53.222" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:34:53.095" endtime="20220704 19:34:53.222"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 19:34:53.222" endtime="20220704 19:34:53.222"/>
</return>
<status status="PASS" starttime="20220704 19:34:53.086" endtime="20220704 19:34:53.222"/>
</kw>
<doc>Verify that a checklist's name can be updated through API</doc>
<tag>api</tag>
<tag>checklist.update</tag>
<tag>regression</tag>
<status status="PASS" starttime="20220704 19:34:52.683" endtime="20220704 19:34:53.222"/>
</test>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Teardown Board</arg>
<arg>Delete All Sessions</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Teardown Board">
<doc>Delete the board created for this suite</doc>
<kw name="Delete A Board" library="Board">
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 19:34:53.224" level="INFO">${url} = boards/62c340dbf0176c291365e727</msg>
<status status="PASS" starttime="20220704 19:34:53.224" endtime="20220704 19:34:53.224"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 19:34:55.284" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:34:53.224" endtime="20220704 19:34:55.284"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 19:34:55.284" endtime="20220704 19:34:55.284"/>
</return>
<msg timestamp="20220704 19:34:55.284" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:34:53.224" endtime="20220704 19:34:55.284"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 19:34:55.284" endtime="20220704 19:34:55.284"/>
</return>
<status status="PASS" starttime="20220704 19:34:53.223" endtime="20220704 19:34:55.284"/>
</kw>
<status status="PASS" starttime="20220704 19:34:53.223" endtime="20220704 19:34:55.285"/>
</kw>
<kw name="Delete All Sessions" library="request_own_library">
<status status="PASS" starttime="20220704 19:34:55.285" endtime="20220704 19:34:55.285"/>
</kw>
<status status="PASS" starttime="20220704 19:34:53.223" endtime="20220704 19:34:55.286"/>
</kw>
<doc>Example Test with Trello API Checklists</doc>
<status status="PASS" starttime="20220704 19:34:51.434" endtime="20220704 19:34:55.286"/>
</suite>
<suite id="s1-s1-s4" name="Trello Api Labels Tests" source="/trello/api/trello_api_labels_tests.robot">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Create Trello Session</arg>
<arg>Setup Board And List</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Create Trello Session" library="TrelloAPI">
<doc>Creates a Trello Session</doc>
<kw name="Create Session" library="request_own_library">
<arg>${API_BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<status status="PASS" starttime="20220704 19:34:55.295" endtime="20220704 19:34:55.295"/>
</kw>
<status status="PASS" starttime="20220704 19:34:55.295" endtime="20220704 19:34:55.295"/>
</kw>
<kw name="Setup Board And List">
<doc>Create a board and save its ID and its first list's ID</doc>
<kw name="Create A Board" library="Board">
<var>${BOARD}</var>
<arg>TestBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 19:34:55.296" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 19:34:55.296" endtime="20220704 19:34:55.296"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 19:34:55.296" endtime="20220704 19:34:55.296"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 19:34:55.297" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220704 19:34:55.296" endtime="20220704 19:34:55.297"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 19:34:55.541" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:34:55.297" endtime="20220704 19:34:55.542"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 19:34:55.542" endtime="20220704 19:34:55.542"/>
</return>
<msg timestamp="20220704 19:34:55.542" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:34:55.296" endtime="20220704 19:34:55.542"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 19:34:55.542" endtime="20220704 19:34:55.542"/>
</return>
<msg timestamp="20220704 19:34:55.542" level="INFO">${BOARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:34:55.295" endtime="20220704 19:34:55.542"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_BOARD_ID}</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220704 19:34:55.543" level="INFO">${TEST_SUITE_BOARD_ID} = 62c340dfe13676626e1b196b</msg>
<status status="PASS" starttime="20220704 19:34:55.542" endtime="20220704 19:34:55.543"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${LISTS}</var>
<arg>boards/${TEST_SUITE_BOARD_ID}/lists</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 19:34:55.611" level="INFO">${LISTS} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:34:55.543" endtime="20220704 19:34:55.611"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_LIST_ID}</arg>
<arg>${LISTS.json()}[0][id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220704 19:34:55.612" level="INFO">${TEST_SUITE_LIST_ID} = 62c340dfe13676626e1b1972</msg>
<status status="PASS" starttime="20220704 19:34:55.611" endtime="20220704 19:34:55.612"/>
</kw>
<status status="PASS" starttime="20220704 19:34:55.295" endtime="20220704 19:34:55.612"/>
</kw>
<status status="PASS" starttime="20220704 19:34:55.294" endtime="20220704 19:34:55.612"/>
</kw>
<test id="s1-s1-s4-t1" name="Create and get label on board" line="14">
<kw name="Create A Label" library="Label">
<var>${response}</var>
<arg>name</arg>
<arg>label2</arg>
<arg>color</arg>
<arg>yellow</arg>
<doc>Creates a new label in the given board.
required_args: idBoard
optional_args: name, color
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>idBoard</arg>
<arg>${idBoard}</arg>
<arg>@{optional_args}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 19:34:55.613" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 19:34:55.613" endtime="20220704 19:34:55.613"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 19:34:55.613" endtime="20220704 19:34:55.614"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 19:34:55.614" level="INFO">${url} = labels/</msg>
<status status="PASS" starttime="20220704 19:34:55.614" endtime="20220704 19:34:55.614"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 19:34:56.047" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:34:55.614" endtime="20220704 19:34:56.047"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 19:34:56.047" endtime="20220704 19:34:56.047"/>
</return>
<msg timestamp="20220704 19:34:56.047" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:34:55.613" endtime="20220704 19:34:56.047"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 19:34:56.047" endtime="20220704 19:34:56.047"/>
</return>
<msg timestamp="20220704 19:34:56.047" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:34:55.612" endtime="20220704 19:34:56.047"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>label</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220704 19:34:56.048" endtime="20220704 19:34:56.049"/>
</kw>
<status status="PASS" starttime="20220704 19:34:56.047" endtime="20220704 19:34:56.049"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${LABEL_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 19:34:56.050" endtime="20220704 19:34:56.050"/>
</return>
<msg timestamp="20220704 19:34:56.050" level="INFO">${LABEL_ID} = 62c340df3e16cf2c03cfaee2</msg>
<status status="PASS" starttime="20220704 19:34:56.049" endtime="20220704 19:34:56.050"/>
</kw>
<kw name="Get A Label" library="Label">
<var>${response}</var>
<arg>${LABEL_ID}</arg>
<doc>Gets the label with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 19:34:56.051" level="INFO">${url} = labels/62c340df3e16cf2c03cfaee2</msg>
<status status="PASS" starttime="20220704 19:34:56.051" endtime="20220704 19:34:56.051"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 19:34:56.123" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:34:56.051" endtime="20220704 19:34:56.123"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 19:34:56.123" endtime="20220704 19:34:56.123"/>
</return>
<msg timestamp="20220704 19:34:56.123" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:34:56.051" endtime="20220704 19:34:56.123"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 19:34:56.124" endtime="20220704 19:34:56.124"/>
</return>
<msg timestamp="20220704 19:34:56.124" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:34:56.050" endtime="20220704 19:34:56.124"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${LABEL_COLOR}</var>
<arg>${response}</arg>
<arg>color</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 19:34:56.124" endtime="20220704 19:34:56.124"/>
</return>
<msg timestamp="20220704 19:34:56.125" level="INFO">${LABEL_COLOR} = yellow</msg>
<status status="PASS" starttime="20220704 19:34:56.124" endtime="20220704 19:34:56.125"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${LABEL_NAME}</var>
<arg>${response}</arg>
<arg>name</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 19:34:56.125" endtime="20220704 19:34:56.125"/>
</return>
<msg timestamp="20220704 19:34:56.126" level="INFO">${LABEL_NAME} = label2</msg>
<status status="PASS" starttime="20220704 19:34:56.125" endtime="20220704 19:34:56.126"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${LABEL_COLOR}</arg>
<arg>yellow</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220704 19:34:56.126" endtime="20220704 19:34:56.126"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${LABEL_NAME}</arg>
<arg>label2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220704 19:34:56.126" endtime="20220704 19:34:56.126"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Label</arg>
<arg>${LABEL_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Label" library="Label">
<arg>${LABEL_ID}</arg>
<doc>Deletes the label with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 19:34:56.127" level="INFO">${url} = labels/62c340df3e16cf2c03cfaee2</msg>
<status status="PASS" starttime="20220704 19:34:56.127" endtime="20220704 19:34:56.127"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 19:34:56.253" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:34:56.127" endtime="20220704 19:34:56.253"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 19:34:56.253" endtime="20220704 19:34:56.253"/>
</return>
<msg timestamp="20220704 19:34:56.253" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:34:56.127" endtime="20220704 19:34:56.253"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 19:34:56.253" endtime="20220704 19:34:56.253"/>
</return>
<status status="PASS" starttime="20220704 19:34:56.126" endtime="20220704 19:34:56.254"/>
</kw>
<status status="PASS" starttime="20220704 19:34:56.126" endtime="20220704 19:34:56.254"/>
</kw>
<doc>Verify that a label can be created through API</doc>
<tag>api</tag>
<tag>label.create</tag>
<tag>label.get</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220704 19:34:55.612" endtime="20220704 19:34:56.254"/>
</test>
<test id="s1-s1-s4-t2" name="Update label on board" line="28">
<kw name="Create A Label" library="Label">
<var>${response}</var>
<arg>name</arg>
<arg>label2</arg>
<arg>color</arg>
<arg>yellow</arg>
<doc>Creates a new label in the given board.
required_args: idBoard
optional_args: name, color
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>idBoard</arg>
<arg>${idBoard}</arg>
<arg>@{optional_args}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 19:34:56.256" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 19:34:56.256" endtime="20220704 19:34:56.256"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 19:34:56.256" endtime="20220704 19:34:56.256"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 19:34:56.257" level="INFO">${url} = labels/</msg>
<status status="PASS" starttime="20220704 19:34:56.256" endtime="20220704 19:34:56.257"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 19:34:56.367" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:34:56.257" endtime="20220704 19:34:56.367"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 19:34:56.367" endtime="20220704 19:34:56.367"/>
</return>
<msg timestamp="20220704 19:34:56.367" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:34:56.255" endtime="20220704 19:34:56.367"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 19:34:56.367" endtime="20220704 19:34:56.367"/>
</return>
<msg timestamp="20220704 19:34:56.367" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:34:56.255" endtime="20220704 19:34:56.367"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>label</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220704 19:34:56.368" endtime="20220704 19:34:56.369"/>
</kw>
<status status="PASS" starttime="20220704 19:34:56.367" endtime="20220704 19:34:56.369"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${LABEL_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 19:34:56.370" endtime="20220704 19:34:56.370"/>
</return>
<msg timestamp="20220704 19:34:56.370" level="INFO">${LABEL_ID} = 62c340e04925f880fdca78f3</msg>
<status status="PASS" starttime="20220704 19:34:56.369" endtime="20220704 19:34:56.370"/>
</kw>
<kw name="Update A Label" library="Label">
<var>${new_response}</var>
<arg>${LABEL_ID}</arg>
<arg>name</arg>
<arg>label3</arg>
<arg>color</arg>
<arg>orange</arg>
<doc>Updates the label with the given ID
optional_args: name, color
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 19:34:56.371" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 19:34:56.371" endtime="20220704 19:34:56.371"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 19:34:56.371" endtime="20220704 19:34:56.371"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 19:34:56.372" level="INFO">${url} = labels/62c340e04925f880fdca78f3</msg>
<status status="PASS" starttime="20220704 19:34:56.372" endtime="20220704 19:34:56.372"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 19:34:56.504" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:34:56.372" endtime="20220704 19:34:56.504"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 19:34:56.504" endtime="20220704 19:34:56.504"/>
</return>
<msg timestamp="20220704 19:34:56.505" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:34:56.371" endtime="20220704 19:34:56.505"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 19:34:56.505" endtime="20220704 19:34:56.505"/>
</return>
<msg timestamp="20220704 19:34:56.505" level="INFO">${new_response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:34:56.370" endtime="20220704 19:34:56.505"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${NEW_LABEL_COLOR}</var>
<arg>${new_response}</arg>
<arg>color</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 19:34:56.505" endtime="20220704 19:34:56.505"/>
</return>
<msg timestamp="20220704 19:34:56.506" level="INFO">${NEW_LABEL_COLOR} = orange</msg>
<status status="PASS" starttime="20220704 19:34:56.505" endtime="20220704 19:34:56.506"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${NEW_LABEL_NAME}</var>
<arg>${new_response}</arg>
<arg>name</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 19:34:56.506" endtime="20220704 19:34:56.506"/>
</return>
<msg timestamp="20220704 19:34:56.507" level="INFO">${NEW_LABEL_NAME} = label3</msg>
<status status="PASS" starttime="20220704 19:34:56.506" endtime="20220704 19:34:56.507"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${NEW_LABEL_COLOR}</arg>
<arg>orange</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220704 19:34:56.507" endtime="20220704 19:34:56.507"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${NEW_LABEL_NAME}</arg>
<arg>label3</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220704 19:34:56.507" endtime="20220704 19:34:56.507"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Label</arg>
<arg>${LABEL_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Label" library="Label">
<arg>${LABEL_ID}</arg>
<doc>Deletes the label with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 19:34:56.509" level="INFO">${url} = labels/62c340e04925f880fdca78f3</msg>
<status status="PASS" starttime="20220704 19:34:56.509" endtime="20220704 19:34:56.509"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 19:34:56.645" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:34:56.509" endtime="20220704 19:34:56.645"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 19:34:56.645" endtime="20220704 19:34:56.645"/>
</return>
<msg timestamp="20220704 19:34:56.645" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:34:56.508" endtime="20220704 19:34:56.645"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 19:34:56.645" endtime="20220704 19:34:56.645"/>
</return>
<status status="PASS" starttime="20220704 19:34:56.508" endtime="20220704 19:34:56.645"/>
</kw>
<status status="PASS" starttime="20220704 19:34:56.508" endtime="20220704 19:34:56.645"/>
</kw>
<doc>Verify that a label's name and color can be updated through API</doc>
<tag>api</tag>
<tag>label.update</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220704 19:34:56.254" endtime="20220704 19:34:56.646"/>
</test>
<test id="s1-s1-s4-t3" name="Delete label on board" line="41">
<kw name="Create A Label" library="Label">
<var>${response}</var>
<arg>name</arg>
<arg>label2</arg>
<arg>color</arg>
<arg>yellow</arg>
<doc>Creates a new label in the given board.
required_args: idBoard
optional_args: name, color
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>idBoard</arg>
<arg>${idBoard}</arg>
<arg>@{optional_args}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 19:34:56.648" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 19:34:56.648" endtime="20220704 19:34:56.648"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 19:34:56.648" endtime="20220704 19:34:56.648"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 19:34:56.649" level="INFO">${url} = labels/</msg>
<status status="PASS" starttime="20220704 19:34:56.648" endtime="20220704 19:34:56.649"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 19:34:56.761" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:34:56.649" endtime="20220704 19:34:56.761"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 19:34:56.761" endtime="20220704 19:34:56.761"/>
</return>
<msg timestamp="20220704 19:34:56.761" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:34:56.647" endtime="20220704 19:34:56.761"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 19:34:56.761" endtime="20220704 19:34:56.761"/>
</return>
<msg timestamp="20220704 19:34:56.761" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:34:56.647" endtime="20220704 19:34:56.761"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${LABEL_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 19:34:56.762" endtime="20220704 19:34:56.762"/>
</return>
<msg timestamp="20220704 19:34:56.762" level="INFO">${LABEL_ID} = 62c340e0421baf857cfe7cc7</msg>
<status status="PASS" starttime="20220704 19:34:56.761" endtime="20220704 19:34:56.762"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Label</arg>
<arg>${LABEL_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Label" library="Label">
<arg>${LABEL_ID}</arg>
<doc>Deletes the label with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 19:34:56.764" level="INFO">${url} = labels/62c340e0421baf857cfe7cc7</msg>
<status status="PASS" starttime="20220704 19:34:56.764" endtime="20220704 19:34:56.764"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 19:34:56.886" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:34:56.764" endtime="20220704 19:34:56.886"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 19:34:56.886" endtime="20220704 19:34:56.887"/>
</return>
<msg timestamp="20220704 19:34:56.887" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:34:56.763" endtime="20220704 19:34:56.887"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 19:34:56.887" endtime="20220704 19:34:56.887"/>
</return>
<status status="PASS" starttime="20220704 19:34:56.763" endtime="20220704 19:34:56.887"/>
</kw>
<status status="PASS" starttime="20220704 19:34:56.763" endtime="20220704 19:34:56.887"/>
</kw>
<kw name="Get A Label" library="Label">
<arg>${LABEL_ID}</arg>
<arg>status_code=404</arg>
<doc>Gets the label with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 19:34:56.888" level="INFO">${url} = labels/62c340e0421baf857cfe7cc7</msg>
<status status="PASS" starttime="20220704 19:34:56.888" endtime="20220704 19:34:56.888"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 19:34:56.953" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220704 19:34:56.888" endtime="20220704 19:34:56.953"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 19:34:56.953" endtime="20220704 19:34:56.953"/>
</return>
<msg timestamp="20220704 19:34:56.953" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220704 19:34:56.887" endtime="20220704 19:34:56.953"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 19:34:56.953" endtime="20220704 19:34:56.953"/>
</return>
<status status="PASS" starttime="20220704 19:34:56.887" endtime="20220704 19:34:56.953"/>
</kw>
<doc>Verify that a label can be deleted through API</doc>
<tag>api</tag>
<tag>label.delete</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220704 19:34:56.646" endtime="20220704 19:34:56.954"/>
</test>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Teardown Board</arg>
<arg>Delete All Sessions</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Teardown Board">
<doc>Delete the board created for this session.</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 19:34:56.956" level="INFO">${url} = boards/62c340dfe13676626e1b196b</msg>
<status status="PASS" starttime="20220704 19:34:56.956" endtime="20220704 19:34:56.956"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 19:34:57.315" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:34:56.956" endtime="20220704 19:34:57.315"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 19:34:57.315" endtime="20220704 19:34:57.315"/>
</return>
<msg timestamp="20220704 19:34:57.315" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:34:56.956" endtime="20220704 19:34:57.316"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 19:34:57.316" endtime="20220704 19:34:57.316"/>
</return>
<status status="PASS" starttime="20220704 19:34:56.955" endtime="20220704 19:34:57.316"/>
</kw>
<status status="PASS" starttime="20220704 19:34:56.955" endtime="20220704 19:34:57.316"/>
</kw>
<status status="PASS" starttime="20220704 19:34:56.955" endtime="20220704 19:34:57.316"/>
</kw>
<kw name="Delete All Sessions" library="request_own_library">
<status status="PASS" starttime="20220704 19:34:57.316" endtime="20220704 19:34:57.317"/>
</kw>
<status status="PASS" starttime="20220704 19:34:56.955" endtime="20220704 19:34:57.317"/>
</kw>
<doc>Example Test with Trello API Cards</doc>
<status status="PASS" starttime="20220704 19:34:55.287" endtime="20220704 19:34:57.317"/>
</suite>
<suite id="s1-s1-s5" name="Trello Api Lists Tests" source="/trello/api/trello_api_lists_tests.robot">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Create Trello Session</arg>
<arg>Setup Board</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Create Trello Session" library="TrelloAPI">
<doc>Creates a Trello Session</doc>
<kw name="Create Session" library="request_own_library">
<arg>${API_BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<status status="PASS" starttime="20220704 19:34:57.326" endtime="20220704 19:34:57.326"/>
</kw>
<status status="PASS" starttime="20220704 19:34:57.326" endtime="20220704 19:34:57.326"/>
</kw>
<kw name="Setup Board">
<doc>Create a board and save it's id for the suite</doc>
<kw name="Create A Board" library="Board">
<var>${BOARD}</var>
<arg>TestBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 19:34:57.327" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 19:34:57.327" endtime="20220704 19:34:57.327"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 19:34:57.327" endtime="20220704 19:34:57.328"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 19:34:57.328" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220704 19:34:57.328" endtime="20220704 19:34:57.328"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 19:34:57.589" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:34:57.328" endtime="20220704 19:34:57.589"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 19:34:57.589" endtime="20220704 19:34:57.589"/>
</return>
<msg timestamp="20220704 19:34:57.590" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:34:57.327" endtime="20220704 19:34:57.590"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 19:34:57.590" endtime="20220704 19:34:57.590"/>
</return>
<msg timestamp="20220704 19:34:57.590" level="INFO">${BOARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:34:57.327" endtime="20220704 19:34:57.590"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Set Suite Variable</arg>
<arg>\${TEST_SUITE_BOARD_ID}</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_BOARD_ID}</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220704 19:34:57.591" level="INFO">${TEST_SUITE_BOARD_ID} = 62c340e1545a6089cc0c05dc</msg>
<status status="PASS" starttime="20220704 19:34:57.590" endtime="20220704 19:34:57.591"/>
</kw>
<status status="PASS" starttime="20220704 19:34:57.590" endtime="20220704 19:34:57.591"/>
</kw>
<status status="PASS" starttime="20220704 19:34:57.326" endtime="20220704 19:34:57.591"/>
</kw>
<status status="PASS" starttime="20220704 19:34:57.325" endtime="20220704 19:34:57.591"/>
</kw>
<test id="s1-s1-s5-t1" name="CREATE a list" line="13">
<kw name="Create A List" library="List">
<var>${response}</var>
<arg>NewList</arg>
<doc>Creates a new List
board id
name the list will have
optional_args: idListSource, pos, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>list</arg>
<arg>name</arg>
<arg>${name}</arg>
<arg>idBoard</arg>
<arg>${idBoard}</arg>
<arg>@{optional_args}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 19:34:57.593" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 19:34:57.592" endtime="20220704 19:34:57.593"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 19:34:57.593" endtime="20220704 19:34:57.593"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 19:34:57.594" level="INFO">${url} = lists/</msg>
<status status="PASS" starttime="20220704 19:34:57.593" endtime="20220704 19:34:57.594"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 19:34:57.721" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:34:57.594" endtime="20220704 19:34:57.721"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 19:34:57.722" endtime="20220704 19:34:57.722"/>
</return>
<msg timestamp="20220704 19:34:57.722" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:34:57.592" endtime="20220704 19:34:57.722"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 19:34:57.722" endtime="20220704 19:34:57.722"/>
</return>
<msg timestamp="20220704 19:34:57.722" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:34:57.592" endtime="20220704 19:34:57.722"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>list</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220704 19:34:57.723" endtime="20220704 19:34:57.724"/>
</kw>
<status status="PASS" starttime="20220704 19:34:57.722" endtime="20220704 19:34:57.724"/>
</kw>
<doc>Verify that a list can be created through API</doc>
<tag>api</tag>
<tag>list.create</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220704 19:34:57.591" endtime="20220704 19:34:57.724"/>
</test>
<test id="s1-s1-s5-t2" name="UPDATE a list" line="19">
<kw name="Create A List" library="List">
<var>${response}</var>
<arg>NewList</arg>
<doc>Creates a new List
board id
name the list will have
optional_args: idListSource, pos, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>list</arg>
<arg>name</arg>
<arg>${name}</arg>
<arg>idBoard</arg>
<arg>${idBoard}</arg>
<arg>@{optional_args}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 19:34:57.727" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 19:34:57.726" endtime="20220704 19:34:57.727"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 19:34:57.727" endtime="20220704 19:34:57.727"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 19:34:57.728" level="INFO">${url} = lists/</msg>
<status status="PASS" starttime="20220704 19:34:57.727" endtime="20220704 19:34:57.728"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 19:34:57.845" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:34:57.728" endtime="20220704 19:34:57.845"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 19:34:57.845" endtime="20220704 19:34:57.845"/>
</return>
<msg timestamp="20220704 19:34:57.845" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:34:57.726" endtime="20220704 19:34:57.845"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 19:34:57.845" endtime="20220704 19:34:57.845"/>
</return>
<msg timestamp="20220704 19:34:57.845" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:34:57.726" endtime="20220704 19:34:57.845"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>list</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220704 19:34:57.846" endtime="20220704 19:34:57.847"/>
</kw>
<status status="PASS" starttime="20220704 19:34:57.846" endtime="20220704 19:34:57.847"/>
</kw>
<kw name="Update A List" library="List">
<arg>${response.json()}[id]</arg>
<arg>name</arg>
<arg>NewName</arg>
<doc>Updates the board with the given ID
optional_args: name, idListSource, pos, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>list</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 19:34:57.849" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 19:34:57.849" endtime="20220704 19:34:57.849"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 19:34:57.849" endtime="20220704 19:34:57.849"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 19:34:57.849" level="INFO">${url} = lists/62c340e137e14731998891b6</msg>
<status status="PASS" starttime="20220704 19:34:57.849" endtime="20220704 19:34:57.849"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 19:34:57.953" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:34:57.850" endtime="20220704 19:34:57.953"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 19:34:57.953" endtime="20220704 19:34:57.953"/>
</return>
<msg timestamp="20220704 19:34:57.954" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:34:57.848" endtime="20220704 19:34:57.954"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 19:34:57.954" endtime="20220704 19:34:57.954"/>
</return>
<status status="PASS" starttime="20220704 19:34:57.847" endtime="20220704 19:34:57.954"/>
</kw>
<kw name="Get A List" library="List">
<var>${new_response}</var>
<arg>${response.json()}[id]</arg>
<doc>Gets the List with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>list</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 19:34:57.955" level="INFO">${url} = lists/62c340e137e14731998891b6</msg>
<status status="PASS" starttime="20220704 19:34:57.955" endtime="20220704 19:34:57.955"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 19:34:58.027" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:34:57.955" endtime="20220704 19:34:58.027"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 19:34:58.027" endtime="20220704 19:34:58.027"/>
</return>
<msg timestamp="20220704 19:34:58.027" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:34:57.955" endtime="20220704 19:34:58.027"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 19:34:58.027" endtime="20220704 19:34:58.027"/>
</return>
<msg timestamp="20220704 19:34:58.027" level="INFO">${new_response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:34:57.954" endtime="20220704 19:34:58.027"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${new_response}</arg>
<arg>list</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220704 19:34:58.028" endtime="20220704 19:34:58.029"/>
</kw>
<status status="PASS" starttime="20220704 19:34:58.027" endtime="20220704 19:34:58.029"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${new_response.json()}[name]</arg>
<arg>NewName</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220704 19:34:58.029" endtime="20220704 19:34:58.029"/>
</kw>
<doc>Verify that a lists name can be updated through API</doc>
<tag>api</tag>
<tag>list.update</tag>
<tag>regression</tag>
<status status="PASS" starttime="20220704 19:34:57.725" endtime="20220704 19:34:58.030"/>
</test>
<test id="s1-s1-s5-t3" name="ARCHIVE A list" line="29">
<kw name="Create A List" library="List">
<var>${response}</var>
<arg>NewList</arg>
<doc>Creates a new List
board id
name the list will have
optional_args: idListSource, pos, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>list</arg>
<arg>name</arg>
<arg>${name}</arg>
<arg>idBoard</arg>
<arg>${idBoard}</arg>
<arg>@{optional_args}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 19:34:58.033" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 19:34:58.033" endtime="20220704 19:34:58.033"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 19:34:58.033" endtime="20220704 19:34:58.033"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 19:34:58.034" level="INFO">${url} = lists/</msg>
<status status="PASS" starttime="20220704 19:34:58.033" endtime="20220704 19:34:58.034"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 19:34:58.136" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:34:58.034" endtime="20220704 19:34:58.136"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 19:34:58.136" endtime="20220704 19:34:58.136"/>
</return>
<msg timestamp="20220704 19:34:58.136" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:34:58.032" endtime="20220704 19:34:58.136"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 19:34:58.136" endtime="20220704 19:34:58.136"/>
</return>
<msg timestamp="20220704 19:34:58.136" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:34:58.031" endtime="20220704 19:34:58.136"/>
</kw>
<kw name="Archive A List" library="List">
<arg>${response.json()}[id]</arg>
<doc>Deletes the list with the given ID</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>archive_list</arg>
<arg>${id}</arg>
<arg>value</arg>
<arg>true</arg>
<arg>status_code=${status_code}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 19:34:58.138" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 19:34:58.138" endtime="20220704 19:34:58.138"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 19:34:58.138" endtime="20220704 19:34:58.138"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 19:34:58.139" level="INFO">${url} = lists/62c340e2fec7b52c9b369916/closed</msg>
<status status="PASS" starttime="20220704 19:34:58.138" endtime="20220704 19:34:58.139"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 19:34:58.246" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:34:58.139" endtime="20220704 19:34:58.246"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 19:34:58.246" endtime="20220704 19:34:58.246"/>
</return>
<msg timestamp="20220704 19:34:58.246" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:34:58.137" endtime="20220704 19:34:58.246"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 19:34:58.246" endtime="20220704 19:34:58.246"/>
</return>
<status status="PASS" starttime="20220704 19:34:58.137" endtime="20220704 19:34:58.246"/>
</kw>
<kw name="Get A List" library="List">
<var>${new_response}</var>
<arg>${response.json()}[id]</arg>
<doc>Gets the List with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>list</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 19:34:58.248" level="INFO">${url} = lists/62c340e2fec7b52c9b369916</msg>
<status status="PASS" starttime="20220704 19:34:58.248" endtime="20220704 19:34:58.248"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 19:34:58.314" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:34:58.248" endtime="20220704 19:34:58.314"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 19:34:58.314" endtime="20220704 19:34:58.314"/>
</return>
<msg timestamp="20220704 19:34:58.314" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:34:58.247" endtime="20220704 19:34:58.314"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 19:34:58.314" endtime="20220704 19:34:58.314"/>
</return>
<msg timestamp="20220704 19:34:58.315" level="INFO">${new_response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:34:58.246" endtime="20220704 19:34:58.315"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${new_response.json()}[closed]</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220704 19:34:58.315" endtime="20220704 19:34:58.315"/>
</kw>
<doc>Verify that a list can be archived through API</doc>
<tag>api</tag>
<tag>list.archive</tag>
<tag>regression</tag>
<status status="PASS" starttime="20220704 19:34:58.030" endtime="20220704 19:34:58.315"/>
</test>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Teardown Board</arg>
<arg>Delete All Sessions</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Teardown Board">
<doc>Delete the board created for this suite.</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 19:34:58.318" level="INFO">${url} = boards/62c340e1545a6089cc0c05dc</msg>
<status status="PASS" starttime="20220704 19:34:58.318" endtime="20220704 19:34:58.318"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 19:34:58.649" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:34:58.318" endtime="20220704 19:34:58.649"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 19:34:58.649" endtime="20220704 19:34:58.649"/>
</return>
<msg timestamp="20220704 19:34:58.650" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:34:58.317" endtime="20220704 19:34:58.650"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 19:34:58.650" endtime="20220704 19:34:58.650"/>
</return>
<status status="PASS" starttime="20220704 19:34:58.317" endtime="20220704 19:34:58.650"/>
</kw>
<status status="PASS" starttime="20220704 19:34:58.317" endtime="20220704 19:34:58.650"/>
</kw>
<status status="PASS" starttime="20220704 19:34:58.316" endtime="20220704 19:34:58.650"/>
</kw>
<kw name="Delete All Sessions" library="request_own_library">
<status status="PASS" starttime="20220704 19:34:58.650" endtime="20220704 19:34:58.651"/>
</kw>
<status status="PASS" starttime="20220704 19:34:58.316" endtime="20220704 19:34:58.651"/>
</kw>
<doc>Example Test with Trello API lists</doc>
<status status="PASS" starttime="20220704 19:34:57.318" endtime="20220704 19:34:58.651"/>
</suite>
<status status="PASS" starttime="20220704 19:34:44.787" endtime="20220704 19:34:58.653"/>
</suite>
<status status="PASS" starttime="20220704 19:34:44.772" endtime="20220704 19:34:58.656"/>
</suite>
<statistics>
<total>
<stat pass="18" fail="0" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="18" fail="0" skip="0">api</stat>
<stat pass="1" fail="0" skip="0">board.create</stat>
<stat pass="1" fail="0" skip="0">board.delete</stat>
<stat pass="1" fail="0" skip="0">board.get</stat>
<stat pass="2" fail="0" skip="0">board.update</stat>
<stat pass="1" fail="0" skip="0">card.close</stat>
<stat pass="1" fail="0" skip="0">card.create</stat>
<stat pass="1" fail="0" skip="0">card.delete</stat>
<stat pass="1" fail="0" skip="0">card.update</stat>
<stat pass="1" fail="0" skip="0">checklist.create</stat>
<stat pass="1" fail="0" skip="0">checklist.delete</stat>
<stat pass="1" fail="0" skip="0">checklist.update</stat>
<stat pass="1" fail="0" skip="0">label.create</stat>
<stat pass="1" fail="0" skip="0">label.delete</stat>
<stat pass="1" fail="0" skip="0">label.get</stat>
<stat pass="1" fail="0" skip="0">label.update</stat>
<stat pass="1" fail="0" skip="0">list.archive</stat>
<stat pass="1" fail="0" skip="0">list.create</stat>
<stat pass="1" fail="0" skip="0">list.update</stat>
<stat pass="5" fail="0" skip="0">regression</stat>
<stat pass="13" fail="0" skip="0">smoke</stat>
</tag>
<suite>
<stat pass="18" fail="0" skip="0" id="s1" name="Trello">Trello</stat>
<stat pass="18" fail="0" skip="0" id="s1-s1" name="Api">Trello.Api</stat>
<stat pass="5" fail="0" skip="0" id="s1-s1-s1" name="Trello Api Boards Tests">Trello.Api.Trello Api Boards Tests</stat>
<stat pass="4" fail="0" skip="0" id="s1-s1-s2" name="Trello Api Cards Tests">Trello.Api.Trello Api Cards Tests</stat>
<stat pass="3" fail="0" skip="0" id="s1-s1-s3" name="Trello Api Checklists Tests">Trello.Api.Trello Api Checklists Tests</stat>
<stat pass="3" fail="0" skip="0" id="s1-s1-s4" name="Trello Api Labels Tests">Trello.Api.Trello Api Labels Tests</stat>
<stat pass="3" fail="0" skip="0" id="s1-s1-s5" name="Trello Api Lists Tests">Trello.Api.Trello Api Lists Tests</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
