<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 5.0.1 (Python 3.10.5 on linux)" generated="20220705 08:48:42.039" rpa="false" schemaversion="3">
<suite id="s1" name="Trello" source="/trello">
<suite id="s1-s1" name="Api" source="/trello/api">
<suite id="s1-s1-s1" name="Trello Api Boards Tests" source="/trello/api/trello_api_boards_tests.robot">
<kw name="Create Trello Session" library="TrelloAPI" type="SETUP">
<doc>Creates a Trello Session</doc>
<kw name="Create Session" library="request_own_library">
<arg>${API_BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<status status="PASS" starttime="20220705 08:48:42.208" endtime="20220705 08:48:42.208"/>
</kw>
<status status="PASS" starttime="20220705 08:48:42.206" endtime="20220705 08:48:42.209"/>
</kw>
<test id="s1-s1-s1-t1" name="CREATE a board" line="9">
<kw name="Create A Board" library="Board">
<var>${response}</var>
<arg>NewBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 08:48:42.211" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 08:48:42.211" endtime="20220705 08:48:42.212"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 08:48:42.212" endtime="20220705 08:48:42.212"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 08:48:42.213" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220705 08:48:42.212" endtime="20220705 08:48:42.213"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 08:48:42.440" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 08:48:42.213" endtime="20220705 08:48:42.440"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 08:48:42.440" endtime="20220705 08:48:42.440"/>
</return>
<msg timestamp="20220705 08:48:42.440" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 08:48:42.211" endtime="20220705 08:48:42.440"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 08:48:42.440" endtime="20220705 08:48:42.440"/>
</return>
<msg timestamp="20220705 08:48:42.441" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 08:48:42.210" endtime="20220705 08:48:42.441"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>board</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 08:48:42.441" endtime="20220705 08:48:42.446"/>
</kw>
<status status="PASS" starttime="20220705 08:48:42.441" endtime="20220705 08:48:42.447"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${response.json()}[id]</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${response.json()}[id]</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 08:48:42.449" level="INFO">${url} = boards/62c3faeabd8fb2328bf041f1</msg>
<status status="PASS" starttime="20220705 08:48:42.449" endtime="20220705 08:48:42.449"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 08:48:42.932" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 08:48:42.449" endtime="20220705 08:48:42.932"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 08:48:42.932" endtime="20220705 08:48:42.932"/>
</return>
<msg timestamp="20220705 08:48:42.932" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 08:48:42.448" endtime="20220705 08:48:42.932"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 08:48:42.932" endtime="20220705 08:48:42.933"/>
</return>
<status status="PASS" starttime="20220705 08:48:42.447" endtime="20220705 08:48:42.933"/>
</kw>
<status status="PASS" starttime="20220705 08:48:42.447" endtime="20220705 08:48:42.933"/>
</kw>
<doc>Verify that a board can be create through API</doc>
<tag>api</tag>
<tag>board.create</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220705 08:48:42.209" endtime="20220705 08:48:42.933"/>
</test>
<test id="s1-s1-s1-t2" name="UPDATE a Board's name" line="16">
<kw name="Create A Board" library="Board">
<var>${response}</var>
<arg>NewBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 08:48:42.936" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 08:48:42.936" endtime="20220705 08:48:42.936"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 08:48:42.936" endtime="20220705 08:48:42.937"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 08:48:42.937" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220705 08:48:42.937" endtime="20220705 08:48:42.937"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 08:48:43.158" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 08:48:42.938" endtime="20220705 08:48:43.158"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 08:48:43.159" endtime="20220705 08:48:43.159"/>
</return>
<msg timestamp="20220705 08:48:43.159" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 08:48:42.935" endtime="20220705 08:48:43.159"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 08:48:43.159" endtime="20220705 08:48:43.159"/>
</return>
<msg timestamp="20220705 08:48:43.159" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 08:48:42.935" endtime="20220705 08:48:43.159"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>board</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 08:48:43.160" endtime="20220705 08:48:43.166"/>
</kw>
<status status="PASS" starttime="20220705 08:48:43.160" endtime="20220705 08:48:43.166"/>
</kw>
<kw name="Update A Board" library="Board">
<arg>${response.json()}[id]</arg>
<arg>name</arg>
<arg>NewName</arg>
<doc>Updates the board with the given ID
optional_args: name, desc, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 08:48:43.168" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 08:48:43.168" endtime="20220705 08:48:43.168"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 08:48:43.168" endtime="20220705 08:48:43.169"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 08:48:43.169" level="INFO">${url} = boards/62c3faeb5c8b6f5866fa4910</msg>
<status status="PASS" starttime="20220705 08:48:43.169" endtime="20220705 08:48:43.169"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 08:48:43.307" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 08:48:43.169" endtime="20220705 08:48:43.307"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 08:48:43.307" endtime="20220705 08:48:43.307"/>
</return>
<msg timestamp="20220705 08:48:43.308" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 08:48:43.167" endtime="20220705 08:48:43.308"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 08:48:43.308" endtime="20220705 08:48:43.308"/>
</return>
<status status="PASS" starttime="20220705 08:48:43.166" endtime="20220705 08:48:43.308"/>
</kw>
<kw name="Get A Board" library="Board">
<var>${new_response}</var>
<arg>${response.json()}[id]</arg>
<doc>Gets the Board with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 08:48:43.310" level="INFO">${url} = boards/62c3faeb5c8b6f5866fa4910</msg>
<status status="PASS" starttime="20220705 08:48:43.310" endtime="20220705 08:48:43.310"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 08:48:43.414" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 08:48:43.310" endtime="20220705 08:48:43.414"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 08:48:43.414" endtime="20220705 08:48:43.414"/>
</return>
<msg timestamp="20220705 08:48:43.414" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 08:48:43.309" endtime="20220705 08:48:43.414"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 08:48:43.414" endtime="20220705 08:48:43.414"/>
</return>
<msg timestamp="20220705 08:48:43.414" level="INFO">${new_response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 08:48:43.308" endtime="20220705 08:48:43.414"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${new_response}</arg>
<arg>board</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 08:48:43.415" endtime="20220705 08:48:43.420"/>
</kw>
<status status="PASS" starttime="20220705 08:48:43.415" endtime="20220705 08:48:43.420"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${new_response.json()}[name]</arg>
<arg>NewName</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220705 08:48:43.420" endtime="20220705 08:48:43.421"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${response.json()}[id]</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${response.json()}[id]</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 08:48:43.424" level="INFO">${url} = boards/62c3faeb5c8b6f5866fa4910</msg>
<status status="PASS" starttime="20220705 08:48:43.423" endtime="20220705 08:48:43.424"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 08:48:43.815" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 08:48:43.424" endtime="20220705 08:48:43.815"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 08:48:43.815" endtime="20220705 08:48:43.815"/>
</return>
<msg timestamp="20220705 08:48:43.815" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 08:48:43.422" endtime="20220705 08:48:43.815"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 08:48:43.816" endtime="20220705 08:48:43.816"/>
</return>
<status status="PASS" starttime="20220705 08:48:43.421" endtime="20220705 08:48:43.816"/>
</kw>
<status status="PASS" starttime="20220705 08:48:43.421" endtime="20220705 08:48:43.816"/>
</kw>
<doc>Verify that a board's name can be updated through API</doc>
<tag>api</tag>
<tag>board.update</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220705 08:48:42.934" endtime="20220705 08:48:43.816"/>
</test>
<test id="s1-s1-s1-t3" name="DELETE A Board" line="27">
<kw name="Create A Board" library="Board">
<var>${response}</var>
<arg>NewBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 08:48:43.819" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 08:48:43.818" endtime="20220705 08:48:43.819"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 08:48:43.819" endtime="20220705 08:48:43.820"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 08:48:43.821" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220705 08:48:43.820" endtime="20220705 08:48:43.821"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 08:48:44.042" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 08:48:43.821" endtime="20220705 08:48:44.042"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 08:48:44.042" endtime="20220705 08:48:44.042"/>
</return>
<msg timestamp="20220705 08:48:44.042" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 08:48:43.818" endtime="20220705 08:48:44.042"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 08:48:44.042" endtime="20220705 08:48:44.042"/>
</return>
<msg timestamp="20220705 08:48:44.043" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 08:48:43.817" endtime="20220705 08:48:44.043"/>
</kw>
<kw name="Delete A Board" library="Board">
<arg>${response.json()}[id]</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 08:48:44.045" level="INFO">${url} = boards/62c3faeb3a31663246e74c1d</msg>
<status status="PASS" starttime="20220705 08:48:44.045" endtime="20220705 08:48:44.045"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 08:48:44.431" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 08:48:44.045" endtime="20220705 08:48:44.431"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 08:48:44.431" endtime="20220705 08:48:44.431"/>
</return>
<msg timestamp="20220705 08:48:44.432" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 08:48:44.044" endtime="20220705 08:48:44.432"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 08:48:44.432" endtime="20220705 08:48:44.432"/>
</return>
<status status="PASS" starttime="20220705 08:48:44.043" endtime="20220705 08:48:44.432"/>
</kw>
<kw name="Get A Board" library="Board">
<arg>${response.json()}[id]</arg>
<arg>status_code=404</arg>
<doc>Gets the Board with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 08:48:44.434" level="INFO">${url} = boards/62c3faeb3a31663246e74c1d</msg>
<status status="PASS" starttime="20220705 08:48:44.434" endtime="20220705 08:48:44.434"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 08:48:44.527" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220705 08:48:44.435" endtime="20220705 08:48:44.527"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 08:48:44.527" endtime="20220705 08:48:44.527"/>
</return>
<msg timestamp="20220705 08:48:44.528" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220705 08:48:44.433" endtime="20220705 08:48:44.528"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 08:48:44.528" endtime="20220705 08:48:44.528"/>
</return>
<status status="PASS" starttime="20220705 08:48:44.432" endtime="20220705 08:48:44.528"/>
</kw>
<doc>Verify that a board can be deleted through API</doc>
<tag>api</tag>
<tag>board.delete</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220705 08:48:43.816" endtime="20220705 08:48:44.528"/>
</test>
<test id="s1-s1-s1-t4" name="GET Information of A Board" line="34">
<kw name="Create A Board" library="Board">
<var>${response}</var>
<arg>BoardTest</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 08:48:44.531" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 08:48:44.530" endtime="20220705 08:48:44.531"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 08:48:44.531" endtime="20220705 08:48:44.531"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 08:48:44.532" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220705 08:48:44.531" endtime="20220705 08:48:44.532"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 08:48:44.768" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 08:48:44.532" endtime="20220705 08:48:44.768"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 08:48:44.768" endtime="20220705 08:48:44.768"/>
</return>
<msg timestamp="20220705 08:48:44.768" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 08:48:44.530" endtime="20220705 08:48:44.768"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 08:48:44.769" endtime="20220705 08:48:44.769"/>
</return>
<msg timestamp="20220705 08:48:44.769" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 08:48:44.529" endtime="20220705 08:48:44.769"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>board</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 08:48:44.769" endtime="20220705 08:48:44.774"/>
</kw>
<status status="PASS" starttime="20220705 08:48:44.769" endtime="20220705 08:48:44.774"/>
</kw>
<kw name="Get A Board" library="Board">
<var>${response2}</var>
<arg>${response.json()}[id]</arg>
<doc>Gets the Board with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 08:48:44.776" level="INFO">${url} = boards/62c3faecaf990e339b371abc</msg>
<status status="PASS" starttime="20220705 08:48:44.776" endtime="20220705 08:48:44.776"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 08:48:44.878" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 08:48:44.777" endtime="20220705 08:48:44.878"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 08:48:44.878" endtime="20220705 08:48:44.878"/>
</return>
<msg timestamp="20220705 08:48:44.878" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 08:48:44.775" endtime="20220705 08:48:44.878"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 08:48:44.878" endtime="20220705 08:48:44.878"/>
</return>
<msg timestamp="20220705 08:48:44.879" level="INFO">${response2} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 08:48:44.775" endtime="20220705 08:48:44.879"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response2}</arg>
<arg>board</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 08:48:44.879" endtime="20220705 08:48:44.884"/>
</kw>
<status status="PASS" starttime="20220705 08:48:44.879" endtime="20220705 08:48:44.884"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${response2.json()}[name]</arg>
<arg>BoardTest</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220705 08:48:44.884" endtime="20220705 08:48:44.885"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${response.json()}[id]</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${response.json()}[id]</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 08:48:44.887" level="INFO">${url} = boards/62c3faecaf990e339b371abc</msg>
<status status="PASS" starttime="20220705 08:48:44.887" endtime="20220705 08:48:44.888"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 08:48:45.284" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 08:48:44.888" endtime="20220705 08:48:45.284"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 08:48:45.284" endtime="20220705 08:48:45.284"/>
</return>
<msg timestamp="20220705 08:48:45.285" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 08:48:44.886" endtime="20220705 08:48:45.285"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 08:48:45.285" endtime="20220705 08:48:45.285"/>
</return>
<status status="PASS" starttime="20220705 08:48:44.885" endtime="20220705 08:48:45.285"/>
</kw>
<status status="PASS" starttime="20220705 08:48:44.885" endtime="20220705 08:48:45.285"/>
</kw>
<doc>Verify that a board's information can be accesed through API</doc>
<tag>api</tag>
<tag>board.get</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220705 08:48:44.529" endtime="20220705 08:48:45.285"/>
</test>
<test id="s1-s1-s1-t5" name="UPDATE a Board's description" line="45">
<kw name="Create A Board" library="Board">
<var>${response}</var>
<arg>NewBoardForTest</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 08:48:45.288" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 08:48:45.288" endtime="20220705 08:48:45.288"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 08:48:45.288" endtime="20220705 08:48:45.288"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 08:48:45.289" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220705 08:48:45.289" endtime="20220705 08:48:45.289"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 08:48:45.506" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 08:48:45.289" endtime="20220705 08:48:45.506"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 08:48:45.506" endtime="20220705 08:48:45.506"/>
</return>
<msg timestamp="20220705 08:48:45.506" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 08:48:45.287" endtime="20220705 08:48:45.506"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 08:48:45.506" endtime="20220705 08:48:45.506"/>
</return>
<msg timestamp="20220705 08:48:45.507" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 08:48:45.287" endtime="20220705 08:48:45.507"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>board</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 08:48:45.507" endtime="20220705 08:48:45.512"/>
</kw>
<status status="PASS" starttime="20220705 08:48:45.507" endtime="20220705 08:48:45.512"/>
</kw>
<kw name="Update A Board" library="Board">
<arg>${response.json()}[id]</arg>
<arg>desc</arg>
<arg>sampleDescription</arg>
<doc>Updates the board with the given ID
optional_args: name, desc, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 08:48:45.514" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 08:48:45.514" endtime="20220705 08:48:45.514"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 08:48:45.514" endtime="20220705 08:48:45.515"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 08:48:45.515" level="INFO">${url} = boards/62c3faed17d64f8572b99696</msg>
<status status="PASS" starttime="20220705 08:48:45.515" endtime="20220705 08:48:45.515"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 08:48:45.674" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 08:48:45.515" endtime="20220705 08:48:45.674"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 08:48:45.674" endtime="20220705 08:48:45.674"/>
</return>
<msg timestamp="20220705 08:48:45.675" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 08:48:45.513" endtime="20220705 08:48:45.675"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 08:48:45.675" endtime="20220705 08:48:45.675"/>
</return>
<status status="PASS" starttime="20220705 08:48:45.512" endtime="20220705 08:48:45.675"/>
</kw>
<kw name="Get A Board" library="Board">
<var>${new_response}</var>
<arg>${response.json()}[id]</arg>
<doc>Gets the Board with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 08:48:45.677" level="INFO">${url} = boards/62c3faed17d64f8572b99696</msg>
<status status="PASS" starttime="20220705 08:48:45.677" endtime="20220705 08:48:45.677"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 08:48:45.773" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 08:48:45.677" endtime="20220705 08:48:45.774"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 08:48:45.774" endtime="20220705 08:48:45.774"/>
</return>
<msg timestamp="20220705 08:48:45.774" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 08:48:45.676" endtime="20220705 08:48:45.774"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 08:48:45.774" endtime="20220705 08:48:45.774"/>
</return>
<msg timestamp="20220705 08:48:45.774" level="INFO">${new_response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 08:48:45.675" endtime="20220705 08:48:45.774"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${new_response.json()}[desc]</arg>
<arg>sampleDescription</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220705 08:48:45.775" endtime="20220705 08:48:45.776"/>
</kw>
<kw name="Update A Board" library="Board">
<arg>${response.json()}[id]</arg>
<arg>desc</arg>
<arg>updatedDescription</arg>
<doc>Updates the board with the given ID
optional_args: name, desc, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 08:48:45.778" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 08:48:45.777" endtime="20220705 08:48:45.778"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 08:48:45.778" endtime="20220705 08:48:45.778"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 08:48:45.779" level="INFO">${url} = boards/62c3faed17d64f8572b99696</msg>
<status status="PASS" starttime="20220705 08:48:45.778" endtime="20220705 08:48:45.779"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 08:48:45.923" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 08:48:45.779" endtime="20220705 08:48:45.923"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 08:48:45.923" endtime="20220705 08:48:45.923"/>
</return>
<msg timestamp="20220705 08:48:45.923" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 08:48:45.777" endtime="20220705 08:48:45.923"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 08:48:45.923" endtime="20220705 08:48:45.923"/>
</return>
<status status="PASS" starttime="20220705 08:48:45.776" endtime="20220705 08:48:45.924"/>
</kw>
<kw name="Get A Board" library="Board">
<var>${new_response2}</var>
<arg>${response.json()}[id]</arg>
<doc>Gets the Board with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 08:48:45.926" level="INFO">${url} = boards/62c3faed17d64f8572b99696</msg>
<status status="PASS" starttime="20220705 08:48:45.925" endtime="20220705 08:48:45.926"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 08:48:46.041" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 08:48:45.926" endtime="20220705 08:48:46.042"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 08:48:46.042" endtime="20220705 08:48:46.042"/>
</return>
<msg timestamp="20220705 08:48:46.042" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 08:48:45.925" endtime="20220705 08:48:46.042"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 08:48:46.042" endtime="20220705 08:48:46.042"/>
</return>
<msg timestamp="20220705 08:48:46.042" level="INFO">${new_response2} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 08:48:45.924" endtime="20220705 08:48:46.042"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${new_response2.json()}[desc]</arg>
<arg>updatedDescription</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220705 08:48:46.043" endtime="20220705 08:48:46.044"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${response.json()}[id]</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${response.json()}[id]</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 08:48:46.046" level="INFO">${url} = boards/62c3faed17d64f8572b99696</msg>
<status status="PASS" starttime="20220705 08:48:46.046" endtime="20220705 08:48:46.046"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 08:48:46.464" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 08:48:46.046" endtime="20220705 08:48:46.464"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 08:48:46.464" endtime="20220705 08:48:46.464"/>
</return>
<msg timestamp="20220705 08:48:46.464" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 08:48:46.045" endtime="20220705 08:48:46.464"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 08:48:46.464" endtime="20220705 08:48:46.464"/>
</return>
<status status="PASS" starttime="20220705 08:48:46.044" endtime="20220705 08:48:46.465"/>
</kw>
<status status="PASS" starttime="20220705 08:48:46.044" endtime="20220705 08:48:46.465"/>
</kw>
<doc>Verify that a board's description can be updated through API</doc>
<tag>api</tag>
<tag>board.update</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220705 08:48:45.286" endtime="20220705 08:48:46.465"/>
</test>
<kw name="Delete All Sessions" library="request_own_library" type="TEARDOWN">
<status status="PASS" starttime="20220705 08:48:46.466" endtime="20220705 08:48:46.468"/>
</kw>
<doc>Example Test with Trello API Boards</doc>
<status status="PASS" starttime="20220705 08:48:42.069" endtime="20220705 08:48:46.468"/>
</suite>
<suite id="s1-s1-s2" name="Trello Api Cards Tests" source="/trello/api/trello_api_cards_tests.robot">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Create Trello Session</arg>
<arg>Setup Board And List</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Create Trello Session" library="TrelloAPI">
<doc>Creates a Trello Session</doc>
<kw name="Create Session" library="request_own_library">
<arg>${API_BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<status status="PASS" starttime="20220705 08:48:46.483" endtime="20220705 08:48:46.483"/>
</kw>
<status status="PASS" starttime="20220705 08:48:46.483" endtime="20220705 08:48:46.484"/>
</kw>
<kw name="Setup Board And List">
<doc>Create a board and save its ID and its first list's ID</doc>
<kw name="Create A Board" library="Board">
<var>${BOARD}</var>
<arg>TestBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 08:48:46.485" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 08:48:46.485" endtime="20220705 08:48:46.485"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 08:48:46.485" endtime="20220705 08:48:46.485"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 08:48:46.486" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220705 08:48:46.486" endtime="20220705 08:48:46.486"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 08:48:46.740" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 08:48:46.487" endtime="20220705 08:48:46.740"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 08:48:46.740" endtime="20220705 08:48:46.740"/>
</return>
<msg timestamp="20220705 08:48:46.741" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 08:48:46.484" endtime="20220705 08:48:46.741"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 08:48:46.741" endtime="20220705 08:48:46.741"/>
</return>
<msg timestamp="20220705 08:48:46.741" level="INFO">${BOARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 08:48:46.484" endtime="20220705 08:48:46.741"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_BOARD_ID}</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220705 08:48:46.743" level="INFO">${TEST_SUITE_BOARD_ID} = 62c3faee1252b73adbdd4abb</msg>
<status status="PASS" starttime="20220705 08:48:46.741" endtime="20220705 08:48:46.743"/>
</kw>
<kw name="Get Lists On A Board" library="Board">
<var>${LISTS}</var>
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Get all the lists in a board</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>lists_on_board</arg>
<arg>${id}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 08:48:46.744" level="INFO">${url} = boards/62c3faee1252b73adbdd4abb/lists/</msg>
<status status="PASS" starttime="20220705 08:48:46.744" endtime="20220705 08:48:46.744"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 08:48:46.848" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 08:48:46.744" endtime="20220705 08:48:46.848"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 08:48:46.848" endtime="20220705 08:48:46.848"/>
</return>
<msg timestamp="20220705 08:48:46.849" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 08:48:46.743" endtime="20220705 08:48:46.849"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 08:48:46.849" endtime="20220705 08:48:46.849"/>
</return>
<msg timestamp="20220705 08:48:46.849" level="INFO">${LISTS} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 08:48:46.743" endtime="20220705 08:48:46.849"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_LIST_ID}</arg>
<arg>${LISTS.json()}[0][id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220705 08:48:46.850" level="INFO">${TEST_SUITE_LIST_ID} = 62c3faee1252b73adbdd4ac2</msg>
<status status="PASS" starttime="20220705 08:48:46.849" endtime="20220705 08:48:46.850"/>
</kw>
<status status="PASS" starttime="20220705 08:48:46.484" endtime="20220705 08:48:46.850"/>
</kw>
<status status="PASS" starttime="20220705 08:48:46.482" endtime="20220705 08:48:46.850"/>
</kw>
<test id="s1-s1-s2-t1" name="Verify A Card Can Be Created" line="13">
<kw name="Create A Card" library="Card">
<var>${response}</var>
<arg>name</arg>
<arg>RFCard2</arg>
<doc>Creates a new card in the given list.
required_args: listId
optional_args: name, desc, pos, idCardSource, idLabels, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>@{optional_args}</arg>
<arg>idList</arg>
<arg>${idList}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 08:48:46.853" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 08:48:46.853" endtime="20220705 08:48:46.853"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 08:48:46.854" endtime="20220705 08:48:46.854"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 08:48:46.855" level="INFO">${url} = cards/</msg>
<status status="PASS" starttime="20220705 08:48:46.854" endtime="20220705 08:48:46.855"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 08:48:47.093" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 08:48:46.855" endtime="20220705 08:48:47.093"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 08:48:47.093" endtime="20220705 08:48:47.093"/>
</return>
<msg timestamp="20220705 08:48:47.093" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 08:48:46.852" endtime="20220705 08:48:47.093"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 08:48:47.093" endtime="20220705 08:48:47.093"/>
</return>
<msg timestamp="20220705 08:48:47.094" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 08:48:46.851" endtime="20220705 08:48:47.094"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>card</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 08:48:47.094" endtime="20220705 08:48:47.100"/>
</kw>
<status status="PASS" starttime="20220705 08:48:47.094" endtime="20220705 08:48:47.100"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 08:48:47.101" endtime="20220705 08:48:47.101"/>
</return>
<msg timestamp="20220705 08:48:47.102" level="INFO">${CARD_ID} = 62c3faee3e629b2b95963e4c</msg>
<status status="PASS" starttime="20220705 08:48:47.100" endtime="20220705 08:48:47.102"/>
</kw>
<kw name="Get A Card" library="Card">
<var>${response}</var>
<arg>${CARD_ID}</arg>
<doc>Gets the card with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 08:48:47.104" level="INFO">${url} = cards/62c3faee3e629b2b95963e4c</msg>
<status status="PASS" starttime="20220705 08:48:47.103" endtime="20220705 08:48:47.104"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 08:48:47.223" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 08:48:47.104" endtime="20220705 08:48:47.223"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 08:48:47.224" endtime="20220705 08:48:47.224"/>
</return>
<msg timestamp="20220705 08:48:47.224" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 08:48:47.102" endtime="20220705 08:48:47.224"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 08:48:47.224" endtime="20220705 08:48:47.224"/>
</return>
<msg timestamp="20220705 08:48:47.224" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 08:48:47.102" endtime="20220705 08:48:47.224"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_NAME}</var>
<arg>${response}</arg>
<arg>name</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 08:48:47.225" endtime="20220705 08:48:47.225"/>
</return>
<msg timestamp="20220705 08:48:47.226" level="INFO">${CARD_NAME} = RFCard2</msg>
<status status="PASS" starttime="20220705 08:48:47.225" endtime="20220705 08:48:47.226"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${CARD_NAME}</arg>
<arg>RFCard2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220705 08:48:47.226" endtime="20220705 08:48:47.226"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Card</arg>
<arg>${CARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Card" library="Card">
<arg>${CARD_ID}</arg>
<doc>Deletes the card with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 08:48:47.228" level="INFO">${url} = cards/62c3faee3e629b2b95963e4c</msg>
<status status="PASS" starttime="20220705 08:48:47.228" endtime="20220705 08:48:47.228"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 08:48:47.435" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 08:48:47.229" endtime="20220705 08:48:47.435"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 08:48:47.435" endtime="20220705 08:48:47.435"/>
</return>
<msg timestamp="20220705 08:48:47.436" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 08:48:47.227" endtime="20220705 08:48:47.436"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 08:48:47.436" endtime="20220705 08:48:47.436"/>
</return>
<status status="PASS" starttime="20220705 08:48:47.227" endtime="20220705 08:48:47.436"/>
</kw>
<status status="PASS" starttime="20220705 08:48:47.227" endtime="20220705 08:48:47.436"/>
</kw>
<doc>Verify that a card can be created through API</doc>
<tag>api</tag>
<tag>card.create</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220705 08:48:46.851" endtime="20220705 08:48:47.436"/>
</test>
<test id="s1-s1-s2-t2" name="Verify A Card Can Be Closed" line="24">
<kw name="Create A Card" library="Card">
<var>${response}</var>
<doc>Creates a new card in the given list.
required_args: listId
optional_args: name, desc, pos, idCardSource, idLabels, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>@{optional_args}</arg>
<arg>idList</arg>
<arg>${idList}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 08:48:47.440" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 08:48:47.439" endtime="20220705 08:48:47.440"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 08:48:47.440" endtime="20220705 08:48:47.440"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 08:48:47.441" level="INFO">${url} = cards/</msg>
<status status="PASS" starttime="20220705 08:48:47.440" endtime="20220705 08:48:47.441"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 08:48:47.654" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 08:48:47.441" endtime="20220705 08:48:47.654"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 08:48:47.654" endtime="20220705 08:48:47.654"/>
</return>
<msg timestamp="20220705 08:48:47.654" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 08:48:47.438" endtime="20220705 08:48:47.654"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 08:48:47.654" endtime="20220705 08:48:47.654"/>
</return>
<msg timestamp="20220705 08:48:47.655" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 08:48:47.437" endtime="20220705 08:48:47.655"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 08:48:47.655" endtime="20220705 08:48:47.655"/>
</return>
<msg timestamp="20220705 08:48:47.656" level="INFO">${CARD_ID} = 62c3faefb3af1d570ccd2baa</msg>
<status status="PASS" starttime="20220705 08:48:47.655" endtime="20220705 08:48:47.656"/>
</kw>
<kw name="Archive A Card" library="Card">
<arg>${CARD_ID}</arg>
<doc>Modifies the card status to closed.</doc>
<kw name="Update A Card" library="Card">
<var>${response}</var>
<arg>${id}</arg>
<arg>closed</arg>
<arg>true</arg>
<arg>status_code=${status_code}</arg>
<doc>Updates the card with the given ID
optional_args: name, desc, closed, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<arg>status_code=${status_code}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 08:48:47.660" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 08:48:47.659" endtime="20220705 08:48:47.660"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 08:48:47.660" endtime="20220705 08:48:47.660"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 08:48:47.661" level="INFO">${url} = cards/62c3faefb3af1d570ccd2baa</msg>
<status status="PASS" starttime="20220705 08:48:47.660" endtime="20220705 08:48:47.661"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 08:48:47.856" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 08:48:47.661" endtime="20220705 08:48:47.856"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 08:48:47.856" endtime="20220705 08:48:47.856"/>
</return>
<msg timestamp="20220705 08:48:47.856" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 08:48:47.659" endtime="20220705 08:48:47.856"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 08:48:47.856" endtime="20220705 08:48:47.856"/>
</return>
<msg timestamp="20220705 08:48:47.857" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 08:48:47.657" endtime="20220705 08:48:47.857"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 08:48:47.857" endtime="20220705 08:48:47.857"/>
</return>
<status status="PASS" starttime="20220705 08:48:47.656" endtime="20220705 08:48:47.857"/>
</kw>
<kw name="Get A Card" library="Card">
<var>${response}</var>
<arg>${CARD_ID}</arg>
<doc>Gets the card with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 08:48:47.859" level="INFO">${url} = cards/62c3faefb3af1d570ccd2baa</msg>
<status status="PASS" starttime="20220705 08:48:47.858" endtime="20220705 08:48:47.859"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 08:48:47.972" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 08:48:47.859" endtime="20220705 08:48:47.972"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 08:48:47.972" endtime="20220705 08:48:47.972"/>
</return>
<msg timestamp="20220705 08:48:47.973" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 08:48:47.858" endtime="20220705 08:48:47.973"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 08:48:47.973" endtime="20220705 08:48:47.973"/>
</return>
<msg timestamp="20220705 08:48:47.973" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 08:48:47.857" endtime="20220705 08:48:47.973"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_CLOSED}</var>
<arg>${response}</arg>
<arg>closed</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 08:48:47.974" endtime="20220705 08:48:47.974"/>
</return>
<msg timestamp="20220705 08:48:47.975" level="INFO">${CARD_CLOSED} = True</msg>
<status status="PASS" starttime="20220705 08:48:47.973" endtime="20220705 08:48:47.975"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${CARD_CLOSED}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220705 08:48:47.975" endtime="20220705 08:48:47.975"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Card</arg>
<arg>${CARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Card" library="Card">
<arg>${CARD_ID}</arg>
<doc>Deletes the card with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 08:48:47.977" level="INFO">${url} = cards/62c3faefb3af1d570ccd2baa</msg>
<status status="PASS" starttime="20220705 08:48:47.977" endtime="20220705 08:48:47.977"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 08:48:48.189" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 08:48:47.977" endtime="20220705 08:48:48.189"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 08:48:48.189" endtime="20220705 08:48:48.189"/>
</return>
<msg timestamp="20220705 08:48:48.190" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 08:48:47.976" endtime="20220705 08:48:48.190"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 08:48:48.190" endtime="20220705 08:48:48.190"/>
</return>
<status status="PASS" starttime="20220705 08:48:47.976" endtime="20220705 08:48:48.190"/>
</kw>
<status status="PASS" starttime="20220705 08:48:47.975" endtime="20220705 08:48:48.190"/>
</kw>
<doc>Verify that a card can be closed through API</doc>
<tag>api</tag>
<tag>card.close</tag>
<tag>regression</tag>
<status status="PASS" starttime="20220705 08:48:47.437" endtime="20220705 08:48:48.190"/>
</test>
<test id="s1-s1-s2-t3" name="Verify A Card Can Be Deleted" line="35">
<kw name="Create A Card" library="Card">
<var>${response}</var>
<doc>Creates a new card in the given list.
required_args: listId
optional_args: name, desc, pos, idCardSource, idLabels, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>@{optional_args}</arg>
<arg>idList</arg>
<arg>${idList}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 08:48:48.193" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 08:48:48.193" endtime="20220705 08:48:48.193"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 08:48:48.193" endtime="20220705 08:48:48.193"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 08:48:48.194" level="INFO">${url} = cards/</msg>
<status status="PASS" starttime="20220705 08:48:48.194" endtime="20220705 08:48:48.194"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 08:48:48.420" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 08:48:48.195" endtime="20220705 08:48:48.420"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 08:48:48.420" endtime="20220705 08:48:48.420"/>
</return>
<msg timestamp="20220705 08:48:48.420" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 08:48:48.192" endtime="20220705 08:48:48.420"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 08:48:48.420" endtime="20220705 08:48:48.420"/>
</return>
<msg timestamp="20220705 08:48:48.421" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 08:48:48.191" endtime="20220705 08:48:48.421"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 08:48:48.421" endtime="20220705 08:48:48.421"/>
</return>
<msg timestamp="20220705 08:48:48.422" level="INFO">${CARD_ID} = 62c3faf0d0c7fe8574de7ac9</msg>
<status status="PASS" starttime="20220705 08:48:48.421" endtime="20220705 08:48:48.422"/>
</kw>
<kw name="Delete A Card" library="Card">
<var>${response}</var>
<arg>${CARD_ID}</arg>
<doc>Deletes the card with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 08:48:48.424" level="INFO">${url} = cards/62c3faf0d0c7fe8574de7ac9</msg>
<status status="PASS" starttime="20220705 08:48:48.424" endtime="20220705 08:48:48.424"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 08:48:48.630" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 08:48:48.424" endtime="20220705 08:48:48.630"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 08:48:48.631" endtime="20220705 08:48:48.631"/>
</return>
<msg timestamp="20220705 08:48:48.631" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 08:48:48.423" endtime="20220705 08:48:48.631"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 08:48:48.631" endtime="20220705 08:48:48.631"/>
</return>
<msg timestamp="20220705 08:48:48.631" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 08:48:48.423" endtime="20220705 08:48:48.631"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>delete</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 08:48:48.632" endtime="20220705 08:48:48.634"/>
</kw>
<status status="PASS" starttime="20220705 08:48:48.632" endtime="20220705 08:48:48.634"/>
</kw>
<kw name="Get A Card" library="Card">
<arg>${CARD_ID}</arg>
<arg>status_code=404</arg>
<doc>Gets the card with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 08:48:48.636" level="INFO">${url} = cards/62c3faf0d0c7fe8574de7ac9</msg>
<status status="PASS" starttime="20220705 08:48:48.636" endtime="20220705 08:48:48.636"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 08:48:48.731" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220705 08:48:48.636" endtime="20220705 08:48:48.731"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 08:48:48.731" endtime="20220705 08:48:48.731"/>
</return>
<msg timestamp="20220705 08:48:48.732" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220705 08:48:48.635" endtime="20220705 08:48:48.732"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 08:48:48.732" endtime="20220705 08:48:48.732"/>
</return>
<status status="PASS" starttime="20220705 08:48:48.635" endtime="20220705 08:48:48.732"/>
</kw>
<doc>Verify that a card can be deleted through API</doc>
<tag>api</tag>
<tag>card.delete</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220705 08:48:48.191" endtime="20220705 08:48:48.734"/>
</test>
<test id="s1-s1-s2-t4" name="Verify A Card Can Be Updated" line="44">
<kw name="Create A Card" library="Card">
<var>${response}</var>
<arg>name</arg>
<arg>RFCard4</arg>
<doc>Creates a new card in the given list.
required_args: listId
optional_args: name, desc, pos, idCardSource, idLabels, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>@{optional_args}</arg>
<arg>idList</arg>
<arg>${idList}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 08:48:48.737" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 08:48:48.737" endtime="20220705 08:48:48.737"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 08:48:48.737" endtime="20220705 08:48:48.738"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 08:48:48.739" level="INFO">${url} = cards/</msg>
<status status="PASS" starttime="20220705 08:48:48.738" endtime="20220705 08:48:48.739"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 08:48:48.938" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 08:48:48.739" endtime="20220705 08:48:48.938"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 08:48:48.938" endtime="20220705 08:48:48.938"/>
</return>
<msg timestamp="20220705 08:48:48.938" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 08:48:48.735" endtime="20220705 08:48:48.938"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 08:48:48.938" endtime="20220705 08:48:48.938"/>
</return>
<msg timestamp="20220705 08:48:48.939" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 08:48:48.735" endtime="20220705 08:48:48.939"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 08:48:48.939" endtime="20220705 08:48:48.939"/>
</return>
<msg timestamp="20220705 08:48:48.940" level="INFO">${CARD_ID} = 62c3faf0019282364c994457</msg>
<status status="PASS" starttime="20220705 08:48:48.939" endtime="20220705 08:48:48.940"/>
</kw>
<kw name="Update A Card" library="Card">
<var>${response}</var>
<arg>${CARD_ID}</arg>
<arg>name</arg>
<arg>RFCard5</arg>
<arg>desc</arg>
<arg>Description</arg>
<doc>Updates the card with the given ID
optional_args: name, desc, closed, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<arg>status_code=${status_code}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 08:48:48.942" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 08:48:48.942" endtime="20220705 08:48:48.942"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 08:48:48.942" endtime="20220705 08:48:48.942"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 08:48:48.943" level="INFO">${url} = cards/62c3faf0019282364c994457</msg>
<status status="PASS" starttime="20220705 08:48:48.942" endtime="20220705 08:48:48.943"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 08:48:49.160" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 08:48:48.943" endtime="20220705 08:48:49.160"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 08:48:49.160" endtime="20220705 08:48:49.160"/>
</return>
<msg timestamp="20220705 08:48:49.161" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 08:48:48.941" endtime="20220705 08:48:49.161"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 08:48:49.161" endtime="20220705 08:48:49.161"/>
</return>
<msg timestamp="20220705 08:48:49.161" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 08:48:48.940" endtime="20220705 08:48:49.161"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>card</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 08:48:49.162" endtime="20220705 08:48:49.168"/>
</kw>
<status status="PASS" starttime="20220705 08:48:49.161" endtime="20220705 08:48:49.168"/>
</kw>
<kw name="Get A Card" library="Card">
<var>${response}</var>
<arg>${CARD_ID}</arg>
<doc>Gets the card with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 08:48:49.169" level="INFO">${url} = cards/62c3faf0019282364c994457</msg>
<status status="PASS" starttime="20220705 08:48:49.169" endtime="20220705 08:48:49.169"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 08:48:49.280" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 08:48:49.169" endtime="20220705 08:48:49.280"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 08:48:49.280" endtime="20220705 08:48:49.281"/>
</return>
<msg timestamp="20220705 08:48:49.281" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 08:48:49.168" endtime="20220705 08:48:49.281"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 08:48:49.281" endtime="20220705 08:48:49.281"/>
</return>
<msg timestamp="20220705 08:48:49.281" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 08:48:49.168" endtime="20220705 08:48:49.281"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_NAME}</var>
<arg>${response}</arg>
<arg>name</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 08:48:49.282" endtime="20220705 08:48:49.282"/>
</return>
<msg timestamp="20220705 08:48:49.283" level="INFO">${CARD_NAME} = RFCard5</msg>
<status status="PASS" starttime="20220705 08:48:49.281" endtime="20220705 08:48:49.283"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_DESC}</var>
<arg>${response}</arg>
<arg>desc</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 08:48:49.283" endtime="20220705 08:48:49.283"/>
</return>
<msg timestamp="20220705 08:48:49.284" level="INFO">${CARD_DESC} = Description</msg>
<status status="PASS" starttime="20220705 08:48:49.283" endtime="20220705 08:48:49.284"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${CARD_NAME}</arg>
<arg>RFCard5</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220705 08:48:49.284" endtime="20220705 08:48:49.285"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${CARD_DESC}</arg>
<arg>Description</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220705 08:48:49.285" endtime="20220705 08:48:49.285"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Card</arg>
<arg>${CARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Card" library="Card">
<arg>${CARD_ID}</arg>
<doc>Deletes the card with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 08:48:49.287" level="INFO">${url} = cards/62c3faf0019282364c994457</msg>
<status status="PASS" starttime="20220705 08:48:49.287" endtime="20220705 08:48:49.287"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 08:48:49.496" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 08:48:49.287" endtime="20220705 08:48:49.496"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 08:48:49.496" endtime="20220705 08:48:49.496"/>
</return>
<msg timestamp="20220705 08:48:49.496" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 08:48:49.286" endtime="20220705 08:48:49.496"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 08:48:49.496" endtime="20220705 08:48:49.496"/>
</return>
<status status="PASS" starttime="20220705 08:48:49.286" endtime="20220705 08:48:49.497"/>
</kw>
<status status="PASS" starttime="20220705 08:48:49.285" endtime="20220705 08:48:49.497"/>
</kw>
<doc>Verify that a card's name and Description can be updated through API</doc>
<tag>api</tag>
<tag>card.update</tag>
<tag>regression</tag>
<status status="PASS" starttime="20220705 08:48:48.734" endtime="20220705 08:48:49.497"/>
</test>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Teardown Board</arg>
<arg>Delete All Sessions</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Teardown Board">
<doc>Delete the board created for this suite</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 08:48:49.500" level="INFO">${url} = boards/62c3faee1252b73adbdd4abb</msg>
<status status="PASS" starttime="20220705 08:48:49.500" endtime="20220705 08:48:49.500"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 08:48:49.871" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 08:48:49.501" endtime="20220705 08:48:49.871"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 08:48:49.871" endtime="20220705 08:48:49.871"/>
</return>
<msg timestamp="20220705 08:48:49.871" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 08:48:49.499" endtime="20220705 08:48:49.871"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 08:48:49.871" endtime="20220705 08:48:49.871"/>
</return>
<status status="PASS" starttime="20220705 08:48:49.499" endtime="20220705 08:48:49.871"/>
</kw>
<status status="PASS" starttime="20220705 08:48:49.498" endtime="20220705 08:48:49.872"/>
</kw>
<status status="PASS" starttime="20220705 08:48:49.498" endtime="20220705 08:48:49.872"/>
</kw>
<kw name="Delete All Sessions" library="request_own_library">
<status status="PASS" starttime="20220705 08:48:49.872" endtime="20220705 08:48:49.873"/>
</kw>
<status status="PASS" starttime="20220705 08:48:49.498" endtime="20220705 08:48:49.873"/>
</kw>
<doc>Example Test with Trello API Cards</doc>
<status status="PASS" starttime="20220705 08:48:46.470" endtime="20220705 08:48:49.873"/>
</suite>
<suite id="s1-s1-s3" name="Trello Api Checklists Tests" source="/trello/api/trello_api_checklists_tests.robot">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Create Trello Session</arg>
<arg>Setup Board, List And Card</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Create Trello Session" library="TrelloAPI">
<doc>Creates a Trello Session</doc>
<kw name="Create Session" library="request_own_library">
<arg>${API_BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<status status="PASS" starttime="20220705 08:48:49.887" endtime="20220705 08:48:49.887"/>
</kw>
<status status="PASS" starttime="20220705 08:48:49.887" endtime="20220705 08:48:49.887"/>
</kw>
<kw name="Setup Board, List And Card">
<doc>Create a board and save its ID and its first list's ID</doc>
<kw name="Create A Board" library="Board">
<var>${BOARD}</var>
<arg>TestBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 08:48:49.889" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 08:48:49.889" endtime="20220705 08:48:49.889"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 08:48:49.889" endtime="20220705 08:48:49.889"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 08:48:49.890" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220705 08:48:49.889" endtime="20220705 08:48:49.890"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 08:48:50.130" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 08:48:49.890" endtime="20220705 08:48:50.130"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 08:48:50.130" endtime="20220705 08:48:50.130"/>
</return>
<msg timestamp="20220705 08:48:50.131" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 08:48:49.888" endtime="20220705 08:48:50.131"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 08:48:50.131" endtime="20220705 08:48:50.131"/>
</return>
<msg timestamp="20220705 08:48:50.131" level="INFO">${BOARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 08:48:49.888" endtime="20220705 08:48:50.131"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_BOARD_ID}</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220705 08:48:50.132" level="INFO">${TEST_SUITE_BOARD_ID} = 62c3faf10f457d860d2ed4ac</msg>
<status status="PASS" starttime="20220705 08:48:50.131" endtime="20220705 08:48:50.132"/>
</kw>
<kw name="Get Lists On A Board" library="Board">
<var>${LISTS}</var>
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Get all the lists in a board</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>lists_on_board</arg>
<arg>${id}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 08:48:50.133" level="INFO">${url} = boards/62c3faf10f457d860d2ed4ac/lists/</msg>
<status status="PASS" starttime="20220705 08:48:50.133" endtime="20220705 08:48:50.133"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 08:48:50.233" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 08:48:50.134" endtime="20220705 08:48:50.233"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 08:48:50.233" endtime="20220705 08:48:50.233"/>
</return>
<msg timestamp="20220705 08:48:50.233" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 08:48:50.133" endtime="20220705 08:48:50.233"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 08:48:50.233" endtime="20220705 08:48:50.233"/>
</return>
<msg timestamp="20220705 08:48:50.233" level="INFO">${LISTS} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 08:48:50.132" endtime="20220705 08:48:50.233"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_LIST_ID}</arg>
<arg>${LISTS.json()}[0][id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220705 08:48:50.235" level="INFO">${TEST_SUITE_LIST_ID} = 62c3faf10f457d860d2ed4b3</msg>
<status status="PASS" starttime="20220705 08:48:50.234" endtime="20220705 08:48:50.235"/>
</kw>
<kw name="Create A Card" library="Card">
<var>${CARD}</var>
<arg>name</arg>
<arg>TestCard</arg>
<doc>Creates a new card in the given list.
required_args: listId
optional_args: name, desc, pos, idCardSource, idLabels, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>@{optional_args}</arg>
<arg>idList</arg>
<arg>${idList}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 08:48:50.237" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 08:48:50.236" endtime="20220705 08:48:50.237"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 08:48:50.237" endtime="20220705 08:48:50.237"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 08:48:50.238" level="INFO">${url} = cards/</msg>
<status status="PASS" starttime="20220705 08:48:50.237" endtime="20220705 08:48:50.238"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 08:48:50.464" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 08:48:50.238" endtime="20220705 08:48:50.464"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 08:48:50.464" endtime="20220705 08:48:50.464"/>
</return>
<msg timestamp="20220705 08:48:50.464" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 08:48:50.236" endtime="20220705 08:48:50.464"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 08:48:50.464" endtime="20220705 08:48:50.464"/>
</return>
<msg timestamp="20220705 08:48:50.464" level="INFO">${CARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 08:48:50.235" endtime="20220705 08:48:50.464"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_CARD_ID}</arg>
<arg>${CARD.json()}[id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220705 08:48:50.466" level="INFO">${TEST_SUITE_CARD_ID} = 62c3faf2d0c7fe8574de7bc5</msg>
<status status="PASS" starttime="20220705 08:48:50.465" endtime="20220705 08:48:50.466"/>
</kw>
<status status="PASS" starttime="20220705 08:48:49.888" endtime="20220705 08:48:50.466"/>
</kw>
<status status="PASS" starttime="20220705 08:48:49.886" endtime="20220705 08:48:50.466"/>
</kw>
<test id="s1-s1-s3-t1" name="Verify A Checklist Can Be Created" line="14">
<kw name="Create A Checklist" library="Checklist">
<var>${response}</var>
<arg>name</arg>
<arg>TestChecklist</arg>
<arg>idCard=${TEST_SUITE_CARD_ID}</arg>
<doc>Creates a new checklist in the given card.
required_args: idCard
optional_args: name, pos, idChecklistSource
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>@{optional_args}</arg>
<arg>idCard</arg>
<arg>${idCard}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 08:48:50.468" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 08:48:50.468" endtime="20220705 08:48:50.468"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 08:48:50.469" endtime="20220705 08:48:50.469"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 08:48:50.470" level="INFO">${url} = checklists/</msg>
<status status="PASS" starttime="20220705 08:48:50.469" endtime="20220705 08:48:50.470"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 08:48:50.638" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 08:48:50.470" endtime="20220705 08:48:50.638"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 08:48:50.638" endtime="20220705 08:48:50.639"/>
</return>
<msg timestamp="20220705 08:48:50.639" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 08:48:50.467" endtime="20220705 08:48:50.639"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 08:48:50.639" endtime="20220705 08:48:50.639"/>
</return>
<msg timestamp="20220705 08:48:50.639" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 08:48:50.467" endtime="20220705 08:48:50.639"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${checklist_id}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 08:48:50.640" endtime="20220705 08:48:50.640"/>
</return>
<msg timestamp="20220705 08:48:50.641" level="INFO">${checklist_id} = 62c3faf2e7e3516134c097d4</msg>
<status status="PASS" starttime="20220705 08:48:50.639" endtime="20220705 08:48:50.641"/>
</kw>
<kw name="Get A Checklist" library="Checklist">
<var>${response}</var>
<arg>${checklist_id}</arg>
<doc>Gets the checklist with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 08:48:50.642" level="INFO">${url} = checklists/62c3faf2e7e3516134c097d4</msg>
<status status="PASS" starttime="20220705 08:48:50.642" endtime="20220705 08:48:50.642"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 08:48:50.750" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 08:48:50.643" endtime="20220705 08:48:50.750"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 08:48:50.750" endtime="20220705 08:48:50.750"/>
</return>
<msg timestamp="20220705 08:48:50.751" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 08:48:50.641" endtime="20220705 08:48:50.751"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 08:48:50.751" endtime="20220705 08:48:50.751"/>
</return>
<msg timestamp="20220705 08:48:50.752" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 08:48:50.641" endtime="20220705 08:48:50.752"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${checklist_name}</var>
<arg>${response}</arg>
<arg>name</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 08:48:50.752" endtime="20220705 08:48:50.752"/>
</return>
<msg timestamp="20220705 08:48:50.753" level="INFO">${checklist_name} = TestChecklist</msg>
<status status="PASS" starttime="20220705 08:48:50.752" endtime="20220705 08:48:50.753"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${checklist_name}</arg>
<arg>TestChecklist</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220705 08:48:50.753" endtime="20220705 08:48:50.754"/>
</kw>
<kw name="Delete A Checklist" library="Checklist" type="TEARDOWN">
<arg>${checklist_id}</arg>
<doc>Deletes the checklist with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 08:48:50.755" level="INFO">${url} = checklists/62c3faf2e7e3516134c097d4</msg>
<status status="PASS" starttime="20220705 08:48:50.755" endtime="20220705 08:48:50.755"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 08:48:50.926" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 08:48:50.755" endtime="20220705 08:48:50.926"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 08:48:50.926" endtime="20220705 08:48:50.926"/>
</return>
<msg timestamp="20220705 08:48:50.926" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 08:48:50.754" endtime="20220705 08:48:50.926"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 08:48:50.926" endtime="20220705 08:48:50.926"/>
</return>
<status status="PASS" starttime="20220705 08:48:50.754" endtime="20220705 08:48:50.927"/>
</kw>
<doc>Verify that a checklist can be created through API</doc>
<tag>api</tag>
<tag>checklist.create</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220705 08:48:50.466" endtime="20220705 08:48:50.927"/>
</test>
<test id="s1-s1-s3-t2" name="Verify A Checklist Can Be Deleted" line="24">
<kw name="Create A Checklist" library="Checklist">
<var>${response}</var>
<arg>name</arg>
<arg>TestChecklist</arg>
<arg>idCard=${TEST_SUITE_CARD_ID}</arg>
<doc>Creates a new checklist in the given card.
required_args: idCard
optional_args: name, pos, idChecklistSource
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>@{optional_args}</arg>
<arg>idCard</arg>
<arg>${idCard}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 08:48:50.930" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 08:48:50.930" endtime="20220705 08:48:50.930"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 08:48:50.930" endtime="20220705 08:48:50.931"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 08:48:50.931" level="INFO">${url} = checklists/</msg>
<status status="PASS" starttime="20220705 08:48:50.931" endtime="20220705 08:48:50.931"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 08:48:51.160" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 08:48:50.932" endtime="20220705 08:48:51.160"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 08:48:51.160" endtime="20220705 08:48:51.160"/>
</return>
<msg timestamp="20220705 08:48:51.160" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 08:48:50.929" endtime="20220705 08:48:51.160"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 08:48:51.160" endtime="20220705 08:48:51.160"/>
</return>
<msg timestamp="20220705 08:48:51.160" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 08:48:50.928" endtime="20220705 08:48:51.161"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${checklist_id}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 08:48:51.161" endtime="20220705 08:48:51.161"/>
</return>
<msg timestamp="20220705 08:48:51.162" level="INFO">${checklist_id} = 62c3faf38d30ba8f33c1ce35</msg>
<status status="PASS" starttime="20220705 08:48:51.161" endtime="20220705 08:48:51.162"/>
</kw>
<kw name="Delete A Checklist" library="Checklist">
<var>${response}</var>
<arg>${checklist_id}</arg>
<doc>Deletes the checklist with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 08:48:51.164" level="INFO">${url} = checklists/62c3faf38d30ba8f33c1ce35</msg>
<status status="PASS" starttime="20220705 08:48:51.164" endtime="20220705 08:48:51.164"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 08:48:51.333" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 08:48:51.173" endtime="20220705 08:48:51.333"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 08:48:51.333" endtime="20220705 08:48:51.333"/>
</return>
<msg timestamp="20220705 08:48:51.334" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 08:48:51.163" endtime="20220705 08:48:51.334"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 08:48:51.334" endtime="20220705 08:48:51.334"/>
</return>
<msg timestamp="20220705 08:48:51.334" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 08:48:51.163" endtime="20220705 08:48:51.334"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>delete</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 08:48:51.335" endtime="20220705 08:48:51.337"/>
</kw>
<status status="PASS" starttime="20220705 08:48:51.334" endtime="20220705 08:48:51.337"/>
</kw>
<kw name="Get A Checklist" library="Checklist">
<arg>${checklist_id}</arg>
<arg>status_code=404</arg>
<doc>Gets the checklist with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 08:48:51.339" level="INFO">${url} = checklists/62c3faf38d30ba8f33c1ce35</msg>
<status status="PASS" starttime="20220705 08:48:51.338" endtime="20220705 08:48:51.339"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 08:48:51.430" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220705 08:48:51.339" endtime="20220705 08:48:51.430"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 08:48:51.430" endtime="20220705 08:48:51.430"/>
</return>
<msg timestamp="20220705 08:48:51.431" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220705 08:48:51.338" endtime="20220705 08:48:51.431"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 08:48:51.431" endtime="20220705 08:48:51.431"/>
</return>
<status status="PASS" starttime="20220705 08:48:51.337" endtime="20220705 08:48:51.431"/>
</kw>
<doc>Verify that a checklist can be deleted through API</doc>
<tag>api</tag>
<tag>checklist.delete</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220705 08:48:50.927" endtime="20220705 08:48:51.431"/>
</test>
<test id="s1-s1-s3-t3" name="Verify A Checklist Can Be Updated" line="33">
<kw name="Create A Checklist" library="Checklist">
<var>${response}</var>
<arg>name</arg>
<arg>TestChecklist</arg>
<arg>idCard=${TEST_SUITE_CARD_ID}</arg>
<doc>Creates a new checklist in the given card.
required_args: idCard
optional_args: name, pos, idChecklistSource
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>@{optional_args}</arg>
<arg>idCard</arg>
<arg>${idCard}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 08:48:51.436" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 08:48:51.434" endtime="20220705 08:48:51.436"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 08:48:51.436" endtime="20220705 08:48:51.437"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 08:48:51.438" level="INFO">${url} = checklists/</msg>
<status status="PASS" starttime="20220705 08:48:51.437" endtime="20220705 08:48:51.438"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 08:48:51.619" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 08:48:51.438" endtime="20220705 08:48:51.619"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 08:48:51.619" endtime="20220705 08:48:51.619"/>
</return>
<msg timestamp="20220705 08:48:51.619" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 08:48:51.434" endtime="20220705 08:48:51.619"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 08:48:51.619" endtime="20220705 08:48:51.619"/>
</return>
<msg timestamp="20220705 08:48:51.620" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 08:48:51.433" endtime="20220705 08:48:51.620"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${checklist_id}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 08:48:51.620" endtime="20220705 08:48:51.620"/>
</return>
<msg timestamp="20220705 08:48:51.621" level="INFO">${checklist_id} = 62c3faf324b40133c99436b8</msg>
<status status="PASS" starttime="20220705 08:48:51.620" endtime="20220705 08:48:51.621"/>
</kw>
<kw name="Update A Checklist" library="Checklist">
<var>${response}</var>
<arg>${checklist_id}</arg>
<arg>name</arg>
<arg>TestChecklist2</arg>
<doc>Updates the checklist with the given ID
optional_args: name, pos
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<arg>status_code=${status_code}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 08:48:51.623" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 08:48:51.622" endtime="20220705 08:48:51.623"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 08:48:51.623" endtime="20220705 08:48:51.623"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 08:48:51.624" level="INFO">${url} = checklists/62c3faf324b40133c99436b8</msg>
<status status="PASS" starttime="20220705 08:48:51.623" endtime="20220705 08:48:51.624"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 08:48:51.771" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 08:48:51.624" endtime="20220705 08:48:51.772"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 08:48:51.772" endtime="20220705 08:48:51.772"/>
</return>
<msg timestamp="20220705 08:48:51.772" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 08:48:51.622" endtime="20220705 08:48:51.772"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 08:48:51.772" endtime="20220705 08:48:51.772"/>
</return>
<msg timestamp="20220705 08:48:51.772" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 08:48:51.621" endtime="20220705 08:48:51.772"/>
</kw>
<kw name="Get A Checklist" library="Checklist">
<var>${response}</var>
<arg>${checklist_id}</arg>
<doc>Gets the checklist with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 08:48:51.774" level="INFO">${url} = checklists/62c3faf324b40133c99436b8</msg>
<status status="PASS" starttime="20220705 08:48:51.774" endtime="20220705 08:48:51.774"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 08:48:51.894" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 08:48:51.774" endtime="20220705 08:48:51.894"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 08:48:51.894" endtime="20220705 08:48:51.894"/>
</return>
<msg timestamp="20220705 08:48:51.894" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 08:48:51.773" endtime="20220705 08:48:51.894"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 08:48:51.894" endtime="20220705 08:48:51.894"/>
</return>
<msg timestamp="20220705 08:48:51.895" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 08:48:51.773" endtime="20220705 08:48:51.895"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${checklist_name}</var>
<arg>${response}</arg>
<arg>name</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 08:48:51.895" endtime="20220705 08:48:51.895"/>
</return>
<msg timestamp="20220705 08:48:51.896" level="INFO">${checklist_name} = TestChecklist2</msg>
<status status="PASS" starttime="20220705 08:48:51.895" endtime="20220705 08:48:51.896"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${checklist_name}</arg>
<arg>TestChecklist2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220705 08:48:51.896" endtime="20220705 08:48:51.897"/>
</kw>
<kw name="Delete A Checklist" library="Checklist" type="TEARDOWN">
<arg>${checklist_id}</arg>
<doc>Deletes the checklist with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 08:48:51.909" level="INFO">${url} = checklists/62c3faf324b40133c99436b8</msg>
<status status="PASS" starttime="20220705 08:48:51.908" endtime="20220705 08:48:51.909"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 08:48:52.062" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 08:48:51.909" endtime="20220705 08:48:52.062"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 08:48:52.062" endtime="20220705 08:48:52.062"/>
</return>
<msg timestamp="20220705 08:48:52.062" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 08:48:51.908" endtime="20220705 08:48:52.062"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 08:48:52.062" endtime="20220705 08:48:52.062"/>
</return>
<status status="PASS" starttime="20220705 08:48:51.897" endtime="20220705 08:48:52.062"/>
</kw>
<doc>Verify that a checklist's name can be updated through API</doc>
<tag>api</tag>
<tag>checklist.update</tag>
<tag>regression</tag>
<status status="PASS" starttime="20220705 08:48:51.432" endtime="20220705 08:48:52.063"/>
</test>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Teardown Board</arg>
<arg>Delete All Sessions</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Teardown Board">
<doc>Delete the board created for this suite</doc>
<kw name="Delete A Board" library="Board">
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 08:48:52.066" level="INFO">${url} = boards/62c3faf10f457d860d2ed4ac</msg>
<status status="PASS" starttime="20220705 08:48:52.066" endtime="20220705 08:48:52.066"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 08:48:52.485" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 08:48:52.066" endtime="20220705 08:48:52.485"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 08:48:52.485" endtime="20220705 08:48:52.486"/>
</return>
<msg timestamp="20220705 08:48:52.486" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 08:48:52.065" endtime="20220705 08:48:52.486"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 08:48:52.486" endtime="20220705 08:48:52.486"/>
</return>
<status status="PASS" starttime="20220705 08:48:52.065" endtime="20220705 08:48:52.486"/>
</kw>
<status status="PASS" starttime="20220705 08:48:52.064" endtime="20220705 08:48:52.486"/>
</kw>
<kw name="Delete All Sessions" library="request_own_library">
<status status="PASS" starttime="20220705 08:48:52.487" endtime="20220705 08:48:52.488"/>
</kw>
<status status="PASS" starttime="20220705 08:48:52.064" endtime="20220705 08:48:52.488"/>
</kw>
<doc>Example Test with Trello API Checklists</doc>
<status status="PASS" starttime="20220705 08:48:49.875" endtime="20220705 08:48:52.488"/>
</suite>
<suite id="s1-s1-s4" name="Trello Api Labels Tests" source="/trello/api/trello_api_labels_tests.robot">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Create Trello Session</arg>
<arg>Setup Board And List</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Create Trello Session" library="TrelloAPI">
<doc>Creates a Trello Session</doc>
<kw name="Create Session" library="request_own_library">
<arg>${API_BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<status status="PASS" starttime="20220705 08:48:52.503" endtime="20220705 08:48:52.504"/>
</kw>
<status status="PASS" starttime="20220705 08:48:52.503" endtime="20220705 08:48:52.504"/>
</kw>
<kw name="Setup Board And List">
<doc>Create a board and save its ID and its first list's ID</doc>
<kw name="Create A Board" library="Board">
<var>${BOARD}</var>
<arg>TestBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 08:48:52.506" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 08:48:52.505" endtime="20220705 08:48:52.506"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 08:48:52.506" endtime="20220705 08:48:52.506"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 08:48:52.507" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220705 08:48:52.506" endtime="20220705 08:48:52.507"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 08:48:52.734" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 08:48:52.507" endtime="20220705 08:48:52.734"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 08:48:52.734" endtime="20220705 08:48:52.734"/>
</return>
<msg timestamp="20220705 08:48:52.735" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 08:48:52.505" endtime="20220705 08:48:52.735"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 08:48:52.735" endtime="20220705 08:48:52.735"/>
</return>
<msg timestamp="20220705 08:48:52.735" level="INFO">${BOARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 08:48:52.504" endtime="20220705 08:48:52.735"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_BOARD_ID}</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220705 08:48:52.736" level="INFO">${TEST_SUITE_BOARD_ID} = 62c3faf4686dba86759b66b1</msg>
<status status="PASS" starttime="20220705 08:48:52.735" endtime="20220705 08:48:52.736"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${LISTS}</var>
<arg>boards/${TEST_SUITE_BOARD_ID}/lists</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 08:48:52.839" level="INFO">${LISTS} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 08:48:52.736" endtime="20220705 08:48:52.840"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_LIST_ID}</arg>
<arg>${LISTS.json()}[0][id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220705 08:48:52.841" level="INFO">${TEST_SUITE_LIST_ID} = 62c3faf4686dba86759b66b8</msg>
<status status="PASS" starttime="20220705 08:48:52.840" endtime="20220705 08:48:52.841"/>
</kw>
<status status="PASS" starttime="20220705 08:48:52.504" endtime="20220705 08:48:52.841"/>
</kw>
<status status="PASS" starttime="20220705 08:48:52.503" endtime="20220705 08:48:52.841"/>
</kw>
<test id="s1-s1-s4-t1" name="Create and get label on board" line="14">
<kw name="Create A Label" library="Label">
<var>${response}</var>
<arg>name</arg>
<arg>label2</arg>
<arg>color</arg>
<arg>yellow</arg>
<doc>Creates a new label in the given board.
required_args: idBoard
optional_args: name, color
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>idBoard</arg>
<arg>${idBoard}</arg>
<arg>@{optional_args}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 08:48:52.844" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 08:48:52.843" endtime="20220705 08:48:52.844"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 08:48:52.844" endtime="20220705 08:48:52.844"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 08:48:52.845" level="INFO">${url} = labels/</msg>
<status status="PASS" starttime="20220705 08:48:52.844" endtime="20220705 08:48:52.845"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 08:48:53.003" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 08:48:52.845" endtime="20220705 08:48:53.003"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 08:48:53.003" endtime="20220705 08:48:53.003"/>
</return>
<msg timestamp="20220705 08:48:53.004" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 08:48:52.843" endtime="20220705 08:48:53.004"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 08:48:53.004" endtime="20220705 08:48:53.004"/>
</return>
<msg timestamp="20220705 08:48:53.004" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 08:48:52.842" endtime="20220705 08:48:53.004"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>label</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 08:48:53.005" endtime="20220705 08:48:53.007"/>
</kw>
<status status="PASS" starttime="20220705 08:48:53.004" endtime="20220705 08:48:53.007"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${LABEL_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 08:48:53.008" endtime="20220705 08:48:53.008"/>
</return>
<msg timestamp="20220705 08:48:53.008" level="INFO">${LABEL_ID} = 62c3faf4b491a745d920a09f</msg>
<status status="PASS" starttime="20220705 08:48:53.007" endtime="20220705 08:48:53.008"/>
</kw>
<kw name="Get A Label" library="Label">
<var>${response}</var>
<arg>${LABEL_ID}</arg>
<doc>Gets the label with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 08:48:53.010" level="INFO">${url} = labels/62c3faf4b491a745d920a09f</msg>
<status status="PASS" starttime="20220705 08:48:53.010" endtime="20220705 08:48:53.010"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 08:48:53.110" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 08:48:53.010" endtime="20220705 08:48:53.110"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 08:48:53.110" endtime="20220705 08:48:53.110"/>
</return>
<msg timestamp="20220705 08:48:53.111" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 08:48:53.009" endtime="20220705 08:48:53.111"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 08:48:53.111" endtime="20220705 08:48:53.111"/>
</return>
<msg timestamp="20220705 08:48:53.111" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 08:48:53.009" endtime="20220705 08:48:53.111"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${LABEL_COLOR}</var>
<arg>${response}</arg>
<arg>color</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 08:48:53.112" endtime="20220705 08:48:53.112"/>
</return>
<msg timestamp="20220705 08:48:53.113" level="INFO">${LABEL_COLOR} = yellow</msg>
<status status="PASS" starttime="20220705 08:48:53.111" endtime="20220705 08:48:53.113"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${LABEL_NAME}</var>
<arg>${response}</arg>
<arg>name</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 08:48:53.114" endtime="20220705 08:48:53.114"/>
</return>
<msg timestamp="20220705 08:48:53.114" level="INFO">${LABEL_NAME} = label2</msg>
<status status="PASS" starttime="20220705 08:48:53.113" endtime="20220705 08:48:53.114"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${LABEL_COLOR}</arg>
<arg>yellow</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220705 08:48:53.115" endtime="20220705 08:48:53.115"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${LABEL_NAME}</arg>
<arg>label2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220705 08:48:53.115" endtime="20220705 08:48:53.116"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Label</arg>
<arg>${LABEL_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Label" library="Label">
<arg>${LABEL_ID}</arg>
<doc>Deletes the label with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 08:48:53.118" level="INFO">${url} = labels/62c3faf4b491a745d920a09f</msg>
<status status="PASS" starttime="20220705 08:48:53.118" endtime="20220705 08:48:53.118"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 08:48:53.270" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 08:48:53.118" endtime="20220705 08:48:53.270"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 08:48:53.270" endtime="20220705 08:48:53.271"/>
</return>
<msg timestamp="20220705 08:48:53.271" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 08:48:53.117" endtime="20220705 08:48:53.271"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 08:48:53.271" endtime="20220705 08:48:53.271"/>
</return>
<status status="PASS" starttime="20220705 08:48:53.116" endtime="20220705 08:48:53.271"/>
</kw>
<status status="PASS" starttime="20220705 08:48:53.116" endtime="20220705 08:48:53.271"/>
</kw>
<doc>Verify that a label can be created through API</doc>
<tag>api</tag>
<tag>label.create</tag>
<tag>label.get</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220705 08:48:52.841" endtime="20220705 08:48:53.271"/>
</test>
<test id="s1-s1-s4-t2" name="Update label on board" line="28">
<kw name="Create A Label" library="Label">
<var>${response}</var>
<arg>name</arg>
<arg>label2</arg>
<arg>color</arg>
<arg>yellow</arg>
<doc>Creates a new label in the given board.
required_args: idBoard
optional_args: name, color
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>idBoard</arg>
<arg>${idBoard}</arg>
<arg>@{optional_args}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 08:48:53.274" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 08:48:53.274" endtime="20220705 08:48:53.275"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 08:48:53.275" endtime="20220705 08:48:53.275"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 08:48:53.276" level="INFO">${url} = labels/</msg>
<status status="PASS" starttime="20220705 08:48:53.275" endtime="20220705 08:48:53.276"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 08:48:53.418" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 08:48:53.276" endtime="20220705 08:48:53.418"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 08:48:53.418" endtime="20220705 08:48:53.418"/>
</return>
<msg timestamp="20220705 08:48:53.418" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 08:48:53.274" endtime="20220705 08:48:53.418"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 08:48:53.418" endtime="20220705 08:48:53.418"/>
</return>
<msg timestamp="20220705 08:48:53.419" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 08:48:53.273" endtime="20220705 08:48:53.419"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>label</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 08:48:53.419" endtime="20220705 08:48:53.422"/>
</kw>
<status status="PASS" starttime="20220705 08:48:53.419" endtime="20220705 08:48:53.422"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${LABEL_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 08:48:53.422" endtime="20220705 08:48:53.422"/>
</return>
<msg timestamp="20220705 08:48:53.423" level="INFO">${LABEL_ID} = 62c3faf5c49c2913579885ea</msg>
<status status="PASS" starttime="20220705 08:48:53.422" endtime="20220705 08:48:53.423"/>
</kw>
<kw name="Update A Label" library="Label">
<var>${new_response}</var>
<arg>${LABEL_ID}</arg>
<arg>name</arg>
<arg>label3</arg>
<arg>color</arg>
<arg>orange</arg>
<doc>Updates the label with the given ID
optional_args: name, color
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 08:48:53.425" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 08:48:53.424" endtime="20220705 08:48:53.425"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 08:48:53.425" endtime="20220705 08:48:53.425"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 08:48:53.426" level="INFO">${url} = labels/62c3faf5c49c2913579885ea</msg>
<status status="PASS" starttime="20220705 08:48:53.425" endtime="20220705 08:48:53.426"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 08:48:53.573" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 08:48:53.426" endtime="20220705 08:48:53.574"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 08:48:53.574" endtime="20220705 08:48:53.574"/>
</return>
<msg timestamp="20220705 08:48:53.574" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 08:48:53.424" endtime="20220705 08:48:53.574"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 08:48:53.574" endtime="20220705 08:48:53.574"/>
</return>
<msg timestamp="20220705 08:48:53.574" level="INFO">${new_response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 08:48:53.423" endtime="20220705 08:48:53.574"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${NEW_LABEL_COLOR}</var>
<arg>${new_response}</arg>
<arg>color</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 08:48:53.575" endtime="20220705 08:48:53.575"/>
</return>
<msg timestamp="20220705 08:48:53.576" level="INFO">${NEW_LABEL_COLOR} = orange</msg>
<status status="PASS" starttime="20220705 08:48:53.575" endtime="20220705 08:48:53.576"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${NEW_LABEL_NAME}</var>
<arg>${new_response}</arg>
<arg>name</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 08:48:53.576" endtime="20220705 08:48:53.577"/>
</return>
<msg timestamp="20220705 08:48:53.577" level="INFO">${NEW_LABEL_NAME} = label3</msg>
<status status="PASS" starttime="20220705 08:48:53.576" endtime="20220705 08:48:53.577"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${NEW_LABEL_COLOR}</arg>
<arg>orange</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220705 08:48:53.577" endtime="20220705 08:48:53.578"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${NEW_LABEL_NAME}</arg>
<arg>label3</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220705 08:48:53.578" endtime="20220705 08:48:53.578"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Label</arg>
<arg>${LABEL_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Label" library="Label">
<arg>${LABEL_ID}</arg>
<doc>Deletes the label with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 08:48:53.580" level="INFO">${url} = labels/62c3faf5c49c2913579885ea</msg>
<status status="PASS" starttime="20220705 08:48:53.580" endtime="20220705 08:48:53.580"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 08:48:53.759" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 08:48:53.581" endtime="20220705 08:48:53.759"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 08:48:53.759" endtime="20220705 08:48:53.759"/>
</return>
<msg timestamp="20220705 08:48:53.760" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 08:48:53.579" endtime="20220705 08:48:53.760"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 08:48:53.760" endtime="20220705 08:48:53.760"/>
</return>
<status status="PASS" starttime="20220705 08:48:53.579" endtime="20220705 08:48:53.760"/>
</kw>
<status status="PASS" starttime="20220705 08:48:53.578" endtime="20220705 08:48:53.760"/>
</kw>
<doc>Verify that a label's name and color can be updated through API</doc>
<tag>api</tag>
<tag>label.update</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220705 08:48:53.272" endtime="20220705 08:48:53.760"/>
</test>
<test id="s1-s1-s4-t3" name="Delete label on board" line="41">
<kw name="Create A Label" library="Label">
<var>${response}</var>
<arg>name</arg>
<arg>label2</arg>
<arg>color</arg>
<arg>yellow</arg>
<doc>Creates a new label in the given board.
required_args: idBoard
optional_args: name, color
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>idBoard</arg>
<arg>${idBoard}</arg>
<arg>@{optional_args}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 08:48:53.762" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 08:48:53.762" endtime="20220705 08:48:53.762"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 08:48:53.763" endtime="20220705 08:48:53.763"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 08:48:53.764" level="INFO">${url} = labels/</msg>
<status status="PASS" starttime="20220705 08:48:53.763" endtime="20220705 08:48:53.764"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 08:48:53.908" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 08:48:53.764" endtime="20220705 08:48:53.908"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 08:48:53.908" endtime="20220705 08:48:53.908"/>
</return>
<msg timestamp="20220705 08:48:53.908" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 08:48:53.762" endtime="20220705 08:48:53.908"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 08:48:53.909" endtime="20220705 08:48:53.909"/>
</return>
<msg timestamp="20220705 08:48:53.909" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 08:48:53.761" endtime="20220705 08:48:53.909"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${LABEL_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 08:48:53.909" endtime="20220705 08:48:53.909"/>
</return>
<msg timestamp="20220705 08:48:53.910" level="INFO">${LABEL_ID} = 62c3faf56c8a021dea34883e</msg>
<status status="PASS" starttime="20220705 08:48:53.909" endtime="20220705 08:48:53.910"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Label</arg>
<arg>${LABEL_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Label" library="Label">
<arg>${LABEL_ID}</arg>
<doc>Deletes the label with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 08:48:53.912" level="INFO">${url} = labels/62c3faf56c8a021dea34883e</msg>
<status status="PASS" starttime="20220705 08:48:53.912" endtime="20220705 08:48:53.912"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 08:48:54.126" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 08:48:53.912" endtime="20220705 08:48:54.126"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 08:48:54.126" endtime="20220705 08:48:54.126"/>
</return>
<msg timestamp="20220705 08:48:54.126" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 08:48:53.911" endtime="20220705 08:48:54.126"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 08:48:54.126" endtime="20220705 08:48:54.126"/>
</return>
<status status="PASS" starttime="20220705 08:48:53.911" endtime="20220705 08:48:54.126"/>
</kw>
<status status="PASS" starttime="20220705 08:48:53.910" endtime="20220705 08:48:54.127"/>
</kw>
<kw name="Get A Label" library="Label">
<arg>${LABEL_ID}</arg>
<arg>status_code=404</arg>
<doc>Gets the label with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 08:48:54.128" level="INFO">${url} = labels/62c3faf56c8a021dea34883e</msg>
<status status="PASS" starttime="20220705 08:48:54.128" endtime="20220705 08:48:54.128"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 08:48:54.224" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220705 08:48:54.128" endtime="20220705 08:48:54.225"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 08:48:54.225" endtime="20220705 08:48:54.225"/>
</return>
<msg timestamp="20220705 08:48:54.225" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220705 08:48:54.127" endtime="20220705 08:48:54.225"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 08:48:54.225" endtime="20220705 08:48:54.225"/>
</return>
<status status="PASS" starttime="20220705 08:48:54.127" endtime="20220705 08:48:54.225"/>
</kw>
<doc>Verify that a label can be deleted through API</doc>
<tag>api</tag>
<tag>label.delete</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220705 08:48:53.760" endtime="20220705 08:48:54.225"/>
</test>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Teardown Board</arg>
<arg>Delete All Sessions</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Teardown Board">
<doc>Delete the board created for this session.</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 08:48:54.230" level="INFO">${url} = boards/62c3faf4686dba86759b66b1</msg>
<status status="PASS" starttime="20220705 08:48:54.228" endtime="20220705 08:48:54.230"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 08:48:54.613" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 08:48:54.230" endtime="20220705 08:48:54.613"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 08:48:54.613" endtime="20220705 08:48:54.613"/>
</return>
<msg timestamp="20220705 08:48:54.614" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 08:48:54.228" endtime="20220705 08:48:54.614"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 08:48:54.614" endtime="20220705 08:48:54.614"/>
</return>
<status status="PASS" starttime="20220705 08:48:54.227" endtime="20220705 08:48:54.614"/>
</kw>
<status status="PASS" starttime="20220705 08:48:54.227" endtime="20220705 08:48:54.614"/>
</kw>
<status status="PASS" starttime="20220705 08:48:54.227" endtime="20220705 08:48:54.614"/>
</kw>
<kw name="Delete All Sessions" library="request_own_library">
<status status="PASS" starttime="20220705 08:48:54.614" endtime="20220705 08:48:54.616"/>
</kw>
<status status="PASS" starttime="20220705 08:48:54.226" endtime="20220705 08:48:54.616"/>
</kw>
<doc>Example Test with Trello API Cards</doc>
<status status="PASS" starttime="20220705 08:48:52.491" endtime="20220705 08:48:54.616"/>
</suite>
<suite id="s1-s1-s5" name="Trello Api Lists Tests" source="/trello/api/trello_api_lists_tests.robot">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Create Trello Session</arg>
<arg>Setup Board</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Create Trello Session" library="TrelloAPI">
<doc>Creates a Trello Session</doc>
<kw name="Create Session" library="request_own_library">
<arg>${API_BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<status status="PASS" starttime="20220705 08:48:54.628" endtime="20220705 08:48:54.628"/>
</kw>
<status status="PASS" starttime="20220705 08:48:54.628" endtime="20220705 08:48:54.629"/>
</kw>
<kw name="Setup Board">
<doc>Create a board and save it's id for the suite</doc>
<kw name="Create A Board" library="Board">
<var>${BOARD}</var>
<arg>TestBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 08:48:54.630" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 08:48:54.630" endtime="20220705 08:48:54.630"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 08:48:54.631" endtime="20220705 08:48:54.631"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 08:48:54.632" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220705 08:48:54.631" endtime="20220705 08:48:54.632"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 08:48:54.893" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 08:48:54.632" endtime="20220705 08:48:54.893"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 08:48:54.893" endtime="20220705 08:48:54.893"/>
</return>
<msg timestamp="20220705 08:48:54.893" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 08:48:54.629" endtime="20220705 08:48:54.893"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 08:48:54.893" endtime="20220705 08:48:54.893"/>
</return>
<msg timestamp="20220705 08:48:54.893" level="INFO">${BOARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 08:48:54.629" endtime="20220705 08:48:54.893"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Set Suite Variable</arg>
<arg>\${TEST_SUITE_BOARD_ID}</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_BOARD_ID}</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220705 08:48:54.895" level="INFO">${TEST_SUITE_BOARD_ID} = 62c3faf6dd4bbd3eb1f1c9b5</msg>
<status status="PASS" starttime="20220705 08:48:54.894" endtime="20220705 08:48:54.895"/>
</kw>
<status status="PASS" starttime="20220705 08:48:54.894" endtime="20220705 08:48:54.895"/>
</kw>
<status status="PASS" starttime="20220705 08:48:54.629" endtime="20220705 08:48:54.895"/>
</kw>
<status status="PASS" starttime="20220705 08:48:54.628" endtime="20220705 08:48:54.895"/>
</kw>
<test id="s1-s1-s5-t1" name="CREATE a list" line="13">
<kw name="Create A List" library="List">
<var>${response}</var>
<arg>NewList</arg>
<doc>Creates a new List
board id
name the list will have
optional_args: idListSource, pos, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>list</arg>
<arg>name</arg>
<arg>${name}</arg>
<arg>idBoard</arg>
<arg>${idBoard}</arg>
<arg>@{optional_args}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 08:48:54.898" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 08:48:54.897" endtime="20220705 08:48:54.898"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 08:48:54.898" endtime="20220705 08:48:54.898"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 08:48:54.899" level="INFO">${url} = lists/</msg>
<status status="PASS" starttime="20220705 08:48:54.898" endtime="20220705 08:48:54.899"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 08:48:55.112" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 08:48:54.899" endtime="20220705 08:48:55.112"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 08:48:55.112" endtime="20220705 08:48:55.112"/>
</return>
<msg timestamp="20220705 08:48:55.112" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 08:48:54.897" endtime="20220705 08:48:55.112"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 08:48:55.113" endtime="20220705 08:48:55.113"/>
</return>
<msg timestamp="20220705 08:48:55.113" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 08:48:54.896" endtime="20220705 08:48:55.113"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>list</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 08:48:55.114" endtime="20220705 08:48:55.118"/>
</kw>
<status status="PASS" starttime="20220705 08:48:55.113" endtime="20220705 08:48:55.118"/>
</kw>
<doc>Verify that a list can be created through API</doc>
<tag>api</tag>
<tag>list.create</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220705 08:48:54.896" endtime="20220705 08:48:55.119"/>
</test>
<test id="s1-s1-s5-t2" name="UPDATE a list" line="19">
<kw name="Create A List" library="List">
<var>${response}</var>
<arg>NewList</arg>
<doc>Creates a new List
board id
name the list will have
optional_args: idListSource, pos, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>list</arg>
<arg>name</arg>
<arg>${name}</arg>
<arg>idBoard</arg>
<arg>${idBoard}</arg>
<arg>@{optional_args}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 08:48:55.125" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 08:48:55.124" endtime="20220705 08:48:55.125"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 08:48:55.125" endtime="20220705 08:48:55.125"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 08:48:55.127" level="INFO">${url} = lists/</msg>
<status status="PASS" starttime="20220705 08:48:55.125" endtime="20220705 08:48:55.128"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 08:48:55.312" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 08:48:55.128" endtime="20220705 08:48:55.312"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 08:48:55.312" endtime="20220705 08:48:55.313"/>
</return>
<msg timestamp="20220705 08:48:55.313" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 08:48:55.124" endtime="20220705 08:48:55.313"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 08:48:55.313" endtime="20220705 08:48:55.313"/>
</return>
<msg timestamp="20220705 08:48:55.313" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 08:48:55.123" endtime="20220705 08:48:55.313"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>list</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 08:48:55.314" endtime="20220705 08:48:55.316"/>
</kw>
<status status="PASS" starttime="20220705 08:48:55.313" endtime="20220705 08:48:55.316"/>
</kw>
<kw name="Update A List" library="List">
<arg>${response.json()}[id]</arg>
<arg>name</arg>
<arg>NewName</arg>
<doc>Updates the board with the given ID
optional_args: name, idListSource, pos, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>list</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 08:48:55.318" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 08:48:55.317" endtime="20220705 08:48:55.318"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 08:48:55.318" endtime="20220705 08:48:55.318"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 08:48:55.319" level="INFO">${url} = lists/62c3faf70f017f259b7b7b7e</msg>
<status status="PASS" starttime="20220705 08:48:55.318" endtime="20220705 08:48:55.319"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 08:48:55.441" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 08:48:55.319" endtime="20220705 08:48:55.441"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 08:48:55.441" endtime="20220705 08:48:55.441"/>
</return>
<msg timestamp="20220705 08:48:55.441" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 08:48:55.317" endtime="20220705 08:48:55.441"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 08:48:55.441" endtime="20220705 08:48:55.441"/>
</return>
<status status="PASS" starttime="20220705 08:48:55.316" endtime="20220705 08:48:55.441"/>
</kw>
<kw name="Get A List" library="List">
<var>${new_response}</var>
<arg>${response.json()}[id]</arg>
<doc>Gets the List with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>list</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 08:48:55.444" level="INFO">${url} = lists/62c3faf70f017f259b7b7b7e</msg>
<status status="PASS" starttime="20220705 08:48:55.443" endtime="20220705 08:48:55.444"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 08:48:55.539" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 08:48:55.444" endtime="20220705 08:48:55.539"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 08:48:55.539" endtime="20220705 08:48:55.539"/>
</return>
<msg timestamp="20220705 08:48:55.539" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 08:48:55.443" endtime="20220705 08:48:55.539"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 08:48:55.539" endtime="20220705 08:48:55.539"/>
</return>
<msg timestamp="20220705 08:48:55.540" level="INFO">${new_response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 08:48:55.442" endtime="20220705 08:48:55.540"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${new_response}</arg>
<arg>list</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 08:48:55.540" endtime="20220705 08:48:55.542"/>
</kw>
<status status="PASS" starttime="20220705 08:48:55.540" endtime="20220705 08:48:55.542"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${new_response.json()}[name]</arg>
<arg>NewName</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220705 08:48:55.543" endtime="20220705 08:48:55.543"/>
</kw>
<doc>Verify that a lists name can be updated through API</doc>
<tag>api</tag>
<tag>list.update</tag>
<tag>regression</tag>
<status status="PASS" starttime="20220705 08:48:55.119" endtime="20220705 08:48:55.544"/>
</test>
<test id="s1-s1-s5-t3" name="ARCHIVE A list" line="29">
<kw name="Create A List" library="List">
<var>${response}</var>
<arg>NewList</arg>
<doc>Creates a new List
board id
name the list will have
optional_args: idListSource, pos, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>list</arg>
<arg>name</arg>
<arg>${name}</arg>
<arg>idBoard</arg>
<arg>${idBoard}</arg>
<arg>@{optional_args}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 08:48:55.546" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 08:48:55.546" endtime="20220705 08:48:55.546"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 08:48:55.546" endtime="20220705 08:48:55.548"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 08:48:55.549" level="INFO">${url} = lists/</msg>
<status status="PASS" starttime="20220705 08:48:55.548" endtime="20220705 08:48:55.549"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 08:48:55.695" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 08:48:55.549" endtime="20220705 08:48:55.695"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 08:48:55.695" endtime="20220705 08:48:55.695"/>
</return>
<msg timestamp="20220705 08:48:55.696" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 08:48:55.545" endtime="20220705 08:48:55.696"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 08:48:55.696" endtime="20220705 08:48:55.696"/>
</return>
<msg timestamp="20220705 08:48:55.696" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 08:48:55.545" endtime="20220705 08:48:55.696"/>
</kw>
<kw name="Archive A List" library="List">
<arg>${response.json()}[id]</arg>
<doc>Deletes the list with the given ID</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>archive_list</arg>
<arg>${id}</arg>
<arg>value</arg>
<arg>true</arg>
<arg>status_code=${status_code}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 08:48:55.698" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 08:48:55.698" endtime="20220705 08:48:55.698"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 08:48:55.698" endtime="20220705 08:48:55.699"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 08:48:55.700" level="INFO">${url} = lists/62c3faf7777e2d549ab93256/closed</msg>
<status status="PASS" starttime="20220705 08:48:55.699" endtime="20220705 08:48:55.700"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 08:48:55.847" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 08:48:55.700" endtime="20220705 08:48:55.847"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 08:48:55.847" endtime="20220705 08:48:55.847"/>
</return>
<msg timestamp="20220705 08:48:55.848" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 08:48:55.697" endtime="20220705 08:48:55.848"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 08:48:55.848" endtime="20220705 08:48:55.848"/>
</return>
<status status="PASS" starttime="20220705 08:48:55.696" endtime="20220705 08:48:55.848"/>
</kw>
<kw name="Get A List" library="List">
<var>${new_response}</var>
<arg>${response.json()}[id]</arg>
<doc>Gets the List with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>list</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 08:48:55.851" level="INFO">${url} = lists/62c3faf7777e2d549ab93256</msg>
<status status="PASS" starttime="20220705 08:48:55.850" endtime="20220705 08:48:55.851"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 08:48:55.946" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 08:48:55.851" endtime="20220705 08:48:55.946"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 08:48:55.946" endtime="20220705 08:48:55.946"/>
</return>
<msg timestamp="20220705 08:48:55.946" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 08:48:55.849" endtime="20220705 08:48:55.946"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 08:48:55.947" endtime="20220705 08:48:55.947"/>
</return>
<msg timestamp="20220705 08:48:55.947" level="INFO">${new_response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 08:48:55.848" endtime="20220705 08:48:55.947"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${new_response.json()}[closed]</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220705 08:48:55.947" endtime="20220705 08:48:55.948"/>
</kw>
<doc>Verify that a list can be archived through API</doc>
<tag>api</tag>
<tag>list.archive</tag>
<tag>regression</tag>
<status status="PASS" starttime="20220705 08:48:55.544" endtime="20220705 08:48:55.948"/>
</test>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Teardown Board</arg>
<arg>Delete All Sessions</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Teardown Board">
<doc>Delete the board created for this suite.</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 08:48:55.952" level="INFO">${url} = boards/62c3faf6dd4bbd3eb1f1c9b5</msg>
<status status="PASS" starttime="20220705 08:48:55.952" endtime="20220705 08:48:55.952"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 08:48:56.388" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 08:48:55.952" endtime="20220705 08:48:56.388"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 08:48:56.388" endtime="20220705 08:48:56.388"/>
</return>
<msg timestamp="20220705 08:48:56.388" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 08:48:55.950" endtime="20220705 08:48:56.388"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 08:48:56.388" endtime="20220705 08:48:56.388"/>
</return>
<status status="PASS" starttime="20220705 08:48:55.949" endtime="20220705 08:48:56.389"/>
</kw>
<status status="PASS" starttime="20220705 08:48:55.949" endtime="20220705 08:48:56.389"/>
</kw>
<status status="PASS" starttime="20220705 08:48:55.949" endtime="20220705 08:48:56.389"/>
</kw>
<kw name="Delete All Sessions" library="request_own_library">
<status status="PASS" starttime="20220705 08:48:56.389" endtime="20220705 08:48:56.390"/>
</kw>
<status status="PASS" starttime="20220705 08:48:55.949" endtime="20220705 08:48:56.390"/>
</kw>
<doc>Example Test with Trello API lists</doc>
<status status="PASS" starttime="20220705 08:48:54.618" endtime="20220705 08:48:56.390"/>
</suite>
<status status="PASS" starttime="20220705 08:48:42.068" endtime="20220705 08:48:56.392"/>
</suite>
<status status="PASS" starttime="20220705 08:48:42.041" endtime="20220705 08:48:56.396"/>
</suite>
<statistics>
<total>
<stat pass="18" fail="0" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="18" fail="0" skip="0">api</stat>
<stat pass="1" fail="0" skip="0">board.create</stat>
<stat pass="1" fail="0" skip="0">board.delete</stat>
<stat pass="1" fail="0" skip="0">board.get</stat>
<stat pass="2" fail="0" skip="0">board.update</stat>
<stat pass="1" fail="0" skip="0">card.close</stat>
<stat pass="1" fail="0" skip="0">card.create</stat>
<stat pass="1" fail="0" skip="0">card.delete</stat>
<stat pass="1" fail="0" skip="0">card.update</stat>
<stat pass="1" fail="0" skip="0">checklist.create</stat>
<stat pass="1" fail="0" skip="0">checklist.delete</stat>
<stat pass="1" fail="0" skip="0">checklist.update</stat>
<stat pass="1" fail="0" skip="0">label.create</stat>
<stat pass="1" fail="0" skip="0">label.delete</stat>
<stat pass="1" fail="0" skip="0">label.get</stat>
<stat pass="1" fail="0" skip="0">label.update</stat>
<stat pass="1" fail="0" skip="0">list.archive</stat>
<stat pass="1" fail="0" skip="0">list.create</stat>
<stat pass="1" fail="0" skip="0">list.update</stat>
<stat pass="5" fail="0" skip="0">regression</stat>
<stat pass="13" fail="0" skip="0">smoke</stat>
</tag>
<suite>
<stat pass="18" fail="0" skip="0" id="s1" name="Trello">Trello</stat>
<stat pass="18" fail="0" skip="0" id="s1-s1" name="Api">Trello.Api</stat>
<stat pass="5" fail="0" skip="0" id="s1-s1-s1" name="Trello Api Boards Tests">Trello.Api.Trello Api Boards Tests</stat>
<stat pass="4" fail="0" skip="0" id="s1-s1-s2" name="Trello Api Cards Tests">Trello.Api.Trello Api Cards Tests</stat>
<stat pass="3" fail="0" skip="0" id="s1-s1-s3" name="Trello Api Checklists Tests">Trello.Api.Trello Api Checklists Tests</stat>
<stat pass="3" fail="0" skip="0" id="s1-s1-s4" name="Trello Api Labels Tests">Trello.Api.Trello Api Labels Tests</stat>
<stat pass="3" fail="0" skip="0" id="s1-s1-s5" name="Trello Api Lists Tests">Trello.Api.Trello Api Lists Tests</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
