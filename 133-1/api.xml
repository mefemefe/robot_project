<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 5.0.1 (Python 3.10.5 on linux)" generated="20220705 02:21:52.561" rpa="false" schemaversion="3">
<suite id="s1" name="Trello" source="/trello">
<suite id="s1-s1" name="Api" source="/trello/api">
<suite id="s1-s1-s1" name="Trello Api Boards Tests" source="/trello/api/trello_api_boards_tests.robot">
<kw name="Create Trello Session" library="TrelloAPI" type="SETUP">
<doc>Creates a Trello Session</doc>
<kw name="Create Session" library="request_own_library">
<arg>${API_BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<status status="PASS" starttime="20220705 02:21:52.685" endtime="20220705 02:21:52.685"/>
</kw>
<status status="PASS" starttime="20220705 02:21:52.683" endtime="20220705 02:21:52.685"/>
</kw>
<test id="s1-s1-s1-t1" name="CREATE a board" line="9">
<kw name="Create A Board" library="Board">
<var>${response}</var>
<arg>NewBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 02:21:52.687" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 02:21:52.687" endtime="20220705 02:21:52.687"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 02:21:52.687" endtime="20220705 02:21:52.687"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 02:21:52.688" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220705 02:21:52.687" endtime="20220705 02:21:52.688"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 02:21:52.916" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 02:21:52.688" endtime="20220705 02:21:52.916"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 02:21:52.916" endtime="20220705 02:21:52.917"/>
</return>
<msg timestamp="20220705 02:21:52.917" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 02:21:52.686" endtime="20220705 02:21:52.917"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 02:21:52.917" endtime="20220705 02:21:52.917"/>
</return>
<msg timestamp="20220705 02:21:52.917" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 02:21:52.686" endtime="20220705 02:21:52.917"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>board</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 02:21:52.918" endtime="20220705 02:21:52.923"/>
</kw>
<status status="PASS" starttime="20220705 02:21:52.917" endtime="20220705 02:21:52.923"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${response.json()}[id]</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${response.json()}[id]</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 02:21:52.925" level="INFO">${url} = boards/62c3a040752cb28578828948</msg>
<status status="PASS" starttime="20220705 02:21:52.925" endtime="20220705 02:21:52.925"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 02:21:53.223" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 02:21:52.925" endtime="20220705 02:21:53.223"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 02:21:53.223" endtime="20220705 02:21:53.223"/>
</return>
<msg timestamp="20220705 02:21:53.223" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 02:21:52.924" endtime="20220705 02:21:53.223"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 02:21:53.224" endtime="20220705 02:21:53.224"/>
</return>
<status status="PASS" starttime="20220705 02:21:52.923" endtime="20220705 02:21:53.224"/>
</kw>
<status status="PASS" starttime="20220705 02:21:52.923" endtime="20220705 02:21:53.224"/>
</kw>
<doc>Verify that a board can be create through API</doc>
<tag>api</tag>
<tag>board.create</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220705 02:21:52.685" endtime="20220705 02:21:53.224"/>
</test>
<test id="s1-s1-s1-t2" name="UPDATE a Board's name" line="16">
<kw name="Create A Board" library="Board">
<var>${response}</var>
<arg>NewBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 02:21:53.227" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 02:21:53.227" endtime="20220705 02:21:53.227"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 02:21:53.227" endtime="20220705 02:21:53.227"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 02:21:53.228" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220705 02:21:53.227" endtime="20220705 02:21:53.228"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 02:21:53.394" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 02:21:53.228" endtime="20220705 02:21:53.394"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 02:21:53.394" endtime="20220705 02:21:53.394"/>
</return>
<msg timestamp="20220705 02:21:53.395" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 02:21:53.226" endtime="20220705 02:21:53.395"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 02:21:53.395" endtime="20220705 02:21:53.395"/>
</return>
<msg timestamp="20220705 02:21:53.395" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 02:21:53.226" endtime="20220705 02:21:53.395"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>board</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 02:21:53.396" endtime="20220705 02:21:53.400"/>
</kw>
<status status="PASS" starttime="20220705 02:21:53.395" endtime="20220705 02:21:53.400"/>
</kw>
<kw name="Update A Board" library="Board">
<arg>${response.json()}[id]</arg>
<arg>name</arg>
<arg>NewName</arg>
<doc>Updates the board with the given ID
optional_args: name, desc, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 02:21:53.402" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 02:21:53.401" endtime="20220705 02:21:53.402"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 02:21:53.402" endtime="20220705 02:21:53.402"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 02:21:53.402" level="INFO">${url} = boards/62c3a04161397c33afa87c56</msg>
<status status="PASS" starttime="20220705 02:21:53.402" endtime="20220705 02:21:53.402"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 02:21:53.492" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 02:21:53.403" endtime="20220705 02:21:53.492"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 02:21:53.492" endtime="20220705 02:21:53.492"/>
</return>
<msg timestamp="20220705 02:21:53.492" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 02:21:53.401" endtime="20220705 02:21:53.492"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 02:21:53.492" endtime="20220705 02:21:53.492"/>
</return>
<status status="PASS" starttime="20220705 02:21:53.400" endtime="20220705 02:21:53.492"/>
</kw>
<kw name="Get A Board" library="Board">
<var>${new_response}</var>
<arg>${response.json()}[id]</arg>
<doc>Gets the Board with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 02:21:53.494" level="INFO">${url} = boards/62c3a04161397c33afa87c56</msg>
<status status="PASS" starttime="20220705 02:21:53.494" endtime="20220705 02:21:53.494"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 02:21:53.537" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 02:21:53.494" endtime="20220705 02:21:53.537"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 02:21:53.537" endtime="20220705 02:21:53.537"/>
</return>
<msg timestamp="20220705 02:21:53.538" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 02:21:53.493" endtime="20220705 02:21:53.538"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 02:21:53.538" endtime="20220705 02:21:53.538"/>
</return>
<msg timestamp="20220705 02:21:53.538" level="INFO">${new_response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 02:21:53.493" endtime="20220705 02:21:53.538"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${new_response}</arg>
<arg>board</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 02:21:53.539" endtime="20220705 02:21:53.543"/>
</kw>
<status status="PASS" starttime="20220705 02:21:53.538" endtime="20220705 02:21:53.543"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${new_response.json()}[name]</arg>
<arg>NewName</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220705 02:21:53.543" endtime="20220705 02:21:53.544"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${response.json()}[id]</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${response.json()}[id]</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 02:21:53.546" level="INFO">${url} = boards/62c3a04161397c33afa87c56</msg>
<status status="PASS" starttime="20220705 02:21:53.546" endtime="20220705 02:21:53.546"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 02:21:53.870" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 02:21:53.546" endtime="20220705 02:21:53.870"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 02:21:53.870" endtime="20220705 02:21:53.870"/>
</return>
<msg timestamp="20220705 02:21:53.870" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 02:21:53.545" endtime="20220705 02:21:53.870"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 02:21:53.870" endtime="20220705 02:21:53.870"/>
</return>
<status status="PASS" starttime="20220705 02:21:53.544" endtime="20220705 02:21:53.870"/>
</kw>
<status status="PASS" starttime="20220705 02:21:53.544" endtime="20220705 02:21:53.870"/>
</kw>
<doc>Verify that a board's name can be updated through API</doc>
<tag>api</tag>
<tag>board.update</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220705 02:21:53.224" endtime="20220705 02:21:53.871"/>
</test>
<test id="s1-s1-s1-t3" name="DELETE A Board" line="27">
<kw name="Create A Board" library="Board">
<var>${response}</var>
<arg>NewBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 02:21:53.873" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 02:21:53.872" endtime="20220705 02:21:53.873"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 02:21:53.873" endtime="20220705 02:21:53.873"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 02:21:53.874" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220705 02:21:53.873" endtime="20220705 02:21:53.874"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 02:21:54.033" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 02:21:53.874" endtime="20220705 02:21:54.033"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 02:21:54.033" endtime="20220705 02:21:54.033"/>
</return>
<msg timestamp="20220705 02:21:54.034" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 02:21:53.872" endtime="20220705 02:21:54.034"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 02:21:54.034" endtime="20220705 02:21:54.034"/>
</return>
<msg timestamp="20220705 02:21:54.034" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 02:21:53.872" endtime="20220705 02:21:54.034"/>
</kw>
<kw name="Delete A Board" library="Board">
<arg>${response.json()}[id]</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 02:21:54.036" level="INFO">${url} = boards/62c3a0417c50351c283734ba</msg>
<status status="PASS" starttime="20220705 02:21:54.036" endtime="20220705 02:21:54.036"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 02:21:54.363" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 02:21:54.036" endtime="20220705 02:21:54.363"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 02:21:54.364" endtime="20220705 02:21:54.364"/>
</return>
<msg timestamp="20220705 02:21:54.364" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 02:21:54.035" endtime="20220705 02:21:54.364"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 02:21:54.364" endtime="20220705 02:21:54.364"/>
</return>
<status status="PASS" starttime="20220705 02:21:54.034" endtime="20220705 02:21:54.364"/>
</kw>
<kw name="Get A Board" library="Board">
<arg>${response.json()}[id]</arg>
<arg>status_code=404</arg>
<doc>Gets the Board with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 02:21:54.366" level="INFO">${url} = boards/62c3a0417c50351c283734ba</msg>
<status status="PASS" starttime="20220705 02:21:54.366" endtime="20220705 02:21:54.366"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 02:21:54.412" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220705 02:21:54.366" endtime="20220705 02:21:54.412"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 02:21:54.412" endtime="20220705 02:21:54.412"/>
</return>
<msg timestamp="20220705 02:21:54.412" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220705 02:21:54.365" endtime="20220705 02:21:54.412"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 02:21:54.412" endtime="20220705 02:21:54.412"/>
</return>
<status status="PASS" starttime="20220705 02:21:54.364" endtime="20220705 02:21:54.413"/>
</kw>
<doc>Verify that a board can be deleted through API</doc>
<tag>api</tag>
<tag>board.delete</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220705 02:21:53.871" endtime="20220705 02:21:54.413"/>
</test>
<test id="s1-s1-s1-t4" name="GET Information of A Board" line="34">
<kw name="Create A Board" library="Board">
<var>${response}</var>
<arg>BoardTest</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 02:21:54.415" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 02:21:54.415" endtime="20220705 02:21:54.415"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 02:21:54.415" endtime="20220705 02:21:54.415"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 02:21:54.416" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220705 02:21:54.416" endtime="20220705 02:21:54.416"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 02:21:54.559" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 02:21:54.416" endtime="20220705 02:21:54.559"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 02:21:54.559" endtime="20220705 02:21:54.559"/>
</return>
<msg timestamp="20220705 02:21:54.559" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 02:21:54.414" endtime="20220705 02:21:54.559"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 02:21:54.559" endtime="20220705 02:21:54.559"/>
</return>
<msg timestamp="20220705 02:21:54.560" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 02:21:54.414" endtime="20220705 02:21:54.560"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>board</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 02:21:54.560" endtime="20220705 02:21:54.564"/>
</kw>
<status status="PASS" starttime="20220705 02:21:54.560" endtime="20220705 02:21:54.564"/>
</kw>
<kw name="Get A Board" library="Board">
<var>${response2}</var>
<arg>${response.json()}[id]</arg>
<doc>Gets the Board with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 02:21:54.566" level="INFO">${url} = boards/62c3a04247c6b844e07a89ff</msg>
<status status="PASS" starttime="20220705 02:21:54.565" endtime="20220705 02:21:54.566"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 02:21:54.611" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 02:21:54.566" endtime="20220705 02:21:54.611"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 02:21:54.611" endtime="20220705 02:21:54.611"/>
</return>
<msg timestamp="20220705 02:21:54.611" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 02:21:54.565" endtime="20220705 02:21:54.611"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 02:21:54.611" endtime="20220705 02:21:54.611"/>
</return>
<msg timestamp="20220705 02:21:54.612" level="INFO">${response2} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 02:21:54.564" endtime="20220705 02:21:54.612"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response2}</arg>
<arg>board</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 02:21:54.612" endtime="20220705 02:21:54.616"/>
</kw>
<status status="PASS" starttime="20220705 02:21:54.612" endtime="20220705 02:21:54.616"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${response2.json()}[name]</arg>
<arg>BoardTest</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220705 02:21:54.616" endtime="20220705 02:21:54.617"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${response.json()}[id]</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${response.json()}[id]</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 02:21:54.619" level="INFO">${url} = boards/62c3a04247c6b844e07a89ff</msg>
<status status="PASS" starttime="20220705 02:21:54.619" endtime="20220705 02:21:54.619"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 02:21:54.910" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 02:21:54.620" endtime="20220705 02:21:54.910"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 02:21:54.911" endtime="20220705 02:21:54.911"/>
</return>
<msg timestamp="20220705 02:21:54.911" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 02:21:54.618" endtime="20220705 02:21:54.911"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 02:21:54.911" endtime="20220705 02:21:54.911"/>
</return>
<status status="PASS" starttime="20220705 02:21:54.618" endtime="20220705 02:21:54.911"/>
</kw>
<status status="PASS" starttime="20220705 02:21:54.617" endtime="20220705 02:21:54.911"/>
</kw>
<doc>Verify that a board's information can be accesed through API</doc>
<tag>api</tag>
<tag>board.get</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220705 02:21:54.413" endtime="20220705 02:21:54.911"/>
</test>
<test id="s1-s1-s1-t5" name="UPDATE a Board's description" line="45">
<kw name="Create A Board" library="Board">
<var>${response}</var>
<arg>NewBoardForTest</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 02:21:54.914" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 02:21:54.914" endtime="20220705 02:21:54.914"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 02:21:54.914" endtime="20220705 02:21:54.915"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 02:21:54.915" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220705 02:21:54.915" endtime="20220705 02:21:54.915"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 02:21:55.076" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 02:21:54.915" endtime="20220705 02:21:55.077"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 02:21:55.077" endtime="20220705 02:21:55.077"/>
</return>
<msg timestamp="20220705 02:21:55.077" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 02:21:54.913" endtime="20220705 02:21:55.077"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 02:21:55.077" endtime="20220705 02:21:55.077"/>
</return>
<msg timestamp="20220705 02:21:55.077" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 02:21:54.913" endtime="20220705 02:21:55.077"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>board</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 02:21:55.078" endtime="20220705 02:21:55.082"/>
</kw>
<status status="PASS" starttime="20220705 02:21:55.077" endtime="20220705 02:21:55.082"/>
</kw>
<kw name="Update A Board" library="Board">
<arg>${response.json()}[id]</arg>
<arg>desc</arg>
<arg>sampleDescription</arg>
<doc>Updates the board with the given ID
optional_args: name, desc, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 02:21:55.083" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 02:21:55.083" endtime="20220705 02:21:55.083"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 02:21:55.083" endtime="20220705 02:21:55.083"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 02:21:55.084" level="INFO">${url} = boards/62c3a04279e78842f72bd504</msg>
<status status="PASS" starttime="20220705 02:21:55.084" endtime="20220705 02:21:55.084"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 02:21:55.166" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 02:21:55.084" endtime="20220705 02:21:55.166"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 02:21:55.167" endtime="20220705 02:21:55.167"/>
</return>
<msg timestamp="20220705 02:21:55.167" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 02:21:55.083" endtime="20220705 02:21:55.167"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 02:21:55.167" endtime="20220705 02:21:55.167"/>
</return>
<status status="PASS" starttime="20220705 02:21:55.082" endtime="20220705 02:21:55.167"/>
</kw>
<kw name="Get A Board" library="Board">
<var>${new_response}</var>
<arg>${response.json()}[id]</arg>
<doc>Gets the Board with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 02:21:55.169" level="INFO">${url} = boards/62c3a04279e78842f72bd504</msg>
<status status="PASS" starttime="20220705 02:21:55.169" endtime="20220705 02:21:55.169"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 02:21:55.211" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 02:21:55.169" endtime="20220705 02:21:55.211"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 02:21:55.211" endtime="20220705 02:21:55.211"/>
</return>
<msg timestamp="20220705 02:21:55.211" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 02:21:55.168" endtime="20220705 02:21:55.211"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 02:21:55.211" endtime="20220705 02:21:55.212"/>
</return>
<msg timestamp="20220705 02:21:55.212" level="INFO">${new_response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 02:21:55.167" endtime="20220705 02:21:55.212"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${new_response.json()}[desc]</arg>
<arg>sampleDescription</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220705 02:21:55.212" endtime="20220705 02:21:55.213"/>
</kw>
<kw name="Update A Board" library="Board">
<arg>${response.json()}[id]</arg>
<arg>desc</arg>
<arg>updatedDescription</arg>
<doc>Updates the board with the given ID
optional_args: name, desc, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 02:21:55.215" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 02:21:55.214" endtime="20220705 02:21:55.215"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 02:21:55.215" endtime="20220705 02:21:55.215"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 02:21:55.215" level="INFO">${url} = boards/62c3a04279e78842f72bd504</msg>
<status status="PASS" starttime="20220705 02:21:55.215" endtime="20220705 02:21:55.215"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 02:21:55.299" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 02:21:55.215" endtime="20220705 02:21:55.299"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 02:21:55.299" endtime="20220705 02:21:55.299"/>
</return>
<msg timestamp="20220705 02:21:55.300" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 02:21:55.214" endtime="20220705 02:21:55.300"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 02:21:55.300" endtime="20220705 02:21:55.300"/>
</return>
<status status="PASS" starttime="20220705 02:21:55.213" endtime="20220705 02:21:55.300"/>
</kw>
<kw name="Get A Board" library="Board">
<var>${new_response2}</var>
<arg>${response.json()}[id]</arg>
<doc>Gets the Board with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 02:21:55.301" level="INFO">${url} = boards/62c3a04279e78842f72bd504</msg>
<status status="PASS" starttime="20220705 02:21:55.301" endtime="20220705 02:21:55.302"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 02:21:55.346" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 02:21:55.302" endtime="20220705 02:21:55.346"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 02:21:55.346" endtime="20220705 02:21:55.346"/>
</return>
<msg timestamp="20220705 02:21:55.346" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 02:21:55.301" endtime="20220705 02:21:55.346"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 02:21:55.346" endtime="20220705 02:21:55.346"/>
</return>
<msg timestamp="20220705 02:21:55.346" level="INFO">${new_response2} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 02:21:55.300" endtime="20220705 02:21:55.347"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${new_response2.json()}[desc]</arg>
<arg>updatedDescription</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220705 02:21:55.347" endtime="20220705 02:21:55.347"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${response.json()}[id]</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${response.json()}[id]</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 02:21:55.350" level="INFO">${url} = boards/62c3a04279e78842f72bd504</msg>
<status status="PASS" starttime="20220705 02:21:55.349" endtime="20220705 02:21:55.350"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 02:21:55.692" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 02:21:55.350" endtime="20220705 02:21:55.692"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 02:21:55.692" endtime="20220705 02:21:55.692"/>
</return>
<msg timestamp="20220705 02:21:55.692" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 02:21:55.349" endtime="20220705 02:21:55.692"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 02:21:55.692" endtime="20220705 02:21:55.692"/>
</return>
<status status="PASS" starttime="20220705 02:21:55.348" endtime="20220705 02:21:55.692"/>
</kw>
<status status="PASS" starttime="20220705 02:21:55.348" endtime="20220705 02:21:55.692"/>
</kw>
<doc>Verify that a board's description can be updated through API</doc>
<tag>api</tag>
<tag>board.update</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220705 02:21:54.912" endtime="20220705 02:21:55.692"/>
</test>
<kw name="Delete All Sessions" library="request_own_library" type="TEARDOWN">
<status status="PASS" starttime="20220705 02:21:55.694" endtime="20220705 02:21:55.695"/>
</kw>
<doc>Example Test with Trello API Boards</doc>
<status status="PASS" starttime="20220705 02:21:52.581" endtime="20220705 02:21:55.695"/>
</suite>
<suite id="s1-s1-s2" name="Trello Api Cards Tests" source="/trello/api/trello_api_cards_tests.robot">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Create Trello Session</arg>
<arg>Setup Board And List</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Create Trello Session" library="TrelloAPI">
<doc>Creates a Trello Session</doc>
<kw name="Create Session" library="request_own_library">
<arg>${API_BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<status status="PASS" starttime="20220705 02:21:55.707" endtime="20220705 02:21:55.707"/>
</kw>
<status status="PASS" starttime="20220705 02:21:55.707" endtime="20220705 02:21:55.707"/>
</kw>
<kw name="Setup Board And List">
<doc>Create a board and save its ID and its first list's ID</doc>
<kw name="Create A Board" library="Board">
<var>${BOARD}</var>
<arg>TestBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 02:21:55.708" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 02:21:55.708" endtime="20220705 02:21:55.708"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 02:21:55.708" endtime="20220705 02:21:55.709"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 02:21:55.709" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220705 02:21:55.709" endtime="20220705 02:21:55.709"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 02:21:55.879" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 02:21:55.709" endtime="20220705 02:21:55.879"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 02:21:55.879" endtime="20220705 02:21:55.879"/>
</return>
<msg timestamp="20220705 02:21:55.879" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 02:21:55.708" endtime="20220705 02:21:55.879"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 02:21:55.880" endtime="20220705 02:21:55.880"/>
</return>
<msg timestamp="20220705 02:21:55.880" level="INFO">${BOARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 02:21:55.708" endtime="20220705 02:21:55.880"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_BOARD_ID}</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220705 02:21:55.881" level="INFO">${TEST_SUITE_BOARD_ID} = 62c3a04387678d3650788290</msg>
<status status="PASS" starttime="20220705 02:21:55.880" endtime="20220705 02:21:55.881"/>
</kw>
<kw name="Get Lists On A Board" library="Board">
<var>${LISTS}</var>
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Get all the lists in a board</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>lists_on_board</arg>
<arg>${id}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 02:21:55.882" level="INFO">${url} = boards/62c3a04387678d3650788290/lists/</msg>
<status status="PASS" starttime="20220705 02:21:55.881" endtime="20220705 02:21:55.882"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 02:21:55.925" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 02:21:55.882" endtime="20220705 02:21:55.925"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 02:21:55.925" endtime="20220705 02:21:55.925"/>
</return>
<msg timestamp="20220705 02:21:55.926" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 02:21:55.881" endtime="20220705 02:21:55.926"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 02:21:55.926" endtime="20220705 02:21:55.926"/>
</return>
<msg timestamp="20220705 02:21:55.926" level="INFO">${LISTS} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 02:21:55.881" endtime="20220705 02:21:55.926"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_LIST_ID}</arg>
<arg>${LISTS.json()}[0][id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220705 02:21:55.927" level="INFO">${TEST_SUITE_LIST_ID} = 62c3a04387678d3650788297</msg>
<status status="PASS" starttime="20220705 02:21:55.926" endtime="20220705 02:21:55.927"/>
</kw>
<status status="PASS" starttime="20220705 02:21:55.707" endtime="20220705 02:21:55.927"/>
</kw>
<status status="PASS" starttime="20220705 02:21:55.706" endtime="20220705 02:21:55.927"/>
</kw>
<test id="s1-s1-s2-t1" name="Verify A Card Can Be Created" line="13">
<kw name="Create A Card" library="Card">
<var>${response}</var>
<arg>name</arg>
<arg>RFCard2</arg>
<doc>Creates a new card in the given list.
required_args: listId
optional_args: name, desc, pos, idCardSource, idLabels, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>@{optional_args}</arg>
<arg>idList</arg>
<arg>${idList}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 02:21:55.929" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 02:21:55.929" endtime="20220705 02:21:55.929"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 02:21:55.929" endtime="20220705 02:21:55.929"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 02:21:55.930" level="INFO">${url} = cards/</msg>
<status status="PASS" starttime="20220705 02:21:55.930" endtime="20220705 02:21:55.930"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 02:21:56.103" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 02:21:55.930" endtime="20220705 02:21:56.103"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 02:21:56.103" endtime="20220705 02:21:56.103"/>
</return>
<msg timestamp="20220705 02:21:56.103" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 02:21:55.928" endtime="20220705 02:21:56.103"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 02:21:56.103" endtime="20220705 02:21:56.103"/>
</return>
<msg timestamp="20220705 02:21:56.104" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 02:21:55.928" endtime="20220705 02:21:56.104"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>card</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 02:21:56.104" endtime="20220705 02:21:56.109"/>
</kw>
<status status="PASS" starttime="20220705 02:21:56.104" endtime="20220705 02:21:56.109"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 02:21:56.109" endtime="20220705 02:21:56.109"/>
</return>
<msg timestamp="20220705 02:21:56.110" level="INFO">${CARD_ID} = 62c3a044eb4ded6f3ff8084b</msg>
<status status="PASS" starttime="20220705 02:21:56.109" endtime="20220705 02:21:56.110"/>
</kw>
<kw name="Get A Card" library="Card">
<var>${response}</var>
<arg>${CARD_ID}</arg>
<doc>Gets the card with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 02:21:56.111" level="INFO">${url} = cards/62c3a044eb4ded6f3ff8084b</msg>
<status status="PASS" starttime="20220705 02:21:56.111" endtime="20220705 02:21:56.111"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 02:21:56.162" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 02:21:56.111" endtime="20220705 02:21:56.162"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 02:21:56.162" endtime="20220705 02:21:56.162"/>
</return>
<msg timestamp="20220705 02:21:56.162" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 02:21:56.111" endtime="20220705 02:21:56.162"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 02:21:56.162" endtime="20220705 02:21:56.162"/>
</return>
<msg timestamp="20220705 02:21:56.163" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 02:21:56.110" endtime="20220705 02:21:56.163"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_NAME}</var>
<arg>${response}</arg>
<arg>name</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 02:21:56.163" endtime="20220705 02:21:56.163"/>
</return>
<msg timestamp="20220705 02:21:56.164" level="INFO">${CARD_NAME} = RFCard2</msg>
<status status="PASS" starttime="20220705 02:21:56.163" endtime="20220705 02:21:56.164"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${CARD_NAME}</arg>
<arg>RFCard2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220705 02:21:56.164" endtime="20220705 02:21:56.164"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Card</arg>
<arg>${CARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Card" library="Card">
<arg>${CARD_ID}</arg>
<doc>Deletes the card with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 02:21:56.166" level="INFO">${url} = cards/62c3a044eb4ded6f3ff8084b</msg>
<status status="PASS" starttime="20220705 02:21:56.165" endtime="20220705 02:21:56.166"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 02:21:56.438" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 02:21:56.166" endtime="20220705 02:21:56.438"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 02:21:56.438" endtime="20220705 02:21:56.438"/>
</return>
<msg timestamp="20220705 02:21:56.438" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 02:21:56.165" endtime="20220705 02:21:56.438"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 02:21:56.438" endtime="20220705 02:21:56.438"/>
</return>
<status status="PASS" starttime="20220705 02:21:56.165" endtime="20220705 02:21:56.438"/>
</kw>
<status status="PASS" starttime="20220705 02:21:56.164" endtime="20220705 02:21:56.438"/>
</kw>
<doc>Verify that a card can be created through API</doc>
<tag>api</tag>
<tag>card.create</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220705 02:21:55.927" endtime="20220705 02:21:56.438"/>
</test>
<test id="s1-s1-s2-t2" name="Verify A Card Can Be Closed" line="24">
<kw name="Create A Card" library="Card">
<var>${response}</var>
<doc>Creates a new card in the given list.
required_args: listId
optional_args: name, desc, pos, idCardSource, idLabels, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>@{optional_args}</arg>
<arg>idList</arg>
<arg>${idList}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 02:21:56.441" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 02:21:56.441" endtime="20220705 02:21:56.441"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 02:21:56.441" endtime="20220705 02:21:56.441"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 02:21:56.442" level="INFO">${url} = cards/</msg>
<status status="PASS" starttime="20220705 02:21:56.442" endtime="20220705 02:21:56.442"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 02:21:56.567" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 02:21:56.442" endtime="20220705 02:21:56.567"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 02:21:56.567" endtime="20220705 02:21:56.567"/>
</return>
<msg timestamp="20220705 02:21:56.567" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 02:21:56.440" endtime="20220705 02:21:56.567"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 02:21:56.567" endtime="20220705 02:21:56.567"/>
</return>
<msg timestamp="20220705 02:21:56.567" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 02:21:56.440" endtime="20220705 02:21:56.567"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 02:21:56.568" endtime="20220705 02:21:56.568"/>
</return>
<msg timestamp="20220705 02:21:56.569" level="INFO">${CARD_ID} = 62c3a04487ec6a024b9928d5</msg>
<status status="PASS" starttime="20220705 02:21:56.567" endtime="20220705 02:21:56.569"/>
</kw>
<kw name="Archive A Card" library="Card">
<arg>${CARD_ID}</arg>
<doc>Modifies the card status to closed.</doc>
<kw name="Update A Card" library="Card">
<var>${response}</var>
<arg>${id}</arg>
<arg>closed</arg>
<arg>true</arg>
<arg>status_code=${status_code}</arg>
<doc>Updates the card with the given ID
optional_args: name, desc, closed, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<arg>status_code=${status_code}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 02:21:56.571" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 02:21:56.571" endtime="20220705 02:21:56.571"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 02:21:56.571" endtime="20220705 02:21:56.571"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 02:21:56.571" level="INFO">${url} = cards/62c3a04487ec6a024b9928d5</msg>
<status status="PASS" starttime="20220705 02:21:56.571" endtime="20220705 02:21:56.571"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 02:21:56.684" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 02:21:56.572" endtime="20220705 02:21:56.684"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 02:21:56.684" endtime="20220705 02:21:56.684"/>
</return>
<msg timestamp="20220705 02:21:56.684" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 02:21:56.570" endtime="20220705 02:21:56.684"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 02:21:56.684" endtime="20220705 02:21:56.684"/>
</return>
<msg timestamp="20220705 02:21:56.684" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 02:21:56.569" endtime="20220705 02:21:56.684"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 02:21:56.685" endtime="20220705 02:21:56.685"/>
</return>
<status status="PASS" starttime="20220705 02:21:56.569" endtime="20220705 02:21:56.685"/>
</kw>
<kw name="Get A Card" library="Card">
<var>${response}</var>
<arg>${CARD_ID}</arg>
<doc>Gets the card with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 02:21:56.686" level="INFO">${url} = cards/62c3a04487ec6a024b9928d5</msg>
<status status="PASS" starttime="20220705 02:21:56.686" endtime="20220705 02:21:56.686"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 02:21:56.741" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 02:21:56.686" endtime="20220705 02:21:56.741"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 02:21:56.741" endtime="20220705 02:21:56.741"/>
</return>
<msg timestamp="20220705 02:21:56.742" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 02:21:56.685" endtime="20220705 02:21:56.742"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 02:21:56.742" endtime="20220705 02:21:56.742"/>
</return>
<msg timestamp="20220705 02:21:56.742" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 02:21:56.685" endtime="20220705 02:21:56.742"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_CLOSED}</var>
<arg>${response}</arg>
<arg>closed</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 02:21:56.743" endtime="20220705 02:21:56.743"/>
</return>
<msg timestamp="20220705 02:21:56.743" level="INFO">${CARD_CLOSED} = True</msg>
<status status="PASS" starttime="20220705 02:21:56.742" endtime="20220705 02:21:56.743"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${CARD_CLOSED}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220705 02:21:56.744" endtime="20220705 02:21:56.744"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Card</arg>
<arg>${CARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Card" library="Card">
<arg>${CARD_ID}</arg>
<doc>Deletes the card with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 02:21:56.745" level="INFO">${url} = cards/62c3a04487ec6a024b9928d5</msg>
<status status="PASS" starttime="20220705 02:21:56.745" endtime="20220705 02:21:56.745"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 02:21:56.874" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 02:21:56.745" endtime="20220705 02:21:56.874"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 02:21:56.874" endtime="20220705 02:21:56.874"/>
</return>
<msg timestamp="20220705 02:21:56.874" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 02:21:56.745" endtime="20220705 02:21:56.874"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 02:21:56.874" endtime="20220705 02:21:56.874"/>
</return>
<status status="PASS" starttime="20220705 02:21:56.744" endtime="20220705 02:21:56.875"/>
</kw>
<status status="PASS" starttime="20220705 02:21:56.744" endtime="20220705 02:21:56.875"/>
</kw>
<doc>Verify that a card can be closed through API</doc>
<tag>api</tag>
<tag>card.close</tag>
<tag>regression</tag>
<status status="PASS" starttime="20220705 02:21:56.439" endtime="20220705 02:21:56.875"/>
</test>
<test id="s1-s1-s2-t3" name="Verify A Card Can Be Deleted" line="35">
<kw name="Create A Card" library="Card">
<var>${response}</var>
<doc>Creates a new card in the given list.
required_args: listId
optional_args: name, desc, pos, idCardSource, idLabels, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>@{optional_args}</arg>
<arg>idList</arg>
<arg>${idList}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 02:21:56.877" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 02:21:56.877" endtime="20220705 02:21:56.877"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 02:21:56.877" endtime="20220705 02:21:56.878"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 02:21:56.878" level="INFO">${url} = cards/</msg>
<status status="PASS" starttime="20220705 02:21:56.878" endtime="20220705 02:21:56.878"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 02:21:57.039" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 02:21:56.879" endtime="20220705 02:21:57.039"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 02:21:57.039" endtime="20220705 02:21:57.039"/>
</return>
<msg timestamp="20220705 02:21:57.040" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 02:21:56.876" endtime="20220705 02:21:57.040"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 02:21:57.040" endtime="20220705 02:21:57.040"/>
</return>
<msg timestamp="20220705 02:21:57.040" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 02:21:56.876" endtime="20220705 02:21:57.040"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 02:21:57.040" endtime="20220705 02:21:57.040"/>
</return>
<msg timestamp="20220705 02:21:57.041" level="INFO">${CARD_ID} = 62c3a044ba2169866312e502</msg>
<status status="PASS" starttime="20220705 02:21:57.040" endtime="20220705 02:21:57.041"/>
</kw>
<kw name="Delete A Card" library="Card">
<var>${response}</var>
<arg>${CARD_ID}</arg>
<doc>Deletes the card with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 02:21:57.043" level="INFO">${url} = cards/62c3a044ba2169866312e502</msg>
<status status="PASS" starttime="20220705 02:21:57.042" endtime="20220705 02:21:57.043"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 02:21:57.191" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 02:21:57.043" endtime="20220705 02:21:57.191"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 02:21:57.191" endtime="20220705 02:21:57.191"/>
</return>
<msg timestamp="20220705 02:21:57.192" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 02:21:57.042" endtime="20220705 02:21:57.192"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 02:21:57.192" endtime="20220705 02:21:57.192"/>
</return>
<msg timestamp="20220705 02:21:57.192" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 02:21:57.041" endtime="20220705 02:21:57.192"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>delete</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 02:21:57.193" endtime="20220705 02:21:57.195"/>
</kw>
<status status="PASS" starttime="20220705 02:21:57.192" endtime="20220705 02:21:57.195"/>
</kw>
<kw name="Get A Card" library="Card">
<arg>${CARD_ID}</arg>
<arg>status_code=404</arg>
<doc>Gets the card with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 02:21:57.196" level="INFO">${url} = cards/62c3a044ba2169866312e502</msg>
<status status="PASS" starttime="20220705 02:21:57.196" endtime="20220705 02:21:57.196"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 02:21:57.229" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220705 02:21:57.196" endtime="20220705 02:21:57.229"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 02:21:57.229" endtime="20220705 02:21:57.229"/>
</return>
<msg timestamp="20220705 02:21:57.229" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220705 02:21:57.195" endtime="20220705 02:21:57.229"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 02:21:57.229" endtime="20220705 02:21:57.229"/>
</return>
<status status="PASS" starttime="20220705 02:21:57.195" endtime="20220705 02:21:57.230"/>
</kw>
<doc>Verify that a card can be deleted through API</doc>
<tag>api</tag>
<tag>card.delete</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220705 02:21:56.875" endtime="20220705 02:21:57.230"/>
</test>
<test id="s1-s1-s2-t4" name="Verify A Card Can Be Updated" line="44">
<kw name="Create A Card" library="Card">
<var>${response}</var>
<arg>name</arg>
<arg>RFCard4</arg>
<doc>Creates a new card in the given list.
required_args: listId
optional_args: name, desc, pos, idCardSource, idLabels, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>@{optional_args}</arg>
<arg>idList</arg>
<arg>${idList}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 02:21:57.232" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 02:21:57.232" endtime="20220705 02:21:57.232"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 02:21:57.232" endtime="20220705 02:21:57.232"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 02:21:57.233" level="INFO">${url} = cards/</msg>
<status status="PASS" starttime="20220705 02:21:57.232" endtime="20220705 02:21:57.233"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 02:21:57.371" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 02:21:57.233" endtime="20220705 02:21:57.371"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 02:21:57.371" endtime="20220705 02:21:57.371"/>
</return>
<msg timestamp="20220705 02:21:57.371" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 02:21:57.231" endtime="20220705 02:21:57.371"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 02:21:57.371" endtime="20220705 02:21:57.371"/>
</return>
<msg timestamp="20220705 02:21:57.371" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 02:21:57.231" endtime="20220705 02:21:57.371"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 02:21:57.372" endtime="20220705 02:21:57.372"/>
</return>
<msg timestamp="20220705 02:21:57.373" level="INFO">${CARD_ID} = 62c3a0458897d032bdab2d84</msg>
<status status="PASS" starttime="20220705 02:21:57.371" endtime="20220705 02:21:57.373"/>
</kw>
<kw name="Update A Card" library="Card">
<var>${response}</var>
<arg>${CARD_ID}</arg>
<arg>name</arg>
<arg>RFCard5</arg>
<arg>desc</arg>
<arg>Description</arg>
<doc>Updates the card with the given ID
optional_args: name, desc, closed, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<arg>status_code=${status_code}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 02:21:57.374" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 02:21:57.374" endtime="20220705 02:21:57.374"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 02:21:57.374" endtime="20220705 02:21:57.374"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 02:21:57.374" level="INFO">${url} = cards/62c3a0458897d032bdab2d84</msg>
<status status="PASS" starttime="20220705 02:21:57.374" endtime="20220705 02:21:57.374"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 02:21:57.497" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 02:21:57.375" endtime="20220705 02:21:57.497"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 02:21:57.498" endtime="20220705 02:21:57.498"/>
</return>
<msg timestamp="20220705 02:21:57.498" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 02:21:57.373" endtime="20220705 02:21:57.498"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 02:21:57.498" endtime="20220705 02:21:57.498"/>
</return>
<msg timestamp="20220705 02:21:57.498" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 02:21:57.373" endtime="20220705 02:21:57.498"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>card</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 02:21:57.499" endtime="20220705 02:21:57.504"/>
</kw>
<status status="PASS" starttime="20220705 02:21:57.498" endtime="20220705 02:21:57.504"/>
</kw>
<kw name="Get A Card" library="Card">
<var>${response}</var>
<arg>${CARD_ID}</arg>
<doc>Gets the card with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 02:21:57.506" level="INFO">${url} = cards/62c3a0458897d032bdab2d84</msg>
<status status="PASS" starttime="20220705 02:21:57.505" endtime="20220705 02:21:57.506"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 02:21:57.568" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 02:21:57.506" endtime="20220705 02:21:57.568"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 02:21:57.568" endtime="20220705 02:21:57.568"/>
</return>
<msg timestamp="20220705 02:21:57.568" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 02:21:57.505" endtime="20220705 02:21:57.568"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 02:21:57.568" endtime="20220705 02:21:57.568"/>
</return>
<msg timestamp="20220705 02:21:57.569" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 02:21:57.505" endtime="20220705 02:21:57.569"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_NAME}</var>
<arg>${response}</arg>
<arg>name</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 02:21:57.569" endtime="20220705 02:21:57.569"/>
</return>
<msg timestamp="20220705 02:21:57.570" level="INFO">${CARD_NAME} = RFCard5</msg>
<status status="PASS" starttime="20220705 02:21:57.569" endtime="20220705 02:21:57.570"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_DESC}</var>
<arg>${response}</arg>
<arg>desc</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 02:21:57.570" endtime="20220705 02:21:57.570"/>
</return>
<msg timestamp="20220705 02:21:57.571" level="INFO">${CARD_DESC} = Description</msg>
<status status="PASS" starttime="20220705 02:21:57.570" endtime="20220705 02:21:57.571"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${CARD_NAME}</arg>
<arg>RFCard5</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220705 02:21:57.571" endtime="20220705 02:21:57.571"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${CARD_DESC}</arg>
<arg>Description</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220705 02:21:57.572" endtime="20220705 02:21:57.572"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Card</arg>
<arg>${CARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Card" library="Card">
<arg>${CARD_ID}</arg>
<doc>Deletes the card with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 02:21:57.573" level="INFO">${url} = cards/62c3a0458897d032bdab2d84</msg>
<status status="PASS" starttime="20220705 02:21:57.573" endtime="20220705 02:21:57.573"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 02:21:57.729" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 02:21:57.574" endtime="20220705 02:21:57.729"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 02:21:57.729" endtime="20220705 02:21:57.729"/>
</return>
<msg timestamp="20220705 02:21:57.729" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 02:21:57.573" endtime="20220705 02:21:57.729"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 02:21:57.729" endtime="20220705 02:21:57.729"/>
</return>
<status status="PASS" starttime="20220705 02:21:57.572" endtime="20220705 02:21:57.729"/>
</kw>
<status status="PASS" starttime="20220705 02:21:57.572" endtime="20220705 02:21:57.730"/>
</kw>
<doc>Verify that a card's name and Description can be updated through API</doc>
<tag>api</tag>
<tag>card.update</tag>
<tag>regression</tag>
<status status="PASS" starttime="20220705 02:21:57.230" endtime="20220705 02:21:57.730"/>
</test>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Teardown Board</arg>
<arg>Delete All Sessions</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Teardown Board">
<doc>Delete the board created for this suite</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 02:21:57.733" level="INFO">${url} = boards/62c3a04387678d3650788290</msg>
<status status="PASS" starttime="20220705 02:21:57.732" endtime="20220705 02:21:57.733"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 02:21:58.151" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 02:21:57.733" endtime="20220705 02:21:58.151"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 02:21:58.151" endtime="20220705 02:21:58.151"/>
</return>
<msg timestamp="20220705 02:21:58.151" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 02:21:57.732" endtime="20220705 02:21:58.151"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 02:21:58.151" endtime="20220705 02:21:58.151"/>
</return>
<status status="PASS" starttime="20220705 02:21:57.731" endtime="20220705 02:21:58.151"/>
</kw>
<status status="PASS" starttime="20220705 02:21:57.731" endtime="20220705 02:21:58.152"/>
</kw>
<status status="PASS" starttime="20220705 02:21:57.731" endtime="20220705 02:21:58.152"/>
</kw>
<kw name="Delete All Sessions" library="request_own_library">
<status status="PASS" starttime="20220705 02:21:58.152" endtime="20220705 02:21:58.153"/>
</kw>
<status status="PASS" starttime="20220705 02:21:57.731" endtime="20220705 02:21:58.153"/>
</kw>
<doc>Example Test with Trello API Cards</doc>
<status status="PASS" starttime="20220705 02:21:55.697" endtime="20220705 02:21:58.153"/>
</suite>
<suite id="s1-s1-s3" name="Trello Api Checklists Tests" source="/trello/api/trello_api_checklists_tests.robot">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Create Trello Session</arg>
<arg>Setup Board, List And Card</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Create Trello Session" library="TrelloAPI">
<doc>Creates a Trello Session</doc>
<kw name="Create Session" library="request_own_library">
<arg>${API_BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<status status="PASS" starttime="20220705 02:21:58.164" endtime="20220705 02:21:58.165"/>
</kw>
<status status="PASS" starttime="20220705 02:21:58.164" endtime="20220705 02:21:58.165"/>
</kw>
<kw name="Setup Board, List And Card">
<doc>Create a board and save its ID and its first list's ID</doc>
<kw name="Create A Board" library="Board">
<var>${BOARD}</var>
<arg>TestBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 02:21:58.166" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 02:21:58.165" endtime="20220705 02:21:58.166"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 02:21:58.166" endtime="20220705 02:21:58.166"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 02:21:58.167" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220705 02:21:58.166" endtime="20220705 02:21:58.167"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 02:21:58.347" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 02:21:58.167" endtime="20220705 02:21:58.347"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 02:21:58.347" endtime="20220705 02:21:58.347"/>
</return>
<msg timestamp="20220705 02:21:58.347" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 02:21:58.165" endtime="20220705 02:21:58.347"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 02:21:58.347" endtime="20220705 02:21:58.347"/>
</return>
<msg timestamp="20220705 02:21:58.347" level="INFO">${BOARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 02:21:58.165" endtime="20220705 02:21:58.347"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_BOARD_ID}</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220705 02:21:58.348" level="INFO">${TEST_SUITE_BOARD_ID} = 62c3a046ab480d1bf0746a1b</msg>
<status status="PASS" starttime="20220705 02:21:58.348" endtime="20220705 02:21:58.348"/>
</kw>
<kw name="Get Lists On A Board" library="Board">
<var>${LISTS}</var>
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Get all the lists in a board</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>lists_on_board</arg>
<arg>${id}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 02:21:58.350" level="INFO">${url} = boards/62c3a046ab480d1bf0746a1b/lists/</msg>
<status status="PASS" starttime="20220705 02:21:58.349" endtime="20220705 02:21:58.350"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 02:21:58.394" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 02:21:58.350" endtime="20220705 02:21:58.394"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 02:21:58.394" endtime="20220705 02:21:58.395"/>
</return>
<msg timestamp="20220705 02:21:58.395" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 02:21:58.349" endtime="20220705 02:21:58.395"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 02:21:58.395" endtime="20220705 02:21:58.395"/>
</return>
<msg timestamp="20220705 02:21:58.395" level="INFO">${LISTS} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 02:21:58.349" endtime="20220705 02:21:58.395"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_LIST_ID}</arg>
<arg>${LISTS.json()}[0][id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220705 02:21:58.396" level="INFO">${TEST_SUITE_LIST_ID} = 62c3a046ab480d1bf0746a22</msg>
<status status="PASS" starttime="20220705 02:21:58.395" endtime="20220705 02:21:58.396"/>
</kw>
<kw name="Create A Card" library="Card">
<var>${CARD}</var>
<arg>name</arg>
<arg>TestCard</arg>
<doc>Creates a new card in the given list.
required_args: listId
optional_args: name, desc, pos, idCardSource, idLabels, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>@{optional_args}</arg>
<arg>idList</arg>
<arg>${idList}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 02:21:58.398" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 02:21:58.397" endtime="20220705 02:21:58.398"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 02:21:58.398" endtime="20220705 02:21:58.398"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 02:21:58.399" level="INFO">${url} = cards/</msg>
<status status="PASS" starttime="20220705 02:21:58.398" endtime="20220705 02:21:58.399"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 02:21:58.580" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 02:21:58.399" endtime="20220705 02:21:58.580"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 02:21:58.580" endtime="20220705 02:21:58.580"/>
</return>
<msg timestamp="20220705 02:21:58.580" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 02:21:58.397" endtime="20220705 02:21:58.581"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 02:21:58.581" endtime="20220705 02:21:58.581"/>
</return>
<msg timestamp="20220705 02:21:58.581" level="INFO">${CARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 02:21:58.396" endtime="20220705 02:21:58.581"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_CARD_ID}</arg>
<arg>${CARD.json()}[id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220705 02:21:58.582" level="INFO">${TEST_SUITE_CARD_ID} = 62c3a0469bb1ab865ebdbbea</msg>
<status status="PASS" starttime="20220705 02:21:58.581" endtime="20220705 02:21:58.582"/>
</kw>
<status status="PASS" starttime="20220705 02:21:58.165" endtime="20220705 02:21:58.582"/>
</kw>
<status status="PASS" starttime="20220705 02:21:58.164" endtime="20220705 02:21:58.582"/>
</kw>
<test id="s1-s1-s3-t1" name="Verify A Checklist Can Be Created" line="14">
<kw name="Create A Checklist" library="Checklist">
<var>${response}</var>
<arg>name</arg>
<arg>TestChecklist</arg>
<arg>idCard=${TEST_SUITE_CARD_ID}</arg>
<doc>Creates a new checklist in the given card.
required_args: idCard
optional_args: name, pos, idChecklistSource
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>@{optional_args}</arg>
<arg>idCard</arg>
<arg>${idCard}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 02:21:58.584" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 02:21:58.584" endtime="20220705 02:21:58.584"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 02:21:58.584" endtime="20220705 02:21:58.585"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 02:21:58.585" level="INFO">${url} = checklists/</msg>
<status status="PASS" starttime="20220705 02:21:58.585" endtime="20220705 02:21:58.586"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 02:21:58.691" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 02:21:58.586" endtime="20220705 02:21:58.691"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 02:21:58.691" endtime="20220705 02:21:58.691"/>
</return>
<msg timestamp="20220705 02:21:58.691" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 02:21:58.583" endtime="20220705 02:21:58.691"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 02:21:58.691" endtime="20220705 02:21:58.691"/>
</return>
<msg timestamp="20220705 02:21:58.692" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 02:21:58.583" endtime="20220705 02:21:58.692"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${checklist_id}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 02:21:58.692" endtime="20220705 02:21:58.692"/>
</return>
<msg timestamp="20220705 02:21:58.693" level="INFO">${checklist_id} = 62c3a0465cd7e301b5af3b20</msg>
<status status="PASS" starttime="20220705 02:21:58.692" endtime="20220705 02:21:58.693"/>
</kw>
<kw name="Get A Checklist" library="Checklist">
<var>${response}</var>
<arg>${checklist_id}</arg>
<doc>Gets the checklist with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 02:21:58.694" level="INFO">${url} = checklists/62c3a0465cd7e301b5af3b20</msg>
<status status="PASS" starttime="20220705 02:21:58.694" endtime="20220705 02:21:58.694"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 02:21:58.743" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 02:21:58.694" endtime="20220705 02:21:58.743"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 02:21:58.743" endtime="20220705 02:21:58.743"/>
</return>
<msg timestamp="20220705 02:21:58.743" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 02:21:58.693" endtime="20220705 02:21:58.743"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 02:21:58.743" endtime="20220705 02:21:58.743"/>
</return>
<msg timestamp="20220705 02:21:58.744" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 02:21:58.693" endtime="20220705 02:21:58.744"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${checklist_name}</var>
<arg>${response}</arg>
<arg>name</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 02:21:58.744" endtime="20220705 02:21:58.744"/>
</return>
<msg timestamp="20220705 02:21:58.745" level="INFO">${checklist_name} = TestChecklist</msg>
<status status="PASS" starttime="20220705 02:21:58.744" endtime="20220705 02:21:58.745"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${checklist_name}</arg>
<arg>TestChecklist</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220705 02:21:58.745" endtime="20220705 02:21:58.745"/>
</kw>
<kw name="Delete A Checklist" library="Checklist" type="TEARDOWN">
<arg>${checklist_id}</arg>
<doc>Deletes the checklist with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 02:21:58.747" level="INFO">${url} = checklists/62c3a0465cd7e301b5af3b20</msg>
<status status="PASS" starttime="20220705 02:21:58.746" endtime="20220705 02:21:58.747"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 02:21:58.852" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 02:21:58.747" endtime="20220705 02:21:58.852"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 02:21:58.852" endtime="20220705 02:21:58.852"/>
</return>
<msg timestamp="20220705 02:21:58.853" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 02:21:58.746" endtime="20220705 02:21:58.853"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 02:21:58.853" endtime="20220705 02:21:58.853"/>
</return>
<status status="PASS" starttime="20220705 02:21:58.745" endtime="20220705 02:21:58.853"/>
</kw>
<doc>Verify that a checklist can be created through API</doc>
<tag>api</tag>
<tag>checklist.create</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220705 02:21:58.582" endtime="20220705 02:21:58.853"/>
</test>
<test id="s1-s1-s3-t2" name="Verify A Checklist Can Be Deleted" line="24">
<kw name="Create A Checklist" library="Checklist">
<var>${response}</var>
<arg>name</arg>
<arg>TestChecklist</arg>
<arg>idCard=${TEST_SUITE_CARD_ID}</arg>
<doc>Creates a new checklist in the given card.
required_args: idCard
optional_args: name, pos, idChecklistSource
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>@{optional_args}</arg>
<arg>idCard</arg>
<arg>${idCard}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 02:21:58.855" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 02:21:58.855" endtime="20220705 02:21:58.855"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 02:21:58.855" endtime="20220705 02:21:58.855"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 02:21:58.856" level="INFO">${url} = checklists/</msg>
<status status="PASS" starttime="20220705 02:21:58.855" endtime="20220705 02:21:58.856"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 02:21:58.965" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 02:21:58.856" endtime="20220705 02:21:58.965"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 02:21:58.965" endtime="20220705 02:21:58.965"/>
</return>
<msg timestamp="20220705 02:21:58.965" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 02:21:58.854" endtime="20220705 02:21:58.965"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 02:21:58.965" endtime="20220705 02:21:58.965"/>
</return>
<msg timestamp="20220705 02:21:58.966" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 02:21:58.854" endtime="20220705 02:21:58.966"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${checklist_id}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 02:21:58.966" endtime="20220705 02:21:58.966"/>
</return>
<msg timestamp="20220705 02:21:58.967" level="INFO">${checklist_id} = 62c3a0464a46902dfd4757c4</msg>
<status status="PASS" starttime="20220705 02:21:58.966" endtime="20220705 02:21:58.967"/>
</kw>
<kw name="Delete A Checklist" library="Checklist">
<var>${response}</var>
<arg>${checklist_id}</arg>
<doc>Deletes the checklist with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 02:21:58.968" level="INFO">${url} = checklists/62c3a0464a46902dfd4757c4</msg>
<status status="PASS" starttime="20220705 02:21:58.968" endtime="20220705 02:21:58.969"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 02:21:59.078" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 02:21:58.969" endtime="20220705 02:21:59.078"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 02:21:59.078" endtime="20220705 02:21:59.079"/>
</return>
<msg timestamp="20220705 02:21:59.079" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 02:21:58.968" endtime="20220705 02:21:59.079"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 02:21:59.079" endtime="20220705 02:21:59.079"/>
</return>
<msg timestamp="20220705 02:21:59.079" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 02:21:58.967" endtime="20220705 02:21:59.079"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>delete</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 02:21:59.080" endtime="20220705 02:21:59.081"/>
</kw>
<status status="PASS" starttime="20220705 02:21:59.079" endtime="20220705 02:21:59.082"/>
</kw>
<kw name="Get A Checklist" library="Checklist">
<arg>${checklist_id}</arg>
<arg>status_code=404</arg>
<doc>Gets the checklist with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 02:21:59.083" level="INFO">${url} = checklists/62c3a0464a46902dfd4757c4</msg>
<status status="PASS" starttime="20220705 02:21:59.083" endtime="20220705 02:21:59.083"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 02:21:59.120" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220705 02:21:59.083" endtime="20220705 02:21:59.120"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 02:21:59.120" endtime="20220705 02:21:59.120"/>
</return>
<msg timestamp="20220705 02:21:59.120" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220705 02:21:59.082" endtime="20220705 02:21:59.120"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 02:21:59.120" endtime="20220705 02:21:59.120"/>
</return>
<status status="PASS" starttime="20220705 02:21:59.082" endtime="20220705 02:21:59.120"/>
</kw>
<doc>Verify that a checklist can be deleted through API</doc>
<tag>api</tag>
<tag>checklist.delete</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220705 02:21:58.853" endtime="20220705 02:21:59.120"/>
</test>
<test id="s1-s1-s3-t3" name="Verify A Checklist Can Be Updated" line="33">
<kw name="Create A Checklist" library="Checklist">
<var>${response}</var>
<arg>name</arg>
<arg>TestChecklist</arg>
<arg>idCard=${TEST_SUITE_CARD_ID}</arg>
<doc>Creates a new checklist in the given card.
required_args: idCard
optional_args: name, pos, idChecklistSource
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>@{optional_args}</arg>
<arg>idCard</arg>
<arg>${idCard}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 02:21:59.124" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 02:21:59.122" endtime="20220705 02:21:59.124"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 02:21:59.124" endtime="20220705 02:21:59.124"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 02:21:59.125" level="INFO">${url} = checklists/</msg>
<status status="PASS" starttime="20220705 02:21:59.125" endtime="20220705 02:21:59.125"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 02:21:59.232" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 02:21:59.125" endtime="20220705 02:21:59.232"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 02:21:59.233" endtime="20220705 02:21:59.233"/>
</return>
<msg timestamp="20220705 02:21:59.233" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 02:21:59.122" endtime="20220705 02:21:59.233"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 02:21:59.233" endtime="20220705 02:21:59.233"/>
</return>
<msg timestamp="20220705 02:21:59.233" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 02:21:59.121" endtime="20220705 02:21:59.233"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${checklist_id}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 02:21:59.234" endtime="20220705 02:21:59.234"/>
</return>
<msg timestamp="20220705 02:21:59.234" level="INFO">${checklist_id} = 62c3a047cd9af80e21aa17bf</msg>
<status status="PASS" starttime="20220705 02:21:59.233" endtime="20220705 02:21:59.235"/>
</kw>
<kw name="Update A Checklist" library="Checklist">
<var>${response}</var>
<arg>${checklist_id}</arg>
<arg>name</arg>
<arg>TestChecklist2</arg>
<doc>Updates the checklist with the given ID
optional_args: name, pos
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<arg>status_code=${status_code}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 02:21:59.236" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 02:21:59.236" endtime="20220705 02:21:59.236"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 02:21:59.236" endtime="20220705 02:21:59.236"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 02:21:59.237" level="INFO">${url} = checklists/62c3a047cd9af80e21aa17bf</msg>
<status status="PASS" starttime="20220705 02:21:59.236" endtime="20220705 02:21:59.237"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 02:21:59.311" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 02:21:59.237" endtime="20220705 02:21:59.311"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 02:21:59.311" endtime="20220705 02:21:59.311"/>
</return>
<msg timestamp="20220705 02:21:59.311" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 02:21:59.235" endtime="20220705 02:21:59.311"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 02:21:59.312" endtime="20220705 02:21:59.312"/>
</return>
<msg timestamp="20220705 02:21:59.312" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 02:21:59.235" endtime="20220705 02:21:59.312"/>
</kw>
<kw name="Get A Checklist" library="Checklist">
<var>${response}</var>
<arg>${checklist_id}</arg>
<doc>Gets the checklist with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 02:21:59.313" level="INFO">${url} = checklists/62c3a047cd9af80e21aa17bf</msg>
<status status="PASS" starttime="20220705 02:21:59.313" endtime="20220705 02:21:59.313"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 02:21:59.366" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 02:21:59.313" endtime="20220705 02:21:59.366"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 02:21:59.366" endtime="20220705 02:21:59.366"/>
</return>
<msg timestamp="20220705 02:21:59.366" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 02:21:59.312" endtime="20220705 02:21:59.366"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 02:21:59.366" endtime="20220705 02:21:59.366"/>
</return>
<msg timestamp="20220705 02:21:59.367" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 02:21:59.312" endtime="20220705 02:21:59.367"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${checklist_name}</var>
<arg>${response}</arg>
<arg>name</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 02:21:59.367" endtime="20220705 02:21:59.367"/>
</return>
<msg timestamp="20220705 02:21:59.368" level="INFO">${checklist_name} = TestChecklist2</msg>
<status status="PASS" starttime="20220705 02:21:59.367" endtime="20220705 02:21:59.368"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${checklist_name}</arg>
<arg>TestChecklist2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220705 02:21:59.368" endtime="20220705 02:21:59.368"/>
</kw>
<kw name="Delete A Checklist" library="Checklist" type="TEARDOWN">
<arg>${checklist_id}</arg>
<doc>Deletes the checklist with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 02:21:59.380" level="INFO">${url} = checklists/62c3a047cd9af80e21aa17bf</msg>
<status status="PASS" starttime="20220705 02:21:59.380" endtime="20220705 02:21:59.380"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 02:21:59.486" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 02:21:59.380" endtime="20220705 02:21:59.486"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 02:21:59.486" endtime="20220705 02:21:59.486"/>
</return>
<msg timestamp="20220705 02:21:59.486" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 02:21:59.380" endtime="20220705 02:21:59.486"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 02:21:59.486" endtime="20220705 02:21:59.486"/>
</return>
<status status="PASS" starttime="20220705 02:21:59.369" endtime="20220705 02:21:59.486"/>
</kw>
<doc>Verify that a checklist's name can be updated through API</doc>
<tag>api</tag>
<tag>checklist.update</tag>
<tag>regression</tag>
<status status="PASS" starttime="20220705 02:21:59.121" endtime="20220705 02:21:59.486"/>
</test>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Teardown Board</arg>
<arg>Delete All Sessions</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Teardown Board">
<doc>Delete the board created for this suite</doc>
<kw name="Delete A Board" library="Board">
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 02:21:59.489" level="INFO">${url} = boards/62c3a046ab480d1bf0746a1b</msg>
<status status="PASS" starttime="20220705 02:21:59.489" endtime="20220705 02:21:59.489"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 02:21:59.845" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 02:21:59.489" endtime="20220705 02:21:59.845"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 02:21:59.845" endtime="20220705 02:21:59.845"/>
</return>
<msg timestamp="20220705 02:21:59.846" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 02:21:59.488" endtime="20220705 02:21:59.846"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 02:21:59.846" endtime="20220705 02:21:59.846"/>
</return>
<status status="PASS" starttime="20220705 02:21:59.488" endtime="20220705 02:21:59.846"/>
</kw>
<status status="PASS" starttime="20220705 02:21:59.488" endtime="20220705 02:21:59.846"/>
</kw>
<kw name="Delete All Sessions" library="request_own_library">
<status status="PASS" starttime="20220705 02:21:59.846" endtime="20220705 02:21:59.847"/>
</kw>
<status status="PASS" starttime="20220705 02:21:59.487" endtime="20220705 02:21:59.848"/>
</kw>
<doc>Example Test with Trello API Checklists</doc>
<status status="PASS" starttime="20220705 02:21:58.155" endtime="20220705 02:21:59.848"/>
</suite>
<suite id="s1-s1-s4" name="Trello Api Labels Tests" source="/trello/api/trello_api_labels_tests.robot">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Create Trello Session</arg>
<arg>Setup Board And List</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Create Trello Session" library="TrelloAPI">
<doc>Creates a Trello Session</doc>
<kw name="Create Session" library="request_own_library">
<arg>${API_BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<status status="PASS" starttime="20220705 02:21:59.858" endtime="20220705 02:21:59.858"/>
</kw>
<status status="PASS" starttime="20220705 02:21:59.857" endtime="20220705 02:21:59.858"/>
</kw>
<kw name="Setup Board And List">
<doc>Create a board and save its ID and its first list's ID</doc>
<kw name="Create A Board" library="Board">
<var>${BOARD}</var>
<arg>TestBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 02:21:59.859" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 02:21:59.859" endtime="20220705 02:21:59.859"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 02:21:59.859" endtime="20220705 02:21:59.859"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 02:21:59.860" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220705 02:21:59.859" endtime="20220705 02:21:59.860"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 02:22:00.040" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 02:21:59.860" endtime="20220705 02:22:00.040"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 02:22:00.040" endtime="20220705 02:22:00.040"/>
</return>
<msg timestamp="20220705 02:22:00.040" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 02:21:59.858" endtime="20220705 02:22:00.040"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 02:22:00.040" endtime="20220705 02:22:00.040"/>
</return>
<msg timestamp="20220705 02:22:00.040" level="INFO">${BOARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 02:21:59.858" endtime="20220705 02:22:00.040"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_BOARD_ID}</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220705 02:22:00.041" level="INFO">${TEST_SUITE_BOARD_ID} = 62c3a0472a16cc7c947188d3</msg>
<status status="PASS" starttime="20220705 02:22:00.041" endtime="20220705 02:22:00.042"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${LISTS}</var>
<arg>boards/${TEST_SUITE_BOARD_ID}/lists</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 02:22:00.094" level="INFO">${LISTS} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 02:22:00.042" endtime="20220705 02:22:00.094"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_LIST_ID}</arg>
<arg>${LISTS.json()}[0][id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220705 02:22:00.095" level="INFO">${TEST_SUITE_LIST_ID} = 62c3a0472a16cc7c947188da</msg>
<status status="PASS" starttime="20220705 02:22:00.094" endtime="20220705 02:22:00.095"/>
</kw>
<status status="PASS" starttime="20220705 02:21:59.858" endtime="20220705 02:22:00.095"/>
</kw>
<status status="PASS" starttime="20220705 02:21:59.857" endtime="20220705 02:22:00.095"/>
</kw>
<test id="s1-s1-s4-t1" name="Create and get label on board" line="14">
<kw name="Create A Label" library="Label">
<var>${response}</var>
<arg>name</arg>
<arg>label2</arg>
<arg>color</arg>
<arg>yellow</arg>
<doc>Creates a new label in the given board.
required_args: idBoard
optional_args: name, color
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>idBoard</arg>
<arg>${idBoard}</arg>
<arg>@{optional_args}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 02:22:00.097" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 02:22:00.097" endtime="20220705 02:22:00.097"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 02:22:00.097" endtime="20220705 02:22:00.098"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 02:22:00.099" level="INFO">${url} = labels/</msg>
<status status="PASS" starttime="20220705 02:22:00.098" endtime="20220705 02:22:00.099"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 02:22:00.193" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 02:22:00.099" endtime="20220705 02:22:00.193"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 02:22:00.193" endtime="20220705 02:22:00.193"/>
</return>
<msg timestamp="20220705 02:22:00.193" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 02:22:00.097" endtime="20220705 02:22:00.193"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 02:22:00.193" endtime="20220705 02:22:00.193"/>
</return>
<msg timestamp="20220705 02:22:00.193" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 02:22:00.096" endtime="20220705 02:22:00.193"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>label</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 02:22:00.194" endtime="20220705 02:22:00.196"/>
</kw>
<status status="PASS" starttime="20220705 02:22:00.194" endtime="20220705 02:22:00.196"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${LABEL_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 02:22:00.196" endtime="20220705 02:22:00.196"/>
</return>
<msg timestamp="20220705 02:22:00.197" level="INFO">${LABEL_ID} = 62c3a048be112226d724743b</msg>
<status status="PASS" starttime="20220705 02:22:00.196" endtime="20220705 02:22:00.197"/>
</kw>
<kw name="Get A Label" library="Label">
<var>${response}</var>
<arg>${LABEL_ID}</arg>
<doc>Gets the label with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 02:22:00.198" level="INFO">${url} = labels/62c3a048be112226d724743b</msg>
<status status="PASS" starttime="20220705 02:22:00.198" endtime="20220705 02:22:00.198"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 02:22:00.244" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 02:22:00.198" endtime="20220705 02:22:00.244"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 02:22:00.244" endtime="20220705 02:22:00.244"/>
</return>
<msg timestamp="20220705 02:22:00.245" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 02:22:00.197" endtime="20220705 02:22:00.245"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 02:22:00.245" endtime="20220705 02:22:00.245"/>
</return>
<msg timestamp="20220705 02:22:00.245" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 02:22:00.197" endtime="20220705 02:22:00.245"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${LABEL_COLOR}</var>
<arg>${response}</arg>
<arg>color</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 02:22:00.245" endtime="20220705 02:22:00.245"/>
</return>
<msg timestamp="20220705 02:22:00.246" level="INFO">${LABEL_COLOR} = yellow</msg>
<status status="PASS" starttime="20220705 02:22:00.245" endtime="20220705 02:22:00.246"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${LABEL_NAME}</var>
<arg>${response}</arg>
<arg>name</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 02:22:00.247" endtime="20220705 02:22:00.247"/>
</return>
<msg timestamp="20220705 02:22:00.247" level="INFO">${LABEL_NAME} = label2</msg>
<status status="PASS" starttime="20220705 02:22:00.246" endtime="20220705 02:22:00.247"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${LABEL_COLOR}</arg>
<arg>yellow</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220705 02:22:00.247" endtime="20220705 02:22:00.248"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${LABEL_NAME}</arg>
<arg>label2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220705 02:22:00.248" endtime="20220705 02:22:00.248"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Label</arg>
<arg>${LABEL_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Label" library="Label">
<arg>${LABEL_ID}</arg>
<doc>Deletes the label with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 02:22:00.249" level="INFO">${url} = labels/62c3a048be112226d724743b</msg>
<status status="PASS" starttime="20220705 02:22:00.249" endtime="20220705 02:22:00.249"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 02:22:00.367" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 02:22:00.249" endtime="20220705 02:22:00.367"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 02:22:00.367" endtime="20220705 02:22:00.367"/>
</return>
<msg timestamp="20220705 02:22:00.367" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 02:22:00.249" endtime="20220705 02:22:00.367"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 02:22:00.367" endtime="20220705 02:22:00.367"/>
</return>
<status status="PASS" starttime="20220705 02:22:00.248" endtime="20220705 02:22:00.367"/>
</kw>
<status status="PASS" starttime="20220705 02:22:00.248" endtime="20220705 02:22:00.367"/>
</kw>
<doc>Verify that a label can be created through API</doc>
<tag>api</tag>
<tag>label.create</tag>
<tag>label.get</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220705 02:22:00.096" endtime="20220705 02:22:00.367"/>
</test>
<test id="s1-s1-s4-t2" name="Update label on board" line="28">
<kw name="Create A Label" library="Label">
<var>${response}</var>
<arg>name</arg>
<arg>label2</arg>
<arg>color</arg>
<arg>yellow</arg>
<doc>Creates a new label in the given board.
required_args: idBoard
optional_args: name, color
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>idBoard</arg>
<arg>${idBoard}</arg>
<arg>@{optional_args}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 02:22:00.370" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 02:22:00.370" endtime="20220705 02:22:00.370"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 02:22:00.370" endtime="20220705 02:22:00.370"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 02:22:00.371" level="INFO">${url} = labels/</msg>
<status status="PASS" starttime="20220705 02:22:00.370" endtime="20220705 02:22:00.371"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 02:22:00.453" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 02:22:00.371" endtime="20220705 02:22:00.453"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 02:22:00.453" endtime="20220705 02:22:00.453"/>
</return>
<msg timestamp="20220705 02:22:00.454" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 02:22:00.369" endtime="20220705 02:22:00.454"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 02:22:00.454" endtime="20220705 02:22:00.454"/>
</return>
<msg timestamp="20220705 02:22:00.454" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 02:22:00.369" endtime="20220705 02:22:00.454"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>label</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 02:22:00.455" endtime="20220705 02:22:00.456"/>
</kw>
<status status="PASS" starttime="20220705 02:22:00.454" endtime="20220705 02:22:00.456"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${LABEL_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 02:22:00.457" endtime="20220705 02:22:00.457"/>
</return>
<msg timestamp="20220705 02:22:00.458" level="INFO">${LABEL_ID} = 62c3a048460b1141fc3e1577</msg>
<status status="PASS" starttime="20220705 02:22:00.457" endtime="20220705 02:22:00.458"/>
</kw>
<kw name="Update A Label" library="Label">
<var>${new_response}</var>
<arg>${LABEL_ID}</arg>
<arg>name</arg>
<arg>label3</arg>
<arg>color</arg>
<arg>orange</arg>
<doc>Updates the label with the given ID
optional_args: name, color
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 02:22:00.459" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 02:22:00.459" endtime="20220705 02:22:00.459"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 02:22:00.459" endtime="20220705 02:22:00.459"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 02:22:00.460" level="INFO">${url} = labels/62c3a048460b1141fc3e1577</msg>
<status status="PASS" starttime="20220705 02:22:00.459" endtime="20220705 02:22:00.460"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 02:22:00.586" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 02:22:00.460" endtime="20220705 02:22:00.586"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 02:22:00.586" endtime="20220705 02:22:00.586"/>
</return>
<msg timestamp="20220705 02:22:00.586" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 02:22:00.458" endtime="20220705 02:22:00.586"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 02:22:00.586" endtime="20220705 02:22:00.586"/>
</return>
<msg timestamp="20220705 02:22:00.586" level="INFO">${new_response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 02:22:00.458" endtime="20220705 02:22:00.586"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${NEW_LABEL_COLOR}</var>
<arg>${new_response}</arg>
<arg>color</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 02:22:00.587" endtime="20220705 02:22:00.587"/>
</return>
<msg timestamp="20220705 02:22:00.588" level="INFO">${NEW_LABEL_COLOR} = orange</msg>
<status status="PASS" starttime="20220705 02:22:00.587" endtime="20220705 02:22:00.588"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${NEW_LABEL_NAME}</var>
<arg>${new_response}</arg>
<arg>name</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 02:22:00.588" endtime="20220705 02:22:00.588"/>
</return>
<msg timestamp="20220705 02:22:00.589" level="INFO">${NEW_LABEL_NAME} = label3</msg>
<status status="PASS" starttime="20220705 02:22:00.588" endtime="20220705 02:22:00.589"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${NEW_LABEL_COLOR}</arg>
<arg>orange</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220705 02:22:00.589" endtime="20220705 02:22:00.589"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${NEW_LABEL_NAME}</arg>
<arg>label3</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220705 02:22:00.589" endtime="20220705 02:22:00.590"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Label</arg>
<arg>${LABEL_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Label" library="Label">
<arg>${LABEL_ID}</arg>
<doc>Deletes the label with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 02:22:00.592" level="INFO">${url} = labels/62c3a048460b1141fc3e1577</msg>
<status status="PASS" starttime="20220705 02:22:00.591" endtime="20220705 02:22:00.592"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 02:22:00.736" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 02:22:00.592" endtime="20220705 02:22:00.736"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 02:22:00.736" endtime="20220705 02:22:00.736"/>
</return>
<msg timestamp="20220705 02:22:00.737" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 02:22:00.591" endtime="20220705 02:22:00.737"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 02:22:00.737" endtime="20220705 02:22:00.737"/>
</return>
<status status="PASS" starttime="20220705 02:22:00.590" endtime="20220705 02:22:00.737"/>
</kw>
<status status="PASS" starttime="20220705 02:22:00.590" endtime="20220705 02:22:00.737"/>
</kw>
<doc>Verify that a label's name and color can be updated through API</doc>
<tag>api</tag>
<tag>label.update</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220705 02:22:00.368" endtime="20220705 02:22:00.737"/>
</test>
<test id="s1-s1-s4-t3" name="Delete label on board" line="41">
<kw name="Create A Label" library="Label">
<var>${response}</var>
<arg>name</arg>
<arg>label2</arg>
<arg>color</arg>
<arg>yellow</arg>
<doc>Creates a new label in the given board.
required_args: idBoard
optional_args: name, color
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>idBoard</arg>
<arg>${idBoard}</arg>
<arg>@{optional_args}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 02:22:00.739" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 02:22:00.739" endtime="20220705 02:22:00.739"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 02:22:00.739" endtime="20220705 02:22:00.739"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 02:22:00.740" level="INFO">${url} = labels/</msg>
<status status="PASS" starttime="20220705 02:22:00.740" endtime="20220705 02:22:00.740"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 02:22:00.823" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 02:22:00.740" endtime="20220705 02:22:00.823"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 02:22:00.823" endtime="20220705 02:22:00.823"/>
</return>
<msg timestamp="20220705 02:22:00.823" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 02:22:00.738" endtime="20220705 02:22:00.823"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 02:22:00.823" endtime="20220705 02:22:00.823"/>
</return>
<msg timestamp="20220705 02:22:00.823" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 02:22:00.738" endtime="20220705 02:22:00.823"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${LABEL_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 02:22:00.824" endtime="20220705 02:22:00.824"/>
</return>
<msg timestamp="20220705 02:22:00.825" level="INFO">${LABEL_ID} = 62c3a048be1a36551258047e</msg>
<status status="PASS" starttime="20220705 02:22:00.824" endtime="20220705 02:22:00.825"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Label</arg>
<arg>${LABEL_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Label" library="Label">
<arg>${LABEL_ID}</arg>
<doc>Deletes the label with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 02:22:00.827" level="INFO">${url} = labels/62c3a048be1a36551258047e</msg>
<status status="PASS" starttime="20220705 02:22:00.826" endtime="20220705 02:22:00.827"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 02:22:00.945" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 02:22:00.827" endtime="20220705 02:22:00.945"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 02:22:00.946" endtime="20220705 02:22:00.946"/>
</return>
<msg timestamp="20220705 02:22:00.946" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 02:22:00.826" endtime="20220705 02:22:00.946"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 02:22:00.946" endtime="20220705 02:22:00.946"/>
</return>
<status status="PASS" starttime="20220705 02:22:00.825" endtime="20220705 02:22:00.946"/>
</kw>
<status status="PASS" starttime="20220705 02:22:00.825" endtime="20220705 02:22:00.946"/>
</kw>
<kw name="Get A Label" library="Label">
<arg>${LABEL_ID}</arg>
<arg>status_code=404</arg>
<doc>Gets the label with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 02:22:00.948" level="INFO">${url} = labels/62c3a048be1a36551258047e</msg>
<status status="PASS" starttime="20220705 02:22:00.947" endtime="20220705 02:22:00.948"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 02:22:00.986" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220705 02:22:00.948" endtime="20220705 02:22:00.986"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 02:22:00.986" endtime="20220705 02:22:00.986"/>
</return>
<msg timestamp="20220705 02:22:00.986" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220705 02:22:00.947" endtime="20220705 02:22:00.986"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 02:22:00.986" endtime="20220705 02:22:00.986"/>
</return>
<status status="PASS" starttime="20220705 02:22:00.946" endtime="20220705 02:22:00.986"/>
</kw>
<doc>Verify that a label can be deleted through API</doc>
<tag>api</tag>
<tag>label.delete</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220705 02:22:00.737" endtime="20220705 02:22:00.987"/>
</test>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Teardown Board</arg>
<arg>Delete All Sessions</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Teardown Board">
<doc>Delete the board created for this session.</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 02:22:00.990" level="INFO">${url} = boards/62c3a0472a16cc7c947188d3</msg>
<status status="PASS" starttime="20220705 02:22:00.989" endtime="20220705 02:22:00.990"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 02:22:01.271" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 02:22:00.990" endtime="20220705 02:22:01.271"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 02:22:01.271" endtime="20220705 02:22:01.272"/>
</return>
<msg timestamp="20220705 02:22:01.272" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 02:22:00.989" endtime="20220705 02:22:01.272"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 02:22:01.272" endtime="20220705 02:22:01.272"/>
</return>
<status status="PASS" starttime="20220705 02:22:00.988" endtime="20220705 02:22:01.272"/>
</kw>
<status status="PASS" starttime="20220705 02:22:00.988" endtime="20220705 02:22:01.272"/>
</kw>
<status status="PASS" starttime="20220705 02:22:00.987" endtime="20220705 02:22:01.272"/>
</kw>
<kw name="Delete All Sessions" library="request_own_library">
<status status="PASS" starttime="20220705 02:22:01.272" endtime="20220705 02:22:01.273"/>
</kw>
<status status="PASS" starttime="20220705 02:22:00.987" endtime="20220705 02:22:01.274"/>
</kw>
<doc>Example Test with Trello API Cards</doc>
<status status="PASS" starttime="20220705 02:21:59.849" endtime="20220705 02:22:01.274"/>
</suite>
<suite id="s1-s1-s5" name="Trello Api Lists Tests" source="/trello/api/trello_api_lists_tests.robot">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Create Trello Session</arg>
<arg>Setup Board</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Create Trello Session" library="TrelloAPI">
<doc>Creates a Trello Session</doc>
<kw name="Create Session" library="request_own_library">
<arg>${API_BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<status status="PASS" starttime="20220705 02:22:01.284" endtime="20220705 02:22:01.284"/>
</kw>
<status status="PASS" starttime="20220705 02:22:01.283" endtime="20220705 02:22:01.284"/>
</kw>
<kw name="Setup Board">
<doc>Create a board and save it's id for the suite</doc>
<kw name="Create A Board" library="Board">
<var>${BOARD}</var>
<arg>TestBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 02:22:01.285" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 02:22:01.285" endtime="20220705 02:22:01.285"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 02:22:01.285" endtime="20220705 02:22:01.285"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 02:22:01.286" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220705 02:22:01.285" endtime="20220705 02:22:01.286"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 02:22:01.472" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 02:22:01.286" endtime="20220705 02:22:01.472"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 02:22:01.472" endtime="20220705 02:22:01.472"/>
</return>
<msg timestamp="20220705 02:22:01.472" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 02:22:01.284" endtime="20220705 02:22:01.472"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 02:22:01.472" endtime="20220705 02:22:01.472"/>
</return>
<msg timestamp="20220705 02:22:01.472" level="INFO">${BOARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 02:22:01.284" endtime="20220705 02:22:01.472"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Set Suite Variable</arg>
<arg>\${TEST_SUITE_BOARD_ID}</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_BOARD_ID}</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220705 02:22:01.474" level="INFO">${TEST_SUITE_BOARD_ID} = 62c3a049a3ebea55ef6d72c9</msg>
<status status="PASS" starttime="20220705 02:22:01.473" endtime="20220705 02:22:01.474"/>
</kw>
<status status="PASS" starttime="20220705 02:22:01.472" endtime="20220705 02:22:01.474"/>
</kw>
<status status="PASS" starttime="20220705 02:22:01.284" endtime="20220705 02:22:01.474"/>
</kw>
<status status="PASS" starttime="20220705 02:22:01.283" endtime="20220705 02:22:01.474"/>
</kw>
<test id="s1-s1-s5-t1" name="CREATE a list" line="13">
<kw name="Create A List" library="List">
<var>${response}</var>
<arg>NewList</arg>
<doc>Creates a new List
board id
name the list will have
optional_args: idListSource, pos, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>list</arg>
<arg>name</arg>
<arg>${name}</arg>
<arg>idBoard</arg>
<arg>${idBoard}</arg>
<arg>@{optional_args}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 02:22:01.476" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 02:22:01.476" endtime="20220705 02:22:01.476"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 02:22:01.476" endtime="20220705 02:22:01.476"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 02:22:01.477" level="INFO">${url} = lists/</msg>
<status status="PASS" starttime="20220705 02:22:01.476" endtime="20220705 02:22:01.477"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 02:22:01.574" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 02:22:01.477" endtime="20220705 02:22:01.574"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 02:22:01.574" endtime="20220705 02:22:01.574"/>
</return>
<msg timestamp="20220705 02:22:01.575" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 02:22:01.475" endtime="20220705 02:22:01.575"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 02:22:01.575" endtime="20220705 02:22:01.575"/>
</return>
<msg timestamp="20220705 02:22:01.575" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 02:22:01.475" endtime="20220705 02:22:01.575"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>list</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 02:22:01.575" endtime="20220705 02:22:01.577"/>
</kw>
<status status="PASS" starttime="20220705 02:22:01.575" endtime="20220705 02:22:01.577"/>
</kw>
<doc>Verify that a list can be created through API</doc>
<tag>api</tag>
<tag>list.create</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220705 02:22:01.474" endtime="20220705 02:22:01.578"/>
</test>
<test id="s1-s1-s5-t2" name="UPDATE a list" line="19">
<kw name="Create A List" library="List">
<var>${response}</var>
<arg>NewList</arg>
<doc>Creates a new List
board id
name the list will have
optional_args: idListSource, pos, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>list</arg>
<arg>name</arg>
<arg>${name}</arg>
<arg>idBoard</arg>
<arg>${idBoard}</arg>
<arg>@{optional_args}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 02:22:01.579" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 02:22:01.579" endtime="20220705 02:22:01.580"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 02:22:01.580" endtime="20220705 02:22:01.580"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 02:22:01.580" level="INFO">${url} = lists/</msg>
<status status="PASS" starttime="20220705 02:22:01.580" endtime="20220705 02:22:01.581"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 02:22:01.667" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 02:22:01.581" endtime="20220705 02:22:01.667"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 02:22:01.667" endtime="20220705 02:22:01.667"/>
</return>
<msg timestamp="20220705 02:22:01.667" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 02:22:01.579" endtime="20220705 02:22:01.667"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 02:22:01.667" endtime="20220705 02:22:01.667"/>
</return>
<msg timestamp="20220705 02:22:01.667" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 02:22:01.578" endtime="20220705 02:22:01.667"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>list</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 02:22:01.668" endtime="20220705 02:22:01.670"/>
</kw>
<status status="PASS" starttime="20220705 02:22:01.668" endtime="20220705 02:22:01.670"/>
</kw>
<kw name="Update A List" library="List">
<arg>${response.json()}[id]</arg>
<arg>name</arg>
<arg>NewName</arg>
<doc>Updates the board with the given ID
optional_args: name, idListSource, pos, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>list</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 02:22:01.672" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 02:22:01.671" endtime="20220705 02:22:01.672"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 02:22:01.672" endtime="20220705 02:22:01.672"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 02:22:01.672" level="INFO">${url} = lists/62c3a0493d526f32248c23fe</msg>
<status status="PASS" starttime="20220705 02:22:01.672" endtime="20220705 02:22:01.672"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 02:22:01.772" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 02:22:01.672" endtime="20220705 02:22:01.772"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 02:22:01.772" endtime="20220705 02:22:01.772"/>
</return>
<msg timestamp="20220705 02:22:01.772" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 02:22:01.671" endtime="20220705 02:22:01.772"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 02:22:01.772" endtime="20220705 02:22:01.772"/>
</return>
<status status="PASS" starttime="20220705 02:22:01.670" endtime="20220705 02:22:01.773"/>
</kw>
<kw name="Get A List" library="List">
<var>${new_response}</var>
<arg>${response.json()}[id]</arg>
<doc>Gets the List with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>list</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 02:22:01.774" level="INFO">${url} = lists/62c3a0493d526f32248c23fe</msg>
<status status="PASS" starttime="20220705 02:22:01.774" endtime="20220705 02:22:01.774"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 02:22:01.819" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 02:22:01.775" endtime="20220705 02:22:01.819"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 02:22:01.819" endtime="20220705 02:22:01.819"/>
</return>
<msg timestamp="20220705 02:22:01.819" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 02:22:01.774" endtime="20220705 02:22:01.819"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 02:22:01.819" endtime="20220705 02:22:01.819"/>
</return>
<msg timestamp="20220705 02:22:01.819" level="INFO">${new_response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 02:22:01.773" endtime="20220705 02:22:01.819"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${new_response}</arg>
<arg>list</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 02:22:01.820" endtime="20220705 02:22:01.821"/>
</kw>
<status status="PASS" starttime="20220705 02:22:01.819" endtime="20220705 02:22:01.821"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${new_response.json()}[name]</arg>
<arg>NewName</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220705 02:22:01.822" endtime="20220705 02:22:01.822"/>
</kw>
<doc>Verify that a lists name can be updated through API</doc>
<tag>api</tag>
<tag>list.update</tag>
<tag>regression</tag>
<status status="PASS" starttime="20220705 02:22:01.578" endtime="20220705 02:22:01.822"/>
</test>
<test id="s1-s1-s5-t3" name="ARCHIVE A list" line="29">
<kw name="Create A List" library="List">
<var>${response}</var>
<arg>NewList</arg>
<doc>Creates a new List
board id
name the list will have
optional_args: idListSource, pos, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>list</arg>
<arg>name</arg>
<arg>${name}</arg>
<arg>idBoard</arg>
<arg>${idBoard}</arg>
<arg>@{optional_args}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 02:22:01.826" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 02:22:01.826" endtime="20220705 02:22:01.826"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 02:22:01.826" endtime="20220705 02:22:01.826"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 02:22:01.827" level="INFO">${url} = lists/</msg>
<status status="PASS" starttime="20220705 02:22:01.826" endtime="20220705 02:22:01.827"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 02:22:01.921" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 02:22:01.827" endtime="20220705 02:22:01.921"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 02:22:01.921" endtime="20220705 02:22:01.922"/>
</return>
<msg timestamp="20220705 02:22:01.922" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 02:22:01.825" endtime="20220705 02:22:01.922"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 02:22:01.922" endtime="20220705 02:22:01.922"/>
</return>
<msg timestamp="20220705 02:22:01.922" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 02:22:01.823" endtime="20220705 02:22:01.922"/>
</kw>
<kw name="Archive A List" library="List">
<arg>${response.json()}[id]</arg>
<doc>Deletes the list with the given ID</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>archive_list</arg>
<arg>${id}</arg>
<arg>value</arg>
<arg>true</arg>
<arg>status_code=${status_code}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 02:22:01.924" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 02:22:01.924" endtime="20220705 02:22:01.924"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 02:22:01.924" endtime="20220705 02:22:01.924"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 02:22:01.925" level="INFO">${url} = lists/62c3a04916546a8e8363de82/closed</msg>
<status status="PASS" starttime="20220705 02:22:01.925" endtime="20220705 02:22:01.925"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 02:22:02.043" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 02:22:01.925" endtime="20220705 02:22:02.043"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 02:22:02.043" endtime="20220705 02:22:02.043"/>
</return>
<msg timestamp="20220705 02:22:02.043" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 02:22:01.923" endtime="20220705 02:22:02.043"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 02:22:02.043" endtime="20220705 02:22:02.043"/>
</return>
<status status="PASS" starttime="20220705 02:22:01.922" endtime="20220705 02:22:02.044"/>
</kw>
<kw name="Get A List" library="List">
<var>${new_response}</var>
<arg>${response.json()}[id]</arg>
<doc>Gets the List with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>list</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 02:22:02.046" level="INFO">${url} = lists/62c3a04916546a8e8363de82</msg>
<status status="PASS" starttime="20220705 02:22:02.045" endtime="20220705 02:22:02.046"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 02:22:02.090" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 02:22:02.046" endtime="20220705 02:22:02.090"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 02:22:02.090" endtime="20220705 02:22:02.090"/>
</return>
<msg timestamp="20220705 02:22:02.091" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 02:22:02.045" endtime="20220705 02:22:02.091"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 02:22:02.091" endtime="20220705 02:22:02.091"/>
</return>
<msg timestamp="20220705 02:22:02.091" level="INFO">${new_response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 02:22:02.044" endtime="20220705 02:22:02.091"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${new_response.json()}[closed]</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220705 02:22:02.091" endtime="20220705 02:22:02.092"/>
</kw>
<doc>Verify that a list can be archived through API</doc>
<tag>api</tag>
<tag>list.archive</tag>
<tag>regression</tag>
<status status="PASS" starttime="20220705 02:22:01.823" endtime="20220705 02:22:02.092"/>
</test>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Teardown Board</arg>
<arg>Delete All Sessions</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Teardown Board">
<doc>Delete the board created for this suite.</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 02:22:02.095" level="INFO">${url} = boards/62c3a049a3ebea55ef6d72c9</msg>
<status status="PASS" starttime="20220705 02:22:02.095" endtime="20220705 02:22:02.095"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 02:22:02.458" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 02:22:02.095" endtime="20220705 02:22:02.458"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 02:22:02.458" endtime="20220705 02:22:02.458"/>
</return>
<msg timestamp="20220705 02:22:02.458" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 02:22:02.095" endtime="20220705 02:22:02.458"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 02:22:02.458" endtime="20220705 02:22:02.458"/>
</return>
<status status="PASS" starttime="20220705 02:22:02.094" endtime="20220705 02:22:02.458"/>
</kw>
<status status="PASS" starttime="20220705 02:22:02.094" endtime="20220705 02:22:02.458"/>
</kw>
<status status="PASS" starttime="20220705 02:22:02.093" endtime="20220705 02:22:02.458"/>
</kw>
<kw name="Delete All Sessions" library="request_own_library">
<status status="PASS" starttime="20220705 02:22:02.459" endtime="20220705 02:22:02.460"/>
</kw>
<status status="PASS" starttime="20220705 02:22:02.093" endtime="20220705 02:22:02.460"/>
</kw>
<doc>Example Test with Trello API lists</doc>
<status status="PASS" starttime="20220705 02:22:01.275" endtime="20220705 02:22:02.460"/>
</suite>
<status status="PASS" starttime="20220705 02:21:52.579" endtime="20220705 02:22:02.462"/>
</suite>
<status status="PASS" starttime="20220705 02:21:52.562" endtime="20220705 02:22:02.463"/>
</suite>
<statistics>
<total>
<stat pass="18" fail="0" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="18" fail="0" skip="0">api</stat>
<stat pass="1" fail="0" skip="0">board.create</stat>
<stat pass="1" fail="0" skip="0">board.delete</stat>
<stat pass="1" fail="0" skip="0">board.get</stat>
<stat pass="2" fail="0" skip="0">board.update</stat>
<stat pass="1" fail="0" skip="0">card.close</stat>
<stat pass="1" fail="0" skip="0">card.create</stat>
<stat pass="1" fail="0" skip="0">card.delete</stat>
<stat pass="1" fail="0" skip="0">card.update</stat>
<stat pass="1" fail="0" skip="0">checklist.create</stat>
<stat pass="1" fail="0" skip="0">checklist.delete</stat>
<stat pass="1" fail="0" skip="0">checklist.update</stat>
<stat pass="1" fail="0" skip="0">label.create</stat>
<stat pass="1" fail="0" skip="0">label.delete</stat>
<stat pass="1" fail="0" skip="0">label.get</stat>
<stat pass="1" fail="0" skip="0">label.update</stat>
<stat pass="1" fail="0" skip="0">list.archive</stat>
<stat pass="1" fail="0" skip="0">list.create</stat>
<stat pass="1" fail="0" skip="0">list.update</stat>
<stat pass="5" fail="0" skip="0">regression</stat>
<stat pass="13" fail="0" skip="0">smoke</stat>
</tag>
<suite>
<stat pass="18" fail="0" skip="0" id="s1" name="Trello">Trello</stat>
<stat pass="18" fail="0" skip="0" id="s1-s1" name="Api">Trello.Api</stat>
<stat pass="5" fail="0" skip="0" id="s1-s1-s1" name="Trello Api Boards Tests">Trello.Api.Trello Api Boards Tests</stat>
<stat pass="4" fail="0" skip="0" id="s1-s1-s2" name="Trello Api Cards Tests">Trello.Api.Trello Api Cards Tests</stat>
<stat pass="3" fail="0" skip="0" id="s1-s1-s3" name="Trello Api Checklists Tests">Trello.Api.Trello Api Checklists Tests</stat>
<stat pass="3" fail="0" skip="0" id="s1-s1-s4" name="Trello Api Labels Tests">Trello.Api.Trello Api Labels Tests</stat>
<stat pass="3" fail="0" skip="0" id="s1-s1-s5" name="Trello Api Lists Tests">Trello.Api.Trello Api Lists Tests</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
