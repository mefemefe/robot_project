<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 5.0.1 (Python 3.10.5 on linux)" generated="20220705 17:30:03.836" rpa="false" schemaversion="3">
<suite id="s1" name="Trello" source="/trello">
<suite id="s1-s1" name="Api" source="/trello/api">
<suite id="s1-s1-s1" name="Trello Api Boards Tests" source="/trello/api/trello_api_boards_tests.robot">
<kw name="Create Trello Session" library="TrelloAPI" type="SETUP">
<doc>Creates a Trello Session</doc>
<kw name="Create Session" library="request_own_library">
<arg>${API_BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<status status="PASS" starttime="20220705 17:30:03.998" endtime="20220705 17:30:03.998"/>
</kw>
<status status="PASS" starttime="20220705 17:30:03.996" endtime="20220705 17:30:03.999"/>
</kw>
<test id="s1-s1-s1-t1" name="CREATE a board" line="9">
<kw name="Create A Board" library="Board">
<var>${response}</var>
<arg>NewBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 17:30:04.001" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 17:30:04.000" endtime="20220705 17:30:04.001"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 17:30:04.001" endtime="20220705 17:30:04.001"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 17:30:04.002" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220705 17:30:04.001" endtime="20220705 17:30:04.002"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 17:30:04.274" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 17:30:04.002" endtime="20220705 17:30:04.274"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 17:30:04.274" endtime="20220705 17:30:04.274"/>
</return>
<msg timestamp="20220705 17:30:04.275" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 17:30:04.000" endtime="20220705 17:30:04.275"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 17:30:04.275" endtime="20220705 17:30:04.275"/>
</return>
<msg timestamp="20220705 17:30:04.275" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 17:30:04.000" endtime="20220705 17:30:04.275"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>board</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 17:30:04.276" endtime="20220705 17:30:04.281"/>
</kw>
<status status="PASS" starttime="20220705 17:30:04.275" endtime="20220705 17:30:04.281"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${response.json()}[id]</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${response.json()}[id]</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 17:30:04.284" level="INFO">${url} = boards/62c4751cfb596a8d538adb0d</msg>
<status status="PASS" starttime="20220705 17:30:04.283" endtime="20220705 17:30:04.284"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 17:30:04.747" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 17:30:04.284" endtime="20220705 17:30:04.747"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 17:30:04.747" endtime="20220705 17:30:04.748"/>
</return>
<msg timestamp="20220705 17:30:04.748" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 17:30:04.283" endtime="20220705 17:30:04.748"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 17:30:04.748" endtime="20220705 17:30:04.748"/>
</return>
<status status="PASS" starttime="20220705 17:30:04.282" endtime="20220705 17:30:04.748"/>
</kw>
<status status="PASS" starttime="20220705 17:30:04.281" endtime="20220705 17:30:04.748"/>
</kw>
<doc>Verify that a board can be create through API</doc>
<tag>api</tag>
<tag>board.create</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220705 17:30:03.999" endtime="20220705 17:30:04.748"/>
</test>
<test id="s1-s1-s1-t2" name="UPDATE a Board's name" line="16">
<kw name="Create A Board" library="Board">
<var>${response}</var>
<arg>NewBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 17:30:04.752" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 17:30:04.751" endtime="20220705 17:30:04.752"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 17:30:04.752" endtime="20220705 17:30:04.752"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 17:30:04.753" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220705 17:30:04.752" endtime="20220705 17:30:04.753"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 17:30:04.973" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 17:30:04.753" endtime="20220705 17:30:04.973"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 17:30:04.973" endtime="20220705 17:30:04.973"/>
</return>
<msg timestamp="20220705 17:30:04.973" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 17:30:04.750" endtime="20220705 17:30:04.973"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 17:30:04.973" endtime="20220705 17:30:04.973"/>
</return>
<msg timestamp="20220705 17:30:04.973" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 17:30:04.749" endtime="20220705 17:30:04.973"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>board</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 17:30:04.974" endtime="20220705 17:30:04.979"/>
</kw>
<status status="PASS" starttime="20220705 17:30:04.974" endtime="20220705 17:30:04.979"/>
</kw>
<kw name="Update A Board" library="Board">
<arg>${response.json()}[id]</arg>
<arg>name</arg>
<arg>NewName</arg>
<doc>Updates the board with the given ID
optional_args: name, desc, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 17:30:04.981" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 17:30:04.980" endtime="20220705 17:30:04.981"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 17:30:04.981" endtime="20220705 17:30:04.981"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 17:30:04.982" level="INFO">${url} = boards/62c4751c06965a49b9b14883</msg>
<status status="PASS" starttime="20220705 17:30:04.981" endtime="20220705 17:30:04.982"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 17:30:05.146" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 17:30:04.982" endtime="20220705 17:30:05.146"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 17:30:05.146" endtime="20220705 17:30:05.146"/>
</return>
<msg timestamp="20220705 17:30:05.147" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 17:30:04.980" endtime="20220705 17:30:05.147"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 17:30:05.147" endtime="20220705 17:30:05.147"/>
</return>
<status status="PASS" starttime="20220705 17:30:04.979" endtime="20220705 17:30:05.147"/>
</kw>
<kw name="Get A Board" library="Board">
<var>${new_response}</var>
<arg>${response.json()}[id]</arg>
<doc>Gets the Board with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 17:30:05.149" level="INFO">${url} = boards/62c4751c06965a49b9b14883</msg>
<status status="PASS" starttime="20220705 17:30:05.149" endtime="20220705 17:30:05.149"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 17:30:05.251" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 17:30:05.149" endtime="20220705 17:30:05.251"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 17:30:05.251" endtime="20220705 17:30:05.251"/>
</return>
<msg timestamp="20220705 17:30:05.251" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 17:30:05.148" endtime="20220705 17:30:05.251"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 17:30:05.252" endtime="20220705 17:30:05.252"/>
</return>
<msg timestamp="20220705 17:30:05.252" level="INFO">${new_response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 17:30:05.147" endtime="20220705 17:30:05.252"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${new_response}</arg>
<arg>board</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 17:30:05.253" endtime="20220705 17:30:05.258"/>
</kw>
<status status="PASS" starttime="20220705 17:30:05.252" endtime="20220705 17:30:05.258"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${new_response.json()}[name]</arg>
<arg>NewName</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220705 17:30:05.258" endtime="20220705 17:30:05.259"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${response.json()}[id]</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${response.json()}[id]</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 17:30:05.262" level="INFO">${url} = boards/62c4751c06965a49b9b14883</msg>
<status status="PASS" starttime="20220705 17:30:05.261" endtime="20220705 17:30:05.262"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 17:30:05.800" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 17:30:05.262" endtime="20220705 17:30:05.800"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 17:30:05.800" endtime="20220705 17:30:05.800"/>
</return>
<msg timestamp="20220705 17:30:05.800" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 17:30:05.261" endtime="20220705 17:30:05.800"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 17:30:05.800" endtime="20220705 17:30:05.800"/>
</return>
<status status="PASS" starttime="20220705 17:30:05.259" endtime="20220705 17:30:05.801"/>
</kw>
<status status="PASS" starttime="20220705 17:30:05.259" endtime="20220705 17:30:05.801"/>
</kw>
<doc>Verify that a board's name can be updated through API</doc>
<tag>api</tag>
<tag>board.update</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220705 17:30:04.749" endtime="20220705 17:30:05.801"/>
</test>
<test id="s1-s1-s1-t3" name="DELETE A Board" line="27">
<kw name="Create A Board" library="Board">
<var>${response}</var>
<arg>NewBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 17:30:05.803" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 17:30:05.803" endtime="20220705 17:30:05.803"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 17:30:05.803" endtime="20220705 17:30:05.804"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 17:30:05.805" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220705 17:30:05.804" endtime="20220705 17:30:05.805"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 17:30:06.029" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 17:30:05.805" endtime="20220705 17:30:06.029"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 17:30:06.029" endtime="20220705 17:30:06.029"/>
</return>
<msg timestamp="20220705 17:30:06.030" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 17:30:05.802" endtime="20220705 17:30:06.030"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 17:30:06.030" endtime="20220705 17:30:06.030"/>
</return>
<msg timestamp="20220705 17:30:06.030" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 17:30:05.802" endtime="20220705 17:30:06.030"/>
</kw>
<kw name="Delete A Board" library="Board">
<arg>${response.json()}[id]</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 17:30:06.032" level="INFO">${url} = boards/62c4751df47cde0f433490d5</msg>
<status status="PASS" starttime="20220705 17:30:06.032" endtime="20220705 17:30:06.032"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 17:30:06.448" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 17:30:06.032" endtime="20220705 17:30:06.448"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 17:30:06.448" endtime="20220705 17:30:06.448"/>
</return>
<msg timestamp="20220705 17:30:06.449" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 17:30:06.031" endtime="20220705 17:30:06.449"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 17:30:06.449" endtime="20220705 17:30:06.449"/>
</return>
<status status="PASS" starttime="20220705 17:30:06.030" endtime="20220705 17:30:06.449"/>
</kw>
<kw name="Get A Board" library="Board">
<arg>${response.json()}[id]</arg>
<arg>status_code=404</arg>
<doc>Gets the Board with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 17:30:06.451" level="INFO">${url} = boards/62c4751df47cde0f433490d5</msg>
<status status="PASS" starttime="20220705 17:30:06.451" endtime="20220705 17:30:06.451"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 17:30:06.543" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220705 17:30:06.451" endtime="20220705 17:30:06.543"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 17:30:06.543" endtime="20220705 17:30:06.543"/>
</return>
<msg timestamp="20220705 17:30:06.543" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220705 17:30:06.450" endtime="20220705 17:30:06.543"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 17:30:06.543" endtime="20220705 17:30:06.543"/>
</return>
<status status="PASS" starttime="20220705 17:30:06.449" endtime="20220705 17:30:06.544"/>
</kw>
<doc>Verify that a board can be deleted through API</doc>
<tag>api</tag>
<tag>board.delete</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220705 17:30:05.801" endtime="20220705 17:30:06.544"/>
</test>
<test id="s1-s1-s1-t4" name="GET Information of A Board" line="34">
<kw name="Create A Board" library="Board">
<var>${response}</var>
<arg>BoardTest</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 17:30:06.546" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 17:30:06.546" endtime="20220705 17:30:06.546"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 17:30:06.546" endtime="20220705 17:30:06.547"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 17:30:06.547" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220705 17:30:06.547" endtime="20220705 17:30:06.547"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 17:30:06.768" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 17:30:06.548" endtime="20220705 17:30:06.768"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 17:30:06.768" endtime="20220705 17:30:06.768"/>
</return>
<msg timestamp="20220705 17:30:06.768" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 17:30:06.545" endtime="20220705 17:30:06.768"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 17:30:06.768" endtime="20220705 17:30:06.768"/>
</return>
<msg timestamp="20220705 17:30:06.769" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 17:30:06.545" endtime="20220705 17:30:06.769"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>board</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 17:30:06.770" endtime="20220705 17:30:06.775"/>
</kw>
<status status="PASS" starttime="20220705 17:30:06.769" endtime="20220705 17:30:06.775"/>
</kw>
<kw name="Get A Board" library="Board">
<var>${response2}</var>
<arg>${response.json()}[id]</arg>
<doc>Gets the Board with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 17:30:06.777" level="INFO">${url} = boards/62c4751e30c0d049cd354b41</msg>
<status status="PASS" starttime="20220705 17:30:06.776" endtime="20220705 17:30:06.777"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 17:30:06.887" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 17:30:06.777" endtime="20220705 17:30:06.887"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 17:30:06.887" endtime="20220705 17:30:06.887"/>
</return>
<msg timestamp="20220705 17:30:06.887" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 17:30:06.776" endtime="20220705 17:30:06.887"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 17:30:06.887" endtime="20220705 17:30:06.888"/>
</return>
<msg timestamp="20220705 17:30:06.888" level="INFO">${response2} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 17:30:06.775" endtime="20220705 17:30:06.888"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response2}</arg>
<arg>board</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 17:30:06.888" endtime="20220705 17:30:06.893"/>
</kw>
<status status="PASS" starttime="20220705 17:30:06.888" endtime="20220705 17:30:06.893"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${response2.json()}[name]</arg>
<arg>BoardTest</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220705 17:30:06.893" endtime="20220705 17:30:06.894"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${response.json()}[id]</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${response.json()}[id]</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 17:30:06.897" level="INFO">${url} = boards/62c4751e30c0d049cd354b41</msg>
<status status="PASS" starttime="20220705 17:30:06.896" endtime="20220705 17:30:06.897"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 17:30:07.307" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 17:30:06.897" endtime="20220705 17:30:07.307"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 17:30:07.307" endtime="20220705 17:30:07.307"/>
</return>
<msg timestamp="20220705 17:30:07.308" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 17:30:06.895" endtime="20220705 17:30:07.308"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 17:30:07.308" endtime="20220705 17:30:07.308"/>
</return>
<status status="PASS" starttime="20220705 17:30:06.894" endtime="20220705 17:30:07.308"/>
</kw>
<status status="PASS" starttime="20220705 17:30:06.894" endtime="20220705 17:30:07.308"/>
</kw>
<doc>Verify that a board's information can be accesed through API</doc>
<tag>api</tag>
<tag>board.get</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220705 17:30:06.544" endtime="20220705 17:30:07.308"/>
</test>
<test id="s1-s1-s1-t5" name="UPDATE a Board's description" line="45">
<kw name="Create A Board" library="Board">
<var>${response}</var>
<arg>NewBoardForTest</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 17:30:07.311" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 17:30:07.311" endtime="20220705 17:30:07.311"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 17:30:07.311" endtime="20220705 17:30:07.312"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 17:30:07.313" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220705 17:30:07.312" endtime="20220705 17:30:07.313"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 17:30:07.545" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 17:30:07.313" endtime="20220705 17:30:07.545"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 17:30:07.546" endtime="20220705 17:30:07.546"/>
</return>
<msg timestamp="20220705 17:30:07.546" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 17:30:07.310" endtime="20220705 17:30:07.546"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 17:30:07.546" endtime="20220705 17:30:07.546"/>
</return>
<msg timestamp="20220705 17:30:07.547" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 17:30:07.310" endtime="20220705 17:30:07.547"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>board</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 17:30:07.547" endtime="20220705 17:30:07.553"/>
</kw>
<status status="PASS" starttime="20220705 17:30:07.547" endtime="20220705 17:30:07.553"/>
</kw>
<kw name="Update A Board" library="Board">
<arg>${response.json()}[id]</arg>
<arg>desc</arg>
<arg>sampleDescription</arg>
<doc>Updates the board with the given ID
optional_args: name, desc, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 17:30:07.555" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 17:30:07.554" endtime="20220705 17:30:07.555"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 17:30:07.555" endtime="20220705 17:30:07.555"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 17:30:07.556" level="INFO">${url} = boards/62c4751fb6704525a34b25a2</msg>
<status status="PASS" starttime="20220705 17:30:07.555" endtime="20220705 17:30:07.556"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 17:30:07.706" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 17:30:07.556" endtime="20220705 17:30:07.706"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 17:30:07.706" endtime="20220705 17:30:07.706"/>
</return>
<msg timestamp="20220705 17:30:07.707" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 17:30:07.554" endtime="20220705 17:30:07.707"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 17:30:07.707" endtime="20220705 17:30:07.707"/>
</return>
<status status="PASS" starttime="20220705 17:30:07.553" endtime="20220705 17:30:07.707"/>
</kw>
<kw name="Get A Board" library="Board">
<var>${new_response}</var>
<arg>${response.json()}[id]</arg>
<doc>Gets the Board with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 17:30:07.709" level="INFO">${url} = boards/62c4751fb6704525a34b25a2</msg>
<status status="PASS" starttime="20220705 17:30:07.709" endtime="20220705 17:30:07.709"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 17:30:07.824" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 17:30:07.709" endtime="20220705 17:30:07.824"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 17:30:07.824" endtime="20220705 17:30:07.825"/>
</return>
<msg timestamp="20220705 17:30:07.825" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 17:30:07.708" endtime="20220705 17:30:07.825"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 17:30:07.825" endtime="20220705 17:30:07.825"/>
</return>
<msg timestamp="20220705 17:30:07.825" level="INFO">${new_response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 17:30:07.707" endtime="20220705 17:30:07.825"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${new_response.json()}[desc]</arg>
<arg>sampleDescription</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220705 17:30:07.826" endtime="20220705 17:30:07.827"/>
</kw>
<kw name="Update A Board" library="Board">
<arg>${response.json()}[id]</arg>
<arg>desc</arg>
<arg>updatedDescription</arg>
<doc>Updates the board with the given ID
optional_args: name, desc, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 17:30:07.829" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 17:30:07.829" endtime="20220705 17:30:07.829"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 17:30:07.829" endtime="20220705 17:30:07.829"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 17:30:07.830" level="INFO">${url} = boards/62c4751fb6704525a34b25a2</msg>
<status status="PASS" starttime="20220705 17:30:07.830" endtime="20220705 17:30:07.830"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 17:30:07.981" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 17:30:07.830" endtime="20220705 17:30:07.981"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 17:30:07.982" endtime="20220705 17:30:07.982"/>
</return>
<msg timestamp="20220705 17:30:07.982" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 17:30:07.828" endtime="20220705 17:30:07.982"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 17:30:07.982" endtime="20220705 17:30:07.982"/>
</return>
<status status="PASS" starttime="20220705 17:30:07.827" endtime="20220705 17:30:07.982"/>
</kw>
<kw name="Get A Board" library="Board">
<var>${new_response2}</var>
<arg>${response.json()}[id]</arg>
<doc>Gets the Board with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 17:30:07.984" level="INFO">${url} = boards/62c4751fb6704525a34b25a2</msg>
<status status="PASS" starttime="20220705 17:30:07.984" endtime="20220705 17:30:07.985"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 17:30:08.088" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 17:30:07.985" endtime="20220705 17:30:08.088"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 17:30:08.088" endtime="20220705 17:30:08.089"/>
</return>
<msg timestamp="20220705 17:30:08.089" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 17:30:07.984" endtime="20220705 17:30:08.089"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 17:30:08.089" endtime="20220705 17:30:08.089"/>
</return>
<msg timestamp="20220705 17:30:08.089" level="INFO">${new_response2} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 17:30:07.983" endtime="20220705 17:30:08.089"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${new_response2.json()}[desc]</arg>
<arg>updatedDescription</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220705 17:30:08.090" endtime="20220705 17:30:08.091"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${response.json()}[id]</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${response.json()}[id]</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 17:30:08.093" level="INFO">${url} = boards/62c4751fb6704525a34b25a2</msg>
<status status="PASS" starttime="20220705 17:30:08.093" endtime="20220705 17:30:08.093"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 17:30:08.495" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 17:30:08.094" endtime="20220705 17:30:08.495"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 17:30:08.496" endtime="20220705 17:30:08.496"/>
</return>
<msg timestamp="20220705 17:30:08.496" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 17:30:08.092" endtime="20220705 17:30:08.496"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 17:30:08.496" endtime="20220705 17:30:08.496"/>
</return>
<status status="PASS" starttime="20220705 17:30:08.091" endtime="20220705 17:30:08.496"/>
</kw>
<status status="PASS" starttime="20220705 17:30:08.091" endtime="20220705 17:30:08.497"/>
</kw>
<doc>Verify that a board's description can be updated through API</doc>
<tag>api</tag>
<tag>board.update</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220705 17:30:07.309" endtime="20220705 17:30:08.497"/>
</test>
<kw name="Delete All Sessions" library="request_own_library" type="TEARDOWN">
<status status="PASS" starttime="20220705 17:30:08.498" endtime="20220705 17:30:08.499"/>
</kw>
<doc>Example Test with Trello API Boards</doc>
<status status="PASS" starttime="20220705 17:30:03.863" endtime="20220705 17:30:08.500"/>
</suite>
<suite id="s1-s1-s2" name="Trello Api Cards Tests" source="/trello/api/trello_api_cards_tests.robot">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Create Trello Session</arg>
<arg>Setup Board And List</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Create Trello Session" library="TrelloAPI">
<doc>Creates a Trello Session</doc>
<kw name="Create Session" library="request_own_library">
<arg>${API_BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<status status="PASS" starttime="20220705 17:30:08.513" endtime="20220705 17:30:08.514"/>
</kw>
<status status="PASS" starttime="20220705 17:30:08.513" endtime="20220705 17:30:08.514"/>
</kw>
<kw name="Setup Board And List">
<doc>Create a board and save its ID and its first list's ID</doc>
<kw name="Create A Board" library="Board">
<var>${BOARD}</var>
<arg>TestBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 17:30:08.515" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 17:30:08.515" endtime="20220705 17:30:08.515"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 17:30:08.516" endtime="20220705 17:30:08.516"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 17:30:08.517" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220705 17:30:08.516" endtime="20220705 17:30:08.517"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 17:30:08.747" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 17:30:08.517" endtime="20220705 17:30:08.747"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 17:30:08.747" endtime="20220705 17:30:08.747"/>
</return>
<msg timestamp="20220705 17:30:08.747" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 17:30:08.515" endtime="20220705 17:30:08.747"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 17:30:08.747" endtime="20220705 17:30:08.747"/>
</return>
<msg timestamp="20220705 17:30:08.748" level="INFO">${BOARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 17:30:08.514" endtime="20220705 17:30:08.748"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_BOARD_ID}</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220705 17:30:08.749" level="INFO">${TEST_SUITE_BOARD_ID} = 62c4752070a8ff4498e50dbd</msg>
<status status="PASS" starttime="20220705 17:30:08.748" endtime="20220705 17:30:08.749"/>
</kw>
<kw name="Get Lists On A Board" library="Board">
<var>${LISTS}</var>
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Get all the lists in a board</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>lists_on_board</arg>
<arg>${id}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 17:30:08.750" level="INFO">${url} = boards/62c4752070a8ff4498e50dbd/lists/</msg>
<status status="PASS" starttime="20220705 17:30:08.750" endtime="20220705 17:30:08.750"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 17:30:08.851" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 17:30:08.750" endtime="20220705 17:30:08.851"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 17:30:08.851" endtime="20220705 17:30:08.851"/>
</return>
<msg timestamp="20220705 17:30:08.851" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 17:30:08.749" endtime="20220705 17:30:08.851"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 17:30:08.852" endtime="20220705 17:30:08.852"/>
</return>
<msg timestamp="20220705 17:30:08.852" level="INFO">${LISTS} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 17:30:08.749" endtime="20220705 17:30:08.852"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_LIST_ID}</arg>
<arg>${LISTS.json()}[0][id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220705 17:30:08.853" level="INFO">${TEST_SUITE_LIST_ID} = 62c4752070a8ff4498e50dc4</msg>
<status status="PASS" starttime="20220705 17:30:08.852" endtime="20220705 17:30:08.853"/>
</kw>
<status status="PASS" starttime="20220705 17:30:08.514" endtime="20220705 17:30:08.853"/>
</kw>
<status status="PASS" starttime="20220705 17:30:08.513" endtime="20220705 17:30:08.853"/>
</kw>
<test id="s1-s1-s2-t1" name="Verify A Card Can Be Created" line="13">
<kw name="Create A Card" library="Card">
<var>${response}</var>
<arg>name</arg>
<arg>RFCard2</arg>
<doc>Creates a new card in the given list.
required_args: listId
optional_args: name, desc, pos, idCardSource, idLabels, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>@{optional_args}</arg>
<arg>idList</arg>
<arg>${idList}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 17:30:08.856" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 17:30:08.855" endtime="20220705 17:30:08.856"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 17:30:08.856" endtime="20220705 17:30:08.856"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 17:30:08.857" level="INFO">${url} = cards/</msg>
<status status="PASS" starttime="20220705 17:30:08.856" endtime="20220705 17:30:08.857"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 17:30:09.161" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 17:30:08.857" endtime="20220705 17:30:09.161"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 17:30:09.161" endtime="20220705 17:30:09.161"/>
</return>
<msg timestamp="20220705 17:30:09.161" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 17:30:08.855" endtime="20220705 17:30:09.161"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 17:30:09.162" endtime="20220705 17:30:09.162"/>
</return>
<msg timestamp="20220705 17:30:09.162" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 17:30:08.854" endtime="20220705 17:30:09.162"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>card</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 17:30:09.163" endtime="20220705 17:30:09.169"/>
</kw>
<status status="PASS" starttime="20220705 17:30:09.162" endtime="20220705 17:30:09.169"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 17:30:09.169" endtime="20220705 17:30:09.169"/>
</return>
<msg timestamp="20220705 17:30:09.170" level="INFO">${CARD_ID} = 62c47520e142eb34f07ff1b2</msg>
<status status="PASS" starttime="20220705 17:30:09.169" endtime="20220705 17:30:09.170"/>
</kw>
<kw name="Get A Card" library="Card">
<var>${response}</var>
<arg>${CARD_ID}</arg>
<doc>Gets the card with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 17:30:09.172" level="INFO">${url} = cards/62c47520e142eb34f07ff1b2</msg>
<status status="PASS" starttime="20220705 17:30:09.171" endtime="20220705 17:30:09.172"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 17:30:09.280" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 17:30:09.172" endtime="20220705 17:30:09.280"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 17:30:09.280" endtime="20220705 17:30:09.280"/>
</return>
<msg timestamp="20220705 17:30:09.280" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 17:30:09.171" endtime="20220705 17:30:09.280"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 17:30:09.280" endtime="20220705 17:30:09.280"/>
</return>
<msg timestamp="20220705 17:30:09.280" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 17:30:09.170" endtime="20220705 17:30:09.281"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_NAME}</var>
<arg>${response}</arg>
<arg>name</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 17:30:09.281" endtime="20220705 17:30:09.281"/>
</return>
<msg timestamp="20220705 17:30:09.282" level="INFO">${CARD_NAME} = RFCard2</msg>
<status status="PASS" starttime="20220705 17:30:09.281" endtime="20220705 17:30:09.282"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${CARD_NAME}</arg>
<arg>RFCard2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220705 17:30:09.282" endtime="20220705 17:30:09.282"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Card</arg>
<arg>${CARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Card" library="Card">
<arg>${CARD_ID}</arg>
<doc>Deletes the card with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 17:30:09.285" level="INFO">${url} = cards/62c47520e142eb34f07ff1b2</msg>
<status status="PASS" starttime="20220705 17:30:09.284" endtime="20220705 17:30:09.285"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 17:30:09.507" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 17:30:09.285" endtime="20220705 17:30:09.507"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 17:30:09.507" endtime="20220705 17:30:09.507"/>
</return>
<msg timestamp="20220705 17:30:09.508" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 17:30:09.284" endtime="20220705 17:30:09.508"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 17:30:09.508" endtime="20220705 17:30:09.508"/>
</return>
<status status="PASS" starttime="20220705 17:30:09.283" endtime="20220705 17:30:09.508"/>
</kw>
<status status="PASS" starttime="20220705 17:30:09.283" endtime="20220705 17:30:09.508"/>
</kw>
<doc>Verify that a card can be created through API</doc>
<tag>api</tag>
<tag>card.create</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220705 17:30:08.853" endtime="20220705 17:30:09.508"/>
</test>
<test id="s1-s1-s2-t2" name="Verify A Card Can Be Closed" line="24">
<kw name="Create A Card" library="Card">
<var>${response}</var>
<doc>Creates a new card in the given list.
required_args: listId
optional_args: name, desc, pos, idCardSource, idLabels, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>@{optional_args}</arg>
<arg>idList</arg>
<arg>${idList}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 17:30:09.511" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 17:30:09.511" endtime="20220705 17:30:09.511"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 17:30:09.511" endtime="20220705 17:30:09.512"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 17:30:09.512" level="INFO">${url} = cards/</msg>
<status status="PASS" starttime="20220705 17:30:09.512" endtime="20220705 17:30:09.512"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 17:30:09.717" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 17:30:09.513" endtime="20220705 17:30:09.717"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 17:30:09.717" endtime="20220705 17:30:09.717"/>
</return>
<msg timestamp="20220705 17:30:09.717" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 17:30:09.510" endtime="20220705 17:30:09.717"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 17:30:09.718" endtime="20220705 17:30:09.718"/>
</return>
<msg timestamp="20220705 17:30:09.718" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 17:30:09.509" endtime="20220705 17:30:09.718"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 17:30:09.718" endtime="20220705 17:30:09.718"/>
</return>
<msg timestamp="20220705 17:30:09.719" level="INFO">${CARD_ID} = 62c47521254c2a8574d9f244</msg>
<status status="PASS" starttime="20220705 17:30:09.718" endtime="20220705 17:30:09.719"/>
</kw>
<kw name="Archive A Card" library="Card">
<arg>${CARD_ID}</arg>
<doc>Modifies the card status to closed.</doc>
<kw name="Update A Card" library="Card">
<var>${response}</var>
<arg>${id}</arg>
<arg>closed</arg>
<arg>true</arg>
<arg>status_code=${status_code}</arg>
<doc>Updates the card with the given ID
optional_args: name, desc, closed, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<arg>status_code=${status_code}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 17:30:09.721" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 17:30:09.721" endtime="20220705 17:30:09.721"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 17:30:09.721" endtime="20220705 17:30:09.722"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 17:30:09.722" level="INFO">${url} = cards/62c47521254c2a8574d9f244</msg>
<status status="PASS" starttime="20220705 17:30:09.722" endtime="20220705 17:30:09.722"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 17:30:09.912" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 17:30:09.722" endtime="20220705 17:30:09.912"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 17:30:09.912" endtime="20220705 17:30:09.912"/>
</return>
<msg timestamp="20220705 17:30:09.912" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 17:30:09.721" endtime="20220705 17:30:09.912"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 17:30:09.912" endtime="20220705 17:30:09.913"/>
</return>
<msg timestamp="20220705 17:30:09.913" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 17:30:09.720" endtime="20220705 17:30:09.913"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 17:30:09.913" endtime="20220705 17:30:09.913"/>
</return>
<status status="PASS" starttime="20220705 17:30:09.719" endtime="20220705 17:30:09.913"/>
</kw>
<kw name="Get A Card" library="Card">
<var>${response}</var>
<arg>${CARD_ID}</arg>
<doc>Gets the card with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 17:30:09.915" level="INFO">${url} = cards/62c47521254c2a8574d9f244</msg>
<status status="PASS" starttime="20220705 17:30:09.914" endtime="20220705 17:30:09.915"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 17:30:10.025" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 17:30:09.915" endtime="20220705 17:30:10.025"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 17:30:10.026" endtime="20220705 17:30:10.026"/>
</return>
<msg timestamp="20220705 17:30:10.026" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 17:30:09.914" endtime="20220705 17:30:10.026"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 17:30:10.026" endtime="20220705 17:30:10.026"/>
</return>
<msg timestamp="20220705 17:30:10.026" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 17:30:09.913" endtime="20220705 17:30:10.026"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_CLOSED}</var>
<arg>${response}</arg>
<arg>closed</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 17:30:10.027" endtime="20220705 17:30:10.027"/>
</return>
<msg timestamp="20220705 17:30:10.028" level="INFO">${CARD_CLOSED} = True</msg>
<status status="PASS" starttime="20220705 17:30:10.027" endtime="20220705 17:30:10.028"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${CARD_CLOSED}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220705 17:30:10.028" endtime="20220705 17:30:10.028"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Card</arg>
<arg>${CARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Card" library="Card">
<arg>${CARD_ID}</arg>
<doc>Deletes the card with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 17:30:10.031" level="INFO">${url} = cards/62c47521254c2a8574d9f244</msg>
<status status="PASS" starttime="20220705 17:30:10.031" endtime="20220705 17:30:10.031"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 17:30:10.230" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 17:30:10.031" endtime="20220705 17:30:10.230"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 17:30:10.230" endtime="20220705 17:30:10.230"/>
</return>
<msg timestamp="20220705 17:30:10.230" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 17:30:10.030" endtime="20220705 17:30:10.230"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 17:30:10.230" endtime="20220705 17:30:10.230"/>
</return>
<status status="PASS" starttime="20220705 17:30:10.029" endtime="20220705 17:30:10.230"/>
</kw>
<status status="PASS" starttime="20220705 17:30:10.029" endtime="20220705 17:30:10.230"/>
</kw>
<doc>Verify that a card can be closed through API</doc>
<tag>api</tag>
<tag>card.close</tag>
<tag>regression</tag>
<status status="PASS" starttime="20220705 17:30:09.508" endtime="20220705 17:30:10.231"/>
</test>
<test id="s1-s1-s2-t3" name="Verify A Card Can Be Deleted" line="35">
<kw name="Create A Card" library="Card">
<var>${response}</var>
<doc>Creates a new card in the given list.
required_args: listId
optional_args: name, desc, pos, idCardSource, idLabels, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>@{optional_args}</arg>
<arg>idList</arg>
<arg>${idList}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 17:30:10.234" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 17:30:10.234" endtime="20220705 17:30:10.234"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 17:30:10.234" endtime="20220705 17:30:10.234"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 17:30:10.235" level="INFO">${url} = cards/</msg>
<status status="PASS" starttime="20220705 17:30:10.235" endtime="20220705 17:30:10.235"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 17:30:10.462" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 17:30:10.235" endtime="20220705 17:30:10.462"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 17:30:10.462" endtime="20220705 17:30:10.462"/>
</return>
<msg timestamp="20220705 17:30:10.463" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 17:30:10.233" endtime="20220705 17:30:10.463"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 17:30:10.463" endtime="20220705 17:30:10.463"/>
</return>
<msg timestamp="20220705 17:30:10.463" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 17:30:10.232" endtime="20220705 17:30:10.463"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 17:30:10.464" endtime="20220705 17:30:10.464"/>
</return>
<msg timestamp="20220705 17:30:10.465" level="INFO">${CARD_ID} = 62c4752299e1c23241d2b1a8</msg>
<status status="PASS" starttime="20220705 17:30:10.463" endtime="20220705 17:30:10.465"/>
</kw>
<kw name="Delete A Card" library="Card">
<var>${response}</var>
<arg>${CARD_ID}</arg>
<doc>Deletes the card with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 17:30:10.466" level="INFO">${url} = cards/62c4752299e1c23241d2b1a8</msg>
<status status="PASS" starttime="20220705 17:30:10.466" endtime="20220705 17:30:10.466"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 17:30:10.892" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 17:30:10.466" endtime="20220705 17:30:10.892"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 17:30:10.892" endtime="20220705 17:30:10.892"/>
</return>
<msg timestamp="20220705 17:30:10.893" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 17:30:10.465" endtime="20220705 17:30:10.893"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 17:30:10.893" endtime="20220705 17:30:10.893"/>
</return>
<msg timestamp="20220705 17:30:10.893" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 17:30:10.465" endtime="20220705 17:30:10.893"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>delete</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 17:30:10.894" endtime="20220705 17:30:10.896"/>
</kw>
<status status="PASS" starttime="20220705 17:30:10.893" endtime="20220705 17:30:10.896"/>
</kw>
<kw name="Get A Card" library="Card">
<arg>${CARD_ID}</arg>
<arg>status_code=404</arg>
<doc>Gets the card with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 17:30:10.897" level="INFO">${url} = cards/62c4752299e1c23241d2b1a8</msg>
<status status="PASS" starttime="20220705 17:30:10.897" endtime="20220705 17:30:10.897"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 17:30:10.993" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220705 17:30:10.897" endtime="20220705 17:30:10.993"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 17:30:10.993" endtime="20220705 17:30:10.993"/>
</return>
<msg timestamp="20220705 17:30:10.994" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220705 17:30:10.896" endtime="20220705 17:30:10.994"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 17:30:10.994" endtime="20220705 17:30:10.994"/>
</return>
<status status="PASS" starttime="20220705 17:30:10.896" endtime="20220705 17:30:10.994"/>
</kw>
<doc>Verify that a card can be deleted through API</doc>
<tag>api</tag>
<tag>card.delete</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220705 17:30:10.231" endtime="20220705 17:30:10.994"/>
</test>
<test id="s1-s1-s2-t4" name="Verify A Card Can Be Updated" line="44">
<kw name="Create A Card" library="Card">
<var>${response}</var>
<arg>name</arg>
<arg>RFCard4</arg>
<doc>Creates a new card in the given list.
required_args: listId
optional_args: name, desc, pos, idCardSource, idLabels, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>@{optional_args}</arg>
<arg>idList</arg>
<arg>${idList}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 17:30:10.996" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 17:30:10.996" endtime="20220705 17:30:10.997"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 17:30:10.997" endtime="20220705 17:30:10.997"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 17:30:10.998" level="INFO">${url} = cards/</msg>
<status status="PASS" starttime="20220705 17:30:10.997" endtime="20220705 17:30:10.998"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 17:30:11.216" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 17:30:10.998" endtime="20220705 17:30:11.216"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 17:30:11.217" endtime="20220705 17:30:11.217"/>
</return>
<msg timestamp="20220705 17:30:11.217" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 17:30:10.996" endtime="20220705 17:30:11.217"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 17:30:11.217" endtime="20220705 17:30:11.217"/>
</return>
<msg timestamp="20220705 17:30:11.217" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 17:30:10.995" endtime="20220705 17:30:11.217"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 17:30:11.218" endtime="20220705 17:30:11.218"/>
</return>
<msg timestamp="20220705 17:30:11.219" level="INFO">${CARD_ID} = 62c47523f622b67ba8f55927</msg>
<status status="PASS" starttime="20220705 17:30:11.218" endtime="20220705 17:30:11.219"/>
</kw>
<kw name="Update A Card" library="Card">
<var>${response}</var>
<arg>${CARD_ID}</arg>
<arg>name</arg>
<arg>RFCard5</arg>
<arg>desc</arg>
<arg>Description</arg>
<doc>Updates the card with the given ID
optional_args: name, desc, closed, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<arg>status_code=${status_code}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 17:30:11.220" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 17:30:11.220" endtime="20220705 17:30:11.220"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 17:30:11.221" endtime="20220705 17:30:11.221"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 17:30:11.221" level="INFO">${url} = cards/62c47523f622b67ba8f55927</msg>
<status status="PASS" starttime="20220705 17:30:11.221" endtime="20220705 17:30:11.221"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 17:30:11.434" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 17:30:11.221" endtime="20220705 17:30:11.434"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 17:30:11.434" endtime="20220705 17:30:11.434"/>
</return>
<msg timestamp="20220705 17:30:11.434" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 17:30:11.220" endtime="20220705 17:30:11.434"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 17:30:11.435" endtime="20220705 17:30:11.435"/>
</return>
<msg timestamp="20220705 17:30:11.435" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 17:30:11.219" endtime="20220705 17:30:11.435"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>card</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 17:30:11.436" endtime="20220705 17:30:11.442"/>
</kw>
<status status="PASS" starttime="20220705 17:30:11.435" endtime="20220705 17:30:11.442"/>
</kw>
<kw name="Get A Card" library="Card">
<var>${response}</var>
<arg>${CARD_ID}</arg>
<doc>Gets the card with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 17:30:11.443" level="INFO">${url} = cards/62c47523f622b67ba8f55927</msg>
<status status="PASS" starttime="20220705 17:30:11.443" endtime="20220705 17:30:11.443"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 17:30:11.551" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 17:30:11.443" endtime="20220705 17:30:11.551"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 17:30:11.551" endtime="20220705 17:30:11.551"/>
</return>
<msg timestamp="20220705 17:30:11.551" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 17:30:11.442" endtime="20220705 17:30:11.551"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 17:30:11.552" endtime="20220705 17:30:11.552"/>
</return>
<msg timestamp="20220705 17:30:11.552" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 17:30:11.442" endtime="20220705 17:30:11.552"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_NAME}</var>
<arg>${response}</arg>
<arg>name</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 17:30:11.552" endtime="20220705 17:30:11.552"/>
</return>
<msg timestamp="20220705 17:30:11.553" level="INFO">${CARD_NAME} = RFCard5</msg>
<status status="PASS" starttime="20220705 17:30:11.552" endtime="20220705 17:30:11.553"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_DESC}</var>
<arg>${response}</arg>
<arg>desc</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 17:30:11.554" endtime="20220705 17:30:11.554"/>
</return>
<msg timestamp="20220705 17:30:11.554" level="INFO">${CARD_DESC} = Description</msg>
<status status="PASS" starttime="20220705 17:30:11.553" endtime="20220705 17:30:11.554"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${CARD_NAME}</arg>
<arg>RFCard5</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220705 17:30:11.555" endtime="20220705 17:30:11.555"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${CARD_DESC}</arg>
<arg>Description</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220705 17:30:11.555" endtime="20220705 17:30:11.555"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Card</arg>
<arg>${CARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Card" library="Card">
<arg>${CARD_ID}</arg>
<doc>Deletes the card with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 17:30:11.557" level="INFO">${url} = cards/62c47523f622b67ba8f55927</msg>
<status status="PASS" starttime="20220705 17:30:11.557" endtime="20220705 17:30:11.557"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 17:30:11.776" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 17:30:11.557" endtime="20220705 17:30:11.776"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 17:30:11.776" endtime="20220705 17:30:11.776"/>
</return>
<msg timestamp="20220705 17:30:11.776" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 17:30:11.556" endtime="20220705 17:30:11.776"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 17:30:11.776" endtime="20220705 17:30:11.776"/>
</return>
<status status="PASS" starttime="20220705 17:30:11.556" endtime="20220705 17:30:11.777"/>
</kw>
<status status="PASS" starttime="20220705 17:30:11.556" endtime="20220705 17:30:11.777"/>
</kw>
<doc>Verify that a card's name and Description can be updated through API</doc>
<tag>api</tag>
<tag>card.update</tag>
<tag>regression</tag>
<status status="PASS" starttime="20220705 17:30:10.995" endtime="20220705 17:30:11.777"/>
</test>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Teardown Board</arg>
<arg>Delete All Sessions</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Teardown Board">
<doc>Delete the board created for this suite</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 17:30:11.780" level="INFO">${url} = boards/62c4752070a8ff4498e50dbd</msg>
<status status="PASS" starttime="20220705 17:30:11.780" endtime="20220705 17:30:11.780"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 17:30:12.211" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 17:30:11.781" endtime="20220705 17:30:12.211"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 17:30:12.211" endtime="20220705 17:30:12.211"/>
</return>
<msg timestamp="20220705 17:30:12.211" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 17:30:11.779" endtime="20220705 17:30:12.212"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 17:30:12.212" endtime="20220705 17:30:12.212"/>
</return>
<status status="PASS" starttime="20220705 17:30:11.779" endtime="20220705 17:30:12.212"/>
</kw>
<status status="PASS" starttime="20220705 17:30:11.778" endtime="20220705 17:30:12.212"/>
</kw>
<status status="PASS" starttime="20220705 17:30:11.778" endtime="20220705 17:30:12.212"/>
</kw>
<kw name="Delete All Sessions" library="request_own_library">
<status status="PASS" starttime="20220705 17:30:12.212" endtime="20220705 17:30:12.214"/>
</kw>
<status status="PASS" starttime="20220705 17:30:11.778" endtime="20220705 17:30:12.214"/>
</kw>
<doc>Example Test with Trello API Cards</doc>
<status status="PASS" starttime="20220705 17:30:08.501" endtime="20220705 17:30:12.214"/>
</suite>
<suite id="s1-s1-s3" name="Trello Api Checklists Tests" source="/trello/api/trello_api_checklists_tests.robot">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Create Trello Session</arg>
<arg>Setup Board, List And Card</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Create Trello Session" library="TrelloAPI">
<doc>Creates a Trello Session</doc>
<kw name="Create Session" library="request_own_library">
<arg>${API_BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<status status="PASS" starttime="20220705 17:30:12.227" endtime="20220705 17:30:12.227"/>
</kw>
<status status="PASS" starttime="20220705 17:30:12.226" endtime="20220705 17:30:12.227"/>
</kw>
<kw name="Setup Board, List And Card">
<doc>Create a board and save its ID and its first list's ID</doc>
<kw name="Create A Board" library="Board">
<var>${BOARD}</var>
<arg>TestBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 17:30:12.229" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 17:30:12.228" endtime="20220705 17:30:12.229"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 17:30:12.229" endtime="20220705 17:30:12.229"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 17:30:12.230" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220705 17:30:12.229" endtime="20220705 17:30:12.230"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 17:30:12.488" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 17:30:12.230" endtime="20220705 17:30:12.488"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 17:30:12.488" endtime="20220705 17:30:12.488"/>
</return>
<msg timestamp="20220705 17:30:12.489" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 17:30:12.228" endtime="20220705 17:30:12.489"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 17:30:12.489" endtime="20220705 17:30:12.489"/>
</return>
<msg timestamp="20220705 17:30:12.489" level="INFO">${BOARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 17:30:12.227" endtime="20220705 17:30:12.489"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_BOARD_ID}</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220705 17:30:12.490" level="INFO">${TEST_SUITE_BOARD_ID} = 62c475244d603c43a85eaeeb</msg>
<status status="PASS" starttime="20220705 17:30:12.489" endtime="20220705 17:30:12.490"/>
</kw>
<kw name="Get Lists On A Board" library="Board">
<var>${LISTS}</var>
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Get all the lists in a board</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>lists_on_board</arg>
<arg>${id}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 17:30:12.491" level="INFO">${url} = boards/62c475244d603c43a85eaeeb/lists/</msg>
<status status="PASS" starttime="20220705 17:30:12.491" endtime="20220705 17:30:12.491"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 17:30:12.600" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 17:30:12.491" endtime="20220705 17:30:12.600"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 17:30:12.600" endtime="20220705 17:30:12.600"/>
</return>
<msg timestamp="20220705 17:30:12.600" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 17:30:12.491" endtime="20220705 17:30:12.600"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 17:30:12.600" endtime="20220705 17:30:12.600"/>
</return>
<msg timestamp="20220705 17:30:12.600" level="INFO">${LISTS} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 17:30:12.490" endtime="20220705 17:30:12.600"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_LIST_ID}</arg>
<arg>${LISTS.json()}[0][id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220705 17:30:12.601" level="INFO">${TEST_SUITE_LIST_ID} = 62c475244d603c43a85eaef2</msg>
<status status="PASS" starttime="20220705 17:30:12.600" endtime="20220705 17:30:12.601"/>
</kw>
<kw name="Create A Card" library="Card">
<var>${CARD}</var>
<arg>name</arg>
<arg>TestCard</arg>
<doc>Creates a new card in the given list.
required_args: listId
optional_args: name, desc, pos, idCardSource, idLabels, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>@{optional_args}</arg>
<arg>idList</arg>
<arg>${idList}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 17:30:12.603" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 17:30:12.603" endtime="20220705 17:30:12.603"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 17:30:12.603" endtime="20220705 17:30:12.603"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 17:30:12.604" level="INFO">${url} = cards/</msg>
<status status="PASS" starttime="20220705 17:30:12.604" endtime="20220705 17:30:12.604"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 17:30:12.846" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 17:30:12.604" endtime="20220705 17:30:12.846"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 17:30:12.847" endtime="20220705 17:30:12.847"/>
</return>
<msg timestamp="20220705 17:30:12.847" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 17:30:12.602" endtime="20220705 17:30:12.847"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 17:30:12.847" endtime="20220705 17:30:12.847"/>
</return>
<msg timestamp="20220705 17:30:12.847" level="INFO">${CARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 17:30:12.602" endtime="20220705 17:30:12.847"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_CARD_ID}</arg>
<arg>${CARD.json()}[id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220705 17:30:12.848" level="INFO">${TEST_SUITE_CARD_ID} = 62c4752444a4f777109446ec</msg>
<status status="PASS" starttime="20220705 17:30:12.847" endtime="20220705 17:30:12.848"/>
</kw>
<status status="PASS" starttime="20220705 17:30:12.227" endtime="20220705 17:30:12.848"/>
</kw>
<status status="PASS" starttime="20220705 17:30:12.226" endtime="20220705 17:30:12.849"/>
</kw>
<test id="s1-s1-s3-t1" name="Verify A Checklist Can Be Created" line="14">
<kw name="Create A Checklist" library="Checklist">
<var>${response}</var>
<arg>name</arg>
<arg>TestChecklist</arg>
<arg>idCard=${TEST_SUITE_CARD_ID}</arg>
<doc>Creates a new checklist in the given card.
required_args: idCard
optional_args: name, pos, idChecklistSource
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>@{optional_args}</arg>
<arg>idCard</arg>
<arg>${idCard}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 17:30:12.851" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 17:30:12.851" endtime="20220705 17:30:12.851"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 17:30:12.851" endtime="20220705 17:30:12.851"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 17:30:12.852" level="INFO">${url} = checklists/</msg>
<status status="PASS" starttime="20220705 17:30:12.851" endtime="20220705 17:30:12.852"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 17:30:13.025" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 17:30:12.852" endtime="20220705 17:30:13.025"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 17:30:13.025" endtime="20220705 17:30:13.025"/>
</return>
<msg timestamp="20220705 17:30:13.026" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 17:30:12.850" endtime="20220705 17:30:13.026"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 17:30:13.026" endtime="20220705 17:30:13.026"/>
</return>
<msg timestamp="20220705 17:30:13.026" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 17:30:12.849" endtime="20220705 17:30:13.026"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${checklist_id}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 17:30:13.027" endtime="20220705 17:30:13.027"/>
</return>
<msg timestamp="20220705 17:30:13.028" level="INFO">${checklist_id} = 62c475245cecfe317438cd62</msg>
<status status="PASS" starttime="20220705 17:30:13.026" endtime="20220705 17:30:13.028"/>
</kw>
<kw name="Get A Checklist" library="Checklist">
<var>${response}</var>
<arg>${checklist_id}</arg>
<doc>Gets the checklist with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 17:30:13.030" level="INFO">${url} = checklists/62c475245cecfe317438cd62</msg>
<status status="PASS" starttime="20220705 17:30:13.029" endtime="20220705 17:30:13.030"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 17:30:13.146" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 17:30:13.030" endtime="20220705 17:30:13.146"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 17:30:13.146" endtime="20220705 17:30:13.147"/>
</return>
<msg timestamp="20220705 17:30:13.147" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 17:30:13.028" endtime="20220705 17:30:13.147"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 17:30:13.147" endtime="20220705 17:30:13.147"/>
</return>
<msg timestamp="20220705 17:30:13.147" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 17:30:13.028" endtime="20220705 17:30:13.147"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${checklist_name}</var>
<arg>${response}</arg>
<arg>name</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 17:30:13.148" endtime="20220705 17:30:13.148"/>
</return>
<msg timestamp="20220705 17:30:13.149" level="INFO">${checklist_name} = TestChecklist</msg>
<status status="PASS" starttime="20220705 17:30:13.148" endtime="20220705 17:30:13.149"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${checklist_name}</arg>
<arg>TestChecklist</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220705 17:30:13.149" endtime="20220705 17:30:13.149"/>
</kw>
<kw name="Delete A Checklist" library="Checklist" type="TEARDOWN">
<arg>${checklist_id}</arg>
<doc>Deletes the checklist with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 17:30:13.151" level="INFO">${url} = checklists/62c475245cecfe317438cd62</msg>
<status status="PASS" starttime="20220705 17:30:13.151" endtime="20220705 17:30:13.151"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 17:30:13.342" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 17:30:13.151" endtime="20220705 17:30:13.342"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 17:30:13.342" endtime="20220705 17:30:13.342"/>
</return>
<msg timestamp="20220705 17:30:13.343" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 17:30:13.150" endtime="20220705 17:30:13.343"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 17:30:13.343" endtime="20220705 17:30:13.343"/>
</return>
<status status="PASS" starttime="20220705 17:30:13.150" endtime="20220705 17:30:13.343"/>
</kw>
<doc>Verify that a checklist can be created through API</doc>
<tag>api</tag>
<tag>checklist.create</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220705 17:30:12.849" endtime="20220705 17:30:13.343"/>
</test>
<test id="s1-s1-s3-t2" name="Verify A Checklist Can Be Deleted" line="24">
<kw name="Create A Checklist" library="Checklist">
<var>${response}</var>
<arg>name</arg>
<arg>TestChecklist</arg>
<arg>idCard=${TEST_SUITE_CARD_ID}</arg>
<doc>Creates a new checklist in the given card.
required_args: idCard
optional_args: name, pos, idChecklistSource
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>@{optional_args}</arg>
<arg>idCard</arg>
<arg>${idCard}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 17:30:13.346" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 17:30:13.346" endtime="20220705 17:30:13.346"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 17:30:13.347" endtime="20220705 17:30:13.347"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 17:30:13.348" level="INFO">${url} = checklists/</msg>
<status status="PASS" starttime="20220705 17:30:13.347" endtime="20220705 17:30:13.348"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 17:30:13.519" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 17:30:13.348" endtime="20220705 17:30:13.519"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 17:30:13.519" endtime="20220705 17:30:13.519"/>
</return>
<msg timestamp="20220705 17:30:13.519" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 17:30:13.345" endtime="20220705 17:30:13.519"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 17:30:13.519" endtime="20220705 17:30:13.520"/>
</return>
<msg timestamp="20220705 17:30:13.520" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 17:30:13.345" endtime="20220705 17:30:13.520"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${checklist_id}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 17:30:13.520" endtime="20220705 17:30:13.520"/>
</return>
<msg timestamp="20220705 17:30:13.522" level="INFO">${checklist_id} = 62c47525a3b77d458c164b35</msg>
<status status="PASS" starttime="20220705 17:30:13.520" endtime="20220705 17:30:13.522"/>
</kw>
<kw name="Delete A Checklist" library="Checklist">
<var>${response}</var>
<arg>${checklist_id}</arg>
<doc>Deletes the checklist with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 17:30:13.523" level="INFO">${url} = checklists/62c47525a3b77d458c164b35</msg>
<status status="PASS" starttime="20220705 17:30:13.523" endtime="20220705 17:30:13.523"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 17:30:13.704" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 17:30:13.523" endtime="20220705 17:30:13.704"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 17:30:13.704" endtime="20220705 17:30:13.704"/>
</return>
<msg timestamp="20220705 17:30:13.704" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 17:30:13.522" endtime="20220705 17:30:13.704"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 17:30:13.704" endtime="20220705 17:30:13.704"/>
</return>
<msg timestamp="20220705 17:30:13.705" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 17:30:13.522" endtime="20220705 17:30:13.705"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>delete</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 17:30:13.705" endtime="20220705 17:30:13.708"/>
</kw>
<status status="PASS" starttime="20220705 17:30:13.705" endtime="20220705 17:30:13.708"/>
</kw>
<kw name="Get A Checklist" library="Checklist">
<arg>${checklist_id}</arg>
<arg>status_code=404</arg>
<doc>Gets the checklist with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 17:30:13.710" level="INFO">${url} = checklists/62c47525a3b77d458c164b35</msg>
<status status="PASS" starttime="20220705 17:30:13.709" endtime="20220705 17:30:13.710"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 17:30:13.817" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220705 17:30:13.710" endtime="20220705 17:30:13.817"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 17:30:13.817" endtime="20220705 17:30:13.817"/>
</return>
<msg timestamp="20220705 17:30:13.818" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220705 17:30:13.709" endtime="20220705 17:30:13.818"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 17:30:13.818" endtime="20220705 17:30:13.818"/>
</return>
<status status="PASS" starttime="20220705 17:30:13.708" endtime="20220705 17:30:13.818"/>
</kw>
<doc>Verify that a checklist can be deleted through API</doc>
<tag>api</tag>
<tag>checklist.delete</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220705 17:30:13.344" endtime="20220705 17:30:13.818"/>
</test>
<test id="s1-s1-s3-t3" name="Verify A Checklist Can Be Updated" line="33">
<kw name="Create A Checklist" library="Checklist">
<var>${response}</var>
<arg>name</arg>
<arg>TestChecklist</arg>
<arg>idCard=${TEST_SUITE_CARD_ID}</arg>
<doc>Creates a new checklist in the given card.
required_args: idCard
optional_args: name, pos, idChecklistSource
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>@{optional_args}</arg>
<arg>idCard</arg>
<arg>${idCard}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 17:30:13.823" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 17:30:13.821" endtime="20220705 17:30:13.823"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 17:30:13.823" endtime="20220705 17:30:13.824"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 17:30:13.824" level="INFO">${url} = checklists/</msg>
<status status="PASS" starttime="20220705 17:30:13.824" endtime="20220705 17:30:13.824"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 17:30:14.030" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 17:30:13.825" endtime="20220705 17:30:14.030"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 17:30:14.030" endtime="20220705 17:30:14.030"/>
</return>
<msg timestamp="20220705 17:30:14.031" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 17:30:13.821" endtime="20220705 17:30:14.031"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 17:30:14.031" endtime="20220705 17:30:14.031"/>
</return>
<msg timestamp="20220705 17:30:14.031" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 17:30:13.820" endtime="20220705 17:30:14.031"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${checklist_id}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 17:30:14.032" endtime="20220705 17:30:14.032"/>
</return>
<msg timestamp="20220705 17:30:14.033" level="INFO">${checklist_id} = 62c4752565664b3afa157e23</msg>
<status status="PASS" starttime="20220705 17:30:14.031" endtime="20220705 17:30:14.033"/>
</kw>
<kw name="Update A Checklist" library="Checklist">
<var>${response}</var>
<arg>${checklist_id}</arg>
<arg>name</arg>
<arg>TestChecklist2</arg>
<doc>Updates the checklist with the given ID
optional_args: name, pos
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<arg>status_code=${status_code}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 17:30:14.035" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 17:30:14.034" endtime="20220705 17:30:14.035"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 17:30:14.035" endtime="20220705 17:30:14.035"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 17:30:14.036" level="INFO">${url} = checklists/62c4752565664b3afa157e23</msg>
<status status="PASS" starttime="20220705 17:30:14.035" endtime="20220705 17:30:14.036"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 17:30:14.180" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 17:30:14.036" endtime="20220705 17:30:14.180"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 17:30:14.180" endtime="20220705 17:30:14.180"/>
</return>
<msg timestamp="20220705 17:30:14.181" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 17:30:14.034" endtime="20220705 17:30:14.181"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 17:30:14.181" endtime="20220705 17:30:14.181"/>
</return>
<msg timestamp="20220705 17:30:14.181" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 17:30:14.033" endtime="20220705 17:30:14.181"/>
</kw>
<kw name="Get A Checklist" library="Checklist">
<var>${response}</var>
<arg>${checklist_id}</arg>
<doc>Gets the checklist with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 17:30:14.183" level="INFO">${url} = checklists/62c4752565664b3afa157e23</msg>
<status status="PASS" starttime="20220705 17:30:14.182" endtime="20220705 17:30:14.183"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 17:30:14.298" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 17:30:14.183" endtime="20220705 17:30:14.298"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 17:30:14.298" endtime="20220705 17:30:14.298"/>
</return>
<msg timestamp="20220705 17:30:14.298" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 17:30:14.182" endtime="20220705 17:30:14.298"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 17:30:14.298" endtime="20220705 17:30:14.298"/>
</return>
<msg timestamp="20220705 17:30:14.299" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 17:30:14.181" endtime="20220705 17:30:14.299"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${checklist_name}</var>
<arg>${response}</arg>
<arg>name</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 17:30:14.299" endtime="20220705 17:30:14.299"/>
</return>
<msg timestamp="20220705 17:30:14.300" level="INFO">${checklist_name} = TestChecklist2</msg>
<status status="PASS" starttime="20220705 17:30:14.299" endtime="20220705 17:30:14.300"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${checklist_name}</arg>
<arg>TestChecklist2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220705 17:30:14.300" endtime="20220705 17:30:14.300"/>
</kw>
<kw name="Delete A Checklist" library="Checklist" type="TEARDOWN">
<arg>${checklist_id}</arg>
<doc>Deletes the checklist with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 17:30:14.314" level="INFO">${url} = checklists/62c4752565664b3afa157e23</msg>
<status status="PASS" starttime="20220705 17:30:14.314" endtime="20220705 17:30:14.314"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 17:30:14.483" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 17:30:14.314" endtime="20220705 17:30:14.483"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 17:30:14.483" endtime="20220705 17:30:14.483"/>
</return>
<msg timestamp="20220705 17:30:14.484" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 17:30:14.313" endtime="20220705 17:30:14.484"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 17:30:14.484" endtime="20220705 17:30:14.484"/>
</return>
<status status="PASS" starttime="20220705 17:30:14.301" endtime="20220705 17:30:14.484"/>
</kw>
<doc>Verify that a checklist's name can be updated through API</doc>
<tag>api</tag>
<tag>checklist.update</tag>
<tag>regression</tag>
<status status="PASS" starttime="20220705 17:30:13.819" endtime="20220705 17:30:14.484"/>
</test>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Teardown Board</arg>
<arg>Delete All Sessions</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Teardown Board">
<doc>Delete the board created for this suite</doc>
<kw name="Delete A Board" library="Board">
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 17:30:14.487" level="INFO">${url} = boards/62c475244d603c43a85eaeeb</msg>
<status status="PASS" starttime="20220705 17:30:14.487" endtime="20220705 17:30:14.487"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 17:30:14.936" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 17:30:14.487" endtime="20220705 17:30:14.936"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 17:30:14.936" endtime="20220705 17:30:14.936"/>
</return>
<msg timestamp="20220705 17:30:14.937" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 17:30:14.486" endtime="20220705 17:30:14.937"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 17:30:14.937" endtime="20220705 17:30:14.937"/>
</return>
<status status="PASS" starttime="20220705 17:30:14.486" endtime="20220705 17:30:14.937"/>
</kw>
<status status="PASS" starttime="20220705 17:30:14.486" endtime="20220705 17:30:14.937"/>
</kw>
<kw name="Delete All Sessions" library="request_own_library">
<status status="PASS" starttime="20220705 17:30:14.937" endtime="20220705 17:30:14.939"/>
</kw>
<status status="PASS" starttime="20220705 17:30:14.485" endtime="20220705 17:30:14.939"/>
</kw>
<doc>Example Test with Trello API Checklists</doc>
<status status="PASS" starttime="20220705 17:30:12.216" endtime="20220705 17:30:14.939"/>
</suite>
<suite id="s1-s1-s4" name="Trello Api Labels Tests" source="/trello/api/trello_api_labels_tests.robot">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Create Trello Session</arg>
<arg>Setup Board And List</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Create Trello Session" library="TrelloAPI">
<doc>Creates a Trello Session</doc>
<kw name="Create Session" library="request_own_library">
<arg>${API_BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<status status="PASS" starttime="20220705 17:30:14.953" endtime="20220705 17:30:14.953"/>
</kw>
<status status="PASS" starttime="20220705 17:30:14.953" endtime="20220705 17:30:14.954"/>
</kw>
<kw name="Setup Board And List">
<doc>Create a board and save its ID and its first list's ID</doc>
<kw name="Create A Board" library="Board">
<var>${BOARD}</var>
<arg>TestBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 17:30:14.955" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 17:30:14.955" endtime="20220705 17:30:14.955"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 17:30:14.955" endtime="20220705 17:30:14.956"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 17:30:14.957" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220705 17:30:14.956" endtime="20220705 17:30:14.957"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 17:30:15.190" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 17:30:14.957" endtime="20220705 17:30:15.190"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 17:30:15.190" endtime="20220705 17:30:15.190"/>
</return>
<msg timestamp="20220705 17:30:15.190" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 17:30:14.954" endtime="20220705 17:30:15.190"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 17:30:15.190" endtime="20220705 17:30:15.190"/>
</return>
<msg timestamp="20220705 17:30:15.191" level="INFO">${BOARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 17:30:14.954" endtime="20220705 17:30:15.191"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_BOARD_ID}</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220705 17:30:15.192" level="INFO">${TEST_SUITE_BOARD_ID} = 62c475271ebc136211cdf4a7</msg>
<status status="PASS" starttime="20220705 17:30:15.191" endtime="20220705 17:30:15.192"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${LISTS}</var>
<arg>boards/${TEST_SUITE_BOARD_ID}/lists</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 17:30:15.303" level="INFO">${LISTS} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 17:30:15.192" endtime="20220705 17:30:15.303"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_LIST_ID}</arg>
<arg>${LISTS.json()}[0][id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220705 17:30:15.304" level="INFO">${TEST_SUITE_LIST_ID} = 62c475271ebc136211cdf4ae</msg>
<status status="PASS" starttime="20220705 17:30:15.303" endtime="20220705 17:30:15.304"/>
</kw>
<status status="PASS" starttime="20220705 17:30:14.954" endtime="20220705 17:30:15.304"/>
</kw>
<status status="PASS" starttime="20220705 17:30:14.952" endtime="20220705 17:30:15.304"/>
</kw>
<test id="s1-s1-s4-t1" name="Create and get label on board" line="14">
<kw name="Create A Label" library="Label">
<var>${response}</var>
<arg>name</arg>
<arg>label2</arg>
<arg>color</arg>
<arg>yellow</arg>
<doc>Creates a new label in the given board.
required_args: idBoard
optional_args: name, color
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>idBoard</arg>
<arg>${idBoard}</arg>
<arg>@{optional_args}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 17:30:15.307" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 17:30:15.307" endtime="20220705 17:30:15.307"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 17:30:15.307" endtime="20220705 17:30:15.307"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 17:30:15.308" level="INFO">${url} = labels/</msg>
<status status="PASS" starttime="20220705 17:30:15.307" endtime="20220705 17:30:15.308"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 17:30:15.456" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 17:30:15.308" endtime="20220705 17:30:15.456"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 17:30:15.456" endtime="20220705 17:30:15.456"/>
</return>
<msg timestamp="20220705 17:30:15.456" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 17:30:15.306" endtime="20220705 17:30:15.456"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 17:30:15.456" endtime="20220705 17:30:15.456"/>
</return>
<msg timestamp="20220705 17:30:15.457" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 17:30:15.305" endtime="20220705 17:30:15.457"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>label</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 17:30:15.457" endtime="20220705 17:30:15.460"/>
</kw>
<status status="PASS" starttime="20220705 17:30:15.457" endtime="20220705 17:30:15.460"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${LABEL_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 17:30:15.460" endtime="20220705 17:30:15.460"/>
</return>
<msg timestamp="20220705 17:30:15.461" level="INFO">${LABEL_ID} = 62c475271b107980f24d4f11</msg>
<status status="PASS" starttime="20220705 17:30:15.460" endtime="20220705 17:30:15.461"/>
</kw>
<kw name="Get A Label" library="Label">
<var>${response}</var>
<arg>${LABEL_ID}</arg>
<doc>Gets the label with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 17:30:15.463" level="INFO">${url} = labels/62c475271b107980f24d4f11</msg>
<status status="PASS" starttime="20220705 17:30:15.462" endtime="20220705 17:30:15.463"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 17:30:15.560" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 17:30:15.463" endtime="20220705 17:30:15.560"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 17:30:15.560" endtime="20220705 17:30:15.560"/>
</return>
<msg timestamp="20220705 17:30:15.561" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 17:30:15.462" endtime="20220705 17:30:15.561"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 17:30:15.561" endtime="20220705 17:30:15.561"/>
</return>
<msg timestamp="20220705 17:30:15.561" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 17:30:15.461" endtime="20220705 17:30:15.561"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${LABEL_COLOR}</var>
<arg>${response}</arg>
<arg>color</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 17:30:15.562" endtime="20220705 17:30:15.562"/>
</return>
<msg timestamp="20220705 17:30:15.562" level="INFO">${LABEL_COLOR} = yellow</msg>
<status status="PASS" starttime="20220705 17:30:15.561" endtime="20220705 17:30:15.562"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${LABEL_NAME}</var>
<arg>${response}</arg>
<arg>name</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 17:30:15.563" endtime="20220705 17:30:15.563"/>
</return>
<msg timestamp="20220705 17:30:15.563" level="INFO">${LABEL_NAME} = label2</msg>
<status status="PASS" starttime="20220705 17:30:15.562" endtime="20220705 17:30:15.563"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${LABEL_COLOR}</arg>
<arg>yellow</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220705 17:30:15.564" endtime="20220705 17:30:15.564"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${LABEL_NAME}</arg>
<arg>label2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220705 17:30:15.564" endtime="20220705 17:30:15.564"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Label</arg>
<arg>${LABEL_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Label" library="Label">
<arg>${LABEL_ID}</arg>
<doc>Deletes the label with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 17:30:15.567" level="INFO">${url} = labels/62c475271b107980f24d4f11</msg>
<status status="PASS" starttime="20220705 17:30:15.567" endtime="20220705 17:30:15.567"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 17:30:15.757" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 17:30:15.567" endtime="20220705 17:30:15.758"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 17:30:15.758" endtime="20220705 17:30:15.758"/>
</return>
<msg timestamp="20220705 17:30:15.758" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 17:30:15.566" endtime="20220705 17:30:15.758"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 17:30:15.758" endtime="20220705 17:30:15.758"/>
</return>
<status status="PASS" starttime="20220705 17:30:15.565" endtime="20220705 17:30:15.758"/>
</kw>
<status status="PASS" starttime="20220705 17:30:15.565" endtime="20220705 17:30:15.758"/>
</kw>
<doc>Verify that a label can be created through API</doc>
<tag>api</tag>
<tag>label.create</tag>
<tag>label.get</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220705 17:30:15.305" endtime="20220705 17:30:15.759"/>
</test>
<test id="s1-s1-s4-t2" name="Update label on board" line="28">
<kw name="Create A Label" library="Label">
<var>${response}</var>
<arg>name</arg>
<arg>label2</arg>
<arg>color</arg>
<arg>yellow</arg>
<doc>Creates a new label in the given board.
required_args: idBoard
optional_args: name, color
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>idBoard</arg>
<arg>${idBoard}</arg>
<arg>@{optional_args}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 17:30:15.762" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 17:30:15.761" endtime="20220705 17:30:15.762"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 17:30:15.762" endtime="20220705 17:30:15.762"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 17:30:15.763" level="INFO">${url} = labels/</msg>
<status status="PASS" starttime="20220705 17:30:15.763" endtime="20220705 17:30:15.763"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 17:30:15.907" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 17:30:15.764" endtime="20220705 17:30:15.907"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 17:30:15.907" endtime="20220705 17:30:15.907"/>
</return>
<msg timestamp="20220705 17:30:15.907" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 17:30:15.761" endtime="20220705 17:30:15.907"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 17:30:15.907" endtime="20220705 17:30:15.907"/>
</return>
<msg timestamp="20220705 17:30:15.908" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 17:30:15.760" endtime="20220705 17:30:15.908"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>label</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 17:30:15.908" endtime="20220705 17:30:15.911"/>
</kw>
<status status="PASS" starttime="20220705 17:30:15.908" endtime="20220705 17:30:15.911"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${LABEL_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 17:30:15.911" endtime="20220705 17:30:15.911"/>
</return>
<msg timestamp="20220705 17:30:15.912" level="INFO">${LABEL_ID} = 62c47527aa1fd356d01c9993</msg>
<status status="PASS" starttime="20220705 17:30:15.911" endtime="20220705 17:30:15.912"/>
</kw>
<kw name="Update A Label" library="Label">
<var>${new_response}</var>
<arg>${LABEL_ID}</arg>
<arg>name</arg>
<arg>label3</arg>
<arg>color</arg>
<arg>orange</arg>
<doc>Updates the label with the given ID
optional_args: name, color
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 17:30:15.914" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 17:30:15.914" endtime="20220705 17:30:15.914"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 17:30:15.914" endtime="20220705 17:30:15.914"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 17:30:15.915" level="INFO">${url} = labels/62c47527aa1fd356d01c9993</msg>
<status status="PASS" starttime="20220705 17:30:15.915" endtime="20220705 17:30:15.915"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 17:30:16.089" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 17:30:15.915" endtime="20220705 17:30:16.089"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 17:30:16.089" endtime="20220705 17:30:16.089"/>
</return>
<msg timestamp="20220705 17:30:16.089" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 17:30:15.913" endtime="20220705 17:30:16.089"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 17:30:16.089" endtime="20220705 17:30:16.089"/>
</return>
<msg timestamp="20220705 17:30:16.090" level="INFO">${new_response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 17:30:15.913" endtime="20220705 17:30:16.090"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${NEW_LABEL_COLOR}</var>
<arg>${new_response}</arg>
<arg>color</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 17:30:16.090" endtime="20220705 17:30:16.090"/>
</return>
<msg timestamp="20220705 17:30:16.091" level="INFO">${NEW_LABEL_COLOR} = orange</msg>
<status status="PASS" starttime="20220705 17:30:16.090" endtime="20220705 17:30:16.091"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${NEW_LABEL_NAME}</var>
<arg>${new_response}</arg>
<arg>name</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 17:30:16.092" endtime="20220705 17:30:16.092"/>
</return>
<msg timestamp="20220705 17:30:16.092" level="INFO">${NEW_LABEL_NAME} = label3</msg>
<status status="PASS" starttime="20220705 17:30:16.091" endtime="20220705 17:30:16.092"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${NEW_LABEL_COLOR}</arg>
<arg>orange</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220705 17:30:16.093" endtime="20220705 17:30:16.093"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${NEW_LABEL_NAME}</arg>
<arg>label3</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220705 17:30:16.093" endtime="20220705 17:30:16.093"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Label</arg>
<arg>${LABEL_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Label" library="Label">
<arg>${LABEL_ID}</arg>
<doc>Deletes the label with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 17:30:16.095" level="INFO">${url} = labels/62c47527aa1fd356d01c9993</msg>
<status status="PASS" starttime="20220705 17:30:16.095" endtime="20220705 17:30:16.095"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 17:30:16.251" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 17:30:16.095" endtime="20220705 17:30:16.251"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 17:30:16.251" endtime="20220705 17:30:16.251"/>
</return>
<msg timestamp="20220705 17:30:16.251" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 17:30:16.094" endtime="20220705 17:30:16.251"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 17:30:16.251" endtime="20220705 17:30:16.251"/>
</return>
<status status="PASS" starttime="20220705 17:30:16.094" endtime="20220705 17:30:16.252"/>
</kw>
<status status="PASS" starttime="20220705 17:30:16.093" endtime="20220705 17:30:16.252"/>
</kw>
<doc>Verify that a label's name and color can be updated through API</doc>
<tag>api</tag>
<tag>label.update</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220705 17:30:15.759" endtime="20220705 17:30:16.252"/>
</test>
<test id="s1-s1-s4-t3" name="Delete label on board" line="41">
<kw name="Create A Label" library="Label">
<var>${response}</var>
<arg>name</arg>
<arg>label2</arg>
<arg>color</arg>
<arg>yellow</arg>
<doc>Creates a new label in the given board.
required_args: idBoard
optional_args: name, color
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>idBoard</arg>
<arg>${idBoard}</arg>
<arg>@{optional_args}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 17:30:16.255" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 17:30:16.255" endtime="20220705 17:30:16.255"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 17:30:16.255" endtime="20220705 17:30:16.255"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 17:30:16.256" level="INFO">${url} = labels/</msg>
<status status="PASS" starttime="20220705 17:30:16.256" endtime="20220705 17:30:16.256"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 17:30:16.399" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 17:30:16.256" endtime="20220705 17:30:16.399"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 17:30:16.399" endtime="20220705 17:30:16.399"/>
</return>
<msg timestamp="20220705 17:30:16.399" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 17:30:16.254" endtime="20220705 17:30:16.399"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 17:30:16.399" endtime="20220705 17:30:16.399"/>
</return>
<msg timestamp="20220705 17:30:16.399" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 17:30:16.253" endtime="20220705 17:30:16.399"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${LABEL_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 17:30:16.400" endtime="20220705 17:30:16.400"/>
</return>
<msg timestamp="20220705 17:30:16.401" level="INFO">${LABEL_ID} = 62c475280600fb8f30f28feb</msg>
<status status="PASS" starttime="20220705 17:30:16.400" endtime="20220705 17:30:16.401"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Label</arg>
<arg>${LABEL_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Label" library="Label">
<arg>${LABEL_ID}</arg>
<doc>Deletes the label with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 17:30:16.402" level="INFO">${url} = labels/62c475280600fb8f30f28feb</msg>
<status status="PASS" starttime="20220705 17:30:16.402" endtime="20220705 17:30:16.402"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 17:30:16.565" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 17:30:16.403" endtime="20220705 17:30:16.565"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 17:30:16.565" endtime="20220705 17:30:16.566"/>
</return>
<msg timestamp="20220705 17:30:16.566" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 17:30:16.402" endtime="20220705 17:30:16.566"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 17:30:16.566" endtime="20220705 17:30:16.566"/>
</return>
<status status="PASS" starttime="20220705 17:30:16.401" endtime="20220705 17:30:16.566"/>
</kw>
<status status="PASS" starttime="20220705 17:30:16.401" endtime="20220705 17:30:16.566"/>
</kw>
<kw name="Get A Label" library="Label">
<arg>${LABEL_ID}</arg>
<arg>status_code=404</arg>
<doc>Gets the label with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 17:30:16.568" level="INFO">${url} = labels/62c475280600fb8f30f28feb</msg>
<status status="PASS" starttime="20220705 17:30:16.568" endtime="20220705 17:30:16.568"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 17:30:16.662" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220705 17:30:16.568" endtime="20220705 17:30:16.662"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 17:30:16.662" endtime="20220705 17:30:16.663"/>
</return>
<msg timestamp="20220705 17:30:16.663" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220705 17:30:16.567" endtime="20220705 17:30:16.663"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 17:30:16.663" endtime="20220705 17:30:16.664"/>
</return>
<status status="PASS" starttime="20220705 17:30:16.566" endtime="20220705 17:30:16.664"/>
</kw>
<doc>Verify that a label can be deleted through API</doc>
<tag>api</tag>
<tag>label.delete</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220705 17:30:16.252" endtime="20220705 17:30:16.664"/>
</test>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Teardown Board</arg>
<arg>Delete All Sessions</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Teardown Board">
<doc>Delete the board created for this session.</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 17:30:16.668" level="INFO">${url} = boards/62c475271ebc136211cdf4a7</msg>
<status status="PASS" starttime="20220705 17:30:16.668" endtime="20220705 17:30:16.668"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 17:30:17.064" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 17:30:16.668" endtime="20220705 17:30:17.064"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 17:30:17.065" endtime="20220705 17:30:17.065"/>
</return>
<msg timestamp="20220705 17:30:17.065" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 17:30:16.667" endtime="20220705 17:30:17.065"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 17:30:17.065" endtime="20220705 17:30:17.065"/>
</return>
<status status="PASS" starttime="20220705 17:30:16.667" endtime="20220705 17:30:17.066"/>
</kw>
<status status="PASS" starttime="20220705 17:30:16.666" endtime="20220705 17:30:17.066"/>
</kw>
<status status="PASS" starttime="20220705 17:30:16.666" endtime="20220705 17:30:17.066"/>
</kw>
<kw name="Delete All Sessions" library="request_own_library">
<status status="PASS" starttime="20220705 17:30:17.066" endtime="20220705 17:30:17.067"/>
</kw>
<status status="PASS" starttime="20220705 17:30:16.666" endtime="20220705 17:30:17.067"/>
</kw>
<doc>Example Test with Trello API Cards</doc>
<status status="PASS" starttime="20220705 17:30:14.942" endtime="20220705 17:30:17.067"/>
</suite>
<suite id="s1-s1-s5" name="Trello Api Lists Tests" source="/trello/api/trello_api_lists_tests.robot">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Create Trello Session</arg>
<arg>Setup Board</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Create Trello Session" library="TrelloAPI">
<doc>Creates a Trello Session</doc>
<kw name="Create Session" library="request_own_library">
<arg>${API_BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<status status="PASS" starttime="20220705 17:30:17.084" endtime="20220705 17:30:17.085"/>
</kw>
<status status="PASS" starttime="20220705 17:30:17.084" endtime="20220705 17:30:17.085"/>
</kw>
<kw name="Setup Board">
<doc>Create a board and save it's id for the suite</doc>
<kw name="Create A Board" library="Board">
<var>${BOARD}</var>
<arg>TestBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 17:30:17.086" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 17:30:17.086" endtime="20220705 17:30:17.086"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 17:30:17.086" endtime="20220705 17:30:17.087"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 17:30:17.088" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220705 17:30:17.087" endtime="20220705 17:30:17.088"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 17:30:17.348" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 17:30:17.088" endtime="20220705 17:30:17.348"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 17:30:17.348" endtime="20220705 17:30:17.348"/>
</return>
<msg timestamp="20220705 17:30:17.348" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 17:30:17.085" endtime="20220705 17:30:17.348"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 17:30:17.348" endtime="20220705 17:30:17.348"/>
</return>
<msg timestamp="20220705 17:30:17.349" level="INFO">${BOARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 17:30:17.085" endtime="20220705 17:30:17.349"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Set Suite Variable</arg>
<arg>\${TEST_SUITE_BOARD_ID}</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_BOARD_ID}</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220705 17:30:17.350" level="INFO">${TEST_SUITE_BOARD_ID} = 62c4752923936f599c1c7d80</msg>
<status status="PASS" starttime="20220705 17:30:17.349" endtime="20220705 17:30:17.350"/>
</kw>
<status status="PASS" starttime="20220705 17:30:17.349" endtime="20220705 17:30:17.350"/>
</kw>
<status status="PASS" starttime="20220705 17:30:17.085" endtime="20220705 17:30:17.350"/>
</kw>
<status status="PASS" starttime="20220705 17:30:17.083" endtime="20220705 17:30:17.350"/>
</kw>
<test id="s1-s1-s5-t1" name="CREATE a list" line="13">
<kw name="Create A List" library="List">
<var>${response}</var>
<arg>NewList</arg>
<doc>Creates a new List
board id
name the list will have
optional_args: idListSource, pos, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>list</arg>
<arg>name</arg>
<arg>${name}</arg>
<arg>idBoard</arg>
<arg>${idBoard}</arg>
<arg>@{optional_args}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 17:30:17.352" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 17:30:17.352" endtime="20220705 17:30:17.353"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 17:30:17.353" endtime="20220705 17:30:17.353"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 17:30:17.354" level="INFO">${url} = lists/</msg>
<status status="PASS" starttime="20220705 17:30:17.353" endtime="20220705 17:30:17.354"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 17:30:17.517" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 17:30:17.354" endtime="20220705 17:30:17.518"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 17:30:17.518" endtime="20220705 17:30:17.518"/>
</return>
<msg timestamp="20220705 17:30:17.518" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 17:30:17.352" endtime="20220705 17:30:17.518"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 17:30:17.518" endtime="20220705 17:30:17.518"/>
</return>
<msg timestamp="20220705 17:30:17.519" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 17:30:17.351" endtime="20220705 17:30:17.519"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>list</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 17:30:17.519" endtime="20220705 17:30:17.522"/>
</kw>
<status status="PASS" starttime="20220705 17:30:17.519" endtime="20220705 17:30:17.522"/>
</kw>
<doc>Verify that a list can be created through API</doc>
<tag>api</tag>
<tag>list.create</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220705 17:30:17.350" endtime="20220705 17:30:17.522"/>
</test>
<test id="s1-s1-s5-t2" name="UPDATE a list" line="19">
<kw name="Create A List" library="List">
<var>${response}</var>
<arg>NewList</arg>
<doc>Creates a new List
board id
name the list will have
optional_args: idListSource, pos, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>list</arg>
<arg>name</arg>
<arg>${name}</arg>
<arg>idBoard</arg>
<arg>${idBoard}</arg>
<arg>@{optional_args}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 17:30:17.525" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 17:30:17.525" endtime="20220705 17:30:17.525"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 17:30:17.525" endtime="20220705 17:30:17.525"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 17:30:17.526" level="INFO">${url} = lists/</msg>
<status status="PASS" starttime="20220705 17:30:17.526" endtime="20220705 17:30:17.526"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 17:30:17.686" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 17:30:17.527" endtime="20220705 17:30:17.686"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 17:30:17.686" endtime="20220705 17:30:17.686"/>
</return>
<msg timestamp="20220705 17:30:17.686" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 17:30:17.524" endtime="20220705 17:30:17.686"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 17:30:17.686" endtime="20220705 17:30:17.686"/>
</return>
<msg timestamp="20220705 17:30:17.687" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 17:30:17.524" endtime="20220705 17:30:17.687"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>list</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 17:30:17.687" endtime="20220705 17:30:17.689"/>
</kw>
<status status="PASS" starttime="20220705 17:30:17.687" endtime="20220705 17:30:17.689"/>
</kw>
<kw name="Update A List" library="List">
<arg>${response.json()}[id]</arg>
<arg>name</arg>
<arg>NewName</arg>
<doc>Updates the board with the given ID
optional_args: name, idListSource, pos, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>list</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 17:30:17.691" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 17:30:17.691" endtime="20220705 17:30:17.691"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 17:30:17.691" endtime="20220705 17:30:17.692"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 17:30:17.692" level="INFO">${url} = lists/62c47529ae1b4658c89507a3</msg>
<status status="PASS" starttime="20220705 17:30:17.692" endtime="20220705 17:30:17.692"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 17:30:17.835" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 17:30:17.692" endtime="20220705 17:30:17.835"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 17:30:17.835" endtime="20220705 17:30:17.835"/>
</return>
<msg timestamp="20220705 17:30:17.835" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 17:30:17.690" endtime="20220705 17:30:17.835"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 17:30:17.835" endtime="20220705 17:30:17.835"/>
</return>
<status status="PASS" starttime="20220705 17:30:17.690" endtime="20220705 17:30:17.835"/>
</kw>
<kw name="Get A List" library="List">
<var>${new_response}</var>
<arg>${response.json()}[id]</arg>
<doc>Gets the List with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>list</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 17:30:17.837" level="INFO">${url} = lists/62c47529ae1b4658c89507a3</msg>
<status status="PASS" starttime="20220705 17:30:17.837" endtime="20220705 17:30:17.837"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 17:30:17.933" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 17:30:17.838" endtime="20220705 17:30:17.933"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 17:30:17.933" endtime="20220705 17:30:17.934"/>
</return>
<msg timestamp="20220705 17:30:17.934" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 17:30:17.837" endtime="20220705 17:30:17.934"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 17:30:17.934" endtime="20220705 17:30:17.934"/>
</return>
<msg timestamp="20220705 17:30:17.934" level="INFO">${new_response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 17:30:17.836" endtime="20220705 17:30:17.934"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${new_response}</arg>
<arg>list</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 17:30:17.935" endtime="20220705 17:30:17.937"/>
</kw>
<status status="PASS" starttime="20220705 17:30:17.934" endtime="20220705 17:30:17.937"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${new_response.json()}[name]</arg>
<arg>NewName</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220705 17:30:17.937" endtime="20220705 17:30:17.938"/>
</kw>
<doc>Verify that a lists name can be updated through API</doc>
<tag>api</tag>
<tag>list.update</tag>
<tag>regression</tag>
<status status="PASS" starttime="20220705 17:30:17.523" endtime="20220705 17:30:17.938"/>
</test>
<test id="s1-s1-s5-t3" name="ARCHIVE A list" line="29">
<kw name="Create A List" library="List">
<var>${response}</var>
<arg>NewList</arg>
<doc>Creates a new List
board id
name the list will have
optional_args: idListSource, pos, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>list</arg>
<arg>name</arg>
<arg>${name}</arg>
<arg>idBoard</arg>
<arg>${idBoard}</arg>
<arg>@{optional_args}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 17:30:17.940" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 17:30:17.940" endtime="20220705 17:30:17.940"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 17:30:17.940" endtime="20220705 17:30:17.942"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 17:30:17.943" level="INFO">${url} = lists/</msg>
<status status="PASS" starttime="20220705 17:30:17.942" endtime="20220705 17:30:17.943"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 17:30:18.098" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 17:30:17.943" endtime="20220705 17:30:18.098"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 17:30:18.098" endtime="20220705 17:30:18.098"/>
</return>
<msg timestamp="20220705 17:30:18.098" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 17:30:17.939" endtime="20220705 17:30:18.098"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 17:30:18.099" endtime="20220705 17:30:18.099"/>
</return>
<msg timestamp="20220705 17:30:18.099" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 17:30:17.939" endtime="20220705 17:30:18.099"/>
</kw>
<kw name="Archive A List" library="List">
<arg>${response.json()}[id]</arg>
<doc>Deletes the list with the given ID</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>archive_list</arg>
<arg>${id}</arg>
<arg>value</arg>
<arg>true</arg>
<arg>status_code=${status_code}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 17:30:18.101" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 17:30:18.101" endtime="20220705 17:30:18.101"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 17:30:18.101" endtime="20220705 17:30:18.101"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 17:30:18.102" level="INFO">${url} = lists/62c4752a7acf1c63ece51487/closed</msg>
<status status="PASS" starttime="20220705 17:30:18.102" endtime="20220705 17:30:18.102"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 17:30:18.246" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 17:30:18.102" endtime="20220705 17:30:18.246"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 17:30:18.246" endtime="20220705 17:30:18.246"/>
</return>
<msg timestamp="20220705 17:30:18.247" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 17:30:18.100" endtime="20220705 17:30:18.247"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 17:30:18.247" endtime="20220705 17:30:18.247"/>
</return>
<status status="PASS" starttime="20220705 17:30:18.099" endtime="20220705 17:30:18.247"/>
</kw>
<kw name="Get A List" library="List">
<var>${new_response}</var>
<arg>${response.json()}[id]</arg>
<doc>Gets the List with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>list</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 17:30:18.249" level="INFO">${url} = lists/62c4752a7acf1c63ece51487</msg>
<status status="PASS" starttime="20220705 17:30:18.249" endtime="20220705 17:30:18.249"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 17:30:18.348" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 17:30:18.249" endtime="20220705 17:30:18.348"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 17:30:18.348" endtime="20220705 17:30:18.348"/>
</return>
<msg timestamp="20220705 17:30:18.348" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 17:30:18.248" endtime="20220705 17:30:18.348"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 17:30:18.348" endtime="20220705 17:30:18.349"/>
</return>
<msg timestamp="20220705 17:30:18.349" level="INFO">${new_response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 17:30:18.247" endtime="20220705 17:30:18.349"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${new_response.json()}[closed]</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220705 17:30:18.349" endtime="20220705 17:30:18.350"/>
</kw>
<doc>Verify that a list can be archived through API</doc>
<tag>api</tag>
<tag>list.archive</tag>
<tag>regression</tag>
<status status="PASS" starttime="20220705 17:30:17.938" endtime="20220705 17:30:18.350"/>
</test>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Teardown Board</arg>
<arg>Delete All Sessions</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Teardown Board">
<doc>Delete the board created for this suite.</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 17:30:18.353" level="INFO">${url} = boards/62c4752923936f599c1c7d80</msg>
<status status="PASS" starttime="20220705 17:30:18.353" endtime="20220705 17:30:18.353"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 17:30:18.791" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 17:30:18.354" endtime="20220705 17:30:18.791"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 17:30:18.791" endtime="20220705 17:30:18.791"/>
</return>
<msg timestamp="20220705 17:30:18.791" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 17:30:18.353" endtime="20220705 17:30:18.791"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 17:30:18.791" endtime="20220705 17:30:18.791"/>
</return>
<status status="PASS" starttime="20220705 17:30:18.352" endtime="20220705 17:30:18.792"/>
</kw>
<status status="PASS" starttime="20220705 17:30:18.351" endtime="20220705 17:30:18.792"/>
</kw>
<status status="PASS" starttime="20220705 17:30:18.351" endtime="20220705 17:30:18.792"/>
</kw>
<kw name="Delete All Sessions" library="request_own_library">
<status status="PASS" starttime="20220705 17:30:18.792" endtime="20220705 17:30:18.794"/>
</kw>
<status status="PASS" starttime="20220705 17:30:18.351" endtime="20220705 17:30:18.794"/>
</kw>
<doc>Example Test with Trello API lists</doc>
<status status="PASS" starttime="20220705 17:30:17.069" endtime="20220705 17:30:18.794"/>
</suite>
<status status="PASS" starttime="20220705 17:30:03.861" endtime="20220705 17:30:18.797"/>
</suite>
<status status="PASS" starttime="20220705 17:30:03.837" endtime="20220705 17:30:18.801"/>
</suite>
<statistics>
<total>
<stat pass="18" fail="0" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="18" fail="0" skip="0">api</stat>
<stat pass="1" fail="0" skip="0">board.create</stat>
<stat pass="1" fail="0" skip="0">board.delete</stat>
<stat pass="1" fail="0" skip="0">board.get</stat>
<stat pass="2" fail="0" skip="0">board.update</stat>
<stat pass="1" fail="0" skip="0">card.close</stat>
<stat pass="1" fail="0" skip="0">card.create</stat>
<stat pass="1" fail="0" skip="0">card.delete</stat>
<stat pass="1" fail="0" skip="0">card.update</stat>
<stat pass="1" fail="0" skip="0">checklist.create</stat>
<stat pass="1" fail="0" skip="0">checklist.delete</stat>
<stat pass="1" fail="0" skip="0">checklist.update</stat>
<stat pass="1" fail="0" skip="0">label.create</stat>
<stat pass="1" fail="0" skip="0">label.delete</stat>
<stat pass="1" fail="0" skip="0">label.get</stat>
<stat pass="1" fail="0" skip="0">label.update</stat>
<stat pass="1" fail="0" skip="0">list.archive</stat>
<stat pass="1" fail="0" skip="0">list.create</stat>
<stat pass="1" fail="0" skip="0">list.update</stat>
<stat pass="5" fail="0" skip="0">regression</stat>
<stat pass="13" fail="0" skip="0">smoke</stat>
</tag>
<suite>
<stat pass="18" fail="0" skip="0" id="s1" name="Trello">Trello</stat>
<stat pass="18" fail="0" skip="0" id="s1-s1" name="Api">Trello.Api</stat>
<stat pass="5" fail="0" skip="0" id="s1-s1-s1" name="Trello Api Boards Tests">Trello.Api.Trello Api Boards Tests</stat>
<stat pass="4" fail="0" skip="0" id="s1-s1-s2" name="Trello Api Cards Tests">Trello.Api.Trello Api Cards Tests</stat>
<stat pass="3" fail="0" skip="0" id="s1-s1-s3" name="Trello Api Checklists Tests">Trello.Api.Trello Api Checklists Tests</stat>
<stat pass="3" fail="0" skip="0" id="s1-s1-s4" name="Trello Api Labels Tests">Trello.Api.Trello Api Labels Tests</stat>
<stat pass="3" fail="0" skip="0" id="s1-s1-s5" name="Trello Api Lists Tests">Trello.Api.Trello Api Lists Tests</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
