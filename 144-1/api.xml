<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 5.0.1 (Python 3.10.5 on linux)" generated="20220705 09:32:55.971" rpa="false" schemaversion="3">
<suite id="s1" name="Trello" source="/trello">
<suite id="s1-s1" name="Api" source="/trello/api">
<suite id="s1-s1-s1" name="Trello Api Boards Tests" source="/trello/api/trello_api_boards_tests.robot">
<kw name="Create Trello Session" library="TrelloAPI" type="SETUP">
<doc>Creates a Trello Session</doc>
<kw name="Create Session" library="request_own_library">
<arg>${API_BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<status status="PASS" starttime="20220705 09:32:56.147" endtime="20220705 09:32:56.147"/>
</kw>
<status status="PASS" starttime="20220705 09:32:56.145" endtime="20220705 09:32:56.147"/>
</kw>
<test id="s1-s1-s1-t1" name="CREATE a board" line="9">
<kw name="Create A Board" library="Board">
<var>${response}</var>
<arg>NewBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 09:32:56.150" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 09:32:56.149" endtime="20220705 09:32:56.150"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 09:32:56.150" endtime="20220705 09:32:56.150"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 09:32:56.151" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220705 09:32:56.150" endtime="20220705 09:32:56.151"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 09:32:56.540" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 09:32:56.151" endtime="20220705 09:32:56.540"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 09:32:56.541" endtime="20220705 09:32:56.541"/>
</return>
<msg timestamp="20220705 09:32:56.541" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 09:32:56.149" endtime="20220705 09:32:56.541"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 09:32:56.541" endtime="20220705 09:32:56.541"/>
</return>
<msg timestamp="20220705 09:32:56.541" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 09:32:56.148" endtime="20220705 09:32:56.541"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>board</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 09:32:56.542" endtime="20220705 09:32:56.548"/>
</kw>
<status status="PASS" starttime="20220705 09:32:56.542" endtime="20220705 09:32:56.548"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${response.json()}[id]</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${response.json()}[id]</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 09:32:56.550" level="INFO">${url} = boards/62c405480801a92dbd92757f</msg>
<status status="PASS" starttime="20220705 09:32:56.550" endtime="20220705 09:32:56.550"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 09:32:57.002" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 09:32:56.551" endtime="20220705 09:32:57.002"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 09:32:57.002" endtime="20220705 09:32:57.002"/>
</return>
<msg timestamp="20220705 09:32:57.002" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 09:32:56.549" endtime="20220705 09:32:57.003"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 09:32:57.003" endtime="20220705 09:32:57.003"/>
</return>
<status status="PASS" starttime="20220705 09:32:56.548" endtime="20220705 09:32:57.003"/>
</kw>
<status status="PASS" starttime="20220705 09:32:56.548" endtime="20220705 09:32:57.003"/>
</kw>
<doc>Verify that a board can be create through API</doc>
<tag>api</tag>
<tag>board.create</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220705 09:32:56.148" endtime="20220705 09:32:57.003"/>
</test>
<test id="s1-s1-s1-t2" name="UPDATE a Board's name" line="16">
<kw name="Create A Board" library="Board">
<var>${response}</var>
<arg>NewBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 09:32:57.006" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 09:32:57.006" endtime="20220705 09:32:57.006"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 09:32:57.006" endtime="20220705 09:32:57.007"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 09:32:57.008" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220705 09:32:57.007" endtime="20220705 09:32:57.008"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 09:32:57.249" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 09:32:57.008" endtime="20220705 09:32:57.249"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 09:32:57.249" endtime="20220705 09:32:57.249"/>
</return>
<msg timestamp="20220705 09:32:57.250" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 09:32:57.005" endtime="20220705 09:32:57.250"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 09:32:57.250" endtime="20220705 09:32:57.250"/>
</return>
<msg timestamp="20220705 09:32:57.250" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 09:32:57.005" endtime="20220705 09:32:57.250"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>board</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 09:32:57.251" endtime="20220705 09:32:57.256"/>
</kw>
<status status="PASS" starttime="20220705 09:32:57.250" endtime="20220705 09:32:57.256"/>
</kw>
<kw name="Update A Board" library="Board">
<arg>${response.json()}[id]</arg>
<arg>name</arg>
<arg>NewName</arg>
<doc>Updates the board with the given ID
optional_args: name, desc, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 09:32:57.258" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 09:32:57.258" endtime="20220705 09:32:57.258"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 09:32:57.258" endtime="20220705 09:32:57.259"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 09:32:57.259" level="INFO">${url} = boards/62c4054995b9b2474d1b8a59</msg>
<status status="PASS" starttime="20220705 09:32:57.259" endtime="20220705 09:32:57.259"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 09:32:57.437" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 09:32:57.259" endtime="20220705 09:32:57.437"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 09:32:57.437" endtime="20220705 09:32:57.438"/>
</return>
<msg timestamp="20220705 09:32:57.438" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 09:32:57.257" endtime="20220705 09:32:57.438"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 09:32:57.438" endtime="20220705 09:32:57.438"/>
</return>
<status status="PASS" starttime="20220705 09:32:57.256" endtime="20220705 09:32:57.438"/>
</kw>
<kw name="Get A Board" library="Board">
<var>${new_response}</var>
<arg>${response.json()}[id]</arg>
<doc>Gets the Board with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 09:32:57.441" level="INFO">${url} = boards/62c4054995b9b2474d1b8a59</msg>
<status status="PASS" starttime="20220705 09:32:57.440" endtime="20220705 09:32:57.441"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 09:32:57.583" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 09:32:57.441" endtime="20220705 09:32:57.583"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 09:32:57.583" endtime="20220705 09:32:57.583"/>
</return>
<msg timestamp="20220705 09:32:57.583" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 09:32:57.440" endtime="20220705 09:32:57.583"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 09:32:57.584" endtime="20220705 09:32:57.584"/>
</return>
<msg timestamp="20220705 09:32:57.584" level="INFO">${new_response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 09:32:57.438" endtime="20220705 09:32:57.584"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${new_response}</arg>
<arg>board</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 09:32:57.585" endtime="20220705 09:32:57.590"/>
</kw>
<status status="PASS" starttime="20220705 09:32:57.584" endtime="20220705 09:32:57.590"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${new_response.json()}[name]</arg>
<arg>NewName</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220705 09:32:57.591" endtime="20220705 09:32:57.592"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${response.json()}[id]</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${response.json()}[id]</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 09:32:57.595" level="INFO">${url} = boards/62c4054995b9b2474d1b8a59</msg>
<status status="PASS" starttime="20220705 09:32:57.594" endtime="20220705 09:32:57.595"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 09:32:58.004" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 09:32:57.595" endtime="20220705 09:32:58.004"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 09:32:58.004" endtime="20220705 09:32:58.004"/>
</return>
<msg timestamp="20220705 09:32:58.004" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 09:32:57.594" endtime="20220705 09:32:58.004"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 09:32:58.004" endtime="20220705 09:32:58.004"/>
</return>
<status status="PASS" starttime="20220705 09:32:57.592" endtime="20220705 09:32:58.005"/>
</kw>
<status status="PASS" starttime="20220705 09:32:57.592" endtime="20220705 09:32:58.005"/>
</kw>
<doc>Verify that a board's name can be updated through API</doc>
<tag>api</tag>
<tag>board.update</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220705 09:32:57.003" endtime="20220705 09:32:58.005"/>
</test>
<test id="s1-s1-s1-t3" name="DELETE A Board" line="27">
<kw name="Create A Board" library="Board">
<var>${response}</var>
<arg>NewBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 09:32:58.007" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 09:32:58.007" endtime="20220705 09:32:58.007"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 09:32:58.007" endtime="20220705 09:32:58.008"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 09:32:58.009" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220705 09:32:58.008" endtime="20220705 09:32:58.009"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 09:32:58.774" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 09:32:58.009" endtime="20220705 09:32:58.774"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 09:32:58.774" endtime="20220705 09:32:58.774"/>
</return>
<msg timestamp="20220705 09:32:58.774" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 09:32:58.006" endtime="20220705 09:32:58.774"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 09:32:58.775" endtime="20220705 09:32:58.775"/>
</return>
<msg timestamp="20220705 09:32:58.775" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 09:32:58.006" endtime="20220705 09:32:58.775"/>
</kw>
<kw name="Delete A Board" library="Board">
<arg>${response.json()}[id]</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 09:32:58.777" level="INFO">${url} = boards/62c4054a33efe17f0b427e8a</msg>
<status status="PASS" starttime="20220705 09:32:58.777" endtime="20220705 09:32:58.777"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 09:32:59.177" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 09:32:58.777" endtime="20220705 09:32:59.177"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 09:32:59.177" endtime="20220705 09:32:59.177"/>
</return>
<msg timestamp="20220705 09:32:59.177" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 09:32:58.776" endtime="20220705 09:32:59.177"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 09:32:59.177" endtime="20220705 09:32:59.177"/>
</return>
<status status="PASS" starttime="20220705 09:32:58.775" endtime="20220705 09:32:59.177"/>
</kw>
<kw name="Get A Board" library="Board">
<arg>${response.json()}[id]</arg>
<arg>status_code=404</arg>
<doc>Gets the Board with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 09:32:59.180" level="INFO">${url} = boards/62c4054a33efe17f0b427e8a</msg>
<status status="PASS" starttime="20220705 09:32:59.180" endtime="20220705 09:32:59.180"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 09:32:59.367" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220705 09:32:59.180" endtime="20220705 09:32:59.367"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 09:32:59.367" endtime="20220705 09:32:59.367"/>
</return>
<msg timestamp="20220705 09:32:59.367" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220705 09:32:59.179" endtime="20220705 09:32:59.367"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 09:32:59.368" endtime="20220705 09:32:59.368"/>
</return>
<status status="PASS" starttime="20220705 09:32:59.178" endtime="20220705 09:32:59.368"/>
</kw>
<doc>Verify that a board can be deleted through API</doc>
<tag>api</tag>
<tag>board.delete</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220705 09:32:58.005" endtime="20220705 09:32:59.368"/>
</test>
<test id="s1-s1-s1-t4" name="GET Information of A Board" line="34">
<kw name="Create A Board" library="Board">
<var>${response}</var>
<arg>BoardTest</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 09:32:59.371" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 09:32:59.371" endtime="20220705 09:32:59.371"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 09:32:59.371" endtime="20220705 09:32:59.371"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 09:32:59.372" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220705 09:32:59.371" endtime="20220705 09:32:59.372"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 09:32:59.633" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 09:32:59.372" endtime="20220705 09:32:59.633"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 09:32:59.633" endtime="20220705 09:32:59.633"/>
</return>
<msg timestamp="20220705 09:32:59.633" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 09:32:59.370" endtime="20220705 09:32:59.633"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 09:32:59.633" endtime="20220705 09:32:59.633"/>
</return>
<msg timestamp="20220705 09:32:59.634" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 09:32:59.369" endtime="20220705 09:32:59.634"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>board</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 09:32:59.634" endtime="20220705 09:32:59.640"/>
</kw>
<status status="PASS" starttime="20220705 09:32:59.634" endtime="20220705 09:32:59.640"/>
</kw>
<kw name="Get A Board" library="Board">
<var>${response2}</var>
<arg>${response.json()}[id]</arg>
<doc>Gets the Board with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 09:32:59.642" level="INFO">${url} = boards/62c4054bc047cd85ab52230e</msg>
<status status="PASS" starttime="20220705 09:32:59.642" endtime="20220705 09:32:59.642"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 09:32:59.785" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 09:32:59.643" endtime="20220705 09:32:59.785"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 09:32:59.785" endtime="20220705 09:32:59.786"/>
</return>
<msg timestamp="20220705 09:32:59.786" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 09:32:59.641" endtime="20220705 09:32:59.786"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 09:32:59.786" endtime="20220705 09:32:59.786"/>
</return>
<msg timestamp="20220705 09:32:59.787" level="INFO">${response2} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 09:32:59.640" endtime="20220705 09:32:59.787"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response2}</arg>
<arg>board</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 09:32:59.787" endtime="20220705 09:32:59.792"/>
</kw>
<status status="PASS" starttime="20220705 09:32:59.787" endtime="20220705 09:32:59.792"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${response2.json()}[name]</arg>
<arg>BoardTest</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220705 09:32:59.792" endtime="20220705 09:32:59.793"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${response.json()}[id]</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${response.json()}[id]</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 09:32:59.796" level="INFO">${url} = boards/62c4054bc047cd85ab52230e</msg>
<status status="PASS" starttime="20220705 09:32:59.795" endtime="20220705 09:32:59.796"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 09:33:00.311" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 09:32:59.796" endtime="20220705 09:33:00.311"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 09:33:00.311" endtime="20220705 09:33:00.311"/>
</return>
<msg timestamp="20220705 09:33:00.311" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 09:32:59.795" endtime="20220705 09:33:00.311"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 09:33:00.311" endtime="20220705 09:33:00.311"/>
</return>
<status status="PASS" starttime="20220705 09:32:59.794" endtime="20220705 09:33:00.312"/>
</kw>
<status status="PASS" starttime="20220705 09:32:59.793" endtime="20220705 09:33:00.312"/>
</kw>
<doc>Verify that a board's information can be accesed through API</doc>
<tag>api</tag>
<tag>board.get</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220705 09:32:59.369" endtime="20220705 09:33:00.312"/>
</test>
<test id="s1-s1-s1-t5" name="UPDATE a Board's description" line="45">
<kw name="Create A Board" library="Board">
<var>${response}</var>
<arg>NewBoardForTest</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 09:33:00.314" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 09:33:00.314" endtime="20220705 09:33:00.314"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 09:33:00.314" endtime="20220705 09:33:00.315"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 09:33:00.316" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220705 09:33:00.315" endtime="20220705 09:33:00.316"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 09:33:00.584" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 09:33:00.316" endtime="20220705 09:33:00.584"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 09:33:00.584" endtime="20220705 09:33:00.584"/>
</return>
<msg timestamp="20220705 09:33:00.584" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 09:33:00.313" endtime="20220705 09:33:00.584"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 09:33:00.584" endtime="20220705 09:33:00.584"/>
</return>
<msg timestamp="20220705 09:33:00.585" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 09:33:00.313" endtime="20220705 09:33:00.585"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>board</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 09:33:00.585" endtime="20220705 09:33:00.590"/>
</kw>
<status status="PASS" starttime="20220705 09:33:00.585" endtime="20220705 09:33:00.591"/>
</kw>
<kw name="Update A Board" library="Board">
<arg>${response.json()}[id]</arg>
<arg>desc</arg>
<arg>sampleDescription</arg>
<doc>Updates the board with the given ID
optional_args: name, desc, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 09:33:00.593" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 09:33:00.593" endtime="20220705 09:33:00.593"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 09:33:00.593" endtime="20220705 09:33:00.594"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 09:33:00.594" level="INFO">${url} = boards/62c4054cfd62ba5b5510afd0</msg>
<status status="PASS" starttime="20220705 09:33:00.594" endtime="20220705 09:33:00.594"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 09:33:00.777" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 09:33:00.595" endtime="20220705 09:33:00.777"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 09:33:00.777" endtime="20220705 09:33:00.777"/>
</return>
<msg timestamp="20220705 09:33:00.778" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 09:33:00.592" endtime="20220705 09:33:00.778"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 09:33:00.778" endtime="20220705 09:33:00.778"/>
</return>
<status status="PASS" starttime="20220705 09:33:00.591" endtime="20220705 09:33:00.778"/>
</kw>
<kw name="Get A Board" library="Board">
<var>${new_response}</var>
<arg>${response.json()}[id]</arg>
<doc>Gets the Board with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 09:33:00.780" level="INFO">${url} = boards/62c4054cfd62ba5b5510afd0</msg>
<status status="PASS" starttime="20220705 09:33:00.780" endtime="20220705 09:33:00.780"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 09:33:00.919" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 09:33:00.780" endtime="20220705 09:33:00.919"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 09:33:00.919" endtime="20220705 09:33:00.919"/>
</return>
<msg timestamp="20220705 09:33:00.919" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 09:33:00.779" endtime="20220705 09:33:00.919"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 09:33:00.919" endtime="20220705 09:33:00.920"/>
</return>
<msg timestamp="20220705 09:33:00.920" level="INFO">${new_response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 09:33:00.778" endtime="20220705 09:33:00.920"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${new_response.json()}[desc]</arg>
<arg>sampleDescription</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220705 09:33:00.920" endtime="20220705 09:33:00.921"/>
</kw>
<kw name="Update A Board" library="Board">
<arg>${response.json()}[id]</arg>
<arg>desc</arg>
<arg>updatedDescription</arg>
<doc>Updates the board with the given ID
optional_args: name, desc, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 09:33:00.923" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 09:33:00.923" endtime="20220705 09:33:00.923"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 09:33:00.923" endtime="20220705 09:33:00.923"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 09:33:00.924" level="INFO">${url} = boards/62c4054cfd62ba5b5510afd0</msg>
<status status="PASS" starttime="20220705 09:33:00.924" endtime="20220705 09:33:00.924"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 09:33:01.100" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 09:33:00.924" endtime="20220705 09:33:01.100"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 09:33:01.100" endtime="20220705 09:33:01.100"/>
</return>
<msg timestamp="20220705 09:33:01.100" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 09:33:00.922" endtime="20220705 09:33:01.100"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 09:33:01.100" endtime="20220705 09:33:01.100"/>
</return>
<status status="PASS" starttime="20220705 09:33:00.921" endtime="20220705 09:33:01.100"/>
</kw>
<kw name="Get A Board" library="Board">
<var>${new_response2}</var>
<arg>${response.json()}[id]</arg>
<doc>Gets the Board with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 09:33:01.103" level="INFO">${url} = boards/62c4054cfd62ba5b5510afd0</msg>
<status status="PASS" starttime="20220705 09:33:01.102" endtime="20220705 09:33:01.103"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 09:33:01.232" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 09:33:01.103" endtime="20220705 09:33:01.232"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 09:33:01.232" endtime="20220705 09:33:01.232"/>
</return>
<msg timestamp="20220705 09:33:01.233" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 09:33:01.102" endtime="20220705 09:33:01.233"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 09:33:01.233" endtime="20220705 09:33:01.233"/>
</return>
<msg timestamp="20220705 09:33:01.233" level="INFO">${new_response2} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 09:33:01.101" endtime="20220705 09:33:01.233"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${new_response2.json()}[desc]</arg>
<arg>updatedDescription</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220705 09:33:01.233" endtime="20220705 09:33:01.234"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${response.json()}[id]</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${response.json()}[id]</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 09:33:01.237" level="INFO">${url} = boards/62c4054cfd62ba5b5510afd0</msg>
<status status="PASS" starttime="20220705 09:33:01.236" endtime="20220705 09:33:01.237"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 09:33:01.688" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 09:33:01.237" endtime="20220705 09:33:01.688"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 09:33:01.688" endtime="20220705 09:33:01.688"/>
</return>
<msg timestamp="20220705 09:33:01.688" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 09:33:01.236" endtime="20220705 09:33:01.688"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 09:33:01.688" endtime="20220705 09:33:01.689"/>
</return>
<status status="PASS" starttime="20220705 09:33:01.235" endtime="20220705 09:33:01.689"/>
</kw>
<status status="PASS" starttime="20220705 09:33:01.235" endtime="20220705 09:33:01.689"/>
</kw>
<doc>Verify that a board's description can be updated through API</doc>
<tag>api</tag>
<tag>board.update</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220705 09:33:00.312" endtime="20220705 09:33:01.689"/>
</test>
<kw name="Delete All Sessions" library="request_own_library" type="TEARDOWN">
<status status="PASS" starttime="20220705 09:33:01.690" endtime="20220705 09:33:01.691"/>
</kw>
<doc>Example Test with Trello API Boards</doc>
<status status="PASS" starttime="20220705 09:32:56.001" endtime="20220705 09:33:01.692"/>
</suite>
<suite id="s1-s1-s2" name="Trello Api Cards Tests" source="/trello/api/trello_api_cards_tests.robot">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Create Trello Session</arg>
<arg>Setup Board And List</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Create Trello Session" library="TrelloAPI">
<doc>Creates a Trello Session</doc>
<kw name="Create Session" library="request_own_library">
<arg>${API_BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<status status="PASS" starttime="20220705 09:33:01.706" endtime="20220705 09:33:01.707"/>
</kw>
<status status="PASS" starttime="20220705 09:33:01.706" endtime="20220705 09:33:01.707"/>
</kw>
<kw name="Setup Board And List">
<doc>Create a board and save its ID and its first list's ID</doc>
<kw name="Create A Board" library="Board">
<var>${BOARD}</var>
<arg>TestBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 09:33:01.708" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 09:33:01.708" endtime="20220705 09:33:01.708"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 09:33:01.708" endtime="20220705 09:33:01.709"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 09:33:01.710" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220705 09:33:01.709" endtime="20220705 09:33:01.710"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 09:33:02.040" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 09:33:01.710" endtime="20220705 09:33:02.040"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 09:33:02.040" endtime="20220705 09:33:02.040"/>
</return>
<msg timestamp="20220705 09:33:02.040" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 09:33:01.707" endtime="20220705 09:33:02.040"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 09:33:02.040" endtime="20220705 09:33:02.040"/>
</return>
<msg timestamp="20220705 09:33:02.041" level="INFO">${BOARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 09:33:01.707" endtime="20220705 09:33:02.041"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_BOARD_ID}</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220705 09:33:02.042" level="INFO">${TEST_SUITE_BOARD_ID} = 62c4054d2b09fd556c66ac43</msg>
<status status="PASS" starttime="20220705 09:33:02.041" endtime="20220705 09:33:02.042"/>
</kw>
<kw name="Get Lists On A Board" library="Board">
<var>${LISTS}</var>
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Get all the lists in a board</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>lists_on_board</arg>
<arg>${id}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 09:33:02.043" level="INFO">${url} = boards/62c4054d2b09fd556c66ac43/lists/</msg>
<status status="PASS" starttime="20220705 09:33:02.043" endtime="20220705 09:33:02.043"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 09:33:02.179" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 09:33:02.043" endtime="20220705 09:33:02.179"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 09:33:02.179" endtime="20220705 09:33:02.180"/>
</return>
<msg timestamp="20220705 09:33:02.180" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 09:33:02.043" endtime="20220705 09:33:02.180"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 09:33:02.180" endtime="20220705 09:33:02.180"/>
</return>
<msg timestamp="20220705 09:33:02.180" level="INFO">${LISTS} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 09:33:02.042" endtime="20220705 09:33:02.180"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_LIST_ID}</arg>
<arg>${LISTS.json()}[0][id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220705 09:33:02.182" level="INFO">${TEST_SUITE_LIST_ID} = 62c4054d2b09fd556c66ac4a</msg>
<status status="PASS" starttime="20220705 09:33:02.181" endtime="20220705 09:33:02.182"/>
</kw>
<status status="PASS" starttime="20220705 09:33:01.707" endtime="20220705 09:33:02.182"/>
</kw>
<status status="PASS" starttime="20220705 09:33:01.705" endtime="20220705 09:33:02.182"/>
</kw>
<test id="s1-s1-s2-t1" name="Verify A Card Can Be Created" line="13">
<kw name="Create A Card" library="Card">
<var>${response}</var>
<arg>name</arg>
<arg>RFCard2</arg>
<doc>Creates a new card in the given list.
required_args: listId
optional_args: name, desc, pos, idCardSource, idLabels, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>@{optional_args}</arg>
<arg>idList</arg>
<arg>${idList}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 09:33:02.184" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 09:33:02.184" endtime="20220705 09:33:02.184"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 09:33:02.184" endtime="20220705 09:33:02.185"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 09:33:02.185" level="INFO">${url} = cards/</msg>
<status status="PASS" starttime="20220705 09:33:02.185" endtime="20220705 09:33:02.186"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 09:33:02.447" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 09:33:02.186" endtime="20220705 09:33:02.447"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 09:33:02.447" endtime="20220705 09:33:02.447"/>
</return>
<msg timestamp="20220705 09:33:02.447" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 09:33:02.183" endtime="20220705 09:33:02.447"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 09:33:02.447" endtime="20220705 09:33:02.447"/>
</return>
<msg timestamp="20220705 09:33:02.448" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 09:33:02.183" endtime="20220705 09:33:02.448"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>card</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 09:33:02.449" endtime="20220705 09:33:02.457"/>
</kw>
<status status="PASS" starttime="20220705 09:33:02.448" endtime="20220705 09:33:02.457"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 09:33:02.457" endtime="20220705 09:33:02.457"/>
</return>
<msg timestamp="20220705 09:33:02.458" level="INFO">${CARD_ID} = 62c4054ed7a3f932ee653c24</msg>
<status status="PASS" starttime="20220705 09:33:02.457" endtime="20220705 09:33:02.458"/>
</kw>
<kw name="Get A Card" library="Card">
<var>${response}</var>
<arg>${CARD_ID}</arg>
<doc>Gets the card with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 09:33:02.460" level="INFO">${url} = cards/62c4054ed7a3f932ee653c24</msg>
<status status="PASS" starttime="20220705 09:33:02.459" endtime="20220705 09:33:02.460"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 09:33:02.606" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 09:33:02.460" endtime="20220705 09:33:02.606"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 09:33:02.607" endtime="20220705 09:33:02.607"/>
</return>
<msg timestamp="20220705 09:33:02.607" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 09:33:02.459" endtime="20220705 09:33:02.607"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 09:33:02.607" endtime="20220705 09:33:02.607"/>
</return>
<msg timestamp="20220705 09:33:02.607" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 09:33:02.458" endtime="20220705 09:33:02.607"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_NAME}</var>
<arg>${response}</arg>
<arg>name</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 09:33:02.608" endtime="20220705 09:33:02.608"/>
</return>
<msg timestamp="20220705 09:33:02.609" level="INFO">${CARD_NAME} = RFCard2</msg>
<status status="PASS" starttime="20220705 09:33:02.608" endtime="20220705 09:33:02.609"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${CARD_NAME}</arg>
<arg>RFCard2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220705 09:33:02.609" endtime="20220705 09:33:02.610"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Card</arg>
<arg>${CARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Card" library="Card">
<arg>${CARD_ID}</arg>
<doc>Deletes the card with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 09:33:02.612" level="INFO">${url} = cards/62c4054ed7a3f932ee653c24</msg>
<status status="PASS" starttime="20220705 09:33:02.612" endtime="20220705 09:33:02.612"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 09:33:02.861" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 09:33:02.612" endtime="20220705 09:33:02.861"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 09:33:02.861" endtime="20220705 09:33:02.861"/>
</return>
<msg timestamp="20220705 09:33:02.861" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 09:33:02.611" endtime="20220705 09:33:02.861"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 09:33:02.861" endtime="20220705 09:33:02.861"/>
</return>
<status status="PASS" starttime="20220705 09:33:02.611" endtime="20220705 09:33:02.862"/>
</kw>
<status status="PASS" starttime="20220705 09:33:02.610" endtime="20220705 09:33:02.862"/>
</kw>
<doc>Verify that a card can be created through API</doc>
<tag>api</tag>
<tag>card.create</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220705 09:33:02.182" endtime="20220705 09:33:02.862"/>
</test>
<test id="s1-s1-s2-t2" name="Verify A Card Can Be Closed" line="24">
<kw name="Create A Card" library="Card">
<var>${response}</var>
<doc>Creates a new card in the given list.
required_args: listId
optional_args: name, desc, pos, idCardSource, idLabels, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>@{optional_args}</arg>
<arg>idList</arg>
<arg>${idList}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 09:33:02.865" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 09:33:02.864" endtime="20220705 09:33:02.865"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 09:33:02.865" endtime="20220705 09:33:02.865"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 09:33:02.866" level="INFO">${url} = cards/</msg>
<status status="PASS" starttime="20220705 09:33:02.865" endtime="20220705 09:33:02.866"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 09:33:03.096" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 09:33:02.866" endtime="20220705 09:33:03.096"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 09:33:03.096" endtime="20220705 09:33:03.096"/>
</return>
<msg timestamp="20220705 09:33:03.097" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 09:33:02.864" endtime="20220705 09:33:03.097"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 09:33:03.097" endtime="20220705 09:33:03.097"/>
</return>
<msg timestamp="20220705 09:33:03.097" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 09:33:02.863" endtime="20220705 09:33:03.097"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 09:33:03.098" endtime="20220705 09:33:03.098"/>
</return>
<msg timestamp="20220705 09:33:03.099" level="INFO">${CARD_ID} = 62c4054ea4a35f1290730c1f</msg>
<status status="PASS" starttime="20220705 09:33:03.097" endtime="20220705 09:33:03.099"/>
</kw>
<kw name="Archive A Card" library="Card">
<arg>${CARD_ID}</arg>
<doc>Modifies the card status to closed.</doc>
<kw name="Update A Card" library="Card">
<var>${response}</var>
<arg>${id}</arg>
<arg>closed</arg>
<arg>true</arg>
<arg>status_code=${status_code}</arg>
<doc>Updates the card with the given ID
optional_args: name, desc, closed, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<arg>status_code=${status_code}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 09:33:03.102" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 09:33:03.101" endtime="20220705 09:33:03.102"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 09:33:03.102" endtime="20220705 09:33:03.102"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 09:33:03.103" level="INFO">${url} = cards/62c4054ea4a35f1290730c1f</msg>
<status status="PASS" starttime="20220705 09:33:03.102" endtime="20220705 09:33:03.103"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 09:33:03.321" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 09:33:03.103" endtime="20220705 09:33:03.321"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 09:33:03.321" endtime="20220705 09:33:03.321"/>
</return>
<msg timestamp="20220705 09:33:03.321" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 09:33:03.101" endtime="20220705 09:33:03.321"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 09:33:03.321" endtime="20220705 09:33:03.321"/>
</return>
<msg timestamp="20220705 09:33:03.322" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 09:33:03.099" endtime="20220705 09:33:03.322"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 09:33:03.322" endtime="20220705 09:33:03.322"/>
</return>
<status status="PASS" starttime="20220705 09:33:03.099" endtime="20220705 09:33:03.322"/>
</kw>
<kw name="Get A Card" library="Card">
<var>${response}</var>
<arg>${CARD_ID}</arg>
<doc>Gets the card with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 09:33:03.324" level="INFO">${url} = cards/62c4054ea4a35f1290730c1f</msg>
<status status="PASS" starttime="20220705 09:33:03.323" endtime="20220705 09:33:03.324"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 09:33:03.470" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 09:33:03.324" endtime="20220705 09:33:03.470"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 09:33:03.470" endtime="20220705 09:33:03.470"/>
</return>
<msg timestamp="20220705 09:33:03.470" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 09:33:03.323" endtime="20220705 09:33:03.470"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 09:33:03.470" endtime="20220705 09:33:03.470"/>
</return>
<msg timestamp="20220705 09:33:03.471" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 09:33:03.322" endtime="20220705 09:33:03.471"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_CLOSED}</var>
<arg>${response}</arg>
<arg>closed</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 09:33:03.471" endtime="20220705 09:33:03.471"/>
</return>
<msg timestamp="20220705 09:33:03.473" level="INFO">${CARD_CLOSED} = True</msg>
<status status="PASS" starttime="20220705 09:33:03.471" endtime="20220705 09:33:03.473"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${CARD_CLOSED}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220705 09:33:03.473" endtime="20220705 09:33:03.473"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Card</arg>
<arg>${CARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Card" library="Card">
<arg>${CARD_ID}</arg>
<doc>Deletes the card with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 09:33:03.476" level="INFO">${url} = cards/62c4054ea4a35f1290730c1f</msg>
<status status="PASS" starttime="20220705 09:33:03.476" endtime="20220705 09:33:03.476"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 09:33:03.821" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 09:33:03.476" endtime="20220705 09:33:03.821"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 09:33:03.821" endtime="20220705 09:33:03.821"/>
</return>
<msg timestamp="20220705 09:33:03.821" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 09:33:03.475" endtime="20220705 09:33:03.821"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 09:33:03.821" endtime="20220705 09:33:03.821"/>
</return>
<status status="PASS" starttime="20220705 09:33:03.474" endtime="20220705 09:33:03.822"/>
</kw>
<status status="PASS" starttime="20220705 09:33:03.474" endtime="20220705 09:33:03.822"/>
</kw>
<doc>Verify that a card can be closed through API</doc>
<tag>api</tag>
<tag>card.close</tag>
<tag>regression</tag>
<status status="PASS" starttime="20220705 09:33:02.862" endtime="20220705 09:33:03.822"/>
</test>
<test id="s1-s1-s2-t3" name="Verify A Card Can Be Deleted" line="35">
<kw name="Create A Card" library="Card">
<var>${response}</var>
<doc>Creates a new card in the given list.
required_args: listId
optional_args: name, desc, pos, idCardSource, idLabels, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>@{optional_args}</arg>
<arg>idList</arg>
<arg>${idList}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 09:33:03.825" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 09:33:03.824" endtime="20220705 09:33:03.825"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 09:33:03.825" endtime="20220705 09:33:03.825"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 09:33:03.826" level="INFO">${url} = cards/</msg>
<status status="PASS" starttime="20220705 09:33:03.825" endtime="20220705 09:33:03.826"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 09:33:04.094" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 09:33:03.826" endtime="20220705 09:33:04.094"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 09:33:04.094" endtime="20220705 09:33:04.094"/>
</return>
<msg timestamp="20220705 09:33:04.095" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 09:33:03.823" endtime="20220705 09:33:04.095"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 09:33:04.095" endtime="20220705 09:33:04.095"/>
</return>
<msg timestamp="20220705 09:33:04.095" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 09:33:03.823" endtime="20220705 09:33:04.095"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 09:33:04.096" endtime="20220705 09:33:04.096"/>
</return>
<msg timestamp="20220705 09:33:04.097" level="INFO">${CARD_ID} = 62c4054fea610f36fcadd915</msg>
<status status="PASS" starttime="20220705 09:33:04.095" endtime="20220705 09:33:04.097"/>
</kw>
<kw name="Delete A Card" library="Card">
<var>${response}</var>
<arg>${CARD_ID}</arg>
<doc>Deletes the card with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 09:33:04.098" level="INFO">${url} = cards/62c4054fea610f36fcadd915</msg>
<status status="PASS" starttime="20220705 09:33:04.098" endtime="20220705 09:33:04.098"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 09:33:04.342" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 09:33:04.098" endtime="20220705 09:33:04.342"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 09:33:04.342" endtime="20220705 09:33:04.342"/>
</return>
<msg timestamp="20220705 09:33:04.343" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 09:33:04.097" endtime="20220705 09:33:04.343"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 09:33:04.343" endtime="20220705 09:33:04.343"/>
</return>
<msg timestamp="20220705 09:33:04.343" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 09:33:04.097" endtime="20220705 09:33:04.343"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>delete</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 09:33:04.344" endtime="20220705 09:33:04.346"/>
</kw>
<status status="PASS" starttime="20220705 09:33:04.344" endtime="20220705 09:33:04.347"/>
</kw>
<kw name="Get A Card" library="Card">
<arg>${CARD_ID}</arg>
<arg>status_code=404</arg>
<doc>Gets the card with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 09:33:04.348" level="INFO">${url} = cards/62c4054fea610f36fcadd915</msg>
<status status="PASS" starttime="20220705 09:33:04.348" endtime="20220705 09:33:04.348"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 09:33:04.473" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220705 09:33:04.348" endtime="20220705 09:33:04.473"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 09:33:04.473" endtime="20220705 09:33:04.473"/>
</return>
<msg timestamp="20220705 09:33:04.474" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220705 09:33:04.347" endtime="20220705 09:33:04.474"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 09:33:04.474" endtime="20220705 09:33:04.474"/>
</return>
<status status="PASS" starttime="20220705 09:33:04.347" endtime="20220705 09:33:04.474"/>
</kw>
<doc>Verify that a card can be deleted through API</doc>
<tag>api</tag>
<tag>card.delete</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220705 09:33:03.822" endtime="20220705 09:33:04.474"/>
</test>
<test id="s1-s1-s2-t4" name="Verify A Card Can Be Updated" line="44">
<kw name="Create A Card" library="Card">
<var>${response}</var>
<arg>name</arg>
<arg>RFCard4</arg>
<doc>Creates a new card in the given list.
required_args: listId
optional_args: name, desc, pos, idCardSource, idLabels, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>@{optional_args}</arg>
<arg>idList</arg>
<arg>${idList}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 09:33:04.478" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 09:33:04.477" endtime="20220705 09:33:04.478"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 09:33:04.478" endtime="20220705 09:33:04.478"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 09:33:04.479" level="INFO">${url} = cards/</msg>
<status status="PASS" starttime="20220705 09:33:04.478" endtime="20220705 09:33:04.479"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 09:33:04.710" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 09:33:04.479" endtime="20220705 09:33:04.710"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 09:33:04.710" endtime="20220705 09:33:04.711"/>
</return>
<msg timestamp="20220705 09:33:04.711" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 09:33:04.477" endtime="20220705 09:33:04.711"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 09:33:04.711" endtime="20220705 09:33:04.711"/>
</return>
<msg timestamp="20220705 09:33:04.711" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 09:33:04.476" endtime="20220705 09:33:04.711"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 09:33:04.712" endtime="20220705 09:33:04.712"/>
</return>
<msg timestamp="20220705 09:33:04.713" level="INFO">${CARD_ID} = 62c40550c536d5361b5a0c33</msg>
<status status="PASS" starttime="20220705 09:33:04.711" endtime="20220705 09:33:04.713"/>
</kw>
<kw name="Update A Card" library="Card">
<var>${response}</var>
<arg>${CARD_ID}</arg>
<arg>name</arg>
<arg>RFCard5</arg>
<arg>desc</arg>
<arg>Description</arg>
<doc>Updates the card with the given ID
optional_args: name, desc, closed, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<arg>status_code=${status_code}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 09:33:04.715" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 09:33:04.714" endtime="20220705 09:33:04.715"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 09:33:04.715" endtime="20220705 09:33:04.715"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 09:33:04.716" level="INFO">${url} = cards/62c40550c536d5361b5a0c33</msg>
<status status="PASS" starttime="20220705 09:33:04.715" endtime="20220705 09:33:04.716"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 09:33:04.939" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 09:33:04.716" endtime="20220705 09:33:04.939"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 09:33:04.939" endtime="20220705 09:33:04.939"/>
</return>
<msg timestamp="20220705 09:33:04.939" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 09:33:04.713" endtime="20220705 09:33:04.939"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 09:33:04.939" endtime="20220705 09:33:04.939"/>
</return>
<msg timestamp="20220705 09:33:04.940" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 09:33:04.713" endtime="20220705 09:33:04.940"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>card</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 09:33:04.940" endtime="20220705 09:33:04.947"/>
</kw>
<status status="PASS" starttime="20220705 09:33:04.940" endtime="20220705 09:33:04.947"/>
</kw>
<kw name="Get A Card" library="Card">
<var>${response}</var>
<arg>${CARD_ID}</arg>
<doc>Gets the card with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 09:33:04.949" level="INFO">${url} = cards/62c40550c536d5361b5a0c33</msg>
<status status="PASS" starttime="20220705 09:33:04.948" endtime="20220705 09:33:04.949"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 09:33:05.109" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 09:33:04.949" endtime="20220705 09:33:05.110"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 09:33:05.110" endtime="20220705 09:33:05.110"/>
</return>
<msg timestamp="20220705 09:33:05.110" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 09:33:04.948" endtime="20220705 09:33:05.110"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 09:33:05.110" endtime="20220705 09:33:05.110"/>
</return>
<msg timestamp="20220705 09:33:05.110" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 09:33:04.947" endtime="20220705 09:33:05.110"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_NAME}</var>
<arg>${response}</arg>
<arg>name</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 09:33:05.111" endtime="20220705 09:33:05.111"/>
</return>
<msg timestamp="20220705 09:33:05.112" level="INFO">${CARD_NAME} = RFCard5</msg>
<status status="PASS" starttime="20220705 09:33:05.111" endtime="20220705 09:33:05.112"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_DESC}</var>
<arg>${response}</arg>
<arg>desc</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 09:33:05.113" endtime="20220705 09:33:05.113"/>
</return>
<msg timestamp="20220705 09:33:05.114" level="INFO">${CARD_DESC} = Description</msg>
<status status="PASS" starttime="20220705 09:33:05.112" endtime="20220705 09:33:05.114"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${CARD_NAME}</arg>
<arg>RFCard5</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220705 09:33:05.114" endtime="20220705 09:33:05.115"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${CARD_DESC}</arg>
<arg>Description</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220705 09:33:05.115" endtime="20220705 09:33:05.115"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Card</arg>
<arg>${CARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Card" library="Card">
<arg>${CARD_ID}</arg>
<doc>Deletes the card with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 09:33:05.117" level="INFO">${url} = cards/62c40550c536d5361b5a0c33</msg>
<status status="PASS" starttime="20220705 09:33:05.117" endtime="20220705 09:33:05.118"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 09:33:05.372" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 09:33:05.118" endtime="20220705 09:33:05.372"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 09:33:05.372" endtime="20220705 09:33:05.372"/>
</return>
<msg timestamp="20220705 09:33:05.373" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 09:33:05.116" endtime="20220705 09:33:05.373"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 09:33:05.373" endtime="20220705 09:33:05.373"/>
</return>
<status status="PASS" starttime="20220705 09:33:05.116" endtime="20220705 09:33:05.373"/>
</kw>
<status status="PASS" starttime="20220705 09:33:05.115" endtime="20220705 09:33:05.373"/>
</kw>
<doc>Verify that a card's name and Description can be updated through API</doc>
<tag>api</tag>
<tag>card.update</tag>
<tag>regression</tag>
<status status="PASS" starttime="20220705 09:33:04.475" endtime="20220705 09:33:05.373"/>
</test>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Teardown Board</arg>
<arg>Delete All Sessions</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Teardown Board">
<doc>Delete the board created for this suite</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 09:33:05.377" level="INFO">${url} = boards/62c4054d2b09fd556c66ac43</msg>
<status status="PASS" starttime="20220705 09:33:05.377" endtime="20220705 09:33:05.377"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 09:33:06.338" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 09:33:05.378" endtime="20220705 09:33:06.338"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 09:33:06.338" endtime="20220705 09:33:06.338"/>
</return>
<msg timestamp="20220705 09:33:06.339" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 09:33:05.376" endtime="20220705 09:33:06.339"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 09:33:06.339" endtime="20220705 09:33:06.339"/>
</return>
<status status="PASS" starttime="20220705 09:33:05.375" endtime="20220705 09:33:06.339"/>
</kw>
<status status="PASS" starttime="20220705 09:33:05.375" endtime="20220705 09:33:06.339"/>
</kw>
<status status="PASS" starttime="20220705 09:33:05.375" endtime="20220705 09:33:06.339"/>
</kw>
<kw name="Delete All Sessions" library="request_own_library">
<status status="PASS" starttime="20220705 09:33:06.339" endtime="20220705 09:33:06.341"/>
</kw>
<status status="PASS" starttime="20220705 09:33:05.374" endtime="20220705 09:33:06.341"/>
</kw>
<doc>Example Test with Trello API Cards</doc>
<status status="PASS" starttime="20220705 09:33:01.693" endtime="20220705 09:33:06.341"/>
</suite>
<suite id="s1-s1-s3" name="Trello Api Checklists Tests" source="/trello/api/trello_api_checklists_tests.robot">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Create Trello Session</arg>
<arg>Setup Board, List And Card</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Create Trello Session" library="TrelloAPI">
<doc>Creates a Trello Session</doc>
<kw name="Create Session" library="request_own_library">
<arg>${API_BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<status status="PASS" starttime="20220705 09:33:06.355" endtime="20220705 09:33:06.355"/>
</kw>
<status status="PASS" starttime="20220705 09:33:06.354" endtime="20220705 09:33:06.355"/>
</kw>
<kw name="Setup Board, List And Card">
<doc>Create a board and save its ID and its first list's ID</doc>
<kw name="Create A Board" library="Board">
<var>${BOARD}</var>
<arg>TestBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 09:33:06.357" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 09:33:06.357" endtime="20220705 09:33:06.357"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 09:33:06.357" endtime="20220705 09:33:06.357"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 09:33:06.358" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220705 09:33:06.357" endtime="20220705 09:33:06.358"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 09:33:06.700" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 09:33:06.358" endtime="20220705 09:33:06.700"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 09:33:06.700" endtime="20220705 09:33:06.700"/>
</return>
<msg timestamp="20220705 09:33:06.701" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 09:33:06.356" endtime="20220705 09:33:06.701"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 09:33:06.701" endtime="20220705 09:33:06.701"/>
</return>
<msg timestamp="20220705 09:33:06.701" level="INFO">${BOARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 09:33:06.356" endtime="20220705 09:33:06.701"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_BOARD_ID}</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220705 09:33:06.702" level="INFO">${TEST_SUITE_BOARD_ID} = 62c40552c322664633156127</msg>
<status status="PASS" starttime="20220705 09:33:06.701" endtime="20220705 09:33:06.702"/>
</kw>
<kw name="Get Lists On A Board" library="Board">
<var>${LISTS}</var>
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Get all the lists in a board</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>lists_on_board</arg>
<arg>${id}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 09:33:06.704" level="INFO">${url} = boards/62c40552c322664633156127/lists/</msg>
<status status="PASS" starttime="20220705 09:33:06.704" endtime="20220705 09:33:06.704"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 09:33:06.845" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 09:33:06.704" endtime="20220705 09:33:06.845"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 09:33:06.845" endtime="20220705 09:33:06.845"/>
</return>
<msg timestamp="20220705 09:33:06.846" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 09:33:06.703" endtime="20220705 09:33:06.846"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 09:33:06.846" endtime="20220705 09:33:06.846"/>
</return>
<msg timestamp="20220705 09:33:06.846" level="INFO">${LISTS} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 09:33:06.702" endtime="20220705 09:33:06.846"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_LIST_ID}</arg>
<arg>${LISTS.json()}[0][id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220705 09:33:06.847" level="INFO">${TEST_SUITE_LIST_ID} = 62c40552c32266463315612e</msg>
<status status="PASS" starttime="20220705 09:33:06.846" endtime="20220705 09:33:06.847"/>
</kw>
<kw name="Create A Card" library="Card">
<var>${CARD}</var>
<arg>name</arg>
<arg>TestCard</arg>
<doc>Creates a new card in the given list.
required_args: listId
optional_args: name, desc, pos, idCardSource, idLabels, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>@{optional_args}</arg>
<arg>idList</arg>
<arg>${idList}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 09:33:06.849" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 09:33:06.849" endtime="20220705 09:33:06.849"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 09:33:06.849" endtime="20220705 09:33:06.850"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 09:33:06.851" level="INFO">${url} = cards/</msg>
<status status="PASS" starttime="20220705 09:33:06.850" endtime="20220705 09:33:06.851"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 09:33:07.184" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 09:33:06.851" endtime="20220705 09:33:07.184"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 09:33:07.184" endtime="20220705 09:33:07.184"/>
</return>
<msg timestamp="20220705 09:33:07.185" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 09:33:06.848" endtime="20220705 09:33:07.185"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 09:33:07.185" endtime="20220705 09:33:07.185"/>
</return>
<msg timestamp="20220705 09:33:07.185" level="INFO">${CARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 09:33:06.848" endtime="20220705 09:33:07.185"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_CARD_ID}</arg>
<arg>${CARD.json()}[id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220705 09:33:07.186" level="INFO">${TEST_SUITE_CARD_ID} = 62c40552b8b00f3fbe317800</msg>
<status status="PASS" starttime="20220705 09:33:07.185" endtime="20220705 09:33:07.186"/>
</kw>
<status status="PASS" starttime="20220705 09:33:06.355" endtime="20220705 09:33:07.187"/>
</kw>
<status status="PASS" starttime="20220705 09:33:06.354" endtime="20220705 09:33:07.187"/>
</kw>
<test id="s1-s1-s3-t1" name="Verify A Checklist Can Be Created" line="14">
<kw name="Create A Checklist" library="Checklist">
<var>${response}</var>
<arg>name</arg>
<arg>TestChecklist</arg>
<arg>idCard=${TEST_SUITE_CARD_ID}</arg>
<doc>Creates a new checklist in the given card.
required_args: idCard
optional_args: name, pos, idChecklistSource
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>@{optional_args}</arg>
<arg>idCard</arg>
<arg>${idCard}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 09:33:07.190" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 09:33:07.190" endtime="20220705 09:33:07.190"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 09:33:07.190" endtime="20220705 09:33:07.190"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 09:33:07.192" level="INFO">${url} = checklists/</msg>
<status status="PASS" starttime="20220705 09:33:07.191" endtime="20220705 09:33:07.192"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 09:33:07.395" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 09:33:07.192" endtime="20220705 09:33:07.396"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 09:33:07.396" endtime="20220705 09:33:07.396"/>
</return>
<msg timestamp="20220705 09:33:07.396" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 09:33:07.189" endtime="20220705 09:33:07.396"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 09:33:07.396" endtime="20220705 09:33:07.396"/>
</return>
<msg timestamp="20220705 09:33:07.396" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 09:33:07.188" endtime="20220705 09:33:07.396"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${checklist_id}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 09:33:07.398" endtime="20220705 09:33:07.398"/>
</return>
<msg timestamp="20220705 09:33:07.399" level="INFO">${checklist_id} = 62c40553b5ddfc0de117fd26</msg>
<status status="PASS" starttime="20220705 09:33:07.397" endtime="20220705 09:33:07.399"/>
</kw>
<kw name="Get A Checklist" library="Checklist">
<var>${response}</var>
<arg>${checklist_id}</arg>
<doc>Gets the checklist with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 09:33:07.401" level="INFO">${url} = checklists/62c40553b5ddfc0de117fd26</msg>
<status status="PASS" starttime="20220705 09:33:07.401" endtime="20220705 09:33:07.401"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 09:33:07.550" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 09:33:07.401" endtime="20220705 09:33:07.550"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 09:33:07.550" endtime="20220705 09:33:07.550"/>
</return>
<msg timestamp="20220705 09:33:07.551" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 09:33:07.400" endtime="20220705 09:33:07.551"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 09:33:07.551" endtime="20220705 09:33:07.551"/>
</return>
<msg timestamp="20220705 09:33:07.551" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 09:33:07.399" endtime="20220705 09:33:07.551"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${checklist_name}</var>
<arg>${response}</arg>
<arg>name</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 09:33:07.552" endtime="20220705 09:33:07.552"/>
</return>
<msg timestamp="20220705 09:33:07.553" level="INFO">${checklist_name} = TestChecklist</msg>
<status status="PASS" starttime="20220705 09:33:07.551" endtime="20220705 09:33:07.553"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${checklist_name}</arg>
<arg>TestChecklist</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220705 09:33:07.553" endtime="20220705 09:33:07.553"/>
</kw>
<kw name="Delete A Checklist" library="Checklist" type="TEARDOWN">
<arg>${checklist_id}</arg>
<doc>Deletes the checklist with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 09:33:07.555" level="INFO">${url} = checklists/62c40553b5ddfc0de117fd26</msg>
<status status="PASS" starttime="20220705 09:33:07.555" endtime="20220705 09:33:07.555"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 09:33:07.778" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 09:33:07.555" endtime="20220705 09:33:07.778"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 09:33:07.779" endtime="20220705 09:33:07.779"/>
</return>
<msg timestamp="20220705 09:33:07.779" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 09:33:07.554" endtime="20220705 09:33:07.779"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 09:33:07.779" endtime="20220705 09:33:07.779"/>
</return>
<status status="PASS" starttime="20220705 09:33:07.553" endtime="20220705 09:33:07.780"/>
</kw>
<doc>Verify that a checklist can be created through API</doc>
<tag>api</tag>
<tag>checklist.create</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220705 09:33:07.187" endtime="20220705 09:33:07.780"/>
</test>
<test id="s1-s1-s3-t2" name="Verify A Checklist Can Be Deleted" line="24">
<kw name="Create A Checklist" library="Checklist">
<var>${response}</var>
<arg>name</arg>
<arg>TestChecklist</arg>
<arg>idCard=${TEST_SUITE_CARD_ID}</arg>
<doc>Creates a new checklist in the given card.
required_args: idCard
optional_args: name, pos, idChecklistSource
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>@{optional_args}</arg>
<arg>idCard</arg>
<arg>${idCard}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 09:33:07.784" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 09:33:07.784" endtime="20220705 09:33:07.784"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 09:33:07.784" endtime="20220705 09:33:07.785"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 09:33:07.786" level="INFO">${url} = checklists/</msg>
<status status="PASS" starttime="20220705 09:33:07.785" endtime="20220705 09:33:07.786"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 09:33:07.987" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 09:33:07.786" endtime="20220705 09:33:07.987"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 09:33:07.987" endtime="20220705 09:33:07.987"/>
</return>
<msg timestamp="20220705 09:33:07.987" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 09:33:07.783" endtime="20220705 09:33:07.987"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 09:33:07.987" endtime="20220705 09:33:07.987"/>
</return>
<msg timestamp="20220705 09:33:07.988" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 09:33:07.782" endtime="20220705 09:33:07.988"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${checklist_id}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 09:33:07.988" endtime="20220705 09:33:07.988"/>
</return>
<msg timestamp="20220705 09:33:07.990" level="INFO">${checklist_id} = 62c40553fc4195080b57978c</msg>
<status status="PASS" starttime="20220705 09:33:07.988" endtime="20220705 09:33:07.990"/>
</kw>
<kw name="Delete A Checklist" library="Checklist">
<var>${response}</var>
<arg>${checklist_id}</arg>
<doc>Deletes the checklist with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 09:33:07.991" level="INFO">${url} = checklists/62c40553fc4195080b57978c</msg>
<status status="PASS" starttime="20220705 09:33:07.991" endtime="20220705 09:33:07.991"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 09:33:08.180" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 09:33:07.991" endtime="20220705 09:33:08.180"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 09:33:08.181" endtime="20220705 09:33:08.181"/>
</return>
<msg timestamp="20220705 09:33:08.181" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 09:33:07.990" endtime="20220705 09:33:08.181"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 09:33:08.181" endtime="20220705 09:33:08.181"/>
</return>
<msg timestamp="20220705 09:33:08.181" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 09:33:07.990" endtime="20220705 09:33:08.181"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>delete</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 09:33:08.182" endtime="20220705 09:33:08.184"/>
</kw>
<status status="PASS" starttime="20220705 09:33:08.182" endtime="20220705 09:33:08.185"/>
</kw>
<kw name="Get A Checklist" library="Checklist">
<arg>${checklist_id}</arg>
<arg>status_code=404</arg>
<doc>Gets the checklist with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 09:33:08.187" level="INFO">${url} = checklists/62c40553fc4195080b57978c</msg>
<status status="PASS" starttime="20220705 09:33:08.186" endtime="20220705 09:33:08.187"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 09:33:08.309" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220705 09:33:08.187" endtime="20220705 09:33:08.309"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 09:33:08.309" endtime="20220705 09:33:08.310"/>
</return>
<msg timestamp="20220705 09:33:08.310" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220705 09:33:08.185" endtime="20220705 09:33:08.310"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 09:33:08.310" endtime="20220705 09:33:08.310"/>
</return>
<status status="PASS" starttime="20220705 09:33:08.185" endtime="20220705 09:33:08.310"/>
</kw>
<doc>Verify that a checklist can be deleted through API</doc>
<tag>api</tag>
<tag>checklist.delete</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220705 09:33:07.780" endtime="20220705 09:33:08.310"/>
</test>
<test id="s1-s1-s3-t3" name="Verify A Checklist Can Be Updated" line="33">
<kw name="Create A Checklist" library="Checklist">
<var>${response}</var>
<arg>name</arg>
<arg>TestChecklist</arg>
<arg>idCard=${TEST_SUITE_CARD_ID}</arg>
<doc>Creates a new checklist in the given card.
required_args: idCard
optional_args: name, pos, idChecklistSource
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>@{optional_args}</arg>
<arg>idCard</arg>
<arg>${idCard}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 09:33:08.316" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 09:33:08.313" endtime="20220705 09:33:08.316"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 09:33:08.316" endtime="20220705 09:33:08.316"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 09:33:08.317" level="INFO">${url} = checklists/</msg>
<status status="PASS" starttime="20220705 09:33:08.316" endtime="20220705 09:33:08.317"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 09:33:08.520" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 09:33:08.317" endtime="20220705 09:33:08.520"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 09:33:08.520" endtime="20220705 09:33:08.520"/>
</return>
<msg timestamp="20220705 09:33:08.521" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 09:33:08.313" endtime="20220705 09:33:08.521"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 09:33:08.521" endtime="20220705 09:33:08.521"/>
</return>
<msg timestamp="20220705 09:33:08.521" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 09:33:08.312" endtime="20220705 09:33:08.521"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${checklist_id}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 09:33:08.522" endtime="20220705 09:33:08.522"/>
</return>
<msg timestamp="20220705 09:33:08.523" level="INFO">${checklist_id} = 62c40554e3fbd025c9f8a97c</msg>
<status status="PASS" starttime="20220705 09:33:08.521" endtime="20220705 09:33:08.523"/>
</kw>
<kw name="Update A Checklist" library="Checklist">
<var>${response}</var>
<arg>${checklist_id}</arg>
<arg>name</arg>
<arg>TestChecklist2</arg>
<doc>Updates the checklist with the given ID
optional_args: name, pos
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<arg>status_code=${status_code}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 09:33:08.524" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 09:33:08.524" endtime="20220705 09:33:08.524"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 09:33:08.524" endtime="20220705 09:33:08.525"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 09:33:08.525" level="INFO">${url} = checklists/62c40554e3fbd025c9f8a97c</msg>
<status status="PASS" starttime="20220705 09:33:08.525" endtime="20220705 09:33:08.525"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 09:33:08.699" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 09:33:08.525" endtime="20220705 09:33:08.699"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 09:33:08.699" endtime="20220705 09:33:08.699"/>
</return>
<msg timestamp="20220705 09:33:08.700" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 09:33:08.523" endtime="20220705 09:33:08.700"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 09:33:08.700" endtime="20220705 09:33:08.700"/>
</return>
<msg timestamp="20220705 09:33:08.700" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 09:33:08.523" endtime="20220705 09:33:08.700"/>
</kw>
<kw name="Get A Checklist" library="Checklist">
<var>${response}</var>
<arg>${checklist_id}</arg>
<doc>Gets the checklist with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 09:33:08.702" level="INFO">${url} = checklists/62c40554e3fbd025c9f8a97c</msg>
<status status="PASS" starttime="20220705 09:33:08.702" endtime="20220705 09:33:08.702"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 09:33:08.846" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 09:33:08.702" endtime="20220705 09:33:08.846"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 09:33:08.846" endtime="20220705 09:33:08.846"/>
</return>
<msg timestamp="20220705 09:33:08.846" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 09:33:08.701" endtime="20220705 09:33:08.846"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 09:33:08.846" endtime="20220705 09:33:08.847"/>
</return>
<msg timestamp="20220705 09:33:08.847" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 09:33:08.700" endtime="20220705 09:33:08.847"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${checklist_name}</var>
<arg>${response}</arg>
<arg>name</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 09:33:08.847" endtime="20220705 09:33:08.847"/>
</return>
<msg timestamp="20220705 09:33:08.848" level="INFO">${checklist_name} = TestChecklist2</msg>
<status status="PASS" starttime="20220705 09:33:08.847" endtime="20220705 09:33:08.848"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${checklist_name}</arg>
<arg>TestChecklist2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220705 09:33:08.848" endtime="20220705 09:33:08.849"/>
</kw>
<kw name="Delete A Checklist" library="Checklist" type="TEARDOWN">
<arg>${checklist_id}</arg>
<doc>Deletes the checklist with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 09:33:08.864" level="INFO">${url} = checklists/62c40554e3fbd025c9f8a97c</msg>
<status status="PASS" starttime="20220705 09:33:08.863" endtime="20220705 09:33:08.864"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 09:33:09.049" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 09:33:08.864" endtime="20220705 09:33:09.049"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 09:33:09.049" endtime="20220705 09:33:09.049"/>
</return>
<msg timestamp="20220705 09:33:09.050" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 09:33:08.862" endtime="20220705 09:33:09.050"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 09:33:09.050" endtime="20220705 09:33:09.050"/>
</return>
<status status="PASS" starttime="20220705 09:33:08.849" endtime="20220705 09:33:09.050"/>
</kw>
<doc>Verify that a checklist's name can be updated through API</doc>
<tag>api</tag>
<tag>checklist.update</tag>
<tag>regression</tag>
<status status="PASS" starttime="20220705 09:33:08.311" endtime="20220705 09:33:09.050"/>
</test>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Teardown Board</arg>
<arg>Delete All Sessions</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Teardown Board">
<doc>Delete the board created for this suite</doc>
<kw name="Delete A Board" library="Board">
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 09:33:09.054" level="INFO">${url} = boards/62c40552c322664633156127</msg>
<status status="PASS" starttime="20220705 09:33:09.054" endtime="20220705 09:33:09.054"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 09:33:09.531" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 09:33:09.054" endtime="20220705 09:33:09.531"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 09:33:09.532" endtime="20220705 09:33:09.532"/>
</return>
<msg timestamp="20220705 09:33:09.532" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 09:33:09.053" endtime="20220705 09:33:09.532"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 09:33:09.532" endtime="20220705 09:33:09.532"/>
</return>
<status status="PASS" starttime="20220705 09:33:09.052" endtime="20220705 09:33:09.532"/>
</kw>
<status status="PASS" starttime="20220705 09:33:09.052" endtime="20220705 09:33:09.533"/>
</kw>
<kw name="Delete All Sessions" library="request_own_library">
<status status="PASS" starttime="20220705 09:33:09.533" endtime="20220705 09:33:09.534"/>
</kw>
<status status="PASS" starttime="20220705 09:33:09.052" endtime="20220705 09:33:09.534"/>
</kw>
<doc>Example Test with Trello API Checklists</doc>
<status status="PASS" starttime="20220705 09:33:06.343" endtime="20220705 09:33:09.534"/>
</suite>
<suite id="s1-s1-s4" name="Trello Api Labels Tests" source="/trello/api/trello_api_labels_tests.robot">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Create Trello Session</arg>
<arg>Setup Board And List</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Create Trello Session" library="TrelloAPI">
<doc>Creates a Trello Session</doc>
<kw name="Create Session" library="request_own_library">
<arg>${API_BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<status status="PASS" starttime="20220705 09:33:09.551" endtime="20220705 09:33:09.551"/>
</kw>
<status status="PASS" starttime="20220705 09:33:09.550" endtime="20220705 09:33:09.551"/>
</kw>
<kw name="Setup Board And List">
<doc>Create a board and save its ID and its first list's ID</doc>
<kw name="Create A Board" library="Board">
<var>${BOARD}</var>
<arg>TestBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 09:33:09.553" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 09:33:09.553" endtime="20220705 09:33:09.553"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 09:33:09.553" endtime="20220705 09:33:09.554"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 09:33:09.555" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220705 09:33:09.554" endtime="20220705 09:33:09.555"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 09:33:09.891" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 09:33:09.555" endtime="20220705 09:33:09.891"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 09:33:09.892" endtime="20220705 09:33:09.892"/>
</return>
<msg timestamp="20220705 09:33:09.892" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 09:33:09.552" endtime="20220705 09:33:09.892"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 09:33:09.892" endtime="20220705 09:33:09.892"/>
</return>
<msg timestamp="20220705 09:33:09.892" level="INFO">${BOARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 09:33:09.552" endtime="20220705 09:33:09.892"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_BOARD_ID}</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220705 09:33:09.894" level="INFO">${TEST_SUITE_BOARD_ID} = 62c405554e6ec9455de04133</msg>
<status status="PASS" starttime="20220705 09:33:09.893" endtime="20220705 09:33:09.894"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${LISTS}</var>
<arg>boards/${TEST_SUITE_BOARD_ID}/lists</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 09:33:10.027" level="INFO">${LISTS} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 09:33:09.894" endtime="20220705 09:33:10.027"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_LIST_ID}</arg>
<arg>${LISTS.json()}[0][id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220705 09:33:10.028" level="INFO">${TEST_SUITE_LIST_ID} = 62c405554e6ec9455de0413a</msg>
<status status="PASS" starttime="20220705 09:33:10.027" endtime="20220705 09:33:10.028"/>
</kw>
<status status="PASS" starttime="20220705 09:33:09.551" endtime="20220705 09:33:10.029"/>
</kw>
<status status="PASS" starttime="20220705 09:33:09.550" endtime="20220705 09:33:10.029"/>
</kw>
<test id="s1-s1-s4-t1" name="Create and get label on board" line="14">
<kw name="Create A Label" library="Label">
<var>${response}</var>
<arg>name</arg>
<arg>label2</arg>
<arg>color</arg>
<arg>yellow</arg>
<doc>Creates a new label in the given board.
required_args: idBoard
optional_args: name, color
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>idBoard</arg>
<arg>${idBoard}</arg>
<arg>@{optional_args}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 09:33:10.031" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 09:33:10.031" endtime="20220705 09:33:10.031"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 09:33:10.032" endtime="20220705 09:33:10.032"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 09:33:10.033" level="INFO">${url} = labels/</msg>
<status status="PASS" starttime="20220705 09:33:10.032" endtime="20220705 09:33:10.033"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 09:33:10.206" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 09:33:10.033" endtime="20220705 09:33:10.206"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 09:33:10.206" endtime="20220705 09:33:10.206"/>
</return>
<msg timestamp="20220705 09:33:10.207" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 09:33:10.031" endtime="20220705 09:33:10.207"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 09:33:10.207" endtime="20220705 09:33:10.207"/>
</return>
<msg timestamp="20220705 09:33:10.207" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 09:33:10.030" endtime="20220705 09:33:10.207"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>label</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 09:33:10.208" endtime="20220705 09:33:10.210"/>
</kw>
<status status="PASS" starttime="20220705 09:33:10.207" endtime="20220705 09:33:10.210"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${LABEL_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 09:33:10.211" endtime="20220705 09:33:10.211"/>
</return>
<msg timestamp="20220705 09:33:10.212" level="INFO">${LABEL_ID} = 62c40556b2ef4128daa07b20</msg>
<status status="PASS" starttime="20220705 09:33:10.211" endtime="20220705 09:33:10.212"/>
</kw>
<kw name="Get A Label" library="Label">
<var>${response}</var>
<arg>${LABEL_ID}</arg>
<doc>Gets the label with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 09:33:10.213" level="INFO">${url} = labels/62c40556b2ef4128daa07b20</msg>
<status status="PASS" starttime="20220705 09:33:10.213" endtime="20220705 09:33:10.214"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 09:33:10.358" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 09:33:10.214" endtime="20220705 09:33:10.358"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 09:33:10.358" endtime="20220705 09:33:10.358"/>
</return>
<msg timestamp="20220705 09:33:10.358" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 09:33:10.212" endtime="20220705 09:33:10.358"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 09:33:10.358" endtime="20220705 09:33:10.358"/>
</return>
<msg timestamp="20220705 09:33:10.359" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 09:33:10.212" endtime="20220705 09:33:10.359"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${LABEL_COLOR}</var>
<arg>${response}</arg>
<arg>color</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 09:33:10.359" endtime="20220705 09:33:10.359"/>
</return>
<msg timestamp="20220705 09:33:10.360" level="INFO">${LABEL_COLOR} = yellow</msg>
<status status="PASS" starttime="20220705 09:33:10.359" endtime="20220705 09:33:10.360"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${LABEL_NAME}</var>
<arg>${response}</arg>
<arg>name</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 09:33:10.361" endtime="20220705 09:33:10.361"/>
</return>
<msg timestamp="20220705 09:33:10.362" level="INFO">${LABEL_NAME} = label2</msg>
<status status="PASS" starttime="20220705 09:33:10.360" endtime="20220705 09:33:10.362"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${LABEL_COLOR}</arg>
<arg>yellow</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220705 09:33:10.362" endtime="20220705 09:33:10.362"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${LABEL_NAME}</arg>
<arg>label2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220705 09:33:10.362" endtime="20220705 09:33:10.363"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Label</arg>
<arg>${LABEL_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Label" library="Label">
<arg>${LABEL_ID}</arg>
<doc>Deletes the label with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 09:33:10.365" level="INFO">${url} = labels/62c40556b2ef4128daa07b20</msg>
<status status="PASS" starttime="20220705 09:33:10.365" endtime="20220705 09:33:10.365"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 09:33:10.560" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 09:33:10.365" endtime="20220705 09:33:10.560"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 09:33:10.560" endtime="20220705 09:33:10.560"/>
</return>
<msg timestamp="20220705 09:33:10.560" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 09:33:10.364" endtime="20220705 09:33:10.560"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 09:33:10.560" endtime="20220705 09:33:10.560"/>
</return>
<status status="PASS" starttime="20220705 09:33:10.364" endtime="20220705 09:33:10.561"/>
</kw>
<status status="PASS" starttime="20220705 09:33:10.363" endtime="20220705 09:33:10.561"/>
</kw>
<doc>Verify that a label can be created through API</doc>
<tag>api</tag>
<tag>label.create</tag>
<tag>label.get</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220705 09:33:10.029" endtime="20220705 09:33:10.561"/>
</test>
<test id="s1-s1-s4-t2" name="Update label on board" line="28">
<kw name="Create A Label" library="Label">
<var>${response}</var>
<arg>name</arg>
<arg>label2</arg>
<arg>color</arg>
<arg>yellow</arg>
<doc>Creates a new label in the given board.
required_args: idBoard
optional_args: name, color
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>idBoard</arg>
<arg>${idBoard}</arg>
<arg>@{optional_args}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 09:33:10.565" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 09:33:10.564" endtime="20220705 09:33:10.565"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 09:33:10.565" endtime="20220705 09:33:10.565"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 09:33:10.567" level="INFO">${url} = labels/</msg>
<status status="PASS" starttime="20220705 09:33:10.566" endtime="20220705 09:33:10.567"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 09:33:10.760" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 09:33:10.567" endtime="20220705 09:33:10.760"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 09:33:10.760" endtime="20220705 09:33:10.760"/>
</return>
<msg timestamp="20220705 09:33:10.761" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 09:33:10.564" endtime="20220705 09:33:10.761"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 09:33:10.761" endtime="20220705 09:33:10.761"/>
</return>
<msg timestamp="20220705 09:33:10.761" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 09:33:10.563" endtime="20220705 09:33:10.761"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>label</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 09:33:10.762" endtime="20220705 09:33:10.764"/>
</kw>
<status status="PASS" starttime="20220705 09:33:10.761" endtime="20220705 09:33:10.765"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${LABEL_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 09:33:10.765" endtime="20220705 09:33:10.765"/>
</return>
<msg timestamp="20220705 09:33:10.766" level="INFO">${LABEL_ID} = 62c405563a47ec7c9b354d9c</msg>
<status status="PASS" starttime="20220705 09:33:10.765" endtime="20220705 09:33:10.766"/>
</kw>
<kw name="Update A Label" library="Label">
<var>${new_response}</var>
<arg>${LABEL_ID}</arg>
<arg>name</arg>
<arg>label3</arg>
<arg>color</arg>
<arg>orange</arg>
<doc>Updates the label with the given ID
optional_args: name, color
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 09:33:10.768" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 09:33:10.767" endtime="20220705 09:33:10.768"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 09:33:10.768" endtime="20220705 09:33:10.768"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 09:33:10.769" level="INFO">${url} = labels/62c405563a47ec7c9b354d9c</msg>
<status status="PASS" starttime="20220705 09:33:10.768" endtime="20220705 09:33:10.769"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 09:33:10.973" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 09:33:10.769" endtime="20220705 09:33:10.974"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 09:33:10.974" endtime="20220705 09:33:10.974"/>
</return>
<msg timestamp="20220705 09:33:10.974" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 09:33:10.767" endtime="20220705 09:33:10.974"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 09:33:10.974" endtime="20220705 09:33:10.974"/>
</return>
<msg timestamp="20220705 09:33:10.974" level="INFO">${new_response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 09:33:10.766" endtime="20220705 09:33:10.975"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${NEW_LABEL_COLOR}</var>
<arg>${new_response}</arg>
<arg>color</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 09:33:10.975" endtime="20220705 09:33:10.975"/>
</return>
<msg timestamp="20220705 09:33:10.976" level="INFO">${NEW_LABEL_COLOR} = orange</msg>
<status status="PASS" starttime="20220705 09:33:10.975" endtime="20220705 09:33:10.976"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${NEW_LABEL_NAME}</var>
<arg>${new_response}</arg>
<arg>name</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 09:33:10.977" endtime="20220705 09:33:10.977"/>
</return>
<msg timestamp="20220705 09:33:10.978" level="INFO">${NEW_LABEL_NAME} = label3</msg>
<status status="PASS" starttime="20220705 09:33:10.977" endtime="20220705 09:33:10.978"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${NEW_LABEL_COLOR}</arg>
<arg>orange</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220705 09:33:10.978" endtime="20220705 09:33:10.978"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${NEW_LABEL_NAME}</arg>
<arg>label3</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220705 09:33:10.978" endtime="20220705 09:33:10.979"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Label</arg>
<arg>${LABEL_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Label" library="Label">
<arg>${LABEL_ID}</arg>
<doc>Deletes the label with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 09:33:10.981" level="INFO">${url} = labels/62c405563a47ec7c9b354d9c</msg>
<status status="PASS" starttime="20220705 09:33:10.980" endtime="20220705 09:33:10.981"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 09:33:11.167" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 09:33:10.981" endtime="20220705 09:33:11.167"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 09:33:11.167" endtime="20220705 09:33:11.167"/>
</return>
<msg timestamp="20220705 09:33:11.168" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 09:33:10.980" endtime="20220705 09:33:11.168"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 09:33:11.168" endtime="20220705 09:33:11.168"/>
</return>
<status status="PASS" starttime="20220705 09:33:10.979" endtime="20220705 09:33:11.168"/>
</kw>
<status status="PASS" starttime="20220705 09:33:10.979" endtime="20220705 09:33:11.168"/>
</kw>
<doc>Verify that a label's name and color can be updated through API</doc>
<tag>api</tag>
<tag>label.update</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220705 09:33:10.562" endtime="20220705 09:33:11.168"/>
</test>
<test id="s1-s1-s4-t3" name="Delete label on board" line="41">
<kw name="Create A Label" library="Label">
<var>${response}</var>
<arg>name</arg>
<arg>label2</arg>
<arg>color</arg>
<arg>yellow</arg>
<doc>Creates a new label in the given board.
required_args: idBoard
optional_args: name, color
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>idBoard</arg>
<arg>${idBoard}</arg>
<arg>@{optional_args}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 09:33:11.172" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 09:33:11.171" endtime="20220705 09:33:11.172"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 09:33:11.172" endtime="20220705 09:33:11.172"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 09:33:11.173" level="INFO">${url} = labels/</msg>
<status status="PASS" starttime="20220705 09:33:11.172" endtime="20220705 09:33:11.173"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 09:33:11.437" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 09:33:11.173" endtime="20220705 09:33:11.437"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 09:33:11.437" endtime="20220705 09:33:11.437"/>
</return>
<msg timestamp="20220705 09:33:11.437" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 09:33:11.171" endtime="20220705 09:33:11.437"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 09:33:11.437" endtime="20220705 09:33:11.438"/>
</return>
<msg timestamp="20220705 09:33:11.438" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 09:33:11.170" endtime="20220705 09:33:11.438"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${LABEL_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 09:33:11.438" endtime="20220705 09:33:11.438"/>
</return>
<msg timestamp="20220705 09:33:11.439" level="INFO">${LABEL_ID} = 62c40557269ade69312147aa</msg>
<status status="PASS" starttime="20220705 09:33:11.438" endtime="20220705 09:33:11.439"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Label</arg>
<arg>${LABEL_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Label" library="Label">
<arg>${LABEL_ID}</arg>
<doc>Deletes the label with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 09:33:11.441" level="INFO">${url} = labels/62c40557269ade69312147aa</msg>
<status status="PASS" starttime="20220705 09:33:11.441" endtime="20220705 09:33:11.441"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 09:33:11.637" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 09:33:11.442" endtime="20220705 09:33:11.637"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 09:33:11.637" endtime="20220705 09:33:11.637"/>
</return>
<msg timestamp="20220705 09:33:11.637" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 09:33:11.440" endtime="20220705 09:33:11.637"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 09:33:11.637" endtime="20220705 09:33:11.638"/>
</return>
<status status="PASS" starttime="20220705 09:33:11.440" endtime="20220705 09:33:11.638"/>
</kw>
<status status="PASS" starttime="20220705 09:33:11.439" endtime="20220705 09:33:11.638"/>
</kw>
<kw name="Get A Label" library="Label">
<arg>${LABEL_ID}</arg>
<arg>status_code=404</arg>
<doc>Gets the label with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 09:33:11.640" level="INFO">${url} = labels/62c40557269ade69312147aa</msg>
<status status="PASS" starttime="20220705 09:33:11.639" endtime="20220705 09:33:11.640"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 09:33:11.763" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220705 09:33:11.640" endtime="20220705 09:33:11.763"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 09:33:11.763" endtime="20220705 09:33:11.763"/>
</return>
<msg timestamp="20220705 09:33:11.764" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220705 09:33:11.639" endtime="20220705 09:33:11.764"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 09:33:11.764" endtime="20220705 09:33:11.764"/>
</return>
<status status="PASS" starttime="20220705 09:33:11.638" endtime="20220705 09:33:11.764"/>
</kw>
<doc>Verify that a label can be deleted through API</doc>
<tag>api</tag>
<tag>label.delete</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220705 09:33:11.169" endtime="20220705 09:33:11.764"/>
</test>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Teardown Board</arg>
<arg>Delete All Sessions</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Teardown Board">
<doc>Delete the board created for this session.</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 09:33:11.768" level="INFO">${url} = boards/62c405554e6ec9455de04133</msg>
<status status="PASS" starttime="20220705 09:33:11.768" endtime="20220705 09:33:11.768"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 09:33:12.173" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 09:33:11.768" endtime="20220705 09:33:12.173"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 09:33:12.173" endtime="20220705 09:33:12.173"/>
</return>
<msg timestamp="20220705 09:33:12.174" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 09:33:11.767" endtime="20220705 09:33:12.174"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 09:33:12.174" endtime="20220705 09:33:12.174"/>
</return>
<status status="PASS" starttime="20220705 09:33:11.767" endtime="20220705 09:33:12.174"/>
</kw>
<status status="PASS" starttime="20220705 09:33:11.767" endtime="20220705 09:33:12.174"/>
</kw>
<status status="PASS" starttime="20220705 09:33:11.766" endtime="20220705 09:33:12.174"/>
</kw>
<kw name="Delete All Sessions" library="request_own_library">
<status status="PASS" starttime="20220705 09:33:12.174" endtime="20220705 09:33:12.176"/>
</kw>
<status status="PASS" starttime="20220705 09:33:11.766" endtime="20220705 09:33:12.176"/>
</kw>
<doc>Example Test with Trello API Cards</doc>
<status status="PASS" starttime="20220705 09:33:09.536" endtime="20220705 09:33:12.176"/>
</suite>
<suite id="s1-s1-s5" name="Trello Api Lists Tests" source="/trello/api/trello_api_lists_tests.robot">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Create Trello Session</arg>
<arg>Setup Board</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Create Trello Session" library="TrelloAPI">
<doc>Creates a Trello Session</doc>
<kw name="Create Session" library="request_own_library">
<arg>${API_BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<status status="PASS" starttime="20220705 09:33:12.189" endtime="20220705 09:33:12.190"/>
</kw>
<status status="PASS" starttime="20220705 09:33:12.189" endtime="20220705 09:33:12.190"/>
</kw>
<kw name="Setup Board">
<doc>Create a board and save it's id for the suite</doc>
<kw name="Create A Board" library="Board">
<var>${BOARD}</var>
<arg>TestBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 09:33:12.191" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 09:33:12.191" endtime="20220705 09:33:12.192"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 09:33:12.192" endtime="20220705 09:33:12.192"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 09:33:12.193" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220705 09:33:12.192" endtime="20220705 09:33:12.193"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 09:33:12.579" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 09:33:12.194" endtime="20220705 09:33:12.579"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 09:33:12.579" endtime="20220705 09:33:12.579"/>
</return>
<msg timestamp="20220705 09:33:12.579" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 09:33:12.190" endtime="20220705 09:33:12.580"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 09:33:12.580" endtime="20220705 09:33:12.580"/>
</return>
<msg timestamp="20220705 09:33:12.580" level="INFO">${BOARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 09:33:12.190" endtime="20220705 09:33:12.580"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Set Suite Variable</arg>
<arg>\${TEST_SUITE_BOARD_ID}</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_BOARD_ID}</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220705 09:33:12.581" level="INFO">${TEST_SUITE_BOARD_ID} = 62c405580fc23e864de4322b</msg>
<status status="PASS" starttime="20220705 09:33:12.581" endtime="20220705 09:33:12.582"/>
</kw>
<status status="PASS" starttime="20220705 09:33:12.580" endtime="20220705 09:33:12.582"/>
</kw>
<status status="PASS" starttime="20220705 09:33:12.190" endtime="20220705 09:33:12.582"/>
</kw>
<status status="PASS" starttime="20220705 09:33:12.188" endtime="20220705 09:33:12.582"/>
</kw>
<test id="s1-s1-s5-t1" name="CREATE a list" line="13">
<kw name="Create A List" library="List">
<var>${response}</var>
<arg>NewList</arg>
<doc>Creates a new List
board id
name the list will have
optional_args: idListSource, pos, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>list</arg>
<arg>name</arg>
<arg>${name}</arg>
<arg>idBoard</arg>
<arg>${idBoard}</arg>
<arg>@{optional_args}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 09:33:12.584" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 09:33:12.584" endtime="20220705 09:33:12.584"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 09:33:12.584" endtime="20220705 09:33:12.585"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 09:33:12.585" level="INFO">${url} = lists/</msg>
<status status="PASS" starttime="20220705 09:33:12.585" endtime="20220705 09:33:12.585"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 09:33:12.769" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 09:33:12.586" endtime="20220705 09:33:12.770"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 09:33:12.770" endtime="20220705 09:33:12.770"/>
</return>
<msg timestamp="20220705 09:33:12.770" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 09:33:12.583" endtime="20220705 09:33:12.770"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 09:33:12.770" endtime="20220705 09:33:12.770"/>
</return>
<msg timestamp="20220705 09:33:12.770" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 09:33:12.583" endtime="20220705 09:33:12.770"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>list</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 09:33:12.771" endtime="20220705 09:33:12.773"/>
</kw>
<status status="PASS" starttime="20220705 09:33:12.771" endtime="20220705 09:33:12.774"/>
</kw>
<doc>Verify that a list can be created through API</doc>
<tag>api</tag>
<tag>list.create</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220705 09:33:12.582" endtime="20220705 09:33:12.774"/>
</test>
<test id="s1-s1-s5-t2" name="UPDATE a list" line="19">
<kw name="Create A List" library="List">
<var>${response}</var>
<arg>NewList</arg>
<doc>Creates a new List
board id
name the list will have
optional_args: idListSource, pos, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>list</arg>
<arg>name</arg>
<arg>${name}</arg>
<arg>idBoard</arg>
<arg>${idBoard}</arg>
<arg>@{optional_args}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 09:33:12.776" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 09:33:12.776" endtime="20220705 09:33:12.776"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 09:33:12.776" endtime="20220705 09:33:12.777"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 09:33:12.778" level="INFO">${url} = lists/</msg>
<status status="PASS" starttime="20220705 09:33:12.777" endtime="20220705 09:33:12.778"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 09:33:12.959" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 09:33:12.778" endtime="20220705 09:33:12.959"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 09:33:12.960" endtime="20220705 09:33:12.960"/>
</return>
<msg timestamp="20220705 09:33:12.960" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 09:33:12.775" endtime="20220705 09:33:12.960"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 09:33:12.960" endtime="20220705 09:33:12.960"/>
</return>
<msg timestamp="20220705 09:33:12.960" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 09:33:12.775" endtime="20220705 09:33:12.960"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>list</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 09:33:12.961" endtime="20220705 09:33:12.963"/>
</kw>
<status status="PASS" starttime="20220705 09:33:12.961" endtime="20220705 09:33:12.963"/>
</kw>
<kw name="Update A List" library="List">
<arg>${response.json()}[id]</arg>
<arg>name</arg>
<arg>NewName</arg>
<doc>Updates the board with the given ID
optional_args: name, idListSource, pos, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>list</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 09:33:12.966" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 09:33:12.965" endtime="20220705 09:33:12.966"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 09:33:12.966" endtime="20220705 09:33:12.966"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 09:33:12.967" level="INFO">${url} = lists/62c40558652c1b8207547492</msg>
<status status="PASS" starttime="20220705 09:33:12.967" endtime="20220705 09:33:12.967"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 09:33:13.155" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 09:33:12.967" endtime="20220705 09:33:13.155"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 09:33:13.155" endtime="20220705 09:33:13.155"/>
</return>
<msg timestamp="20220705 09:33:13.155" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 09:33:12.964" endtime="20220705 09:33:13.155"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 09:33:13.155" endtime="20220705 09:33:13.155"/>
</return>
<status status="PASS" starttime="20220705 09:33:12.963" endtime="20220705 09:33:13.156"/>
</kw>
<kw name="Get A List" library="List">
<var>${new_response}</var>
<arg>${response.json()}[id]</arg>
<doc>Gets the List with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>list</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 09:33:13.158" level="INFO">${url} = lists/62c40558652c1b8207547492</msg>
<status status="PASS" starttime="20220705 09:33:13.158" endtime="20220705 09:33:13.158"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 09:33:13.290" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 09:33:13.159" endtime="20220705 09:33:13.290"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 09:33:13.290" endtime="20220705 09:33:13.290"/>
</return>
<msg timestamp="20220705 09:33:13.291" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 09:33:13.157" endtime="20220705 09:33:13.291"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 09:33:13.291" endtime="20220705 09:33:13.291"/>
</return>
<msg timestamp="20220705 09:33:13.291" level="INFO">${new_response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 09:33:13.156" endtime="20220705 09:33:13.291"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${new_response}</arg>
<arg>list</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 09:33:13.292" endtime="20220705 09:33:13.294"/>
</kw>
<status status="PASS" starttime="20220705 09:33:13.291" endtime="20220705 09:33:13.294"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${new_response.json()}[name]</arg>
<arg>NewName</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220705 09:33:13.294" endtime="20220705 09:33:13.295"/>
</kw>
<doc>Verify that a lists name can be updated through API</doc>
<tag>api</tag>
<tag>list.update</tag>
<tag>regression</tag>
<status status="PASS" starttime="20220705 09:33:12.774" endtime="20220705 09:33:13.295"/>
</test>
<test id="s1-s1-s5-t3" name="ARCHIVE A list" line="29">
<kw name="Create A List" library="List">
<var>${response}</var>
<arg>NewList</arg>
<doc>Creates a new List
board id
name the list will have
optional_args: idListSource, pos, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>list</arg>
<arg>name</arg>
<arg>${name}</arg>
<arg>idBoard</arg>
<arg>${idBoard}</arg>
<arg>@{optional_args}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 09:33:13.298" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 09:33:13.297" endtime="20220705 09:33:13.298"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 09:33:13.298" endtime="20220705 09:33:13.300"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 09:33:13.301" level="INFO">${url} = lists/</msg>
<status status="PASS" starttime="20220705 09:33:13.300" endtime="20220705 09:33:13.301"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 09:33:13.485" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 09:33:13.301" endtime="20220705 09:33:13.485"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 09:33:13.485" endtime="20220705 09:33:13.485"/>
</return>
<msg timestamp="20220705 09:33:13.485" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 09:33:13.297" endtime="20220705 09:33:13.485"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 09:33:13.485" endtime="20220705 09:33:13.486"/>
</return>
<msg timestamp="20220705 09:33:13.486" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 09:33:13.296" endtime="20220705 09:33:13.486"/>
</kw>
<kw name="Archive A List" library="List">
<arg>${response.json()}[id]</arg>
<doc>Deletes the list with the given ID</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>archive_list</arg>
<arg>${id}</arg>
<arg>value</arg>
<arg>true</arg>
<arg>status_code=${status_code}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 09:33:13.489" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 09:33:13.488" endtime="20220705 09:33:13.489"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 09:33:13.489" endtime="20220705 09:33:13.489"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 09:33:13.490" level="INFO">${url} = lists/62c40559c3328a2fcb9e2d32/closed</msg>
<status status="PASS" starttime="20220705 09:33:13.490" endtime="20220705 09:33:13.490"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 09:33:13.671" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 09:33:13.490" endtime="20220705 09:33:13.671"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 09:33:13.671" endtime="20220705 09:33:13.671"/>
</return>
<msg timestamp="20220705 09:33:13.671" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 09:33:13.487" endtime="20220705 09:33:13.671"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 09:33:13.671" endtime="20220705 09:33:13.671"/>
</return>
<status status="PASS" starttime="20220705 09:33:13.486" endtime="20220705 09:33:13.672"/>
</kw>
<kw name="Get A List" library="List">
<var>${new_response}</var>
<arg>${response.json()}[id]</arg>
<doc>Gets the List with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>list</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 09:33:13.674" level="INFO">${url} = lists/62c40559c3328a2fcb9e2d32</msg>
<status status="PASS" starttime="20220705 09:33:13.673" endtime="20220705 09:33:13.674"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 09:33:13.811" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 09:33:13.674" endtime="20220705 09:33:13.811"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 09:33:13.811" endtime="20220705 09:33:13.811"/>
</return>
<msg timestamp="20220705 09:33:13.811" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 09:33:13.673" endtime="20220705 09:33:13.811"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 09:33:13.811" endtime="20220705 09:33:13.812"/>
</return>
<msg timestamp="20220705 09:33:13.812" level="INFO">${new_response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 09:33:13.672" endtime="20220705 09:33:13.812"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${new_response.json()}[closed]</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220705 09:33:13.812" endtime="20220705 09:33:13.813"/>
</kw>
<doc>Verify that a list can be archived through API</doc>
<tag>api</tag>
<tag>list.archive</tag>
<tag>regression</tag>
<status status="PASS" starttime="20220705 09:33:13.296" endtime="20220705 09:33:13.813"/>
</test>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Teardown Board</arg>
<arg>Delete All Sessions</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Teardown Board">
<doc>Delete the board created for this suite.</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 09:33:13.818" level="INFO">${url} = boards/62c405580fc23e864de4322b</msg>
<status status="PASS" starttime="20220705 09:33:13.817" endtime="20220705 09:33:13.818"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 09:33:14.221" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 09:33:13.818" endtime="20220705 09:33:14.221"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 09:33:14.221" endtime="20220705 09:33:14.221"/>
</return>
<msg timestamp="20220705 09:33:14.221" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 09:33:13.816" endtime="20220705 09:33:14.222"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 09:33:14.222" endtime="20220705 09:33:14.222"/>
</return>
<status status="PASS" starttime="20220705 09:33:13.815" endtime="20220705 09:33:14.222"/>
</kw>
<status status="PASS" starttime="20220705 09:33:13.815" endtime="20220705 09:33:14.222"/>
</kw>
<status status="PASS" starttime="20220705 09:33:13.815" endtime="20220705 09:33:14.222"/>
</kw>
<kw name="Delete All Sessions" library="request_own_library">
<status status="PASS" starttime="20220705 09:33:14.222" endtime="20220705 09:33:14.224"/>
</kw>
<status status="PASS" starttime="20220705 09:33:13.814" endtime="20220705 09:33:14.224"/>
</kw>
<doc>Example Test with Trello API lists</doc>
<status status="PASS" starttime="20220705 09:33:12.178" endtime="20220705 09:33:14.224"/>
</suite>
<status status="PASS" starttime="20220705 09:32:55.998" endtime="20220705 09:33:14.226"/>
</suite>
<status status="PASS" starttime="20220705 09:32:55.972" endtime="20220705 09:33:14.231"/>
</suite>
<statistics>
<total>
<stat pass="18" fail="0" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="18" fail="0" skip="0">api</stat>
<stat pass="1" fail="0" skip="0">board.create</stat>
<stat pass="1" fail="0" skip="0">board.delete</stat>
<stat pass="1" fail="0" skip="0">board.get</stat>
<stat pass="2" fail="0" skip="0">board.update</stat>
<stat pass="1" fail="0" skip="0">card.close</stat>
<stat pass="1" fail="0" skip="0">card.create</stat>
<stat pass="1" fail="0" skip="0">card.delete</stat>
<stat pass="1" fail="0" skip="0">card.update</stat>
<stat pass="1" fail="0" skip="0">checklist.create</stat>
<stat pass="1" fail="0" skip="0">checklist.delete</stat>
<stat pass="1" fail="0" skip="0">checklist.update</stat>
<stat pass="1" fail="0" skip="0">label.create</stat>
<stat pass="1" fail="0" skip="0">label.delete</stat>
<stat pass="1" fail="0" skip="0">label.get</stat>
<stat pass="1" fail="0" skip="0">label.update</stat>
<stat pass="1" fail="0" skip="0">list.archive</stat>
<stat pass="1" fail="0" skip="0">list.create</stat>
<stat pass="1" fail="0" skip="0">list.update</stat>
<stat pass="5" fail="0" skip="0">regression</stat>
<stat pass="13" fail="0" skip="0">smoke</stat>
</tag>
<suite>
<stat pass="18" fail="0" skip="0" id="s1" name="Trello">Trello</stat>
<stat pass="18" fail="0" skip="0" id="s1-s1" name="Api">Trello.Api</stat>
<stat pass="5" fail="0" skip="0" id="s1-s1-s1" name="Trello Api Boards Tests">Trello.Api.Trello Api Boards Tests</stat>
<stat pass="4" fail="0" skip="0" id="s1-s1-s2" name="Trello Api Cards Tests">Trello.Api.Trello Api Cards Tests</stat>
<stat pass="3" fail="0" skip="0" id="s1-s1-s3" name="Trello Api Checklists Tests">Trello.Api.Trello Api Checklists Tests</stat>
<stat pass="3" fail="0" skip="0" id="s1-s1-s4" name="Trello Api Labels Tests">Trello.Api.Trello Api Labels Tests</stat>
<stat pass="3" fail="0" skip="0" id="s1-s1-s5" name="Trello Api Lists Tests">Trello.Api.Trello Api Lists Tests</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
