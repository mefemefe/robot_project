<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 5.0.1 (Python 3.10.5 on linux)" generated="20220705 13:00:02.605" rpa="false" schemaversion="3">
<suite id="s1" name="Trello" source="/trello">
<suite id="s1-s1" name="Api" source="/trello/api">
<suite id="s1-s1-s1" name="Trello Api Boards Tests" source="/trello/api/trello_api_boards_tests.robot">
<kw name="Create Trello Session" library="TrelloAPI" type="SETUP">
<doc>Creates a Trello Session</doc>
<kw name="Create Session" library="request_own_library">
<arg>${API_BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<status status="PASS" starttime="20220705 13:00:02.737" endtime="20220705 13:00:02.737"/>
</kw>
<status status="PASS" starttime="20220705 13:00:02.736" endtime="20220705 13:00:02.737"/>
</kw>
<test id="s1-s1-s1-t1" name="CREATE a board" line="9">
<kw name="Create A Board" library="Board">
<var>${response}</var>
<arg>NewBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 13:00:02.739" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 13:00:02.739" endtime="20220705 13:00:02.739"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 13:00:02.739" endtime="20220705 13:00:02.740"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 13:00:02.740" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220705 13:00:02.740" endtime="20220705 13:00:02.740"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 13:00:03.033" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 13:00:02.740" endtime="20220705 13:00:03.033"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 13:00:03.033" endtime="20220705 13:00:03.033"/>
</return>
<msg timestamp="20220705 13:00:03.034" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 13:00:02.738" endtime="20220705 13:00:03.034"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 13:00:03.034" endtime="20220705 13:00:03.034"/>
</return>
<msg timestamp="20220705 13:00:03.034" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 13:00:02.738" endtime="20220705 13:00:03.034"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>board</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 13:00:03.035" endtime="20220705 13:00:03.041"/>
</kw>
<status status="PASS" starttime="20220705 13:00:03.034" endtime="20220705 13:00:03.041"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${response.json()}[id]</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${response.json()}[id]</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 13:00:03.043" level="INFO">${url} = boards/62c435d2ec2d813fccd27f5a</msg>
<status status="PASS" starttime="20220705 13:00:03.043" endtime="20220705 13:00:03.043"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 13:00:03.463" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 13:00:03.043" endtime="20220705 13:00:03.463"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 13:00:03.463" endtime="20220705 13:00:03.463"/>
</return>
<msg timestamp="20220705 13:00:03.463" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 13:00:03.042" endtime="20220705 13:00:03.463"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 13:00:03.463" endtime="20220705 13:00:03.463"/>
</return>
<status status="PASS" starttime="20220705 13:00:03.042" endtime="20220705 13:00:03.463"/>
</kw>
<status status="PASS" starttime="20220705 13:00:03.041" endtime="20220705 13:00:03.464"/>
</kw>
<doc>Verify that a board can be create through API</doc>
<tag>api</tag>
<tag>board.create</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220705 13:00:02.737" endtime="20220705 13:00:03.464"/>
</test>
<test id="s1-s1-s1-t2" name="UPDATE a Board's name" line="16">
<kw name="Create A Board" library="Board">
<var>${response}</var>
<arg>NewBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 13:00:03.466" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 13:00:03.466" endtime="20220705 13:00:03.466"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 13:00:03.466" endtime="20220705 13:00:03.467"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 13:00:03.467" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220705 13:00:03.467" endtime="20220705 13:00:03.467"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 13:00:03.715" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 13:00:03.468" endtime="20220705 13:00:03.715"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 13:00:03.715" endtime="20220705 13:00:03.715"/>
</return>
<msg timestamp="20220705 13:00:03.715" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 13:00:03.465" endtime="20220705 13:00:03.715"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 13:00:03.715" endtime="20220705 13:00:03.715"/>
</return>
<msg timestamp="20220705 13:00:03.716" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 13:00:03.465" endtime="20220705 13:00:03.716"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>board</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 13:00:03.716" endtime="20220705 13:00:03.721"/>
</kw>
<status status="PASS" starttime="20220705 13:00:03.716" endtime="20220705 13:00:03.721"/>
</kw>
<kw name="Update A Board" library="Board">
<arg>${response.json()}[id]</arg>
<arg>name</arg>
<arg>NewName</arg>
<doc>Updates the board with the given ID
optional_args: name, desc, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 13:00:03.723" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 13:00:03.723" endtime="20220705 13:00:03.723"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 13:00:03.723" endtime="20220705 13:00:03.723"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 13:00:03.724" level="INFO">${url} = boards/62c435d3381faf827425b7f7</msg>
<status status="PASS" starttime="20220705 13:00:03.723" endtime="20220705 13:00:03.724"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 13:00:03.888" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 13:00:03.724" endtime="20220705 13:00:03.888"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 13:00:03.889" endtime="20220705 13:00:03.889"/>
</return>
<msg timestamp="20220705 13:00:03.889" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 13:00:03.722" endtime="20220705 13:00:03.889"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 13:00:03.889" endtime="20220705 13:00:03.889"/>
</return>
<status status="PASS" starttime="20220705 13:00:03.721" endtime="20220705 13:00:03.889"/>
</kw>
<kw name="Get A Board" library="Board">
<var>${new_response}</var>
<arg>${response.json()}[id]</arg>
<doc>Gets the Board with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 13:00:03.892" level="INFO">${url} = boards/62c435d3381faf827425b7f7</msg>
<status status="PASS" starttime="20220705 13:00:03.891" endtime="20220705 13:00:03.892"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 13:00:03.997" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 13:00:03.892" endtime="20220705 13:00:03.997"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 13:00:03.997" endtime="20220705 13:00:03.997"/>
</return>
<msg timestamp="20220705 13:00:03.998" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 13:00:03.891" endtime="20220705 13:00:03.998"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 13:00:03.998" endtime="20220705 13:00:03.998"/>
</return>
<msg timestamp="20220705 13:00:03.998" level="INFO">${new_response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 13:00:03.889" endtime="20220705 13:00:03.998"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${new_response}</arg>
<arg>board</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 13:00:03.999" endtime="20220705 13:00:04.004"/>
</kw>
<status status="PASS" starttime="20220705 13:00:03.998" endtime="20220705 13:00:04.004"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${new_response.json()}[name]</arg>
<arg>NewName</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220705 13:00:04.004" endtime="20220705 13:00:04.005"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${response.json()}[id]</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${response.json()}[id]</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 13:00:04.007" level="INFO">${url} = boards/62c435d3381faf827425b7f7</msg>
<status status="PASS" starttime="20220705 13:00:04.006" endtime="20220705 13:00:04.007"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 13:00:04.467" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 13:00:04.007" endtime="20220705 13:00:04.467"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 13:00:04.467" endtime="20220705 13:00:04.467"/>
</return>
<msg timestamp="20220705 13:00:04.467" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 13:00:04.006" endtime="20220705 13:00:04.467"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 13:00:04.467" endtime="20220705 13:00:04.467"/>
</return>
<status status="PASS" starttime="20220705 13:00:04.005" endtime="20220705 13:00:04.468"/>
</kw>
<status status="PASS" starttime="20220705 13:00:04.005" endtime="20220705 13:00:04.468"/>
</kw>
<doc>Verify that a board's name can be updated through API</doc>
<tag>api</tag>
<tag>board.update</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220705 13:00:03.464" endtime="20220705 13:00:04.468"/>
</test>
<test id="s1-s1-s1-t3" name="DELETE A Board" line="27">
<kw name="Create A Board" library="Board">
<var>${response}</var>
<arg>NewBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 13:00:04.470" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 13:00:04.470" endtime="20220705 13:00:04.470"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 13:00:04.470" endtime="20220705 13:00:04.470"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 13:00:04.471" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220705 13:00:04.470" endtime="20220705 13:00:04.471"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 13:00:04.773" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 13:00:04.471" endtime="20220705 13:00:04.773"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 13:00:04.773" endtime="20220705 13:00:04.774"/>
</return>
<msg timestamp="20220705 13:00:04.774" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 13:00:04.469" endtime="20220705 13:00:04.774"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 13:00:04.774" endtime="20220705 13:00:04.774"/>
</return>
<msg timestamp="20220705 13:00:04.774" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 13:00:04.469" endtime="20220705 13:00:04.774"/>
</kw>
<kw name="Delete A Board" library="Board">
<arg>${response.json()}[id]</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 13:00:04.776" level="INFO">${url} = boards/62c435d41da73c275c8916fd</msg>
<status status="PASS" starttime="20220705 13:00:04.776" endtime="20220705 13:00:04.776"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 13:00:05.180" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 13:00:04.776" endtime="20220705 13:00:05.180"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 13:00:05.180" endtime="20220705 13:00:05.180"/>
</return>
<msg timestamp="20220705 13:00:05.180" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 13:00:04.775" endtime="20220705 13:00:05.180"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 13:00:05.180" endtime="20220705 13:00:05.180"/>
</return>
<status status="PASS" starttime="20220705 13:00:04.774" endtime="20220705 13:00:05.181"/>
</kw>
<kw name="Get A Board" library="Board">
<arg>${response.json()}[id]</arg>
<arg>status_code=404</arg>
<doc>Gets the Board with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 13:00:05.182" level="INFO">${url} = boards/62c435d41da73c275c8916fd</msg>
<status status="PASS" starttime="20220705 13:00:05.182" endtime="20220705 13:00:05.182"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 13:00:05.275" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220705 13:00:05.183" endtime="20220705 13:00:05.275"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 13:00:05.275" endtime="20220705 13:00:05.275"/>
</return>
<msg timestamp="20220705 13:00:05.275" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220705 13:00:05.182" endtime="20220705 13:00:05.275"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 13:00:05.276" endtime="20220705 13:00:05.276"/>
</return>
<status status="PASS" starttime="20220705 13:00:05.181" endtime="20220705 13:00:05.276"/>
</kw>
<doc>Verify that a board can be deleted through API</doc>
<tag>api</tag>
<tag>board.delete</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220705 13:00:04.468" endtime="20220705 13:00:05.276"/>
</test>
<test id="s1-s1-s1-t4" name="GET Information of A Board" line="34">
<kw name="Create A Board" library="Board">
<var>${response}</var>
<arg>BoardTest</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 13:00:05.279" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 13:00:05.278" endtime="20220705 13:00:05.279"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 13:00:05.279" endtime="20220705 13:00:05.279"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 13:00:05.280" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220705 13:00:05.279" endtime="20220705 13:00:05.280"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 13:00:05.723" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 13:00:05.280" endtime="20220705 13:00:05.724"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 13:00:05.724" endtime="20220705 13:00:05.724"/>
</return>
<msg timestamp="20220705 13:00:05.724" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 13:00:05.278" endtime="20220705 13:00:05.724"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 13:00:05.724" endtime="20220705 13:00:05.724"/>
</return>
<msg timestamp="20220705 13:00:05.724" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 13:00:05.277" endtime="20220705 13:00:05.724"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>board</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 13:00:05.725" endtime="20220705 13:00:05.730"/>
</kw>
<status status="PASS" starttime="20220705 13:00:05.725" endtime="20220705 13:00:05.730"/>
</kw>
<kw name="Get A Board" library="Board">
<var>${response2}</var>
<arg>${response.json()}[id]</arg>
<doc>Gets the Board with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 13:00:05.732" level="INFO">${url} = boards/62c435d5d1f5a91476d805fd</msg>
<status status="PASS" starttime="20220705 13:00:05.731" endtime="20220705 13:00:05.732"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 13:00:05.836" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 13:00:05.732" endtime="20220705 13:00:05.836"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 13:00:05.836" endtime="20220705 13:00:05.836"/>
</return>
<msg timestamp="20220705 13:00:05.837" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 13:00:05.731" endtime="20220705 13:00:05.837"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 13:00:05.837" endtime="20220705 13:00:05.837"/>
</return>
<msg timestamp="20220705 13:00:05.837" level="INFO">${response2} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 13:00:05.730" endtime="20220705 13:00:05.837"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response2}</arg>
<arg>board</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 13:00:05.838" endtime="20220705 13:00:05.842"/>
</kw>
<status status="PASS" starttime="20220705 13:00:05.837" endtime="20220705 13:00:05.842"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${response2.json()}[name]</arg>
<arg>BoardTest</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220705 13:00:05.842" endtime="20220705 13:00:05.843"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${response.json()}[id]</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${response.json()}[id]</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 13:00:05.845" level="INFO">${url} = boards/62c435d5d1f5a91476d805fd</msg>
<status status="PASS" starttime="20220705 13:00:05.844" endtime="20220705 13:00:05.845"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 13:00:06.266" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 13:00:05.845" endtime="20220705 13:00:06.266"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 13:00:06.266" endtime="20220705 13:00:06.266"/>
</return>
<msg timestamp="20220705 13:00:06.266" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 13:00:05.844" endtime="20220705 13:00:06.266"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 13:00:06.266" endtime="20220705 13:00:06.266"/>
</return>
<status status="PASS" starttime="20220705 13:00:05.843" endtime="20220705 13:00:06.267"/>
</kw>
<status status="PASS" starttime="20220705 13:00:05.843" endtime="20220705 13:00:06.267"/>
</kw>
<doc>Verify that a board's information can be accesed through API</doc>
<tag>api</tag>
<tag>board.get</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220705 13:00:05.276" endtime="20220705 13:00:06.267"/>
</test>
<test id="s1-s1-s1-t5" name="UPDATE a Board's description" line="45">
<kw name="Create A Board" library="Board">
<var>${response}</var>
<arg>NewBoardForTest</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 13:00:06.269" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 13:00:06.269" endtime="20220705 13:00:06.269"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 13:00:06.269" endtime="20220705 13:00:06.269"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 13:00:06.270" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220705 13:00:06.269" endtime="20220705 13:00:06.270"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 13:00:06.506" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 13:00:06.270" endtime="20220705 13:00:06.506"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 13:00:06.507" endtime="20220705 13:00:06.507"/>
</return>
<msg timestamp="20220705 13:00:06.507" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 13:00:06.268" endtime="20220705 13:00:06.507"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 13:00:06.507" endtime="20220705 13:00:06.507"/>
</return>
<msg timestamp="20220705 13:00:06.507" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 13:00:06.268" endtime="20220705 13:00:06.507"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>board</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 13:00:06.508" endtime="20220705 13:00:06.512"/>
</kw>
<status status="PASS" starttime="20220705 13:00:06.508" endtime="20220705 13:00:06.512"/>
</kw>
<kw name="Update A Board" library="Board">
<arg>${response.json()}[id]</arg>
<arg>desc</arg>
<arg>sampleDescription</arg>
<doc>Updates the board with the given ID
optional_args: name, desc, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 13:00:06.514" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 13:00:06.513" endtime="20220705 13:00:06.514"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 13:00:06.514" endtime="20220705 13:00:06.514"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 13:00:06.514" level="INFO">${url} = boards/62c435d61fd583893a67cc97</msg>
<status status="PASS" starttime="20220705 13:00:06.514" endtime="20220705 13:00:06.514"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 13:00:06.698" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 13:00:06.514" endtime="20220705 13:00:06.698"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 13:00:06.698" endtime="20220705 13:00:06.698"/>
</return>
<msg timestamp="20220705 13:00:06.699" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 13:00:06.513" endtime="20220705 13:00:06.699"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 13:00:06.699" endtime="20220705 13:00:06.699"/>
</return>
<status status="PASS" starttime="20220705 13:00:06.512" endtime="20220705 13:00:06.699"/>
</kw>
<kw name="Get A Board" library="Board">
<var>${new_response}</var>
<arg>${response.json()}[id]</arg>
<doc>Gets the Board with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 13:00:06.701" level="INFO">${url} = boards/62c435d61fd583893a67cc97</msg>
<status status="PASS" starttime="20220705 13:00:06.701" endtime="20220705 13:00:06.701"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 13:00:06.805" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 13:00:06.701" endtime="20220705 13:00:06.805"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 13:00:06.805" endtime="20220705 13:00:06.805"/>
</return>
<msg timestamp="20220705 13:00:06.805" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 13:00:06.700" endtime="20220705 13:00:06.805"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 13:00:06.805" endtime="20220705 13:00:06.805"/>
</return>
<msg timestamp="20220705 13:00:06.806" level="INFO">${new_response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 13:00:06.699" endtime="20220705 13:00:06.806"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${new_response.json()}[desc]</arg>
<arg>sampleDescription</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220705 13:00:06.806" endtime="20220705 13:00:06.807"/>
</kw>
<kw name="Update A Board" library="Board">
<arg>${response.json()}[id]</arg>
<arg>desc</arg>
<arg>updatedDescription</arg>
<doc>Updates the board with the given ID
optional_args: name, desc, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 13:00:06.809" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 13:00:06.809" endtime="20220705 13:00:06.809"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 13:00:06.810" endtime="20220705 13:00:06.810"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 13:00:06.810" level="INFO">${url} = boards/62c435d61fd583893a67cc97</msg>
<status status="PASS" starttime="20220705 13:00:06.810" endtime="20220705 13:00:06.810"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 13:00:06.974" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 13:00:06.810" endtime="20220705 13:00:06.974"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 13:00:06.974" endtime="20220705 13:00:06.974"/>
</return>
<msg timestamp="20220705 13:00:06.975" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 13:00:06.808" endtime="20220705 13:00:06.975"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 13:00:06.975" endtime="20220705 13:00:06.975"/>
</return>
<status status="PASS" starttime="20220705 13:00:06.807" endtime="20220705 13:00:06.975"/>
</kw>
<kw name="Get A Board" library="Board">
<var>${new_response2}</var>
<arg>${response.json()}[id]</arg>
<doc>Gets the Board with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 13:00:06.977" level="INFO">${url} = boards/62c435d61fd583893a67cc97</msg>
<status status="PASS" starttime="20220705 13:00:06.977" endtime="20220705 13:00:06.977"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 13:00:07.090" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 13:00:06.977" endtime="20220705 13:00:07.090"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 13:00:07.090" endtime="20220705 13:00:07.090"/>
</return>
<msg timestamp="20220705 13:00:07.090" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 13:00:06.976" endtime="20220705 13:00:07.090"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 13:00:07.090" endtime="20220705 13:00:07.090"/>
</return>
<msg timestamp="20220705 13:00:07.091" level="INFO">${new_response2} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 13:00:06.975" endtime="20220705 13:00:07.091"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${new_response2.json()}[desc]</arg>
<arg>updatedDescription</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220705 13:00:07.091" endtime="20220705 13:00:07.092"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${response.json()}[id]</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${response.json()}[id]</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 13:00:07.095" level="INFO">${url} = boards/62c435d61fd583893a67cc97</msg>
<status status="PASS" starttime="20220705 13:00:07.094" endtime="20220705 13:00:07.095"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 13:00:07.592" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 13:00:07.095" endtime="20220705 13:00:07.592"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 13:00:07.592" endtime="20220705 13:00:07.592"/>
</return>
<msg timestamp="20220705 13:00:07.593" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 13:00:07.094" endtime="20220705 13:00:07.593"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 13:00:07.593" endtime="20220705 13:00:07.593"/>
</return>
<status status="PASS" starttime="20220705 13:00:07.092" endtime="20220705 13:00:07.593"/>
</kw>
<status status="PASS" starttime="20220705 13:00:07.092" endtime="20220705 13:00:07.593"/>
</kw>
<doc>Verify that a board's description can be updated through API</doc>
<tag>api</tag>
<tag>board.update</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220705 13:00:06.267" endtime="20220705 13:00:07.593"/>
</test>
<kw name="Delete All Sessions" library="request_own_library" type="TEARDOWN">
<status status="PASS" starttime="20220705 13:00:07.595" endtime="20220705 13:00:07.596"/>
</kw>
<doc>Example Test with Trello API Boards</doc>
<status status="PASS" starttime="20220705 13:00:02.625" endtime="20220705 13:00:07.596"/>
</suite>
<suite id="s1-s1-s2" name="Trello Api Cards Tests" source="/trello/api/trello_api_cards_tests.robot">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Create Trello Session</arg>
<arg>Setup Board And List</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Create Trello Session" library="TrelloAPI">
<doc>Creates a Trello Session</doc>
<kw name="Create Session" library="request_own_library">
<arg>${API_BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<status status="PASS" starttime="20220705 13:00:07.607" endtime="20220705 13:00:07.608"/>
</kw>
<status status="PASS" starttime="20220705 13:00:07.607" endtime="20220705 13:00:07.608"/>
</kw>
<kw name="Setup Board And List">
<doc>Create a board and save its ID and its first list's ID</doc>
<kw name="Create A Board" library="Board">
<var>${BOARD}</var>
<arg>TestBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 13:00:07.609" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 13:00:07.609" endtime="20220705 13:00:07.609"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 13:00:07.609" endtime="20220705 13:00:07.609"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 13:00:07.610" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220705 13:00:07.609" endtime="20220705 13:00:07.610"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 13:00:07.897" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 13:00:07.610" endtime="20220705 13:00:07.897"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 13:00:07.898" endtime="20220705 13:00:07.898"/>
</return>
<msg timestamp="20220705 13:00:07.898" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 13:00:07.608" endtime="20220705 13:00:07.898"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 13:00:07.898" endtime="20220705 13:00:07.898"/>
</return>
<msg timestamp="20220705 13:00:07.898" level="INFO">${BOARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 13:00:07.608" endtime="20220705 13:00:07.898"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_BOARD_ID}</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220705 13:00:07.899" level="INFO">${TEST_SUITE_BOARD_ID} = 62c435d701ade626fbf2bc7a</msg>
<status status="PASS" starttime="20220705 13:00:07.898" endtime="20220705 13:00:07.899"/>
</kw>
<kw name="Get Lists On A Board" library="Board">
<var>${LISTS}</var>
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Get all the lists in a board</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>lists_on_board</arg>
<arg>${id}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 13:00:07.900" level="INFO">${url} = boards/62c435d701ade626fbf2bc7a/lists/</msg>
<status status="PASS" starttime="20220705 13:00:07.900" endtime="20220705 13:00:07.900"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 13:00:08.022" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 13:00:07.900" endtime="20220705 13:00:08.022"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 13:00:08.022" endtime="20220705 13:00:08.022"/>
</return>
<msg timestamp="20220705 13:00:08.022" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 13:00:07.900" endtime="20220705 13:00:08.022"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 13:00:08.022" endtime="20220705 13:00:08.023"/>
</return>
<msg timestamp="20220705 13:00:08.023" level="INFO">${LISTS} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 13:00:07.899" endtime="20220705 13:00:08.023"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_LIST_ID}</arg>
<arg>${LISTS.json()}[0][id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220705 13:00:08.024" level="INFO">${TEST_SUITE_LIST_ID} = 62c435d701ade626fbf2bc81</msg>
<status status="PASS" starttime="20220705 13:00:08.023" endtime="20220705 13:00:08.024"/>
</kw>
<status status="PASS" starttime="20220705 13:00:07.608" endtime="20220705 13:00:08.024"/>
</kw>
<status status="PASS" starttime="20220705 13:00:07.607" endtime="20220705 13:00:08.024"/>
</kw>
<test id="s1-s1-s2-t1" name="Verify A Card Can Be Created" line="13">
<kw name="Create A Card" library="Card">
<var>${response}</var>
<arg>name</arg>
<arg>RFCard2</arg>
<doc>Creates a new card in the given list.
required_args: listId
optional_args: name, desc, pos, idCardSource, idLabels, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>@{optional_args}</arg>
<arg>idList</arg>
<arg>${idList}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 13:00:08.027" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 13:00:08.026" endtime="20220705 13:00:08.027"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 13:00:08.027" endtime="20220705 13:00:08.027"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 13:00:08.028" level="INFO">${url} = cards/</msg>
<status status="PASS" starttime="20220705 13:00:08.027" endtime="20220705 13:00:08.028"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 13:00:08.444" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 13:00:08.028" endtime="20220705 13:00:08.444"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 13:00:08.444" endtime="20220705 13:00:08.444"/>
</return>
<msg timestamp="20220705 13:00:08.444" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 13:00:08.026" endtime="20220705 13:00:08.444"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 13:00:08.445" endtime="20220705 13:00:08.445"/>
</return>
<msg timestamp="20220705 13:00:08.445" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 13:00:08.025" endtime="20220705 13:00:08.445"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>card</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 13:00:08.445" endtime="20220705 13:00:08.450"/>
</kw>
<status status="PASS" starttime="20220705 13:00:08.445" endtime="20220705 13:00:08.450"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 13:00:08.450" endtime="20220705 13:00:08.450"/>
</return>
<msg timestamp="20220705 13:00:08.451" level="INFO">${CARD_ID} = 62c435d8d4a4f5403ef1ed4f</msg>
<status status="PASS" starttime="20220705 13:00:08.450" endtime="20220705 13:00:08.451"/>
</kw>
<kw name="Get A Card" library="Card">
<var>${response}</var>
<arg>${CARD_ID}</arg>
<doc>Gets the card with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 13:00:08.452" level="INFO">${url} = cards/62c435d8d4a4f5403ef1ed4f</msg>
<status status="PASS" starttime="20220705 13:00:08.452" endtime="20220705 13:00:08.452"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 13:00:08.563" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 13:00:08.453" endtime="20220705 13:00:08.563"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 13:00:08.563" endtime="20220705 13:00:08.564"/>
</return>
<msg timestamp="20220705 13:00:08.564" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 13:00:08.452" endtime="20220705 13:00:08.564"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 13:00:08.564" endtime="20220705 13:00:08.564"/>
</return>
<msg timestamp="20220705 13:00:08.564" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 13:00:08.451" endtime="20220705 13:00:08.564"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_NAME}</var>
<arg>${response}</arg>
<arg>name</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 13:00:08.565" endtime="20220705 13:00:08.565"/>
</return>
<msg timestamp="20220705 13:00:08.566" level="INFO">${CARD_NAME} = RFCard2</msg>
<status status="PASS" starttime="20220705 13:00:08.564" endtime="20220705 13:00:08.566"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${CARD_NAME}</arg>
<arg>RFCard2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220705 13:00:08.566" endtime="20220705 13:00:08.566"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Card</arg>
<arg>${CARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Card" library="Card">
<arg>${CARD_ID}</arg>
<doc>Deletes the card with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 13:00:08.568" level="INFO">${url} = cards/62c435d8d4a4f5403ef1ed4f</msg>
<status status="PASS" starttime="20220705 13:00:08.568" endtime="20220705 13:00:08.568"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 13:00:08.780" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 13:00:08.568" endtime="20220705 13:00:08.780"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 13:00:08.780" endtime="20220705 13:00:08.780"/>
</return>
<msg timestamp="20220705 13:00:08.780" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 13:00:08.567" endtime="20220705 13:00:08.780"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 13:00:08.780" endtime="20220705 13:00:08.780"/>
</return>
<status status="PASS" starttime="20220705 13:00:08.567" endtime="20220705 13:00:08.781"/>
</kw>
<status status="PASS" starttime="20220705 13:00:08.566" endtime="20220705 13:00:08.781"/>
</kw>
<doc>Verify that a card can be created through API</doc>
<tag>api</tag>
<tag>card.create</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220705 13:00:08.024" endtime="20220705 13:00:08.781"/>
</test>
<test id="s1-s1-s2-t2" name="Verify A Card Can Be Closed" line="24">
<kw name="Create A Card" library="Card">
<var>${response}</var>
<doc>Creates a new card in the given list.
required_args: listId
optional_args: name, desc, pos, idCardSource, idLabels, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>@{optional_args}</arg>
<arg>idList</arg>
<arg>${idList}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 13:00:08.784" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 13:00:08.784" endtime="20220705 13:00:08.784"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 13:00:08.785" endtime="20220705 13:00:08.785"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 13:00:08.786" level="INFO">${url} = cards/</msg>
<status status="PASS" starttime="20220705 13:00:08.785" endtime="20220705 13:00:08.786"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 13:00:09.010" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 13:00:08.786" endtime="20220705 13:00:09.010"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 13:00:09.010" endtime="20220705 13:00:09.010"/>
</return>
<msg timestamp="20220705 13:00:09.010" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 13:00:08.783" endtime="20220705 13:00:09.011"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 13:00:09.011" endtime="20220705 13:00:09.011"/>
</return>
<msg timestamp="20220705 13:00:09.011" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 13:00:08.783" endtime="20220705 13:00:09.011"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 13:00:09.011" endtime="20220705 13:00:09.011"/>
</return>
<msg timestamp="20220705 13:00:09.012" level="INFO">${CARD_ID} = 62c435d8e9cbda40dc5a4abd</msg>
<status status="PASS" starttime="20220705 13:00:09.011" endtime="20220705 13:00:09.012"/>
</kw>
<kw name="Archive A Card" library="Card">
<arg>${CARD_ID}</arg>
<doc>Modifies the card status to closed.</doc>
<kw name="Update A Card" library="Card">
<var>${response}</var>
<arg>${id}</arg>
<arg>closed</arg>
<arg>true</arg>
<arg>status_code=${status_code}</arg>
<doc>Updates the card with the given ID
optional_args: name, desc, closed, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<arg>status_code=${status_code}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 13:00:09.015" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 13:00:09.014" endtime="20220705 13:00:09.015"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 13:00:09.015" endtime="20220705 13:00:09.015"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 13:00:09.015" level="INFO">${url} = cards/62c435d8e9cbda40dc5a4abd</msg>
<status status="PASS" starttime="20220705 13:00:09.015" endtime="20220705 13:00:09.015"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 13:00:09.296" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 13:00:09.015" endtime="20220705 13:00:09.297"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 13:00:09.297" endtime="20220705 13:00:09.297"/>
</return>
<msg timestamp="20220705 13:00:09.297" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 13:00:09.014" endtime="20220705 13:00:09.297"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 13:00:09.297" endtime="20220705 13:00:09.297"/>
</return>
<msg timestamp="20220705 13:00:09.297" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 13:00:09.013" endtime="20220705 13:00:09.297"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 13:00:09.297" endtime="20220705 13:00:09.297"/>
</return>
<status status="PASS" starttime="20220705 13:00:09.012" endtime="20220705 13:00:09.298"/>
</kw>
<kw name="Get A Card" library="Card">
<var>${response}</var>
<arg>${CARD_ID}</arg>
<doc>Gets the card with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 13:00:09.299" level="INFO">${url} = cards/62c435d8e9cbda40dc5a4abd</msg>
<status status="PASS" starttime="20220705 13:00:09.299" endtime="20220705 13:00:09.299"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 13:00:09.425" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 13:00:09.300" endtime="20220705 13:00:09.425"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 13:00:09.425" endtime="20220705 13:00:09.425"/>
</return>
<msg timestamp="20220705 13:00:09.426" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 13:00:09.298" endtime="20220705 13:00:09.426"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 13:00:09.426" endtime="20220705 13:00:09.426"/>
</return>
<msg timestamp="20220705 13:00:09.426" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 13:00:09.298" endtime="20220705 13:00:09.426"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_CLOSED}</var>
<arg>${response}</arg>
<arg>closed</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 13:00:09.427" endtime="20220705 13:00:09.427"/>
</return>
<msg timestamp="20220705 13:00:09.428" level="INFO">${CARD_CLOSED} = True</msg>
<status status="PASS" starttime="20220705 13:00:09.426" endtime="20220705 13:00:09.428"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${CARD_CLOSED}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220705 13:00:09.428" endtime="20220705 13:00:09.428"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Card</arg>
<arg>${CARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Card" library="Card">
<arg>${CARD_ID}</arg>
<doc>Deletes the card with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 13:00:09.430" level="INFO">${url} = cards/62c435d8e9cbda40dc5a4abd</msg>
<status status="PASS" starttime="20220705 13:00:09.429" endtime="20220705 13:00:09.430"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 13:00:09.622" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 13:00:09.430" endtime="20220705 13:00:09.622"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 13:00:09.622" endtime="20220705 13:00:09.622"/>
</return>
<msg timestamp="20220705 13:00:09.623" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 13:00:09.429" endtime="20220705 13:00:09.623"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 13:00:09.623" endtime="20220705 13:00:09.623"/>
</return>
<status status="PASS" starttime="20220705 13:00:09.428" endtime="20220705 13:00:09.623"/>
</kw>
<status status="PASS" starttime="20220705 13:00:09.428" endtime="20220705 13:00:09.623"/>
</kw>
<doc>Verify that a card can be closed through API</doc>
<tag>api</tag>
<tag>card.close</tag>
<tag>regression</tag>
<status status="PASS" starttime="20220705 13:00:08.781" endtime="20220705 13:00:09.623"/>
</test>
<test id="s1-s1-s2-t3" name="Verify A Card Can Be Deleted" line="35">
<kw name="Create A Card" library="Card">
<var>${response}</var>
<doc>Creates a new card in the given list.
required_args: listId
optional_args: name, desc, pos, idCardSource, idLabels, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>@{optional_args}</arg>
<arg>idList</arg>
<arg>${idList}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 13:00:09.627" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 13:00:09.626" endtime="20220705 13:00:09.627"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 13:00:09.627" endtime="20220705 13:00:09.627"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 13:00:09.628" level="INFO">${url} = cards/</msg>
<status status="PASS" starttime="20220705 13:00:09.627" endtime="20220705 13:00:09.628"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 13:00:09.851" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 13:00:09.628" endtime="20220705 13:00:09.851"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 13:00:09.851" endtime="20220705 13:00:09.851"/>
</return>
<msg timestamp="20220705 13:00:09.851" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 13:00:09.625" endtime="20220705 13:00:09.851"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 13:00:09.851" endtime="20220705 13:00:09.851"/>
</return>
<msg timestamp="20220705 13:00:09.852" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 13:00:09.625" endtime="20220705 13:00:09.852"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 13:00:09.852" endtime="20220705 13:00:09.852"/>
</return>
<msg timestamp="20220705 13:00:09.853" level="INFO">${CARD_ID} = 62c435d953e31b4595143bc8</msg>
<status status="PASS" starttime="20220705 13:00:09.852" endtime="20220705 13:00:09.853"/>
</kw>
<kw name="Delete A Card" library="Card">
<var>${response}</var>
<arg>${CARD_ID}</arg>
<doc>Deletes the card with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 13:00:09.854" level="INFO">${url} = cards/62c435d953e31b4595143bc8</msg>
<status status="PASS" starttime="20220705 13:00:09.854" endtime="20220705 13:00:09.854"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 13:00:10.092" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 13:00:09.854" endtime="20220705 13:00:10.092"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 13:00:10.092" endtime="20220705 13:00:10.092"/>
</return>
<msg timestamp="20220705 13:00:10.093" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 13:00:09.853" endtime="20220705 13:00:10.093"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 13:00:10.093" endtime="20220705 13:00:10.093"/>
</return>
<msg timestamp="20220705 13:00:10.093" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 13:00:09.853" endtime="20220705 13:00:10.093"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>delete</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 13:00:10.094" endtime="20220705 13:00:10.096"/>
</kw>
<status status="PASS" starttime="20220705 13:00:10.093" endtime="20220705 13:00:10.096"/>
</kw>
<kw name="Get A Card" library="Card">
<arg>${CARD_ID}</arg>
<arg>status_code=404</arg>
<doc>Gets the card with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 13:00:10.097" level="INFO">${url} = cards/62c435d953e31b4595143bc8</msg>
<status status="PASS" starttime="20220705 13:00:10.097" endtime="20220705 13:00:10.097"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 13:00:10.223" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220705 13:00:10.097" endtime="20220705 13:00:10.223"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 13:00:10.224" endtime="20220705 13:00:10.224"/>
</return>
<msg timestamp="20220705 13:00:10.224" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220705 13:00:10.097" endtime="20220705 13:00:10.224"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 13:00:10.224" endtime="20220705 13:00:10.224"/>
</return>
<status status="PASS" starttime="20220705 13:00:10.096" endtime="20220705 13:00:10.224"/>
</kw>
<doc>Verify that a card can be deleted through API</doc>
<tag>api</tag>
<tag>card.delete</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220705 13:00:09.624" endtime="20220705 13:00:10.224"/>
</test>
<test id="s1-s1-s2-t4" name="Verify A Card Can Be Updated" line="44">
<kw name="Create A Card" library="Card">
<var>${response}</var>
<arg>name</arg>
<arg>RFCard4</arg>
<doc>Creates a new card in the given list.
required_args: listId
optional_args: name, desc, pos, idCardSource, idLabels, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>@{optional_args}</arg>
<arg>idList</arg>
<arg>${idList}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 13:00:10.228" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 13:00:10.228" endtime="20220705 13:00:10.228"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 13:00:10.228" endtime="20220705 13:00:10.228"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 13:00:10.229" level="INFO">${url} = cards/</msg>
<status status="PASS" starttime="20220705 13:00:10.228" endtime="20220705 13:00:10.229"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 13:00:10.443" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 13:00:10.229" endtime="20220705 13:00:10.443"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 13:00:10.444" endtime="20220705 13:00:10.444"/>
</return>
<msg timestamp="20220705 13:00:10.444" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 13:00:10.227" endtime="20220705 13:00:10.444"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 13:00:10.444" endtime="20220705 13:00:10.444"/>
</return>
<msg timestamp="20220705 13:00:10.444" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 13:00:10.226" endtime="20220705 13:00:10.444"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 13:00:10.445" endtime="20220705 13:00:10.445"/>
</return>
<msg timestamp="20220705 13:00:10.446" level="INFO">${CARD_ID} = 62c435daeb93af609dcb390a</msg>
<status status="PASS" starttime="20220705 13:00:10.444" endtime="20220705 13:00:10.446"/>
</kw>
<kw name="Update A Card" library="Card">
<var>${response}</var>
<arg>${CARD_ID}</arg>
<arg>name</arg>
<arg>RFCard5</arg>
<arg>desc</arg>
<arg>Description</arg>
<doc>Updates the card with the given ID
optional_args: name, desc, closed, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<arg>status_code=${status_code}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 13:00:10.448" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 13:00:10.447" endtime="20220705 13:00:10.448"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 13:00:10.448" endtime="20220705 13:00:10.448"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 13:00:10.448" level="INFO">${url} = cards/62c435daeb93af609dcb390a</msg>
<status status="PASS" starttime="20220705 13:00:10.448" endtime="20220705 13:00:10.449"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 13:00:10.655" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 13:00:10.449" endtime="20220705 13:00:10.655"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 13:00:10.656" endtime="20220705 13:00:10.656"/>
</return>
<msg timestamp="20220705 13:00:10.656" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 13:00:10.447" endtime="20220705 13:00:10.656"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 13:00:10.656" endtime="20220705 13:00:10.656"/>
</return>
<msg timestamp="20220705 13:00:10.656" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 13:00:10.446" endtime="20220705 13:00:10.656"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>card</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 13:00:10.657" endtime="20220705 13:00:10.664"/>
</kw>
<status status="PASS" starttime="20220705 13:00:10.657" endtime="20220705 13:00:10.664"/>
</kw>
<kw name="Get A Card" library="Card">
<var>${response}</var>
<arg>${CARD_ID}</arg>
<doc>Gets the card with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 13:00:10.665" level="INFO">${url} = cards/62c435daeb93af609dcb390a</msg>
<status status="PASS" starttime="20220705 13:00:10.665" endtime="20220705 13:00:10.665"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 13:00:10.786" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 13:00:10.665" endtime="20220705 13:00:10.786"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 13:00:10.786" endtime="20220705 13:00:10.786"/>
</return>
<msg timestamp="20220705 13:00:10.786" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 13:00:10.665" endtime="20220705 13:00:10.786"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 13:00:10.786" endtime="20220705 13:00:10.787"/>
</return>
<msg timestamp="20220705 13:00:10.787" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 13:00:10.664" endtime="20220705 13:00:10.787"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_NAME}</var>
<arg>${response}</arg>
<arg>name</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 13:00:10.787" endtime="20220705 13:00:10.787"/>
</return>
<msg timestamp="20220705 13:00:10.788" level="INFO">${CARD_NAME} = RFCard5</msg>
<status status="PASS" starttime="20220705 13:00:10.787" endtime="20220705 13:00:10.788"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_DESC}</var>
<arg>${response}</arg>
<arg>desc</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 13:00:10.789" endtime="20220705 13:00:10.789"/>
</return>
<msg timestamp="20220705 13:00:10.789" level="INFO">${CARD_DESC} = Description</msg>
<status status="PASS" starttime="20220705 13:00:10.788" endtime="20220705 13:00:10.789"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${CARD_NAME}</arg>
<arg>RFCard5</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220705 13:00:10.789" endtime="20220705 13:00:10.790"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${CARD_DESC}</arg>
<arg>Description</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220705 13:00:10.790" endtime="20220705 13:00:10.790"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Card</arg>
<arg>${CARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Card" library="Card">
<arg>${CARD_ID}</arg>
<doc>Deletes the card with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 13:00:10.792" level="INFO">${url} = cards/62c435daeb93af609dcb390a</msg>
<status status="PASS" starttime="20220705 13:00:10.791" endtime="20220705 13:00:10.792"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 13:00:11.028" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 13:00:10.792" endtime="20220705 13:00:11.028"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 13:00:11.028" endtime="20220705 13:00:11.028"/>
</return>
<msg timestamp="20220705 13:00:11.028" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 13:00:10.791" endtime="20220705 13:00:11.028"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 13:00:11.028" endtime="20220705 13:00:11.028"/>
</return>
<status status="PASS" starttime="20220705 13:00:10.791" endtime="20220705 13:00:11.029"/>
</kw>
<status status="PASS" starttime="20220705 13:00:10.790" endtime="20220705 13:00:11.029"/>
</kw>
<doc>Verify that a card's name and Description can be updated through API</doc>
<tag>api</tag>
<tag>card.update</tag>
<tag>regression</tag>
<status status="PASS" starttime="20220705 13:00:10.225" endtime="20220705 13:00:11.029"/>
</test>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Teardown Board</arg>
<arg>Delete All Sessions</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Teardown Board">
<doc>Delete the board created for this suite</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 13:00:11.032" level="INFO">${url} = boards/62c435d701ade626fbf2bc7a</msg>
<status status="PASS" starttime="20220705 13:00:11.032" endtime="20220705 13:00:11.032"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 13:00:11.469" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 13:00:11.032" endtime="20220705 13:00:11.469"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 13:00:11.469" endtime="20220705 13:00:11.469"/>
</return>
<msg timestamp="20220705 13:00:11.470" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 13:00:11.031" endtime="20220705 13:00:11.470"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 13:00:11.470" endtime="20220705 13:00:11.470"/>
</return>
<status status="PASS" starttime="20220705 13:00:11.031" endtime="20220705 13:00:11.470"/>
</kw>
<status status="PASS" starttime="20220705 13:00:11.030" endtime="20220705 13:00:11.470"/>
</kw>
<status status="PASS" starttime="20220705 13:00:11.030" endtime="20220705 13:00:11.470"/>
</kw>
<kw name="Delete All Sessions" library="request_own_library">
<status status="PASS" starttime="20220705 13:00:11.470" endtime="20220705 13:00:11.472"/>
</kw>
<status status="PASS" starttime="20220705 13:00:11.030" endtime="20220705 13:00:11.472"/>
</kw>
<doc>Example Test with Trello API Cards</doc>
<status status="PASS" starttime="20220705 13:00:07.598" endtime="20220705 13:00:11.472"/>
</suite>
<suite id="s1-s1-s3" name="Trello Api Checklists Tests" source="/trello/api/trello_api_checklists_tests.robot">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Create Trello Session</arg>
<arg>Setup Board, List And Card</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Create Trello Session" library="TrelloAPI">
<doc>Creates a Trello Session</doc>
<kw name="Create Session" library="request_own_library">
<arg>${API_BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<status status="PASS" starttime="20220705 13:00:11.483" endtime="20220705 13:00:11.483"/>
</kw>
<status status="PASS" starttime="20220705 13:00:11.482" endtime="20220705 13:00:11.483"/>
</kw>
<kw name="Setup Board, List And Card">
<doc>Create a board and save its ID and its first list's ID</doc>
<kw name="Create A Board" library="Board">
<var>${BOARD}</var>
<arg>TestBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 13:00:11.484" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 13:00:11.484" endtime="20220705 13:00:11.484"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 13:00:11.484" endtime="20220705 13:00:11.484"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 13:00:11.485" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220705 13:00:11.484" endtime="20220705 13:00:11.485"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 13:00:11.833" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 13:00:11.485" endtime="20220705 13:00:11.833"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 13:00:11.833" endtime="20220705 13:00:11.833"/>
</return>
<msg timestamp="20220705 13:00:11.834" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 13:00:11.483" endtime="20220705 13:00:11.834"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 13:00:11.834" endtime="20220705 13:00:11.834"/>
</return>
<msg timestamp="20220705 13:00:11.834" level="INFO">${BOARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 13:00:11.483" endtime="20220705 13:00:11.834"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_BOARD_ID}</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220705 13:00:11.835" level="INFO">${TEST_SUITE_BOARD_ID} = 62c435db1608fb57d7fc2981</msg>
<status status="PASS" starttime="20220705 13:00:11.834" endtime="20220705 13:00:11.835"/>
</kw>
<kw name="Get Lists On A Board" library="Board">
<var>${LISTS}</var>
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Get all the lists in a board</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>lists_on_board</arg>
<arg>${id}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 13:00:11.836" level="INFO">${url} = boards/62c435db1608fb57d7fc2981/lists/</msg>
<status status="PASS" starttime="20220705 13:00:11.836" endtime="20220705 13:00:11.836"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 13:00:11.949" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 13:00:11.836" endtime="20220705 13:00:11.949"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 13:00:11.949" endtime="20220705 13:00:11.949"/>
</return>
<msg timestamp="20220705 13:00:11.949" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 13:00:11.836" endtime="20220705 13:00:11.949"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 13:00:11.950" endtime="20220705 13:00:11.950"/>
</return>
<msg timestamp="20220705 13:00:11.950" level="INFO">${LISTS} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 13:00:11.835" endtime="20220705 13:00:11.950"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_LIST_ID}</arg>
<arg>${LISTS.json()}[0][id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220705 13:00:11.951" level="INFO">${TEST_SUITE_LIST_ID} = 62c435db1608fb57d7fc2988</msg>
<status status="PASS" starttime="20220705 13:00:11.950" endtime="20220705 13:00:11.951"/>
</kw>
<kw name="Create A Card" library="Card">
<var>${CARD}</var>
<arg>name</arg>
<arg>TestCard</arg>
<doc>Creates a new card in the given list.
required_args: listId
optional_args: name, desc, pos, idCardSource, idLabels, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>@{optional_args}</arg>
<arg>idList</arg>
<arg>${idList}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 13:00:11.953" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 13:00:11.953" endtime="20220705 13:00:11.953"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 13:00:11.953" endtime="20220705 13:00:11.953"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 13:00:11.954" level="INFO">${url} = cards/</msg>
<status status="PASS" starttime="20220705 13:00:11.953" endtime="20220705 13:00:11.954"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 13:00:12.192" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 13:00:11.954" endtime="20220705 13:00:12.193"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 13:00:12.193" endtime="20220705 13:00:12.193"/>
</return>
<msg timestamp="20220705 13:00:12.193" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 13:00:11.952" endtime="20220705 13:00:12.193"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 13:00:12.193" endtime="20220705 13:00:12.193"/>
</return>
<msg timestamp="20220705 13:00:12.193" level="INFO">${CARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 13:00:11.951" endtime="20220705 13:00:12.193"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_CARD_ID}</arg>
<arg>${CARD.json()}[id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220705 13:00:12.195" level="INFO">${TEST_SUITE_CARD_ID} = 62c435dc8e08556ba2470011</msg>
<status status="PASS" starttime="20220705 13:00:12.194" endtime="20220705 13:00:12.195"/>
</kw>
<status status="PASS" starttime="20220705 13:00:11.483" endtime="20220705 13:00:12.195"/>
</kw>
<status status="PASS" starttime="20220705 13:00:11.482" endtime="20220705 13:00:12.195"/>
</kw>
<test id="s1-s1-s3-t1" name="Verify A Checklist Can Be Created" line="14">
<kw name="Create A Checklist" library="Checklist">
<var>${response}</var>
<arg>name</arg>
<arg>TestChecklist</arg>
<arg>idCard=${TEST_SUITE_CARD_ID}</arg>
<doc>Creates a new checklist in the given card.
required_args: idCard
optional_args: name, pos, idChecklistSource
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>@{optional_args}</arg>
<arg>idCard</arg>
<arg>${idCard}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 13:00:12.197" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 13:00:12.197" endtime="20220705 13:00:12.197"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 13:00:12.197" endtime="20220705 13:00:12.197"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 13:00:12.198" level="INFO">${url} = checklists/</msg>
<status status="PASS" starttime="20220705 13:00:12.198" endtime="20220705 13:00:12.198"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 13:00:12.380" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 13:00:12.199" endtime="20220705 13:00:12.380"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 13:00:12.380" endtime="20220705 13:00:12.381"/>
</return>
<msg timestamp="20220705 13:00:12.381" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 13:00:12.196" endtime="20220705 13:00:12.381"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 13:00:12.381" endtime="20220705 13:00:12.381"/>
</return>
<msg timestamp="20220705 13:00:12.381" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 13:00:12.196" endtime="20220705 13:00:12.381"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${checklist_id}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 13:00:12.382" endtime="20220705 13:00:12.382"/>
</return>
<msg timestamp="20220705 13:00:12.383" level="INFO">${checklist_id} = 62c435dcdc25ad2a6215bac1</msg>
<status status="PASS" starttime="20220705 13:00:12.381" endtime="20220705 13:00:12.383"/>
</kw>
<kw name="Get A Checklist" library="Checklist">
<var>${response}</var>
<arg>${checklist_id}</arg>
<doc>Gets the checklist with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 13:00:12.385" level="INFO">${url} = checklists/62c435dcdc25ad2a6215bac1</msg>
<status status="PASS" starttime="20220705 13:00:12.384" endtime="20220705 13:00:12.385"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 13:00:12.511" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 13:00:12.385" endtime="20220705 13:00:12.511"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 13:00:12.511" endtime="20220705 13:00:12.512"/>
</return>
<msg timestamp="20220705 13:00:12.512" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 13:00:12.384" endtime="20220705 13:00:12.512"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 13:00:12.512" endtime="20220705 13:00:12.512"/>
</return>
<msg timestamp="20220705 13:00:12.512" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 13:00:12.383" endtime="20220705 13:00:12.512"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${checklist_name}</var>
<arg>${response}</arg>
<arg>name</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 13:00:12.513" endtime="20220705 13:00:12.513"/>
</return>
<msg timestamp="20220705 13:00:12.514" level="INFO">${checklist_name} = TestChecklist</msg>
<status status="PASS" starttime="20220705 13:00:12.513" endtime="20220705 13:00:12.514"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${checklist_name}</arg>
<arg>TestChecklist</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220705 13:00:12.514" endtime="20220705 13:00:12.514"/>
</kw>
<kw name="Delete A Checklist" library="Checklist" type="TEARDOWN">
<arg>${checklist_id}</arg>
<doc>Deletes the checklist with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 13:00:12.516" level="INFO">${url} = checklists/62c435dcdc25ad2a6215bac1</msg>
<status status="PASS" starttime="20220705 13:00:12.516" endtime="20220705 13:00:12.516"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 13:00:12.747" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 13:00:12.516" endtime="20220705 13:00:12.747"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 13:00:12.747" endtime="20220705 13:00:12.747"/>
</return>
<msg timestamp="20220705 13:00:12.747" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 13:00:12.515" endtime="20220705 13:00:12.747"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 13:00:12.748" endtime="20220705 13:00:12.748"/>
</return>
<status status="PASS" starttime="20220705 13:00:12.515" endtime="20220705 13:00:12.748"/>
</kw>
<doc>Verify that a checklist can be created through API</doc>
<tag>api</tag>
<tag>checklist.create</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220705 13:00:12.195" endtime="20220705 13:00:12.748"/>
</test>
<test id="s1-s1-s3-t2" name="Verify A Checklist Can Be Deleted" line="24">
<kw name="Create A Checklist" library="Checklist">
<var>${response}</var>
<arg>name</arg>
<arg>TestChecklist</arg>
<arg>idCard=${TEST_SUITE_CARD_ID}</arg>
<doc>Creates a new checklist in the given card.
required_args: idCard
optional_args: name, pos, idChecklistSource
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>@{optional_args}</arg>
<arg>idCard</arg>
<arg>${idCard}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 13:00:12.752" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 13:00:12.751" endtime="20220705 13:00:12.752"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 13:00:12.752" endtime="20220705 13:00:12.752"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 13:00:12.753" level="INFO">${url} = checklists/</msg>
<status status="PASS" starttime="20220705 13:00:12.752" endtime="20220705 13:00:12.753"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 13:00:12.953" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 13:00:12.753" endtime="20220705 13:00:12.953"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 13:00:12.953" endtime="20220705 13:00:12.953"/>
</return>
<msg timestamp="20220705 13:00:12.953" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 13:00:12.751" endtime="20220705 13:00:12.953"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 13:00:12.953" endtime="20220705 13:00:12.953"/>
</return>
<msg timestamp="20220705 13:00:12.953" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 13:00:12.750" endtime="20220705 13:00:12.953"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${checklist_id}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 13:00:12.954" endtime="20220705 13:00:12.954"/>
</return>
<msg timestamp="20220705 13:00:12.955" level="INFO">${checklist_id} = 62c435dc5e395a345edeed22</msg>
<status status="PASS" starttime="20220705 13:00:12.954" endtime="20220705 13:00:12.955"/>
</kw>
<kw name="Delete A Checklist" library="Checklist">
<var>${response}</var>
<arg>${checklist_id}</arg>
<doc>Deletes the checklist with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 13:00:12.957" level="INFO">${url} = checklists/62c435dc5e395a345edeed22</msg>
<status status="PASS" starttime="20220705 13:00:12.956" endtime="20220705 13:00:12.957"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 13:00:13.269" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 13:00:12.957" endtime="20220705 13:00:13.269"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 13:00:13.269" endtime="20220705 13:00:13.269"/>
</return>
<msg timestamp="20220705 13:00:13.270" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 13:00:12.956" endtime="20220705 13:00:13.270"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 13:00:13.270" endtime="20220705 13:00:13.270"/>
</return>
<msg timestamp="20220705 13:00:13.270" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 13:00:12.956" endtime="20220705 13:00:13.270"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>delete</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 13:00:13.270" endtime="20220705 13:00:13.272"/>
</kw>
<status status="PASS" starttime="20220705 13:00:13.270" endtime="20220705 13:00:13.272"/>
</kw>
<kw name="Get A Checklist" library="Checklist">
<arg>${checklist_id}</arg>
<arg>status_code=404</arg>
<doc>Gets the checklist with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 13:00:13.274" level="INFO">${url} = checklists/62c435dc5e395a345edeed22</msg>
<status status="PASS" starttime="20220705 13:00:13.273" endtime="20220705 13:00:13.274"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 13:00:13.373" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220705 13:00:13.274" endtime="20220705 13:00:13.373"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 13:00:13.373" endtime="20220705 13:00:13.373"/>
</return>
<msg timestamp="20220705 13:00:13.373" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220705 13:00:13.273" endtime="20220705 13:00:13.373"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 13:00:13.374" endtime="20220705 13:00:13.374"/>
</return>
<status status="PASS" starttime="20220705 13:00:13.273" endtime="20220705 13:00:13.374"/>
</kw>
<doc>Verify that a checklist can be deleted through API</doc>
<tag>api</tag>
<tag>checklist.delete</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220705 13:00:12.748" endtime="20220705 13:00:13.374"/>
</test>
<test id="s1-s1-s3-t3" name="Verify A Checklist Can Be Updated" line="33">
<kw name="Create A Checklist" library="Checklist">
<var>${response}</var>
<arg>name</arg>
<arg>TestChecklist</arg>
<arg>idCard=${TEST_SUITE_CARD_ID}</arg>
<doc>Creates a new checklist in the given card.
required_args: idCard
optional_args: name, pos, idChecklistSource
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>@{optional_args}</arg>
<arg>idCard</arg>
<arg>${idCard}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 13:00:13.379" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 13:00:13.377" endtime="20220705 13:00:13.379"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 13:00:13.379" endtime="20220705 13:00:13.380"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 13:00:13.381" level="INFO">${url} = checklists/</msg>
<status status="PASS" starttime="20220705 13:00:13.380" endtime="20220705 13:00:13.381"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 13:00:13.555" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 13:00:13.381" endtime="20220705 13:00:13.555"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 13:00:13.556" endtime="20220705 13:00:13.556"/>
</return>
<msg timestamp="20220705 13:00:13.556" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 13:00:13.377" endtime="20220705 13:00:13.556"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 13:00:13.556" endtime="20220705 13:00:13.556"/>
</return>
<msg timestamp="20220705 13:00:13.556" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 13:00:13.376" endtime="20220705 13:00:13.556"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${checklist_id}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 13:00:13.557" endtime="20220705 13:00:13.557"/>
</return>
<msg timestamp="20220705 13:00:13.558" level="INFO">${checklist_id} = 62c435ddd1c818072e372bba</msg>
<status status="PASS" starttime="20220705 13:00:13.557" endtime="20220705 13:00:13.558"/>
</kw>
<kw name="Update A Checklist" library="Checklist">
<var>${response}</var>
<arg>${checklist_id}</arg>
<arg>name</arg>
<arg>TestChecklist2</arg>
<doc>Updates the checklist with the given ID
optional_args: name, pos
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<arg>status_code=${status_code}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 13:00:13.560" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 13:00:13.560" endtime="20220705 13:00:13.560"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 13:00:13.560" endtime="20220705 13:00:13.560"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 13:00:13.561" level="INFO">${url} = checklists/62c435ddd1c818072e372bba</msg>
<status status="PASS" starttime="20220705 13:00:13.560" endtime="20220705 13:00:13.561"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 13:00:13.715" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 13:00:13.561" endtime="20220705 13:00:13.715"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 13:00:13.715" endtime="20220705 13:00:13.715"/>
</return>
<msg timestamp="20220705 13:00:13.715" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 13:00:13.559" endtime="20220705 13:00:13.715"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 13:00:13.715" endtime="20220705 13:00:13.715"/>
</return>
<msg timestamp="20220705 13:00:13.716" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 13:00:13.558" endtime="20220705 13:00:13.716"/>
</kw>
<kw name="Get A Checklist" library="Checklist">
<var>${response}</var>
<arg>${checklist_id}</arg>
<doc>Gets the checklist with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 13:00:13.717" level="INFO">${url} = checklists/62c435ddd1c818072e372bba</msg>
<status status="PASS" starttime="20220705 13:00:13.716" endtime="20220705 13:00:13.717"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 13:00:13.824" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 13:00:13.717" endtime="20220705 13:00:13.824"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 13:00:13.824" endtime="20220705 13:00:13.824"/>
</return>
<msg timestamp="20220705 13:00:13.824" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 13:00:13.716" endtime="20220705 13:00:13.824"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 13:00:13.824" endtime="20220705 13:00:13.825"/>
</return>
<msg timestamp="20220705 13:00:13.825" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 13:00:13.716" endtime="20220705 13:00:13.825"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${checklist_name}</var>
<arg>${response}</arg>
<arg>name</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 13:00:13.825" endtime="20220705 13:00:13.825"/>
</return>
<msg timestamp="20220705 13:00:13.826" level="INFO">${checklist_name} = TestChecklist2</msg>
<status status="PASS" starttime="20220705 13:00:13.825" endtime="20220705 13:00:13.826"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${checklist_name}</arg>
<arg>TestChecklist2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220705 13:00:13.827" endtime="20220705 13:00:13.827"/>
</kw>
<kw name="Delete A Checklist" library="Checklist" type="TEARDOWN">
<arg>${checklist_id}</arg>
<doc>Deletes the checklist with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 13:00:13.840" level="INFO">${url} = checklists/62c435ddd1c818072e372bba</msg>
<status status="PASS" starttime="20220705 13:00:13.840" endtime="20220705 13:00:13.840"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 13:00:14.015" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 13:00:13.840" endtime="20220705 13:00:14.015"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 13:00:14.015" endtime="20220705 13:00:14.015"/>
</return>
<msg timestamp="20220705 13:00:14.015" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 13:00:13.839" endtime="20220705 13:00:14.015"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 13:00:14.015" endtime="20220705 13:00:14.016"/>
</return>
<status status="PASS" starttime="20220705 13:00:13.827" endtime="20220705 13:00:14.016"/>
</kw>
<doc>Verify that a checklist's name can be updated through API</doc>
<tag>api</tag>
<tag>checklist.update</tag>
<tag>regression</tag>
<status status="PASS" starttime="20220705 13:00:13.375" endtime="20220705 13:00:14.016"/>
</test>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Teardown Board</arg>
<arg>Delete All Sessions</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Teardown Board">
<doc>Delete the board created for this suite</doc>
<kw name="Delete A Board" library="Board">
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 13:00:14.019" level="INFO">${url} = boards/62c435db1608fb57d7fc2981</msg>
<status status="PASS" starttime="20220705 13:00:14.018" endtime="20220705 13:00:14.019"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 13:00:14.579" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 13:00:14.019" endtime="20220705 13:00:14.579"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 13:00:14.579" endtime="20220705 13:00:14.579"/>
</return>
<msg timestamp="20220705 13:00:14.580" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 13:00:14.018" endtime="20220705 13:00:14.580"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 13:00:14.580" endtime="20220705 13:00:14.580"/>
</return>
<status status="PASS" starttime="20220705 13:00:14.017" endtime="20220705 13:00:14.580"/>
</kw>
<status status="PASS" starttime="20220705 13:00:14.017" endtime="20220705 13:00:14.580"/>
</kw>
<kw name="Delete All Sessions" library="request_own_library">
<status status="PASS" starttime="20220705 13:00:14.580" endtime="20220705 13:00:14.582"/>
</kw>
<status status="PASS" starttime="20220705 13:00:14.017" endtime="20220705 13:00:14.582"/>
</kw>
<doc>Example Test with Trello API Checklists</doc>
<status status="PASS" starttime="20220705 13:00:11.474" endtime="20220705 13:00:14.582"/>
</suite>
<suite id="s1-s1-s4" name="Trello Api Labels Tests" source="/trello/api/trello_api_labels_tests.robot">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Create Trello Session</arg>
<arg>Setup Board And List</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Create Trello Session" library="TrelloAPI">
<doc>Creates a Trello Session</doc>
<kw name="Create Session" library="request_own_library">
<arg>${API_BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<status status="PASS" starttime="20220705 13:00:14.593" endtime="20220705 13:00:14.593"/>
</kw>
<status status="PASS" starttime="20220705 13:00:14.593" endtime="20220705 13:00:14.594"/>
</kw>
<kw name="Setup Board And List">
<doc>Create a board and save its ID and its first list's ID</doc>
<kw name="Create A Board" library="Board">
<var>${BOARD}</var>
<arg>TestBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 13:00:14.595" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 13:00:14.594" endtime="20220705 13:00:14.595"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 13:00:14.595" endtime="20220705 13:00:14.595"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 13:00:14.596" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220705 13:00:14.595" endtime="20220705 13:00:14.596"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 13:00:14.857" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 13:00:14.596" endtime="20220705 13:00:14.857"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 13:00:14.857" endtime="20220705 13:00:14.857"/>
</return>
<msg timestamp="20220705 13:00:14.858" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 13:00:14.594" endtime="20220705 13:00:14.858"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 13:00:14.858" endtime="20220705 13:00:14.858"/>
</return>
<msg timestamp="20220705 13:00:14.858" level="INFO">${BOARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 13:00:14.594" endtime="20220705 13:00:14.858"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_BOARD_ID}</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220705 13:00:14.859" level="INFO">${TEST_SUITE_BOARD_ID} = 62c435debe84de86b5499379</msg>
<status status="PASS" starttime="20220705 13:00:14.858" endtime="20220705 13:00:14.859"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${LISTS}</var>
<arg>boards/${TEST_SUITE_BOARD_ID}/lists</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 13:00:14.966" level="INFO">${LISTS} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 13:00:14.859" endtime="20220705 13:00:14.966"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_LIST_ID}</arg>
<arg>${LISTS.json()}[0][id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220705 13:00:14.967" level="INFO">${TEST_SUITE_LIST_ID} = 62c435debe84de86b5499380</msg>
<status status="PASS" starttime="20220705 13:00:14.966" endtime="20220705 13:00:14.967"/>
</kw>
<status status="PASS" starttime="20220705 13:00:14.594" endtime="20220705 13:00:14.967"/>
</kw>
<status status="PASS" starttime="20220705 13:00:14.593" endtime="20220705 13:00:14.968"/>
</kw>
<test id="s1-s1-s4-t1" name="Create and get label on board" line="14">
<kw name="Create A Label" library="Label">
<var>${response}</var>
<arg>name</arg>
<arg>label2</arg>
<arg>color</arg>
<arg>yellow</arg>
<doc>Creates a new label in the given board.
required_args: idBoard
optional_args: name, color
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>idBoard</arg>
<arg>${idBoard}</arg>
<arg>@{optional_args}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 13:00:14.970" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 13:00:14.970" endtime="20220705 13:00:14.970"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 13:00:14.971" endtime="20220705 13:00:14.971"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 13:00:14.972" level="INFO">${url} = labels/</msg>
<status status="PASS" starttime="20220705 13:00:14.971" endtime="20220705 13:00:14.972"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 13:00:15.108" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 13:00:14.972" endtime="20220705 13:00:15.108"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 13:00:15.109" endtime="20220705 13:00:15.109"/>
</return>
<msg timestamp="20220705 13:00:15.109" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 13:00:14.970" endtime="20220705 13:00:15.109"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 13:00:15.109" endtime="20220705 13:00:15.109"/>
</return>
<msg timestamp="20220705 13:00:15.109" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 13:00:14.969" endtime="20220705 13:00:15.109"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>label</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 13:00:15.110" endtime="20220705 13:00:15.112"/>
</kw>
<status status="PASS" starttime="20220705 13:00:15.110" endtime="20220705 13:00:15.113"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${LABEL_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 13:00:15.113" endtime="20220705 13:00:15.113"/>
</return>
<msg timestamp="20220705 13:00:15.114" level="INFO">${LABEL_ID} = 62c435df672d2853231e9bfb</msg>
<status status="PASS" starttime="20220705 13:00:15.113" endtime="20220705 13:00:15.114"/>
</kw>
<kw name="Get A Label" library="Label">
<var>${response}</var>
<arg>${LABEL_ID}</arg>
<doc>Gets the label with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 13:00:15.116" level="INFO">${url} = labels/62c435df672d2853231e9bfb</msg>
<status status="PASS" starttime="20220705 13:00:15.115" endtime="20220705 13:00:15.116"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 13:00:15.226" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 13:00:15.116" endtime="20220705 13:00:15.226"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 13:00:15.226" endtime="20220705 13:00:15.227"/>
</return>
<msg timestamp="20220705 13:00:15.227" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 13:00:15.115" endtime="20220705 13:00:15.227"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 13:00:15.227" endtime="20220705 13:00:15.227"/>
</return>
<msg timestamp="20220705 13:00:15.227" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 13:00:15.114" endtime="20220705 13:00:15.227"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${LABEL_COLOR}</var>
<arg>${response}</arg>
<arg>color</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 13:00:15.228" endtime="20220705 13:00:15.228"/>
</return>
<msg timestamp="20220705 13:00:15.228" level="INFO">${LABEL_COLOR} = yellow</msg>
<status status="PASS" starttime="20220705 13:00:15.227" endtime="20220705 13:00:15.228"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${LABEL_NAME}</var>
<arg>${response}</arg>
<arg>name</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 13:00:15.229" endtime="20220705 13:00:15.229"/>
</return>
<msg timestamp="20220705 13:00:15.229" level="INFO">${LABEL_NAME} = label2</msg>
<status status="PASS" starttime="20220705 13:00:15.228" endtime="20220705 13:00:15.229"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${LABEL_COLOR}</arg>
<arg>yellow</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220705 13:00:15.229" endtime="20220705 13:00:15.230"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${LABEL_NAME}</arg>
<arg>label2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220705 13:00:15.230" endtime="20220705 13:00:15.230"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Label</arg>
<arg>${LABEL_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Label" library="Label">
<arg>${LABEL_ID}</arg>
<doc>Deletes the label with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 13:00:15.232" level="INFO">${url} = labels/62c435df672d2853231e9bfb</msg>
<status status="PASS" starttime="20220705 13:00:15.232" endtime="20220705 13:00:15.232"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 13:00:16.783" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 13:00:15.232" endtime="20220705 13:00:16.783"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 13:00:16.783" endtime="20220705 13:00:16.783"/>
</return>
<msg timestamp="20220705 13:00:16.783" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 13:00:15.231" endtime="20220705 13:00:16.783"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 13:00:16.783" endtime="20220705 13:00:16.783"/>
</return>
<status status="PASS" starttime="20220705 13:00:15.231" endtime="20220705 13:00:16.784"/>
</kw>
<status status="PASS" starttime="20220705 13:00:15.231" endtime="20220705 13:00:16.784"/>
</kw>
<doc>Verify that a label can be created through API</doc>
<tag>api</tag>
<tag>label.create</tag>
<tag>label.get</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220705 13:00:14.968" endtime="20220705 13:00:16.784"/>
</test>
<test id="s1-s1-s4-t2" name="Update label on board" line="28">
<kw name="Create A Label" library="Label">
<var>${response}</var>
<arg>name</arg>
<arg>label2</arg>
<arg>color</arg>
<arg>yellow</arg>
<doc>Creates a new label in the given board.
required_args: idBoard
optional_args: name, color
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>idBoard</arg>
<arg>${idBoard}</arg>
<arg>@{optional_args}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 13:00:16.786" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 13:00:16.786" endtime="20220705 13:00:16.786"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 13:00:16.786" endtime="20220705 13:00:16.786"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 13:00:16.787" level="INFO">${url} = labels/</msg>
<status status="PASS" starttime="20220705 13:00:16.786" endtime="20220705 13:00:16.787"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 13:00:16.952" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 13:00:16.787" endtime="20220705 13:00:16.952"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 13:00:16.952" endtime="20220705 13:00:16.952"/>
</return>
<msg timestamp="20220705 13:00:16.953" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 13:00:16.785" endtime="20220705 13:00:16.953"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 13:00:16.953" endtime="20220705 13:00:16.953"/>
</return>
<msg timestamp="20220705 13:00:16.953" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 13:00:16.785" endtime="20220705 13:00:16.953"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>label</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 13:00:16.954" endtime="20220705 13:00:16.956"/>
</kw>
<status status="PASS" starttime="20220705 13:00:16.953" endtime="20220705 13:00:16.956"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${LABEL_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 13:00:16.957" endtime="20220705 13:00:16.957"/>
</return>
<msg timestamp="20220705 13:00:16.957" level="INFO">${LABEL_ID} = 62c435e06df824511c652b78</msg>
<status status="PASS" starttime="20220705 13:00:16.956" endtime="20220705 13:00:16.957"/>
</kw>
<kw name="Update A Label" library="Label">
<var>${new_response}</var>
<arg>${LABEL_ID}</arg>
<arg>name</arg>
<arg>label3</arg>
<arg>color</arg>
<arg>orange</arg>
<doc>Updates the label with the given ID
optional_args: name, color
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 13:00:16.958" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 13:00:16.958" endtime="20220705 13:00:16.958"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 13:00:16.958" endtime="20220705 13:00:16.958"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 13:00:16.959" level="INFO">${url} = labels/62c435e06df824511c652b78</msg>
<status status="PASS" starttime="20220705 13:00:16.958" endtime="20220705 13:00:16.959"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 13:00:17.118" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 13:00:16.959" endtime="20220705 13:00:17.118"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 13:00:17.118" endtime="20220705 13:00:17.118"/>
</return>
<msg timestamp="20220705 13:00:17.118" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 13:00:16.958" endtime="20220705 13:00:17.118"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 13:00:17.118" endtime="20220705 13:00:17.118"/>
</return>
<msg timestamp="20220705 13:00:17.119" level="INFO">${new_response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 13:00:16.957" endtime="20220705 13:00:17.119"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${NEW_LABEL_COLOR}</var>
<arg>${new_response}</arg>
<arg>color</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 13:00:17.119" endtime="20220705 13:00:17.119"/>
</return>
<msg timestamp="20220705 13:00:17.120" level="INFO">${NEW_LABEL_COLOR} = orange</msg>
<status status="PASS" starttime="20220705 13:00:17.119" endtime="20220705 13:00:17.120"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${NEW_LABEL_NAME}</var>
<arg>${new_response}</arg>
<arg>name</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 13:00:17.120" endtime="20220705 13:00:17.120"/>
</return>
<msg timestamp="20220705 13:00:17.121" level="INFO">${NEW_LABEL_NAME} = label3</msg>
<status status="PASS" starttime="20220705 13:00:17.120" endtime="20220705 13:00:17.121"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${NEW_LABEL_COLOR}</arg>
<arg>orange</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220705 13:00:17.121" endtime="20220705 13:00:17.121"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${NEW_LABEL_NAME}</arg>
<arg>label3</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220705 13:00:17.121" endtime="20220705 13:00:17.121"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Label</arg>
<arg>${LABEL_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Label" library="Label">
<arg>${LABEL_ID}</arg>
<doc>Deletes the label with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 13:00:17.123" level="INFO">${url} = labels/62c435e06df824511c652b78</msg>
<status status="PASS" starttime="20220705 13:00:17.122" endtime="20220705 13:00:17.123"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 13:00:17.309" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 13:00:17.123" endtime="20220705 13:00:17.309"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 13:00:17.310" endtime="20220705 13:00:17.310"/>
</return>
<msg timestamp="20220705 13:00:17.310" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 13:00:17.122" endtime="20220705 13:00:17.310"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 13:00:17.310" endtime="20220705 13:00:17.310"/>
</return>
<status status="PASS" starttime="20220705 13:00:17.122" endtime="20220705 13:00:17.310"/>
</kw>
<status status="PASS" starttime="20220705 13:00:17.121" endtime="20220705 13:00:17.310"/>
</kw>
<doc>Verify that a label's name and color can be updated through API</doc>
<tag>api</tag>
<tag>label.update</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220705 13:00:16.784" endtime="20220705 13:00:17.310"/>
</test>
<test id="s1-s1-s4-t3" name="Delete label on board" line="41">
<kw name="Create A Label" library="Label">
<var>${response}</var>
<arg>name</arg>
<arg>label2</arg>
<arg>color</arg>
<arg>yellow</arg>
<doc>Creates a new label in the given board.
required_args: idBoard
optional_args: name, color
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>idBoard</arg>
<arg>${idBoard}</arg>
<arg>@{optional_args}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 13:00:17.312" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 13:00:17.312" endtime="20220705 13:00:17.313"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 13:00:17.313" endtime="20220705 13:00:17.313"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 13:00:17.314" level="INFO">${url} = labels/</msg>
<status status="PASS" starttime="20220705 13:00:17.313" endtime="20220705 13:00:17.314"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 13:00:17.471" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 13:00:17.314" endtime="20220705 13:00:17.471"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 13:00:17.471" endtime="20220705 13:00:17.471"/>
</return>
<msg timestamp="20220705 13:00:17.471" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 13:00:17.312" endtime="20220705 13:00:17.471"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 13:00:17.471" endtime="20220705 13:00:17.472"/>
</return>
<msg timestamp="20220705 13:00:17.472" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 13:00:17.311" endtime="20220705 13:00:17.472"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${LABEL_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 13:00:17.472" endtime="20220705 13:00:17.472"/>
</return>
<msg timestamp="20220705 13:00:17.473" level="INFO">${LABEL_ID} = 62c435e19ca3121ad6036413</msg>
<status status="PASS" starttime="20220705 13:00:17.472" endtime="20220705 13:00:17.473"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Label</arg>
<arg>${LABEL_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Label" library="Label">
<arg>${LABEL_ID}</arg>
<doc>Deletes the label with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 13:00:17.475" level="INFO">${url} = labels/62c435e19ca3121ad6036413</msg>
<status status="PASS" starttime="20220705 13:00:17.474" endtime="20220705 13:00:17.475"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 13:00:17.970" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 13:00:17.475" endtime="20220705 13:00:17.970"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 13:00:17.971" endtime="20220705 13:00:17.971"/>
</return>
<msg timestamp="20220705 13:00:17.971" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 13:00:17.474" endtime="20220705 13:00:17.971"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 13:00:17.971" endtime="20220705 13:00:17.971"/>
</return>
<status status="PASS" starttime="20220705 13:00:17.474" endtime="20220705 13:00:17.971"/>
</kw>
<status status="PASS" starttime="20220705 13:00:17.473" endtime="20220705 13:00:17.971"/>
</kw>
<kw name="Get A Label" library="Label">
<arg>${LABEL_ID}</arg>
<arg>status_code=404</arg>
<doc>Gets the label with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 13:00:17.972" level="INFO">${url} = labels/62c435e19ca3121ad6036413</msg>
<status status="PASS" starttime="20220705 13:00:17.972" endtime="20220705 13:00:17.972"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 13:00:18.062" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220705 13:00:17.972" endtime="20220705 13:00:18.062"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 13:00:18.062" endtime="20220705 13:00:18.062"/>
</return>
<msg timestamp="20220705 13:00:18.063" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220705 13:00:17.972" endtime="20220705 13:00:18.063"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 13:00:18.063" endtime="20220705 13:00:18.063"/>
</return>
<status status="PASS" starttime="20220705 13:00:17.971" endtime="20220705 13:00:18.063"/>
</kw>
<doc>Verify that a label can be deleted through API</doc>
<tag>api</tag>
<tag>label.delete</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220705 13:00:17.311" endtime="20220705 13:00:18.063"/>
</test>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Teardown Board</arg>
<arg>Delete All Sessions</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Teardown Board">
<doc>Delete the board created for this session.</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 13:00:18.066" level="INFO">${url} = boards/62c435debe84de86b5499379</msg>
<status status="PASS" starttime="20220705 13:00:18.066" endtime="20220705 13:00:18.066"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 13:00:18.495" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 13:00:18.066" endtime="20220705 13:00:18.495"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 13:00:18.495" endtime="20220705 13:00:18.495"/>
</return>
<msg timestamp="20220705 13:00:18.495" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 13:00:18.065" endtime="20220705 13:00:18.495"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 13:00:18.495" endtime="20220705 13:00:18.495"/>
</return>
<status status="PASS" starttime="20220705 13:00:18.065" endtime="20220705 13:00:18.496"/>
</kw>
<status status="PASS" starttime="20220705 13:00:18.064" endtime="20220705 13:00:18.496"/>
</kw>
<status status="PASS" starttime="20220705 13:00:18.064" endtime="20220705 13:00:18.496"/>
</kw>
<kw name="Delete All Sessions" library="request_own_library">
<status status="PASS" starttime="20220705 13:00:18.496" endtime="20220705 13:00:18.497"/>
</kw>
<status status="PASS" starttime="20220705 13:00:18.064" endtime="20220705 13:00:18.497"/>
</kw>
<doc>Example Test with Trello API Cards</doc>
<status status="PASS" starttime="20220705 13:00:14.584" endtime="20220705 13:00:18.497"/>
</suite>
<suite id="s1-s1-s5" name="Trello Api Lists Tests" source="/trello/api/trello_api_lists_tests.robot">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Create Trello Session</arg>
<arg>Setup Board</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Create Trello Session" library="TrelloAPI">
<doc>Creates a Trello Session</doc>
<kw name="Create Session" library="request_own_library">
<arg>${API_BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<status status="PASS" starttime="20220705 13:00:18.507" endtime="20220705 13:00:18.507"/>
</kw>
<status status="PASS" starttime="20220705 13:00:18.507" endtime="20220705 13:00:18.507"/>
</kw>
<kw name="Setup Board">
<doc>Create a board and save it's id for the suite</doc>
<kw name="Create A Board" library="Board">
<var>${BOARD}</var>
<arg>TestBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 13:00:18.509" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 13:00:18.508" endtime="20220705 13:00:18.509"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 13:00:18.509" endtime="20220705 13:00:18.509"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 13:00:18.509" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220705 13:00:18.509" endtime="20220705 13:00:18.509"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 13:00:18.786" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 13:00:18.509" endtime="20220705 13:00:18.786"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 13:00:18.786" endtime="20220705 13:00:18.786"/>
</return>
<msg timestamp="20220705 13:00:18.786" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 13:00:18.508" endtime="20220705 13:00:18.786"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 13:00:18.786" endtime="20220705 13:00:18.786"/>
</return>
<msg timestamp="20220705 13:00:18.787" level="INFO">${BOARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 13:00:18.508" endtime="20220705 13:00:18.787"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Set Suite Variable</arg>
<arg>\${TEST_SUITE_BOARD_ID}</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_BOARD_ID}</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220705 13:00:18.788" level="INFO">${TEST_SUITE_BOARD_ID} = 62c435e2c9406c865aed81eb</msg>
<status status="PASS" starttime="20220705 13:00:18.787" endtime="20220705 13:00:18.788"/>
</kw>
<status status="PASS" starttime="20220705 13:00:18.787" endtime="20220705 13:00:18.789"/>
</kw>
<status status="PASS" starttime="20220705 13:00:18.507" endtime="20220705 13:00:18.789"/>
</kw>
<status status="PASS" starttime="20220705 13:00:18.506" endtime="20220705 13:00:18.789"/>
</kw>
<test id="s1-s1-s5-t1" name="CREATE a list" line="13">
<kw name="Create A List" library="List">
<var>${response}</var>
<arg>NewList</arg>
<doc>Creates a new List
board id
name the list will have
optional_args: idListSource, pos, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>list</arg>
<arg>name</arg>
<arg>${name}</arg>
<arg>idBoard</arg>
<arg>${idBoard}</arg>
<arg>@{optional_args}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 13:00:18.791" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 13:00:18.791" endtime="20220705 13:00:18.791"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 13:00:18.791" endtime="20220705 13:00:18.791"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 13:00:18.792" level="INFO">${url} = lists/</msg>
<status status="PASS" starttime="20220705 13:00:18.791" endtime="20220705 13:00:18.792"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 13:00:18.942" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 13:00:18.792" endtime="20220705 13:00:18.942"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 13:00:18.942" endtime="20220705 13:00:18.942"/>
</return>
<msg timestamp="20220705 13:00:18.943" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 13:00:18.790" endtime="20220705 13:00:18.943"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 13:00:18.943" endtime="20220705 13:00:18.943"/>
</return>
<msg timestamp="20220705 13:00:18.943" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 13:00:18.790" endtime="20220705 13:00:18.943"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>list</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 13:00:18.944" endtime="20220705 13:00:18.946"/>
</kw>
<status status="PASS" starttime="20220705 13:00:18.943" endtime="20220705 13:00:18.946"/>
</kw>
<doc>Verify that a list can be created through API</doc>
<tag>api</tag>
<tag>list.create</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220705 13:00:18.789" endtime="20220705 13:00:18.946"/>
</test>
<test id="s1-s1-s5-t2" name="UPDATE a list" line="19">
<kw name="Create A List" library="List">
<var>${response}</var>
<arg>NewList</arg>
<doc>Creates a new List
board id
name the list will have
optional_args: idListSource, pos, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>list</arg>
<arg>name</arg>
<arg>${name}</arg>
<arg>idBoard</arg>
<arg>${idBoard}</arg>
<arg>@{optional_args}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 13:00:18.948" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 13:00:18.948" endtime="20220705 13:00:18.948"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 13:00:18.948" endtime="20220705 13:00:18.948"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 13:00:18.949" level="INFO">${url} = lists/</msg>
<status status="PASS" starttime="20220705 13:00:18.948" endtime="20220705 13:00:18.949"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 13:00:19.101" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 13:00:18.949" endtime="20220705 13:00:19.101"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 13:00:19.101" endtime="20220705 13:00:19.101"/>
</return>
<msg timestamp="20220705 13:00:19.102" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 13:00:18.947" endtime="20220705 13:00:19.102"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 13:00:19.102" endtime="20220705 13:00:19.102"/>
</return>
<msg timestamp="20220705 13:00:19.102" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 13:00:18.947" endtime="20220705 13:00:19.102"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>list</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 13:00:19.103" endtime="20220705 13:00:19.105"/>
</kw>
<status status="PASS" starttime="20220705 13:00:19.102" endtime="20220705 13:00:19.105"/>
</kw>
<kw name="Update A List" library="List">
<arg>${response.json()}[id]</arg>
<arg>name</arg>
<arg>NewName</arg>
<doc>Updates the board with the given ID
optional_args: name, idListSource, pos, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>list</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 13:00:19.106" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 13:00:19.106" endtime="20220705 13:00:19.106"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 13:00:19.107" endtime="20220705 13:00:19.107"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 13:00:19.107" level="INFO">${url} = lists/62c435e304b04d525b275237</msg>
<status status="PASS" starttime="20220705 13:00:19.107" endtime="20220705 13:00:19.107"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 13:00:19.246" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 13:00:19.107" endtime="20220705 13:00:19.246"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 13:00:19.246" endtime="20220705 13:00:19.246"/>
</return>
<msg timestamp="20220705 13:00:19.246" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 13:00:19.106" endtime="20220705 13:00:19.246"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 13:00:19.246" endtime="20220705 13:00:19.246"/>
</return>
<status status="PASS" starttime="20220705 13:00:19.105" endtime="20220705 13:00:19.246"/>
</kw>
<kw name="Get A List" library="List">
<var>${new_response}</var>
<arg>${response.json()}[id]</arg>
<doc>Gets the List with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>list</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 13:00:19.248" level="INFO">${url} = lists/62c435e304b04d525b275237</msg>
<status status="PASS" starttime="20220705 13:00:19.248" endtime="20220705 13:00:19.248"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 13:00:19.351" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 13:00:19.248" endtime="20220705 13:00:19.351"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 13:00:19.351" endtime="20220705 13:00:19.351"/>
</return>
<msg timestamp="20220705 13:00:19.351" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 13:00:19.247" endtime="20220705 13:00:19.351"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 13:00:19.351" endtime="20220705 13:00:19.351"/>
</return>
<msg timestamp="20220705 13:00:19.352" level="INFO">${new_response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 13:00:19.246" endtime="20220705 13:00:19.352"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${new_response}</arg>
<arg>list</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 13:00:19.352" endtime="20220705 13:00:19.354"/>
</kw>
<status status="PASS" starttime="20220705 13:00:19.352" endtime="20220705 13:00:19.355"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${new_response.json()}[name]</arg>
<arg>NewName</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220705 13:00:19.355" endtime="20220705 13:00:19.356"/>
</kw>
<doc>Verify that a lists name can be updated through API</doc>
<tag>api</tag>
<tag>list.update</tag>
<tag>regression</tag>
<status status="PASS" starttime="20220705 13:00:18.946" endtime="20220705 13:00:19.356"/>
</test>
<test id="s1-s1-s5-t3" name="ARCHIVE A list" line="29">
<kw name="Create A List" library="List">
<var>${response}</var>
<arg>NewList</arg>
<doc>Creates a new List
board id
name the list will have
optional_args: idListSource, pos, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>list</arg>
<arg>name</arg>
<arg>${name}</arg>
<arg>idBoard</arg>
<arg>${idBoard}</arg>
<arg>@{optional_args}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 13:00:19.358" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 13:00:19.358" endtime="20220705 13:00:19.358"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 13:00:19.358" endtime="20220705 13:00:19.360"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 13:00:19.360" level="INFO">${url} = lists/</msg>
<status status="PASS" starttime="20220705 13:00:19.360" endtime="20220705 13:00:19.360"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 13:00:19.518" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 13:00:19.360" endtime="20220705 13:00:19.519"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 13:00:19.519" endtime="20220705 13:00:19.519"/>
</return>
<msg timestamp="20220705 13:00:19.519" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 13:00:19.358" endtime="20220705 13:00:19.519"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 13:00:19.519" endtime="20220705 13:00:19.519"/>
</return>
<msg timestamp="20220705 13:00:19.519" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 13:00:19.357" endtime="20220705 13:00:19.519"/>
</kw>
<kw name="Archive A List" library="List">
<arg>${response.json()}[id]</arg>
<doc>Deletes the list with the given ID</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>archive_list</arg>
<arg>${id}</arg>
<arg>value</arg>
<arg>true</arg>
<arg>status_code=${status_code}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 13:00:19.521" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 13:00:19.521" endtime="20220705 13:00:19.521"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 13:00:19.521" endtime="20220705 13:00:19.521"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 13:00:19.522" level="INFO">${url} = lists/62c435e37b50f0146f52f6c6/closed</msg>
<status status="PASS" starttime="20220705 13:00:19.521" endtime="20220705 13:00:19.522"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 13:00:19.681" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 13:00:19.522" endtime="20220705 13:00:19.681"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 13:00:19.681" endtime="20220705 13:00:19.681"/>
</return>
<msg timestamp="20220705 13:00:19.681" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 13:00:19.520" endtime="20220705 13:00:19.681"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 13:00:19.681" endtime="20220705 13:00:19.681"/>
</return>
<status status="PASS" starttime="20220705 13:00:19.519" endtime="20220705 13:00:19.681"/>
</kw>
<kw name="Get A List" library="List">
<var>${new_response}</var>
<arg>${response.json()}[id]</arg>
<doc>Gets the List with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>list</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 13:00:19.683" level="INFO">${url} = lists/62c435e37b50f0146f52f6c6</msg>
<status status="PASS" starttime="20220705 13:00:19.683" endtime="20220705 13:00:19.683"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 13:00:19.794" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 13:00:19.683" endtime="20220705 13:00:19.794"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 13:00:19.794" endtime="20220705 13:00:19.794"/>
</return>
<msg timestamp="20220705 13:00:19.794" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 13:00:19.682" endtime="20220705 13:00:19.794"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 13:00:19.794" endtime="20220705 13:00:19.794"/>
</return>
<msg timestamp="20220705 13:00:19.794" level="INFO">${new_response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 13:00:19.681" endtime="20220705 13:00:19.794"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${new_response.json()}[closed]</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220705 13:00:19.795" endtime="20220705 13:00:19.795"/>
</kw>
<doc>Verify that a list can be archived through API</doc>
<tag>api</tag>
<tag>list.archive</tag>
<tag>regression</tag>
<status status="PASS" starttime="20220705 13:00:19.356" endtime="20220705 13:00:19.796"/>
</test>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Teardown Board</arg>
<arg>Delete All Sessions</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Teardown Board">
<doc>Delete the board created for this suite.</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 13:00:19.799" level="INFO">${url} = boards/62c435e2c9406c865aed81eb</msg>
<status status="PASS" starttime="20220705 13:00:19.798" endtime="20220705 13:00:19.799"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 13:00:21.140" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 13:00:19.799" endtime="20220705 13:00:21.140"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 13:00:21.140" endtime="20220705 13:00:21.140"/>
</return>
<msg timestamp="20220705 13:00:21.141" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 13:00:19.798" endtime="20220705 13:00:21.141"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 13:00:21.141" endtime="20220705 13:00:21.141"/>
</return>
<status status="PASS" starttime="20220705 13:00:19.797" endtime="20220705 13:00:21.141"/>
</kw>
<status status="PASS" starttime="20220705 13:00:19.797" endtime="20220705 13:00:21.141"/>
</kw>
<status status="PASS" starttime="20220705 13:00:19.797" endtime="20220705 13:00:21.141"/>
</kw>
<kw name="Delete All Sessions" library="request_own_library">
<status status="PASS" starttime="20220705 13:00:21.141" endtime="20220705 13:00:21.143"/>
</kw>
<status status="PASS" starttime="20220705 13:00:19.796" endtime="20220705 13:00:21.143"/>
</kw>
<doc>Example Test with Trello API lists</doc>
<status status="PASS" starttime="20220705 13:00:18.499" endtime="20220705 13:00:21.143"/>
</suite>
<status status="PASS" starttime="20220705 13:00:02.624" endtime="20220705 13:00:21.145"/>
</suite>
<status status="PASS" starttime="20220705 13:00:02.606" endtime="20220705 13:00:21.149"/>
</suite>
<statistics>
<total>
<stat pass="18" fail="0" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="18" fail="0" skip="0">api</stat>
<stat pass="1" fail="0" skip="0">board.create</stat>
<stat pass="1" fail="0" skip="0">board.delete</stat>
<stat pass="1" fail="0" skip="0">board.get</stat>
<stat pass="2" fail="0" skip="0">board.update</stat>
<stat pass="1" fail="0" skip="0">card.close</stat>
<stat pass="1" fail="0" skip="0">card.create</stat>
<stat pass="1" fail="0" skip="0">card.delete</stat>
<stat pass="1" fail="0" skip="0">card.update</stat>
<stat pass="1" fail="0" skip="0">checklist.create</stat>
<stat pass="1" fail="0" skip="0">checklist.delete</stat>
<stat pass="1" fail="0" skip="0">checklist.update</stat>
<stat pass="1" fail="0" skip="0">label.create</stat>
<stat pass="1" fail="0" skip="0">label.delete</stat>
<stat pass="1" fail="0" skip="0">label.get</stat>
<stat pass="1" fail="0" skip="0">label.update</stat>
<stat pass="1" fail="0" skip="0">list.archive</stat>
<stat pass="1" fail="0" skip="0">list.create</stat>
<stat pass="1" fail="0" skip="0">list.update</stat>
<stat pass="5" fail="0" skip="0">regression</stat>
<stat pass="13" fail="0" skip="0">smoke</stat>
</tag>
<suite>
<stat pass="18" fail="0" skip="0" id="s1" name="Trello">Trello</stat>
<stat pass="18" fail="0" skip="0" id="s1-s1" name="Api">Trello.Api</stat>
<stat pass="5" fail="0" skip="0" id="s1-s1-s1" name="Trello Api Boards Tests">Trello.Api.Trello Api Boards Tests</stat>
<stat pass="4" fail="0" skip="0" id="s1-s1-s2" name="Trello Api Cards Tests">Trello.Api.Trello Api Cards Tests</stat>
<stat pass="3" fail="0" skip="0" id="s1-s1-s3" name="Trello Api Checklists Tests">Trello.Api.Trello Api Checklists Tests</stat>
<stat pass="3" fail="0" skip="0" id="s1-s1-s4" name="Trello Api Labels Tests">Trello.Api.Trello Api Labels Tests</stat>
<stat pass="3" fail="0" skip="0" id="s1-s1-s5" name="Trello Api Lists Tests">Trello.Api.Trello Api Lists Tests</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
