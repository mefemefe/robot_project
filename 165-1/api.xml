<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 5.0.1 (Python 3.10.5 on linux)" generated="20220706 05:23:35.694" rpa="false" schemaversion="3">
<suite id="s1" name="Trello" source="/trello">
<suite id="s1-s1" name="Api" source="/trello/api">
<suite id="s1-s1-s1" name="Trello Api Boards Tests" source="/trello/api/trello_api_boards_tests.robot">
<kw name="Create Trello Session" library="TrelloAPI" type="SETUP">
<doc>Creates a Trello Session</doc>
<kw name="Create Session" library="request_own_library">
<arg>${API_BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<status status="PASS" starttime="20220706 05:23:35.861" endtime="20220706 05:23:35.862"/>
</kw>
<status status="PASS" starttime="20220706 05:23:35.858" endtime="20220706 05:23:35.862"/>
</kw>
<test id="s1-s1-s1-t1" name="CREATE a board" line="9">
<kw name="Create A Board" library="Board">
<var>${response}</var>
<arg>NewBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220706 05:23:35.864" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220706 05:23:35.864" endtime="20220706 05:23:35.865"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220706 05:23:35.865" endtime="20220706 05:23:35.865"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220706 05:23:35.866" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220706 05:23:35.865" endtime="20220706 05:23:35.866"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220706 05:23:36.175" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 05:23:35.866" endtime="20220706 05:23:36.175"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 05:23:36.175" endtime="20220706 05:23:36.175"/>
</return>
<msg timestamp="20220706 05:23:36.176" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 05:23:35.863" endtime="20220706 05:23:36.176"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 05:23:36.176" endtime="20220706 05:23:36.176"/>
</return>
<msg timestamp="20220706 05:23:36.176" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 05:23:35.863" endtime="20220706 05:23:36.176"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>board</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220706 05:23:36.177" endtime="20220706 05:23:36.182"/>
</kw>
<status status="PASS" starttime="20220706 05:23:36.176" endtime="20220706 05:23:36.182"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${response.json()}[id]</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${response.json()}[id]</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220706 05:23:36.185" level="INFO">${url} = boards/62c51c586c225a3484c731b3</msg>
<status status="PASS" starttime="20220706 05:23:36.184" endtime="20220706 05:23:36.185"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220706 05:23:36.711" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 05:23:36.185" endtime="20220706 05:23:36.711"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 05:23:36.711" endtime="20220706 05:23:36.712"/>
</return>
<msg timestamp="20220706 05:23:36.712" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 05:23:36.184" endtime="20220706 05:23:36.712"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 05:23:36.712" endtime="20220706 05:23:36.712"/>
</return>
<status status="PASS" starttime="20220706 05:23:36.183" endtime="20220706 05:23:36.712"/>
</kw>
<status status="PASS" starttime="20220706 05:23:36.182" endtime="20220706 05:23:36.712"/>
</kw>
<doc>Verify that a board can be create through API</doc>
<tag>api</tag>
<tag>board.create</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220706 05:23:35.862" endtime="20220706 05:23:36.712"/>
</test>
<test id="s1-s1-s1-t2" name="UPDATE a Board's name" line="16">
<kw name="Create A Board" library="Board">
<var>${response}</var>
<arg>NewBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220706 05:23:36.716" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220706 05:23:36.716" endtime="20220706 05:23:36.716"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220706 05:23:36.716" endtime="20220706 05:23:36.717"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220706 05:23:36.718" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220706 05:23:36.717" endtime="20220706 05:23:36.718"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220706 05:23:36.917" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 05:23:36.718" endtime="20220706 05:23:36.917"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 05:23:36.917" endtime="20220706 05:23:36.917"/>
</return>
<msg timestamp="20220706 05:23:36.917" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 05:23:36.715" endtime="20220706 05:23:36.917"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 05:23:36.917" endtime="20220706 05:23:36.917"/>
</return>
<msg timestamp="20220706 05:23:36.917" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 05:23:36.714" endtime="20220706 05:23:36.917"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>board</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220706 05:23:36.918" endtime="20220706 05:23:36.923"/>
</kw>
<status status="PASS" starttime="20220706 05:23:36.918" endtime="20220706 05:23:36.923"/>
</kw>
<kw name="Update A Board" library="Board">
<arg>${response.json()}[id]</arg>
<arg>name</arg>
<arg>NewName</arg>
<doc>Updates the board with the given ID
optional_args: name, desc, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220706 05:23:36.925" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220706 05:23:36.925" endtime="20220706 05:23:36.925"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220706 05:23:36.925" endtime="20220706 05:23:36.926"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220706 05:23:36.926" level="INFO">${url} = boards/62c51c5883b7e57cce0fad23</msg>
<status status="PASS" starttime="20220706 05:23:36.926" endtime="20220706 05:23:36.926"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220706 05:23:37.058" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 05:23:36.926" endtime="20220706 05:23:37.058"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 05:23:37.058" endtime="20220706 05:23:37.058"/>
</return>
<msg timestamp="20220706 05:23:37.058" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 05:23:36.924" endtime="20220706 05:23:37.058"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 05:23:37.058" endtime="20220706 05:23:37.058"/>
</return>
<status status="PASS" starttime="20220706 05:23:36.923" endtime="20220706 05:23:37.059"/>
</kw>
<kw name="Get A Board" library="Board">
<var>${new_response}</var>
<arg>${response.json()}[id]</arg>
<doc>Gets the Board with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220706 05:23:37.061" level="INFO">${url} = boards/62c51c5883b7e57cce0fad23</msg>
<status status="PASS" starttime="20220706 05:23:37.060" endtime="20220706 05:23:37.061"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220706 05:23:37.146" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 05:23:37.061" endtime="20220706 05:23:37.146"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 05:23:37.146" endtime="20220706 05:23:37.146"/>
</return>
<msg timestamp="20220706 05:23:37.147" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 05:23:37.060" endtime="20220706 05:23:37.147"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 05:23:37.147" endtime="20220706 05:23:37.147"/>
</return>
<msg timestamp="20220706 05:23:37.147" level="INFO">${new_response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 05:23:37.059" endtime="20220706 05:23:37.147"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${new_response}</arg>
<arg>board</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220706 05:23:37.148" endtime="20220706 05:23:37.152"/>
</kw>
<status status="PASS" starttime="20220706 05:23:37.147" endtime="20220706 05:23:37.152"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${new_response.json()}[name]</arg>
<arg>NewName</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220706 05:23:37.152" endtime="20220706 05:23:37.153"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${response.json()}[id]</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${response.json()}[id]</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220706 05:23:37.156" level="INFO">${url} = boards/62c51c5883b7e57cce0fad23</msg>
<status status="PASS" starttime="20220706 05:23:37.155" endtime="20220706 05:23:37.156"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220706 05:23:37.541" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 05:23:37.156" endtime="20220706 05:23:37.541"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 05:23:37.541" endtime="20220706 05:23:37.541"/>
</return>
<msg timestamp="20220706 05:23:37.541" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 05:23:37.154" endtime="20220706 05:23:37.541"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 05:23:37.542" endtime="20220706 05:23:37.542"/>
</return>
<status status="PASS" starttime="20220706 05:23:37.154" endtime="20220706 05:23:37.542"/>
</kw>
<status status="PASS" starttime="20220706 05:23:37.153" endtime="20220706 05:23:37.542"/>
</kw>
<doc>Verify that a board's name can be updated through API</doc>
<tag>api</tag>
<tag>board.update</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220706 05:23:36.713" endtime="20220706 05:23:37.542"/>
</test>
<test id="s1-s1-s1-t3" name="DELETE A Board" line="27">
<kw name="Create A Board" library="Board">
<var>${response}</var>
<arg>NewBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220706 05:23:37.545" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220706 05:23:37.545" endtime="20220706 05:23:37.545"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220706 05:23:37.545" endtime="20220706 05:23:37.545"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220706 05:23:37.546" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220706 05:23:37.546" endtime="20220706 05:23:37.546"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220706 05:23:37.750" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 05:23:37.546" endtime="20220706 05:23:37.750"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 05:23:37.750" endtime="20220706 05:23:37.750"/>
</return>
<msg timestamp="20220706 05:23:37.751" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 05:23:37.544" endtime="20220706 05:23:37.751"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 05:23:37.751" endtime="20220706 05:23:37.751"/>
</return>
<msg timestamp="20220706 05:23:37.751" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 05:23:37.544" endtime="20220706 05:23:37.751"/>
</kw>
<kw name="Delete A Board" library="Board">
<arg>${response.json()}[id]</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220706 05:23:37.753" level="INFO">${url} = boards/62c51c599407a16a2dce20af</msg>
<status status="PASS" starttime="20220706 05:23:37.753" endtime="20220706 05:23:37.753"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220706 05:23:38.115" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 05:23:37.753" endtime="20220706 05:23:38.115"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 05:23:38.115" endtime="20220706 05:23:38.115"/>
</return>
<msg timestamp="20220706 05:23:38.115" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 05:23:37.752" endtime="20220706 05:23:38.115"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 05:23:38.115" endtime="20220706 05:23:38.115"/>
</return>
<status status="PASS" starttime="20220706 05:23:37.751" endtime="20220706 05:23:38.116"/>
</kw>
<kw name="Get A Board" library="Board">
<arg>${response.json()}[id]</arg>
<arg>status_code=404</arg>
<doc>Gets the Board with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220706 05:23:38.118" level="INFO">${url} = boards/62c51c599407a16a2dce20af</msg>
<status status="PASS" starttime="20220706 05:23:38.117" endtime="20220706 05:23:38.118"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220706 05:23:38.188" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220706 05:23:38.118" endtime="20220706 05:23:38.188"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 05:23:38.188" endtime="20220706 05:23:38.188"/>
</return>
<msg timestamp="20220706 05:23:38.189" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220706 05:23:38.117" endtime="20220706 05:23:38.189"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 05:23:38.189" endtime="20220706 05:23:38.189"/>
</return>
<status status="PASS" starttime="20220706 05:23:38.116" endtime="20220706 05:23:38.189"/>
</kw>
<doc>Verify that a board can be deleted through API</doc>
<tag>api</tag>
<tag>board.delete</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220706 05:23:37.542" endtime="20220706 05:23:38.189"/>
</test>
<test id="s1-s1-s1-t4" name="GET Information of A Board" line="34">
<kw name="Create A Board" library="Board">
<var>${response}</var>
<arg>BoardTest</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220706 05:23:38.192" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220706 05:23:38.192" endtime="20220706 05:23:38.192"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220706 05:23:38.192" endtime="20220706 05:23:38.192"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220706 05:23:38.193" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220706 05:23:38.192" endtime="20220706 05:23:38.193"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220706 05:23:38.395" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 05:23:38.193" endtime="20220706 05:23:38.395"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 05:23:38.395" endtime="20220706 05:23:38.395"/>
</return>
<msg timestamp="20220706 05:23:38.395" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 05:23:38.191" endtime="20220706 05:23:38.395"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 05:23:38.396" endtime="20220706 05:23:38.396"/>
</return>
<msg timestamp="20220706 05:23:38.396" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 05:23:38.191" endtime="20220706 05:23:38.396"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>board</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220706 05:23:38.397" endtime="20220706 05:23:38.401"/>
</kw>
<status status="PASS" starttime="20220706 05:23:38.396" endtime="20220706 05:23:38.402"/>
</kw>
<kw name="Get A Board" library="Board">
<var>${response2}</var>
<arg>${response.json()}[id]</arg>
<doc>Gets the Board with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220706 05:23:38.404" level="INFO">${url} = boards/62c51c5a20b35325cd6603df</msg>
<status status="PASS" starttime="20220706 05:23:38.403" endtime="20220706 05:23:38.404"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220706 05:23:38.488" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 05:23:38.404" endtime="20220706 05:23:38.488"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 05:23:38.488" endtime="20220706 05:23:38.488"/>
</return>
<msg timestamp="20220706 05:23:38.488" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 05:23:38.403" endtime="20220706 05:23:38.488"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 05:23:38.488" endtime="20220706 05:23:38.488"/>
</return>
<msg timestamp="20220706 05:23:38.488" level="INFO">${response2} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 05:23:38.402" endtime="20220706 05:23:38.488"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response2}</arg>
<arg>board</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220706 05:23:38.489" endtime="20220706 05:23:38.493"/>
</kw>
<status status="PASS" starttime="20220706 05:23:38.489" endtime="20220706 05:23:38.494"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${response2.json()}[name]</arg>
<arg>BoardTest</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220706 05:23:38.494" endtime="20220706 05:23:38.495"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${response.json()}[id]</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${response.json()}[id]</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220706 05:23:38.497" level="INFO">${url} = boards/62c51c5a20b35325cd6603df</msg>
<status status="PASS" starttime="20220706 05:23:38.497" endtime="20220706 05:23:38.497"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220706 05:23:38.880" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 05:23:38.497" endtime="20220706 05:23:38.880"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 05:23:38.880" endtime="20220706 05:23:38.880"/>
</return>
<msg timestamp="20220706 05:23:38.881" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 05:23:38.496" endtime="20220706 05:23:38.881"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 05:23:38.881" endtime="20220706 05:23:38.881"/>
</return>
<status status="PASS" starttime="20220706 05:23:38.495" endtime="20220706 05:23:38.881"/>
</kw>
<status status="PASS" starttime="20220706 05:23:38.495" endtime="20220706 05:23:38.881"/>
</kw>
<doc>Verify that a board's information can be accesed through API</doc>
<tag>api</tag>
<tag>board.get</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220706 05:23:38.190" endtime="20220706 05:23:38.881"/>
</test>
<test id="s1-s1-s1-t5" name="UPDATE a Board's description" line="45">
<kw name="Create A Board" library="Board">
<var>${response}</var>
<arg>NewBoardForTest</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220706 05:23:38.885" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220706 05:23:38.884" endtime="20220706 05:23:38.885"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220706 05:23:38.885" endtime="20220706 05:23:38.885"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220706 05:23:38.886" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220706 05:23:38.885" endtime="20220706 05:23:38.886"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220706 05:23:39.133" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 05:23:38.886" endtime="20220706 05:23:39.133"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 05:23:39.133" endtime="20220706 05:23:39.133"/>
</return>
<msg timestamp="20220706 05:23:39.134" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 05:23:38.884" endtime="20220706 05:23:39.134"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 05:23:39.134" endtime="20220706 05:23:39.134"/>
</return>
<msg timestamp="20220706 05:23:39.134" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 05:23:38.883" endtime="20220706 05:23:39.134"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>board</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220706 05:23:39.135" endtime="20220706 05:23:39.140"/>
</kw>
<status status="PASS" starttime="20220706 05:23:39.134" endtime="20220706 05:23:39.140"/>
</kw>
<kw name="Update A Board" library="Board">
<arg>${response.json()}[id]</arg>
<arg>desc</arg>
<arg>sampleDescription</arg>
<doc>Updates the board with the given ID
optional_args: name, desc, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220706 05:23:39.142" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220706 05:23:39.141" endtime="20220706 05:23:39.142"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220706 05:23:39.142" endtime="20220706 05:23:39.142"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220706 05:23:39.142" level="INFO">${url} = boards/62c51c5a023c0c381ce4c942</msg>
<status status="PASS" starttime="20220706 05:23:39.142" endtime="20220706 05:23:39.143"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220706 05:23:39.263" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 05:23:39.143" endtime="20220706 05:23:39.263"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 05:23:39.263" endtime="20220706 05:23:39.263"/>
</return>
<msg timestamp="20220706 05:23:39.264" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 05:23:39.141" endtime="20220706 05:23:39.264"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 05:23:39.264" endtime="20220706 05:23:39.264"/>
</return>
<status status="PASS" starttime="20220706 05:23:39.140" endtime="20220706 05:23:39.264"/>
</kw>
<kw name="Get A Board" library="Board">
<var>${new_response}</var>
<arg>${response.json()}[id]</arg>
<doc>Gets the Board with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220706 05:23:39.266" level="INFO">${url} = boards/62c51c5a023c0c381ce4c942</msg>
<status status="PASS" starttime="20220706 05:23:39.266" endtime="20220706 05:23:39.266"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220706 05:23:39.347" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 05:23:39.267" endtime="20220706 05:23:39.347"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 05:23:39.347" endtime="20220706 05:23:39.347"/>
</return>
<msg timestamp="20220706 05:23:39.347" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 05:23:39.265" endtime="20220706 05:23:39.347"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 05:23:39.347" endtime="20220706 05:23:39.347"/>
</return>
<msg timestamp="20220706 05:23:39.348" level="INFO">${new_response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 05:23:39.264" endtime="20220706 05:23:39.348"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${new_response.json()}[desc]</arg>
<arg>sampleDescription</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220706 05:23:39.348" endtime="20220706 05:23:39.349"/>
</kw>
<kw name="Update A Board" library="Board">
<arg>${response.json()}[id]</arg>
<arg>desc</arg>
<arg>updatedDescription</arg>
<doc>Updates the board with the given ID
optional_args: name, desc, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220706 05:23:39.351" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220706 05:23:39.351" endtime="20220706 05:23:39.351"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220706 05:23:39.351" endtime="20220706 05:23:39.351"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220706 05:23:39.352" level="INFO">${url} = boards/62c51c5a023c0c381ce4c942</msg>
<status status="PASS" starttime="20220706 05:23:39.352" endtime="20220706 05:23:39.352"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220706 05:23:39.468" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 05:23:39.352" endtime="20220706 05:23:39.468"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 05:23:39.469" endtime="20220706 05:23:39.469"/>
</return>
<msg timestamp="20220706 05:23:39.469" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 05:23:39.350" endtime="20220706 05:23:39.469"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 05:23:39.469" endtime="20220706 05:23:39.469"/>
</return>
<status status="PASS" starttime="20220706 05:23:39.349" endtime="20220706 05:23:39.469"/>
</kw>
<kw name="Get A Board" library="Board">
<var>${new_response2}</var>
<arg>${response.json()}[id]</arg>
<doc>Gets the Board with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220706 05:23:39.472" level="INFO">${url} = boards/62c51c5a023c0c381ce4c942</msg>
<status status="PASS" starttime="20220706 05:23:39.471" endtime="20220706 05:23:39.472"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220706 05:23:39.557" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 05:23:39.472" endtime="20220706 05:23:39.557"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 05:23:39.557" endtime="20220706 05:23:39.557"/>
</return>
<msg timestamp="20220706 05:23:39.557" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 05:23:39.470" endtime="20220706 05:23:39.557"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 05:23:39.557" endtime="20220706 05:23:39.557"/>
</return>
<msg timestamp="20220706 05:23:39.558" level="INFO">${new_response2} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 05:23:39.469" endtime="20220706 05:23:39.558"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${new_response2.json()}[desc]</arg>
<arg>updatedDescription</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220706 05:23:39.558" endtime="20220706 05:23:39.559"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${response.json()}[id]</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${response.json()}[id]</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220706 05:23:39.561" level="INFO">${url} = boards/62c51c5a023c0c381ce4c942</msg>
<status status="PASS" starttime="20220706 05:23:39.561" endtime="20220706 05:23:39.562"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220706 05:23:40.014" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 05:23:39.562" endtime="20220706 05:23:40.014"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 05:23:40.014" endtime="20220706 05:23:40.014"/>
</return>
<msg timestamp="20220706 05:23:40.014" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 05:23:39.560" endtime="20220706 05:23:40.014"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 05:23:40.014" endtime="20220706 05:23:40.015"/>
</return>
<status status="PASS" starttime="20220706 05:23:39.559" endtime="20220706 05:23:40.015"/>
</kw>
<status status="PASS" starttime="20220706 05:23:39.559" endtime="20220706 05:23:40.015"/>
</kw>
<doc>Verify that a board's description can be updated through API</doc>
<tag>api</tag>
<tag>board.update</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220706 05:23:38.882" endtime="20220706 05:23:40.015"/>
</test>
<kw name="Delete All Sessions" library="request_own_library" type="TEARDOWN">
<status status="PASS" starttime="20220706 05:23:40.017" endtime="20220706 05:23:40.018"/>
</kw>
<doc>Example Test with Trello API Boards</doc>
<status status="PASS" starttime="20220706 05:23:35.723" endtime="20220706 05:23:40.018"/>
</suite>
<suite id="s1-s1-s2" name="Trello Api Cards Tests" source="/trello/api/trello_api_cards_tests.robot">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Create Trello Session</arg>
<arg>Setup Board And List</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Create Trello Session" library="TrelloAPI">
<doc>Creates a Trello Session</doc>
<kw name="Create Session" library="request_own_library">
<arg>${API_BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<status status="PASS" starttime="20220706 05:23:40.032" endtime="20220706 05:23:40.032"/>
</kw>
<status status="PASS" starttime="20220706 05:23:40.032" endtime="20220706 05:23:40.033"/>
</kw>
<kw name="Setup Board And List">
<doc>Create a board and save its ID and its first list's ID</doc>
<kw name="Create A Board" library="Board">
<var>${BOARD}</var>
<arg>TestBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220706 05:23:40.034" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220706 05:23:40.034" endtime="20220706 05:23:40.034"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220706 05:23:40.034" endtime="20220706 05:23:40.034"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220706 05:23:40.035" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220706 05:23:40.034" endtime="20220706 05:23:40.035"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220706 05:23:40.328" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 05:23:40.035" endtime="20220706 05:23:40.328"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 05:23:40.328" endtime="20220706 05:23:40.328"/>
</return>
<msg timestamp="20220706 05:23:40.328" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 05:23:40.033" endtime="20220706 05:23:40.328"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 05:23:40.328" endtime="20220706 05:23:40.329"/>
</return>
<msg timestamp="20220706 05:23:40.329" level="INFO">${BOARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 05:23:40.033" endtime="20220706 05:23:40.329"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_BOARD_ID}</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220706 05:23:40.330" level="INFO">${TEST_SUITE_BOARD_ID} = 62c51c5ce0c2ee46e541d9d0</msg>
<status status="PASS" starttime="20220706 05:23:40.329" endtime="20220706 05:23:40.330"/>
</kw>
<kw name="Get Lists On A Board" library="Board">
<var>${LISTS}</var>
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Get all the lists in a board</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>lists_on_board</arg>
<arg>${id}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220706 05:23:40.331" level="INFO">${url} = boards/62c51c5ce0c2ee46e541d9d0/lists/</msg>
<status status="PASS" starttime="20220706 05:23:40.331" endtime="20220706 05:23:40.331"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220706 05:23:40.417" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 05:23:40.331" endtime="20220706 05:23:40.417"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 05:23:40.417" endtime="20220706 05:23:40.417"/>
</return>
<msg timestamp="20220706 05:23:40.418" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 05:23:40.331" endtime="20220706 05:23:40.418"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 05:23:40.418" endtime="20220706 05:23:40.418"/>
</return>
<msg timestamp="20220706 05:23:40.418" level="INFO">${LISTS} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 05:23:40.330" endtime="20220706 05:23:40.418"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_LIST_ID}</arg>
<arg>${LISTS.json()}[0][id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220706 05:23:40.419" level="INFO">${TEST_SUITE_LIST_ID} = 62c51c5ce0c2ee46e541d9d7</msg>
<status status="PASS" starttime="20220706 05:23:40.418" endtime="20220706 05:23:40.419"/>
</kw>
<status status="PASS" starttime="20220706 05:23:40.033" endtime="20220706 05:23:40.419"/>
</kw>
<status status="PASS" starttime="20220706 05:23:40.032" endtime="20220706 05:23:40.419"/>
</kw>
<test id="s1-s1-s2-t1" name="Verify A Card Can Be Created" line="13">
<kw name="Create A Card" library="Card">
<var>${response}</var>
<arg>name</arg>
<arg>RFCard2</arg>
<doc>Creates a new card in the given list.
required_args: listId
optional_args: name, desc, pos, idCardSource, idLabels, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>@{optional_args}</arg>
<arg>idList</arg>
<arg>${idList}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220706 05:23:40.422" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220706 05:23:40.422" endtime="20220706 05:23:40.422"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220706 05:23:40.422" endtime="20220706 05:23:40.422"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220706 05:23:40.423" level="INFO">${url} = cards/</msg>
<status status="PASS" starttime="20220706 05:23:40.422" endtime="20220706 05:23:40.423"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220706 05:23:40.601" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 05:23:40.424" endtime="20220706 05:23:40.601"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 05:23:40.601" endtime="20220706 05:23:40.601"/>
</return>
<msg timestamp="20220706 05:23:40.601" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 05:23:40.421" endtime="20220706 05:23:40.601"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 05:23:40.601" endtime="20220706 05:23:40.601"/>
</return>
<msg timestamp="20220706 05:23:40.602" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 05:23:40.420" endtime="20220706 05:23:40.602"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>card</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220706 05:23:40.602" endtime="20220706 05:23:40.609"/>
</kw>
<status status="PASS" starttime="20220706 05:23:40.602" endtime="20220706 05:23:40.609"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220706 05:23:40.610" endtime="20220706 05:23:40.610"/>
</return>
<msg timestamp="20220706 05:23:40.611" level="INFO">${CARD_ID} = 62c51c5c7832c25117d2488b</msg>
<status status="PASS" starttime="20220706 05:23:40.609" endtime="20220706 05:23:40.611"/>
</kw>
<kw name="Get A Card" library="Card">
<var>${response}</var>
<arg>${CARD_ID}</arg>
<doc>Gets the card with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220706 05:23:40.612" level="INFO">${url} = cards/62c51c5c7832c25117d2488b</msg>
<status status="PASS" starttime="20220706 05:23:40.612" endtime="20220706 05:23:40.612"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220706 05:23:40.706" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 05:23:40.612" endtime="20220706 05:23:40.706"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 05:23:40.706" endtime="20220706 05:23:40.706"/>
</return>
<msg timestamp="20220706 05:23:40.707" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 05:23:40.611" endtime="20220706 05:23:40.707"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 05:23:40.707" endtime="20220706 05:23:40.707"/>
</return>
<msg timestamp="20220706 05:23:40.707" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 05:23:40.611" endtime="20220706 05:23:40.707"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_NAME}</var>
<arg>${response}</arg>
<arg>name</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220706 05:23:40.708" endtime="20220706 05:23:40.708"/>
</return>
<msg timestamp="20220706 05:23:40.709" level="INFO">${CARD_NAME} = RFCard2</msg>
<status status="PASS" starttime="20220706 05:23:40.707" endtime="20220706 05:23:40.709"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${CARD_NAME}</arg>
<arg>RFCard2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220706 05:23:40.709" endtime="20220706 05:23:40.709"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Card</arg>
<arg>${CARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Card" library="Card">
<arg>${CARD_ID}</arg>
<doc>Deletes the card with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220706 05:23:40.711" level="INFO">${url} = cards/62c51c5c7832c25117d2488b</msg>
<status status="PASS" starttime="20220706 05:23:40.711" endtime="20220706 05:23:40.711"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220706 05:23:40.884" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 05:23:40.711" endtime="20220706 05:23:40.884"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 05:23:40.884" endtime="20220706 05:23:40.884"/>
</return>
<msg timestamp="20220706 05:23:40.884" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 05:23:40.710" endtime="20220706 05:23:40.885"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 05:23:40.885" endtime="20220706 05:23:40.885"/>
</return>
<status status="PASS" starttime="20220706 05:23:40.710" endtime="20220706 05:23:40.885"/>
</kw>
<status status="PASS" starttime="20220706 05:23:40.709" endtime="20220706 05:23:40.885"/>
</kw>
<doc>Verify that a card can be created through API</doc>
<tag>api</tag>
<tag>card.create</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220706 05:23:40.420" endtime="20220706 05:23:40.885"/>
</test>
<test id="s1-s1-s2-t2" name="Verify A Card Can Be Closed" line="24">
<kw name="Create A Card" library="Card">
<var>${response}</var>
<doc>Creates a new card in the given list.
required_args: listId
optional_args: name, desc, pos, idCardSource, idLabels, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>@{optional_args}</arg>
<arg>idList</arg>
<arg>${idList}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220706 05:23:40.888" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220706 05:23:40.888" endtime="20220706 05:23:40.888"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220706 05:23:40.888" endtime="20220706 05:23:40.889"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220706 05:23:40.891" level="INFO">${url} = cards/</msg>
<status status="PASS" starttime="20220706 05:23:40.889" endtime="20220706 05:23:40.891"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220706 05:23:41.066" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 05:23:40.891" endtime="20220706 05:23:41.066"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 05:23:41.066" endtime="20220706 05:23:41.066"/>
</return>
<msg timestamp="20220706 05:23:41.067" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 05:23:40.887" endtime="20220706 05:23:41.067"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 05:23:41.067" endtime="20220706 05:23:41.067"/>
</return>
<msg timestamp="20220706 05:23:41.067" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 05:23:40.886" endtime="20220706 05:23:41.067"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220706 05:23:41.068" endtime="20220706 05:23:41.068"/>
</return>
<msg timestamp="20220706 05:23:41.072" level="INFO">${CARD_ID} = 62c51c5c155f63513d95537d</msg>
<status status="PASS" starttime="20220706 05:23:41.067" endtime="20220706 05:23:41.072"/>
</kw>
<kw name="Archive A Card" library="Card">
<arg>${CARD_ID}</arg>
<doc>Modifies the card status to closed.</doc>
<kw name="Update A Card" library="Card">
<var>${response}</var>
<arg>${id}</arg>
<arg>closed</arg>
<arg>true</arg>
<arg>status_code=${status_code}</arg>
<doc>Updates the card with the given ID
optional_args: name, desc, closed, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<arg>status_code=${status_code}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220706 05:23:41.075" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220706 05:23:41.074" endtime="20220706 05:23:41.075"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220706 05:23:41.075" endtime="20220706 05:23:41.075"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220706 05:23:41.075" level="INFO">${url} = cards/62c51c5c155f63513d95537d</msg>
<status status="PASS" starttime="20220706 05:23:41.075" endtime="20220706 05:23:41.076"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220706 05:23:41.224" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 05:23:41.076" endtime="20220706 05:23:41.224"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 05:23:41.224" endtime="20220706 05:23:41.225"/>
</return>
<msg timestamp="20220706 05:23:41.225" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 05:23:41.074" endtime="20220706 05:23:41.225"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 05:23:41.225" endtime="20220706 05:23:41.225"/>
</return>
<msg timestamp="20220706 05:23:41.225" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 05:23:41.073" endtime="20220706 05:23:41.225"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 05:23:41.225" endtime="20220706 05:23:41.225"/>
</return>
<status status="PASS" starttime="20220706 05:23:41.072" endtime="20220706 05:23:41.226"/>
</kw>
<kw name="Get A Card" library="Card">
<var>${response}</var>
<arg>${CARD_ID}</arg>
<doc>Gets the card with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220706 05:23:41.227" level="INFO">${url} = cards/62c51c5c155f63513d95537d</msg>
<status status="PASS" starttime="20220706 05:23:41.227" endtime="20220706 05:23:41.227"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220706 05:23:41.319" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 05:23:41.227" endtime="20220706 05:23:41.319"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 05:23:41.319" endtime="20220706 05:23:41.319"/>
</return>
<msg timestamp="20220706 05:23:41.320" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 05:23:41.226" endtime="20220706 05:23:41.320"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 05:23:41.320" endtime="20220706 05:23:41.320"/>
</return>
<msg timestamp="20220706 05:23:41.320" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 05:23:41.226" endtime="20220706 05:23:41.320"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_CLOSED}</var>
<arg>${response}</arg>
<arg>closed</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220706 05:23:41.321" endtime="20220706 05:23:41.321"/>
</return>
<msg timestamp="20220706 05:23:41.322" level="INFO">${CARD_CLOSED} = True</msg>
<status status="PASS" starttime="20220706 05:23:41.320" endtime="20220706 05:23:41.322"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${CARD_CLOSED}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220706 05:23:41.322" endtime="20220706 05:23:41.322"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Card</arg>
<arg>${CARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Card" library="Card">
<arg>${CARD_ID}</arg>
<doc>Deletes the card with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220706 05:23:41.324" level="INFO">${url} = cards/62c51c5c155f63513d95537d</msg>
<status status="PASS" starttime="20220706 05:23:41.324" endtime="20220706 05:23:41.324"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220706 05:23:41.483" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 05:23:41.324" endtime="20220706 05:23:41.483"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 05:23:41.484" endtime="20220706 05:23:41.484"/>
</return>
<msg timestamp="20220706 05:23:41.484" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 05:23:41.323" endtime="20220706 05:23:41.484"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 05:23:41.484" endtime="20220706 05:23:41.484"/>
</return>
<status status="PASS" starttime="20220706 05:23:41.323" endtime="20220706 05:23:41.484"/>
</kw>
<status status="PASS" starttime="20220706 05:23:41.323" endtime="20220706 05:23:41.484"/>
</kw>
<doc>Verify that a card can be closed through API</doc>
<tag>api</tag>
<tag>card.close</tag>
<tag>regression</tag>
<status status="PASS" starttime="20220706 05:23:40.885" endtime="20220706 05:23:41.484"/>
</test>
<test id="s1-s1-s2-t3" name="Verify A Card Can Be Deleted" line="35">
<kw name="Create A Card" library="Card">
<var>${response}</var>
<doc>Creates a new card in the given list.
required_args: listId
optional_args: name, desc, pos, idCardSource, idLabels, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>@{optional_args}</arg>
<arg>idList</arg>
<arg>${idList}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220706 05:23:41.487" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220706 05:23:41.487" endtime="20220706 05:23:41.487"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220706 05:23:41.487" endtime="20220706 05:23:41.488"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220706 05:23:41.488" level="INFO">${url} = cards/</msg>
<status status="PASS" starttime="20220706 05:23:41.488" endtime="20220706 05:23:41.488"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220706 05:23:41.666" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 05:23:41.489" endtime="20220706 05:23:41.666"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 05:23:41.666" endtime="20220706 05:23:41.666"/>
</return>
<msg timestamp="20220706 05:23:41.666" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 05:23:41.486" endtime="20220706 05:23:41.666"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 05:23:41.666" endtime="20220706 05:23:41.667"/>
</return>
<msg timestamp="20220706 05:23:41.667" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 05:23:41.485" endtime="20220706 05:23:41.667"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220706 05:23:41.667" endtime="20220706 05:23:41.667"/>
</return>
<msg timestamp="20220706 05:23:41.668" level="INFO">${CARD_ID} = 62c51c5d1e566e853b6b1838</msg>
<status status="PASS" starttime="20220706 05:23:41.667" endtime="20220706 05:23:41.668"/>
</kw>
<kw name="Delete A Card" library="Card">
<var>${response}</var>
<arg>${CARD_ID}</arg>
<doc>Deletes the card with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220706 05:23:41.670" level="INFO">${url} = cards/62c51c5d1e566e853b6b1838</msg>
<status status="PASS" starttime="20220706 05:23:41.669" endtime="20220706 05:23:41.670"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220706 05:23:41.853" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 05:23:41.670" endtime="20220706 05:23:41.853"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 05:23:41.853" endtime="20220706 05:23:41.853"/>
</return>
<msg timestamp="20220706 05:23:41.853" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 05:23:41.669" endtime="20220706 05:23:41.853"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 05:23:41.854" endtime="20220706 05:23:41.854"/>
</return>
<msg timestamp="20220706 05:23:41.854" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 05:23:41.668" endtime="20220706 05:23:41.854"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>delete</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220706 05:23:41.855" endtime="20220706 05:23:41.857"/>
</kw>
<status status="PASS" starttime="20220706 05:23:41.854" endtime="20220706 05:23:41.857"/>
</kw>
<kw name="Get A Card" library="Card">
<arg>${CARD_ID}</arg>
<arg>status_code=404</arg>
<doc>Gets the card with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220706 05:23:41.859" level="INFO">${url} = cards/62c51c5d1e566e853b6b1838</msg>
<status status="PASS" starttime="20220706 05:23:41.858" endtime="20220706 05:23:41.859"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220706 05:23:41.927" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220706 05:23:41.859" endtime="20220706 05:23:41.927"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 05:23:41.927" endtime="20220706 05:23:41.927"/>
</return>
<msg timestamp="20220706 05:23:41.927" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220706 05:23:41.858" endtime="20220706 05:23:41.927"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 05:23:41.927" endtime="20220706 05:23:41.927"/>
</return>
<status status="PASS" starttime="20220706 05:23:41.857" endtime="20220706 05:23:41.927"/>
</kw>
<doc>Verify that a card can be deleted through API</doc>
<tag>api</tag>
<tag>card.delete</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220706 05:23:41.485" endtime="20220706 05:23:41.928"/>
</test>
<test id="s1-s1-s2-t4" name="Verify A Card Can Be Updated" line="44">
<kw name="Create A Card" library="Card">
<var>${response}</var>
<arg>name</arg>
<arg>RFCard4</arg>
<doc>Creates a new card in the given list.
required_args: listId
optional_args: name, desc, pos, idCardSource, idLabels, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>@{optional_args}</arg>
<arg>idList</arg>
<arg>${idList}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220706 05:23:41.931" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220706 05:23:41.930" endtime="20220706 05:23:41.931"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220706 05:23:41.931" endtime="20220706 05:23:41.931"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220706 05:23:41.932" level="INFO">${url} = cards/</msg>
<status status="PASS" starttime="20220706 05:23:41.931" endtime="20220706 05:23:41.932"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220706 05:23:42.100" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 05:23:41.932" endtime="20220706 05:23:42.100"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 05:23:42.100" endtime="20220706 05:23:42.100"/>
</return>
<msg timestamp="20220706 05:23:42.100" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 05:23:41.930" endtime="20220706 05:23:42.100"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 05:23:42.100" endtime="20220706 05:23:42.100"/>
</return>
<msg timestamp="20220706 05:23:42.101" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 05:23:41.929" endtime="20220706 05:23:42.101"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220706 05:23:42.101" endtime="20220706 05:23:42.101"/>
</return>
<msg timestamp="20220706 05:23:42.102" level="INFO">${CARD_ID} = 62c51c5e2ceab71393a3da7d</msg>
<status status="PASS" starttime="20220706 05:23:42.101" endtime="20220706 05:23:42.102"/>
</kw>
<kw name="Update A Card" library="Card">
<var>${response}</var>
<arg>${CARD_ID}</arg>
<arg>name</arg>
<arg>RFCard5</arg>
<arg>desc</arg>
<arg>Description</arg>
<doc>Updates the card with the given ID
optional_args: name, desc, closed, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<arg>status_code=${status_code}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220706 05:23:42.104" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220706 05:23:42.104" endtime="20220706 05:23:42.104"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220706 05:23:42.104" endtime="20220706 05:23:42.104"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220706 05:23:42.105" level="INFO">${url} = cards/62c51c5e2ceab71393a3da7d</msg>
<status status="PASS" starttime="20220706 05:23:42.104" endtime="20220706 05:23:42.105"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220706 05:23:42.278" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 05:23:42.105" endtime="20220706 05:23:42.278"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 05:23:42.278" endtime="20220706 05:23:42.278"/>
</return>
<msg timestamp="20220706 05:23:42.279" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 05:23:42.103" endtime="20220706 05:23:42.279"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 05:23:42.279" endtime="20220706 05:23:42.279"/>
</return>
<msg timestamp="20220706 05:23:42.279" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 05:23:42.102" endtime="20220706 05:23:42.279"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>card</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220706 05:23:42.280" endtime="20220706 05:23:42.286"/>
</kw>
<status status="PASS" starttime="20220706 05:23:42.279" endtime="20220706 05:23:42.286"/>
</kw>
<kw name="Get A Card" library="Card">
<var>${response}</var>
<arg>${CARD_ID}</arg>
<doc>Gets the card with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220706 05:23:42.287" level="INFO">${url} = cards/62c51c5e2ceab71393a3da7d</msg>
<status status="PASS" starttime="20220706 05:23:42.287" endtime="20220706 05:23:42.288"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220706 05:23:42.378" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 05:23:42.288" endtime="20220706 05:23:42.378"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 05:23:42.378" endtime="20220706 05:23:42.378"/>
</return>
<msg timestamp="20220706 05:23:42.378" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 05:23:42.287" endtime="20220706 05:23:42.378"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 05:23:42.378" endtime="20220706 05:23:42.378"/>
</return>
<msg timestamp="20220706 05:23:42.379" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 05:23:42.286" endtime="20220706 05:23:42.379"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_NAME}</var>
<arg>${response}</arg>
<arg>name</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220706 05:23:42.379" endtime="20220706 05:23:42.379"/>
</return>
<msg timestamp="20220706 05:23:42.380" level="INFO">${CARD_NAME} = RFCard5</msg>
<status status="PASS" starttime="20220706 05:23:42.379" endtime="20220706 05:23:42.380"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_DESC}</var>
<arg>${response}</arg>
<arg>desc</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220706 05:23:42.381" endtime="20220706 05:23:42.381"/>
</return>
<msg timestamp="20220706 05:23:42.382" level="INFO">${CARD_DESC} = Description</msg>
<status status="PASS" starttime="20220706 05:23:42.380" endtime="20220706 05:23:42.382"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${CARD_NAME}</arg>
<arg>RFCard5</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220706 05:23:42.382" endtime="20220706 05:23:42.382"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${CARD_DESC}</arg>
<arg>Description</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220706 05:23:42.383" endtime="20220706 05:23:42.383"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Card</arg>
<arg>${CARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Card" library="Card">
<arg>${CARD_ID}</arg>
<doc>Deletes the card with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220706 05:23:42.385" level="INFO">${url} = cards/62c51c5e2ceab71393a3da7d</msg>
<status status="PASS" starttime="20220706 05:23:42.385" endtime="20220706 05:23:42.385"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220706 05:23:42.555" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 05:23:42.385" endtime="20220706 05:23:42.555"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 05:23:42.555" endtime="20220706 05:23:42.555"/>
</return>
<msg timestamp="20220706 05:23:42.555" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 05:23:42.384" endtime="20220706 05:23:42.555"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 05:23:42.555" endtime="20220706 05:23:42.555"/>
</return>
<status status="PASS" starttime="20220706 05:23:42.383" endtime="20220706 05:23:42.555"/>
</kw>
<status status="PASS" starttime="20220706 05:23:42.383" endtime="20220706 05:23:42.555"/>
</kw>
<doc>Verify that a card's name and Description can be updated through API</doc>
<tag>api</tag>
<tag>card.update</tag>
<tag>regression</tag>
<status status="PASS" starttime="20220706 05:23:41.928" endtime="20220706 05:23:42.555"/>
</test>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Teardown Board</arg>
<arg>Delete All Sessions</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Teardown Board">
<doc>Delete the board created for this suite</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220706 05:23:42.559" level="INFO">${url} = boards/62c51c5ce0c2ee46e541d9d0</msg>
<status status="PASS" starttime="20220706 05:23:42.559" endtime="20220706 05:23:42.559"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220706 05:23:42.899" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 05:23:42.559" endtime="20220706 05:23:42.899"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 05:23:42.899" endtime="20220706 05:23:42.899"/>
</return>
<msg timestamp="20220706 05:23:42.900" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 05:23:42.558" endtime="20220706 05:23:42.900"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 05:23:42.900" endtime="20220706 05:23:42.900"/>
</return>
<status status="PASS" starttime="20220706 05:23:42.558" endtime="20220706 05:23:42.900"/>
</kw>
<status status="PASS" starttime="20220706 05:23:42.557" endtime="20220706 05:23:42.900"/>
</kw>
<status status="PASS" starttime="20220706 05:23:42.557" endtime="20220706 05:23:42.900"/>
</kw>
<kw name="Delete All Sessions" library="request_own_library">
<status status="PASS" starttime="20220706 05:23:42.900" endtime="20220706 05:23:42.902"/>
</kw>
<status status="PASS" starttime="20220706 05:23:42.557" endtime="20220706 05:23:42.902"/>
</kw>
<doc>Example Test with Trello API Cards</doc>
<status status="PASS" starttime="20220706 05:23:40.020" endtime="20220706 05:23:42.902"/>
</suite>
<suite id="s1-s1-s3" name="Trello Api Checklists Tests" source="/trello/api/trello_api_checklists_tests.robot">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Create Trello Session</arg>
<arg>Setup Board, List And Card</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Create Trello Session" library="TrelloAPI">
<doc>Creates a Trello Session</doc>
<kw name="Create Session" library="request_own_library">
<arg>${API_BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<status status="PASS" starttime="20220706 05:23:42.916" endtime="20220706 05:23:42.916"/>
</kw>
<status status="PASS" starttime="20220706 05:23:42.916" endtime="20220706 05:23:42.917"/>
</kw>
<kw name="Setup Board, List And Card">
<doc>Create a board and save its ID and its first list's ID</doc>
<kw name="Create A Board" library="Board">
<var>${BOARD}</var>
<arg>TestBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220706 05:23:42.918" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220706 05:23:42.918" endtime="20220706 05:23:42.918"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220706 05:23:42.918" endtime="20220706 05:23:42.919"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220706 05:23:42.919" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220706 05:23:42.919" endtime="20220706 05:23:42.920"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220706 05:23:43.216" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 05:23:42.920" endtime="20220706 05:23:43.216"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 05:23:43.217" endtime="20220706 05:23:43.217"/>
</return>
<msg timestamp="20220706 05:23:43.217" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 05:23:42.917" endtime="20220706 05:23:43.217"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 05:23:43.217" endtime="20220706 05:23:43.217"/>
</return>
<msg timestamp="20220706 05:23:43.217" level="INFO">${BOARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 05:23:42.917" endtime="20220706 05:23:43.217"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_BOARD_ID}</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220706 05:23:43.218" level="INFO">${TEST_SUITE_BOARD_ID} = 62c51c5f26ca6d757af52726</msg>
<status status="PASS" starttime="20220706 05:23:43.217" endtime="20220706 05:23:43.218"/>
</kw>
<kw name="Get Lists On A Board" library="Board">
<var>${LISTS}</var>
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Get all the lists in a board</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>lists_on_board</arg>
<arg>${id}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220706 05:23:43.220" level="INFO">${url} = boards/62c51c5f26ca6d757af52726/lists/</msg>
<status status="PASS" starttime="20220706 05:23:43.219" endtime="20220706 05:23:43.220"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220706 05:23:43.295" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 05:23:43.220" endtime="20220706 05:23:43.295"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 05:23:43.295" endtime="20220706 05:23:43.295"/>
</return>
<msg timestamp="20220706 05:23:43.296" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 05:23:43.219" endtime="20220706 05:23:43.296"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 05:23:43.296" endtime="20220706 05:23:43.296"/>
</return>
<msg timestamp="20220706 05:23:43.296" level="INFO">${LISTS} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 05:23:43.219" endtime="20220706 05:23:43.296"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_LIST_ID}</arg>
<arg>${LISTS.json()}[0][id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220706 05:23:43.298" level="INFO">${TEST_SUITE_LIST_ID} = 62c51c5f26ca6d757af5272d</msg>
<status status="PASS" starttime="20220706 05:23:43.296" endtime="20220706 05:23:43.298"/>
</kw>
<kw name="Create A Card" library="Card">
<var>${CARD}</var>
<arg>name</arg>
<arg>TestCard</arg>
<doc>Creates a new card in the given list.
required_args: listId
optional_args: name, desc, pos, idCardSource, idLabels, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>@{optional_args}</arg>
<arg>idList</arg>
<arg>${idList}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220706 05:23:43.300" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220706 05:23:43.300" endtime="20220706 05:23:43.300"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220706 05:23:43.300" endtime="20220706 05:23:43.300"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220706 05:23:43.301" level="INFO">${url} = cards/</msg>
<status status="PASS" starttime="20220706 05:23:43.300" endtime="20220706 05:23:43.301"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220706 05:23:43.506" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 05:23:43.301" endtime="20220706 05:23:43.507"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 05:23:43.507" endtime="20220706 05:23:43.507"/>
</return>
<msg timestamp="20220706 05:23:43.507" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 05:23:43.299" endtime="20220706 05:23:43.507"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 05:23:43.507" endtime="20220706 05:23:43.507"/>
</return>
<msg timestamp="20220706 05:23:43.507" level="INFO">${CARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 05:23:43.298" endtime="20220706 05:23:43.507"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_CARD_ID}</arg>
<arg>${CARD.json()}[id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220706 05:23:43.509" level="INFO">${TEST_SUITE_CARD_ID} = 62c51c5f7b69f03147c0fcb8</msg>
<status status="PASS" starttime="20220706 05:23:43.508" endtime="20220706 05:23:43.509"/>
</kw>
<status status="PASS" starttime="20220706 05:23:42.917" endtime="20220706 05:23:43.509"/>
</kw>
<status status="PASS" starttime="20220706 05:23:42.916" endtime="20220706 05:23:43.509"/>
</kw>
<test id="s1-s1-s3-t1" name="Verify A Checklist Can Be Created" line="14">
<kw name="Create A Checklist" library="Checklist">
<var>${response}</var>
<arg>name</arg>
<arg>TestChecklist</arg>
<arg>idCard=${TEST_SUITE_CARD_ID}</arg>
<doc>Creates a new checklist in the given card.
required_args: idCard
optional_args: name, pos, idChecklistSource
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>@{optional_args}</arg>
<arg>idCard</arg>
<arg>${idCard}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220706 05:23:43.512" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220706 05:23:43.511" endtime="20220706 05:23:43.512"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220706 05:23:43.512" endtime="20220706 05:23:43.512"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220706 05:23:43.513" level="INFO">${url} = checklists/</msg>
<status status="PASS" starttime="20220706 05:23:43.512" endtime="20220706 05:23:43.513"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220706 05:23:43.675" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 05:23:43.513" endtime="20220706 05:23:43.675"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 05:23:43.675" endtime="20220706 05:23:43.675"/>
</return>
<msg timestamp="20220706 05:23:43.675" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 05:23:43.511" endtime="20220706 05:23:43.675"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 05:23:43.675" endtime="20220706 05:23:43.676"/>
</return>
<msg timestamp="20220706 05:23:43.676" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 05:23:43.510" endtime="20220706 05:23:43.676"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${checklist_id}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220706 05:23:43.677" endtime="20220706 05:23:43.677"/>
</return>
<msg timestamp="20220706 05:23:43.678" level="INFO">${checklist_id} = 62c51c5f728d47592c2a24cc</msg>
<status status="PASS" starttime="20220706 05:23:43.676" endtime="20220706 05:23:43.678"/>
</kw>
<kw name="Get A Checklist" library="Checklist">
<var>${response}</var>
<arg>${checklist_id}</arg>
<doc>Gets the checklist with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220706 05:23:43.679" level="INFO">${url} = checklists/62c51c5f728d47592c2a24cc</msg>
<status status="PASS" starttime="20220706 05:23:43.679" endtime="20220706 05:23:43.679"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220706 05:23:43.764" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 05:23:43.679" endtime="20220706 05:23:43.764"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 05:23:43.764" endtime="20220706 05:23:43.764"/>
</return>
<msg timestamp="20220706 05:23:43.764" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 05:23:43.678" endtime="20220706 05:23:43.764"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 05:23:43.764" endtime="20220706 05:23:43.764"/>
</return>
<msg timestamp="20220706 05:23:43.765" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 05:23:43.678" endtime="20220706 05:23:43.765"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${checklist_name}</var>
<arg>${response}</arg>
<arg>name</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220706 05:23:43.765" endtime="20220706 05:23:43.765"/>
</return>
<msg timestamp="20220706 05:23:43.766" level="INFO">${checklist_name} = TestChecklist</msg>
<status status="PASS" starttime="20220706 05:23:43.765" endtime="20220706 05:23:43.766"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${checklist_name}</arg>
<arg>TestChecklist</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220706 05:23:43.766" endtime="20220706 05:23:43.767"/>
</kw>
<kw name="Delete A Checklist" library="Checklist" type="TEARDOWN">
<arg>${checklist_id}</arg>
<doc>Deletes the checklist with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220706 05:23:43.769" level="INFO">${url} = checklists/62c51c5f728d47592c2a24cc</msg>
<status status="PASS" starttime="20220706 05:23:43.768" endtime="20220706 05:23:43.769"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220706 05:23:43.906" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 05:23:43.769" endtime="20220706 05:23:43.906"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 05:23:43.906" endtime="20220706 05:23:43.906"/>
</return>
<msg timestamp="20220706 05:23:43.906" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 05:23:43.768" endtime="20220706 05:23:43.906"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 05:23:43.906" endtime="20220706 05:23:43.907"/>
</return>
<status status="PASS" starttime="20220706 05:23:43.767" endtime="20220706 05:23:43.907"/>
</kw>
<doc>Verify that a checklist can be created through API</doc>
<tag>api</tag>
<tag>checklist.create</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220706 05:23:43.509" endtime="20220706 05:23:43.907"/>
</test>
<test id="s1-s1-s3-t2" name="Verify A Checklist Can Be Deleted" line="24">
<kw name="Create A Checklist" library="Checklist">
<var>${response}</var>
<arg>name</arg>
<arg>TestChecklist</arg>
<arg>idCard=${TEST_SUITE_CARD_ID}</arg>
<doc>Creates a new checklist in the given card.
required_args: idCard
optional_args: name, pos, idChecklistSource
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>@{optional_args}</arg>
<arg>idCard</arg>
<arg>${idCard}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220706 05:23:43.910" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220706 05:23:43.910" endtime="20220706 05:23:43.910"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220706 05:23:43.910" endtime="20220706 05:23:43.911"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220706 05:23:43.911" level="INFO">${url} = checklists/</msg>
<status status="PASS" starttime="20220706 05:23:43.911" endtime="20220706 05:23:43.912"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220706 05:23:44.052" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 05:23:43.912" endtime="20220706 05:23:44.052"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 05:23:44.052" endtime="20220706 05:23:44.052"/>
</return>
<msg timestamp="20220706 05:23:44.052" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 05:23:43.909" endtime="20220706 05:23:44.053"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 05:23:44.053" endtime="20220706 05:23:44.053"/>
</return>
<msg timestamp="20220706 05:23:44.053" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 05:23:43.908" endtime="20220706 05:23:44.053"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${checklist_id}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220706 05:23:44.054" endtime="20220706 05:23:44.054"/>
</return>
<msg timestamp="20220706 05:23:44.055" level="INFO">${checklist_id} = 62c51c5f3e46996b60d3004c</msg>
<status status="PASS" starttime="20220706 05:23:44.053" endtime="20220706 05:23:44.055"/>
</kw>
<kw name="Delete A Checklist" library="Checklist">
<var>${response}</var>
<arg>${checklist_id}</arg>
<doc>Deletes the checklist with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220706 05:23:44.056" level="INFO">${url} = checklists/62c51c5f3e46996b60d3004c</msg>
<status status="PASS" starttime="20220706 05:23:44.056" endtime="20220706 05:23:44.056"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220706 05:23:44.199" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 05:23:44.057" endtime="20220706 05:23:44.199"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 05:23:44.199" endtime="20220706 05:23:44.199"/>
</return>
<msg timestamp="20220706 05:23:44.199" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 05:23:44.055" endtime="20220706 05:23:44.199"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 05:23:44.199" endtime="20220706 05:23:44.199"/>
</return>
<msg timestamp="20220706 05:23:44.200" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 05:23:44.055" endtime="20220706 05:23:44.200"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>delete</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220706 05:23:44.200" endtime="20220706 05:23:44.202"/>
</kw>
<status status="PASS" starttime="20220706 05:23:44.200" endtime="20220706 05:23:44.203"/>
</kw>
<kw name="Get A Checklist" library="Checklist">
<arg>${checklist_id}</arg>
<arg>status_code=404</arg>
<doc>Gets the checklist with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220706 05:23:44.204" level="INFO">${url} = checklists/62c51c5f3e46996b60d3004c</msg>
<status status="PASS" starttime="20220706 05:23:44.204" endtime="20220706 05:23:44.204"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220706 05:23:44.287" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220706 05:23:44.205" endtime="20220706 05:23:44.287"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 05:23:44.287" endtime="20220706 05:23:44.288"/>
</return>
<msg timestamp="20220706 05:23:44.288" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220706 05:23:44.203" endtime="20220706 05:23:44.288"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 05:23:44.288" endtime="20220706 05:23:44.288"/>
</return>
<status status="PASS" starttime="20220706 05:23:44.203" endtime="20220706 05:23:44.288"/>
</kw>
<doc>Verify that a checklist can be deleted through API</doc>
<tag>api</tag>
<tag>checklist.delete</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220706 05:23:43.907" endtime="20220706 05:23:44.288"/>
</test>
<test id="s1-s1-s3-t3" name="Verify A Checklist Can Be Updated" line="33">
<kw name="Create A Checklist" library="Checklist">
<var>${response}</var>
<arg>name</arg>
<arg>TestChecklist</arg>
<arg>idCard=${TEST_SUITE_CARD_ID}</arg>
<doc>Creates a new checklist in the given card.
required_args: idCard
optional_args: name, pos, idChecklistSource
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>@{optional_args}</arg>
<arg>idCard</arg>
<arg>${idCard}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220706 05:23:44.294" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220706 05:23:44.292" endtime="20220706 05:23:44.294"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220706 05:23:44.294" endtime="20220706 05:23:44.294"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220706 05:23:44.295" level="INFO">${url} = checklists/</msg>
<status status="PASS" starttime="20220706 05:23:44.294" endtime="20220706 05:23:44.295"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220706 05:23:44.441" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 05:23:44.295" endtime="20220706 05:23:44.441"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 05:23:44.441" endtime="20220706 05:23:44.441"/>
</return>
<msg timestamp="20220706 05:23:44.441" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 05:23:44.291" endtime="20220706 05:23:44.441"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 05:23:44.441" endtime="20220706 05:23:44.441"/>
</return>
<msg timestamp="20220706 05:23:44.442" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 05:23:44.290" endtime="20220706 05:23:44.442"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${checklist_id}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220706 05:23:44.442" endtime="20220706 05:23:44.442"/>
</return>
<msg timestamp="20220706 05:23:44.443" level="INFO">${checklist_id} = 62c51c60844351890938da97</msg>
<status status="PASS" starttime="20220706 05:23:44.442" endtime="20220706 05:23:44.443"/>
</kw>
<kw name="Update A Checklist" library="Checklist">
<var>${response}</var>
<arg>${checklist_id}</arg>
<arg>name</arg>
<arg>TestChecklist2</arg>
<doc>Updates the checklist with the given ID
optional_args: name, pos
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<arg>status_code=${status_code}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220706 05:23:44.445" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220706 05:23:44.445" endtime="20220706 05:23:44.445"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220706 05:23:44.445" endtime="20220706 05:23:44.446"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220706 05:23:44.446" level="INFO">${url} = checklists/62c51c60844351890938da97</msg>
<status status="PASS" starttime="20220706 05:23:44.446" endtime="20220706 05:23:44.446"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220706 05:23:44.554" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 05:23:44.446" endtime="20220706 05:23:44.554"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 05:23:44.554" endtime="20220706 05:23:44.554"/>
</return>
<msg timestamp="20220706 05:23:44.555" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 05:23:44.444" endtime="20220706 05:23:44.555"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 05:23:44.555" endtime="20220706 05:23:44.555"/>
</return>
<msg timestamp="20220706 05:23:44.555" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 05:23:44.443" endtime="20220706 05:23:44.555"/>
</kw>
<kw name="Get A Checklist" library="Checklist">
<var>${response}</var>
<arg>${checklist_id}</arg>
<doc>Gets the checklist with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220706 05:23:44.557" level="INFO">${url} = checklists/62c51c60844351890938da97</msg>
<status status="PASS" starttime="20220706 05:23:44.556" endtime="20220706 05:23:44.557"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220706 05:23:44.640" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 05:23:44.557" endtime="20220706 05:23:44.640"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 05:23:44.640" endtime="20220706 05:23:44.640"/>
</return>
<msg timestamp="20220706 05:23:44.640" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 05:23:44.556" endtime="20220706 05:23:44.640"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 05:23:44.640" endtime="20220706 05:23:44.641"/>
</return>
<msg timestamp="20220706 05:23:44.641" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 05:23:44.555" endtime="20220706 05:23:44.641"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${checklist_name}</var>
<arg>${response}</arg>
<arg>name</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220706 05:23:44.641" endtime="20220706 05:23:44.641"/>
</return>
<msg timestamp="20220706 05:23:44.642" level="INFO">${checklist_name} = TestChecklist2</msg>
<status status="PASS" starttime="20220706 05:23:44.641" endtime="20220706 05:23:44.642"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${checklist_name}</arg>
<arg>TestChecklist2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220706 05:23:44.642" endtime="20220706 05:23:44.643"/>
</kw>
<kw name="Delete A Checklist" library="Checklist" type="TEARDOWN">
<arg>${checklist_id}</arg>
<doc>Deletes the checklist with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220706 05:23:44.656" level="INFO">${url} = checklists/62c51c60844351890938da97</msg>
<status status="PASS" starttime="20220706 05:23:44.656" endtime="20220706 05:23:44.656"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220706 05:23:44.825" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 05:23:44.656" endtime="20220706 05:23:44.825"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 05:23:44.825" endtime="20220706 05:23:44.825"/>
</return>
<msg timestamp="20220706 05:23:44.826" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 05:23:44.655" endtime="20220706 05:23:44.826"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 05:23:44.826" endtime="20220706 05:23:44.826"/>
</return>
<status status="PASS" starttime="20220706 05:23:44.643" endtime="20220706 05:23:44.826"/>
</kw>
<doc>Verify that a checklist's name can be updated through API</doc>
<tag>api</tag>
<tag>checklist.update</tag>
<tag>regression</tag>
<status status="PASS" starttime="20220706 05:23:44.289" endtime="20220706 05:23:44.826"/>
</test>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Teardown Board</arg>
<arg>Delete All Sessions</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Teardown Board">
<doc>Delete the board created for this suite</doc>
<kw name="Delete A Board" library="Board">
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220706 05:23:44.829" level="INFO">${url} = boards/62c51c5f26ca6d757af52726</msg>
<status status="PASS" starttime="20220706 05:23:44.828" endtime="20220706 05:23:44.829"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220706 05:23:45.188" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 05:23:44.829" endtime="20220706 05:23:45.188"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 05:23:45.188" endtime="20220706 05:23:45.188"/>
</return>
<msg timestamp="20220706 05:23:45.188" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 05:23:44.828" endtime="20220706 05:23:45.188"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 05:23:45.189" endtime="20220706 05:23:45.189"/>
</return>
<status status="PASS" starttime="20220706 05:23:44.828" endtime="20220706 05:23:45.189"/>
</kw>
<status status="PASS" starttime="20220706 05:23:44.827" endtime="20220706 05:23:45.189"/>
</kw>
<kw name="Delete All Sessions" library="request_own_library">
<status status="PASS" starttime="20220706 05:23:45.189" endtime="20220706 05:23:45.191"/>
</kw>
<status status="PASS" starttime="20220706 05:23:44.827" endtime="20220706 05:23:45.191"/>
</kw>
<doc>Example Test with Trello API Checklists</doc>
<status status="PASS" starttime="20220706 05:23:42.904" endtime="20220706 05:23:45.191"/>
</suite>
<suite id="s1-s1-s4" name="Trello Api Labels Tests" source="/trello/api/trello_api_labels_tests.robot">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Create Trello Session</arg>
<arg>Setup Board And List</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Create Trello Session" library="TrelloAPI">
<doc>Creates a Trello Session</doc>
<kw name="Create Session" library="request_own_library">
<arg>${API_BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<status status="PASS" starttime="20220706 05:23:45.205" endtime="20220706 05:23:45.205"/>
</kw>
<status status="PASS" starttime="20220706 05:23:45.205" endtime="20220706 05:23:45.205"/>
</kw>
<kw name="Setup Board And List">
<doc>Create a board and save its ID and its first list's ID</doc>
<kw name="Create A Board" library="Board">
<var>${BOARD}</var>
<arg>TestBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220706 05:23:45.207" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220706 05:23:45.207" endtime="20220706 05:23:45.207"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220706 05:23:45.207" endtime="20220706 05:23:45.207"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220706 05:23:45.208" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220706 05:23:45.207" endtime="20220706 05:23:45.208"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220706 05:23:45.503" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 05:23:45.208" endtime="20220706 05:23:45.504"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 05:23:45.504" endtime="20220706 05:23:45.504"/>
</return>
<msg timestamp="20220706 05:23:45.504" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 05:23:45.206" endtime="20220706 05:23:45.504"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 05:23:45.504" endtime="20220706 05:23:45.504"/>
</return>
<msg timestamp="20220706 05:23:45.504" level="INFO">${BOARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 05:23:45.206" endtime="20220706 05:23:45.504"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_BOARD_ID}</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220706 05:23:45.506" level="INFO">${TEST_SUITE_BOARD_ID} = 62c51c619f0ea486aceac6a7</msg>
<status status="PASS" starttime="20220706 05:23:45.505" endtime="20220706 05:23:45.506"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${LISTS}</var>
<arg>boards/${TEST_SUITE_BOARD_ID}/lists</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220706 05:23:45.590" level="INFO">${LISTS} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 05:23:45.506" endtime="20220706 05:23:45.590"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_LIST_ID}</arg>
<arg>${LISTS.json()}[0][id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220706 05:23:45.591" level="INFO">${TEST_SUITE_LIST_ID} = 62c51c619f0ea486aceac6ae</msg>
<status status="PASS" starttime="20220706 05:23:45.590" endtime="20220706 05:23:45.591"/>
</kw>
<status status="PASS" starttime="20220706 05:23:45.206" endtime="20220706 05:23:45.592"/>
</kw>
<status status="PASS" starttime="20220706 05:23:45.204" endtime="20220706 05:23:45.592"/>
</kw>
<test id="s1-s1-s4-t1" name="Create and get label on board" line="14">
<kw name="Create A Label" library="Label">
<var>${response}</var>
<arg>name</arg>
<arg>label2</arg>
<arg>color</arg>
<arg>yellow</arg>
<doc>Creates a new label in the given board.
required_args: idBoard
optional_args: name, color
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>idBoard</arg>
<arg>${idBoard}</arg>
<arg>@{optional_args}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220706 05:23:45.594" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220706 05:23:45.593" endtime="20220706 05:23:45.594"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220706 05:23:45.594" endtime="20220706 05:23:45.594"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220706 05:23:45.595" level="INFO">${url} = labels/</msg>
<status status="PASS" starttime="20220706 05:23:45.594" endtime="20220706 05:23:45.595"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220706 05:23:45.713" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 05:23:45.595" endtime="20220706 05:23:45.713"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 05:23:45.713" endtime="20220706 05:23:45.713"/>
</return>
<msg timestamp="20220706 05:23:45.714" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 05:23:45.593" endtime="20220706 05:23:45.714"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 05:23:45.714" endtime="20220706 05:23:45.714"/>
</return>
<msg timestamp="20220706 05:23:45.714" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 05:23:45.592" endtime="20220706 05:23:45.714"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>label</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220706 05:23:45.715" endtime="20220706 05:23:45.717"/>
</kw>
<status status="PASS" starttime="20220706 05:23:45.714" endtime="20220706 05:23:45.717"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${LABEL_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220706 05:23:45.717" endtime="20220706 05:23:45.718"/>
</return>
<msg timestamp="20220706 05:23:45.718" level="INFO">${LABEL_ID} = 62c51c61caed9375849a4288</msg>
<status status="PASS" starttime="20220706 05:23:45.717" endtime="20220706 05:23:45.718"/>
</kw>
<kw name="Get A Label" library="Label">
<var>${response}</var>
<arg>${LABEL_ID}</arg>
<doc>Gets the label with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220706 05:23:45.720" level="INFO">${url} = labels/62c51c61caed9375849a4288</msg>
<status status="PASS" starttime="20220706 05:23:45.720" endtime="20220706 05:23:45.720"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220706 05:23:45.797" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 05:23:45.720" endtime="20220706 05:23:45.798"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 05:23:45.798" endtime="20220706 05:23:45.798"/>
</return>
<msg timestamp="20220706 05:23:45.798" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 05:23:45.719" endtime="20220706 05:23:45.798"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 05:23:45.798" endtime="20220706 05:23:45.798"/>
</return>
<msg timestamp="20220706 05:23:45.798" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 05:23:45.719" endtime="20220706 05:23:45.798"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${LABEL_COLOR}</var>
<arg>${response}</arg>
<arg>color</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220706 05:23:45.799" endtime="20220706 05:23:45.799"/>
</return>
<msg timestamp="20220706 05:23:45.800" level="INFO">${LABEL_COLOR} = yellow</msg>
<status status="PASS" starttime="20220706 05:23:45.798" endtime="20220706 05:23:45.800"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${LABEL_NAME}</var>
<arg>${response}</arg>
<arg>name</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220706 05:23:45.800" endtime="20220706 05:23:45.800"/>
</return>
<msg timestamp="20220706 05:23:45.801" level="INFO">${LABEL_NAME} = label2</msg>
<status status="PASS" starttime="20220706 05:23:45.800" endtime="20220706 05:23:45.801"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${LABEL_COLOR}</arg>
<arg>yellow</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220706 05:23:45.801" endtime="20220706 05:23:45.802"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${LABEL_NAME}</arg>
<arg>label2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220706 05:23:45.802" endtime="20220706 05:23:45.802"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Label</arg>
<arg>${LABEL_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Label" library="Label">
<arg>${LABEL_ID}</arg>
<doc>Deletes the label with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220706 05:23:45.804" level="INFO">${url} = labels/62c51c61caed9375849a4288</msg>
<status status="PASS" starttime="20220706 05:23:45.804" endtime="20220706 05:23:45.804"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220706 05:23:45.958" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 05:23:45.804" endtime="20220706 05:23:45.958"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 05:23:45.958" endtime="20220706 05:23:45.958"/>
</return>
<msg timestamp="20220706 05:23:45.958" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 05:23:45.803" endtime="20220706 05:23:45.958"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 05:23:45.958" endtime="20220706 05:23:45.958"/>
</return>
<status status="PASS" starttime="20220706 05:23:45.803" endtime="20220706 05:23:45.959"/>
</kw>
<status status="PASS" starttime="20220706 05:23:45.802" endtime="20220706 05:23:45.959"/>
</kw>
<doc>Verify that a label can be created through API</doc>
<tag>api</tag>
<tag>label.create</tag>
<tag>label.get</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220706 05:23:45.592" endtime="20220706 05:23:45.959"/>
</test>
<test id="s1-s1-s4-t2" name="Update label on board" line="28">
<kw name="Create A Label" library="Label">
<var>${response}</var>
<arg>name</arg>
<arg>label2</arg>
<arg>color</arg>
<arg>yellow</arg>
<doc>Creates a new label in the given board.
required_args: idBoard
optional_args: name, color
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>idBoard</arg>
<arg>${idBoard}</arg>
<arg>@{optional_args}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220706 05:23:45.962" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220706 05:23:45.961" endtime="20220706 05:23:45.962"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220706 05:23:45.962" endtime="20220706 05:23:45.963"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220706 05:23:45.963" level="INFO">${url} = labels/</msg>
<status status="PASS" starttime="20220706 05:23:45.963" endtime="20220706 05:23:45.963"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220706 05:23:46.084" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 05:23:45.963" endtime="20220706 05:23:46.084"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 05:23:46.084" endtime="20220706 05:23:46.084"/>
</return>
<msg timestamp="20220706 05:23:46.084" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 05:23:45.961" endtime="20220706 05:23:46.084"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 05:23:46.085" endtime="20220706 05:23:46.085"/>
</return>
<msg timestamp="20220706 05:23:46.085" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 05:23:45.960" endtime="20220706 05:23:46.085"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>label</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220706 05:23:46.085" endtime="20220706 05:23:46.087"/>
</kw>
<status status="PASS" starttime="20220706 05:23:46.085" endtime="20220706 05:23:46.087"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${LABEL_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220706 05:23:46.088" endtime="20220706 05:23:46.088"/>
</return>
<msg timestamp="20220706 05:23:46.088" level="INFO">${LABEL_ID} = 62c51c621422ab85e5e5aa84</msg>
<status status="PASS" starttime="20220706 05:23:46.087" endtime="20220706 05:23:46.089"/>
</kw>
<kw name="Update A Label" library="Label">
<var>${new_response}</var>
<arg>${LABEL_ID}</arg>
<arg>name</arg>
<arg>label3</arg>
<arg>color</arg>
<arg>orange</arg>
<doc>Updates the label with the given ID
optional_args: name, color
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220706 05:23:46.090" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220706 05:23:46.090" endtime="20220706 05:23:46.090"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220706 05:23:46.090" endtime="20220706 05:23:46.090"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220706 05:23:46.091" level="INFO">${url} = labels/62c51c621422ab85e5e5aa84</msg>
<status status="PASS" starttime="20220706 05:23:46.091" endtime="20220706 05:23:46.091"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220706 05:23:46.214" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 05:23:46.091" endtime="20220706 05:23:46.214"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 05:23:46.214" endtime="20220706 05:23:46.214"/>
</return>
<msg timestamp="20220706 05:23:46.215" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 05:23:46.089" endtime="20220706 05:23:46.215"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 05:23:46.215" endtime="20220706 05:23:46.215"/>
</return>
<msg timestamp="20220706 05:23:46.215" level="INFO">${new_response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 05:23:46.089" endtime="20220706 05:23:46.215"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${NEW_LABEL_COLOR}</var>
<arg>${new_response}</arg>
<arg>color</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220706 05:23:46.216" endtime="20220706 05:23:46.216"/>
</return>
<msg timestamp="20220706 05:23:46.217" level="INFO">${NEW_LABEL_COLOR} = orange</msg>
<status status="PASS" starttime="20220706 05:23:46.215" endtime="20220706 05:23:46.217"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${NEW_LABEL_NAME}</var>
<arg>${new_response}</arg>
<arg>name</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220706 05:23:46.217" endtime="20220706 05:23:46.218"/>
</return>
<msg timestamp="20220706 05:23:46.218" level="INFO">${NEW_LABEL_NAME} = label3</msg>
<status status="PASS" starttime="20220706 05:23:46.217" endtime="20220706 05:23:46.218"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${NEW_LABEL_COLOR}</arg>
<arg>orange</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220706 05:23:46.218" endtime="20220706 05:23:46.219"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${NEW_LABEL_NAME}</arg>
<arg>label3</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220706 05:23:46.219" endtime="20220706 05:23:46.219"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Label</arg>
<arg>${LABEL_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Label" library="Label">
<arg>${LABEL_ID}</arg>
<doc>Deletes the label with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220706 05:23:46.221" level="INFO">${url} = labels/62c51c621422ab85e5e5aa84</msg>
<status status="PASS" starttime="20220706 05:23:46.221" endtime="20220706 05:23:46.222"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220706 05:23:46.356" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 05:23:46.222" endtime="20220706 05:23:46.356"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 05:23:46.356" endtime="20220706 05:23:46.356"/>
</return>
<msg timestamp="20220706 05:23:46.356" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 05:23:46.220" endtime="20220706 05:23:46.356"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 05:23:46.356" endtime="20220706 05:23:46.357"/>
</return>
<status status="PASS" starttime="20220706 05:23:46.220" endtime="20220706 05:23:46.357"/>
</kw>
<status status="PASS" starttime="20220706 05:23:46.219" endtime="20220706 05:23:46.357"/>
</kw>
<doc>Verify that a label's name and color can be updated through API</doc>
<tag>api</tag>
<tag>label.update</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220706 05:23:45.959" endtime="20220706 05:23:46.357"/>
</test>
<test id="s1-s1-s4-t3" name="Delete label on board" line="41">
<kw name="Create A Label" library="Label">
<var>${response}</var>
<arg>name</arg>
<arg>label2</arg>
<arg>color</arg>
<arg>yellow</arg>
<doc>Creates a new label in the given board.
required_args: idBoard
optional_args: name, color
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>idBoard</arg>
<arg>${idBoard}</arg>
<arg>@{optional_args}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220706 05:23:46.360" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220706 05:23:46.360" endtime="20220706 05:23:46.360"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220706 05:23:46.360" endtime="20220706 05:23:46.361"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220706 05:23:46.362" level="INFO">${url} = labels/</msg>
<status status="PASS" starttime="20220706 05:23:46.361" endtime="20220706 05:23:46.362"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220706 05:23:46.543" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 05:23:46.362" endtime="20220706 05:23:46.543"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 05:23:46.543" endtime="20220706 05:23:46.543"/>
</return>
<msg timestamp="20220706 05:23:46.543" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 05:23:46.359" endtime="20220706 05:23:46.543"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 05:23:46.544" endtime="20220706 05:23:46.544"/>
</return>
<msg timestamp="20220706 05:23:46.544" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 05:23:46.359" endtime="20220706 05:23:46.544"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${LABEL_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220706 05:23:46.544" endtime="20220706 05:23:46.544"/>
</return>
<msg timestamp="20220706 05:23:46.545" level="INFO">${LABEL_ID} = 62c51c622d967388a3c347ca</msg>
<status status="PASS" starttime="20220706 05:23:46.544" endtime="20220706 05:23:46.545"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Label</arg>
<arg>${LABEL_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Label" library="Label">
<arg>${LABEL_ID}</arg>
<doc>Deletes the label with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220706 05:23:46.547" level="INFO">${url} = labels/62c51c622d967388a3c347ca</msg>
<status status="PASS" starttime="20220706 05:23:46.547" endtime="20220706 05:23:46.548"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220706 05:23:46.707" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 05:23:46.548" endtime="20220706 05:23:46.707"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 05:23:46.707" endtime="20220706 05:23:46.707"/>
</return>
<msg timestamp="20220706 05:23:46.707" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 05:23:46.546" endtime="20220706 05:23:46.707"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 05:23:46.707" endtime="20220706 05:23:46.707"/>
</return>
<status status="PASS" starttime="20220706 05:23:46.546" endtime="20220706 05:23:46.708"/>
</kw>
<status status="PASS" starttime="20220706 05:23:46.546" endtime="20220706 05:23:46.708"/>
</kw>
<kw name="Get A Label" library="Label">
<arg>${LABEL_ID}</arg>
<arg>status_code=404</arg>
<doc>Gets the label with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220706 05:23:46.709" level="INFO">${url} = labels/62c51c622d967388a3c347ca</msg>
<status status="PASS" starttime="20220706 05:23:46.709" endtime="20220706 05:23:46.709"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220706 05:23:46.781" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220706 05:23:46.709" endtime="20220706 05:23:46.781"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 05:23:46.781" endtime="20220706 05:23:46.781"/>
</return>
<msg timestamp="20220706 05:23:46.781" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220706 05:23:46.708" endtime="20220706 05:23:46.781"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 05:23:46.781" endtime="20220706 05:23:46.781"/>
</return>
<status status="PASS" starttime="20220706 05:23:46.708" endtime="20220706 05:23:46.782"/>
</kw>
<doc>Verify that a label can be deleted through API</doc>
<tag>api</tag>
<tag>label.delete</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220706 05:23:46.357" endtime="20220706 05:23:46.782"/>
</test>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Teardown Board</arg>
<arg>Delete All Sessions</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Teardown Board">
<doc>Delete the board created for this session.</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220706 05:23:46.785" level="INFO">${url} = boards/62c51c619f0ea486aceac6a7</msg>
<status status="PASS" starttime="20220706 05:23:46.785" endtime="20220706 05:23:46.785"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220706 05:23:47.132" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 05:23:46.785" endtime="20220706 05:23:47.132"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 05:23:47.132" endtime="20220706 05:23:47.132"/>
</return>
<msg timestamp="20220706 05:23:47.132" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 05:23:46.784" endtime="20220706 05:23:47.132"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 05:23:47.133" endtime="20220706 05:23:47.133"/>
</return>
<status status="PASS" starttime="20220706 05:23:46.784" endtime="20220706 05:23:47.133"/>
</kw>
<status status="PASS" starttime="20220706 05:23:46.783" endtime="20220706 05:23:47.133"/>
</kw>
<status status="PASS" starttime="20220706 05:23:46.783" endtime="20220706 05:23:47.133"/>
</kw>
<kw name="Delete All Sessions" library="request_own_library">
<status status="PASS" starttime="20220706 05:23:47.133" endtime="20220706 05:23:47.134"/>
</kw>
<status status="PASS" starttime="20220706 05:23:46.782" endtime="20220706 05:23:47.134"/>
</kw>
<doc>Example Test with Trello API Cards</doc>
<status status="PASS" starttime="20220706 05:23:45.192" endtime="20220706 05:23:47.135"/>
</suite>
<suite id="s1-s1-s5" name="Trello Api Lists Tests" source="/trello/api/trello_api_lists_tests.robot">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Create Trello Session</arg>
<arg>Setup Board</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Create Trello Session" library="TrelloAPI">
<doc>Creates a Trello Session</doc>
<kw name="Create Session" library="request_own_library">
<arg>${API_BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<status status="PASS" starttime="20220706 05:23:47.146" endtime="20220706 05:23:47.147"/>
</kw>
<status status="PASS" starttime="20220706 05:23:47.146" endtime="20220706 05:23:47.147"/>
</kw>
<kw name="Setup Board">
<doc>Create a board and save it's id for the suite</doc>
<kw name="Create A Board" library="Board">
<var>${BOARD}</var>
<arg>TestBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220706 05:23:47.148" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220706 05:23:47.148" endtime="20220706 05:23:47.148"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220706 05:23:47.148" endtime="20220706 05:23:47.149"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220706 05:23:47.149" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220706 05:23:47.149" endtime="20220706 05:23:47.149"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220706 05:23:47.461" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 05:23:47.150" endtime="20220706 05:23:47.461"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 05:23:47.461" endtime="20220706 05:23:47.461"/>
</return>
<msg timestamp="20220706 05:23:47.461" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 05:23:47.147" endtime="20220706 05:23:47.461"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 05:23:47.461" endtime="20220706 05:23:47.461"/>
</return>
<msg timestamp="20220706 05:23:47.462" level="INFO">${BOARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 05:23:47.147" endtime="20220706 05:23:47.462"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Set Suite Variable</arg>
<arg>\${TEST_SUITE_BOARD_ID}</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_BOARD_ID}</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220706 05:23:47.463" level="INFO">${TEST_SUITE_BOARD_ID} = 62c51c638a19b94a0dfa5ef6</msg>
<status status="PASS" starttime="20220706 05:23:47.462" endtime="20220706 05:23:47.463"/>
</kw>
<status status="PASS" starttime="20220706 05:23:47.462" endtime="20220706 05:23:47.463"/>
</kw>
<status status="PASS" starttime="20220706 05:23:47.147" endtime="20220706 05:23:47.464"/>
</kw>
<status status="PASS" starttime="20220706 05:23:47.145" endtime="20220706 05:23:47.464"/>
</kw>
<test id="s1-s1-s5-t1" name="CREATE a list" line="13">
<kw name="Create A List" library="List">
<var>${response}</var>
<arg>NewList</arg>
<doc>Creates a new List
board id
name the list will have
optional_args: idListSource, pos, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>list</arg>
<arg>name</arg>
<arg>${name}</arg>
<arg>idBoard</arg>
<arg>${idBoard}</arg>
<arg>@{optional_args}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220706 05:23:47.466" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220706 05:23:47.466" endtime="20220706 05:23:47.466"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220706 05:23:47.466" endtime="20220706 05:23:47.467"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220706 05:23:47.468" level="INFO">${url} = lists/</msg>
<status status="PASS" starttime="20220706 05:23:47.467" endtime="20220706 05:23:47.468"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220706 05:23:47.592" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 05:23:47.468" endtime="20220706 05:23:47.592"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 05:23:47.592" endtime="20220706 05:23:47.592"/>
</return>
<msg timestamp="20220706 05:23:47.592" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 05:23:47.465" endtime="20220706 05:23:47.592"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 05:23:47.592" endtime="20220706 05:23:47.592"/>
</return>
<msg timestamp="20220706 05:23:47.592" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 05:23:47.465" endtime="20220706 05:23:47.592"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>list</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220706 05:23:47.593" endtime="20220706 05:23:47.595"/>
</kw>
<status status="PASS" starttime="20220706 05:23:47.593" endtime="20220706 05:23:47.595"/>
</kw>
<doc>Verify that a list can be created through API</doc>
<tag>api</tag>
<tag>list.create</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220706 05:23:47.464" endtime="20220706 05:23:47.595"/>
</test>
<test id="s1-s1-s5-t2" name="UPDATE a list" line="19">
<kw name="Create A List" library="List">
<var>${response}</var>
<arg>NewList</arg>
<doc>Creates a new List
board id
name the list will have
optional_args: idListSource, pos, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>list</arg>
<arg>name</arg>
<arg>${name}</arg>
<arg>idBoard</arg>
<arg>${idBoard}</arg>
<arg>@{optional_args}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220706 05:23:47.599" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220706 05:23:47.598" endtime="20220706 05:23:47.599"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220706 05:23:47.599" endtime="20220706 05:23:47.599"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220706 05:23:47.600" level="INFO">${url} = lists/</msg>
<status status="PASS" starttime="20220706 05:23:47.599" endtime="20220706 05:23:47.600"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220706 05:23:47.726" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 05:23:47.600" endtime="20220706 05:23:47.726"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 05:23:47.726" endtime="20220706 05:23:47.726"/>
</return>
<msg timestamp="20220706 05:23:47.726" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 05:23:47.598" endtime="20220706 05:23:47.726"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 05:23:47.726" endtime="20220706 05:23:47.726"/>
</return>
<msg timestamp="20220706 05:23:47.727" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 05:23:47.597" endtime="20220706 05:23:47.727"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>list</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220706 05:23:47.727" endtime="20220706 05:23:47.729"/>
</kw>
<status status="PASS" starttime="20220706 05:23:47.727" endtime="20220706 05:23:47.729"/>
</kw>
<kw name="Update A List" library="List">
<arg>${response.json()}[id]</arg>
<arg>name</arg>
<arg>NewName</arg>
<doc>Updates the board with the given ID
optional_args: name, idListSource, pos, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>list</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220706 05:23:47.732" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220706 05:23:47.731" endtime="20220706 05:23:47.732"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220706 05:23:47.732" endtime="20220706 05:23:47.732"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220706 05:23:47.733" level="INFO">${url} = lists/62c51c63e7153b5df88da4ad</msg>
<status status="PASS" starttime="20220706 05:23:47.732" endtime="20220706 05:23:47.733"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220706 05:23:47.853" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 05:23:47.733" endtime="20220706 05:23:47.853"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 05:23:47.853" endtime="20220706 05:23:47.853"/>
</return>
<msg timestamp="20220706 05:23:47.853" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 05:23:47.730" endtime="20220706 05:23:47.853"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 05:23:47.853" endtime="20220706 05:23:47.853"/>
</return>
<status status="PASS" starttime="20220706 05:23:47.729" endtime="20220706 05:23:47.854"/>
</kw>
<kw name="Get A List" library="List">
<var>${new_response}</var>
<arg>${response.json()}[id]</arg>
<doc>Gets the List with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>list</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220706 05:23:47.855" level="INFO">${url} = lists/62c51c63e7153b5df88da4ad</msg>
<status status="PASS" starttime="20220706 05:23:47.855" endtime="20220706 05:23:47.855"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220706 05:23:47.930" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 05:23:47.856" endtime="20220706 05:23:47.930"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 05:23:47.930" endtime="20220706 05:23:47.930"/>
</return>
<msg timestamp="20220706 05:23:47.930" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 05:23:47.854" endtime="20220706 05:23:47.930"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 05:23:47.930" endtime="20220706 05:23:47.930"/>
</return>
<msg timestamp="20220706 05:23:47.931" level="INFO">${new_response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 05:23:47.854" endtime="20220706 05:23:47.931"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${new_response}</arg>
<arg>list</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220706 05:23:47.931" endtime="20220706 05:23:47.933"/>
</kw>
<status status="PASS" starttime="20220706 05:23:47.931" endtime="20220706 05:23:47.933"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${new_response.json()}[name]</arg>
<arg>NewName</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220706 05:23:47.933" endtime="20220706 05:23:47.934"/>
</kw>
<doc>Verify that a lists name can be updated through API</doc>
<tag>api</tag>
<tag>list.update</tag>
<tag>regression</tag>
<status status="PASS" starttime="20220706 05:23:47.596" endtime="20220706 05:23:47.934"/>
</test>
<test id="s1-s1-s5-t3" name="ARCHIVE A list" line="29">
<kw name="Create A List" library="List">
<var>${response}</var>
<arg>NewList</arg>
<doc>Creates a new List
board id
name the list will have
optional_args: idListSource, pos, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>list</arg>
<arg>name</arg>
<arg>${name}</arg>
<arg>idBoard</arg>
<arg>${idBoard}</arg>
<arg>@{optional_args}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220706 05:23:47.939" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220706 05:23:47.938" endtime="20220706 05:23:47.939"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220706 05:23:47.939" endtime="20220706 05:23:47.940"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220706 05:23:47.940" level="INFO">${url} = lists/</msg>
<status status="PASS" starttime="20220706 05:23:47.940" endtime="20220706 05:23:47.940"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220706 05:23:48.064" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 05:23:47.941" endtime="20220706 05:23:48.064"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 05:23:48.064" endtime="20220706 05:23:48.064"/>
</return>
<msg timestamp="20220706 05:23:48.064" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 05:23:47.938" endtime="20220706 05:23:48.064"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 05:23:48.064" endtime="20220706 05:23:48.064"/>
</return>
<msg timestamp="20220706 05:23:48.065" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 05:23:47.936" endtime="20220706 05:23:48.065"/>
</kw>
<kw name="Archive A List" library="List">
<arg>${response.json()}[id]</arg>
<doc>Deletes the list with the given ID</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>archive_list</arg>
<arg>${id}</arg>
<arg>value</arg>
<arg>true</arg>
<arg>status_code=${status_code}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220706 05:23:48.067" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220706 05:23:48.067" endtime="20220706 05:23:48.067"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220706 05:23:48.067" endtime="20220706 05:23:48.067"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220706 05:23:48.068" level="INFO">${url} = lists/62c51c6412693a5f184db72a/closed</msg>
<status status="PASS" starttime="20220706 05:23:48.067" endtime="20220706 05:23:48.068"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220706 05:23:48.190" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 05:23:48.068" endtime="20220706 05:23:48.190"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 05:23:48.191" endtime="20220706 05:23:48.191"/>
</return>
<msg timestamp="20220706 05:23:48.191" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 05:23:48.066" endtime="20220706 05:23:48.191"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 05:23:48.191" endtime="20220706 05:23:48.191"/>
</return>
<status status="PASS" starttime="20220706 05:23:48.065" endtime="20220706 05:23:48.191"/>
</kw>
<kw name="Get A List" library="List">
<var>${new_response}</var>
<arg>${response.json()}[id]</arg>
<doc>Gets the List with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>list</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220706 05:23:48.193" level="INFO">${url} = lists/62c51c6412693a5f184db72a</msg>
<status status="PASS" starttime="20220706 05:23:48.193" endtime="20220706 05:23:48.193"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220706 05:23:48.269" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 05:23:48.194" endtime="20220706 05:23:48.269"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 05:23:48.269" endtime="20220706 05:23:48.269"/>
</return>
<msg timestamp="20220706 05:23:48.269" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 05:23:48.192" endtime="20220706 05:23:48.269"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 05:23:48.269" endtime="20220706 05:23:48.269"/>
</return>
<msg timestamp="20220706 05:23:48.270" level="INFO">${new_response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 05:23:48.191" endtime="20220706 05:23:48.270"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${new_response.json()}[closed]</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220706 05:23:48.270" endtime="20220706 05:23:48.270"/>
</kw>
<doc>Verify that a list can be archived through API</doc>
<tag>api</tag>
<tag>list.archive</tag>
<tag>regression</tag>
<status status="PASS" starttime="20220706 05:23:47.935" endtime="20220706 05:23:48.271"/>
</test>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Teardown Board</arg>
<arg>Delete All Sessions</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Teardown Board">
<doc>Delete the board created for this suite.</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220706 05:23:48.274" level="INFO">${url} = boards/62c51c638a19b94a0dfa5ef6</msg>
<status status="PASS" starttime="20220706 05:23:48.274" endtime="20220706 05:23:48.274"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220706 05:23:48.655" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 05:23:48.274" endtime="20220706 05:23:48.655"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 05:23:48.655" endtime="20220706 05:23:48.655"/>
</return>
<msg timestamp="20220706 05:23:48.656" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220706 05:23:48.273" endtime="20220706 05:23:48.656"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220706 05:23:48.656" endtime="20220706 05:23:48.656"/>
</return>
<status status="PASS" starttime="20220706 05:23:48.273" endtime="20220706 05:23:48.656"/>
</kw>
<status status="PASS" starttime="20220706 05:23:48.273" endtime="20220706 05:23:48.656"/>
</kw>
<status status="PASS" starttime="20220706 05:23:48.272" endtime="20220706 05:23:48.656"/>
</kw>
<kw name="Delete All Sessions" library="request_own_library">
<status status="PASS" starttime="20220706 05:23:48.656" endtime="20220706 05:23:48.658"/>
</kw>
<status status="PASS" starttime="20220706 05:23:48.272" endtime="20220706 05:23:48.658"/>
</kw>
<doc>Example Test with Trello API lists</doc>
<status status="PASS" starttime="20220706 05:23:47.136" endtime="20220706 05:23:48.658"/>
</suite>
<status status="PASS" starttime="20220706 05:23:35.720" endtime="20220706 05:23:48.660"/>
</suite>
<status status="PASS" starttime="20220706 05:23:35.695" endtime="20220706 05:23:48.663"/>
</suite>
<statistics>
<total>
<stat pass="18" fail="0" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="18" fail="0" skip="0">api</stat>
<stat pass="1" fail="0" skip="0">board.create</stat>
<stat pass="1" fail="0" skip="0">board.delete</stat>
<stat pass="1" fail="0" skip="0">board.get</stat>
<stat pass="2" fail="0" skip="0">board.update</stat>
<stat pass="1" fail="0" skip="0">card.close</stat>
<stat pass="1" fail="0" skip="0">card.create</stat>
<stat pass="1" fail="0" skip="0">card.delete</stat>
<stat pass="1" fail="0" skip="0">card.update</stat>
<stat pass="1" fail="0" skip="0">checklist.create</stat>
<stat pass="1" fail="0" skip="0">checklist.delete</stat>
<stat pass="1" fail="0" skip="0">checklist.update</stat>
<stat pass="1" fail="0" skip="0">label.create</stat>
<stat pass="1" fail="0" skip="0">label.delete</stat>
<stat pass="1" fail="0" skip="0">label.get</stat>
<stat pass="1" fail="0" skip="0">label.update</stat>
<stat pass="1" fail="0" skip="0">list.archive</stat>
<stat pass="1" fail="0" skip="0">list.create</stat>
<stat pass="1" fail="0" skip="0">list.update</stat>
<stat pass="5" fail="0" skip="0">regression</stat>
<stat pass="13" fail="0" skip="0">smoke</stat>
</tag>
<suite>
<stat pass="18" fail="0" skip="0" id="s1" name="Trello">Trello</stat>
<stat pass="18" fail="0" skip="0" id="s1-s1" name="Api">Trello.Api</stat>
<stat pass="5" fail="0" skip="0" id="s1-s1-s1" name="Trello Api Boards Tests">Trello.Api.Trello Api Boards Tests</stat>
<stat pass="4" fail="0" skip="0" id="s1-s1-s2" name="Trello Api Cards Tests">Trello.Api.Trello Api Cards Tests</stat>
<stat pass="3" fail="0" skip="0" id="s1-s1-s3" name="Trello Api Checklists Tests">Trello.Api.Trello Api Checklists Tests</stat>
<stat pass="3" fail="0" skip="0" id="s1-s1-s4" name="Trello Api Labels Tests">Trello.Api.Trello Api Labels Tests</stat>
<stat pass="3" fail="0" skip="0" id="s1-s1-s5" name="Trello Api Lists Tests">Trello.Api.Trello Api Lists Tests</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
