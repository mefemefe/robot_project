<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 5.0.1 (Python 3.10.5 on linux)" generated="20220704 17:25:47.530" rpa="false" schemaversion="3">
<suite id="s1" name="Trello" source="/trello">
<suite id="s1-s1" name="Api" source="/trello/api">
<suite id="s1-s1-s1" name="Trello Api Boards Tests" source="/trello/api/trello_api_boards_tests.robot">
<kw name="Create Trello Session" library="TrelloAPI" type="SETUP">
<doc>Creates a Trello Session</doc>
<kw name="Create Session" library="request_own_library">
<arg>${API_BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<status status="PASS" starttime="20220704 17:25:47.653" endtime="20220704 17:25:47.653"/>
</kw>
<status status="PASS" starttime="20220704 17:25:47.652" endtime="20220704 17:25:47.653"/>
</kw>
<test id="s1-s1-s1-t1" name="CREATE a board" line="9">
<kw name="Create A Board" library="Board">
<var>${response}</var>
<arg>NewBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 17:25:47.655" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 17:25:47.655" endtime="20220704 17:25:47.655"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 17:25:47.655" endtime="20220704 17:25:47.656"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 17:25:47.656" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220704 17:25:47.656" endtime="20220704 17:25:47.656"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 17:25:47.835" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 17:25:47.656" endtime="20220704 17:25:47.835"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 17:25:47.835" endtime="20220704 17:25:47.835"/>
</return>
<msg timestamp="20220704 17:25:47.835" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 17:25:47.655" endtime="20220704 17:25:47.835"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 17:25:47.835" endtime="20220704 17:25:47.835"/>
</return>
<msg timestamp="20220704 17:25:47.835" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 17:25:47.654" endtime="20220704 17:25:47.835"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>board</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220704 17:25:47.836" endtime="20220704 17:25:47.840"/>
</kw>
<status status="PASS" starttime="20220704 17:25:47.836" endtime="20220704 17:25:47.840"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${response.json()}[id]</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${response.json()}[id]</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 17:25:47.842" level="INFO">${url} = boards/62c3229b7b1a0f53276f0ba2</msg>
<status status="PASS" starttime="20220704 17:25:47.842" endtime="20220704 17:25:47.842"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 17:25:48.151" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 17:25:47.842" endtime="20220704 17:25:48.151"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 17:25:48.151" endtime="20220704 17:25:48.152"/>
</return>
<msg timestamp="20220704 17:25:48.152" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 17:25:47.842" endtime="20220704 17:25:48.152"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 17:25:48.152" endtime="20220704 17:25:48.152"/>
</return>
<status status="PASS" starttime="20220704 17:25:47.841" endtime="20220704 17:25:48.152"/>
</kw>
<status status="PASS" starttime="20220704 17:25:47.841" endtime="20220704 17:25:48.152"/>
</kw>
<doc>Verify that a board can be create through API</doc>
<tag>api</tag>
<tag>board.create</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220704 17:25:47.654" endtime="20220704 17:25:48.152"/>
</test>
<test id="s1-s1-s1-t2" name="UPDATE a Board's name" line="16">
<kw name="Create A Board" library="Board">
<var>${response}</var>
<arg>NewBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 17:25:48.154" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 17:25:48.154" endtime="20220704 17:25:48.154"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 17:25:48.154" endtime="20220704 17:25:48.154"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 17:25:48.155" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220704 17:25:48.155" endtime="20220704 17:25:48.155"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 17:25:48.315" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 17:25:48.155" endtime="20220704 17:25:48.315"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 17:25:48.315" endtime="20220704 17:25:48.315"/>
</return>
<msg timestamp="20220704 17:25:48.316" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 17:25:48.153" endtime="20220704 17:25:48.316"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 17:25:48.316" endtime="20220704 17:25:48.316"/>
</return>
<msg timestamp="20220704 17:25:48.316" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 17:25:48.153" endtime="20220704 17:25:48.316"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>board</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220704 17:25:48.316" endtime="20220704 17:25:48.320"/>
</kw>
<status status="PASS" starttime="20220704 17:25:48.316" endtime="20220704 17:25:48.320"/>
</kw>
<kw name="Update A Board" library="Board">
<arg>${response.json()}[id]</arg>
<arg>name</arg>
<arg>NewName</arg>
<doc>Updates the board with the given ID
optional_args: name, desc, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 17:25:48.322" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 17:25:48.322" endtime="20220704 17:25:48.322"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 17:25:48.322" endtime="20220704 17:25:48.322"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 17:25:48.323" level="INFO">${url} = boards/62c3229ce075b848e245040b</msg>
<status status="PASS" starttime="20220704 17:25:48.322" endtime="20220704 17:25:48.323"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 17:25:48.400" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 17:25:48.323" endtime="20220704 17:25:48.400"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 17:25:48.400" endtime="20220704 17:25:48.400"/>
</return>
<msg timestamp="20220704 17:25:48.401" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 17:25:48.321" endtime="20220704 17:25:48.401"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 17:25:48.401" endtime="20220704 17:25:48.401"/>
</return>
<status status="PASS" starttime="20220704 17:25:48.320" endtime="20220704 17:25:48.401"/>
</kw>
<kw name="Get A Board" library="Board">
<var>${new_response}</var>
<arg>${response.json()}[id]</arg>
<doc>Gets the Board with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 17:25:48.403" level="INFO">${url} = boards/62c3229ce075b848e245040b</msg>
<status status="PASS" starttime="20220704 17:25:48.402" endtime="20220704 17:25:48.403"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 17:25:48.452" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 17:25:48.403" endtime="20220704 17:25:48.452"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 17:25:48.452" endtime="20220704 17:25:48.452"/>
</return>
<msg timestamp="20220704 17:25:48.452" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 17:25:48.402" endtime="20220704 17:25:48.452"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 17:25:48.452" endtime="20220704 17:25:48.452"/>
</return>
<msg timestamp="20220704 17:25:48.452" level="INFO">${new_response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 17:25:48.401" endtime="20220704 17:25:48.452"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${new_response}</arg>
<arg>board</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220704 17:25:48.453" endtime="20220704 17:25:48.456"/>
</kw>
<status status="PASS" starttime="20220704 17:25:48.452" endtime="20220704 17:25:48.456"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${new_response.json()}[name]</arg>
<arg>NewName</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220704 17:25:48.457" endtime="20220704 17:25:48.457"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${response.json()}[id]</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${response.json()}[id]</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 17:25:48.459" level="INFO">${url} = boards/62c3229ce075b848e245040b</msg>
<status status="PASS" starttime="20220704 17:25:48.459" endtime="20220704 17:25:48.459"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 17:25:48.818" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 17:25:48.460" endtime="20220704 17:25:48.818"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 17:25:48.818" endtime="20220704 17:25:48.818"/>
</return>
<msg timestamp="20220704 17:25:48.818" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 17:25:48.458" endtime="20220704 17:25:48.818"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 17:25:48.818" endtime="20220704 17:25:48.818"/>
</return>
<status status="PASS" starttime="20220704 17:25:48.458" endtime="20220704 17:25:48.818"/>
</kw>
<status status="PASS" starttime="20220704 17:25:48.457" endtime="20220704 17:25:48.818"/>
</kw>
<doc>Verify that a board's name can be updated through API</doc>
<tag>api</tag>
<tag>board.update</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220704 17:25:48.152" endtime="20220704 17:25:48.818"/>
</test>
<test id="s1-s1-s1-t3" name="DELETE A Board" line="27">
<kw name="Create A Board" library="Board">
<var>${response}</var>
<arg>NewBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 17:25:48.821" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 17:25:48.820" endtime="20220704 17:25:48.821"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 17:25:48.821" endtime="20220704 17:25:48.821"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 17:25:48.822" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220704 17:25:48.821" endtime="20220704 17:25:48.822"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 17:25:48.978" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 17:25:48.822" endtime="20220704 17:25:48.978"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 17:25:48.978" endtime="20220704 17:25:48.978"/>
</return>
<msg timestamp="20220704 17:25:48.978" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 17:25:48.820" endtime="20220704 17:25:48.978"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 17:25:48.978" endtime="20220704 17:25:48.978"/>
</return>
<msg timestamp="20220704 17:25:48.979" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 17:25:48.820" endtime="20220704 17:25:48.979"/>
</kw>
<kw name="Delete A Board" library="Board">
<arg>${response.json()}[id]</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 17:25:48.980" level="INFO">${url} = boards/62c3229cc48a6586e54e22e2</msg>
<status status="PASS" starttime="20220704 17:25:48.980" endtime="20220704 17:25:48.980"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 17:25:49.293" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 17:25:48.980" endtime="20220704 17:25:49.293"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 17:25:49.294" endtime="20220704 17:25:49.294"/>
</return>
<msg timestamp="20220704 17:25:49.294" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 17:25:48.980" endtime="20220704 17:25:49.294"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 17:25:49.294" endtime="20220704 17:25:49.294"/>
</return>
<status status="PASS" starttime="20220704 17:25:48.979" endtime="20220704 17:25:49.294"/>
</kw>
<kw name="Get A Board" library="Board">
<arg>${response.json()}[id]</arg>
<arg>status_code=404</arg>
<doc>Gets the Board with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 17:25:49.296" level="INFO">${url} = boards/62c3229cc48a6586e54e22e2</msg>
<status status="PASS" starttime="20220704 17:25:49.296" endtime="20220704 17:25:49.296"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 17:25:49.333" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220704 17:25:49.296" endtime="20220704 17:25:49.333"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 17:25:49.333" endtime="20220704 17:25:49.333"/>
</return>
<msg timestamp="20220704 17:25:49.333" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220704 17:25:49.295" endtime="20220704 17:25:49.333"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 17:25:49.333" endtime="20220704 17:25:49.333"/>
</return>
<status status="PASS" starttime="20220704 17:25:49.294" endtime="20220704 17:25:49.333"/>
</kw>
<doc>Verify that a board can be deleted through API</doc>
<tag>api</tag>
<tag>board.delete</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220704 17:25:48.819" endtime="20220704 17:25:49.333"/>
</test>
<test id="s1-s1-s1-t4" name="GET Information of A Board" line="34">
<kw name="Create A Board" library="Board">
<var>${response}</var>
<arg>BoardTest</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 17:25:49.335" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 17:25:49.335" endtime="20220704 17:25:49.335"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 17:25:49.336" endtime="20220704 17:25:49.336"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 17:25:49.336" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220704 17:25:49.336" endtime="20220704 17:25:49.336"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 17:25:49.500" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 17:25:49.337" endtime="20220704 17:25:49.500"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 17:25:49.500" endtime="20220704 17:25:49.500"/>
</return>
<msg timestamp="20220704 17:25:49.500" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 17:25:49.335" endtime="20220704 17:25:49.500"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 17:25:49.500" endtime="20220704 17:25:49.500"/>
</return>
<msg timestamp="20220704 17:25:49.500" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 17:25:49.335" endtime="20220704 17:25:49.500"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>board</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220704 17:25:49.501" endtime="20220704 17:25:49.505"/>
</kw>
<status status="PASS" starttime="20220704 17:25:49.501" endtime="20220704 17:25:49.505"/>
</kw>
<kw name="Get A Board" library="Board">
<var>${response2}</var>
<arg>${response.json()}[id]</arg>
<doc>Gets the Board with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 17:25:49.506" level="INFO">${url} = boards/62c3229dc7e2a51db3794b92</msg>
<status status="PASS" starttime="20220704 17:25:49.506" endtime="20220704 17:25:49.506"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 17:25:49.550" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 17:25:49.507" endtime="20220704 17:25:49.550"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 17:25:49.550" endtime="20220704 17:25:49.550"/>
</return>
<msg timestamp="20220704 17:25:49.550" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 17:25:49.506" endtime="20220704 17:25:49.550"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 17:25:49.550" endtime="20220704 17:25:49.550"/>
</return>
<msg timestamp="20220704 17:25:49.550" level="INFO">${response2} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 17:25:49.505" endtime="20220704 17:25:49.550"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response2}</arg>
<arg>board</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220704 17:25:49.551" endtime="20220704 17:25:49.554"/>
</kw>
<status status="PASS" starttime="20220704 17:25:49.550" endtime="20220704 17:25:49.554"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${response2.json()}[name]</arg>
<arg>BoardTest</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220704 17:25:49.554" endtime="20220704 17:25:49.555"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${response.json()}[id]</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${response.json()}[id]</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 17:25:49.557" level="INFO">${url} = boards/62c3229dc7e2a51db3794b92</msg>
<status status="PASS" starttime="20220704 17:25:49.557" endtime="20220704 17:25:49.557"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 17:25:49.855" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 17:25:49.557" endtime="20220704 17:25:49.855"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 17:25:49.855" endtime="20220704 17:25:49.855"/>
</return>
<msg timestamp="20220704 17:25:49.855" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 17:25:49.556" endtime="20220704 17:25:49.855"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 17:25:49.855" endtime="20220704 17:25:49.855"/>
</return>
<status status="PASS" starttime="20220704 17:25:49.555" endtime="20220704 17:25:49.855"/>
</kw>
<status status="PASS" starttime="20220704 17:25:49.555" endtime="20220704 17:25:49.855"/>
</kw>
<doc>Verify that a board's information can be accesed through API</doc>
<tag>api</tag>
<tag>board.get</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220704 17:25:49.334" endtime="20220704 17:25:49.855"/>
</test>
<test id="s1-s1-s1-t5" name="UPDATE a Board's description" line="45">
<kw name="Create A Board" library="Board">
<var>${response}</var>
<arg>NewBoardForTest</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 17:25:49.857" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 17:25:49.857" endtime="20220704 17:25:49.857"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 17:25:49.857" endtime="20220704 17:25:49.858"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 17:25:49.858" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220704 17:25:49.858" endtime="20220704 17:25:49.858"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 17:25:50.015" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 17:25:49.858" endtime="20220704 17:25:50.015"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 17:25:50.015" endtime="20220704 17:25:50.015"/>
</return>
<msg timestamp="20220704 17:25:50.016" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 17:25:49.857" endtime="20220704 17:25:50.016"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 17:25:50.016" endtime="20220704 17:25:50.016"/>
</return>
<msg timestamp="20220704 17:25:50.016" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 17:25:49.856" endtime="20220704 17:25:50.016"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>board</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220704 17:25:50.016" endtime="20220704 17:25:50.020"/>
</kw>
<status status="PASS" starttime="20220704 17:25:50.016" endtime="20220704 17:25:50.020"/>
</kw>
<kw name="Update A Board" library="Board">
<arg>${response.json()}[id]</arg>
<arg>desc</arg>
<arg>sampleDescription</arg>
<doc>Updates the board with the given ID
optional_args: name, desc, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 17:25:50.022" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 17:25:50.022" endtime="20220704 17:25:50.022"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 17:25:50.022" endtime="20220704 17:25:50.022"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 17:25:50.022" level="INFO">${url} = boards/62c3229dcb5fae19d2a30ebf</msg>
<status status="PASS" starttime="20220704 17:25:50.022" endtime="20220704 17:25:50.022"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 17:25:50.102" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 17:25:50.022" endtime="20220704 17:25:50.102"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 17:25:50.103" endtime="20220704 17:25:50.103"/>
</return>
<msg timestamp="20220704 17:25:50.103" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 17:25:50.021" endtime="20220704 17:25:50.103"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 17:25:50.103" endtime="20220704 17:25:50.103"/>
</return>
<status status="PASS" starttime="20220704 17:25:50.020" endtime="20220704 17:25:50.103"/>
</kw>
<kw name="Get A Board" library="Board">
<var>${new_response}</var>
<arg>${response.json()}[id]</arg>
<doc>Gets the Board with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 17:25:50.105" level="INFO">${url} = boards/62c3229dcb5fae19d2a30ebf</msg>
<status status="PASS" starttime="20220704 17:25:50.104" endtime="20220704 17:25:50.105"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 17:25:50.151" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 17:25:50.105" endtime="20220704 17:25:50.151"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 17:25:50.151" endtime="20220704 17:25:50.151"/>
</return>
<msg timestamp="20220704 17:25:50.151" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 17:25:50.104" endtime="20220704 17:25:50.151"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 17:25:50.151" endtime="20220704 17:25:50.151"/>
</return>
<msg timestamp="20220704 17:25:50.151" level="INFO">${new_response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 17:25:50.103" endtime="20220704 17:25:50.151"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${new_response.json()}[desc]</arg>
<arg>sampleDescription</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220704 17:25:50.151" endtime="20220704 17:25:50.152"/>
</kw>
<kw name="Update A Board" library="Board">
<arg>${response.json()}[id]</arg>
<arg>desc</arg>
<arg>updatedDescription</arg>
<doc>Updates the board with the given ID
optional_args: name, desc, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 17:25:50.154" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 17:25:50.153" endtime="20220704 17:25:50.154"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 17:25:50.154" endtime="20220704 17:25:50.154"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 17:25:50.154" level="INFO">${url} = boards/62c3229dcb5fae19d2a30ebf</msg>
<status status="PASS" starttime="20220704 17:25:50.154" endtime="20220704 17:25:50.154"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 17:25:50.247" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 17:25:50.154" endtime="20220704 17:25:50.247"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 17:25:50.247" endtime="20220704 17:25:50.247"/>
</return>
<msg timestamp="20220704 17:25:50.247" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 17:25:50.153" endtime="20220704 17:25:50.247"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 17:25:50.247" endtime="20220704 17:25:50.247"/>
</return>
<status status="PASS" starttime="20220704 17:25:50.152" endtime="20220704 17:25:50.247"/>
</kw>
<kw name="Get A Board" library="Board">
<var>${new_response2}</var>
<arg>${response.json()}[id]</arg>
<doc>Gets the Board with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 17:25:50.249" level="INFO">${url} = boards/62c3229dcb5fae19d2a30ebf</msg>
<status status="PASS" starttime="20220704 17:25:50.249" endtime="20220704 17:25:50.249"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 17:25:50.291" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 17:25:50.249" endtime="20220704 17:25:50.291"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 17:25:50.291" endtime="20220704 17:25:50.291"/>
</return>
<msg timestamp="20220704 17:25:50.292" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 17:25:50.248" endtime="20220704 17:25:50.292"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 17:25:50.292" endtime="20220704 17:25:50.292"/>
</return>
<msg timestamp="20220704 17:25:50.292" level="INFO">${new_response2} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 17:25:50.247" endtime="20220704 17:25:50.292"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${new_response2.json()}[desc]</arg>
<arg>updatedDescription</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220704 17:25:50.292" endtime="20220704 17:25:50.293"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${response.json()}[id]</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${response.json()}[id]</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 17:25:50.294" level="INFO">${url} = boards/62c3229dcb5fae19d2a30ebf</msg>
<status status="PASS" starttime="20220704 17:25:50.294" endtime="20220704 17:25:50.294"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 17:25:50.612" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 17:25:50.295" endtime="20220704 17:25:50.612"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 17:25:50.612" endtime="20220704 17:25:50.612"/>
</return>
<msg timestamp="20220704 17:25:50.612" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 17:25:50.294" endtime="20220704 17:25:50.612"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 17:25:50.612" endtime="20220704 17:25:50.612"/>
</return>
<status status="PASS" starttime="20220704 17:25:50.293" endtime="20220704 17:25:50.612"/>
</kw>
<status status="PASS" starttime="20220704 17:25:50.293" endtime="20220704 17:25:50.612"/>
</kw>
<doc>Verify that a board's description can be updated through API</doc>
<tag>api</tag>
<tag>board.update</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220704 17:25:49.856" endtime="20220704 17:25:50.612"/>
</test>
<kw name="Delete All Sessions" library="request_own_library" type="TEARDOWN">
<status status="PASS" starttime="20220704 17:25:50.613" endtime="20220704 17:25:50.614"/>
</kw>
<doc>Example Test with Trello API Boards</doc>
<status status="PASS" starttime="20220704 17:25:47.549" endtime="20220704 17:25:50.614"/>
</suite>
<suite id="s1-s1-s2" name="Trello Api Cards Tests" source="/trello/api/trello_api_cards_tests.robot">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Create Trello Session</arg>
<arg>Setup Board And List</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Create Trello Session" library="TrelloAPI">
<doc>Creates a Trello Session</doc>
<kw name="Create Session" library="request_own_library">
<arg>${API_BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<status status="PASS" starttime="20220704 17:25:50.625" endtime="20220704 17:25:50.625"/>
</kw>
<status status="PASS" starttime="20220704 17:25:50.625" endtime="20220704 17:25:50.625"/>
</kw>
<kw name="Setup Board And List">
<doc>Create a board and save its ID and its first list's ID</doc>
<kw name="Create A Board" library="Board">
<var>${BOARD}</var>
<arg>TestBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 17:25:50.626" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 17:25:50.626" endtime="20220704 17:25:50.626"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 17:25:50.626" endtime="20220704 17:25:50.627"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 17:25:50.627" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220704 17:25:50.627" endtime="20220704 17:25:50.627"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 17:25:50.823" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 17:25:50.627" endtime="20220704 17:25:50.823"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 17:25:50.823" endtime="20220704 17:25:50.823"/>
</return>
<msg timestamp="20220704 17:25:50.823" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 17:25:50.626" endtime="20220704 17:25:50.823"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 17:25:50.823" endtime="20220704 17:25:50.823"/>
</return>
<msg timestamp="20220704 17:25:50.823" level="INFO">${BOARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 17:25:50.626" endtime="20220704 17:25:50.823"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_BOARD_ID}</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220704 17:25:50.824" level="INFO">${TEST_SUITE_BOARD_ID} = 62c3229ea46da68f18f0c10c</msg>
<status status="PASS" starttime="20220704 17:25:50.824" endtime="20220704 17:25:50.824"/>
</kw>
<kw name="Get Lists On A Board" library="Board">
<var>${LISTS}</var>
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Get all the lists in a board</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>lists_on_board</arg>
<arg>${id}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 17:25:50.825" level="INFO">${url} = boards/62c3229ea46da68f18f0c10c/lists/</msg>
<status status="PASS" starttime="20220704 17:25:50.825" endtime="20220704 17:25:50.825"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 17:25:50.877" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 17:25:50.825" endtime="20220704 17:25:50.877"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 17:25:50.877" endtime="20220704 17:25:50.877"/>
</return>
<msg timestamp="20220704 17:25:50.877" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 17:25:50.825" endtime="20220704 17:25:50.877"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 17:25:50.877" endtime="20220704 17:25:50.877"/>
</return>
<msg timestamp="20220704 17:25:50.877" level="INFO">${LISTS} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 17:25:50.824" endtime="20220704 17:25:50.877"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_LIST_ID}</arg>
<arg>${LISTS.json()}[0][id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220704 17:25:50.878" level="INFO">${TEST_SUITE_LIST_ID} = 62c3229ea46da68f18f0c113</msg>
<status status="PASS" starttime="20220704 17:25:50.877" endtime="20220704 17:25:50.878"/>
</kw>
<status status="PASS" starttime="20220704 17:25:50.625" endtime="20220704 17:25:50.878"/>
</kw>
<status status="PASS" starttime="20220704 17:25:50.625" endtime="20220704 17:25:50.878"/>
</kw>
<test id="s1-s1-s2-t1" name="Verify A Card Can Be Created" line="13">
<kw name="Create A Card" library="Card">
<var>${response}</var>
<arg>name</arg>
<arg>RFCard2</arg>
<doc>Creates a new card in the given list.
required_args: listId
optional_args: name, desc, pos, idCardSource, idLabels, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>@{optional_args}</arg>
<arg>idList</arg>
<arg>${idList}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 17:25:50.880" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 17:25:50.880" endtime="20220704 17:25:50.880"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 17:25:50.880" endtime="20220704 17:25:50.880"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 17:25:50.881" level="INFO">${url} = cards/</msg>
<status status="PASS" starttime="20220704 17:25:50.880" endtime="20220704 17:25:50.881"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 17:25:51.030" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 17:25:50.881" endtime="20220704 17:25:51.030"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 17:25:51.030" endtime="20220704 17:25:51.030"/>
</return>
<msg timestamp="20220704 17:25:51.030" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 17:25:50.879" endtime="20220704 17:25:51.030"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 17:25:51.030" endtime="20220704 17:25:51.030"/>
</return>
<msg timestamp="20220704 17:25:51.031" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 17:25:50.879" endtime="20220704 17:25:51.031"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>card</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220704 17:25:51.031" endtime="20220704 17:25:51.036"/>
</kw>
<status status="PASS" starttime="20220704 17:25:51.031" endtime="20220704 17:25:51.036"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 17:25:51.036" endtime="20220704 17:25:51.036"/>
</return>
<msg timestamp="20220704 17:25:51.037" level="INFO">${CARD_ID} = 62c3229e44dd7f3c150725e3</msg>
<status status="PASS" starttime="20220704 17:25:51.036" endtime="20220704 17:25:51.037"/>
</kw>
<kw name="Get A Card" library="Card">
<var>${response}</var>
<arg>${CARD_ID}</arg>
<doc>Gets the card with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 17:25:51.038" level="INFO">${url} = cards/62c3229e44dd7f3c150725e3</msg>
<status status="PASS" starttime="20220704 17:25:51.038" endtime="20220704 17:25:51.038"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 17:25:51.102" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 17:25:51.038" endtime="20220704 17:25:51.102"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 17:25:51.102" endtime="20220704 17:25:51.102"/>
</return>
<msg timestamp="20220704 17:25:51.103" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 17:25:51.037" endtime="20220704 17:25:51.103"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 17:25:51.103" endtime="20220704 17:25:51.103"/>
</return>
<msg timestamp="20220704 17:25:51.103" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 17:25:51.037" endtime="20220704 17:25:51.103"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_NAME}</var>
<arg>${response}</arg>
<arg>name</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 17:25:51.103" endtime="20220704 17:25:51.103"/>
</return>
<msg timestamp="20220704 17:25:51.104" level="INFO">${CARD_NAME} = RFCard2</msg>
<status status="PASS" starttime="20220704 17:25:51.103" endtime="20220704 17:25:51.104"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${CARD_NAME}</arg>
<arg>RFCard2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220704 17:25:51.104" endtime="20220704 17:25:51.104"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Card</arg>
<arg>${CARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Card" library="Card">
<arg>${CARD_ID}</arg>
<doc>Deletes the card with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 17:25:51.106" level="INFO">${url} = cards/62c3229e44dd7f3c150725e3</msg>
<status status="PASS" starttime="20220704 17:25:51.105" endtime="20220704 17:25:51.106"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 17:25:51.256" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 17:25:51.106" endtime="20220704 17:25:51.256"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 17:25:51.257" endtime="20220704 17:25:51.257"/>
</return>
<msg timestamp="20220704 17:25:51.257" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 17:25:51.105" endtime="20220704 17:25:51.257"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 17:25:51.257" endtime="20220704 17:25:51.257"/>
</return>
<status status="PASS" starttime="20220704 17:25:51.105" endtime="20220704 17:25:51.257"/>
</kw>
<status status="PASS" starttime="20220704 17:25:51.104" endtime="20220704 17:25:51.257"/>
</kw>
<doc>Verify that a card can be created through API</doc>
<tag>api</tag>
<tag>card.create</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220704 17:25:50.878" endtime="20220704 17:25:51.257"/>
</test>
<test id="s1-s1-s2-t2" name="Verify A Card Can Be Closed" line="24">
<kw name="Create A Card" library="Card">
<var>${response}</var>
<doc>Creates a new card in the given list.
required_args: listId
optional_args: name, desc, pos, idCardSource, idLabels, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>@{optional_args}</arg>
<arg>idList</arg>
<arg>${idList}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 17:25:51.259" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 17:25:51.259" endtime="20220704 17:25:51.259"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 17:25:51.259" endtime="20220704 17:25:51.260"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 17:25:51.260" level="INFO">${url} = cards/</msg>
<status status="PASS" starttime="20220704 17:25:51.260" endtime="20220704 17:25:51.260"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 17:25:51.409" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 17:25:51.260" endtime="20220704 17:25:51.409"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 17:25:51.409" endtime="20220704 17:25:51.409"/>
</return>
<msg timestamp="20220704 17:25:51.409" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 17:25:51.259" endtime="20220704 17:25:51.409"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 17:25:51.409" endtime="20220704 17:25:51.409"/>
</return>
<msg timestamp="20220704 17:25:51.409" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 17:25:51.258" endtime="20220704 17:25:51.409"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 17:25:51.410" endtime="20220704 17:25:51.410"/>
</return>
<msg timestamp="20220704 17:25:51.410" level="INFO">${CARD_ID} = 62c3229f87e4f38939b93e27</msg>
<status status="PASS" starttime="20220704 17:25:51.409" endtime="20220704 17:25:51.410"/>
</kw>
<kw name="Archive A Card" library="Card">
<arg>${CARD_ID}</arg>
<doc>Modifies the card status to closed.</doc>
<kw name="Update A Card" library="Card">
<var>${response}</var>
<arg>${id}</arg>
<arg>closed</arg>
<arg>true</arg>
<arg>status_code=${status_code}</arg>
<doc>Updates the card with the given ID
optional_args: name, desc, closed, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<arg>status_code=${status_code}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 17:25:51.412" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 17:25:51.412" endtime="20220704 17:25:51.412"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 17:25:51.412" endtime="20220704 17:25:51.412"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 17:25:51.413" level="INFO">${url} = cards/62c3229f87e4f38939b93e27</msg>
<status status="PASS" starttime="20220704 17:25:51.413" endtime="20220704 17:25:51.413"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 17:25:51.539" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 17:25:51.413" endtime="20220704 17:25:51.539"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 17:25:51.539" endtime="20220704 17:25:51.540"/>
</return>
<msg timestamp="20220704 17:25:51.540" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 17:25:51.411" endtime="20220704 17:25:51.540"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 17:25:51.540" endtime="20220704 17:25:51.540"/>
</return>
<msg timestamp="20220704 17:25:51.540" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 17:25:51.411" endtime="20220704 17:25:51.540"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 17:25:51.540" endtime="20220704 17:25:51.540"/>
</return>
<status status="PASS" starttime="20220704 17:25:51.410" endtime="20220704 17:25:51.540"/>
</kw>
<kw name="Get A Card" library="Card">
<var>${response}</var>
<arg>${CARD_ID}</arg>
<doc>Gets the card with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 17:25:51.541" level="INFO">${url} = cards/62c3229f87e4f38939b93e27</msg>
<status status="PASS" starttime="20220704 17:25:51.541" endtime="20220704 17:25:51.541"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 17:25:51.610" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 17:25:51.541" endtime="20220704 17:25:51.610"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 17:25:51.610" endtime="20220704 17:25:51.610"/>
</return>
<msg timestamp="20220704 17:25:51.611" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 17:25:51.541" endtime="20220704 17:25:51.611"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 17:25:51.611" endtime="20220704 17:25:51.611"/>
</return>
<msg timestamp="20220704 17:25:51.611" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 17:25:51.540" endtime="20220704 17:25:51.611"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_CLOSED}</var>
<arg>${response}</arg>
<arg>closed</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 17:25:51.611" endtime="20220704 17:25:51.611"/>
</return>
<msg timestamp="20220704 17:25:51.612" level="INFO">${CARD_CLOSED} = True</msg>
<status status="PASS" starttime="20220704 17:25:51.611" endtime="20220704 17:25:51.612"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${CARD_CLOSED}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220704 17:25:51.612" endtime="20220704 17:25:51.612"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Card</arg>
<arg>${CARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Card" library="Card">
<arg>${CARD_ID}</arg>
<doc>Deletes the card with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 17:25:51.614" level="INFO">${url} = cards/62c3229f87e4f38939b93e27</msg>
<status status="PASS" starttime="20220704 17:25:51.613" endtime="20220704 17:25:51.614"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 17:25:51.732" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 17:25:51.614" endtime="20220704 17:25:51.732"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 17:25:51.732" endtime="20220704 17:25:51.732"/>
</return>
<msg timestamp="20220704 17:25:51.733" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 17:25:51.613" endtime="20220704 17:25:51.733"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 17:25:51.733" endtime="20220704 17:25:51.733"/>
</return>
<status status="PASS" starttime="20220704 17:25:51.613" endtime="20220704 17:25:51.733"/>
</kw>
<status status="PASS" starttime="20220704 17:25:51.613" endtime="20220704 17:25:51.733"/>
</kw>
<doc>Verify that a card can be closed through API</doc>
<tag>api</tag>
<tag>card.close</tag>
<tag>regression</tag>
<status status="PASS" starttime="20220704 17:25:51.257" endtime="20220704 17:25:51.733"/>
</test>
<test id="s1-s1-s2-t3" name="Verify A Card Can Be Deleted" line="35">
<kw name="Create A Card" library="Card">
<var>${response}</var>
<doc>Creates a new card in the given list.
required_args: listId
optional_args: name, desc, pos, idCardSource, idLabels, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>@{optional_args}</arg>
<arg>idList</arg>
<arg>${idList}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 17:25:51.736" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 17:25:51.735" endtime="20220704 17:25:51.736"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 17:25:51.736" endtime="20220704 17:25:51.736"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 17:25:51.737" level="INFO">${url} = cards/</msg>
<status status="PASS" starttime="20220704 17:25:51.736" endtime="20220704 17:25:51.737"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 17:25:51.893" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 17:25:51.737" endtime="20220704 17:25:51.893"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 17:25:51.893" endtime="20220704 17:25:51.893"/>
</return>
<msg timestamp="20220704 17:25:51.894" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 17:25:51.735" endtime="20220704 17:25:51.894"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 17:25:51.894" endtime="20220704 17:25:51.894"/>
</return>
<msg timestamp="20220704 17:25:51.894" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 17:25:51.734" endtime="20220704 17:25:51.894"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 17:25:51.894" endtime="20220704 17:25:51.894"/>
</return>
<msg timestamp="20220704 17:25:51.895" level="INFO">${CARD_ID} = 62c3229f06e4194984ea3521</msg>
<status status="PASS" starttime="20220704 17:25:51.894" endtime="20220704 17:25:51.895"/>
</kw>
<kw name="Delete A Card" library="Card">
<var>${response}</var>
<arg>${CARD_ID}</arg>
<doc>Deletes the card with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 17:25:51.896" level="INFO">${url} = cards/62c3229f06e4194984ea3521</msg>
<status status="PASS" starttime="20220704 17:25:51.896" endtime="20220704 17:25:51.896"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 17:25:52.052" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 17:25:51.896" endtime="20220704 17:25:52.052"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 17:25:52.052" endtime="20220704 17:25:52.052"/>
</return>
<msg timestamp="20220704 17:25:52.052" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 17:25:51.895" endtime="20220704 17:25:52.052"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 17:25:52.052" endtime="20220704 17:25:52.052"/>
</return>
<msg timestamp="20220704 17:25:52.052" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 17:25:51.895" endtime="20220704 17:25:52.052"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>delete</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220704 17:25:52.053" endtime="20220704 17:25:52.054"/>
</kw>
<status status="PASS" starttime="20220704 17:25:52.052" endtime="20220704 17:25:52.054"/>
</kw>
<kw name="Get A Card" library="Card">
<arg>${CARD_ID}</arg>
<arg>status_code=404</arg>
<doc>Gets the card with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 17:25:52.056" level="INFO">${url} = cards/62c3229f06e4194984ea3521</msg>
<status status="PASS" starttime="20220704 17:25:52.055" endtime="20220704 17:25:52.056"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 17:25:52.090" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220704 17:25:52.056" endtime="20220704 17:25:52.090"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 17:25:52.090" endtime="20220704 17:25:52.090"/>
</return>
<msg timestamp="20220704 17:25:52.090" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220704 17:25:52.055" endtime="20220704 17:25:52.090"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 17:25:52.090" endtime="20220704 17:25:52.090"/>
</return>
<status status="PASS" starttime="20220704 17:25:52.055" endtime="20220704 17:25:52.090"/>
</kw>
<doc>Verify that a card can be deleted through API</doc>
<tag>api</tag>
<tag>card.delete</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220704 17:25:51.733" endtime="20220704 17:25:52.090"/>
</test>
<test id="s1-s1-s2-t4" name="Verify A Card Can Be Updated" line="44">
<kw name="Create A Card" library="Card">
<var>${response}</var>
<arg>name</arg>
<arg>RFCard4</arg>
<doc>Creates a new card in the given list.
required_args: listId
optional_args: name, desc, pos, idCardSource, idLabels, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>@{optional_args}</arg>
<arg>idList</arg>
<arg>${idList}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 17:25:52.092" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 17:25:52.092" endtime="20220704 17:25:52.092"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 17:25:52.093" endtime="20220704 17:25:52.093"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 17:25:52.093" level="INFO">${url} = cards/</msg>
<status status="PASS" starttime="20220704 17:25:52.093" endtime="20220704 17:25:52.093"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 17:25:52.227" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 17:25:52.094" endtime="20220704 17:25:52.227"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 17:25:52.227" endtime="20220704 17:25:52.228"/>
</return>
<msg timestamp="20220704 17:25:52.228" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 17:25:52.092" endtime="20220704 17:25:52.228"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 17:25:52.228" endtime="20220704 17:25:52.228"/>
</return>
<msg timestamp="20220704 17:25:52.228" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 17:25:52.091" endtime="20220704 17:25:52.228"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 17:25:52.228" endtime="20220704 17:25:52.228"/>
</return>
<msg timestamp="20220704 17:25:52.229" level="INFO">${CARD_ID} = 62c322a03514e743e76fe639</msg>
<status status="PASS" starttime="20220704 17:25:52.228" endtime="20220704 17:25:52.229"/>
</kw>
<kw name="Update A Card" library="Card">
<var>${response}</var>
<arg>${CARD_ID}</arg>
<arg>name</arg>
<arg>RFCard5</arg>
<arg>desc</arg>
<arg>Description</arg>
<doc>Updates the card with the given ID
optional_args: name, desc, closed, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<arg>status_code=${status_code}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 17:25:52.230" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 17:25:52.230" endtime="20220704 17:25:52.230"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 17:25:52.231" endtime="20220704 17:25:52.231"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 17:25:52.231" level="INFO">${url} = cards/62c322a03514e743e76fe639</msg>
<status status="PASS" starttime="20220704 17:25:52.231" endtime="20220704 17:25:52.231"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 17:25:52.398" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 17:25:52.231" endtime="20220704 17:25:52.398"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 17:25:52.398" endtime="20220704 17:25:52.398"/>
</return>
<msg timestamp="20220704 17:25:52.398" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 17:25:52.230" endtime="20220704 17:25:52.398"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 17:25:52.398" endtime="20220704 17:25:52.398"/>
</return>
<msg timestamp="20220704 17:25:52.399" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 17:25:52.229" endtime="20220704 17:25:52.399"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>card</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220704 17:25:52.399" endtime="20220704 17:25:52.404"/>
</kw>
<status status="PASS" starttime="20220704 17:25:52.399" endtime="20220704 17:25:52.404"/>
</kw>
<kw name="Get A Card" library="Card">
<var>${response}</var>
<arg>${CARD_ID}</arg>
<doc>Gets the card with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 17:25:52.405" level="INFO">${url} = cards/62c322a03514e743e76fe639</msg>
<status status="PASS" starttime="20220704 17:25:52.405" endtime="20220704 17:25:52.405"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 17:25:52.459" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 17:25:52.405" endtime="20220704 17:25:52.459"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 17:25:52.459" endtime="20220704 17:25:52.459"/>
</return>
<msg timestamp="20220704 17:25:52.460" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 17:25:52.405" endtime="20220704 17:25:52.460"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 17:25:52.460" endtime="20220704 17:25:52.460"/>
</return>
<msg timestamp="20220704 17:25:52.460" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 17:25:52.404" endtime="20220704 17:25:52.460"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_NAME}</var>
<arg>${response}</arg>
<arg>name</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 17:25:52.460" endtime="20220704 17:25:52.460"/>
</return>
<msg timestamp="20220704 17:25:52.461" level="INFO">${CARD_NAME} = RFCard5</msg>
<status status="PASS" starttime="20220704 17:25:52.460" endtime="20220704 17:25:52.461"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_DESC}</var>
<arg>${response}</arg>
<arg>desc</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 17:25:52.461" endtime="20220704 17:25:52.461"/>
</return>
<msg timestamp="20220704 17:25:52.462" level="INFO">${CARD_DESC} = Description</msg>
<status status="PASS" starttime="20220704 17:25:52.461" endtime="20220704 17:25:52.462"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${CARD_NAME}</arg>
<arg>RFCard5</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220704 17:25:52.462" endtime="20220704 17:25:52.462"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${CARD_DESC}</arg>
<arg>Description</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220704 17:25:52.463" endtime="20220704 17:25:52.463"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Card</arg>
<arg>${CARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Card" library="Card">
<arg>${CARD_ID}</arg>
<doc>Deletes the card with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 17:25:52.464" level="INFO">${url} = cards/62c322a03514e743e76fe639</msg>
<status status="PASS" starttime="20220704 17:25:52.464" endtime="20220704 17:25:52.464"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 17:25:52.609" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 17:25:52.464" endtime="20220704 17:25:52.609"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 17:25:52.609" endtime="20220704 17:25:52.609"/>
</return>
<msg timestamp="20220704 17:25:52.609" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 17:25:52.463" endtime="20220704 17:25:52.609"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 17:25:52.609" endtime="20220704 17:25:52.609"/>
</return>
<status status="PASS" starttime="20220704 17:25:52.463" endtime="20220704 17:25:52.609"/>
</kw>
<status status="PASS" starttime="20220704 17:25:52.463" endtime="20220704 17:25:52.609"/>
</kw>
<doc>Verify that a card's name and Description can be updated through API</doc>
<tag>api</tag>
<tag>card.update</tag>
<tag>regression</tag>
<status status="PASS" starttime="20220704 17:25:52.091" endtime="20220704 17:25:52.609"/>
</test>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Teardown Board</arg>
<arg>Delete All Sessions</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Teardown Board">
<doc>Delete the board created for this suite</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 17:25:52.612" level="INFO">${url} = boards/62c3229ea46da68f18f0c10c</msg>
<status status="PASS" starttime="20220704 17:25:52.611" endtime="20220704 17:25:52.612"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 17:25:52.922" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 17:25:52.612" endtime="20220704 17:25:52.922"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 17:25:52.922" endtime="20220704 17:25:52.922"/>
</return>
<msg timestamp="20220704 17:25:52.923" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 17:25:52.611" endtime="20220704 17:25:52.923"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 17:25:52.923" endtime="20220704 17:25:52.923"/>
</return>
<status status="PASS" starttime="20220704 17:25:52.610" endtime="20220704 17:25:52.923"/>
</kw>
<status status="PASS" starttime="20220704 17:25:52.610" endtime="20220704 17:25:52.923"/>
</kw>
<status status="PASS" starttime="20220704 17:25:52.610" endtime="20220704 17:25:52.923"/>
</kw>
<kw name="Delete All Sessions" library="request_own_library">
<status status="PASS" starttime="20220704 17:25:52.923" endtime="20220704 17:25:52.924"/>
</kw>
<status status="PASS" starttime="20220704 17:25:52.610" endtime="20220704 17:25:52.924"/>
</kw>
<doc>Example Test with Trello API Cards</doc>
<status status="PASS" starttime="20220704 17:25:50.615" endtime="20220704 17:25:52.924"/>
</suite>
<suite id="s1-s1-s3" name="Trello Api Checklists Tests" source="/trello/api/trello_api_checklists_tests.robot">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Create Trello Session</arg>
<arg>Setup Board, List And Card</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Create Trello Session" library="TrelloAPI">
<doc>Creates a Trello Session</doc>
<kw name="Create Session" library="request_own_library">
<arg>${API_BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<status status="PASS" starttime="20220704 17:25:52.934" endtime="20220704 17:25:52.934"/>
</kw>
<status status="PASS" starttime="20220704 17:25:52.934" endtime="20220704 17:25:52.934"/>
</kw>
<kw name="Setup Board, List And Card">
<doc>Create a board and save its ID and its first list's ID</doc>
<kw name="Create A Board" library="Board">
<var>${BOARD}</var>
<arg>TestBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 17:25:52.935" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 17:25:52.935" endtime="20220704 17:25:52.935"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 17:25:52.935" endtime="20220704 17:25:52.936"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 17:25:52.936" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220704 17:25:52.936" endtime="20220704 17:25:52.936"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 17:25:53.115" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 17:25:52.936" endtime="20220704 17:25:53.115"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 17:25:53.115" endtime="20220704 17:25:53.115"/>
</return>
<msg timestamp="20220704 17:25:53.115" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 17:25:52.935" endtime="20220704 17:25:53.115"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 17:25:53.115" endtime="20220704 17:25:53.115"/>
</return>
<msg timestamp="20220704 17:25:53.116" level="INFO">${BOARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 17:25:52.935" endtime="20220704 17:25:53.116"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_BOARD_ID}</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220704 17:25:53.116" level="INFO">${TEST_SUITE_BOARD_ID} = 62c322a15aed762572f7df57</msg>
<status status="PASS" starttime="20220704 17:25:53.116" endtime="20220704 17:25:53.116"/>
</kw>
<kw name="Get Lists On A Board" library="Board">
<var>${LISTS}</var>
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Get all the lists in a board</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>lists_on_board</arg>
<arg>${id}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 17:25:53.117" level="INFO">${url} = boards/62c322a15aed762572f7df57/lists/</msg>
<status status="PASS" starttime="20220704 17:25:53.117" endtime="20220704 17:25:53.117"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 17:25:53.168" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 17:25:53.118" endtime="20220704 17:25:53.168"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 17:25:53.168" endtime="20220704 17:25:53.168"/>
</return>
<msg timestamp="20220704 17:25:53.168" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 17:25:53.117" endtime="20220704 17:25:53.168"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 17:25:53.168" endtime="20220704 17:25:53.168"/>
</return>
<msg timestamp="20220704 17:25:53.168" level="INFO">${LISTS} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 17:25:53.117" endtime="20220704 17:25:53.168"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_LIST_ID}</arg>
<arg>${LISTS.json()}[0][id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220704 17:25:53.169" level="INFO">${TEST_SUITE_LIST_ID} = 62c322a15aed762572f7df5e</msg>
<status status="PASS" starttime="20220704 17:25:53.169" endtime="20220704 17:25:53.169"/>
</kw>
<kw name="Create A Card" library="Card">
<var>${CARD}</var>
<arg>name</arg>
<arg>TestCard</arg>
<doc>Creates a new card in the given list.
required_args: listId
optional_args: name, desc, pos, idCardSource, idLabels, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>@{optional_args}</arg>
<arg>idList</arg>
<arg>${idList}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 17:25:53.171" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 17:25:53.170" endtime="20220704 17:25:53.171"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 17:25:53.171" endtime="20220704 17:25:53.171"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 17:25:53.172" level="INFO">${url} = cards/</msg>
<status status="PASS" starttime="20220704 17:25:53.171" endtime="20220704 17:25:53.172"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 17:25:53.332" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 17:25:53.172" endtime="20220704 17:25:53.332"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 17:25:53.332" endtime="20220704 17:25:53.332"/>
</return>
<msg timestamp="20220704 17:25:53.332" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 17:25:53.170" endtime="20220704 17:25:53.332"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 17:25:53.332" endtime="20220704 17:25:53.332"/>
</return>
<msg timestamp="20220704 17:25:53.333" level="INFO">${CARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 17:25:53.169" endtime="20220704 17:25:53.333"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_CARD_ID}</arg>
<arg>${CARD.json()}[id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220704 17:25:53.333" level="INFO">${TEST_SUITE_CARD_ID} = 62c322a13b74dc523992ac08</msg>
<status status="PASS" starttime="20220704 17:25:53.333" endtime="20220704 17:25:53.333"/>
</kw>
<status status="PASS" starttime="20220704 17:25:52.934" endtime="20220704 17:25:53.333"/>
</kw>
<status status="PASS" starttime="20220704 17:25:52.933" endtime="20220704 17:25:53.334"/>
</kw>
<test id="s1-s1-s3-t1" name="Verify A Checklist Can Be Created" line="14">
<kw name="Create A Checklist" library="Checklist">
<var>${response}</var>
<arg>name</arg>
<arg>TestChecklist</arg>
<arg>idCard=${TEST_SUITE_CARD_ID}</arg>
<doc>Creates a new checklist in the given card.
required_args: idCard
optional_args: name, pos, idChecklistSource
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>@{optional_args}</arg>
<arg>idCard</arg>
<arg>${idCard}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 17:25:53.335" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 17:25:53.335" endtime="20220704 17:25:53.335"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 17:25:53.335" endtime="20220704 17:25:53.336"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 17:25:53.336" level="INFO">${url} = checklists/</msg>
<status status="PASS" starttime="20220704 17:25:53.336" endtime="20220704 17:25:53.336"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 17:25:53.448" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 17:25:53.336" endtime="20220704 17:25:53.448"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 17:25:53.448" endtime="20220704 17:25:53.448"/>
</return>
<msg timestamp="20220704 17:25:53.449" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 17:25:53.335" endtime="20220704 17:25:53.449"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 17:25:53.449" endtime="20220704 17:25:53.449"/>
</return>
<msg timestamp="20220704 17:25:53.449" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 17:25:53.334" endtime="20220704 17:25:53.449"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${checklist_id}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 17:25:53.449" endtime="20220704 17:25:53.449"/>
</return>
<msg timestamp="20220704 17:25:53.450" level="INFO">${checklist_id} = 62c322a1f83aca58854282b6</msg>
<status status="PASS" starttime="20220704 17:25:53.449" endtime="20220704 17:25:53.450"/>
</kw>
<kw name="Get A Checklist" library="Checklist">
<var>${response}</var>
<arg>${checklist_id}</arg>
<doc>Gets the checklist with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 17:25:53.451" level="INFO">${url} = checklists/62c322a1f83aca58854282b6</msg>
<status status="PASS" starttime="20220704 17:25:53.451" endtime="20220704 17:25:53.451"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 17:25:53.501" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 17:25:53.451" endtime="20220704 17:25:53.501"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 17:25:53.501" endtime="20220704 17:25:53.501"/>
</return>
<msg timestamp="20220704 17:25:53.501" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 17:25:53.450" endtime="20220704 17:25:53.501"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 17:25:53.501" endtime="20220704 17:25:53.501"/>
</return>
<msg timestamp="20220704 17:25:53.501" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 17:25:53.450" endtime="20220704 17:25:53.501"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${checklist_name}</var>
<arg>${response}</arg>
<arg>name</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 17:25:53.502" endtime="20220704 17:25:53.502"/>
</return>
<msg timestamp="20220704 17:25:53.503" level="INFO">${checklist_name} = TestChecklist</msg>
<status status="PASS" starttime="20220704 17:25:53.502" endtime="20220704 17:25:53.503"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${checklist_name}</arg>
<arg>TestChecklist</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220704 17:25:53.503" endtime="20220704 17:25:53.503"/>
</kw>
<kw name="Delete A Checklist" library="Checklist" type="TEARDOWN">
<arg>${checklist_id}</arg>
<doc>Deletes the checklist with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 17:25:53.504" level="INFO">${url} = checklists/62c322a1f83aca58854282b6</msg>
<status status="PASS" starttime="20220704 17:25:53.504" endtime="20220704 17:25:53.504"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 17:25:53.606" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 17:25:53.504" endtime="20220704 17:25:53.606"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 17:25:53.607" endtime="20220704 17:25:53.607"/>
</return>
<msg timestamp="20220704 17:25:53.607" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 17:25:53.503" endtime="20220704 17:25:53.607"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 17:25:53.607" endtime="20220704 17:25:53.607"/>
</return>
<status status="PASS" starttime="20220704 17:25:53.503" endtime="20220704 17:25:53.607"/>
</kw>
<doc>Verify that a checklist can be created through API</doc>
<tag>api</tag>
<tag>checklist.create</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220704 17:25:53.334" endtime="20220704 17:25:53.607"/>
</test>
<test id="s1-s1-s3-t2" name="Verify A Checklist Can Be Deleted" line="24">
<kw name="Create A Checklist" library="Checklist">
<var>${response}</var>
<arg>name</arg>
<arg>TestChecklist</arg>
<arg>idCard=${TEST_SUITE_CARD_ID}</arg>
<doc>Creates a new checklist in the given card.
required_args: idCard
optional_args: name, pos, idChecklistSource
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>@{optional_args}</arg>
<arg>idCard</arg>
<arg>${idCard}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 17:25:53.609" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 17:25:53.609" endtime="20220704 17:25:53.609"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 17:25:53.609" endtime="20220704 17:25:53.609"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 17:25:53.610" level="INFO">${url} = checklists/</msg>
<status status="PASS" starttime="20220704 17:25:53.609" endtime="20220704 17:25:53.610"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 17:25:53.715" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 17:25:53.610" endtime="20220704 17:25:53.715"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 17:25:53.715" endtime="20220704 17:25:53.716"/>
</return>
<msg timestamp="20220704 17:25:53.716" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 17:25:53.608" endtime="20220704 17:25:53.716"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 17:25:53.716" endtime="20220704 17:25:53.716"/>
</return>
<msg timestamp="20220704 17:25:53.716" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 17:25:53.608" endtime="20220704 17:25:53.716"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${checklist_id}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 17:25:53.716" endtime="20220704 17:25:53.716"/>
</return>
<msg timestamp="20220704 17:25:53.717" level="INFO">${checklist_id} = 62c322a13ea53d84c83b3605</msg>
<status status="PASS" starttime="20220704 17:25:53.716" endtime="20220704 17:25:53.717"/>
</kw>
<kw name="Delete A Checklist" library="Checklist">
<var>${response}</var>
<arg>${checklist_id}</arg>
<doc>Deletes the checklist with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 17:25:53.719" level="INFO">${url} = checklists/62c322a13ea53d84c83b3605</msg>
<status status="PASS" starttime="20220704 17:25:53.718" endtime="20220704 17:25:53.719"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 17:25:53.817" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 17:25:53.719" endtime="20220704 17:25:53.817"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 17:25:53.817" endtime="20220704 17:25:53.817"/>
</return>
<msg timestamp="20220704 17:25:53.817" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 17:25:53.718" endtime="20220704 17:25:53.818"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 17:25:53.818" endtime="20220704 17:25:53.818"/>
</return>
<msg timestamp="20220704 17:25:53.818" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 17:25:53.717" endtime="20220704 17:25:53.818"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>delete</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220704 17:25:53.818" endtime="20220704 17:25:53.820"/>
</kw>
<status status="PASS" starttime="20220704 17:25:53.818" endtime="20220704 17:25:53.820"/>
</kw>
<kw name="Get A Checklist" library="Checklist">
<arg>${checklist_id}</arg>
<arg>status_code=404</arg>
<doc>Gets the checklist with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 17:25:53.821" level="INFO">${url} = checklists/62c322a13ea53d84c83b3605</msg>
<status status="PASS" starttime="20220704 17:25:53.821" endtime="20220704 17:25:53.821"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 17:25:53.853" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220704 17:25:53.821" endtime="20220704 17:25:53.853"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 17:25:53.853" endtime="20220704 17:25:53.853"/>
</return>
<msg timestamp="20220704 17:25:53.853" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220704 17:25:53.820" endtime="20220704 17:25:53.853"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 17:25:53.853" endtime="20220704 17:25:53.854"/>
</return>
<status status="PASS" starttime="20220704 17:25:53.820" endtime="20220704 17:25:53.854"/>
</kw>
<doc>Verify that a checklist can be deleted through API</doc>
<tag>api</tag>
<tag>checklist.delete</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220704 17:25:53.607" endtime="20220704 17:25:53.854"/>
</test>
<test id="s1-s1-s3-t3" name="Verify A Checklist Can Be Updated" line="33">
<kw name="Create A Checklist" library="Checklist">
<var>${response}</var>
<arg>name</arg>
<arg>TestChecklist</arg>
<arg>idCard=${TEST_SUITE_CARD_ID}</arg>
<doc>Creates a new checklist in the given card.
required_args: idCard
optional_args: name, pos, idChecklistSource
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>@{optional_args}</arg>
<arg>idCard</arg>
<arg>${idCard}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 17:25:53.857" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 17:25:53.856" endtime="20220704 17:25:53.857"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 17:25:53.857" endtime="20220704 17:25:53.857"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 17:25:53.858" level="INFO">${url} = checklists/</msg>
<status status="PASS" starttime="20220704 17:25:53.857" endtime="20220704 17:25:53.858"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 17:25:53.977" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 17:25:53.858" endtime="20220704 17:25:53.977"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 17:25:53.977" endtime="20220704 17:25:53.977"/>
</return>
<msg timestamp="20220704 17:25:53.978" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 17:25:53.855" endtime="20220704 17:25:53.978"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 17:25:53.978" endtime="20220704 17:25:53.978"/>
</return>
<msg timestamp="20220704 17:25:53.978" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 17:25:53.855" endtime="20220704 17:25:53.978"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${checklist_id}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 17:25:53.978" endtime="20220704 17:25:53.978"/>
</return>
<msg timestamp="20220704 17:25:53.979" level="INFO">${checklist_id} = 62c322a1d474373c022bfa90</msg>
<status status="PASS" starttime="20220704 17:25:53.978" endtime="20220704 17:25:53.979"/>
</kw>
<kw name="Update A Checklist" library="Checklist">
<var>${response}</var>
<arg>${checklist_id}</arg>
<arg>name</arg>
<arg>TestChecklist2</arg>
<doc>Updates the checklist with the given ID
optional_args: name, pos
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<arg>status_code=${status_code}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 17:25:53.980" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 17:25:53.980" endtime="20220704 17:25:53.980"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 17:25:53.980" endtime="20220704 17:25:53.980"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 17:25:53.981" level="INFO">${url} = checklists/62c322a1d474373c022bfa90</msg>
<status status="PASS" starttime="20220704 17:25:53.980" endtime="20220704 17:25:53.981"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 17:25:54.062" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 17:25:53.981" endtime="20220704 17:25:54.062"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 17:25:54.062" endtime="20220704 17:25:54.062"/>
</return>
<msg timestamp="20220704 17:25:54.063" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 17:25:53.979" endtime="20220704 17:25:54.063"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 17:25:54.063" endtime="20220704 17:25:54.063"/>
</return>
<msg timestamp="20220704 17:25:54.063" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 17:25:53.979" endtime="20220704 17:25:54.063"/>
</kw>
<kw name="Get A Checklist" library="Checklist">
<var>${response}</var>
<arg>${checklist_id}</arg>
<doc>Gets the checklist with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 17:25:54.064" level="INFO">${url} = checklists/62c322a1d474373c022bfa90</msg>
<status status="PASS" starttime="20220704 17:25:54.064" endtime="20220704 17:25:54.064"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 17:25:54.115" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 17:25:54.064" endtime="20220704 17:25:54.115"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 17:25:54.115" endtime="20220704 17:25:54.115"/>
</return>
<msg timestamp="20220704 17:25:54.115" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 17:25:54.063" endtime="20220704 17:25:54.116"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 17:25:54.116" endtime="20220704 17:25:54.116"/>
</return>
<msg timestamp="20220704 17:25:54.116" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 17:25:54.063" endtime="20220704 17:25:54.116"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${checklist_name}</var>
<arg>${response}</arg>
<arg>name</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 17:25:54.116" endtime="20220704 17:25:54.116"/>
</return>
<msg timestamp="20220704 17:25:54.117" level="INFO">${checklist_name} = TestChecklist2</msg>
<status status="PASS" starttime="20220704 17:25:54.116" endtime="20220704 17:25:54.117"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${checklist_name}</arg>
<arg>TestChecklist2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220704 17:25:54.117" endtime="20220704 17:25:54.117"/>
</kw>
<kw name="Delete A Checklist" library="Checklist" type="TEARDOWN">
<arg>${checklist_id}</arg>
<doc>Deletes the checklist with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 17:25:54.127" level="INFO">${url} = checklists/62c322a1d474373c022bfa90</msg>
<status status="PASS" starttime="20220704 17:25:54.127" endtime="20220704 17:25:54.127"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 17:25:54.226" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 17:25:54.127" endtime="20220704 17:25:54.226"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 17:25:54.226" endtime="20220704 17:25:54.226"/>
</return>
<msg timestamp="20220704 17:25:54.226" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 17:25:54.126" endtime="20220704 17:25:54.226"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 17:25:54.226" endtime="20220704 17:25:54.226"/>
</return>
<status status="PASS" starttime="20220704 17:25:54.117" endtime="20220704 17:25:54.226"/>
</kw>
<doc>Verify that a checklist's name can be updated through API</doc>
<tag>api</tag>
<tag>checklist.update</tag>
<tag>regression</tag>
<status status="PASS" starttime="20220704 17:25:53.854" endtime="20220704 17:25:54.226"/>
</test>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Teardown Board</arg>
<arg>Delete All Sessions</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Teardown Board">
<doc>Delete the board created for this suite</doc>
<kw name="Delete A Board" library="Board">
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 17:25:54.228" level="INFO">${url} = boards/62c322a15aed762572f7df57</msg>
<status status="PASS" starttime="20220704 17:25:54.228" endtime="20220704 17:25:54.228"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 17:25:54.603" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 17:25:54.228" endtime="20220704 17:25:54.603"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 17:25:54.603" endtime="20220704 17:25:54.603"/>
</return>
<msg timestamp="20220704 17:25:54.604" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 17:25:54.227" endtime="20220704 17:25:54.604"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 17:25:54.604" endtime="20220704 17:25:54.604"/>
</return>
<status status="PASS" starttime="20220704 17:25:54.227" endtime="20220704 17:25:54.604"/>
</kw>
<status status="PASS" starttime="20220704 17:25:54.227" endtime="20220704 17:25:54.604"/>
</kw>
<kw name="Delete All Sessions" library="request_own_library">
<status status="PASS" starttime="20220704 17:25:54.604" endtime="20220704 17:25:54.605"/>
</kw>
<status status="PASS" starttime="20220704 17:25:54.227" endtime="20220704 17:25:54.605"/>
</kw>
<doc>Example Test with Trello API Checklists</doc>
<status status="PASS" starttime="20220704 17:25:52.925" endtime="20220704 17:25:54.605"/>
</suite>
<suite id="s1-s1-s4" name="Trello Api Labels Tests" source="/trello/api/trello_api_labels_tests.robot">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Create Trello Session</arg>
<arg>Setup Board And List</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Create Trello Session" library="TrelloAPI">
<doc>Creates a Trello Session</doc>
<kw name="Create Session" library="request_own_library">
<arg>${API_BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<status status="PASS" starttime="20220704 17:25:54.614" endtime="20220704 17:25:54.615"/>
</kw>
<status status="PASS" starttime="20220704 17:25:54.614" endtime="20220704 17:25:54.615"/>
</kw>
<kw name="Setup Board And List">
<doc>Create a board and save its ID and its first list's ID</doc>
<kw name="Create A Board" library="Board">
<var>${BOARD}</var>
<arg>TestBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 17:25:54.616" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 17:25:54.616" endtime="20220704 17:25:54.616"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 17:25:54.616" endtime="20220704 17:25:54.616"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 17:25:54.617" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220704 17:25:54.616" endtime="20220704 17:25:54.617"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 17:25:54.790" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 17:25:54.617" endtime="20220704 17:25:54.790"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 17:25:54.790" endtime="20220704 17:25:54.790"/>
</return>
<msg timestamp="20220704 17:25:54.790" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 17:25:54.615" endtime="20220704 17:25:54.790"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 17:25:54.790" endtime="20220704 17:25:54.790"/>
</return>
<msg timestamp="20220704 17:25:54.790" level="INFO">${BOARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 17:25:54.615" endtime="20220704 17:25:54.790"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_BOARD_ID}</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220704 17:25:54.791" level="INFO">${TEST_SUITE_BOARD_ID} = 62c322a258dbc01f6797fbe8</msg>
<status status="PASS" starttime="20220704 17:25:54.791" endtime="20220704 17:25:54.791"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${LISTS}</var>
<arg>boards/${TEST_SUITE_BOARD_ID}/lists</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 17:25:54.835" level="INFO">${LISTS} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 17:25:54.791" endtime="20220704 17:25:54.835"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_LIST_ID}</arg>
<arg>${LISTS.json()}[0][id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220704 17:25:54.836" level="INFO">${TEST_SUITE_LIST_ID} = 62c322a258dbc01f6797fbef</msg>
<status status="PASS" starttime="20220704 17:25:54.835" endtime="20220704 17:25:54.836"/>
</kw>
<status status="PASS" starttime="20220704 17:25:54.615" endtime="20220704 17:25:54.836"/>
</kw>
<status status="PASS" starttime="20220704 17:25:54.614" endtime="20220704 17:25:54.836"/>
</kw>
<test id="s1-s1-s4-t1" name="Create and get label on board" line="14">
<kw name="Create A Label" library="Label">
<var>${response}</var>
<arg>name</arg>
<arg>label2</arg>
<arg>color</arg>
<arg>yellow</arg>
<doc>Creates a new label in the given board.
required_args: idBoard
optional_args: name, color
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>idBoard</arg>
<arg>${idBoard}</arg>
<arg>@{optional_args}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 17:25:54.838" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 17:25:54.838" endtime="20220704 17:25:54.838"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 17:25:54.838" endtime="20220704 17:25:54.838"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 17:25:54.839" level="INFO">${url} = labels/</msg>
<status status="PASS" starttime="20220704 17:25:54.839" endtime="20220704 17:25:54.839"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 17:25:54.932" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 17:25:54.839" endtime="20220704 17:25:54.932"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 17:25:54.932" endtime="20220704 17:25:54.932"/>
</return>
<msg timestamp="20220704 17:25:54.932" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 17:25:54.838" endtime="20220704 17:25:54.932"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 17:25:54.932" endtime="20220704 17:25:54.932"/>
</return>
<msg timestamp="20220704 17:25:54.933" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 17:25:54.837" endtime="20220704 17:25:54.933"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>label</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220704 17:25:54.933" endtime="20220704 17:25:54.935"/>
</kw>
<status status="PASS" starttime="20220704 17:25:54.933" endtime="20220704 17:25:54.935"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${LABEL_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 17:25:54.935" endtime="20220704 17:25:54.935"/>
</return>
<msg timestamp="20220704 17:25:54.936" level="INFO">${LABEL_ID} = 62c322a27bcd3f7526823ee5</msg>
<status status="PASS" starttime="20220704 17:25:54.935" endtime="20220704 17:25:54.936"/>
</kw>
<kw name="Get A Label" library="Label">
<var>${response}</var>
<arg>${LABEL_ID}</arg>
<doc>Gets the label with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 17:25:54.937" level="INFO">${url} = labels/62c322a27bcd3f7526823ee5</msg>
<status status="PASS" starttime="20220704 17:25:54.937" endtime="20220704 17:25:54.937"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 17:25:54.979" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 17:25:54.937" endtime="20220704 17:25:54.979"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 17:25:54.979" endtime="20220704 17:25:54.979"/>
</return>
<msg timestamp="20220704 17:25:54.980" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 17:25:54.936" endtime="20220704 17:25:54.980"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 17:25:54.980" endtime="20220704 17:25:54.980"/>
</return>
<msg timestamp="20220704 17:25:54.980" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 17:25:54.936" endtime="20220704 17:25:54.980"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${LABEL_COLOR}</var>
<arg>${response}</arg>
<arg>color</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 17:25:54.980" endtime="20220704 17:25:54.980"/>
</return>
<msg timestamp="20220704 17:25:54.981" level="INFO">${LABEL_COLOR} = yellow</msg>
<status status="PASS" starttime="20220704 17:25:54.980" endtime="20220704 17:25:54.981"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${LABEL_NAME}</var>
<arg>${response}</arg>
<arg>name</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 17:25:54.981" endtime="20220704 17:25:54.981"/>
</return>
<msg timestamp="20220704 17:25:54.982" level="INFO">${LABEL_NAME} = label2</msg>
<status status="PASS" starttime="20220704 17:25:54.981" endtime="20220704 17:25:54.982"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${LABEL_COLOR}</arg>
<arg>yellow</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220704 17:25:54.982" endtime="20220704 17:25:54.982"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${LABEL_NAME}</arg>
<arg>label2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220704 17:25:54.982" endtime="20220704 17:25:54.983"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Label</arg>
<arg>${LABEL_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Label" library="Label">
<arg>${LABEL_ID}</arg>
<doc>Deletes the label with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 17:25:54.984" level="INFO">${url} = labels/62c322a27bcd3f7526823ee5</msg>
<status status="PASS" starttime="20220704 17:25:54.984" endtime="20220704 17:25:54.984"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 17:25:55.101" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 17:25:54.984" endtime="20220704 17:25:55.101"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 17:25:55.101" endtime="20220704 17:25:55.101"/>
</return>
<msg timestamp="20220704 17:25:55.102" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 17:25:54.983" endtime="20220704 17:25:55.102"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 17:25:55.102" endtime="20220704 17:25:55.102"/>
</return>
<status status="PASS" starttime="20220704 17:25:54.983" endtime="20220704 17:25:55.102"/>
</kw>
<status status="PASS" starttime="20220704 17:25:54.983" endtime="20220704 17:25:55.102"/>
</kw>
<doc>Verify that a label can be created through API</doc>
<tag>api</tag>
<tag>label.create</tag>
<tag>label.get</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220704 17:25:54.837" endtime="20220704 17:25:55.102"/>
</test>
<test id="s1-s1-s4-t2" name="Update label on board" line="28">
<kw name="Create A Label" library="Label">
<var>${response}</var>
<arg>name</arg>
<arg>label2</arg>
<arg>color</arg>
<arg>yellow</arg>
<doc>Creates a new label in the given board.
required_args: idBoard
optional_args: name, color
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>idBoard</arg>
<arg>${idBoard}</arg>
<arg>@{optional_args}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 17:25:55.104" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 17:25:55.104" endtime="20220704 17:25:55.104"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 17:25:55.104" endtime="20220704 17:25:55.104"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 17:25:55.105" level="INFO">${url} = labels/</msg>
<status status="PASS" starttime="20220704 17:25:55.105" endtime="20220704 17:25:55.105"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 17:25:55.185" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 17:25:55.105" endtime="20220704 17:25:55.185"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 17:25:55.185" endtime="20220704 17:25:55.185"/>
</return>
<msg timestamp="20220704 17:25:55.185" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 17:25:55.103" endtime="20220704 17:25:55.185"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 17:25:55.185" endtime="20220704 17:25:55.185"/>
</return>
<msg timestamp="20220704 17:25:55.185" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 17:25:55.103" endtime="20220704 17:25:55.185"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>label</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220704 17:25:55.186" endtime="20220704 17:25:55.188"/>
</kw>
<status status="PASS" starttime="20220704 17:25:55.186" endtime="20220704 17:25:55.188"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${LABEL_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 17:25:55.188" endtime="20220704 17:25:55.188"/>
</return>
<msg timestamp="20220704 17:25:55.189" level="INFO">${LABEL_ID} = 62c322a3a092ee55fce48d78</msg>
<status status="PASS" starttime="20220704 17:25:55.188" endtime="20220704 17:25:55.189"/>
</kw>
<kw name="Update A Label" library="Label">
<var>${new_response}</var>
<arg>${LABEL_ID}</arg>
<arg>name</arg>
<arg>label3</arg>
<arg>color</arg>
<arg>orange</arg>
<doc>Updates the label with the given ID
optional_args: name, color
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 17:25:55.190" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 17:25:55.190" endtime="20220704 17:25:55.190"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 17:25:55.190" endtime="20220704 17:25:55.190"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 17:25:55.190" level="INFO">${url} = labels/62c322a3a092ee55fce48d78</msg>
<status status="PASS" starttime="20220704 17:25:55.190" endtime="20220704 17:25:55.190"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 17:25:55.284" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 17:25:55.191" endtime="20220704 17:25:55.284"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 17:25:55.284" endtime="20220704 17:25:55.284"/>
</return>
<msg timestamp="20220704 17:25:55.285" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 17:25:55.189" endtime="20220704 17:25:55.285"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 17:25:55.285" endtime="20220704 17:25:55.285"/>
</return>
<msg timestamp="20220704 17:25:55.285" level="INFO">${new_response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 17:25:55.189" endtime="20220704 17:25:55.285"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${NEW_LABEL_COLOR}</var>
<arg>${new_response}</arg>
<arg>color</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 17:25:55.285" endtime="20220704 17:25:55.285"/>
</return>
<msg timestamp="20220704 17:25:55.286" level="INFO">${NEW_LABEL_COLOR} = orange</msg>
<status status="PASS" starttime="20220704 17:25:55.285" endtime="20220704 17:25:55.286"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${NEW_LABEL_NAME}</var>
<arg>${new_response}</arg>
<arg>name</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 17:25:55.286" endtime="20220704 17:25:55.286"/>
</return>
<msg timestamp="20220704 17:25:55.287" level="INFO">${NEW_LABEL_NAME} = label3</msg>
<status status="PASS" starttime="20220704 17:25:55.286" endtime="20220704 17:25:55.287"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${NEW_LABEL_COLOR}</arg>
<arg>orange</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220704 17:25:55.287" endtime="20220704 17:25:55.287"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${NEW_LABEL_NAME}</arg>
<arg>label3</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220704 17:25:55.287" endtime="20220704 17:25:55.288"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Label</arg>
<arg>${LABEL_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Label" library="Label">
<arg>${LABEL_ID}</arg>
<doc>Deletes the label with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 17:25:55.289" level="INFO">${url} = labels/62c322a3a092ee55fce48d78</msg>
<status status="PASS" starttime="20220704 17:25:55.289" endtime="20220704 17:25:55.289"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 17:25:55.397" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 17:25:55.290" endtime="20220704 17:25:55.397"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 17:25:55.397" endtime="20220704 17:25:55.397"/>
</return>
<msg timestamp="20220704 17:25:55.397" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 17:25:55.289" endtime="20220704 17:25:55.397"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 17:25:55.397" endtime="20220704 17:25:55.397"/>
</return>
<status status="PASS" starttime="20220704 17:25:55.288" endtime="20220704 17:25:55.397"/>
</kw>
<status status="PASS" starttime="20220704 17:25:55.288" endtime="20220704 17:25:55.397"/>
</kw>
<doc>Verify that a label's name and color can be updated through API</doc>
<tag>api</tag>
<tag>label.update</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220704 17:25:55.102" endtime="20220704 17:25:55.397"/>
</test>
<test id="s1-s1-s4-t3" name="Delete label on board" line="41">
<kw name="Create A Label" library="Label">
<var>${response}</var>
<arg>name</arg>
<arg>label2</arg>
<arg>color</arg>
<arg>yellow</arg>
<doc>Creates a new label in the given board.
required_args: idBoard
optional_args: name, color
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>idBoard</arg>
<arg>${idBoard}</arg>
<arg>@{optional_args}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 17:25:55.400" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 17:25:55.400" endtime="20220704 17:25:55.400"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 17:25:55.400" endtime="20220704 17:25:55.400"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 17:25:55.401" level="INFO">${url} = labels/</msg>
<status status="PASS" starttime="20220704 17:25:55.400" endtime="20220704 17:25:55.401"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 17:25:55.493" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 17:25:55.401" endtime="20220704 17:25:55.493"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 17:25:55.493" endtime="20220704 17:25:55.493"/>
</return>
<msg timestamp="20220704 17:25:55.493" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 17:25:55.399" endtime="20220704 17:25:55.493"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 17:25:55.493" endtime="20220704 17:25:55.493"/>
</return>
<msg timestamp="20220704 17:25:55.493" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 17:25:55.399" endtime="20220704 17:25:55.493"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${LABEL_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 17:25:55.493" endtime="20220704 17:25:55.494"/>
</return>
<msg timestamp="20220704 17:25:55.494" level="INFO">${LABEL_ID} = 62c322a3438972153411e63f</msg>
<status status="PASS" starttime="20220704 17:25:55.493" endtime="20220704 17:25:55.494"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Label</arg>
<arg>${LABEL_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Label" library="Label">
<arg>${LABEL_ID}</arg>
<doc>Deletes the label with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 17:25:55.496" level="INFO">${url} = labels/62c322a3438972153411e63f</msg>
<status status="PASS" starttime="20220704 17:25:55.495" endtime="20220704 17:25:55.496"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 17:25:55.617" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 17:25:55.496" endtime="20220704 17:25:55.617"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 17:25:55.617" endtime="20220704 17:25:55.617"/>
</return>
<msg timestamp="20220704 17:25:55.618" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 17:25:55.495" endtime="20220704 17:25:55.618"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 17:25:55.618" endtime="20220704 17:25:55.618"/>
</return>
<status status="PASS" starttime="20220704 17:25:55.494" endtime="20220704 17:25:55.618"/>
</kw>
<status status="PASS" starttime="20220704 17:25:55.494" endtime="20220704 17:25:55.618"/>
</kw>
<kw name="Get A Label" library="Label">
<arg>${LABEL_ID}</arg>
<arg>status_code=404</arg>
<doc>Gets the label with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 17:25:55.619" level="INFO">${url} = labels/62c322a3438972153411e63f</msg>
<status status="PASS" starttime="20220704 17:25:55.619" endtime="20220704 17:25:55.619"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 17:25:55.653" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220704 17:25:55.619" endtime="20220704 17:25:55.653"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 17:25:55.653" endtime="20220704 17:25:55.653"/>
</return>
<msg timestamp="20220704 17:25:55.654" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220704 17:25:55.618" endtime="20220704 17:25:55.654"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 17:25:55.654" endtime="20220704 17:25:55.654"/>
</return>
<status status="PASS" starttime="20220704 17:25:55.618" endtime="20220704 17:25:55.654"/>
</kw>
<doc>Verify that a label can be deleted through API</doc>
<tag>api</tag>
<tag>label.delete</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220704 17:25:55.398" endtime="20220704 17:25:55.654"/>
</test>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Teardown Board</arg>
<arg>Delete All Sessions</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Teardown Board">
<doc>Delete the board created for this session.</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 17:25:55.656" level="INFO">${url} = boards/62c322a258dbc01f6797fbe8</msg>
<status status="PASS" starttime="20220704 17:25:55.656" endtime="20220704 17:25:55.656"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 17:25:56.016" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 17:25:55.657" endtime="20220704 17:25:56.016"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 17:25:56.017" endtime="20220704 17:25:56.017"/>
</return>
<msg timestamp="20220704 17:25:56.017" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 17:25:55.656" endtime="20220704 17:25:56.017"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 17:25:56.017" endtime="20220704 17:25:56.017"/>
</return>
<status status="PASS" starttime="20220704 17:25:55.655" endtime="20220704 17:25:56.017"/>
</kw>
<status status="PASS" starttime="20220704 17:25:55.655" endtime="20220704 17:25:56.017"/>
</kw>
<status status="PASS" starttime="20220704 17:25:55.655" endtime="20220704 17:25:56.017"/>
</kw>
<kw name="Delete All Sessions" library="request_own_library">
<status status="PASS" starttime="20220704 17:25:56.017" endtime="20220704 17:25:56.018"/>
</kw>
<status status="PASS" starttime="20220704 17:25:55.655" endtime="20220704 17:25:56.018"/>
</kw>
<doc>Example Test with Trello API Cards</doc>
<status status="PASS" starttime="20220704 17:25:54.606" endtime="20220704 17:25:56.018"/>
</suite>
<suite id="s1-s1-s5" name="Trello Api Lists Tests" source="/trello/api/trello_api_lists_tests.robot">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Create Trello Session</arg>
<arg>Setup Board</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Create Trello Session" library="TrelloAPI">
<doc>Creates a Trello Session</doc>
<kw name="Create Session" library="request_own_library">
<arg>${API_BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<status status="PASS" starttime="20220704 17:25:56.027" endtime="20220704 17:25:56.028"/>
</kw>
<status status="PASS" starttime="20220704 17:25:56.027" endtime="20220704 17:25:56.028"/>
</kw>
<kw name="Setup Board">
<doc>Create a board and save it's id for the suite</doc>
<kw name="Create A Board" library="Board">
<var>${BOARD}</var>
<arg>TestBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 17:25:56.029" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 17:25:56.028" endtime="20220704 17:25:56.029"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 17:25:56.029" endtime="20220704 17:25:56.029"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 17:25:56.030" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220704 17:25:56.029" endtime="20220704 17:25:56.030"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 17:25:56.197" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 17:25:56.030" endtime="20220704 17:25:56.197"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 17:25:56.197" endtime="20220704 17:25:56.197"/>
</return>
<msg timestamp="20220704 17:25:56.198" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 17:25:56.028" endtime="20220704 17:25:56.198"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 17:25:56.198" endtime="20220704 17:25:56.198"/>
</return>
<msg timestamp="20220704 17:25:56.198" level="INFO">${BOARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 17:25:56.028" endtime="20220704 17:25:56.198"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Set Suite Variable</arg>
<arg>\${TEST_SUITE_BOARD_ID}</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_BOARD_ID}</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220704 17:25:56.199" level="INFO">${TEST_SUITE_BOARD_ID} = 62c322a465d9df556e059d55</msg>
<status status="PASS" starttime="20220704 17:25:56.198" endtime="20220704 17:25:56.199"/>
</kw>
<status status="PASS" starttime="20220704 17:25:56.198" endtime="20220704 17:25:56.199"/>
</kw>
<status status="PASS" starttime="20220704 17:25:56.028" endtime="20220704 17:25:56.199"/>
</kw>
<status status="PASS" starttime="20220704 17:25:56.027" endtime="20220704 17:25:56.199"/>
</kw>
<test id="s1-s1-s5-t1" name="CREATE a list" line="13">
<kw name="Create A List" library="List">
<var>${response}</var>
<arg>NewList</arg>
<doc>Creates a new List
board id
name the list will have
optional_args: idListSource, pos, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>list</arg>
<arg>name</arg>
<arg>${name}</arg>
<arg>idBoard</arg>
<arg>${idBoard}</arg>
<arg>@{optional_args}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 17:25:56.201" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 17:25:56.201" endtime="20220704 17:25:56.201"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 17:25:56.201" endtime="20220704 17:25:56.201"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 17:25:56.202" level="INFO">${url} = lists/</msg>
<status status="PASS" starttime="20220704 17:25:56.201" endtime="20220704 17:25:56.202"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 17:25:56.302" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 17:25:56.202" endtime="20220704 17:25:56.302"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 17:25:56.302" endtime="20220704 17:25:56.303"/>
</return>
<msg timestamp="20220704 17:25:56.303" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 17:25:56.200" endtime="20220704 17:25:56.303"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 17:25:56.303" endtime="20220704 17:25:56.303"/>
</return>
<msg timestamp="20220704 17:25:56.303" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 17:25:56.200" endtime="20220704 17:25:56.303"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>list</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220704 17:25:56.304" endtime="20220704 17:25:56.305"/>
</kw>
<status status="PASS" starttime="20220704 17:25:56.303" endtime="20220704 17:25:56.305"/>
</kw>
<doc>Verify that a list can be created through API</doc>
<tag>api</tag>
<tag>list.create</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220704 17:25:56.199" endtime="20220704 17:25:56.305"/>
</test>
<test id="s1-s1-s5-t2" name="UPDATE a list" line="19">
<kw name="Create A List" library="List">
<var>${response}</var>
<arg>NewList</arg>
<doc>Creates a new List
board id
name the list will have
optional_args: idListSource, pos, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>list</arg>
<arg>name</arg>
<arg>${name}</arg>
<arg>idBoard</arg>
<arg>${idBoard}</arg>
<arg>@{optional_args}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 17:25:56.308" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 17:25:56.307" endtime="20220704 17:25:56.308"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 17:25:56.308" endtime="20220704 17:25:56.308"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 17:25:56.309" level="INFO">${url} = lists/</msg>
<status status="PASS" starttime="20220704 17:25:56.308" endtime="20220704 17:25:56.309"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 17:25:56.401" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 17:25:56.309" endtime="20220704 17:25:56.401"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 17:25:56.401" endtime="20220704 17:25:56.401"/>
</return>
<msg timestamp="20220704 17:25:56.401" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 17:25:56.307" endtime="20220704 17:25:56.401"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 17:25:56.401" endtime="20220704 17:25:56.401"/>
</return>
<msg timestamp="20220704 17:25:56.402" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 17:25:56.306" endtime="20220704 17:25:56.402"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>list</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220704 17:25:56.402" endtime="20220704 17:25:56.403"/>
</kw>
<status status="PASS" starttime="20220704 17:25:56.402" endtime="20220704 17:25:56.404"/>
</kw>
<kw name="Update A List" library="List">
<arg>${response.json()}[id]</arg>
<arg>name</arg>
<arg>NewName</arg>
<doc>Updates the board with the given ID
optional_args: name, idListSource, pos, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>list</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 17:25:56.405" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 17:25:56.405" endtime="20220704 17:25:56.405"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 17:25:56.405" endtime="20220704 17:25:56.406"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 17:25:56.406" level="INFO">${url} = lists/62c322a43977f16fa2cbf896</msg>
<status status="PASS" starttime="20220704 17:25:56.406" endtime="20220704 17:25:56.406"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 17:25:56.476" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 17:25:56.406" endtime="20220704 17:25:56.476"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 17:25:56.476" endtime="20220704 17:25:56.476"/>
</return>
<msg timestamp="20220704 17:25:56.476" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 17:25:56.404" endtime="20220704 17:25:56.476"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 17:25:56.476" endtime="20220704 17:25:56.476"/>
</return>
<status status="PASS" starttime="20220704 17:25:56.404" endtime="20220704 17:25:56.476"/>
</kw>
<kw name="Get A List" library="List">
<var>${new_response}</var>
<arg>${response.json()}[id]</arg>
<doc>Gets the List with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>list</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 17:25:56.478" level="INFO">${url} = lists/62c322a43977f16fa2cbf896</msg>
<status status="PASS" starttime="20220704 17:25:56.478" endtime="20220704 17:25:56.478"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 17:25:56.518" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 17:25:56.478" endtime="20220704 17:25:56.518"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 17:25:56.518" endtime="20220704 17:25:56.518"/>
</return>
<msg timestamp="20220704 17:25:56.518" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 17:25:56.477" endtime="20220704 17:25:56.518"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 17:25:56.518" endtime="20220704 17:25:56.518"/>
</return>
<msg timestamp="20220704 17:25:56.518" level="INFO">${new_response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 17:25:56.477" endtime="20220704 17:25:56.518"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${new_response}</arg>
<arg>list</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220704 17:25:56.519" endtime="20220704 17:25:56.520"/>
</kw>
<status status="PASS" starttime="20220704 17:25:56.518" endtime="20220704 17:25:56.520"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${new_response.json()}[name]</arg>
<arg>NewName</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220704 17:25:56.520" endtime="20220704 17:25:56.521"/>
</kw>
<doc>Verify that a lists name can be updated through API</doc>
<tag>api</tag>
<tag>list.update</tag>
<tag>regression</tag>
<status status="PASS" starttime="20220704 17:25:56.306" endtime="20220704 17:25:56.521"/>
</test>
<test id="s1-s1-s5-t3" name="ARCHIVE A list" line="29">
<kw name="Create A List" library="List">
<var>${response}</var>
<arg>NewList</arg>
<doc>Creates a new List
board id
name the list will have
optional_args: idListSource, pos, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>list</arg>
<arg>name</arg>
<arg>${name}</arg>
<arg>idBoard</arg>
<arg>${idBoard}</arg>
<arg>@{optional_args}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 17:25:56.524" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 17:25:56.524" endtime="20220704 17:25:56.524"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 17:25:56.524" endtime="20220704 17:25:56.524"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 17:25:56.525" level="INFO">${url} = lists/</msg>
<status status="PASS" starttime="20220704 17:25:56.524" endtime="20220704 17:25:56.525"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 17:25:56.608" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 17:25:56.525" endtime="20220704 17:25:56.608"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 17:25:56.608" endtime="20220704 17:25:56.608"/>
</return>
<msg timestamp="20220704 17:25:56.608" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 17:25:56.523" endtime="20220704 17:25:56.608"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 17:25:56.608" endtime="20220704 17:25:56.608"/>
</return>
<msg timestamp="20220704 17:25:56.609" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 17:25:56.522" endtime="20220704 17:25:56.609"/>
</kw>
<kw name="Archive A List" library="List">
<arg>${response.json()}[id]</arg>
<doc>Deletes the list with the given ID</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>archive_list</arg>
<arg>${id}</arg>
<arg>value</arg>
<arg>true</arg>
<arg>status_code=${status_code}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 17:25:56.610" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 17:25:56.610" endtime="20220704 17:25:56.610"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 17:25:56.610" endtime="20220704 17:25:56.610"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 17:25:56.611" level="INFO">${url} = lists/62c322a44201e3635685afaf/closed</msg>
<status status="PASS" starttime="20220704 17:25:56.611" endtime="20220704 17:25:56.611"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 17:25:56.695" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 17:25:56.611" endtime="20220704 17:25:56.695"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 17:25:56.695" endtime="20220704 17:25:56.695"/>
</return>
<msg timestamp="20220704 17:25:56.695" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 17:25:56.609" endtime="20220704 17:25:56.695"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 17:25:56.695" endtime="20220704 17:25:56.695"/>
</return>
<status status="PASS" starttime="20220704 17:25:56.609" endtime="20220704 17:25:56.695"/>
</kw>
<kw name="Get A List" library="List">
<var>${new_response}</var>
<arg>${response.json()}[id]</arg>
<doc>Gets the List with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>list</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 17:25:56.697" level="INFO">${url} = lists/62c322a44201e3635685afaf</msg>
<status status="PASS" starttime="20220704 17:25:56.696" endtime="20220704 17:25:56.697"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 17:25:56.740" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 17:25:56.697" endtime="20220704 17:25:56.740"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 17:25:56.740" endtime="20220704 17:25:56.740"/>
</return>
<msg timestamp="20220704 17:25:56.741" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 17:25:56.696" endtime="20220704 17:25:56.741"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 17:25:56.741" endtime="20220704 17:25:56.741"/>
</return>
<msg timestamp="20220704 17:25:56.741" level="INFO">${new_response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 17:25:56.695" endtime="20220704 17:25:56.741"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${new_response.json()}[closed]</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220704 17:25:56.741" endtime="20220704 17:25:56.741"/>
</kw>
<doc>Verify that a list can be archived through API</doc>
<tag>api</tag>
<tag>list.archive</tag>
<tag>regression</tag>
<status status="PASS" starttime="20220704 17:25:56.521" endtime="20220704 17:25:56.742"/>
</test>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Teardown Board</arg>
<arg>Delete All Sessions</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Teardown Board">
<doc>Delete the board created for this suite.</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 17:25:56.744" level="INFO">${url} = boards/62c322a465d9df556e059d55</msg>
<status status="PASS" starttime="20220704 17:25:56.744" endtime="20220704 17:25:56.744"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 17:25:57.073" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 17:25:56.744" endtime="20220704 17:25:57.073"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 17:25:57.073" endtime="20220704 17:25:57.073"/>
</return>
<msg timestamp="20220704 17:25:57.073" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 17:25:56.743" endtime="20220704 17:25:57.073"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 17:25:57.073" endtime="20220704 17:25:57.073"/>
</return>
<status status="PASS" starttime="20220704 17:25:56.743" endtime="20220704 17:25:57.073"/>
</kw>
<status status="PASS" starttime="20220704 17:25:56.743" endtime="20220704 17:25:57.073"/>
</kw>
<status status="PASS" starttime="20220704 17:25:56.742" endtime="20220704 17:25:57.074"/>
</kw>
<kw name="Delete All Sessions" library="request_own_library">
<status status="PASS" starttime="20220704 17:25:57.074" endtime="20220704 17:25:57.075"/>
</kw>
<status status="PASS" starttime="20220704 17:25:56.742" endtime="20220704 17:25:57.075"/>
</kw>
<doc>Example Test with Trello API lists</doc>
<status status="PASS" starttime="20220704 17:25:56.020" endtime="20220704 17:25:57.075"/>
</suite>
<status status="PASS" starttime="20220704 17:25:47.547" endtime="20220704 17:25:57.076"/>
</suite>
<status status="PASS" starttime="20220704 17:25:47.531" endtime="20220704 17:25:57.078"/>
</suite>
<statistics>
<total>
<stat pass="18" fail="0" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="18" fail="0" skip="0">api</stat>
<stat pass="1" fail="0" skip="0">board.create</stat>
<stat pass="1" fail="0" skip="0">board.delete</stat>
<stat pass="1" fail="0" skip="0">board.get</stat>
<stat pass="2" fail="0" skip="0">board.update</stat>
<stat pass="1" fail="0" skip="0">card.close</stat>
<stat pass="1" fail="0" skip="0">card.create</stat>
<stat pass="1" fail="0" skip="0">card.delete</stat>
<stat pass="1" fail="0" skip="0">card.update</stat>
<stat pass="1" fail="0" skip="0">checklist.create</stat>
<stat pass="1" fail="0" skip="0">checklist.delete</stat>
<stat pass="1" fail="0" skip="0">checklist.update</stat>
<stat pass="1" fail="0" skip="0">label.create</stat>
<stat pass="1" fail="0" skip="0">label.delete</stat>
<stat pass="1" fail="0" skip="0">label.get</stat>
<stat pass="1" fail="0" skip="0">label.update</stat>
<stat pass="1" fail="0" skip="0">list.archive</stat>
<stat pass="1" fail="0" skip="0">list.create</stat>
<stat pass="1" fail="0" skip="0">list.update</stat>
<stat pass="5" fail="0" skip="0">regression</stat>
<stat pass="13" fail="0" skip="0">smoke</stat>
</tag>
<suite>
<stat pass="18" fail="0" skip="0" id="s1" name="Trello">Trello</stat>
<stat pass="18" fail="0" skip="0" id="s1-s1" name="Api">Trello.Api</stat>
<stat pass="5" fail="0" skip="0" id="s1-s1-s1" name="Trello Api Boards Tests">Trello.Api.Trello Api Boards Tests</stat>
<stat pass="4" fail="0" skip="0" id="s1-s1-s2" name="Trello Api Cards Tests">Trello.Api.Trello Api Cards Tests</stat>
<stat pass="3" fail="0" skip="0" id="s1-s1-s3" name="Trello Api Checklists Tests">Trello.Api.Trello Api Checklists Tests</stat>
<stat pass="3" fail="0" skip="0" id="s1-s1-s4" name="Trello Api Labels Tests">Trello.Api.Trello Api Labels Tests</stat>
<stat pass="3" fail="0" skip="0" id="s1-s1-s5" name="Trello Api Lists Tests">Trello.Api.Trello Api Lists Tests</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
