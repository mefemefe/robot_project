<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 5.0.1 (Python 3.10.5 on linux)" generated="20220704 21:41:09.524" rpa="false" schemaversion="3">
<suite id="s1" name="Trello" source="/trello">
<suite id="s1-s1" name="Api" source="/trello/api">
<suite id="s1-s1-s1" name="Trello Api Boards Tests" source="/trello/api/trello_api_boards_tests.robot">
<kw name="Create Trello Session" library="TrelloAPI" type="SETUP">
<doc>Creates a Trello Session</doc>
<kw name="Create Session" library="request_own_library">
<arg>${API_BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<status status="PASS" starttime="20220704 21:41:09.648" endtime="20220704 21:41:09.648"/>
</kw>
<status status="PASS" starttime="20220704 21:41:09.646" endtime="20220704 21:41:09.648"/>
</kw>
<test id="s1-s1-s1-t1" name="CREATE a board" line="9">
<kw name="Create A Board" library="Board">
<var>${response}</var>
<arg>NewBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 21:41:09.650" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 21:41:09.650" endtime="20220704 21:41:09.650"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 21:41:09.650" endtime="20220704 21:41:09.650"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 21:41:09.651" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220704 21:41:09.650" endtime="20220704 21:41:09.651"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 21:41:09.967" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:41:09.651" endtime="20220704 21:41:09.967"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:41:09.967" endtime="20220704 21:41:09.967"/>
</return>
<msg timestamp="20220704 21:41:09.967" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:41:09.649" endtime="20220704 21:41:09.967"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:41:09.967" endtime="20220704 21:41:09.967"/>
</return>
<msg timestamp="20220704 21:41:09.968" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:41:09.649" endtime="20220704 21:41:09.968"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>board</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220704 21:41:09.968" endtime="20220704 21:41:09.973"/>
</kw>
<status status="PASS" starttime="20220704 21:41:09.968" endtime="20220704 21:41:09.973"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${response.json()}[id]</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${response.json()}[id]</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 21:41:09.975" level="INFO">${url} = boards/62c35e75749046475a541220</msg>
<status status="PASS" starttime="20220704 21:41:09.975" endtime="20220704 21:41:09.975"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 21:41:10.300" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:41:09.975" endtime="20220704 21:41:10.300"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:41:10.300" endtime="20220704 21:41:10.300"/>
</return>
<msg timestamp="20220704 21:41:10.301" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:41:09.974" endtime="20220704 21:41:10.301"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:41:10.301" endtime="20220704 21:41:10.301"/>
</return>
<status status="PASS" starttime="20220704 21:41:09.973" endtime="20220704 21:41:10.301"/>
</kw>
<status status="PASS" starttime="20220704 21:41:09.973" endtime="20220704 21:41:10.301"/>
</kw>
<doc>Verify that a board can be create through API</doc>
<tag>api</tag>
<tag>board.create</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220704 21:41:09.648" endtime="20220704 21:41:10.301"/>
</test>
<test id="s1-s1-s1-t2" name="UPDATE a Board's name" line="16">
<kw name="Create A Board" library="Board">
<var>${response}</var>
<arg>NewBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 21:41:10.304" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 21:41:10.304" endtime="20220704 21:41:10.304"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 21:41:10.304" endtime="20220704 21:41:10.305"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 21:41:10.306" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220704 21:41:10.305" endtime="20220704 21:41:10.306"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 21:41:10.497" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:41:10.306" endtime="20220704 21:41:10.497"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:41:10.497" endtime="20220704 21:41:10.497"/>
</return>
<msg timestamp="20220704 21:41:10.497" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:41:10.304" endtime="20220704 21:41:10.497"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:41:10.497" endtime="20220704 21:41:10.497"/>
</return>
<msg timestamp="20220704 21:41:10.498" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:41:10.303" endtime="20220704 21:41:10.498"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>board</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220704 21:41:10.498" endtime="20220704 21:41:10.502"/>
</kw>
<status status="PASS" starttime="20220704 21:41:10.498" endtime="20220704 21:41:10.502"/>
</kw>
<kw name="Update A Board" library="Board">
<arg>${response.json()}[id]</arg>
<arg>name</arg>
<arg>NewName</arg>
<doc>Updates the board with the given ID
optional_args: name, desc, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 21:41:10.504" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 21:41:10.504" endtime="20220704 21:41:10.504"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 21:41:10.504" endtime="20220704 21:41:10.504"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 21:41:10.505" level="INFO">${url} = boards/62c35e767d5e685826eadf59</msg>
<status status="PASS" starttime="20220704 21:41:10.504" endtime="20220704 21:41:10.505"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 21:41:10.633" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:41:10.505" endtime="20220704 21:41:10.633"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:41:10.633" endtime="20220704 21:41:10.633"/>
</return>
<msg timestamp="20220704 21:41:10.633" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:41:10.503" endtime="20220704 21:41:10.633"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:41:10.634" endtime="20220704 21:41:10.634"/>
</return>
<status status="PASS" starttime="20220704 21:41:10.503" endtime="20220704 21:41:10.634"/>
</kw>
<kw name="Get A Board" library="Board">
<var>${new_response}</var>
<arg>${response.json()}[id]</arg>
<doc>Gets the Board with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 21:41:10.636" level="INFO">${url} = boards/62c35e767d5e685826eadf59</msg>
<status status="PASS" starttime="20220704 21:41:10.635" endtime="20220704 21:41:10.636"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 21:41:10.720" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:41:10.636" endtime="20220704 21:41:10.720"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:41:10.721" endtime="20220704 21:41:10.721"/>
</return>
<msg timestamp="20220704 21:41:10.721" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:41:10.635" endtime="20220704 21:41:10.721"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:41:10.721" endtime="20220704 21:41:10.721"/>
</return>
<msg timestamp="20220704 21:41:10.721" level="INFO">${new_response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:41:10.634" endtime="20220704 21:41:10.721"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${new_response}</arg>
<arg>board</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220704 21:41:10.722" endtime="20220704 21:41:10.726"/>
</kw>
<status status="PASS" starttime="20220704 21:41:10.721" endtime="20220704 21:41:10.726"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${new_response.json()}[name]</arg>
<arg>NewName</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220704 21:41:10.726" endtime="20220704 21:41:10.727"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${response.json()}[id]</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${response.json()}[id]</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 21:41:10.729" level="INFO">${url} = boards/62c35e767d5e685826eadf59</msg>
<status status="PASS" starttime="20220704 21:41:10.728" endtime="20220704 21:41:10.729"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 21:41:11.050" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:41:10.729" endtime="20220704 21:41:11.050"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:41:11.050" endtime="20220704 21:41:11.050"/>
</return>
<msg timestamp="20220704 21:41:11.050" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:41:10.728" endtime="20220704 21:41:11.051"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:41:11.051" endtime="20220704 21:41:11.051"/>
</return>
<status status="PASS" starttime="20220704 21:41:10.727" endtime="20220704 21:41:11.051"/>
</kw>
<status status="PASS" starttime="20220704 21:41:10.727" endtime="20220704 21:41:11.051"/>
</kw>
<doc>Verify that a board's name can be updated through API</doc>
<tag>api</tag>
<tag>board.update</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220704 21:41:10.302" endtime="20220704 21:41:11.051"/>
</test>
<test id="s1-s1-s1-t3" name="DELETE A Board" line="27">
<kw name="Create A Board" library="Board">
<var>${response}</var>
<arg>NewBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 21:41:11.054" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 21:41:11.054" endtime="20220704 21:41:11.054"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 21:41:11.054" endtime="20220704 21:41:11.054"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 21:41:11.055" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220704 21:41:11.054" endtime="20220704 21:41:11.055"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 21:41:11.244" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:41:11.055" endtime="20220704 21:41:11.244"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:41:11.244" endtime="20220704 21:41:11.244"/>
</return>
<msg timestamp="20220704 21:41:11.244" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:41:11.053" endtime="20220704 21:41:11.244"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:41:11.244" endtime="20220704 21:41:11.244"/>
</return>
<msg timestamp="20220704 21:41:11.245" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:41:11.053" endtime="20220704 21:41:11.245"/>
</kw>
<kw name="Delete A Board" library="Board">
<arg>${response.json()}[id]</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 21:41:11.246" level="INFO">${url} = boards/62c35e7745cb6b0b448ce7e8</msg>
<status status="PASS" starttime="20220704 21:41:11.246" endtime="20220704 21:41:11.246"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 21:41:11.593" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:41:11.246" endtime="20220704 21:41:11.593"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:41:11.593" endtime="20220704 21:41:11.593"/>
</return>
<msg timestamp="20220704 21:41:11.594" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:41:11.246" endtime="20220704 21:41:11.594"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:41:11.594" endtime="20220704 21:41:11.594"/>
</return>
<status status="PASS" starttime="20220704 21:41:11.245" endtime="20220704 21:41:11.594"/>
</kw>
<kw name="Get A Board" library="Board">
<arg>${response.json()}[id]</arg>
<arg>status_code=404</arg>
<doc>Gets the Board with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 21:41:11.596" level="INFO">${url} = boards/62c35e7745cb6b0b448ce7e8</msg>
<status status="PASS" starttime="20220704 21:41:11.596" endtime="20220704 21:41:11.596"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 21:41:11.665" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220704 21:41:11.596" endtime="20220704 21:41:11.665"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:41:11.665" endtime="20220704 21:41:11.665"/>
</return>
<msg timestamp="20220704 21:41:11.665" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220704 21:41:11.595" endtime="20220704 21:41:11.665"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:41:11.665" endtime="20220704 21:41:11.665"/>
</return>
<status status="PASS" starttime="20220704 21:41:11.594" endtime="20220704 21:41:11.665"/>
</kw>
<doc>Verify that a board can be deleted through API</doc>
<tag>api</tag>
<tag>board.delete</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220704 21:41:11.052" endtime="20220704 21:41:11.666"/>
</test>
<test id="s1-s1-s1-t4" name="GET Information of A Board" line="34">
<kw name="Create A Board" library="Board">
<var>${response}</var>
<arg>BoardTest</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 21:41:11.668" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 21:41:11.667" endtime="20220704 21:41:11.668"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 21:41:11.668" endtime="20220704 21:41:11.668"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 21:41:11.669" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220704 21:41:11.668" endtime="20220704 21:41:11.669"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 21:41:11.861" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:41:11.669" endtime="20220704 21:41:11.861"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:41:11.861" endtime="20220704 21:41:11.861"/>
</return>
<msg timestamp="20220704 21:41:11.861" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:41:11.667" endtime="20220704 21:41:11.861"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:41:11.861" endtime="20220704 21:41:11.861"/>
</return>
<msg timestamp="20220704 21:41:11.861" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:41:11.667" endtime="20220704 21:41:11.861"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>board</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220704 21:41:11.862" endtime="20220704 21:41:11.866"/>
</kw>
<status status="PASS" starttime="20220704 21:41:11.862" endtime="20220704 21:41:11.866"/>
</kw>
<kw name="Get A Board" library="Board">
<var>${response2}</var>
<arg>${response.json()}[id]</arg>
<doc>Gets the Board with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 21:41:11.868" level="INFO">${url} = boards/62c35e774d7f3d29c45bc208</msg>
<status status="PASS" starttime="20220704 21:41:11.868" endtime="20220704 21:41:11.868"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 21:41:11.956" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:41:11.868" endtime="20220704 21:41:11.956"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:41:11.956" endtime="20220704 21:41:11.956"/>
</return>
<msg timestamp="20220704 21:41:11.956" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:41:11.867" endtime="20220704 21:41:11.956"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:41:11.956" endtime="20220704 21:41:11.956"/>
</return>
<msg timestamp="20220704 21:41:11.957" level="INFO">${response2} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:41:11.866" endtime="20220704 21:41:11.957"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response2}</arg>
<arg>board</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220704 21:41:11.957" endtime="20220704 21:41:11.961"/>
</kw>
<status status="PASS" starttime="20220704 21:41:11.957" endtime="20220704 21:41:11.961"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${response2.json()}[name]</arg>
<arg>BoardTest</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220704 21:41:11.961" endtime="20220704 21:41:11.962"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${response.json()}[id]</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${response.json()}[id]</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 21:41:11.964" level="INFO">${url} = boards/62c35e774d7f3d29c45bc208</msg>
<status status="PASS" starttime="20220704 21:41:11.963" endtime="20220704 21:41:11.964"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 21:41:12.336" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:41:11.964" endtime="20220704 21:41:12.336"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:41:12.336" endtime="20220704 21:41:12.336"/>
</return>
<msg timestamp="20220704 21:41:12.336" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:41:11.963" endtime="20220704 21:41:12.336"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:41:12.336" endtime="20220704 21:41:12.336"/>
</return>
<status status="PASS" starttime="20220704 21:41:11.962" endtime="20220704 21:41:12.337"/>
</kw>
<status status="PASS" starttime="20220704 21:41:11.962" endtime="20220704 21:41:12.337"/>
</kw>
<doc>Verify that a board's information can be accesed through API</doc>
<tag>api</tag>
<tag>board.get</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220704 21:41:11.666" endtime="20220704 21:41:12.337"/>
</test>
<test id="s1-s1-s1-t5" name="UPDATE a Board's description" line="45">
<kw name="Create A Board" library="Board">
<var>${response}</var>
<arg>NewBoardForTest</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 21:41:12.339" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 21:41:12.339" endtime="20220704 21:41:12.339"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 21:41:12.339" endtime="20220704 21:41:12.339"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 21:41:12.340" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220704 21:41:12.339" endtime="20220704 21:41:12.340"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 21:41:12.551" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:41:12.340" endtime="20220704 21:41:12.551"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:41:12.551" endtime="20220704 21:41:12.551"/>
</return>
<msg timestamp="20220704 21:41:12.551" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:41:12.338" endtime="20220704 21:41:12.551"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:41:12.551" endtime="20220704 21:41:12.551"/>
</return>
<msg timestamp="20220704 21:41:12.551" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:41:12.338" endtime="20220704 21:41:12.551"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>board</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220704 21:41:12.552" endtime="20220704 21:41:12.556"/>
</kw>
<status status="PASS" starttime="20220704 21:41:12.552" endtime="20220704 21:41:12.557"/>
</kw>
<kw name="Update A Board" library="Board">
<arg>${response.json()}[id]</arg>
<arg>desc</arg>
<arg>sampleDescription</arg>
<doc>Updates the board with the given ID
optional_args: name, desc, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 21:41:12.558" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 21:41:12.558" endtime="20220704 21:41:12.558"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 21:41:12.558" endtime="20220704 21:41:12.558"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 21:41:12.559" level="INFO">${url} = boards/62c35e78282b050827dada80</msg>
<status status="PASS" starttime="20220704 21:41:12.559" endtime="20220704 21:41:12.559"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 21:41:12.714" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:41:12.559" endtime="20220704 21:41:12.714"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:41:12.714" endtime="20220704 21:41:12.714"/>
</return>
<msg timestamp="20220704 21:41:12.715" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:41:12.557" endtime="20220704 21:41:12.715"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:41:12.715" endtime="20220704 21:41:12.715"/>
</return>
<status status="PASS" starttime="20220704 21:41:12.557" endtime="20220704 21:41:12.715"/>
</kw>
<kw name="Get A Board" library="Board">
<var>${new_response}</var>
<arg>${response.json()}[id]</arg>
<doc>Gets the Board with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 21:41:12.717" level="INFO">${url} = boards/62c35e78282b050827dada80</msg>
<status status="PASS" starttime="20220704 21:41:12.717" endtime="20220704 21:41:12.717"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 21:41:12.803" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:41:12.717" endtime="20220704 21:41:12.803"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:41:12.803" endtime="20220704 21:41:12.803"/>
</return>
<msg timestamp="20220704 21:41:12.803" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:41:12.716" endtime="20220704 21:41:12.803"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:41:12.803" endtime="20220704 21:41:12.803"/>
</return>
<msg timestamp="20220704 21:41:12.804" level="INFO">${new_response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:41:12.715" endtime="20220704 21:41:12.804"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${new_response.json()}[desc]</arg>
<arg>sampleDescription</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220704 21:41:12.804" endtime="20220704 21:41:12.804"/>
</kw>
<kw name="Update A Board" library="Board">
<arg>${response.json()}[id]</arg>
<arg>desc</arg>
<arg>updatedDescription</arg>
<doc>Updates the board with the given ID
optional_args: name, desc, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 21:41:12.807" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 21:41:12.806" endtime="20220704 21:41:12.807"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 21:41:12.807" endtime="20220704 21:41:12.807"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 21:41:12.807" level="INFO">${url} = boards/62c35e78282b050827dada80</msg>
<status status="PASS" starttime="20220704 21:41:12.807" endtime="20220704 21:41:12.807"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 21:41:12.932" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:41:12.807" endtime="20220704 21:41:12.932"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:41:12.932" endtime="20220704 21:41:12.933"/>
</return>
<msg timestamp="20220704 21:41:12.933" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:41:12.806" endtime="20220704 21:41:12.933"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:41:12.933" endtime="20220704 21:41:12.933"/>
</return>
<status status="PASS" starttime="20220704 21:41:12.805" endtime="20220704 21:41:12.933"/>
</kw>
<kw name="Get A Board" library="Board">
<var>${new_response2}</var>
<arg>${response.json()}[id]</arg>
<doc>Gets the Board with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 21:41:12.935" level="INFO">${url} = boards/62c35e78282b050827dada80</msg>
<status status="PASS" starttime="20220704 21:41:12.935" endtime="20220704 21:41:12.935"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 21:41:13.013" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:41:12.935" endtime="20220704 21:41:13.013"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:41:13.013" endtime="20220704 21:41:13.013"/>
</return>
<msg timestamp="20220704 21:41:13.013" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:41:12.934" endtime="20220704 21:41:13.013"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:41:13.013" endtime="20220704 21:41:13.013"/>
</return>
<msg timestamp="20220704 21:41:13.014" level="INFO">${new_response2} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:41:12.933" endtime="20220704 21:41:13.014"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${new_response2.json()}[desc]</arg>
<arg>updatedDescription</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220704 21:41:13.014" endtime="20220704 21:41:13.015"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${response.json()}[id]</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${response.json()}[id]</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 21:41:13.017" level="INFO">${url} = boards/62c35e78282b050827dada80</msg>
<status status="PASS" starttime="20220704 21:41:13.016" endtime="20220704 21:41:13.017"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 21:41:13.415" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:41:13.017" endtime="20220704 21:41:13.416"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:41:13.416" endtime="20220704 21:41:13.416"/>
</return>
<msg timestamp="20220704 21:41:13.416" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:41:13.016" endtime="20220704 21:41:13.416"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:41:13.416" endtime="20220704 21:41:13.416"/>
</return>
<status status="PASS" starttime="20220704 21:41:13.015" endtime="20220704 21:41:13.416"/>
</kw>
<status status="PASS" starttime="20220704 21:41:13.015" endtime="20220704 21:41:13.416"/>
</kw>
<doc>Verify that a board's description can be updated through API</doc>
<tag>api</tag>
<tag>board.update</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220704 21:41:12.337" endtime="20220704 21:41:13.416"/>
</test>
<kw name="Delete All Sessions" library="request_own_library" type="TEARDOWN">
<status status="PASS" starttime="20220704 21:41:13.417" endtime="20220704 21:41:13.418"/>
</kw>
<doc>Example Test with Trello API Boards</doc>
<status status="PASS" starttime="20220704 21:41:09.544" endtime="20220704 21:41:13.419"/>
</suite>
<suite id="s1-s1-s2" name="Trello Api Cards Tests" source="/trello/api/trello_api_cards_tests.robot">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Create Trello Session</arg>
<arg>Setup Board And List</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Create Trello Session" library="TrelloAPI">
<doc>Creates a Trello Session</doc>
<kw name="Create Session" library="request_own_library">
<arg>${API_BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<status status="PASS" starttime="20220704 21:41:13.430" endtime="20220704 21:41:13.430"/>
</kw>
<status status="PASS" starttime="20220704 21:41:13.430" endtime="20220704 21:41:13.430"/>
</kw>
<kw name="Setup Board And List">
<doc>Create a board and save its ID and its first list's ID</doc>
<kw name="Create A Board" library="Board">
<var>${BOARD}</var>
<arg>TestBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 21:41:13.431" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 21:41:13.431" endtime="20220704 21:41:13.431"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 21:41:13.431" endtime="20220704 21:41:13.432"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 21:41:13.432" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220704 21:41:13.432" endtime="20220704 21:41:13.432"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 21:41:13.717" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:41:13.432" endtime="20220704 21:41:13.717"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:41:13.717" endtime="20220704 21:41:13.717"/>
</return>
<msg timestamp="20220704 21:41:13.717" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:41:13.431" endtime="20220704 21:41:13.717"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:41:13.718" endtime="20220704 21:41:13.718"/>
</return>
<msg timestamp="20220704 21:41:13.718" level="INFO">${BOARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:41:13.431" endtime="20220704 21:41:13.718"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_BOARD_ID}</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220704 21:41:13.719" level="INFO">${TEST_SUITE_BOARD_ID} = 62c35e79b179e15cdbdf25a2</msg>
<status status="PASS" starttime="20220704 21:41:13.718" endtime="20220704 21:41:13.719"/>
</kw>
<kw name="Get Lists On A Board" library="Board">
<var>${LISTS}</var>
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Get all the lists in a board</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>lists_on_board</arg>
<arg>${id}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 21:41:13.720" level="INFO">${url} = boards/62c35e79b179e15cdbdf25a2/lists/</msg>
<status status="PASS" starttime="20220704 21:41:13.720" endtime="20220704 21:41:13.720"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 21:41:13.811" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:41:13.720" endtime="20220704 21:41:13.811"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:41:13.811" endtime="20220704 21:41:13.811"/>
</return>
<msg timestamp="20220704 21:41:13.811" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:41:13.719" endtime="20220704 21:41:13.811"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:41:13.811" endtime="20220704 21:41:13.811"/>
</return>
<msg timestamp="20220704 21:41:13.811" level="INFO">${LISTS} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:41:13.719" endtime="20220704 21:41:13.811"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_LIST_ID}</arg>
<arg>${LISTS.json()}[0][id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220704 21:41:13.812" level="INFO">${TEST_SUITE_LIST_ID} = 62c35e79b179e15cdbdf25a9</msg>
<status status="PASS" starttime="20220704 21:41:13.811" endtime="20220704 21:41:13.812"/>
</kw>
<status status="PASS" starttime="20220704 21:41:13.430" endtime="20220704 21:41:13.812"/>
</kw>
<status status="PASS" starttime="20220704 21:41:13.430" endtime="20220704 21:41:13.813"/>
</kw>
<test id="s1-s1-s2-t1" name="Verify A Card Can Be Created" line="13">
<kw name="Create A Card" library="Card">
<var>${response}</var>
<arg>name</arg>
<arg>RFCard2</arg>
<doc>Creates a new card in the given list.
required_args: listId
optional_args: name, desc, pos, idCardSource, idLabels, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>@{optional_args}</arg>
<arg>idList</arg>
<arg>${idList}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 21:41:13.815" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 21:41:13.814" endtime="20220704 21:41:13.815"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 21:41:13.815" endtime="20220704 21:41:13.815"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 21:41:13.816" level="INFO">${url} = cards/</msg>
<status status="PASS" starttime="20220704 21:41:13.815" endtime="20220704 21:41:13.816"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 21:41:14.001" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:41:13.816" endtime="20220704 21:41:14.001"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:41:14.001" endtime="20220704 21:41:14.001"/>
</return>
<msg timestamp="20220704 21:41:14.001" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:41:13.814" endtime="20220704 21:41:14.002"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:41:14.002" endtime="20220704 21:41:14.002"/>
</return>
<msg timestamp="20220704 21:41:14.002" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:41:13.813" endtime="20220704 21:41:14.002"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>card</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220704 21:41:14.002" endtime="20220704 21:41:14.008"/>
</kw>
<status status="PASS" starttime="20220704 21:41:14.002" endtime="20220704 21:41:14.008"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 21:41:14.008" endtime="20220704 21:41:14.008"/>
</return>
<msg timestamp="20220704 21:41:14.009" level="INFO">${CARD_ID} = 62c35e7983e65a8c9ffb0edb</msg>
<status status="PASS" starttime="20220704 21:41:14.008" endtime="20220704 21:41:14.009"/>
</kw>
<kw name="Get A Card" library="Card">
<var>${response}</var>
<arg>${CARD_ID}</arg>
<doc>Gets the card with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 21:41:14.011" level="INFO">${url} = cards/62c35e7983e65a8c9ffb0edb</msg>
<status status="PASS" starttime="20220704 21:41:14.010" endtime="20220704 21:41:14.011"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 21:41:14.097" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:41:14.011" endtime="20220704 21:41:14.097"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:41:14.097" endtime="20220704 21:41:14.097"/>
</return>
<msg timestamp="20220704 21:41:14.097" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:41:14.010" endtime="20220704 21:41:14.097"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:41:14.097" endtime="20220704 21:41:14.097"/>
</return>
<msg timestamp="20220704 21:41:14.097" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:41:14.009" endtime="20220704 21:41:14.097"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_NAME}</var>
<arg>${response}</arg>
<arg>name</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 21:41:14.098" endtime="20220704 21:41:14.098"/>
</return>
<msg timestamp="20220704 21:41:14.099" level="INFO">${CARD_NAME} = RFCard2</msg>
<status status="PASS" starttime="20220704 21:41:14.098" endtime="20220704 21:41:14.099"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${CARD_NAME}</arg>
<arg>RFCard2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220704 21:41:14.099" endtime="20220704 21:41:14.099"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Card</arg>
<arg>${CARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Card" library="Card">
<arg>${CARD_ID}</arg>
<doc>Deletes the card with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 21:41:14.101" level="INFO">${url} = cards/62c35e7983e65a8c9ffb0edb</msg>
<status status="PASS" starttime="20220704 21:41:14.101" endtime="20220704 21:41:14.101"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 21:41:14.303" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:41:14.101" endtime="20220704 21:41:14.303"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:41:14.303" endtime="20220704 21:41:14.303"/>
</return>
<msg timestamp="20220704 21:41:14.304" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:41:14.100" endtime="20220704 21:41:14.304"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:41:14.304" endtime="20220704 21:41:14.304"/>
</return>
<status status="PASS" starttime="20220704 21:41:14.100" endtime="20220704 21:41:14.304"/>
</kw>
<status status="PASS" starttime="20220704 21:41:14.099" endtime="20220704 21:41:14.304"/>
</kw>
<doc>Verify that a card can be created through API</doc>
<tag>api</tag>
<tag>card.create</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220704 21:41:13.813" endtime="20220704 21:41:14.304"/>
</test>
<test id="s1-s1-s2-t2" name="Verify A Card Can Be Closed" line="24">
<kw name="Create A Card" library="Card">
<var>${response}</var>
<doc>Creates a new card in the given list.
required_args: listId
optional_args: name, desc, pos, idCardSource, idLabels, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>@{optional_args}</arg>
<arg>idList</arg>
<arg>${idList}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 21:41:14.307" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 21:41:14.306" endtime="20220704 21:41:14.307"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 21:41:14.307" endtime="20220704 21:41:14.307"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 21:41:14.308" level="INFO">${url} = cards/</msg>
<status status="PASS" starttime="20220704 21:41:14.307" endtime="20220704 21:41:14.308"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 21:41:14.515" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:41:14.308" endtime="20220704 21:41:14.515"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:41:14.515" endtime="20220704 21:41:14.515"/>
</return>
<msg timestamp="20220704 21:41:14.515" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:41:14.306" endtime="20220704 21:41:14.515"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:41:14.515" endtime="20220704 21:41:14.515"/>
</return>
<msg timestamp="20220704 21:41:14.515" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:41:14.305" endtime="20220704 21:41:14.515"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 21:41:14.516" endtime="20220704 21:41:14.516"/>
</return>
<msg timestamp="20220704 21:41:14.517" level="INFO">${CARD_ID} = 62c35e7a75975739184ea380</msg>
<status status="PASS" starttime="20220704 21:41:14.515" endtime="20220704 21:41:14.517"/>
</kw>
<kw name="Archive A Card" library="Card">
<arg>${CARD_ID}</arg>
<doc>Modifies the card status to closed.</doc>
<kw name="Update A Card" library="Card">
<var>${response}</var>
<arg>${id}</arg>
<arg>closed</arg>
<arg>true</arg>
<arg>status_code=${status_code}</arg>
<doc>Updates the card with the given ID
optional_args: name, desc, closed, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<arg>status_code=${status_code}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 21:41:14.519" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 21:41:14.519" endtime="20220704 21:41:14.519"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 21:41:14.519" endtime="20220704 21:41:14.519"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 21:41:14.519" level="INFO">${url} = cards/62c35e7a75975739184ea380</msg>
<status status="PASS" starttime="20220704 21:41:14.519" endtime="20220704 21:41:14.519"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 21:41:14.683" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:41:14.520" endtime="20220704 21:41:14.683"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:41:14.683" endtime="20220704 21:41:14.683"/>
</return>
<msg timestamp="20220704 21:41:14.683" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:41:14.518" endtime="20220704 21:41:14.683"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:41:14.683" endtime="20220704 21:41:14.683"/>
</return>
<msg timestamp="20220704 21:41:14.683" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:41:14.517" endtime="20220704 21:41:14.683"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:41:14.684" endtime="20220704 21:41:14.684"/>
</return>
<status status="PASS" starttime="20220704 21:41:14.517" endtime="20220704 21:41:14.684"/>
</kw>
<kw name="Get A Card" library="Card">
<var>${response}</var>
<arg>${CARD_ID}</arg>
<doc>Gets the card with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 21:41:14.685" level="INFO">${url} = cards/62c35e7a75975739184ea380</msg>
<status status="PASS" starttime="20220704 21:41:14.685" endtime="20220704 21:41:14.685"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 21:41:14.773" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:41:14.685" endtime="20220704 21:41:14.773"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:41:14.774" endtime="20220704 21:41:14.774"/>
</return>
<msg timestamp="20220704 21:41:14.774" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:41:14.684" endtime="20220704 21:41:14.774"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:41:14.774" endtime="20220704 21:41:14.774"/>
</return>
<msg timestamp="20220704 21:41:14.774" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:41:14.684" endtime="20220704 21:41:14.774"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_CLOSED}</var>
<arg>${response}</arg>
<arg>closed</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 21:41:14.775" endtime="20220704 21:41:14.775"/>
</return>
<msg timestamp="20220704 21:41:14.776" level="INFO">${CARD_CLOSED} = True</msg>
<status status="PASS" starttime="20220704 21:41:14.774" endtime="20220704 21:41:14.776"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${CARD_CLOSED}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220704 21:41:14.776" endtime="20220704 21:41:14.776"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Card</arg>
<arg>${CARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Card" library="Card">
<arg>${CARD_ID}</arg>
<doc>Deletes the card with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 21:41:14.778" level="INFO">${url} = cards/62c35e7a75975739184ea380</msg>
<status status="PASS" starttime="20220704 21:41:14.777" endtime="20220704 21:41:14.778"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 21:41:14.943" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:41:14.778" endtime="20220704 21:41:14.943"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:41:14.943" endtime="20220704 21:41:14.943"/>
</return>
<msg timestamp="20220704 21:41:14.943" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:41:14.777" endtime="20220704 21:41:14.943"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:41:14.943" endtime="20220704 21:41:14.943"/>
</return>
<status status="PASS" starttime="20220704 21:41:14.777" endtime="20220704 21:41:14.943"/>
</kw>
<status status="PASS" starttime="20220704 21:41:14.776" endtime="20220704 21:41:14.944"/>
</kw>
<doc>Verify that a card can be closed through API</doc>
<tag>api</tag>
<tag>card.close</tag>
<tag>regression</tag>
<status status="PASS" starttime="20220704 21:41:14.304" endtime="20220704 21:41:14.944"/>
</test>
<test id="s1-s1-s2-t3" name="Verify A Card Can Be Deleted" line="35">
<kw name="Create A Card" library="Card">
<var>${response}</var>
<doc>Creates a new card in the given list.
required_args: listId
optional_args: name, desc, pos, idCardSource, idLabels, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>@{optional_args}</arg>
<arg>idList</arg>
<arg>${idList}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 21:41:14.946" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 21:41:14.946" endtime="20220704 21:41:14.946"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 21:41:14.947" endtime="20220704 21:41:14.947"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 21:41:14.947" level="INFO">${url} = cards/</msg>
<status status="PASS" starttime="20220704 21:41:14.947" endtime="20220704 21:41:14.947"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 21:41:15.137" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:41:14.948" endtime="20220704 21:41:15.137"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:41:15.137" endtime="20220704 21:41:15.137"/>
</return>
<msg timestamp="20220704 21:41:15.137" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:41:14.945" endtime="20220704 21:41:15.137"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:41:15.137" endtime="20220704 21:41:15.137"/>
</return>
<msg timestamp="20220704 21:41:15.137" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:41:14.945" endtime="20220704 21:41:15.137"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 21:41:15.138" endtime="20220704 21:41:15.138"/>
</return>
<msg timestamp="20220704 21:41:15.139" level="INFO">${CARD_ID} = 62c35e7bb20c2f73cd54795d</msg>
<status status="PASS" starttime="20220704 21:41:15.137" endtime="20220704 21:41:15.139"/>
</kw>
<kw name="Delete A Card" library="Card">
<var>${response}</var>
<arg>${CARD_ID}</arg>
<doc>Deletes the card with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 21:41:15.140" level="INFO">${url} = cards/62c35e7bb20c2f73cd54795d</msg>
<status status="PASS" starttime="20220704 21:41:15.140" endtime="20220704 21:41:15.140"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 21:41:15.308" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:41:15.140" endtime="20220704 21:41:15.308"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:41:15.308" endtime="20220704 21:41:15.308"/>
</return>
<msg timestamp="20220704 21:41:15.308" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:41:15.139" endtime="20220704 21:41:15.308"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:41:15.309" endtime="20220704 21:41:15.309"/>
</return>
<msg timestamp="20220704 21:41:15.309" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:41:15.139" endtime="20220704 21:41:15.309"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>delete</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220704 21:41:15.309" endtime="20220704 21:41:15.311"/>
</kw>
<status status="PASS" starttime="20220704 21:41:15.309" endtime="20220704 21:41:15.311"/>
</kw>
<kw name="Get A Card" library="Card">
<arg>${CARD_ID}</arg>
<arg>status_code=404</arg>
<doc>Gets the card with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 21:41:15.313" level="INFO">${url} = cards/62c35e7bb20c2f73cd54795d</msg>
<status status="PASS" starttime="20220704 21:41:15.312" endtime="20220704 21:41:15.313"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 21:41:15.381" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220704 21:41:15.313" endtime="20220704 21:41:15.381"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:41:15.381" endtime="20220704 21:41:15.381"/>
</return>
<msg timestamp="20220704 21:41:15.381" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220704 21:41:15.312" endtime="20220704 21:41:15.381"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:41:15.381" endtime="20220704 21:41:15.381"/>
</return>
<status status="PASS" starttime="20220704 21:41:15.312" endtime="20220704 21:41:15.381"/>
</kw>
<doc>Verify that a card can be deleted through API</doc>
<tag>api</tag>
<tag>card.delete</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220704 21:41:14.944" endtime="20220704 21:41:15.382"/>
</test>
<test id="s1-s1-s2-t4" name="Verify A Card Can Be Updated" line="44">
<kw name="Create A Card" library="Card">
<var>${response}</var>
<arg>name</arg>
<arg>RFCard4</arg>
<doc>Creates a new card in the given list.
required_args: listId
optional_args: name, desc, pos, idCardSource, idLabels, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>@{optional_args}</arg>
<arg>idList</arg>
<arg>${idList}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 21:41:15.384" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 21:41:15.384" endtime="20220704 21:41:15.384"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 21:41:15.384" endtime="20220704 21:41:15.385"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 21:41:15.385" level="INFO">${url} = cards/</msg>
<status status="PASS" starttime="20220704 21:41:15.385" endtime="20220704 21:41:15.385"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 21:41:15.561" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:41:15.386" endtime="20220704 21:41:15.561"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:41:15.562" endtime="20220704 21:41:15.562"/>
</return>
<msg timestamp="20220704 21:41:15.562" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:41:15.384" endtime="20220704 21:41:15.562"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:41:15.562" endtime="20220704 21:41:15.562"/>
</return>
<msg timestamp="20220704 21:41:15.562" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:41:15.383" endtime="20220704 21:41:15.562"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 21:41:15.563" endtime="20220704 21:41:15.563"/>
</return>
<msg timestamp="20220704 21:41:15.564" level="INFO">${CARD_ID} = 62c35e7b9ac09c44d04b161d</msg>
<status status="PASS" starttime="20220704 21:41:15.562" endtime="20220704 21:41:15.564"/>
</kw>
<kw name="Update A Card" library="Card">
<var>${response}</var>
<arg>${CARD_ID}</arg>
<arg>name</arg>
<arg>RFCard5</arg>
<arg>desc</arg>
<arg>Description</arg>
<doc>Updates the card with the given ID
optional_args: name, desc, closed, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<arg>status_code=${status_code}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 21:41:15.565" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 21:41:15.565" endtime="20220704 21:41:15.565"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 21:41:15.565" endtime="20220704 21:41:15.565"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 21:41:15.566" level="INFO">${url} = cards/62c35e7b9ac09c44d04b161d</msg>
<status status="PASS" starttime="20220704 21:41:15.565" endtime="20220704 21:41:15.566"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 21:41:15.772" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:41:15.566" endtime="20220704 21:41:15.772"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:41:15.772" endtime="20220704 21:41:15.772"/>
</return>
<msg timestamp="20220704 21:41:15.772" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:41:15.564" endtime="20220704 21:41:15.772"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:41:15.772" endtime="20220704 21:41:15.772"/>
</return>
<msg timestamp="20220704 21:41:15.772" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:41:15.564" endtime="20220704 21:41:15.772"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>card</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220704 21:41:15.773" endtime="20220704 21:41:15.779"/>
</kw>
<status status="PASS" starttime="20220704 21:41:15.773" endtime="20220704 21:41:15.779"/>
</kw>
<kw name="Get A Card" library="Card">
<var>${response}</var>
<arg>${CARD_ID}</arg>
<doc>Gets the card with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 21:41:15.780" level="INFO">${url} = cards/62c35e7b9ac09c44d04b161d</msg>
<status status="PASS" starttime="20220704 21:41:15.780" endtime="20220704 21:41:15.780"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 21:41:15.864" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:41:15.780" endtime="20220704 21:41:15.864"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:41:15.865" endtime="20220704 21:41:15.865"/>
</return>
<msg timestamp="20220704 21:41:15.865" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:41:15.779" endtime="20220704 21:41:15.865"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:41:15.865" endtime="20220704 21:41:15.865"/>
</return>
<msg timestamp="20220704 21:41:15.865" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:41:15.779" endtime="20220704 21:41:15.865"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_NAME}</var>
<arg>${response}</arg>
<arg>name</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 21:41:15.866" endtime="20220704 21:41:15.866"/>
</return>
<msg timestamp="20220704 21:41:15.867" level="INFO">${CARD_NAME} = RFCard5</msg>
<status status="PASS" starttime="20220704 21:41:15.865" endtime="20220704 21:41:15.867"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_DESC}</var>
<arg>${response}</arg>
<arg>desc</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 21:41:15.867" endtime="20220704 21:41:15.867"/>
</return>
<msg timestamp="20220704 21:41:15.868" level="INFO">${CARD_DESC} = Description</msg>
<status status="PASS" starttime="20220704 21:41:15.867" endtime="20220704 21:41:15.868"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${CARD_NAME}</arg>
<arg>RFCard5</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220704 21:41:15.868" endtime="20220704 21:41:15.868"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${CARD_DESC}</arg>
<arg>Description</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220704 21:41:15.868" endtime="20220704 21:41:15.869"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Card</arg>
<arg>${CARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Card" library="Card">
<arg>${CARD_ID}</arg>
<doc>Deletes the card with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 21:41:15.870" level="INFO">${url} = cards/62c35e7b9ac09c44d04b161d</msg>
<status status="PASS" starttime="20220704 21:41:15.870" endtime="20220704 21:41:15.870"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 21:41:16.066" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:41:15.871" endtime="20220704 21:41:16.066"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:41:16.066" endtime="20220704 21:41:16.066"/>
</return>
<msg timestamp="20220704 21:41:16.067" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:41:15.869" endtime="20220704 21:41:16.067"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:41:16.067" endtime="20220704 21:41:16.067"/>
</return>
<status status="PASS" starttime="20220704 21:41:15.869" endtime="20220704 21:41:16.067"/>
</kw>
<status status="PASS" starttime="20220704 21:41:15.869" endtime="20220704 21:41:16.067"/>
</kw>
<doc>Verify that a card's name and Description can be updated through API</doc>
<tag>api</tag>
<tag>card.update</tag>
<tag>regression</tag>
<status status="PASS" starttime="20220704 21:41:15.382" endtime="20220704 21:41:16.067"/>
</test>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Teardown Board</arg>
<arg>Delete All Sessions</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Teardown Board">
<doc>Delete the board created for this suite</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 21:41:16.071" level="INFO">${url} = boards/62c35e79b179e15cdbdf25a2</msg>
<status status="PASS" starttime="20220704 21:41:16.070" endtime="20220704 21:41:16.071"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 21:41:16.406" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:41:16.071" endtime="20220704 21:41:16.406"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:41:16.406" endtime="20220704 21:41:16.406"/>
</return>
<msg timestamp="20220704 21:41:16.406" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:41:16.070" endtime="20220704 21:41:16.406"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:41:16.406" endtime="20220704 21:41:16.406"/>
</return>
<status status="PASS" starttime="20220704 21:41:16.069" endtime="20220704 21:41:16.406"/>
</kw>
<status status="PASS" starttime="20220704 21:41:16.069" endtime="20220704 21:41:16.406"/>
</kw>
<status status="PASS" starttime="20220704 21:41:16.069" endtime="20220704 21:41:16.406"/>
</kw>
<kw name="Delete All Sessions" library="request_own_library">
<status status="PASS" starttime="20220704 21:41:16.407" endtime="20220704 21:41:16.408"/>
</kw>
<status status="PASS" starttime="20220704 21:41:16.069" endtime="20220704 21:41:16.408"/>
</kw>
<doc>Example Test with Trello API Cards</doc>
<status status="PASS" starttime="20220704 21:41:13.420" endtime="20220704 21:41:16.408"/>
</suite>
<suite id="s1-s1-s3" name="Trello Api Checklists Tests" source="/trello/api/trello_api_checklists_tests.robot">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Create Trello Session</arg>
<arg>Setup Board, List And Card</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Create Trello Session" library="TrelloAPI">
<doc>Creates a Trello Session</doc>
<kw name="Create Session" library="request_own_library">
<arg>${API_BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<status status="PASS" starttime="20220704 21:41:16.419" endtime="20220704 21:41:16.419"/>
</kw>
<status status="PASS" starttime="20220704 21:41:16.418" endtime="20220704 21:41:16.419"/>
</kw>
<kw name="Setup Board, List And Card">
<doc>Create a board and save its ID and its first list's ID</doc>
<kw name="Create A Board" library="Board">
<var>${BOARD}</var>
<arg>TestBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 21:41:16.420" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 21:41:16.420" endtime="20220704 21:41:16.420"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 21:41:16.421" endtime="20220704 21:41:16.421"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 21:41:16.421" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220704 21:41:16.421" endtime="20220704 21:41:16.421"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 21:41:16.740" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:41:16.422" endtime="20220704 21:41:16.740"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:41:16.740" endtime="20220704 21:41:16.740"/>
</return>
<msg timestamp="20220704 21:41:16.740" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:41:16.420" endtime="20220704 21:41:16.740"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:41:16.741" endtime="20220704 21:41:16.741"/>
</return>
<msg timestamp="20220704 21:41:16.741" level="INFO">${BOARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:41:16.420" endtime="20220704 21:41:16.741"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_BOARD_ID}</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220704 21:41:16.742" level="INFO">${TEST_SUITE_BOARD_ID} = 62c35e7cce3d29567e981110</msg>
<status status="PASS" starttime="20220704 21:41:16.741" endtime="20220704 21:41:16.742"/>
</kw>
<kw name="Get Lists On A Board" library="Board">
<var>${LISTS}</var>
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Get all the lists in a board</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>lists_on_board</arg>
<arg>${id}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 21:41:16.743" level="INFO">${url} = boards/62c35e7cce3d29567e981110/lists/</msg>
<status status="PASS" starttime="20220704 21:41:16.743" endtime="20220704 21:41:16.743"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 21:41:16.827" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:41:16.743" endtime="20220704 21:41:16.827"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:41:16.827" endtime="20220704 21:41:16.827"/>
</return>
<msg timestamp="20220704 21:41:16.827" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:41:16.742" endtime="20220704 21:41:16.827"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:41:16.827" endtime="20220704 21:41:16.827"/>
</return>
<msg timestamp="20220704 21:41:16.827" level="INFO">${LISTS} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:41:16.742" endtime="20220704 21:41:16.827"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_LIST_ID}</arg>
<arg>${LISTS.json()}[0][id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220704 21:41:16.828" level="INFO">${TEST_SUITE_LIST_ID} = 62c35e7cce3d29567e981117</msg>
<status status="PASS" starttime="20220704 21:41:16.828" endtime="20220704 21:41:16.828"/>
</kw>
<kw name="Create A Card" library="Card">
<var>${CARD}</var>
<arg>name</arg>
<arg>TestCard</arg>
<doc>Creates a new card in the given list.
required_args: listId
optional_args: name, desc, pos, idCardSource, idLabels, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>@{optional_args}</arg>
<arg>idList</arg>
<arg>${idList}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 21:41:16.830" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 21:41:16.830" endtime="20220704 21:41:16.830"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 21:41:16.830" endtime="20220704 21:41:16.831"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 21:41:16.831" level="INFO">${url} = cards/</msg>
<status status="PASS" starttime="20220704 21:41:16.831" endtime="20220704 21:41:16.831"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 21:41:17.024" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:41:16.832" endtime="20220704 21:41:17.024"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:41:17.024" endtime="20220704 21:41:17.025"/>
</return>
<msg timestamp="20220704 21:41:17.025" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:41:16.829" endtime="20220704 21:41:17.025"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:41:17.025" endtime="20220704 21:41:17.025"/>
</return>
<msg timestamp="20220704 21:41:17.025" level="INFO">${CARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:41:16.829" endtime="20220704 21:41:17.025"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_CARD_ID}</arg>
<arg>${CARD.json()}[id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220704 21:41:17.026" level="INFO">${TEST_SUITE_CARD_ID} = 62c35e7c4af7fa5790ab5012</msg>
<status status="PASS" starttime="20220704 21:41:17.025" endtime="20220704 21:41:17.026"/>
</kw>
<status status="PASS" starttime="20220704 21:41:16.419" endtime="20220704 21:41:17.026"/>
</kw>
<status status="PASS" starttime="20220704 21:41:16.418" endtime="20220704 21:41:17.026"/>
</kw>
<test id="s1-s1-s3-t1" name="Verify A Checklist Can Be Created" line="14">
<kw name="Create A Checklist" library="Checklist">
<var>${response}</var>
<arg>name</arg>
<arg>TestChecklist</arg>
<arg>idCard=${TEST_SUITE_CARD_ID}</arg>
<doc>Creates a new checklist in the given card.
required_args: idCard
optional_args: name, pos, idChecklistSource
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>@{optional_args}</arg>
<arg>idCard</arg>
<arg>${idCard}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 21:41:17.029" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 21:41:17.028" endtime="20220704 21:41:17.029"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 21:41:17.029" endtime="20220704 21:41:17.029"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 21:41:17.030" level="INFO">${url} = checklists/</msg>
<status status="PASS" starttime="20220704 21:41:17.029" endtime="20220704 21:41:17.030"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 21:41:17.173" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:41:17.030" endtime="20220704 21:41:17.173"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:41:17.173" endtime="20220704 21:41:17.173"/>
</return>
<msg timestamp="20220704 21:41:17.173" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:41:17.028" endtime="20220704 21:41:17.173"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:41:17.173" endtime="20220704 21:41:17.173"/>
</return>
<msg timestamp="20220704 21:41:17.173" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:41:17.027" endtime="20220704 21:41:17.173"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${checklist_id}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 21:41:17.174" endtime="20220704 21:41:17.174"/>
</return>
<msg timestamp="20220704 21:41:17.175" level="INFO">${checklist_id} = 62c35e7dce85b3585f3a226c</msg>
<status status="PASS" starttime="20220704 21:41:17.173" endtime="20220704 21:41:17.175"/>
</kw>
<kw name="Get A Checklist" library="Checklist">
<var>${response}</var>
<arg>${checklist_id}</arg>
<doc>Gets the checklist with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 21:41:17.176" level="INFO">${url} = checklists/62c35e7dce85b3585f3a226c</msg>
<status status="PASS" starttime="20220704 21:41:17.176" endtime="20220704 21:41:17.176"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 21:41:17.263" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:41:17.176" endtime="20220704 21:41:17.263"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:41:17.263" endtime="20220704 21:41:17.263"/>
</return>
<msg timestamp="20220704 21:41:17.264" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:41:17.175" endtime="20220704 21:41:17.264"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:41:17.264" endtime="20220704 21:41:17.264"/>
</return>
<msg timestamp="20220704 21:41:17.264" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:41:17.175" endtime="20220704 21:41:17.264"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${checklist_name}</var>
<arg>${response}</arg>
<arg>name</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 21:41:17.264" endtime="20220704 21:41:17.264"/>
</return>
<msg timestamp="20220704 21:41:17.265" level="INFO">${checklist_name} = TestChecklist</msg>
<status status="PASS" starttime="20220704 21:41:17.264" endtime="20220704 21:41:17.265"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${checklist_name}</arg>
<arg>TestChecklist</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220704 21:41:17.265" endtime="20220704 21:41:17.266"/>
</kw>
<kw name="Delete A Checklist" library="Checklist" type="TEARDOWN">
<arg>${checklist_id}</arg>
<doc>Deletes the checklist with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 21:41:17.267" level="INFO">${url} = checklists/62c35e7dce85b3585f3a226c</msg>
<status status="PASS" starttime="20220704 21:41:17.267" endtime="20220704 21:41:17.267"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 21:41:17.404" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:41:17.267" endtime="20220704 21:41:17.404"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:41:17.404" endtime="20220704 21:41:17.404"/>
</return>
<msg timestamp="20220704 21:41:17.405" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:41:17.266" endtime="20220704 21:41:17.405"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:41:17.405" endtime="20220704 21:41:17.405"/>
</return>
<status status="PASS" starttime="20220704 21:41:17.266" endtime="20220704 21:41:17.405"/>
</kw>
<doc>Verify that a checklist can be created through API</doc>
<tag>api</tag>
<tag>checklist.create</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220704 21:41:17.027" endtime="20220704 21:41:17.405"/>
</test>
<test id="s1-s1-s3-t2" name="Verify A Checklist Can Be Deleted" line="24">
<kw name="Create A Checklist" library="Checklist">
<var>${response}</var>
<arg>name</arg>
<arg>TestChecklist</arg>
<arg>idCard=${TEST_SUITE_CARD_ID}</arg>
<doc>Creates a new checklist in the given card.
required_args: idCard
optional_args: name, pos, idChecklistSource
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>@{optional_args}</arg>
<arg>idCard</arg>
<arg>${idCard}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 21:41:17.408" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 21:41:17.408" endtime="20220704 21:41:17.408"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 21:41:17.408" endtime="20220704 21:41:17.408"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 21:41:17.409" level="INFO">${url} = checklists/</msg>
<status status="PASS" starttime="20220704 21:41:17.408" endtime="20220704 21:41:17.409"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 21:41:17.554" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:41:17.409" endtime="20220704 21:41:17.554"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:41:17.554" endtime="20220704 21:41:17.554"/>
</return>
<msg timestamp="20220704 21:41:17.554" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:41:17.407" endtime="20220704 21:41:17.554"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:41:17.554" endtime="20220704 21:41:17.554"/>
</return>
<msg timestamp="20220704 21:41:17.555" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:41:17.406" endtime="20220704 21:41:17.555"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${checklist_id}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 21:41:17.555" endtime="20220704 21:41:17.555"/>
</return>
<msg timestamp="20220704 21:41:17.556" level="INFO">${checklist_id} = 62c35e7d13c783328aa47b06</msg>
<status status="PASS" starttime="20220704 21:41:17.555" endtime="20220704 21:41:17.556"/>
</kw>
<kw name="Delete A Checklist" library="Checklist">
<var>${response}</var>
<arg>${checklist_id}</arg>
<doc>Deletes the checklist with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 21:41:17.558" level="INFO">${url} = checklists/62c35e7d13c783328aa47b06</msg>
<status status="PASS" starttime="20220704 21:41:17.557" endtime="20220704 21:41:17.558"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 21:41:17.693" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:41:17.558" endtime="20220704 21:41:17.693"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:41:17.693" endtime="20220704 21:41:17.693"/>
</return>
<msg timestamp="20220704 21:41:17.693" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:41:17.557" endtime="20220704 21:41:17.693"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:41:17.693" endtime="20220704 21:41:17.693"/>
</return>
<msg timestamp="20220704 21:41:17.694" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:41:17.556" endtime="20220704 21:41:17.694"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>delete</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220704 21:41:17.694" endtime="20220704 21:41:17.696"/>
</kw>
<status status="PASS" starttime="20220704 21:41:17.694" endtime="20220704 21:41:17.696"/>
</kw>
<kw name="Get A Checklist" library="Checklist">
<arg>${checklist_id}</arg>
<arg>status_code=404</arg>
<doc>Gets the checklist with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 21:41:17.698" level="INFO">${url} = checklists/62c35e7d13c783328aa47b06</msg>
<status status="PASS" starttime="20220704 21:41:17.697" endtime="20220704 21:41:17.698"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 21:41:17.778" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220704 21:41:17.698" endtime="20220704 21:41:17.778"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:41:17.778" endtime="20220704 21:41:17.778"/>
</return>
<msg timestamp="20220704 21:41:17.778" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220704 21:41:17.697" endtime="20220704 21:41:17.778"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:41:17.778" endtime="20220704 21:41:17.778"/>
</return>
<status status="PASS" starttime="20220704 21:41:17.696" endtime="20220704 21:41:17.778"/>
</kw>
<doc>Verify that a checklist can be deleted through API</doc>
<tag>api</tag>
<tag>checklist.delete</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220704 21:41:17.405" endtime="20220704 21:41:17.778"/>
</test>
<test id="s1-s1-s3-t3" name="Verify A Checklist Can Be Updated" line="33">
<kw name="Create A Checklist" library="Checklist">
<var>${response}</var>
<arg>name</arg>
<arg>TestChecklist</arg>
<arg>idCard=${TEST_SUITE_CARD_ID}</arg>
<doc>Creates a new checklist in the given card.
required_args: idCard
optional_args: name, pos, idChecklistSource
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>@{optional_args}</arg>
<arg>idCard</arg>
<arg>${idCard}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 21:41:17.782" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 21:41:17.781" endtime="20220704 21:41:17.782"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 21:41:17.782" endtime="20220704 21:41:17.783"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 21:41:17.783" level="INFO">${url} = checklists/</msg>
<status status="PASS" starttime="20220704 21:41:17.783" endtime="20220704 21:41:17.783"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 21:41:17.921" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:41:17.783" endtime="20220704 21:41:17.921"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:41:17.921" endtime="20220704 21:41:17.921"/>
</return>
<msg timestamp="20220704 21:41:17.922" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:41:17.780" endtime="20220704 21:41:17.922"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:41:17.922" endtime="20220704 21:41:17.922"/>
</return>
<msg timestamp="20220704 21:41:17.922" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:41:17.779" endtime="20220704 21:41:17.922"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${checklist_id}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 21:41:17.923" endtime="20220704 21:41:17.923"/>
</return>
<msg timestamp="20220704 21:41:17.923" level="INFO">${checklist_id} = 62c35e7d4253f28cad12acd2</msg>
<status status="PASS" starttime="20220704 21:41:17.922" endtime="20220704 21:41:17.923"/>
</kw>
<kw name="Update A Checklist" library="Checklist">
<var>${response}</var>
<arg>${checklist_id}</arg>
<arg>name</arg>
<arg>TestChecklist2</arg>
<doc>Updates the checklist with the given ID
optional_args: name, pos
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<arg>status_code=${status_code}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 21:41:17.925" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 21:41:17.924" endtime="20220704 21:41:17.925"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 21:41:17.925" endtime="20220704 21:41:17.925"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 21:41:17.925" level="INFO">${url} = checklists/62c35e7d4253f28cad12acd2</msg>
<status status="PASS" starttime="20220704 21:41:17.925" endtime="20220704 21:41:17.925"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 21:41:18.043" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:41:17.926" endtime="20220704 21:41:18.043"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:41:18.043" endtime="20220704 21:41:18.043"/>
</return>
<msg timestamp="20220704 21:41:18.043" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:41:17.924" endtime="20220704 21:41:18.043"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:41:18.043" endtime="20220704 21:41:18.043"/>
</return>
<msg timestamp="20220704 21:41:18.043" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:41:17.923" endtime="20220704 21:41:18.043"/>
</kw>
<kw name="Get A Checklist" library="Checklist">
<var>${response}</var>
<arg>${checklist_id}</arg>
<doc>Gets the checklist with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 21:41:18.045" level="INFO">${url} = checklists/62c35e7d4253f28cad12acd2</msg>
<status status="PASS" starttime="20220704 21:41:18.044" endtime="20220704 21:41:18.045"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 21:41:18.132" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:41:18.045" endtime="20220704 21:41:18.132"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:41:18.132" endtime="20220704 21:41:18.132"/>
</return>
<msg timestamp="20220704 21:41:18.132" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:41:18.044" endtime="20220704 21:41:18.132"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:41:18.132" endtime="20220704 21:41:18.132"/>
</return>
<msg timestamp="20220704 21:41:18.133" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:41:18.043" endtime="20220704 21:41:18.133"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${checklist_name}</var>
<arg>${response}</arg>
<arg>name</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 21:41:18.133" endtime="20220704 21:41:18.133"/>
</return>
<msg timestamp="20220704 21:41:18.134" level="INFO">${checklist_name} = TestChecklist2</msg>
<status status="PASS" starttime="20220704 21:41:18.133" endtime="20220704 21:41:18.134"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${checklist_name}</arg>
<arg>TestChecklist2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220704 21:41:18.134" endtime="20220704 21:41:18.134"/>
</kw>
<kw name="Delete A Checklist" library="Checklist" type="TEARDOWN">
<arg>${checklist_id}</arg>
<doc>Deletes the checklist with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 21:41:18.147" level="INFO">${url} = checklists/62c35e7d4253f28cad12acd2</msg>
<status status="PASS" starttime="20220704 21:41:18.147" endtime="20220704 21:41:18.147"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 21:41:18.285" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:41:18.147" endtime="20220704 21:41:18.285"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:41:18.285" endtime="20220704 21:41:18.285"/>
</return>
<msg timestamp="20220704 21:41:18.286" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:41:18.146" endtime="20220704 21:41:18.286"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:41:18.286" endtime="20220704 21:41:18.286"/>
</return>
<status status="PASS" starttime="20220704 21:41:18.135" endtime="20220704 21:41:18.286"/>
</kw>
<doc>Verify that a checklist's name can be updated through API</doc>
<tag>api</tag>
<tag>checklist.update</tag>
<tag>regression</tag>
<status status="PASS" starttime="20220704 21:41:17.779" endtime="20220704 21:41:18.286"/>
</test>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Teardown Board</arg>
<arg>Delete All Sessions</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Teardown Board">
<doc>Delete the board created for this suite</doc>
<kw name="Delete A Board" library="Board">
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 21:41:18.289" level="INFO">${url} = boards/62c35e7cce3d29567e981110</msg>
<status status="PASS" starttime="20220704 21:41:18.288" endtime="20220704 21:41:18.289"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 21:41:18.645" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:41:18.289" endtime="20220704 21:41:18.645"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:41:18.646" endtime="20220704 21:41:18.646"/>
</return>
<msg timestamp="20220704 21:41:18.646" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:41:18.288" endtime="20220704 21:41:18.646"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:41:18.646" endtime="20220704 21:41:18.646"/>
</return>
<status status="PASS" starttime="20220704 21:41:18.287" endtime="20220704 21:41:18.646"/>
</kw>
<status status="PASS" starttime="20220704 21:41:18.287" endtime="20220704 21:41:18.646"/>
</kw>
<kw name="Delete All Sessions" library="request_own_library">
<status status="PASS" starttime="20220704 21:41:18.646" endtime="20220704 21:41:18.648"/>
</kw>
<status status="PASS" starttime="20220704 21:41:18.287" endtime="20220704 21:41:18.648"/>
</kw>
<doc>Example Test with Trello API Checklists</doc>
<status status="PASS" starttime="20220704 21:41:16.409" endtime="20220704 21:41:18.648"/>
</suite>
<suite id="s1-s1-s4" name="Trello Api Labels Tests" source="/trello/api/trello_api_labels_tests.robot">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Create Trello Session</arg>
<arg>Setup Board And List</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Create Trello Session" library="TrelloAPI">
<doc>Creates a Trello Session</doc>
<kw name="Create Session" library="request_own_library">
<arg>${API_BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<status status="PASS" starttime="20220704 21:41:18.659" endtime="20220704 21:41:18.659"/>
</kw>
<status status="PASS" starttime="20220704 21:41:18.658" endtime="20220704 21:41:18.659"/>
</kw>
<kw name="Setup Board And List">
<doc>Create a board and save its ID and its first list's ID</doc>
<kw name="Create A Board" library="Board">
<var>${BOARD}</var>
<arg>TestBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 21:41:18.660" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 21:41:18.660" endtime="20220704 21:41:18.660"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 21:41:18.660" endtime="20220704 21:41:18.661"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 21:41:18.661" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220704 21:41:18.661" endtime="20220704 21:41:18.661"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 21:41:18.954" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:41:18.661" endtime="20220704 21:41:18.954"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:41:18.954" endtime="20220704 21:41:18.955"/>
</return>
<msg timestamp="20220704 21:41:18.955" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:41:18.660" endtime="20220704 21:41:18.955"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:41:18.955" endtime="20220704 21:41:18.955"/>
</return>
<msg timestamp="20220704 21:41:18.955" level="INFO">${BOARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:41:18.660" endtime="20220704 21:41:18.955"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_BOARD_ID}</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220704 21:41:18.956" level="INFO">${TEST_SUITE_BOARD_ID} = 62c35e7e20f64387c1f1fb86</msg>
<status status="PASS" starttime="20220704 21:41:18.955" endtime="20220704 21:41:18.956"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${LISTS}</var>
<arg>boards/${TEST_SUITE_BOARD_ID}/lists</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 21:41:19.035" level="INFO">${LISTS} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:41:18.956" endtime="20220704 21:41:19.035"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_LIST_ID}</arg>
<arg>${LISTS.json()}[0][id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220704 21:41:19.036" level="INFO">${TEST_SUITE_LIST_ID} = 62c35e7e20f64387c1f1fb8d</msg>
<status status="PASS" starttime="20220704 21:41:19.035" endtime="20220704 21:41:19.036"/>
</kw>
<status status="PASS" starttime="20220704 21:41:18.659" endtime="20220704 21:41:19.036"/>
</kw>
<status status="PASS" starttime="20220704 21:41:18.658" endtime="20220704 21:41:19.036"/>
</kw>
<test id="s1-s1-s4-t1" name="Create and get label on board" line="14">
<kw name="Create A Label" library="Label">
<var>${response}</var>
<arg>name</arg>
<arg>label2</arg>
<arg>color</arg>
<arg>yellow</arg>
<doc>Creates a new label in the given board.
required_args: idBoard
optional_args: name, color
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>idBoard</arg>
<arg>${idBoard}</arg>
<arg>@{optional_args}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 21:41:19.038" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 21:41:19.038" endtime="20220704 21:41:19.038"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 21:41:19.038" endtime="20220704 21:41:19.039"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 21:41:19.039" level="INFO">${url} = labels/</msg>
<status status="PASS" starttime="20220704 21:41:19.039" endtime="20220704 21:41:19.039"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 21:41:19.151" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:41:19.039" endtime="20220704 21:41:19.151"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:41:19.152" endtime="20220704 21:41:19.152"/>
</return>
<msg timestamp="20220704 21:41:19.152" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:41:19.037" endtime="20220704 21:41:19.152"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:41:19.152" endtime="20220704 21:41:19.152"/>
</return>
<msg timestamp="20220704 21:41:19.152" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:41:19.037" endtime="20220704 21:41:19.152"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>label</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220704 21:41:19.153" endtime="20220704 21:41:19.155"/>
</kw>
<status status="PASS" starttime="20220704 21:41:19.152" endtime="20220704 21:41:19.155"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${LABEL_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 21:41:19.155" endtime="20220704 21:41:19.155"/>
</return>
<msg timestamp="20220704 21:41:19.156" level="INFO">${LABEL_ID} = 62c35e7f8748d913e4469544</msg>
<status status="PASS" starttime="20220704 21:41:19.155" endtime="20220704 21:41:19.156"/>
</kw>
<kw name="Get A Label" library="Label">
<var>${response}</var>
<arg>${LABEL_ID}</arg>
<doc>Gets the label with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 21:41:19.157" level="INFO">${url} = labels/62c35e7f8748d913e4469544</msg>
<status status="PASS" starttime="20220704 21:41:19.157" endtime="20220704 21:41:19.157"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 21:41:19.237" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:41:19.157" endtime="20220704 21:41:19.237"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:41:19.237" endtime="20220704 21:41:19.237"/>
</return>
<msg timestamp="20220704 21:41:19.237" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:41:19.156" endtime="20220704 21:41:19.237"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:41:19.237" endtime="20220704 21:41:19.237"/>
</return>
<msg timestamp="20220704 21:41:19.237" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:41:19.156" endtime="20220704 21:41:19.237"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${LABEL_COLOR}</var>
<arg>${response}</arg>
<arg>color</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 21:41:19.238" endtime="20220704 21:41:19.238"/>
</return>
<msg timestamp="20220704 21:41:19.239" level="INFO">${LABEL_COLOR} = yellow</msg>
<status status="PASS" starttime="20220704 21:41:19.238" endtime="20220704 21:41:19.239"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${LABEL_NAME}</var>
<arg>${response}</arg>
<arg>name</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 21:41:19.239" endtime="20220704 21:41:19.239"/>
</return>
<msg timestamp="20220704 21:41:19.240" level="INFO">${LABEL_NAME} = label2</msg>
<status status="PASS" starttime="20220704 21:41:19.239" endtime="20220704 21:41:19.240"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${LABEL_COLOR}</arg>
<arg>yellow</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220704 21:41:19.240" endtime="20220704 21:41:19.240"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${LABEL_NAME}</arg>
<arg>label2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220704 21:41:19.240" endtime="20220704 21:41:19.240"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Label</arg>
<arg>${LABEL_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Label" library="Label">
<arg>${LABEL_ID}</arg>
<doc>Deletes the label with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 21:41:19.242" level="INFO">${url} = labels/62c35e7f8748d913e4469544</msg>
<status status="PASS" starttime="20220704 21:41:19.242" endtime="20220704 21:41:19.242"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 21:41:19.369" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:41:19.242" endtime="20220704 21:41:19.369"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:41:19.370" endtime="20220704 21:41:19.370"/>
</return>
<msg timestamp="20220704 21:41:19.370" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:41:19.241" endtime="20220704 21:41:19.370"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:41:19.370" endtime="20220704 21:41:19.370"/>
</return>
<status status="PASS" starttime="20220704 21:41:19.241" endtime="20220704 21:41:19.370"/>
</kw>
<status status="PASS" starttime="20220704 21:41:19.241" endtime="20220704 21:41:19.370"/>
</kw>
<doc>Verify that a label can be created through API</doc>
<tag>api</tag>
<tag>label.create</tag>
<tag>label.get</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220704 21:41:19.036" endtime="20220704 21:41:19.370"/>
</test>
<test id="s1-s1-s4-t2" name="Update label on board" line="28">
<kw name="Create A Label" library="Label">
<var>${response}</var>
<arg>name</arg>
<arg>label2</arg>
<arg>color</arg>
<arg>yellow</arg>
<doc>Creates a new label in the given board.
required_args: idBoard
optional_args: name, color
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>idBoard</arg>
<arg>${idBoard}</arg>
<arg>@{optional_args}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 21:41:19.372" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 21:41:19.372" endtime="20220704 21:41:19.373"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 21:41:19.373" endtime="20220704 21:41:19.373"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 21:41:19.374" level="INFO">${url} = labels/</msg>
<status status="PASS" starttime="20220704 21:41:19.373" endtime="20220704 21:41:19.374"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 21:41:19.491" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:41:19.374" endtime="20220704 21:41:19.491"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:41:19.491" endtime="20220704 21:41:19.491"/>
</return>
<msg timestamp="20220704 21:41:19.492" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:41:19.372" endtime="20220704 21:41:19.492"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:41:19.492" endtime="20220704 21:41:19.492"/>
</return>
<msg timestamp="20220704 21:41:19.492" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:41:19.371" endtime="20220704 21:41:19.492"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>label</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220704 21:41:19.492" endtime="20220704 21:41:19.494"/>
</kw>
<status status="PASS" starttime="20220704 21:41:19.492" endtime="20220704 21:41:19.494"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${LABEL_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 21:41:19.495" endtime="20220704 21:41:19.495"/>
</return>
<msg timestamp="20220704 21:41:19.496" level="INFO">${LABEL_ID} = 62c35e7f5cecfe31747b9cb7</msg>
<status status="PASS" starttime="20220704 21:41:19.495" endtime="20220704 21:41:19.496"/>
</kw>
<kw name="Update A Label" library="Label">
<var>${new_response}</var>
<arg>${LABEL_ID}</arg>
<arg>name</arg>
<arg>label3</arg>
<arg>color</arg>
<arg>orange</arg>
<doc>Updates the label with the given ID
optional_args: name, color
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 21:41:19.497" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 21:41:19.497" endtime="20220704 21:41:19.497"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 21:41:19.497" endtime="20220704 21:41:19.497"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 21:41:19.498" level="INFO">${url} = labels/62c35e7f5cecfe31747b9cb7</msg>
<status status="PASS" starttime="20220704 21:41:19.497" endtime="20220704 21:41:19.498"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 21:41:19.634" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:41:19.498" endtime="20220704 21:41:19.634"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:41:19.634" endtime="20220704 21:41:19.634"/>
</return>
<msg timestamp="20220704 21:41:19.634" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:41:19.496" endtime="20220704 21:41:19.634"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:41:19.635" endtime="20220704 21:41:19.635"/>
</return>
<msg timestamp="20220704 21:41:19.635" level="INFO">${new_response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:41:19.496" endtime="20220704 21:41:19.635"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${NEW_LABEL_COLOR}</var>
<arg>${new_response}</arg>
<arg>color</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 21:41:19.635" endtime="20220704 21:41:19.635"/>
</return>
<msg timestamp="20220704 21:41:19.636" level="INFO">${NEW_LABEL_COLOR} = orange</msg>
<status status="PASS" starttime="20220704 21:41:19.635" endtime="20220704 21:41:19.636"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${NEW_LABEL_NAME}</var>
<arg>${new_response}</arg>
<arg>name</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 21:41:19.636" endtime="20220704 21:41:19.637"/>
</return>
<msg timestamp="20220704 21:41:19.637" level="INFO">${NEW_LABEL_NAME} = label3</msg>
<status status="PASS" starttime="20220704 21:41:19.636" endtime="20220704 21:41:19.637"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${NEW_LABEL_COLOR}</arg>
<arg>orange</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220704 21:41:19.637" endtime="20220704 21:41:19.638"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${NEW_LABEL_NAME}</arg>
<arg>label3</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220704 21:41:19.638" endtime="20220704 21:41:19.638"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Label</arg>
<arg>${LABEL_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Label" library="Label">
<arg>${LABEL_ID}</arg>
<doc>Deletes the label with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 21:41:19.640" level="INFO">${url} = labels/62c35e7f5cecfe31747b9cb7</msg>
<status status="PASS" starttime="20220704 21:41:19.640" endtime="20220704 21:41:19.640"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 21:41:19.772" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:41:19.640" endtime="20220704 21:41:19.772"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:41:19.772" endtime="20220704 21:41:19.772"/>
</return>
<msg timestamp="20220704 21:41:19.772" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:41:19.639" endtime="20220704 21:41:19.772"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:41:19.772" endtime="20220704 21:41:19.772"/>
</return>
<status status="PASS" starttime="20220704 21:41:19.638" endtime="20220704 21:41:19.772"/>
</kw>
<status status="PASS" starttime="20220704 21:41:19.638" endtime="20220704 21:41:19.772"/>
</kw>
<doc>Verify that a label's name and color can be updated through API</doc>
<tag>api</tag>
<tag>label.update</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220704 21:41:19.371" endtime="20220704 21:41:19.772"/>
</test>
<test id="s1-s1-s4-t3" name="Delete label on board" line="41">
<kw name="Create A Label" library="Label">
<var>${response}</var>
<arg>name</arg>
<arg>label2</arg>
<arg>color</arg>
<arg>yellow</arg>
<doc>Creates a new label in the given board.
required_args: idBoard
optional_args: name, color
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>idBoard</arg>
<arg>${idBoard}</arg>
<arg>@{optional_args}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 21:41:19.775" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 21:41:19.775" endtime="20220704 21:41:19.775"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 21:41:19.775" endtime="20220704 21:41:19.776"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 21:41:19.776" level="INFO">${url} = labels/</msg>
<status status="PASS" starttime="20220704 21:41:19.776" endtime="20220704 21:41:19.776"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 21:41:19.892" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:41:19.776" endtime="20220704 21:41:19.892"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:41:19.892" endtime="20220704 21:41:19.892"/>
</return>
<msg timestamp="20220704 21:41:19.892" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:41:19.774" endtime="20220704 21:41:19.893"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:41:19.893" endtime="20220704 21:41:19.893"/>
</return>
<msg timestamp="20220704 21:41:19.893" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:41:19.774" endtime="20220704 21:41:19.893"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${LABEL_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 21:41:19.893" endtime="20220704 21:41:19.893"/>
</return>
<msg timestamp="20220704 21:41:19.894" level="INFO">${LABEL_ID} = 62c35e7fcd9af80e218e29a1</msg>
<status status="PASS" starttime="20220704 21:41:19.893" endtime="20220704 21:41:19.894"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Label</arg>
<arg>${LABEL_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Label" library="Label">
<arg>${LABEL_ID}</arg>
<doc>Deletes the label with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 21:41:19.896" level="INFO">${url} = labels/62c35e7fcd9af80e218e29a1</msg>
<status status="PASS" starttime="20220704 21:41:19.896" endtime="20220704 21:41:19.896"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 21:41:20.034" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:41:19.896" endtime="20220704 21:41:20.035"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:41:20.035" endtime="20220704 21:41:20.035"/>
</return>
<msg timestamp="20220704 21:41:20.035" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:41:19.895" endtime="20220704 21:41:20.035"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:41:20.035" endtime="20220704 21:41:20.035"/>
</return>
<status status="PASS" starttime="20220704 21:41:19.895" endtime="20220704 21:41:20.035"/>
</kw>
<status status="PASS" starttime="20220704 21:41:19.894" endtime="20220704 21:41:20.035"/>
</kw>
<kw name="Get A Label" library="Label">
<arg>${LABEL_ID}</arg>
<arg>status_code=404</arg>
<doc>Gets the label with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 21:41:20.037" level="INFO">${url} = labels/62c35e7fcd9af80e218e29a1</msg>
<status status="PASS" starttime="20220704 21:41:20.036" endtime="20220704 21:41:20.037"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 21:41:20.107" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220704 21:41:20.037" endtime="20220704 21:41:20.107"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:41:20.107" endtime="20220704 21:41:20.107"/>
</return>
<msg timestamp="20220704 21:41:20.107" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220704 21:41:20.036" endtime="20220704 21:41:20.107"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:41:20.108" endtime="20220704 21:41:20.108"/>
</return>
<status status="PASS" starttime="20220704 21:41:20.035" endtime="20220704 21:41:20.108"/>
</kw>
<doc>Verify that a label can be deleted through API</doc>
<tag>api</tag>
<tag>label.delete</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220704 21:41:19.773" endtime="20220704 21:41:20.108"/>
</test>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Teardown Board</arg>
<arg>Delete All Sessions</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Teardown Board">
<doc>Delete the board created for this session.</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 21:41:20.110" level="INFO">${url} = boards/62c35e7e20f64387c1f1fb86</msg>
<status status="PASS" starttime="20220704 21:41:20.110" endtime="20220704 21:41:20.111"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 21:41:20.431" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:41:20.111" endtime="20220704 21:41:20.431"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:41:20.431" endtime="20220704 21:41:20.432"/>
</return>
<msg timestamp="20220704 21:41:20.432" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:41:20.109" endtime="20220704 21:41:20.432"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:41:20.432" endtime="20220704 21:41:20.432"/>
</return>
<status status="PASS" starttime="20220704 21:41:20.109" endtime="20220704 21:41:20.432"/>
</kw>
<status status="PASS" starttime="20220704 21:41:20.109" endtime="20220704 21:41:20.432"/>
</kw>
<status status="PASS" starttime="20220704 21:41:20.109" endtime="20220704 21:41:20.432"/>
</kw>
<kw name="Delete All Sessions" library="request_own_library">
<status status="PASS" starttime="20220704 21:41:20.432" endtime="20220704 21:41:20.433"/>
</kw>
<status status="PASS" starttime="20220704 21:41:20.108" endtime="20220704 21:41:20.434"/>
</kw>
<doc>Example Test with Trello API Cards</doc>
<status status="PASS" starttime="20220704 21:41:18.649" endtime="20220704 21:41:20.434"/>
</suite>
<suite id="s1-s1-s5" name="Trello Api Lists Tests" source="/trello/api/trello_api_lists_tests.robot">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Create Trello Session</arg>
<arg>Setup Board</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Create Trello Session" library="TrelloAPI">
<doc>Creates a Trello Session</doc>
<kw name="Create Session" library="request_own_library">
<arg>${API_BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<status status="PASS" starttime="20220704 21:41:20.444" endtime="20220704 21:41:20.445"/>
</kw>
<status status="PASS" starttime="20220704 21:41:20.444" endtime="20220704 21:41:20.445"/>
</kw>
<kw name="Setup Board">
<doc>Create a board and save it's id for the suite</doc>
<kw name="Create A Board" library="Board">
<var>${BOARD}</var>
<arg>TestBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 21:41:20.446" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 21:41:20.446" endtime="20220704 21:41:20.446"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 21:41:20.446" endtime="20220704 21:41:20.446"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 21:41:20.447" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220704 21:41:20.446" endtime="20220704 21:41:20.447"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 21:41:20.737" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:41:20.447" endtime="20220704 21:41:20.737"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:41:20.737" endtime="20220704 21:41:20.737"/>
</return>
<msg timestamp="20220704 21:41:20.738" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:41:20.445" endtime="20220704 21:41:20.738"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:41:20.738" endtime="20220704 21:41:20.738"/>
</return>
<msg timestamp="20220704 21:41:20.738" level="INFO">${BOARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:41:20.445" endtime="20220704 21:41:20.738"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Set Suite Variable</arg>
<arg>\${TEST_SUITE_BOARD_ID}</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_BOARD_ID}</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220704 21:41:20.739" level="INFO">${TEST_SUITE_BOARD_ID} = 62c35e80cf22864623d68e1d</msg>
<status status="PASS" starttime="20220704 21:41:20.738" endtime="20220704 21:41:20.739"/>
</kw>
<status status="PASS" starttime="20220704 21:41:20.738" endtime="20220704 21:41:20.739"/>
</kw>
<status status="PASS" starttime="20220704 21:41:20.445" endtime="20220704 21:41:20.740"/>
</kw>
<status status="PASS" starttime="20220704 21:41:20.444" endtime="20220704 21:41:20.740"/>
</kw>
<test id="s1-s1-s5-t1" name="CREATE a list" line="13">
<kw name="Create A List" library="List">
<var>${response}</var>
<arg>NewList</arg>
<doc>Creates a new List
board id
name the list will have
optional_args: idListSource, pos, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>list</arg>
<arg>name</arg>
<arg>${name}</arg>
<arg>idBoard</arg>
<arg>${idBoard}</arg>
<arg>@{optional_args}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 21:41:20.742" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 21:41:20.741" endtime="20220704 21:41:20.742"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 21:41:20.742" endtime="20220704 21:41:20.742"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 21:41:20.743" level="INFO">${url} = lists/</msg>
<status status="PASS" starttime="20220704 21:41:20.742" endtime="20220704 21:41:20.743"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 21:41:20.861" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:41:20.743" endtime="20220704 21:41:20.861"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:41:20.861" endtime="20220704 21:41:20.861"/>
</return>
<msg timestamp="20220704 21:41:20.862" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:41:20.741" endtime="20220704 21:41:20.862"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:41:20.862" endtime="20220704 21:41:20.862"/>
</return>
<msg timestamp="20220704 21:41:20.862" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:41:20.740" endtime="20220704 21:41:20.862"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>list</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220704 21:41:20.863" endtime="20220704 21:41:20.865"/>
</kw>
<status status="PASS" starttime="20220704 21:41:20.862" endtime="20220704 21:41:20.865"/>
</kw>
<doc>Verify that a list can be created through API</doc>
<tag>api</tag>
<tag>list.create</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220704 21:41:20.740" endtime="20220704 21:41:20.865"/>
</test>
<test id="s1-s1-s5-t2" name="UPDATE a list" line="19">
<kw name="Create A List" library="List">
<var>${response}</var>
<arg>NewList</arg>
<doc>Creates a new List
board id
name the list will have
optional_args: idListSource, pos, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>list</arg>
<arg>name</arg>
<arg>${name}</arg>
<arg>idBoard</arg>
<arg>${idBoard}</arg>
<arg>@{optional_args}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 21:41:20.867" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 21:41:20.867" endtime="20220704 21:41:20.867"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 21:41:20.867" endtime="20220704 21:41:20.867"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 21:41:20.868" level="INFO">${url} = lists/</msg>
<status status="PASS" starttime="20220704 21:41:20.867" endtime="20220704 21:41:20.868"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 21:41:20.983" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:41:20.868" endtime="20220704 21:41:20.983"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:41:20.983" endtime="20220704 21:41:20.983"/>
</return>
<msg timestamp="20220704 21:41:20.983" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:41:20.866" endtime="20220704 21:41:20.983"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:41:20.983" endtime="20220704 21:41:20.983"/>
</return>
<msg timestamp="20220704 21:41:20.983" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:41:20.866" endtime="20220704 21:41:20.983"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>list</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220704 21:41:20.984" endtime="20220704 21:41:20.986"/>
</kw>
<status status="PASS" starttime="20220704 21:41:20.984" endtime="20220704 21:41:20.986"/>
</kw>
<kw name="Update A List" library="List">
<arg>${response.json()}[id]</arg>
<arg>name</arg>
<arg>NewName</arg>
<doc>Updates the board with the given ID
optional_args: name, idListSource, pos, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>list</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 21:41:20.988" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 21:41:20.988" endtime="20220704 21:41:20.988"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 21:41:20.988" endtime="20220704 21:41:20.988"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 21:41:20.989" level="INFO">${url} = lists/62c35e80a5358e511d391708</msg>
<status status="PASS" starttime="20220704 21:41:20.988" endtime="20220704 21:41:20.989"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 21:41:21.093" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:41:20.989" endtime="20220704 21:41:21.093"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:41:21.093" endtime="20220704 21:41:21.093"/>
</return>
<msg timestamp="20220704 21:41:21.094" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:41:20.987" endtime="20220704 21:41:21.094"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:41:21.094" endtime="20220704 21:41:21.094"/>
</return>
<status status="PASS" starttime="20220704 21:41:20.986" endtime="20220704 21:41:21.094"/>
</kw>
<kw name="Get A List" library="List">
<var>${new_response}</var>
<arg>${response.json()}[id]</arg>
<doc>Gets the List with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>list</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 21:41:21.096" level="INFO">${url} = lists/62c35e80a5358e511d391708</msg>
<status status="PASS" starttime="20220704 21:41:21.096" endtime="20220704 21:41:21.096"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 21:41:21.173" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:41:21.096" endtime="20220704 21:41:21.173"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:41:21.173" endtime="20220704 21:41:21.173"/>
</return>
<msg timestamp="20220704 21:41:21.174" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:41:21.095" endtime="20220704 21:41:21.174"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:41:21.174" endtime="20220704 21:41:21.174"/>
</return>
<msg timestamp="20220704 21:41:21.174" level="INFO">${new_response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:41:21.094" endtime="20220704 21:41:21.174"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${new_response}</arg>
<arg>list</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220704 21:41:21.175" endtime="20220704 21:41:21.176"/>
</kw>
<status status="PASS" starttime="20220704 21:41:21.174" endtime="20220704 21:41:21.176"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${new_response.json()}[name]</arg>
<arg>NewName</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220704 21:41:21.177" endtime="20220704 21:41:21.177"/>
</kw>
<doc>Verify that a lists name can be updated through API</doc>
<tag>api</tag>
<tag>list.update</tag>
<tag>regression</tag>
<status status="PASS" starttime="20220704 21:41:20.865" endtime="20220704 21:41:21.178"/>
</test>
<test id="s1-s1-s5-t3" name="ARCHIVE A list" line="29">
<kw name="Create A List" library="List">
<var>${response}</var>
<arg>NewList</arg>
<doc>Creates a new List
board id
name the list will have
optional_args: idListSource, pos, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>list</arg>
<arg>name</arg>
<arg>${name}</arg>
<arg>idBoard</arg>
<arg>${idBoard}</arg>
<arg>@{optional_args}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 21:41:21.181" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 21:41:21.181" endtime="20220704 21:41:21.181"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 21:41:21.181" endtime="20220704 21:41:21.181"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 21:41:21.182" level="INFO">${url} = lists/</msg>
<status status="PASS" starttime="20220704 21:41:21.181" endtime="20220704 21:41:21.182"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 21:41:21.322" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:41:21.182" endtime="20220704 21:41:21.322"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:41:21.322" endtime="20220704 21:41:21.322"/>
</return>
<msg timestamp="20220704 21:41:21.322" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:41:21.180" endtime="20220704 21:41:21.322"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:41:21.322" endtime="20220704 21:41:21.322"/>
</return>
<msg timestamp="20220704 21:41:21.323" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:41:21.178" endtime="20220704 21:41:21.323"/>
</kw>
<kw name="Archive A List" library="List">
<arg>${response.json()}[id]</arg>
<doc>Deletes the list with the given ID</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>archive_list</arg>
<arg>${id}</arg>
<arg>value</arg>
<arg>true</arg>
<arg>status_code=${status_code}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 21:41:21.324" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 21:41:21.324" endtime="20220704 21:41:21.324"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 21:41:21.325" endtime="20220704 21:41:21.325"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 21:41:21.325" level="INFO">${url} = lists/62c35e8153a8220e9b4cd671/closed</msg>
<status status="PASS" starttime="20220704 21:41:21.325" endtime="20220704 21:41:21.325"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 21:41:21.438" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:41:21.325" endtime="20220704 21:41:21.438"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:41:21.438" endtime="20220704 21:41:21.438"/>
</return>
<msg timestamp="20220704 21:41:21.438" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:41:21.324" endtime="20220704 21:41:21.438"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:41:21.438" endtime="20220704 21:41:21.438"/>
</return>
<status status="PASS" starttime="20220704 21:41:21.323" endtime="20220704 21:41:21.438"/>
</kw>
<kw name="Get A List" library="List">
<var>${new_response}</var>
<arg>${response.json()}[id]</arg>
<doc>Gets the List with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>list</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 21:41:21.440" level="INFO">${url} = lists/62c35e8153a8220e9b4cd671</msg>
<status status="PASS" starttime="20220704 21:41:21.440" endtime="20220704 21:41:21.440"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 21:41:21.514" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:41:21.441" endtime="20220704 21:41:21.514"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:41:21.514" endtime="20220704 21:41:21.514"/>
</return>
<msg timestamp="20220704 21:41:21.514" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:41:21.440" endtime="20220704 21:41:21.514"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:41:21.514" endtime="20220704 21:41:21.514"/>
</return>
<msg timestamp="20220704 21:41:21.514" level="INFO">${new_response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:41:21.439" endtime="20220704 21:41:21.514"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${new_response.json()}[closed]</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220704 21:41:21.515" endtime="20220704 21:41:21.515"/>
</kw>
<doc>Verify that a list can be archived through API</doc>
<tag>api</tag>
<tag>list.archive</tag>
<tag>regression</tag>
<status status="PASS" starttime="20220704 21:41:21.178" endtime="20220704 21:41:21.516"/>
</test>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Teardown Board</arg>
<arg>Delete All Sessions</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Teardown Board">
<doc>Delete the board created for this suite.</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 21:41:21.518" level="INFO">${url} = boards/62c35e80cf22864623d68e1d</msg>
<status status="PASS" starttime="20220704 21:41:21.518" endtime="20220704 21:41:21.518"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 21:41:21.842" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:41:21.518" endtime="20220704 21:41:21.842"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:41:21.842" endtime="20220704 21:41:21.842"/>
</return>
<msg timestamp="20220704 21:41:21.843" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 21:41:21.517" endtime="20220704 21:41:21.843"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 21:41:21.843" endtime="20220704 21:41:21.843"/>
</return>
<status status="PASS" starttime="20220704 21:41:21.517" endtime="20220704 21:41:21.843"/>
</kw>
<status status="PASS" starttime="20220704 21:41:21.517" endtime="20220704 21:41:21.843"/>
</kw>
<status status="PASS" starttime="20220704 21:41:21.516" endtime="20220704 21:41:21.843"/>
</kw>
<kw name="Delete All Sessions" library="request_own_library">
<status status="PASS" starttime="20220704 21:41:21.843" endtime="20220704 21:41:21.844"/>
</kw>
<status status="PASS" starttime="20220704 21:41:21.516" endtime="20220704 21:41:21.844"/>
</kw>
<doc>Example Test with Trello API lists</doc>
<status status="PASS" starttime="20220704 21:41:20.435" endtime="20220704 21:41:21.844"/>
</suite>
<status status="PASS" starttime="20220704 21:41:09.542" endtime="20220704 21:41:21.846"/>
</suite>
<status status="PASS" starttime="20220704 21:41:09.525" endtime="20220704 21:41:21.849"/>
</suite>
<statistics>
<total>
<stat pass="18" fail="0" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="18" fail="0" skip="0">api</stat>
<stat pass="1" fail="0" skip="0">board.create</stat>
<stat pass="1" fail="0" skip="0">board.delete</stat>
<stat pass="1" fail="0" skip="0">board.get</stat>
<stat pass="2" fail="0" skip="0">board.update</stat>
<stat pass="1" fail="0" skip="0">card.close</stat>
<stat pass="1" fail="0" skip="0">card.create</stat>
<stat pass="1" fail="0" skip="0">card.delete</stat>
<stat pass="1" fail="0" skip="0">card.update</stat>
<stat pass="1" fail="0" skip="0">checklist.create</stat>
<stat pass="1" fail="0" skip="0">checklist.delete</stat>
<stat pass="1" fail="0" skip="0">checklist.update</stat>
<stat pass="1" fail="0" skip="0">label.create</stat>
<stat pass="1" fail="0" skip="0">label.delete</stat>
<stat pass="1" fail="0" skip="0">label.get</stat>
<stat pass="1" fail="0" skip="0">label.update</stat>
<stat pass="1" fail="0" skip="0">list.archive</stat>
<stat pass="1" fail="0" skip="0">list.create</stat>
<stat pass="1" fail="0" skip="0">list.update</stat>
<stat pass="5" fail="0" skip="0">regression</stat>
<stat pass="13" fail="0" skip="0">smoke</stat>
</tag>
<suite>
<stat pass="18" fail="0" skip="0" id="s1" name="Trello">Trello</stat>
<stat pass="18" fail="0" skip="0" id="s1-s1" name="Api">Trello.Api</stat>
<stat pass="5" fail="0" skip="0" id="s1-s1-s1" name="Trello Api Boards Tests">Trello.Api.Trello Api Boards Tests</stat>
<stat pass="4" fail="0" skip="0" id="s1-s1-s2" name="Trello Api Cards Tests">Trello.Api.Trello Api Cards Tests</stat>
<stat pass="3" fail="0" skip="0" id="s1-s1-s3" name="Trello Api Checklists Tests">Trello.Api.Trello Api Checklists Tests</stat>
<stat pass="3" fail="0" skip="0" id="s1-s1-s4" name="Trello Api Labels Tests">Trello.Api.Trello Api Labels Tests</stat>
<stat pass="3" fail="0" skip="0" id="s1-s1-s5" name="Trello Api Lists Tests">Trello.Api.Trello Api Lists Tests</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
