<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 5.0.1 (Python 3.10.5 on linux)" generated="20220705 11:51:00.747" rpa="false" schemaversion="3">
<suite id="s1" name="Trello" source="/trello">
<suite id="s1-s1" name="Api" source="/trello/api">
<suite id="s1-s1-s1" name="Trello Api Boards Tests" source="/trello/api/trello_api_boards_tests.robot">
<kw name="Create Trello Session" library="TrelloAPI" type="SETUP">
<doc>Creates a Trello Session</doc>
<kw name="Create Session" library="request_own_library">
<arg>${API_BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<status status="PASS" starttime="20220705 11:51:00.917" endtime="20220705 11:51:00.918"/>
</kw>
<status status="PASS" starttime="20220705 11:51:00.916" endtime="20220705 11:51:00.918"/>
</kw>
<test id="s1-s1-s1-t1" name="CREATE a board" line="9">
<kw name="Create A Board" library="Board">
<var>${response}</var>
<arg>NewBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 11:51:00.921" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 11:51:00.920" endtime="20220705 11:51:00.921"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 11:51:00.921" endtime="20220705 11:51:00.921"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 11:51:00.922" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220705 11:51:00.921" endtime="20220705 11:51:00.922"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 11:51:01.282" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 11:51:00.922" endtime="20220705 11:51:01.282"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 11:51:01.282" endtime="20220705 11:51:01.282"/>
</return>
<msg timestamp="20220705 11:51:01.282" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 11:51:00.920" endtime="20220705 11:51:01.282"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 11:51:01.282" endtime="20220705 11:51:01.282"/>
</return>
<msg timestamp="20220705 11:51:01.282" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 11:51:00.919" endtime="20220705 11:51:01.282"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>board</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 11:51:01.283" endtime="20220705 11:51:01.289"/>
</kw>
<status status="PASS" starttime="20220705 11:51:01.283" endtime="20220705 11:51:01.289"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${response.json()}[id]</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${response.json()}[id]</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 11:51:01.291" level="INFO">${url} = boards/62c425a53770d212c6eb940d</msg>
<status status="PASS" starttime="20220705 11:51:01.291" endtime="20220705 11:51:01.291"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 11:51:01.695" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 11:51:01.291" endtime="20220705 11:51:01.695"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 11:51:01.695" endtime="20220705 11:51:01.695"/>
</return>
<msg timestamp="20220705 11:51:01.695" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 11:51:01.290" endtime="20220705 11:51:01.695"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 11:51:01.695" endtime="20220705 11:51:01.695"/>
</return>
<status status="PASS" starttime="20220705 11:51:01.290" endtime="20220705 11:51:01.696"/>
</kw>
<status status="PASS" starttime="20220705 11:51:01.289" endtime="20220705 11:51:01.696"/>
</kw>
<doc>Verify that a board can be create through API</doc>
<tag>api</tag>
<tag>board.create</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220705 11:51:00.918" endtime="20220705 11:51:01.696"/>
</test>
<test id="s1-s1-s1-t2" name="UPDATE a Board's name" line="16">
<kw name="Create A Board" library="Board">
<var>${response}</var>
<arg>NewBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 11:51:01.699" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 11:51:01.699" endtime="20220705 11:51:01.699"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 11:51:01.699" endtime="20220705 11:51:01.700"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 11:51:01.700" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220705 11:51:01.700" endtime="20220705 11:51:01.700"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 11:51:01.906" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 11:51:01.700" endtime="20220705 11:51:01.906"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 11:51:01.906" endtime="20220705 11:51:01.906"/>
</return>
<msg timestamp="20220705 11:51:01.906" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 11:51:01.698" endtime="20220705 11:51:01.906"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 11:51:01.907" endtime="20220705 11:51:01.907"/>
</return>
<msg timestamp="20220705 11:51:01.907" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 11:51:01.697" endtime="20220705 11:51:01.907"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>board</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 11:51:01.908" endtime="20220705 11:51:01.912"/>
</kw>
<status status="PASS" starttime="20220705 11:51:01.907" endtime="20220705 11:51:01.912"/>
</kw>
<kw name="Update A Board" library="Board">
<arg>${response.json()}[id]</arg>
<arg>name</arg>
<arg>NewName</arg>
<doc>Updates the board with the given ID
optional_args: name, desc, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 11:51:01.914" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 11:51:01.914" endtime="20220705 11:51:01.914"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 11:51:01.914" endtime="20220705 11:51:01.915"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 11:51:01.915" level="INFO">${url} = boards/62c425a58dcf0b2a48cf2205</msg>
<status status="PASS" starttime="20220705 11:51:01.915" endtime="20220705 11:51:01.915"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 11:51:02.037" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 11:51:01.915" endtime="20220705 11:51:02.037"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 11:51:02.037" endtime="20220705 11:51:02.038"/>
</return>
<msg timestamp="20220705 11:51:02.038" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 11:51:01.914" endtime="20220705 11:51:02.038"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 11:51:02.038" endtime="20220705 11:51:02.038"/>
</return>
<status status="PASS" starttime="20220705 11:51:01.913" endtime="20220705 11:51:02.038"/>
</kw>
<kw name="Get A Board" library="Board">
<var>${new_response}</var>
<arg>${response.json()}[id]</arg>
<doc>Gets the Board with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 11:51:02.040" level="INFO">${url} = boards/62c425a58dcf0b2a48cf2205</msg>
<status status="PASS" starttime="20220705 11:51:02.040" endtime="20220705 11:51:02.040"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 11:51:02.123" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 11:51:02.040" endtime="20220705 11:51:02.123"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 11:51:02.124" endtime="20220705 11:51:02.124"/>
</return>
<msg timestamp="20220705 11:51:02.124" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 11:51:02.039" endtime="20220705 11:51:02.124"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 11:51:02.124" endtime="20220705 11:51:02.124"/>
</return>
<msg timestamp="20220705 11:51:02.124" level="INFO">${new_response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 11:51:02.038" endtime="20220705 11:51:02.124"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${new_response}</arg>
<arg>board</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 11:51:02.125" endtime="20220705 11:51:02.129"/>
</kw>
<status status="PASS" starttime="20220705 11:51:02.124" endtime="20220705 11:51:02.129"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${new_response.json()}[name]</arg>
<arg>NewName</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220705 11:51:02.129" endtime="20220705 11:51:02.130"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${response.json()}[id]</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${response.json()}[id]</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 11:51:02.133" level="INFO">${url} = boards/62c425a58dcf0b2a48cf2205</msg>
<status status="PASS" starttime="20220705 11:51:02.132" endtime="20220705 11:51:02.133"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 11:51:02.537" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 11:51:02.133" endtime="20220705 11:51:02.537"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 11:51:02.537" endtime="20220705 11:51:02.537"/>
</return>
<msg timestamp="20220705 11:51:02.537" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 11:51:02.131" endtime="20220705 11:51:02.538"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 11:51:02.538" endtime="20220705 11:51:02.538"/>
</return>
<status status="PASS" starttime="20220705 11:51:02.130" endtime="20220705 11:51:02.538"/>
</kw>
<status status="PASS" starttime="20220705 11:51:02.130" endtime="20220705 11:51:02.538"/>
</kw>
<doc>Verify that a board's name can be updated through API</doc>
<tag>api</tag>
<tag>board.update</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220705 11:51:01.697" endtime="20220705 11:51:02.538"/>
</test>
<test id="s1-s1-s1-t3" name="DELETE A Board" line="27">
<kw name="Create A Board" library="Board">
<var>${response}</var>
<arg>NewBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 11:51:02.541" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 11:51:02.540" endtime="20220705 11:51:02.541"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 11:51:02.541" endtime="20220705 11:51:02.541"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 11:51:02.542" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220705 11:51:02.541" endtime="20220705 11:51:02.542"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 11:51:02.855" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 11:51:02.542" endtime="20220705 11:51:02.855"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 11:51:02.855" endtime="20220705 11:51:02.855"/>
</return>
<msg timestamp="20220705 11:51:02.855" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 11:51:02.540" endtime="20220705 11:51:02.856"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 11:51:02.856" endtime="20220705 11:51:02.856"/>
</return>
<msg timestamp="20220705 11:51:02.856" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 11:51:02.539" endtime="20220705 11:51:02.856"/>
</kw>
<kw name="Delete A Board" library="Board">
<arg>${response.json()}[id]</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 11:51:02.858" level="INFO">${url} = boards/62c425a69bb8ac037cbaf3e0</msg>
<status status="PASS" starttime="20220705 11:51:02.858" endtime="20220705 11:51:02.858"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 11:51:03.396" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 11:51:02.858" endtime="20220705 11:51:03.396"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 11:51:03.397" endtime="20220705 11:51:03.397"/>
</return>
<msg timestamp="20220705 11:51:03.397" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 11:51:02.857" endtime="20220705 11:51:03.397"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 11:51:03.397" endtime="20220705 11:51:03.397"/>
</return>
<status status="PASS" starttime="20220705 11:51:02.856" endtime="20220705 11:51:03.397"/>
</kw>
<kw name="Get A Board" library="Board">
<arg>${response.json()}[id]</arg>
<arg>status_code=404</arg>
<doc>Gets the Board with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 11:51:03.400" level="INFO">${url} = boards/62c425a69bb8ac037cbaf3e0</msg>
<status status="PASS" starttime="20220705 11:51:03.399" endtime="20220705 11:51:03.400"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 11:51:03.476" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220705 11:51:03.400" endtime="20220705 11:51:03.476"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 11:51:03.476" endtime="20220705 11:51:03.476"/>
</return>
<msg timestamp="20220705 11:51:03.477" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220705 11:51:03.399" endtime="20220705 11:51:03.477"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 11:51:03.477" endtime="20220705 11:51:03.477"/>
</return>
<status status="PASS" starttime="20220705 11:51:03.398" endtime="20220705 11:51:03.477"/>
</kw>
<doc>Verify that a board can be deleted through API</doc>
<tag>api</tag>
<tag>board.delete</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220705 11:51:02.539" endtime="20220705 11:51:03.477"/>
</test>
<test id="s1-s1-s1-t4" name="GET Information of A Board" line="34">
<kw name="Create A Board" library="Board">
<var>${response}</var>
<arg>BoardTest</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 11:51:03.480" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 11:51:03.480" endtime="20220705 11:51:03.480"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 11:51:03.480" endtime="20220705 11:51:03.480"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 11:51:03.481" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220705 11:51:03.481" endtime="20220705 11:51:03.481"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 11:51:03.772" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 11:51:03.481" endtime="20220705 11:51:03.772"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 11:51:03.772" endtime="20220705 11:51:03.772"/>
</return>
<msg timestamp="20220705 11:51:03.772" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 11:51:03.479" endtime="20220705 11:51:03.772"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 11:51:03.772" endtime="20220705 11:51:03.772"/>
</return>
<msg timestamp="20220705 11:51:03.773" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 11:51:03.479" endtime="20220705 11:51:03.773"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>board</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 11:51:03.773" endtime="20220705 11:51:03.778"/>
</kw>
<status status="PASS" starttime="20220705 11:51:03.773" endtime="20220705 11:51:03.778"/>
</kw>
<kw name="Get A Board" library="Board">
<var>${response2}</var>
<arg>${response.json()}[id]</arg>
<doc>Gets the Board with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 11:51:03.780" level="INFO">${url} = boards/62c425a7c3c9e74ebaa3329e</msg>
<status status="PASS" starttime="20220705 11:51:03.779" endtime="20220705 11:51:03.780"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 11:51:03.929" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 11:51:03.780" endtime="20220705 11:51:03.929"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 11:51:03.929" endtime="20220705 11:51:03.930"/>
</return>
<msg timestamp="20220705 11:51:03.930" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 11:51:03.779" endtime="20220705 11:51:03.930"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 11:51:03.930" endtime="20220705 11:51:03.930"/>
</return>
<msg timestamp="20220705 11:51:03.930" level="INFO">${response2} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 11:51:03.778" endtime="20220705 11:51:03.930"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response2}</arg>
<arg>board</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 11:51:03.931" endtime="20220705 11:51:03.936"/>
</kw>
<status status="PASS" starttime="20220705 11:51:03.930" endtime="20220705 11:51:03.936"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${response2.json()}[name]</arg>
<arg>BoardTest</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220705 11:51:03.936" endtime="20220705 11:51:03.937"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${response.json()}[id]</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${response.json()}[id]</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 11:51:03.940" level="INFO">${url} = boards/62c425a7c3c9e74ebaa3329e</msg>
<status status="PASS" starttime="20220705 11:51:03.939" endtime="20220705 11:51:03.940"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 11:51:04.391" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 11:51:03.940" endtime="20220705 11:51:04.391"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 11:51:04.391" endtime="20220705 11:51:04.391"/>
</return>
<msg timestamp="20220705 11:51:04.391" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 11:51:03.938" endtime="20220705 11:51:04.391"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 11:51:04.392" endtime="20220705 11:51:04.392"/>
</return>
<status status="PASS" starttime="20220705 11:51:03.937" endtime="20220705 11:51:04.392"/>
</kw>
<status status="PASS" starttime="20220705 11:51:03.937" endtime="20220705 11:51:04.392"/>
</kw>
<doc>Verify that a board's information can be accesed through API</doc>
<tag>api</tag>
<tag>board.get</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220705 11:51:03.478" endtime="20220705 11:51:04.392"/>
</test>
<test id="s1-s1-s1-t5" name="UPDATE a Board's description" line="45">
<kw name="Create A Board" library="Board">
<var>${response}</var>
<arg>NewBoardForTest</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 11:51:04.395" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 11:51:04.394" endtime="20220705 11:51:04.395"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 11:51:04.395" endtime="20220705 11:51:04.395"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 11:51:04.396" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220705 11:51:04.395" endtime="20220705 11:51:04.396"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 11:51:04.646" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 11:51:04.396" endtime="20220705 11:51:04.646"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 11:51:04.646" endtime="20220705 11:51:04.646"/>
</return>
<msg timestamp="20220705 11:51:04.647" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 11:51:04.394" endtime="20220705 11:51:04.647"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 11:51:04.647" endtime="20220705 11:51:04.647"/>
</return>
<msg timestamp="20220705 11:51:04.647" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 11:51:04.393" endtime="20220705 11:51:04.647"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>board</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 11:51:04.648" endtime="20220705 11:51:04.652"/>
</kw>
<status status="PASS" starttime="20220705 11:51:04.647" endtime="20220705 11:51:04.653"/>
</kw>
<kw name="Update A Board" library="Board">
<arg>${response.json()}[id]</arg>
<arg>desc</arg>
<arg>sampleDescription</arg>
<doc>Updates the board with the given ID
optional_args: name, desc, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 11:51:04.655" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 11:51:04.655" endtime="20220705 11:51:04.655"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 11:51:04.655" endtime="20220705 11:51:04.655"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 11:51:04.656" level="INFO">${url} = boards/62c425a880dfe98193405c90</msg>
<status status="PASS" starttime="20220705 11:51:04.655" endtime="20220705 11:51:04.656"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 11:51:04.774" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 11:51:04.656" endtime="20220705 11:51:04.774"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 11:51:04.774" endtime="20220705 11:51:04.774"/>
</return>
<msg timestamp="20220705 11:51:04.774" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 11:51:04.654" endtime="20220705 11:51:04.774"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 11:51:04.774" endtime="20220705 11:51:04.774"/>
</return>
<status status="PASS" starttime="20220705 11:51:04.653" endtime="20220705 11:51:04.775"/>
</kw>
<kw name="Get A Board" library="Board">
<var>${new_response}</var>
<arg>${response.json()}[id]</arg>
<doc>Gets the Board with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 11:51:04.777" level="INFO">${url} = boards/62c425a880dfe98193405c90</msg>
<status status="PASS" starttime="20220705 11:51:04.776" endtime="20220705 11:51:04.777"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 11:51:04.854" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 11:51:04.777" endtime="20220705 11:51:04.854"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 11:51:04.855" endtime="20220705 11:51:04.855"/>
</return>
<msg timestamp="20220705 11:51:04.855" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 11:51:04.776" endtime="20220705 11:51:04.855"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 11:51:04.855" endtime="20220705 11:51:04.855"/>
</return>
<msg timestamp="20220705 11:51:04.855" level="INFO">${new_response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 11:51:04.775" endtime="20220705 11:51:04.855"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${new_response.json()}[desc]</arg>
<arg>sampleDescription</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220705 11:51:04.856" endtime="20220705 11:51:04.856"/>
</kw>
<kw name="Update A Board" library="Board">
<arg>${response.json()}[id]</arg>
<arg>desc</arg>
<arg>updatedDescription</arg>
<doc>Updates the board with the given ID
optional_args: name, desc, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 11:51:04.859" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 11:51:04.858" endtime="20220705 11:51:04.859"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 11:51:04.859" endtime="20220705 11:51:04.859"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 11:51:04.860" level="INFO">${url} = boards/62c425a880dfe98193405c90</msg>
<status status="PASS" starttime="20220705 11:51:04.859" endtime="20220705 11:51:04.860"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 11:51:04.985" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 11:51:04.860" endtime="20220705 11:51:04.985"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 11:51:04.985" endtime="20220705 11:51:04.985"/>
</return>
<msg timestamp="20220705 11:51:04.985" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 11:51:04.858" endtime="20220705 11:51:04.985"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 11:51:04.985" endtime="20220705 11:51:04.986"/>
</return>
<status status="PASS" starttime="20220705 11:51:04.857" endtime="20220705 11:51:04.986"/>
</kw>
<kw name="Get A Board" library="Board">
<var>${new_response2}</var>
<arg>${response.json()}[id]</arg>
<doc>Gets the Board with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 11:51:04.988" level="INFO">${url} = boards/62c425a880dfe98193405c90</msg>
<status status="PASS" starttime="20220705 11:51:04.988" endtime="20220705 11:51:04.988"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 11:51:05.067" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 11:51:04.988" endtime="20220705 11:51:05.067"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 11:51:05.067" endtime="20220705 11:51:05.068"/>
</return>
<msg timestamp="20220705 11:51:05.068" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 11:51:04.987" endtime="20220705 11:51:05.068"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 11:51:05.068" endtime="20220705 11:51:05.068"/>
</return>
<msg timestamp="20220705 11:51:05.068" level="INFO">${new_response2} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 11:51:04.986" endtime="20220705 11:51:05.068"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${new_response2.json()}[desc]</arg>
<arg>updatedDescription</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220705 11:51:05.069" endtime="20220705 11:51:05.069"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${response.json()}[id]</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${response.json()}[id]</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 11:51:05.072" level="INFO">${url} = boards/62c425a880dfe98193405c90</msg>
<status status="PASS" starttime="20220705 11:51:05.072" endtime="20220705 11:51:05.072"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 11:51:05.441" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 11:51:05.072" endtime="20220705 11:51:05.441"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 11:51:05.441" endtime="20220705 11:51:05.441"/>
</return>
<msg timestamp="20220705 11:51:05.442" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 11:51:05.071" endtime="20220705 11:51:05.442"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 11:51:05.442" endtime="20220705 11:51:05.442"/>
</return>
<status status="PASS" starttime="20220705 11:51:05.070" endtime="20220705 11:51:05.442"/>
</kw>
<status status="PASS" starttime="20220705 11:51:05.070" endtime="20220705 11:51:05.442"/>
</kw>
<doc>Verify that a board's description can be updated through API</doc>
<tag>api</tag>
<tag>board.update</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220705 11:51:04.393" endtime="20220705 11:51:05.442"/>
</test>
<kw name="Delete All Sessions" library="request_own_library" type="TEARDOWN">
<status status="PASS" starttime="20220705 11:51:05.443" endtime="20220705 11:51:05.445"/>
</kw>
<doc>Example Test with Trello API Boards</doc>
<status status="PASS" starttime="20220705 11:51:00.776" endtime="20220705 11:51:05.445"/>
</suite>
<suite id="s1-s1-s2" name="Trello Api Cards Tests" source="/trello/api/trello_api_cards_tests.robot">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Create Trello Session</arg>
<arg>Setup Board And List</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Create Trello Session" library="TrelloAPI">
<doc>Creates a Trello Session</doc>
<kw name="Create Session" library="request_own_library">
<arg>${API_BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<status status="PASS" starttime="20220705 11:51:05.458" endtime="20220705 11:51:05.459"/>
</kw>
<status status="PASS" starttime="20220705 11:51:05.458" endtime="20220705 11:51:05.459"/>
</kw>
<kw name="Setup Board And List">
<doc>Create a board and save its ID and its first list's ID</doc>
<kw name="Create A Board" library="Board">
<var>${BOARD}</var>
<arg>TestBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 11:51:05.460" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 11:51:05.460" endtime="20220705 11:51:05.460"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 11:51:05.460" endtime="20220705 11:51:05.461"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 11:51:05.461" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220705 11:51:05.461" endtime="20220705 11:51:05.462"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 11:51:05.778" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 11:51:05.462" endtime="20220705 11:51:05.778"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 11:51:05.778" endtime="20220705 11:51:05.778"/>
</return>
<msg timestamp="20220705 11:51:05.779" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 11:51:05.460" endtime="20220705 11:51:05.779"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 11:51:05.779" endtime="20220705 11:51:05.779"/>
</return>
<msg timestamp="20220705 11:51:05.780" level="INFO">${BOARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 11:51:05.459" endtime="20220705 11:51:05.780"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_BOARD_ID}</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220705 11:51:05.782" level="INFO">${TEST_SUITE_BOARD_ID} = 62c425a98924d18d62fbcc10</msg>
<status status="PASS" starttime="20220705 11:51:05.780" endtime="20220705 11:51:05.782"/>
</kw>
<kw name="Get Lists On A Board" library="Board">
<var>${LISTS}</var>
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Get all the lists in a board</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>lists_on_board</arg>
<arg>${id}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 11:51:05.783" level="INFO">${url} = boards/62c425a98924d18d62fbcc10/lists/</msg>
<status status="PASS" starttime="20220705 11:51:05.783" endtime="20220705 11:51:05.783"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 11:51:05.871" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 11:51:05.783" endtime="20220705 11:51:05.871"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 11:51:05.871" endtime="20220705 11:51:05.871"/>
</return>
<msg timestamp="20220705 11:51:05.872" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 11:51:05.782" endtime="20220705 11:51:05.872"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 11:51:05.872" endtime="20220705 11:51:05.872"/>
</return>
<msg timestamp="20220705 11:51:05.872" level="INFO">${LISTS} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 11:51:05.782" endtime="20220705 11:51:05.872"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_LIST_ID}</arg>
<arg>${LISTS.json()}[0][id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220705 11:51:05.873" level="INFO">${TEST_SUITE_LIST_ID} = 62c425a98924d18d62fbcc17</msg>
<status status="PASS" starttime="20220705 11:51:05.872" endtime="20220705 11:51:05.873"/>
</kw>
<status status="PASS" starttime="20220705 11:51:05.459" endtime="20220705 11:51:05.873"/>
</kw>
<status status="PASS" starttime="20220705 11:51:05.458" endtime="20220705 11:51:05.873"/>
</kw>
<test id="s1-s1-s2-t1" name="Verify A Card Can Be Created" line="13">
<kw name="Create A Card" library="Card">
<var>${response}</var>
<arg>name</arg>
<arg>RFCard2</arg>
<doc>Creates a new card in the given list.
required_args: listId
optional_args: name, desc, pos, idCardSource, idLabels, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>@{optional_args}</arg>
<arg>idList</arg>
<arg>${idList}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 11:51:05.876" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 11:51:05.875" endtime="20220705 11:51:05.876"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 11:51:05.876" endtime="20220705 11:51:05.876"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 11:51:05.877" level="INFO">${url} = cards/</msg>
<status status="PASS" starttime="20220705 11:51:05.876" endtime="20220705 11:51:05.877"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 11:51:06.081" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 11:51:05.877" endtime="20220705 11:51:06.081"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 11:51:06.081" endtime="20220705 11:51:06.081"/>
</return>
<msg timestamp="20220705 11:51:06.081" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 11:51:05.875" endtime="20220705 11:51:06.081"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 11:51:06.081" endtime="20220705 11:51:06.082"/>
</return>
<msg timestamp="20220705 11:51:06.082" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 11:51:05.874" endtime="20220705 11:51:06.082"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>card</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 11:51:06.083" endtime="20220705 11:51:06.089"/>
</kw>
<status status="PASS" starttime="20220705 11:51:06.082" endtime="20220705 11:51:06.089"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 11:51:06.090" endtime="20220705 11:51:06.090"/>
</return>
<msg timestamp="20220705 11:51:06.090" level="INFO">${CARD_ID} = 62c425a9552fa06a47719928</msg>
<status status="PASS" starttime="20220705 11:51:06.089" endtime="20220705 11:51:06.090"/>
</kw>
<kw name="Get A Card" library="Card">
<var>${response}</var>
<arg>${CARD_ID}</arg>
<doc>Gets the card with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 11:51:06.092" level="INFO">${url} = cards/62c425a9552fa06a47719928</msg>
<status status="PASS" starttime="20220705 11:51:06.092" endtime="20220705 11:51:06.092"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 11:51:06.189" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 11:51:06.092" endtime="20220705 11:51:06.189"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 11:51:06.189" endtime="20220705 11:51:06.189"/>
</return>
<msg timestamp="20220705 11:51:06.189" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 11:51:06.091" endtime="20220705 11:51:06.189"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 11:51:06.190" endtime="20220705 11:51:06.190"/>
</return>
<msg timestamp="20220705 11:51:06.190" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 11:51:06.091" endtime="20220705 11:51:06.190"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_NAME}</var>
<arg>${response}</arg>
<arg>name</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 11:51:06.190" endtime="20220705 11:51:06.190"/>
</return>
<msg timestamp="20220705 11:51:06.191" level="INFO">${CARD_NAME} = RFCard2</msg>
<status status="PASS" starttime="20220705 11:51:06.190" endtime="20220705 11:51:06.191"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${CARD_NAME}</arg>
<arg>RFCard2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220705 11:51:06.191" endtime="20220705 11:51:06.192"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Card</arg>
<arg>${CARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Card" library="Card">
<arg>${CARD_ID}</arg>
<doc>Deletes the card with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 11:51:06.195" level="INFO">${url} = cards/62c425a9552fa06a47719928</msg>
<status status="PASS" starttime="20220705 11:51:06.194" endtime="20220705 11:51:06.195"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 11:51:06.400" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 11:51:06.195" endtime="20220705 11:51:06.400"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 11:51:06.400" endtime="20220705 11:51:06.400"/>
</return>
<msg timestamp="20220705 11:51:06.400" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 11:51:06.193" endtime="20220705 11:51:06.400"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 11:51:06.400" endtime="20220705 11:51:06.400"/>
</return>
<status status="PASS" starttime="20220705 11:51:06.192" endtime="20220705 11:51:06.401"/>
</kw>
<status status="PASS" starttime="20220705 11:51:06.192" endtime="20220705 11:51:06.401"/>
</kw>
<doc>Verify that a card can be created through API</doc>
<tag>api</tag>
<tag>card.create</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220705 11:51:05.874" endtime="20220705 11:51:06.401"/>
</test>
<test id="s1-s1-s2-t2" name="Verify A Card Can Be Closed" line="24">
<kw name="Create A Card" library="Card">
<var>${response}</var>
<doc>Creates a new card in the given list.
required_args: listId
optional_args: name, desc, pos, idCardSource, idLabels, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>@{optional_args}</arg>
<arg>idList</arg>
<arg>${idList}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 11:51:06.404" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 11:51:06.404" endtime="20220705 11:51:06.404"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 11:51:06.404" endtime="20220705 11:51:06.405"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 11:51:06.406" level="INFO">${url} = cards/</msg>
<status status="PASS" starttime="20220705 11:51:06.405" endtime="20220705 11:51:06.406"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 11:51:06.583" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 11:51:06.406" endtime="20220705 11:51:06.583"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 11:51:06.584" endtime="20220705 11:51:06.584"/>
</return>
<msg timestamp="20220705 11:51:06.584" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 11:51:06.403" endtime="20220705 11:51:06.584"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 11:51:06.584" endtime="20220705 11:51:06.584"/>
</return>
<msg timestamp="20220705 11:51:06.584" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 11:51:06.402" endtime="20220705 11:51:06.584"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 11:51:06.585" endtime="20220705 11:51:06.585"/>
</return>
<msg timestamp="20220705 11:51:06.586" level="INFO">${CARD_ID} = 62c425aa4e12cc5b9fb4b03e</msg>
<status status="PASS" starttime="20220705 11:51:06.584" endtime="20220705 11:51:06.586"/>
</kw>
<kw name="Archive A Card" library="Card">
<arg>${CARD_ID}</arg>
<doc>Modifies the card status to closed.</doc>
<kw name="Update A Card" library="Card">
<var>${response}</var>
<arg>${id}</arg>
<arg>closed</arg>
<arg>true</arg>
<arg>status_code=${status_code}</arg>
<doc>Updates the card with the given ID
optional_args: name, desc, closed, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<arg>status_code=${status_code}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 11:51:06.588" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 11:51:06.588" endtime="20220705 11:51:06.588"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 11:51:06.589" endtime="20220705 11:51:06.589"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 11:51:06.589" level="INFO">${url} = cards/62c425aa4e12cc5b9fb4b03e</msg>
<status status="PASS" starttime="20220705 11:51:06.589" endtime="20220705 11:51:06.589"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 11:51:06.833" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 11:51:06.589" endtime="20220705 11:51:06.833"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 11:51:06.834" endtime="20220705 11:51:06.834"/>
</return>
<msg timestamp="20220705 11:51:06.834" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 11:51:06.587" endtime="20220705 11:51:06.834"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 11:51:06.834" endtime="20220705 11:51:06.834"/>
</return>
<msg timestamp="20220705 11:51:06.834" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 11:51:06.586" endtime="20220705 11:51:06.834"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 11:51:06.834" endtime="20220705 11:51:06.834"/>
</return>
<status status="PASS" starttime="20220705 11:51:06.586" endtime="20220705 11:51:06.835"/>
</kw>
<kw name="Get A Card" library="Card">
<var>${response}</var>
<arg>${CARD_ID}</arg>
<doc>Gets the card with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 11:51:06.836" level="INFO">${url} = cards/62c425aa4e12cc5b9fb4b03e</msg>
<status status="PASS" starttime="20220705 11:51:06.836" endtime="20220705 11:51:06.836"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 11:51:06.941" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 11:51:06.836" endtime="20220705 11:51:06.941"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 11:51:06.941" endtime="20220705 11:51:06.941"/>
</return>
<msg timestamp="20220705 11:51:06.942" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 11:51:06.835" endtime="20220705 11:51:06.942"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 11:51:06.942" endtime="20220705 11:51:06.942"/>
</return>
<msg timestamp="20220705 11:51:06.942" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 11:51:06.835" endtime="20220705 11:51:06.942"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_CLOSED}</var>
<arg>${response}</arg>
<arg>closed</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 11:51:06.943" endtime="20220705 11:51:06.943"/>
</return>
<msg timestamp="20220705 11:51:06.944" level="INFO">${CARD_CLOSED} = True</msg>
<status status="PASS" starttime="20220705 11:51:06.942" endtime="20220705 11:51:06.944"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${CARD_CLOSED}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220705 11:51:06.944" endtime="20220705 11:51:06.945"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Card</arg>
<arg>${CARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Card" library="Card">
<arg>${CARD_ID}</arg>
<doc>Deletes the card with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 11:51:06.946" level="INFO">${url} = cards/62c425aa4e12cc5b9fb4b03e</msg>
<status status="PASS" starttime="20220705 11:51:06.946" endtime="20220705 11:51:06.946"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 11:51:07.117" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 11:51:06.947" endtime="20220705 11:51:07.117"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 11:51:07.117" endtime="20220705 11:51:07.117"/>
</return>
<msg timestamp="20220705 11:51:07.117" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 11:51:06.946" endtime="20220705 11:51:07.117"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 11:51:07.117" endtime="20220705 11:51:07.117"/>
</return>
<status status="PASS" starttime="20220705 11:51:06.945" endtime="20220705 11:51:07.118"/>
</kw>
<status status="PASS" starttime="20220705 11:51:06.945" endtime="20220705 11:51:07.118"/>
</kw>
<doc>Verify that a card can be closed through API</doc>
<tag>api</tag>
<tag>card.close</tag>
<tag>regression</tag>
<status status="PASS" starttime="20220705 11:51:06.401" endtime="20220705 11:51:07.118"/>
</test>
<test id="s1-s1-s2-t3" name="Verify A Card Can Be Deleted" line="35">
<kw name="Create A Card" library="Card">
<var>${response}</var>
<doc>Creates a new card in the given list.
required_args: listId
optional_args: name, desc, pos, idCardSource, idLabels, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>@{optional_args}</arg>
<arg>idList</arg>
<arg>${idList}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 11:51:07.121" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 11:51:07.121" endtime="20220705 11:51:07.121"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 11:51:07.121" endtime="20220705 11:51:07.122"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 11:51:07.123" level="INFO">${url} = cards/</msg>
<status status="PASS" starttime="20220705 11:51:07.122" endtime="20220705 11:51:07.123"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 11:51:07.331" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 11:51:07.123" endtime="20220705 11:51:07.331"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 11:51:07.331" endtime="20220705 11:51:07.331"/>
</return>
<msg timestamp="20220705 11:51:07.331" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 11:51:07.120" endtime="20220705 11:51:07.331"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 11:51:07.331" endtime="20220705 11:51:07.332"/>
</return>
<msg timestamp="20220705 11:51:07.332" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 11:51:07.120" endtime="20220705 11:51:07.332"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 11:51:07.332" endtime="20220705 11:51:07.332"/>
</return>
<msg timestamp="20220705 11:51:07.333" level="INFO">${CARD_ID} = 62c425abd86fed3e85ad001f</msg>
<status status="PASS" starttime="20220705 11:51:07.332" endtime="20220705 11:51:07.333"/>
</kw>
<kw name="Delete A Card" library="Card">
<var>${response}</var>
<arg>${CARD_ID}</arg>
<doc>Deletes the card with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 11:51:07.335" level="INFO">${url} = cards/62c425abd86fed3e85ad001f</msg>
<status status="PASS" starttime="20220705 11:51:07.334" endtime="20220705 11:51:07.335"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 11:51:07.535" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 11:51:07.335" endtime="20220705 11:51:07.535"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 11:51:07.535" endtime="20220705 11:51:07.535"/>
</return>
<msg timestamp="20220705 11:51:07.535" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 11:51:07.334" endtime="20220705 11:51:07.535"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 11:51:07.535" endtime="20220705 11:51:07.535"/>
</return>
<msg timestamp="20220705 11:51:07.536" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 11:51:07.333" endtime="20220705 11:51:07.536"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>delete</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 11:51:07.536" endtime="20220705 11:51:07.538"/>
</kw>
<status status="PASS" starttime="20220705 11:51:07.536" endtime="20220705 11:51:07.538"/>
</kw>
<kw name="Get A Card" library="Card">
<arg>${CARD_ID}</arg>
<arg>status_code=404</arg>
<doc>Gets the card with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 11:51:07.540" level="INFO">${url} = cards/62c425abd86fed3e85ad001f</msg>
<status status="PASS" starttime="20220705 11:51:07.539" endtime="20220705 11:51:07.540"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 11:51:07.610" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220705 11:51:07.540" endtime="20220705 11:51:07.610"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 11:51:07.610" endtime="20220705 11:51:07.610"/>
</return>
<msg timestamp="20220705 11:51:07.611" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220705 11:51:07.539" endtime="20220705 11:51:07.611"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 11:51:07.611" endtime="20220705 11:51:07.611"/>
</return>
<status status="PASS" starttime="20220705 11:51:07.538" endtime="20220705 11:51:07.611"/>
</kw>
<doc>Verify that a card can be deleted through API</doc>
<tag>api</tag>
<tag>card.delete</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220705 11:51:07.118" endtime="20220705 11:51:07.611"/>
</test>
<test id="s1-s1-s2-t4" name="Verify A Card Can Be Updated" line="44">
<kw name="Create A Card" library="Card">
<var>${response}</var>
<arg>name</arg>
<arg>RFCard4</arg>
<doc>Creates a new card in the given list.
required_args: listId
optional_args: name, desc, pos, idCardSource, idLabels, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>@{optional_args}</arg>
<arg>idList</arg>
<arg>${idList}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 11:51:07.614" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 11:51:07.614" endtime="20220705 11:51:07.614"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 11:51:07.614" endtime="20220705 11:51:07.615"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 11:51:07.616" level="INFO">${url} = cards/</msg>
<status status="PASS" starttime="20220705 11:51:07.615" endtime="20220705 11:51:07.616"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 11:51:07.806" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 11:51:07.616" endtime="20220705 11:51:07.806"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 11:51:07.806" endtime="20220705 11:51:07.806"/>
</return>
<msg timestamp="20220705 11:51:07.807" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 11:51:07.613" endtime="20220705 11:51:07.807"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 11:51:07.807" endtime="20220705 11:51:07.807"/>
</return>
<msg timestamp="20220705 11:51:07.807" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 11:51:07.613" endtime="20220705 11:51:07.807"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 11:51:07.808" endtime="20220705 11:51:07.808"/>
</return>
<msg timestamp="20220705 11:51:07.809" level="INFO">${CARD_ID} = 62c425ab32109d63758e884f</msg>
<status status="PASS" starttime="20220705 11:51:07.807" endtime="20220705 11:51:07.809"/>
</kw>
<kw name="Update A Card" library="Card">
<var>${response}</var>
<arg>${CARD_ID}</arg>
<arg>name</arg>
<arg>RFCard5</arg>
<arg>desc</arg>
<arg>Description</arg>
<doc>Updates the card with the given ID
optional_args: name, desc, closed, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<arg>status_code=${status_code}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 11:51:07.810" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 11:51:07.810" endtime="20220705 11:51:07.810"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 11:51:07.810" endtime="20220705 11:51:07.810"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 11:51:07.811" level="INFO">${url} = cards/62c425ab32109d63758e884f</msg>
<status status="PASS" starttime="20220705 11:51:07.811" endtime="20220705 11:51:07.811"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 11:51:07.996" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 11:51:07.811" endtime="20220705 11:51:07.996"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 11:51:07.997" endtime="20220705 11:51:07.997"/>
</return>
<msg timestamp="20220705 11:51:07.997" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 11:51:07.809" endtime="20220705 11:51:07.997"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 11:51:07.997" endtime="20220705 11:51:07.997"/>
</return>
<msg timestamp="20220705 11:51:07.997" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 11:51:07.809" endtime="20220705 11:51:07.997"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>card</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 11:51:07.998" endtime="20220705 11:51:08.004"/>
</kw>
<status status="PASS" starttime="20220705 11:51:07.997" endtime="20220705 11:51:08.004"/>
</kw>
<kw name="Get A Card" library="Card">
<var>${response}</var>
<arg>${CARD_ID}</arg>
<doc>Gets the card with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 11:51:08.006" level="INFO">${url} = cards/62c425ab32109d63758e884f</msg>
<status status="PASS" starttime="20220705 11:51:08.006" endtime="20220705 11:51:08.006"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 11:51:08.095" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 11:51:08.006" endtime="20220705 11:51:08.095"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 11:51:08.095" endtime="20220705 11:51:08.095"/>
</return>
<msg timestamp="20220705 11:51:08.095" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 11:51:08.005" endtime="20220705 11:51:08.095"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 11:51:08.095" endtime="20220705 11:51:08.095"/>
</return>
<msg timestamp="20220705 11:51:08.095" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 11:51:08.005" endtime="20220705 11:51:08.095"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_NAME}</var>
<arg>${response}</arg>
<arg>name</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 11:51:08.096" endtime="20220705 11:51:08.096"/>
</return>
<msg timestamp="20220705 11:51:08.097" level="INFO">${CARD_NAME} = RFCard5</msg>
<status status="PASS" starttime="20220705 11:51:08.096" endtime="20220705 11:51:08.097"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_DESC}</var>
<arg>${response}</arg>
<arg>desc</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 11:51:08.097" endtime="20220705 11:51:08.097"/>
</return>
<msg timestamp="20220705 11:51:08.098" level="INFO">${CARD_DESC} = Description</msg>
<status status="PASS" starttime="20220705 11:51:08.097" endtime="20220705 11:51:08.098"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${CARD_NAME}</arg>
<arg>RFCard5</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220705 11:51:08.098" endtime="20220705 11:51:08.098"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${CARD_DESC}</arg>
<arg>Description</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220705 11:51:08.099" endtime="20220705 11:51:08.099"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Card</arg>
<arg>${CARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Card" library="Card">
<arg>${CARD_ID}</arg>
<doc>Deletes the card with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 11:51:08.101" level="INFO">${url} = cards/62c425ab32109d63758e884f</msg>
<status status="PASS" starttime="20220705 11:51:08.100" endtime="20220705 11:51:08.101"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 11:51:08.304" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 11:51:08.101" endtime="20220705 11:51:08.304"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 11:51:08.304" endtime="20220705 11:51:08.304"/>
</return>
<msg timestamp="20220705 11:51:08.304" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 11:51:08.100" endtime="20220705 11:51:08.304"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 11:51:08.304" endtime="20220705 11:51:08.304"/>
</return>
<status status="PASS" starttime="20220705 11:51:08.099" endtime="20220705 11:51:08.305"/>
</kw>
<status status="PASS" starttime="20220705 11:51:08.099" endtime="20220705 11:51:08.305"/>
</kw>
<doc>Verify that a card's name and Description can be updated through API</doc>
<tag>api</tag>
<tag>card.update</tag>
<tag>regression</tag>
<status status="PASS" starttime="20220705 11:51:07.612" endtime="20220705 11:51:08.305"/>
</test>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Teardown Board</arg>
<arg>Delete All Sessions</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Teardown Board">
<doc>Delete the board created for this suite</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 11:51:08.309" level="INFO">${url} = boards/62c425a98924d18d62fbcc10</msg>
<status status="PASS" starttime="20220705 11:51:08.309" endtime="20220705 11:51:08.309"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 11:51:08.697" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 11:51:08.309" endtime="20220705 11:51:08.697"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 11:51:08.697" endtime="20220705 11:51:08.697"/>
</return>
<msg timestamp="20220705 11:51:08.698" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 11:51:08.308" endtime="20220705 11:51:08.698"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 11:51:08.698" endtime="20220705 11:51:08.698"/>
</return>
<status status="PASS" starttime="20220705 11:51:08.307" endtime="20220705 11:51:08.698"/>
</kw>
<status status="PASS" starttime="20220705 11:51:08.307" endtime="20220705 11:51:08.698"/>
</kw>
<status status="PASS" starttime="20220705 11:51:08.307" endtime="20220705 11:51:08.698"/>
</kw>
<kw name="Delete All Sessions" library="request_own_library">
<status status="PASS" starttime="20220705 11:51:08.698" endtime="20220705 11:51:08.700"/>
</kw>
<status status="PASS" starttime="20220705 11:51:08.306" endtime="20220705 11:51:08.700"/>
</kw>
<doc>Example Test with Trello API Cards</doc>
<status status="PASS" starttime="20220705 11:51:05.447" endtime="20220705 11:51:08.700"/>
</suite>
<suite id="s1-s1-s3" name="Trello Api Checklists Tests" source="/trello/api/trello_api_checklists_tests.robot">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Create Trello Session</arg>
<arg>Setup Board, List And Card</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Create Trello Session" library="TrelloAPI">
<doc>Creates a Trello Session</doc>
<kw name="Create Session" library="request_own_library">
<arg>${API_BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<status status="PASS" starttime="20220705 11:51:08.714" endtime="20220705 11:51:08.714"/>
</kw>
<status status="PASS" starttime="20220705 11:51:08.714" endtime="20220705 11:51:08.715"/>
</kw>
<kw name="Setup Board, List And Card">
<doc>Create a board and save its ID and its first list's ID</doc>
<kw name="Create A Board" library="Board">
<var>${BOARD}</var>
<arg>TestBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 11:51:08.716" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 11:51:08.716" endtime="20220705 11:51:08.716"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 11:51:08.716" endtime="20220705 11:51:08.716"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 11:51:08.717" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220705 11:51:08.716" endtime="20220705 11:51:08.717"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 11:51:09.043" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 11:51:08.717" endtime="20220705 11:51:09.043"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 11:51:09.044" endtime="20220705 11:51:09.044"/>
</return>
<msg timestamp="20220705 11:51:09.044" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 11:51:08.715" endtime="20220705 11:51:09.044"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 11:51:09.044" endtime="20220705 11:51:09.044"/>
</return>
<msg timestamp="20220705 11:51:09.044" level="INFO">${BOARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 11:51:08.715" endtime="20220705 11:51:09.044"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_BOARD_ID}</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220705 11:51:09.046" level="INFO">${TEST_SUITE_BOARD_ID} = 62c425ac241632316f62bb16</msg>
<status status="PASS" starttime="20220705 11:51:09.044" endtime="20220705 11:51:09.046"/>
</kw>
<kw name="Get Lists On A Board" library="Board">
<var>${LISTS}</var>
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Get all the lists in a board</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>lists_on_board</arg>
<arg>${id}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 11:51:09.047" level="INFO">${url} = boards/62c425ac241632316f62bb16/lists/</msg>
<status status="PASS" starttime="20220705 11:51:09.047" endtime="20220705 11:51:09.047"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 11:51:09.128" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 11:51:09.047" endtime="20220705 11:51:09.128"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 11:51:09.129" endtime="20220705 11:51:09.129"/>
</return>
<msg timestamp="20220705 11:51:09.129" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 11:51:09.046" endtime="20220705 11:51:09.129"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 11:51:09.129" endtime="20220705 11:51:09.129"/>
</return>
<msg timestamp="20220705 11:51:09.129" level="INFO">${LISTS} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 11:51:09.046" endtime="20220705 11:51:09.129"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_LIST_ID}</arg>
<arg>${LISTS.json()}[0][id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220705 11:51:09.130" level="INFO">${TEST_SUITE_LIST_ID} = 62c425ac241632316f62bb1d</msg>
<status status="PASS" starttime="20220705 11:51:09.129" endtime="20220705 11:51:09.130"/>
</kw>
<kw name="Create A Card" library="Card">
<var>${CARD}</var>
<arg>name</arg>
<arg>TestCard</arg>
<doc>Creates a new card in the given list.
required_args: listId
optional_args: name, desc, pos, idCardSource, idLabels, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>@{optional_args}</arg>
<arg>idList</arg>
<arg>${idList}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 11:51:09.132" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 11:51:09.131" endtime="20220705 11:51:09.132"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 11:51:09.132" endtime="20220705 11:51:09.132"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 11:51:09.133" level="INFO">${url} = cards/</msg>
<status status="PASS" starttime="20220705 11:51:09.132" endtime="20220705 11:51:09.133"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 11:51:09.335" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 11:51:09.133" endtime="20220705 11:51:09.335"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 11:51:09.335" endtime="20220705 11:51:09.335"/>
</return>
<msg timestamp="20220705 11:51:09.336" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 11:51:09.131" endtime="20220705 11:51:09.336"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 11:51:09.336" endtime="20220705 11:51:09.336"/>
</return>
<msg timestamp="20220705 11:51:09.336" level="INFO">${CARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 11:51:09.130" endtime="20220705 11:51:09.336"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_CARD_ID}</arg>
<arg>${CARD.json()}[id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220705 11:51:09.337" level="INFO">${TEST_SUITE_CARD_ID} = 62c425ada920cc14bae79cc6</msg>
<status status="PASS" starttime="20220705 11:51:09.336" endtime="20220705 11:51:09.338"/>
</kw>
<status status="PASS" starttime="20220705 11:51:08.715" endtime="20220705 11:51:09.338"/>
</kw>
<status status="PASS" starttime="20220705 11:51:08.713" endtime="20220705 11:51:09.338"/>
</kw>
<test id="s1-s1-s3-t1" name="Verify A Checklist Can Be Created" line="14">
<kw name="Create A Checklist" library="Checklist">
<var>${response}</var>
<arg>name</arg>
<arg>TestChecklist</arg>
<arg>idCard=${TEST_SUITE_CARD_ID}</arg>
<doc>Creates a new checklist in the given card.
required_args: idCard
optional_args: name, pos, idChecklistSource
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>@{optional_args}</arg>
<arg>idCard</arg>
<arg>${idCard}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 11:51:09.340" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 11:51:09.340" endtime="20220705 11:51:09.340"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 11:51:09.341" endtime="20220705 11:51:09.341"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 11:51:09.342" level="INFO">${url} = checklists/</msg>
<status status="PASS" starttime="20220705 11:51:09.341" endtime="20220705 11:51:09.342"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 11:51:09.484" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 11:51:09.342" endtime="20220705 11:51:09.484"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 11:51:09.484" endtime="20220705 11:51:09.484"/>
</return>
<msg timestamp="20220705 11:51:09.484" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 11:51:09.340" endtime="20220705 11:51:09.484"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 11:51:09.484" endtime="20220705 11:51:09.485"/>
</return>
<msg timestamp="20220705 11:51:09.485" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 11:51:09.339" endtime="20220705 11:51:09.485"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${checklist_id}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 11:51:09.485" endtime="20220705 11:51:09.485"/>
</return>
<msg timestamp="20220705 11:51:09.486" level="INFO">${checklist_id} = 62c425ad83df04370827f575</msg>
<status status="PASS" starttime="20220705 11:51:09.485" endtime="20220705 11:51:09.486"/>
</kw>
<kw name="Get A Checklist" library="Checklist">
<var>${response}</var>
<arg>${checklist_id}</arg>
<doc>Gets the checklist with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 11:51:09.488" level="INFO">${url} = checklists/62c425ad83df04370827f575</msg>
<status status="PASS" starttime="20220705 11:51:09.488" endtime="20220705 11:51:09.488"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 11:51:09.576" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 11:51:09.488" endtime="20220705 11:51:09.576"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 11:51:09.576" endtime="20220705 11:51:09.576"/>
</return>
<msg timestamp="20220705 11:51:09.577" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 11:51:09.487" endtime="20220705 11:51:09.577"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 11:51:09.577" endtime="20220705 11:51:09.577"/>
</return>
<msg timestamp="20220705 11:51:09.577" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 11:51:09.486" endtime="20220705 11:51:09.577"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${checklist_name}</var>
<arg>${response}</arg>
<arg>name</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 11:51:09.578" endtime="20220705 11:51:09.578"/>
</return>
<msg timestamp="20220705 11:51:09.578" level="INFO">${checklist_name} = TestChecklist</msg>
<status status="PASS" starttime="20220705 11:51:09.577" endtime="20220705 11:51:09.578"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${checklist_name}</arg>
<arg>TestChecklist</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220705 11:51:09.579" endtime="20220705 11:51:09.579"/>
</kw>
<kw name="Delete A Checklist" library="Checklist" type="TEARDOWN">
<arg>${checklist_id}</arg>
<doc>Deletes the checklist with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 11:51:09.581" level="INFO">${url} = checklists/62c425ad83df04370827f575</msg>
<status status="PASS" starttime="20220705 11:51:09.580" endtime="20220705 11:51:09.581"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 11:51:09.900" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 11:51:09.581" endtime="20220705 11:51:09.900"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 11:51:09.900" endtime="20220705 11:51:09.900"/>
</return>
<msg timestamp="20220705 11:51:09.900" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 11:51:09.580" endtime="20220705 11:51:09.900"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 11:51:09.900" endtime="20220705 11:51:09.900"/>
</return>
<status status="PASS" starttime="20220705 11:51:09.579" endtime="20220705 11:51:09.900"/>
</kw>
<doc>Verify that a checklist can be created through API</doc>
<tag>api</tag>
<tag>checklist.create</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220705 11:51:09.338" endtime="20220705 11:51:09.900"/>
</test>
<test id="s1-s1-s3-t2" name="Verify A Checklist Can Be Deleted" line="24">
<kw name="Create A Checklist" library="Checklist">
<var>${response}</var>
<arg>name</arg>
<arg>TestChecklist</arg>
<arg>idCard=${TEST_SUITE_CARD_ID}</arg>
<doc>Creates a new checklist in the given card.
required_args: idCard
optional_args: name, pos, idChecklistSource
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>@{optional_args}</arg>
<arg>idCard</arg>
<arg>${idCard}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 11:51:09.904" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 11:51:09.904" endtime="20220705 11:51:09.904"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 11:51:09.904" endtime="20220705 11:51:09.905"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 11:51:09.905" level="INFO">${url} = checklists/</msg>
<status status="PASS" starttime="20220705 11:51:09.905" endtime="20220705 11:51:09.906"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 11:51:10.038" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 11:51:09.906" endtime="20220705 11:51:10.038"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 11:51:10.038" endtime="20220705 11:51:10.038"/>
</return>
<msg timestamp="20220705 11:51:10.039" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 11:51:09.903" endtime="20220705 11:51:10.039"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 11:51:10.039" endtime="20220705 11:51:10.039"/>
</return>
<msg timestamp="20220705 11:51:10.039" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 11:51:09.902" endtime="20220705 11:51:10.039"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${checklist_id}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 11:51:10.040" endtime="20220705 11:51:10.040"/>
</return>
<msg timestamp="20220705 11:51:10.041" level="INFO">${checklist_id} = 62c425adcb31815163352f3c</msg>
<status status="PASS" starttime="20220705 11:51:10.039" endtime="20220705 11:51:10.041"/>
</kw>
<kw name="Delete A Checklist" library="Checklist">
<var>${response}</var>
<arg>${checklist_id}</arg>
<doc>Deletes the checklist with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 11:51:10.043" level="INFO">${url} = checklists/62c425adcb31815163352f3c</msg>
<status status="PASS" starttime="20220705 11:51:10.042" endtime="20220705 11:51:10.043"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 11:51:10.187" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 11:51:10.043" endtime="20220705 11:51:10.187"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 11:51:10.187" endtime="20220705 11:51:10.187"/>
</return>
<msg timestamp="20220705 11:51:10.188" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 11:51:10.042" endtime="20220705 11:51:10.188"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 11:51:10.188" endtime="20220705 11:51:10.188"/>
</return>
<msg timestamp="20220705 11:51:10.188" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 11:51:10.042" endtime="20220705 11:51:10.188"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>delete</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 11:51:10.189" endtime="20220705 11:51:10.191"/>
</kw>
<status status="PASS" starttime="20220705 11:51:10.188" endtime="20220705 11:51:10.191"/>
</kw>
<kw name="Get A Checklist" library="Checklist">
<arg>${checklist_id}</arg>
<arg>status_code=404</arg>
<doc>Gets the checklist with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 11:51:10.192" level="INFO">${url} = checklists/62c425adcb31815163352f3c</msg>
<status status="PASS" starttime="20220705 11:51:10.192" endtime="20220705 11:51:10.192"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 11:51:10.262" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220705 11:51:10.192" endtime="20220705 11:51:10.262"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 11:51:10.262" endtime="20220705 11:51:10.262"/>
</return>
<msg timestamp="20220705 11:51:10.262" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220705 11:51:10.191" endtime="20220705 11:51:10.262"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 11:51:10.262" endtime="20220705 11:51:10.262"/>
</return>
<status status="PASS" starttime="20220705 11:51:10.191" endtime="20220705 11:51:10.262"/>
</kw>
<doc>Verify that a checklist can be deleted through API</doc>
<tag>api</tag>
<tag>checklist.delete</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220705 11:51:09.901" endtime="20220705 11:51:10.262"/>
</test>
<test id="s1-s1-s3-t3" name="Verify A Checklist Can Be Updated" line="33">
<kw name="Create A Checklist" library="Checklist">
<var>${response}</var>
<arg>name</arg>
<arg>TestChecklist</arg>
<arg>idCard=${TEST_SUITE_CARD_ID}</arg>
<doc>Creates a new checklist in the given card.
required_args: idCard
optional_args: name, pos, idChecklistSource
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>@{optional_args}</arg>
<arg>idCard</arg>
<arg>${idCard}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 11:51:10.267" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 11:51:10.265" endtime="20220705 11:51:10.267"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 11:51:10.267" endtime="20220705 11:51:10.268"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 11:51:10.269" level="INFO">${url} = checklists/</msg>
<status status="PASS" starttime="20220705 11:51:10.268" endtime="20220705 11:51:10.269"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 11:51:10.422" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 11:51:10.269" endtime="20220705 11:51:10.423"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 11:51:10.423" endtime="20220705 11:51:10.423"/>
</return>
<msg timestamp="20220705 11:51:10.423" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 11:51:10.265" endtime="20220705 11:51:10.423"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 11:51:10.423" endtime="20220705 11:51:10.423"/>
</return>
<msg timestamp="20220705 11:51:10.423" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 11:51:10.264" endtime="20220705 11:51:10.423"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${checklist_id}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 11:51:10.424" endtime="20220705 11:51:10.424"/>
</return>
<msg timestamp="20220705 11:51:10.425" level="INFO">${checklist_id} = 62c425aed1fb373e1dfc43ba</msg>
<status status="PASS" starttime="20220705 11:51:10.424" endtime="20220705 11:51:10.425"/>
</kw>
<kw name="Update A Checklist" library="Checklist">
<var>${response}</var>
<arg>${checklist_id}</arg>
<arg>name</arg>
<arg>TestChecklist2</arg>
<doc>Updates the checklist with the given ID
optional_args: name, pos
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<arg>status_code=${status_code}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 11:51:10.429" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 11:51:10.429" endtime="20220705 11:51:10.429"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 11:51:10.429" endtime="20220705 11:51:10.430"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 11:51:10.430" level="INFO">${url} = checklists/62c425aed1fb373e1dfc43ba</msg>
<status status="PASS" starttime="20220705 11:51:10.430" endtime="20220705 11:51:10.430"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 11:51:10.578" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 11:51:10.430" endtime="20220705 11:51:10.578"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 11:51:10.578" endtime="20220705 11:51:10.578"/>
</return>
<msg timestamp="20220705 11:51:10.579" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 11:51:10.428" endtime="20220705 11:51:10.579"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 11:51:10.579" endtime="20220705 11:51:10.579"/>
</return>
<msg timestamp="20220705 11:51:10.579" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 11:51:10.426" endtime="20220705 11:51:10.579"/>
</kw>
<kw name="Get A Checklist" library="Checklist">
<var>${response}</var>
<arg>${checklist_id}</arg>
<doc>Gets the checklist with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 11:51:10.581" level="INFO">${url} = checklists/62c425aed1fb373e1dfc43ba</msg>
<status status="PASS" starttime="20220705 11:51:10.580" endtime="20220705 11:51:10.581"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 11:51:10.675" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 11:51:10.581" endtime="20220705 11:51:10.675"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 11:51:10.675" endtime="20220705 11:51:10.676"/>
</return>
<msg timestamp="20220705 11:51:10.676" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 11:51:10.580" endtime="20220705 11:51:10.676"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 11:51:10.676" endtime="20220705 11:51:10.676"/>
</return>
<msg timestamp="20220705 11:51:10.676" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 11:51:10.579" endtime="20220705 11:51:10.676"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${checklist_name}</var>
<arg>${response}</arg>
<arg>name</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 11:51:10.677" endtime="20220705 11:51:10.677"/>
</return>
<msg timestamp="20220705 11:51:10.678" level="INFO">${checklist_name} = TestChecklist2</msg>
<status status="PASS" starttime="20220705 11:51:10.677" endtime="20220705 11:51:10.678"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${checklist_name}</arg>
<arg>TestChecklist2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220705 11:51:10.678" endtime="20220705 11:51:10.679"/>
</kw>
<kw name="Delete A Checklist" library="Checklist" type="TEARDOWN">
<arg>${checklist_id}</arg>
<doc>Deletes the checklist with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 11:51:10.691" level="INFO">${url} = checklists/62c425aed1fb373e1dfc43ba</msg>
<status status="PASS" starttime="20220705 11:51:10.690" endtime="20220705 11:51:10.691"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 11:51:10.851" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 11:51:10.691" endtime="20220705 11:51:10.851"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 11:51:10.851" endtime="20220705 11:51:10.851"/>
</return>
<msg timestamp="20220705 11:51:10.851" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 11:51:10.690" endtime="20220705 11:51:10.851"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 11:51:10.851" endtime="20220705 11:51:10.851"/>
</return>
<status status="PASS" starttime="20220705 11:51:10.679" endtime="20220705 11:51:10.851"/>
</kw>
<doc>Verify that a checklist's name can be updated through API</doc>
<tag>api</tag>
<tag>checklist.update</tag>
<tag>regression</tag>
<status status="PASS" starttime="20220705 11:51:10.263" endtime="20220705 11:51:10.851"/>
</test>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Teardown Board</arg>
<arg>Delete All Sessions</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Teardown Board">
<doc>Delete the board created for this suite</doc>
<kw name="Delete A Board" library="Board">
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 11:51:10.855" level="INFO">${url} = boards/62c425ac241632316f62bb16</msg>
<status status="PASS" starttime="20220705 11:51:10.854" endtime="20220705 11:51:10.855"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 11:51:11.311" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 11:51:10.855" endtime="20220705 11:51:11.311"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 11:51:11.311" endtime="20220705 11:51:11.311"/>
</return>
<msg timestamp="20220705 11:51:11.312" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 11:51:10.854" endtime="20220705 11:51:11.312"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 11:51:11.312" endtime="20220705 11:51:11.312"/>
</return>
<status status="PASS" starttime="20220705 11:51:10.854" endtime="20220705 11:51:11.312"/>
</kw>
<status status="PASS" starttime="20220705 11:51:10.853" endtime="20220705 11:51:11.312"/>
</kw>
<kw name="Delete All Sessions" library="request_own_library">
<status status="PASS" starttime="20220705 11:51:11.312" endtime="20220705 11:51:11.314"/>
</kw>
<status status="PASS" starttime="20220705 11:51:10.853" endtime="20220705 11:51:11.314"/>
</kw>
<doc>Example Test with Trello API Checklists</doc>
<status status="PASS" starttime="20220705 11:51:08.702" endtime="20220705 11:51:11.314"/>
</suite>
<suite id="s1-s1-s4" name="Trello Api Labels Tests" source="/trello/api/trello_api_labels_tests.robot">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Create Trello Session</arg>
<arg>Setup Board And List</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Create Trello Session" library="TrelloAPI">
<doc>Creates a Trello Session</doc>
<kw name="Create Session" library="request_own_library">
<arg>${API_BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<status status="PASS" starttime="20220705 11:51:11.326" endtime="20220705 11:51:11.327"/>
</kw>
<status status="PASS" starttime="20220705 11:51:11.326" endtime="20220705 11:51:11.327"/>
</kw>
<kw name="Setup Board And List">
<doc>Create a board and save its ID and its first list's ID</doc>
<kw name="Create A Board" library="Board">
<var>${BOARD}</var>
<arg>TestBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 11:51:11.328" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 11:51:11.328" endtime="20220705 11:51:11.328"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 11:51:11.328" endtime="20220705 11:51:11.329"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 11:51:11.329" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220705 11:51:11.329" endtime="20220705 11:51:11.329"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 11:51:11.639" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 11:51:11.329" endtime="20220705 11:51:11.639"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 11:51:11.639" endtime="20220705 11:51:11.640"/>
</return>
<msg timestamp="20220705 11:51:11.640" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 11:51:11.327" endtime="20220705 11:51:11.640"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 11:51:11.640" endtime="20220705 11:51:11.640"/>
</return>
<msg timestamp="20220705 11:51:11.640" level="INFO">${BOARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 11:51:11.327" endtime="20220705 11:51:11.640"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_BOARD_ID}</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220705 11:51:11.641" level="INFO">${TEST_SUITE_BOARD_ID} = 62c425af206e4b3070774e57</msg>
<status status="PASS" starttime="20220705 11:51:11.640" endtime="20220705 11:51:11.641"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${LISTS}</var>
<arg>boards/${TEST_SUITE_BOARD_ID}/lists</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 11:51:11.723" level="INFO">${LISTS} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 11:51:11.641" endtime="20220705 11:51:11.723"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_LIST_ID}</arg>
<arg>${LISTS.json()}[0][id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220705 11:51:11.724" level="INFO">${TEST_SUITE_LIST_ID} = 62c425af206e4b3070774e5e</msg>
<status status="PASS" starttime="20220705 11:51:11.723" endtime="20220705 11:51:11.724"/>
</kw>
<status status="PASS" starttime="20220705 11:51:11.327" endtime="20220705 11:51:11.724"/>
</kw>
<status status="PASS" starttime="20220705 11:51:11.326" endtime="20220705 11:51:11.724"/>
</kw>
<test id="s1-s1-s4-t1" name="Create and get label on board" line="14">
<kw name="Create A Label" library="Label">
<var>${response}</var>
<arg>name</arg>
<arg>label2</arg>
<arg>color</arg>
<arg>yellow</arg>
<doc>Creates a new label in the given board.
required_args: idBoard
optional_args: name, color
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>idBoard</arg>
<arg>${idBoard}</arg>
<arg>@{optional_args}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 11:51:11.727" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 11:51:11.726" endtime="20220705 11:51:11.727"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 11:51:11.727" endtime="20220705 11:51:11.727"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 11:51:11.728" level="INFO">${url} = labels/</msg>
<status status="PASS" starttime="20220705 11:51:11.727" endtime="20220705 11:51:11.728"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 11:51:11.901" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 11:51:11.728" endtime="20220705 11:51:11.901"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 11:51:11.901" endtime="20220705 11:51:11.901"/>
</return>
<msg timestamp="20220705 11:51:11.902" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 11:51:11.726" endtime="20220705 11:51:11.902"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 11:51:11.902" endtime="20220705 11:51:11.902"/>
</return>
<msg timestamp="20220705 11:51:11.902" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 11:51:11.725" endtime="20220705 11:51:11.902"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>label</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 11:51:11.903" endtime="20220705 11:51:11.907"/>
</kw>
<status status="PASS" starttime="20220705 11:51:11.902" endtime="20220705 11:51:11.907"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${LABEL_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 11:51:11.908" endtime="20220705 11:51:11.908"/>
</return>
<msg timestamp="20220705 11:51:11.909" level="INFO">${LABEL_ID} = 62c425af28187c6002bdc948</msg>
<status status="PASS" starttime="20220705 11:51:11.907" endtime="20220705 11:51:11.909"/>
</kw>
<kw name="Get A Label" library="Label">
<var>${response}</var>
<arg>${LABEL_ID}</arg>
<doc>Gets the label with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 11:51:11.911" level="INFO">${url} = labels/62c425af28187c6002bdc948</msg>
<status status="PASS" starttime="20220705 11:51:11.910" endtime="20220705 11:51:11.911"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 11:51:11.994" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 11:51:11.911" endtime="20220705 11:51:11.994"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 11:51:11.994" endtime="20220705 11:51:11.994"/>
</return>
<msg timestamp="20220705 11:51:11.995" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 11:51:11.910" endtime="20220705 11:51:11.995"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 11:51:11.995" endtime="20220705 11:51:11.995"/>
</return>
<msg timestamp="20220705 11:51:11.995" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 11:51:11.909" endtime="20220705 11:51:11.995"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${LABEL_COLOR}</var>
<arg>${response}</arg>
<arg>color</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 11:51:11.996" endtime="20220705 11:51:11.996"/>
</return>
<msg timestamp="20220705 11:51:11.996" level="INFO">${LABEL_COLOR} = yellow</msg>
<status status="PASS" starttime="20220705 11:51:11.995" endtime="20220705 11:51:11.996"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${LABEL_NAME}</var>
<arg>${response}</arg>
<arg>name</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 11:51:11.997" endtime="20220705 11:51:11.997"/>
</return>
<msg timestamp="20220705 11:51:11.998" level="INFO">${LABEL_NAME} = label2</msg>
<status status="PASS" starttime="20220705 11:51:11.997" endtime="20220705 11:51:11.998"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${LABEL_COLOR}</arg>
<arg>yellow</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220705 11:51:11.998" endtime="20220705 11:51:11.998"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${LABEL_NAME}</arg>
<arg>label2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220705 11:51:11.999" endtime="20220705 11:51:11.999"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Label</arg>
<arg>${LABEL_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Label" library="Label">
<arg>${LABEL_ID}</arg>
<doc>Deletes the label with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 11:51:12.001" level="INFO">${url} = labels/62c425af28187c6002bdc948</msg>
<status status="PASS" starttime="20220705 11:51:12.001" endtime="20220705 11:51:12.001"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 11:51:12.165" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 11:51:12.002" endtime="20220705 11:51:12.165"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 11:51:12.166" endtime="20220705 11:51:12.166"/>
</return>
<msg timestamp="20220705 11:51:12.166" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 11:51:12.000" endtime="20220705 11:51:12.166"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 11:51:12.166" endtime="20220705 11:51:12.166"/>
</return>
<status status="PASS" starttime="20220705 11:51:12.000" endtime="20220705 11:51:12.166"/>
</kw>
<status status="PASS" starttime="20220705 11:51:11.999" endtime="20220705 11:51:12.166"/>
</kw>
<doc>Verify that a label can be created through API</doc>
<tag>api</tag>
<tag>label.create</tag>
<tag>label.get</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220705 11:51:11.725" endtime="20220705 11:51:12.166"/>
</test>
<test id="s1-s1-s4-t2" name="Update label on board" line="28">
<kw name="Create A Label" library="Label">
<var>${response}</var>
<arg>name</arg>
<arg>label2</arg>
<arg>color</arg>
<arg>yellow</arg>
<doc>Creates a new label in the given board.
required_args: idBoard
optional_args: name, color
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>idBoard</arg>
<arg>${idBoard}</arg>
<arg>@{optional_args}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 11:51:12.169" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 11:51:12.169" endtime="20220705 11:51:12.169"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 11:51:12.169" endtime="20220705 11:51:12.170"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 11:51:12.170" level="INFO">${url} = labels/</msg>
<status status="PASS" starttime="20220705 11:51:12.170" endtime="20220705 11:51:12.170"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 11:51:12.324" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 11:51:12.171" endtime="20220705 11:51:12.324"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 11:51:12.324" endtime="20220705 11:51:12.324"/>
</return>
<msg timestamp="20220705 11:51:12.325" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 11:51:12.168" endtime="20220705 11:51:12.325"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 11:51:12.325" endtime="20220705 11:51:12.325"/>
</return>
<msg timestamp="20220705 11:51:12.325" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 11:51:12.168" endtime="20220705 11:51:12.325"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>label</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 11:51:12.326" endtime="20220705 11:51:12.328"/>
</kw>
<status status="PASS" starttime="20220705 11:51:12.325" endtime="20220705 11:51:12.328"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${LABEL_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 11:51:12.329" endtime="20220705 11:51:12.329"/>
</return>
<msg timestamp="20220705 11:51:12.330" level="INFO">${LABEL_ID} = 62c425b06a400c6e8c75eef1</msg>
<status status="PASS" starttime="20220705 11:51:12.328" endtime="20220705 11:51:12.330"/>
</kw>
<kw name="Update A Label" library="Label">
<var>${new_response}</var>
<arg>${LABEL_ID}</arg>
<arg>name</arg>
<arg>label3</arg>
<arg>color</arg>
<arg>orange</arg>
<doc>Updates the label with the given ID
optional_args: name, color
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 11:51:12.331" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 11:51:12.331" endtime="20220705 11:51:12.331"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 11:51:12.331" endtime="20220705 11:51:12.331"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 11:51:12.332" level="INFO">${url} = labels/62c425b06a400c6e8c75eef1</msg>
<status status="PASS" starttime="20220705 11:51:12.332" endtime="20220705 11:51:12.332"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 11:51:12.459" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 11:51:12.332" endtime="20220705 11:51:12.459"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 11:51:12.459" endtime="20220705 11:51:12.459"/>
</return>
<msg timestamp="20220705 11:51:12.459" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 11:51:12.330" endtime="20220705 11:51:12.459"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 11:51:12.459" endtime="20220705 11:51:12.460"/>
</return>
<msg timestamp="20220705 11:51:12.460" level="INFO">${new_response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 11:51:12.330" endtime="20220705 11:51:12.460"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${NEW_LABEL_COLOR}</var>
<arg>${new_response}</arg>
<arg>color</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 11:51:12.460" endtime="20220705 11:51:12.460"/>
</return>
<msg timestamp="20220705 11:51:12.461" level="INFO">${NEW_LABEL_COLOR} = orange</msg>
<status status="PASS" starttime="20220705 11:51:12.460" endtime="20220705 11:51:12.461"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${NEW_LABEL_NAME}</var>
<arg>${new_response}</arg>
<arg>name</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 11:51:12.462" endtime="20220705 11:51:12.462"/>
</return>
<msg timestamp="20220705 11:51:12.462" level="INFO">${NEW_LABEL_NAME} = label3</msg>
<status status="PASS" starttime="20220705 11:51:12.461" endtime="20220705 11:51:12.462"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${NEW_LABEL_COLOR}</arg>
<arg>orange</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220705 11:51:12.463" endtime="20220705 11:51:12.463"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${NEW_LABEL_NAME}</arg>
<arg>label3</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220705 11:51:12.463" endtime="20220705 11:51:12.463"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Label</arg>
<arg>${LABEL_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Label" library="Label">
<arg>${LABEL_ID}</arg>
<doc>Deletes the label with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 11:51:12.466" level="INFO">${url} = labels/62c425b06a400c6e8c75eef1</msg>
<status status="PASS" starttime="20220705 11:51:12.465" endtime="20220705 11:51:12.466"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 11:51:12.621" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 11:51:12.466" endtime="20220705 11:51:12.621"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 11:51:12.622" endtime="20220705 11:51:12.622"/>
</return>
<msg timestamp="20220705 11:51:12.622" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 11:51:12.465" endtime="20220705 11:51:12.622"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 11:51:12.622" endtime="20220705 11:51:12.622"/>
</return>
<status status="PASS" starttime="20220705 11:51:12.464" endtime="20220705 11:51:12.622"/>
</kw>
<status status="PASS" starttime="20220705 11:51:12.464" endtime="20220705 11:51:12.622"/>
</kw>
<doc>Verify that a label's name and color can be updated through API</doc>
<tag>api</tag>
<tag>label.update</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220705 11:51:12.167" endtime="20220705 11:51:12.622"/>
</test>
<test id="s1-s1-s4-t3" name="Delete label on board" line="41">
<kw name="Create A Label" library="Label">
<var>${response}</var>
<arg>name</arg>
<arg>label2</arg>
<arg>color</arg>
<arg>yellow</arg>
<doc>Creates a new label in the given board.
required_args: idBoard
optional_args: name, color
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>idBoard</arg>
<arg>${idBoard}</arg>
<arg>@{optional_args}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 11:51:12.625" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 11:51:12.624" endtime="20220705 11:51:12.625"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 11:51:12.625" endtime="20220705 11:51:12.625"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 11:51:12.626" level="INFO">${url} = labels/</msg>
<status status="PASS" starttime="20220705 11:51:12.625" endtime="20220705 11:51:12.626"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 11:51:12.750" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 11:51:12.626" endtime="20220705 11:51:12.750"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 11:51:12.750" endtime="20220705 11:51:12.750"/>
</return>
<msg timestamp="20220705 11:51:12.750" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 11:51:12.624" endtime="20220705 11:51:12.750"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 11:51:12.750" endtime="20220705 11:51:12.750"/>
</return>
<msg timestamp="20220705 11:51:12.751" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 11:51:12.623" endtime="20220705 11:51:12.751"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${LABEL_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220705 11:51:12.751" endtime="20220705 11:51:12.752"/>
</return>
<msg timestamp="20220705 11:51:12.752" level="INFO">${LABEL_ID} = 62c425b033b6c8261307cfef</msg>
<status status="PASS" starttime="20220705 11:51:12.751" endtime="20220705 11:51:12.752"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Label</arg>
<arg>${LABEL_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Label" library="Label">
<arg>${LABEL_ID}</arg>
<doc>Deletes the label with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 11:51:12.755" level="INFO">${url} = labels/62c425b033b6c8261307cfef</msg>
<status status="PASS" starttime="20220705 11:51:12.754" endtime="20220705 11:51:12.755"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 11:51:12.912" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 11:51:12.755" endtime="20220705 11:51:12.912"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 11:51:12.912" endtime="20220705 11:51:12.912"/>
</return>
<msg timestamp="20220705 11:51:12.913" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 11:51:12.754" endtime="20220705 11:51:12.913"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 11:51:12.913" endtime="20220705 11:51:12.913"/>
</return>
<status status="PASS" starttime="20220705 11:51:12.753" endtime="20220705 11:51:12.914"/>
</kw>
<status status="PASS" starttime="20220705 11:51:12.753" endtime="20220705 11:51:12.914"/>
</kw>
<kw name="Get A Label" library="Label">
<arg>${LABEL_ID}</arg>
<arg>status_code=404</arg>
<doc>Gets the label with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 11:51:12.919" level="INFO">${url} = labels/62c425b033b6c8261307cfef</msg>
<status status="PASS" starttime="20220705 11:51:12.917" endtime="20220705 11:51:12.919"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 11:51:12.989" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220705 11:51:12.919" endtime="20220705 11:51:12.989"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 11:51:12.989" endtime="20220705 11:51:12.989"/>
</return>
<msg timestamp="20220705 11:51:12.990" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220705 11:51:12.915" endtime="20220705 11:51:12.990"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 11:51:12.990" endtime="20220705 11:51:12.990"/>
</return>
<status status="PASS" starttime="20220705 11:51:12.914" endtime="20220705 11:51:12.990"/>
</kw>
<doc>Verify that a label can be deleted through API</doc>
<tag>api</tag>
<tag>label.delete</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220705 11:51:12.623" endtime="20220705 11:51:12.990"/>
</test>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Teardown Board</arg>
<arg>Delete All Sessions</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Teardown Board">
<doc>Delete the board created for this session.</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 11:51:12.993" level="INFO">${url} = boards/62c425af206e4b3070774e57</msg>
<status status="PASS" starttime="20220705 11:51:12.993" endtime="20220705 11:51:12.993"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 11:51:13.371" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 11:51:12.994" endtime="20220705 11:51:13.371"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 11:51:13.371" endtime="20220705 11:51:13.371"/>
</return>
<msg timestamp="20220705 11:51:13.372" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 11:51:12.992" endtime="20220705 11:51:13.372"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 11:51:13.372" endtime="20220705 11:51:13.372"/>
</return>
<status status="PASS" starttime="20220705 11:51:12.992" endtime="20220705 11:51:13.372"/>
</kw>
<status status="PASS" starttime="20220705 11:51:12.992" endtime="20220705 11:51:13.372"/>
</kw>
<status status="PASS" starttime="20220705 11:51:12.991" endtime="20220705 11:51:13.372"/>
</kw>
<kw name="Delete All Sessions" library="request_own_library">
<status status="PASS" starttime="20220705 11:51:13.373" endtime="20220705 11:51:13.374"/>
</kw>
<status status="PASS" starttime="20220705 11:51:12.991" endtime="20220705 11:51:13.374"/>
</kw>
<doc>Example Test with Trello API Cards</doc>
<status status="PASS" starttime="20220705 11:51:11.315" endtime="20220705 11:51:13.374"/>
</suite>
<suite id="s1-s1-s5" name="Trello Api Lists Tests" source="/trello/api/trello_api_lists_tests.robot">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Create Trello Session</arg>
<arg>Setup Board</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Create Trello Session" library="TrelloAPI">
<doc>Creates a Trello Session</doc>
<kw name="Create Session" library="request_own_library">
<arg>${API_BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<status status="PASS" starttime="20220705 11:51:13.388" endtime="20220705 11:51:13.388"/>
</kw>
<status status="PASS" starttime="20220705 11:51:13.387" endtime="20220705 11:51:13.388"/>
</kw>
<kw name="Setup Board">
<doc>Create a board and save it's id for the suite</doc>
<kw name="Create A Board" library="Board">
<var>${BOARD}</var>
<arg>TestBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 11:51:13.389" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 11:51:13.389" endtime="20220705 11:51:13.389"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 11:51:13.390" endtime="20220705 11:51:13.390"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 11:51:13.391" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220705 11:51:13.390" endtime="20220705 11:51:13.391"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 11:51:13.695" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 11:51:13.391" endtime="20220705 11:51:13.695"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 11:51:13.695" endtime="20220705 11:51:13.695"/>
</return>
<msg timestamp="20220705 11:51:13.696" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 11:51:13.389" endtime="20220705 11:51:13.696"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 11:51:13.696" endtime="20220705 11:51:13.696"/>
</return>
<msg timestamp="20220705 11:51:13.696" level="INFO">${BOARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 11:51:13.388" endtime="20220705 11:51:13.696"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Set Suite Variable</arg>
<arg>\${TEST_SUITE_BOARD_ID}</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_BOARD_ID}</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220705 11:51:13.697" level="INFO">${TEST_SUITE_BOARD_ID} = 62c425b1d0dee71584b688ce</msg>
<status status="PASS" starttime="20220705 11:51:13.697" endtime="20220705 11:51:13.697"/>
</kw>
<status status="PASS" starttime="20220705 11:51:13.696" endtime="20220705 11:51:13.697"/>
</kw>
<status status="PASS" starttime="20220705 11:51:13.388" endtime="20220705 11:51:13.698"/>
</kw>
<status status="PASS" starttime="20220705 11:51:13.387" endtime="20220705 11:51:13.698"/>
</kw>
<test id="s1-s1-s5-t1" name="CREATE a list" line="13">
<kw name="Create A List" library="List">
<var>${response}</var>
<arg>NewList</arg>
<doc>Creates a new List
board id
name the list will have
optional_args: idListSource, pos, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>list</arg>
<arg>name</arg>
<arg>${name}</arg>
<arg>idBoard</arg>
<arg>${idBoard}</arg>
<arg>@{optional_args}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 11:51:13.700" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 11:51:13.700" endtime="20220705 11:51:13.700"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 11:51:13.700" endtime="20220705 11:51:13.701"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 11:51:13.702" level="INFO">${url} = lists/</msg>
<status status="PASS" starttime="20220705 11:51:13.701" endtime="20220705 11:51:13.702"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 11:51:13.837" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 11:51:13.702" endtime="20220705 11:51:13.837"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 11:51:13.837" endtime="20220705 11:51:13.837"/>
</return>
<msg timestamp="20220705 11:51:13.837" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 11:51:13.699" endtime="20220705 11:51:13.837"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 11:51:13.837" endtime="20220705 11:51:13.837"/>
</return>
<msg timestamp="20220705 11:51:13.837" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 11:51:13.699" endtime="20220705 11:51:13.837"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>list</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 11:51:13.838" endtime="20220705 11:51:13.840"/>
</kw>
<status status="PASS" starttime="20220705 11:51:13.838" endtime="20220705 11:51:13.840"/>
</kw>
<doc>Verify that a list can be created through API</doc>
<tag>api</tag>
<tag>list.create</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220705 11:51:13.698" endtime="20220705 11:51:13.841"/>
</test>
<test id="s1-s1-s5-t2" name="UPDATE a list" line="19">
<kw name="Create A List" library="List">
<var>${response}</var>
<arg>NewList</arg>
<doc>Creates a new List
board id
name the list will have
optional_args: idListSource, pos, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>list</arg>
<arg>name</arg>
<arg>${name}</arg>
<arg>idBoard</arg>
<arg>${idBoard}</arg>
<arg>@{optional_args}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 11:51:13.845" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 11:51:13.845" endtime="20220705 11:51:13.845"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 11:51:13.845" endtime="20220705 11:51:13.846"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 11:51:13.846" level="INFO">${url} = lists/</msg>
<status status="PASS" starttime="20220705 11:51:13.846" endtime="20220705 11:51:13.847"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 11:51:13.981" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 11:51:13.847" endtime="20220705 11:51:13.981"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 11:51:13.981" endtime="20220705 11:51:13.981"/>
</return>
<msg timestamp="20220705 11:51:13.981" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 11:51:13.842" endtime="20220705 11:51:13.981"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 11:51:13.981" endtime="20220705 11:51:13.981"/>
</return>
<msg timestamp="20220705 11:51:13.982" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 11:51:13.842" endtime="20220705 11:51:13.982"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>list</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 11:51:13.983" endtime="20220705 11:51:13.985"/>
</kw>
<status status="PASS" starttime="20220705 11:51:13.982" endtime="20220705 11:51:13.985"/>
</kw>
<kw name="Update A List" library="List">
<arg>${response.json()}[id]</arg>
<arg>name</arg>
<arg>NewName</arg>
<doc>Updates the board with the given ID
optional_args: name, idListSource, pos, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>list</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 11:51:13.987" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 11:51:13.987" endtime="20220705 11:51:13.988"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 11:51:13.988" endtime="20220705 11:51:13.988"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 11:51:13.988" level="INFO">${url} = lists/62c425b1bfba3e8a215821f9</msg>
<status status="PASS" starttime="20220705 11:51:13.988" endtime="20220705 11:51:13.988"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 11:51:14.095" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 11:51:13.989" endtime="20220705 11:51:14.095"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 11:51:14.095" endtime="20220705 11:51:14.095"/>
</return>
<msg timestamp="20220705 11:51:14.095" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 11:51:13.986" endtime="20220705 11:51:14.095"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 11:51:14.095" endtime="20220705 11:51:14.095"/>
</return>
<status status="PASS" starttime="20220705 11:51:13.985" endtime="20220705 11:51:14.096"/>
</kw>
<kw name="Get A List" library="List">
<var>${new_response}</var>
<arg>${response.json()}[id]</arg>
<doc>Gets the List with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>list</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 11:51:14.098" level="INFO">${url} = lists/62c425b1bfba3e8a215821f9</msg>
<status status="PASS" starttime="20220705 11:51:14.098" endtime="20220705 11:51:14.098"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 11:51:14.185" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 11:51:14.098" endtime="20220705 11:51:14.185"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 11:51:14.185" endtime="20220705 11:51:14.185"/>
</return>
<msg timestamp="20220705 11:51:14.185" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 11:51:14.097" endtime="20220705 11:51:14.185"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 11:51:14.185" endtime="20220705 11:51:14.186"/>
</return>
<msg timestamp="20220705 11:51:14.186" level="INFO">${new_response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 11:51:14.096" endtime="20220705 11:51:14.186"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${new_response}</arg>
<arg>list</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220705 11:51:14.186" endtime="20220705 11:51:14.188"/>
</kw>
<status status="PASS" starttime="20220705 11:51:14.186" endtime="20220705 11:51:14.189"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${new_response.json()}[name]</arg>
<arg>NewName</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220705 11:51:14.189" endtime="20220705 11:51:14.190"/>
</kw>
<doc>Verify that a lists name can be updated through API</doc>
<tag>api</tag>
<tag>list.update</tag>
<tag>regression</tag>
<status status="PASS" starttime="20220705 11:51:13.841" endtime="20220705 11:51:14.190"/>
</test>
<test id="s1-s1-s5-t3" name="ARCHIVE A list" line="29">
<kw name="Create A List" library="List">
<var>${response}</var>
<arg>NewList</arg>
<doc>Creates a new List
board id
name the list will have
optional_args: idListSource, pos, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>list</arg>
<arg>name</arg>
<arg>${name}</arg>
<arg>idBoard</arg>
<arg>${idBoard}</arg>
<arg>@{optional_args}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 11:51:14.196" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 11:51:14.196" endtime="20220705 11:51:14.196"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 11:51:14.196" endtime="20220705 11:51:14.196"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 11:51:14.197" level="INFO">${url} = lists/</msg>
<status status="PASS" starttime="20220705 11:51:14.196" endtime="20220705 11:51:14.197"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 11:51:14.321" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 11:51:14.197" endtime="20220705 11:51:14.321"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 11:51:14.321" endtime="20220705 11:51:14.321"/>
</return>
<msg timestamp="20220705 11:51:14.322" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 11:51:14.195" endtime="20220705 11:51:14.322"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 11:51:14.322" endtime="20220705 11:51:14.322"/>
</return>
<msg timestamp="20220705 11:51:14.322" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 11:51:14.192" endtime="20220705 11:51:14.322"/>
</kw>
<kw name="Archive A List" library="List">
<arg>${response.json()}[id]</arg>
<doc>Deletes the list with the given ID</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>archive_list</arg>
<arg>${id}</arg>
<arg>value</arg>
<arg>true</arg>
<arg>status_code=${status_code}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220705 11:51:14.325" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220705 11:51:14.324" endtime="20220705 11:51:14.325"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220705 11:51:14.325" endtime="20220705 11:51:14.325"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 11:51:14.326" level="INFO">${url} = lists/62c425b2a2b2c36db1ddfadc/closed</msg>
<status status="PASS" starttime="20220705 11:51:14.326" endtime="20220705 11:51:14.326"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220705 11:51:14.454" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 11:51:14.326" endtime="20220705 11:51:14.454"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 11:51:14.454" endtime="20220705 11:51:14.454"/>
</return>
<msg timestamp="20220705 11:51:14.454" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 11:51:14.323" endtime="20220705 11:51:14.454"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 11:51:14.454" endtime="20220705 11:51:14.454"/>
</return>
<status status="PASS" starttime="20220705 11:51:14.322" endtime="20220705 11:51:14.454"/>
</kw>
<kw name="Get A List" library="List">
<var>${new_response}</var>
<arg>${response.json()}[id]</arg>
<doc>Gets the List with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>list</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 11:51:14.457" level="INFO">${url} = lists/62c425b2a2b2c36db1ddfadc</msg>
<status status="PASS" starttime="20220705 11:51:14.456" endtime="20220705 11:51:14.457"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220705 11:51:14.536" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 11:51:14.457" endtime="20220705 11:51:14.536"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 11:51:14.537" endtime="20220705 11:51:14.537"/>
</return>
<msg timestamp="20220705 11:51:14.537" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 11:51:14.456" endtime="20220705 11:51:14.537"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 11:51:14.537" endtime="20220705 11:51:14.537"/>
</return>
<msg timestamp="20220705 11:51:14.537" level="INFO">${new_response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 11:51:14.455" endtime="20220705 11:51:14.537"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${new_response.json()}[closed]</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220705 11:51:14.537" endtime="20220705 11:51:14.539"/>
</kw>
<doc>Verify that a list can be archived through API</doc>
<tag>api</tag>
<tag>list.archive</tag>
<tag>regression</tag>
<status status="PASS" starttime="20220705 11:51:14.190" endtime="20220705 11:51:14.539"/>
</test>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Teardown Board</arg>
<arg>Delete All Sessions</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Teardown Board">
<doc>Delete the board created for this suite.</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220705 11:51:14.542" level="INFO">${url} = boards/62c425b1d0dee71584b688ce</msg>
<status status="PASS" starttime="20220705 11:51:14.542" endtime="20220705 11:51:14.542"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220705 11:51:14.907" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 11:51:14.542" endtime="20220705 11:51:14.907"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 11:51:14.908" endtime="20220705 11:51:14.908"/>
</return>
<msg timestamp="20220705 11:51:14.908" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220705 11:51:14.541" endtime="20220705 11:51:14.908"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220705 11:51:14.908" endtime="20220705 11:51:14.908"/>
</return>
<status status="PASS" starttime="20220705 11:51:14.541" endtime="20220705 11:51:14.908"/>
</kw>
<status status="PASS" starttime="20220705 11:51:14.540" endtime="20220705 11:51:14.908"/>
</kw>
<status status="PASS" starttime="20220705 11:51:14.540" endtime="20220705 11:51:14.909"/>
</kw>
<kw name="Delete All Sessions" library="request_own_library">
<status status="PASS" starttime="20220705 11:51:14.909" endtime="20220705 11:51:14.910"/>
</kw>
<status status="PASS" starttime="20220705 11:51:14.540" endtime="20220705 11:51:14.910"/>
</kw>
<doc>Example Test with Trello API lists</doc>
<status status="PASS" starttime="20220705 11:51:13.377" endtime="20220705 11:51:14.910"/>
</suite>
<status status="PASS" starttime="20220705 11:51:00.774" endtime="20220705 11:51:14.914"/>
</suite>
<status status="PASS" starttime="20220705 11:51:00.748" endtime="20220705 11:51:14.918"/>
</suite>
<statistics>
<total>
<stat pass="18" fail="0" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="18" fail="0" skip="0">api</stat>
<stat pass="1" fail="0" skip="0">board.create</stat>
<stat pass="1" fail="0" skip="0">board.delete</stat>
<stat pass="1" fail="0" skip="0">board.get</stat>
<stat pass="2" fail="0" skip="0">board.update</stat>
<stat pass="1" fail="0" skip="0">card.close</stat>
<stat pass="1" fail="0" skip="0">card.create</stat>
<stat pass="1" fail="0" skip="0">card.delete</stat>
<stat pass="1" fail="0" skip="0">card.update</stat>
<stat pass="1" fail="0" skip="0">checklist.create</stat>
<stat pass="1" fail="0" skip="0">checklist.delete</stat>
<stat pass="1" fail="0" skip="0">checklist.update</stat>
<stat pass="1" fail="0" skip="0">label.create</stat>
<stat pass="1" fail="0" skip="0">label.delete</stat>
<stat pass="1" fail="0" skip="0">label.get</stat>
<stat pass="1" fail="0" skip="0">label.update</stat>
<stat pass="1" fail="0" skip="0">list.archive</stat>
<stat pass="1" fail="0" skip="0">list.create</stat>
<stat pass="1" fail="0" skip="0">list.update</stat>
<stat pass="5" fail="0" skip="0">regression</stat>
<stat pass="13" fail="0" skip="0">smoke</stat>
</tag>
<suite>
<stat pass="18" fail="0" skip="0" id="s1" name="Trello">Trello</stat>
<stat pass="18" fail="0" skip="0" id="s1-s1" name="Api">Trello.Api</stat>
<stat pass="5" fail="0" skip="0" id="s1-s1-s1" name="Trello Api Boards Tests">Trello.Api.Trello Api Boards Tests</stat>
<stat pass="4" fail="0" skip="0" id="s1-s1-s2" name="Trello Api Cards Tests">Trello.Api.Trello Api Cards Tests</stat>
<stat pass="3" fail="0" skip="0" id="s1-s1-s3" name="Trello Api Checklists Tests">Trello.Api.Trello Api Checklists Tests</stat>
<stat pass="3" fail="0" skip="0" id="s1-s1-s4" name="Trello Api Labels Tests">Trello.Api.Trello Api Labels Tests</stat>
<stat pass="3" fail="0" skip="0" id="s1-s1-s5" name="Trello Api Lists Tests">Trello.Api.Trello Api Lists Tests</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
