<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Rebot 5.0.1 (Python 3.10.5 on linux)" generated="20220704 14:19:24.164" rpa="false" schemaversion="3">
<suite id="s1" name="Trello">
<suite id="s1-s1" name="Trello" source="/trello">
<suite id="s1-s1-s1" name="Api" source="/trello/api">
<suite id="s1-s1-s1-s1" name="Trello Api Boards Tests" source="/trello/api/trello_api_boards_tests.robot">
<kw name="Create Trello Session" library="TrelloAPI" type="SETUP">
<doc>Creates a Trello Session</doc>
<kw name="Create Session" library="request_own_library">
<arg>${API_BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<status status="PASS" starttime="20220704 14:15:36.737" endtime="20220704 14:15:36.737"/>
</kw>
<status status="PASS" starttime="20220704 14:15:36.736" endtime="20220704 14:15:36.737"/>
</kw>
<test id="s1-s1-s1-s1-t1" name="CREATE a board" line="9">
<kw name="Create A Board" library="Board">
<var>${response}</var>
<arg>NewBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 14:15:36.739" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 14:15:36.739" endtime="20220704 14:15:36.739"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 14:15:36.739" endtime="20220704 14:15:36.740"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:15:36.740" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220704 14:15:36.740" endtime="20220704 14:15:36.740"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 14:15:37.121" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:36.741" endtime="20220704 14:15:37.121"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:15:37.121" endtime="20220704 14:15:37.121"/>
</return>
<msg timestamp="20220704 14:15:37.121" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:36.739" endtime="20220704 14:15:37.121"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:15:37.121" endtime="20220704 14:15:37.121"/>
</return>
<msg timestamp="20220704 14:15:37.121" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:36.738" endtime="20220704 14:15:37.121"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>board</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220704 14:15:37.122" endtime="20220704 14:15:37.126"/>
</kw>
<status status="PASS" starttime="20220704 14:15:37.121" endtime="20220704 14:15:37.126"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${response.json()}[id]</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${response.json()}[id]</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:15:37.129" level="INFO">${url} = boards/62c2f6088ca98b5e4aa92aa4</msg>
<status status="PASS" starttime="20220704 14:15:37.128" endtime="20220704 14:15:37.129"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 14:15:37.656" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:37.129" endtime="20220704 14:15:37.656"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:15:37.656" endtime="20220704 14:15:37.656"/>
</return>
<msg timestamp="20220704 14:15:37.656" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:37.128" endtime="20220704 14:15:37.656"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:15:37.657" endtime="20220704 14:15:37.657"/>
</return>
<status status="PASS" starttime="20220704 14:15:37.127" endtime="20220704 14:15:37.657"/>
</kw>
<status status="PASS" starttime="20220704 14:15:37.127" endtime="20220704 14:15:37.657"/>
</kw>
<doc>Verify that a board can be create through API</doc>
<tag>api</tag>
<tag>board.create</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220704 14:15:36.738" endtime="20220704 14:15:37.657"/>
</test>
<test id="s1-s1-s1-s1-t2" name="UPDATE a Board's name" line="16">
<kw name="Create A Board" library="Board">
<var>${response}</var>
<arg>NewBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 14:15:37.660" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 14:15:37.660" endtime="20220704 14:15:37.660"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 14:15:37.660" endtime="20220704 14:15:37.660"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:15:37.661" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220704 14:15:37.660" endtime="20220704 14:15:37.661"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 14:15:37.923" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:37.661" endtime="20220704 14:15:37.923"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:15:37.923" endtime="20220704 14:15:37.923"/>
</return>
<msg timestamp="20220704 14:15:37.924" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:37.659" endtime="20220704 14:15:37.924"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:15:37.924" endtime="20220704 14:15:37.924"/>
</return>
<msg timestamp="20220704 14:15:37.924" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:37.658" endtime="20220704 14:15:37.924"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>board</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220704 14:15:37.924" endtime="20220704 14:15:37.928"/>
</kw>
<status status="PASS" starttime="20220704 14:15:37.924" endtime="20220704 14:15:37.928"/>
</kw>
<kw name="Update A Board" library="Board">
<arg>${response.json()}[id]</arg>
<arg>name</arg>
<arg>NewName</arg>
<doc>Updates the board with the given ID
optional_args: name, desc, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 14:15:37.930" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 14:15:37.930" endtime="20220704 14:15:37.930"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 14:15:37.930" endtime="20220704 14:15:37.930"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:15:37.931" level="INFO">${url} = boards/62c2f609ef3d4f2bf3e17a54</msg>
<status status="PASS" starttime="20220704 14:15:37.930" endtime="20220704 14:15:37.931"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 14:15:38.107" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:37.931" endtime="20220704 14:15:38.107"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:15:38.107" endtime="20220704 14:15:38.107"/>
</return>
<msg timestamp="20220704 14:15:38.107" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:37.929" endtime="20220704 14:15:38.107"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:15:38.107" endtime="20220704 14:15:38.107"/>
</return>
<status status="PASS" starttime="20220704 14:15:37.929" endtime="20220704 14:15:38.107"/>
</kw>
<kw name="Get A Board" library="Board">
<var>${new_response}</var>
<arg>${response.json()}[id]</arg>
<doc>Gets the Board with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:15:38.109" level="INFO">${url} = boards/62c2f609ef3d4f2bf3e17a54</msg>
<status status="PASS" starttime="20220704 14:15:38.109" endtime="20220704 14:15:38.109"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 14:15:38.248" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:38.109" endtime="20220704 14:15:38.248"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:15:38.248" endtime="20220704 14:15:38.248"/>
</return>
<msg timestamp="20220704 14:15:38.248" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:38.108" endtime="20220704 14:15:38.248"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:15:38.248" endtime="20220704 14:15:38.248"/>
</return>
<msg timestamp="20220704 14:15:38.249" level="INFO">${new_response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:38.107" endtime="20220704 14:15:38.249"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${new_response}</arg>
<arg>board</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220704 14:15:38.249" endtime="20220704 14:15:38.253"/>
</kw>
<status status="PASS" starttime="20220704 14:15:38.249" endtime="20220704 14:15:38.253"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${new_response.json()}[name]</arg>
<arg>NewName</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220704 14:15:38.253" endtime="20220704 14:15:38.254"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${response.json()}[id]</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${response.json()}[id]</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:15:38.256" level="INFO">${url} = boards/62c2f609ef3d4f2bf3e17a54</msg>
<status status="PASS" starttime="20220704 14:15:38.256" endtime="20220704 14:15:38.256"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 14:15:38.668" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:38.256" endtime="20220704 14:15:38.668"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:15:38.668" endtime="20220704 14:15:38.668"/>
</return>
<msg timestamp="20220704 14:15:38.668" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:38.255" endtime="20220704 14:15:38.668"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:15:38.668" endtime="20220704 14:15:38.668"/>
</return>
<status status="PASS" starttime="20220704 14:15:38.254" endtime="20220704 14:15:38.669"/>
</kw>
<status status="PASS" starttime="20220704 14:15:38.254" endtime="20220704 14:15:38.669"/>
</kw>
<doc>Verify that a board's name can be updated through API</doc>
<tag>api</tag>
<tag>board.update</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220704 14:15:37.657" endtime="20220704 14:15:38.669"/>
</test>
<test id="s1-s1-s1-s1-t3" name="DELETE A Board" line="27">
<kw name="Create A Board" library="Board">
<var>${response}</var>
<arg>NewBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 14:15:38.671" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 14:15:38.671" endtime="20220704 14:15:38.671"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 14:15:38.671" endtime="20220704 14:15:38.671"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:15:38.672" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220704 14:15:38.671" endtime="20220704 14:15:38.672"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 14:15:38.988" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:38.672" endtime="20220704 14:15:38.988"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:15:38.988" endtime="20220704 14:15:38.988"/>
</return>
<msg timestamp="20220704 14:15:38.989" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:38.670" endtime="20220704 14:15:38.989"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:15:38.989" endtime="20220704 14:15:38.989"/>
</return>
<msg timestamp="20220704 14:15:38.989" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:38.670" endtime="20220704 14:15:38.989"/>
</kw>
<kw name="Delete A Board" library="Board">
<arg>${response.json()}[id]</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:15:38.991" level="INFO">${url} = boards/62c2f60aef5e0e3f1f91adbd</msg>
<status status="PASS" starttime="20220704 14:15:38.991" endtime="20220704 14:15:38.991"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 14:15:39.647" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:38.991" endtime="20220704 14:15:39.647"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:15:39.648" endtime="20220704 14:15:39.648"/>
</return>
<msg timestamp="20220704 14:15:39.648" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:38.990" endtime="20220704 14:15:39.648"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:15:39.648" endtime="20220704 14:15:39.648"/>
</return>
<status status="PASS" starttime="20220704 14:15:38.989" endtime="20220704 14:15:39.648"/>
</kw>
<kw name="Get A Board" library="Board">
<arg>${response.json()}[id]</arg>
<arg>status_code=404</arg>
<doc>Gets the Board with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:15:39.650" level="INFO">${url} = boards/62c2f60aef5e0e3f1f91adbd</msg>
<status status="PASS" starttime="20220704 14:15:39.650" endtime="20220704 14:15:39.650"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 14:15:39.773" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220704 14:15:39.650" endtime="20220704 14:15:39.773"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:15:39.774" endtime="20220704 14:15:39.774"/>
</return>
<msg timestamp="20220704 14:15:39.774" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220704 14:15:39.649" endtime="20220704 14:15:39.774"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:15:39.774" endtime="20220704 14:15:39.774"/>
</return>
<status status="PASS" starttime="20220704 14:15:39.648" endtime="20220704 14:15:39.774"/>
</kw>
<doc>Verify that a board can be deleted through API</doc>
<tag>api</tag>
<tag>board.delete</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220704 14:15:38.669" endtime="20220704 14:15:39.774"/>
</test>
<test id="s1-s1-s1-s1-t4" name="GET Information of A Board" line="34">
<kw name="Create A Board" library="Board">
<var>${response}</var>
<arg>BoardTest</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 14:15:39.777" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 14:15:39.777" endtime="20220704 14:15:39.777"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 14:15:39.777" endtime="20220704 14:15:39.778"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:15:39.779" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220704 14:15:39.778" endtime="20220704 14:15:39.779"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 14:15:40.029" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:39.779" endtime="20220704 14:15:40.029"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:15:40.029" endtime="20220704 14:15:40.029"/>
</return>
<msg timestamp="20220704 14:15:40.029" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:39.777" endtime="20220704 14:15:40.029"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:15:40.029" endtime="20220704 14:15:40.029"/>
</return>
<msg timestamp="20220704 14:15:40.029" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:39.776" endtime="20220704 14:15:40.030"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>board</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220704 14:15:40.030" endtime="20220704 14:15:40.034"/>
</kw>
<status status="PASS" starttime="20220704 14:15:40.030" endtime="20220704 14:15:40.035"/>
</kw>
<kw name="Get A Board" library="Board">
<var>${response2}</var>
<arg>${response.json()}[id]</arg>
<doc>Gets the Board with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:15:40.036" level="INFO">${url} = boards/62c2f60b87c6192d8cdf6ed2</msg>
<status status="PASS" starttime="20220704 14:15:40.036" endtime="20220704 14:15:40.036"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 14:15:40.174" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:40.037" endtime="20220704 14:15:40.174"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:15:40.174" endtime="20220704 14:15:40.174"/>
</return>
<msg timestamp="20220704 14:15:40.175" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:40.036" endtime="20220704 14:15:40.175"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:15:40.175" endtime="20220704 14:15:40.175"/>
</return>
<msg timestamp="20220704 14:15:40.175" level="INFO">${response2} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:40.035" endtime="20220704 14:15:40.175"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response2}</arg>
<arg>board</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220704 14:15:40.176" endtime="20220704 14:15:40.180"/>
</kw>
<status status="PASS" starttime="20220704 14:15:40.175" endtime="20220704 14:15:40.180"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${response2.json()}[name]</arg>
<arg>BoardTest</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220704 14:15:40.180" endtime="20220704 14:15:40.181"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${response.json()}[id]</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${response.json()}[id]</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:15:40.183" level="INFO">${url} = boards/62c2f60b87c6192d8cdf6ed2</msg>
<status status="PASS" starttime="20220704 14:15:40.182" endtime="20220704 14:15:40.183"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 14:15:40.691" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:40.183" endtime="20220704 14:15:40.691"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:15:40.691" endtime="20220704 14:15:40.691"/>
</return>
<msg timestamp="20220704 14:15:40.691" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:40.182" endtime="20220704 14:15:40.691"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:15:40.691" endtime="20220704 14:15:40.691"/>
</return>
<status status="PASS" starttime="20220704 14:15:40.181" endtime="20220704 14:15:40.691"/>
</kw>
<status status="PASS" starttime="20220704 14:15:40.181" endtime="20220704 14:15:40.692"/>
</kw>
<doc>Verify that a board's information can be accesed through API</doc>
<tag>api</tag>
<tag>board.get</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220704 14:15:39.775" endtime="20220704 14:15:40.692"/>
</test>
<test id="s1-s1-s1-s1-t5" name="UPDATE a Board's description" line="45">
<kw name="Create A Board" library="Board">
<var>${response}</var>
<arg>NewBoardForTest</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 14:15:40.694" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 14:15:40.694" endtime="20220704 14:15:40.694"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 14:15:40.694" endtime="20220704 14:15:40.694"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:15:40.695" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220704 14:15:40.694" endtime="20220704 14:15:40.695"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 14:15:40.971" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:40.695" endtime="20220704 14:15:40.971"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:15:40.971" endtime="20220704 14:15:40.971"/>
</return>
<msg timestamp="20220704 14:15:40.972" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:40.693" endtime="20220704 14:15:40.972"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:15:40.972" endtime="20220704 14:15:40.972"/>
</return>
<msg timestamp="20220704 14:15:40.972" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:40.693" endtime="20220704 14:15:40.972"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>board</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220704 14:15:40.972" endtime="20220704 14:15:40.977"/>
</kw>
<status status="PASS" starttime="20220704 14:15:40.972" endtime="20220704 14:15:40.977"/>
</kw>
<kw name="Update A Board" library="Board">
<arg>${response.json()}[id]</arg>
<arg>desc</arg>
<arg>sampleDescription</arg>
<doc>Updates the board with the given ID
optional_args: name, desc, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 14:15:40.979" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 14:15:40.979" endtime="20220704 14:15:40.979"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 14:15:40.979" endtime="20220704 14:15:40.979"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:15:40.980" level="INFO">${url} = boards/62c2f60c3cff9530c4d70d3d</msg>
<status status="PASS" starttime="20220704 14:15:40.979" endtime="20220704 14:15:40.980"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 14:15:41.155" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:40.980" endtime="20220704 14:15:41.155"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:15:41.155" endtime="20220704 14:15:41.156"/>
</return>
<msg timestamp="20220704 14:15:41.156" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:40.978" endtime="20220704 14:15:41.156"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:15:41.156" endtime="20220704 14:15:41.156"/>
</return>
<status status="PASS" starttime="20220704 14:15:40.977" endtime="20220704 14:15:41.156"/>
</kw>
<kw name="Get A Board" library="Board">
<var>${new_response}</var>
<arg>${response.json()}[id]</arg>
<doc>Gets the Board with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:15:41.158" level="INFO">${url} = boards/62c2f60c3cff9530c4d70d3d</msg>
<status status="PASS" starttime="20220704 14:15:41.158" endtime="20220704 14:15:41.158"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 14:15:41.320" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:41.158" endtime="20220704 14:15:41.320"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:15:41.320" endtime="20220704 14:15:41.320"/>
</return>
<msg timestamp="20220704 14:15:41.321" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:41.157" endtime="20220704 14:15:41.321"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:15:41.321" endtime="20220704 14:15:41.321"/>
</return>
<msg timestamp="20220704 14:15:41.321" level="INFO">${new_response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:41.156" endtime="20220704 14:15:41.321"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${new_response.json()}[desc]</arg>
<arg>sampleDescription</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220704 14:15:41.321" endtime="20220704 14:15:41.322"/>
</kw>
<kw name="Update A Board" library="Board">
<arg>${response.json()}[id]</arg>
<arg>desc</arg>
<arg>updatedDescription</arg>
<doc>Updates the board with the given ID
optional_args: name, desc, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 14:15:41.324" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 14:15:41.324" endtime="20220704 14:15:41.324"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 14:15:41.324" endtime="20220704 14:15:41.324"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:15:41.325" level="INFO">${url} = boards/62c2f60c3cff9530c4d70d3d</msg>
<status status="PASS" starttime="20220704 14:15:41.324" endtime="20220704 14:15:41.325"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 14:15:41.517" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:41.325" endtime="20220704 14:15:41.517"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:15:41.517" endtime="20220704 14:15:41.517"/>
</return>
<msg timestamp="20220704 14:15:41.517" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:41.323" endtime="20220704 14:15:41.517"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:15:41.517" endtime="20220704 14:15:41.517"/>
</return>
<status status="PASS" starttime="20220704 14:15:41.322" endtime="20220704 14:15:41.517"/>
</kw>
<kw name="Get A Board" library="Board">
<var>${new_response2}</var>
<arg>${response.json()}[id]</arg>
<doc>Gets the Board with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:15:41.519" level="INFO">${url} = boards/62c2f60c3cff9530c4d70d3d</msg>
<status status="PASS" starttime="20220704 14:15:41.519" endtime="20220704 14:15:41.519"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 14:15:41.657" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:41.519" endtime="20220704 14:15:41.657"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:15:41.657" endtime="20220704 14:15:41.657"/>
</return>
<msg timestamp="20220704 14:15:41.658" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:41.518" endtime="20220704 14:15:41.658"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:15:41.658" endtime="20220704 14:15:41.658"/>
</return>
<msg timestamp="20220704 14:15:41.658" level="INFO">${new_response2} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:41.518" endtime="20220704 14:15:41.658"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${new_response2.json()}[desc]</arg>
<arg>updatedDescription</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220704 14:15:41.658" endtime="20220704 14:15:41.659"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${response.json()}[id]</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${response.json()}[id]</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:15:41.661" level="INFO">${url} = boards/62c2f60c3cff9530c4d70d3d</msg>
<status status="PASS" starttime="20220704 14:15:41.661" endtime="20220704 14:15:41.661"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 14:15:42.083" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:41.662" endtime="20220704 14:15:42.083"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:15:42.083" endtime="20220704 14:15:42.084"/>
</return>
<msg timestamp="20220704 14:15:42.084" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:41.661" endtime="20220704 14:15:42.084"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:15:42.084" endtime="20220704 14:15:42.084"/>
</return>
<status status="PASS" starttime="20220704 14:15:41.660" endtime="20220704 14:15:42.084"/>
</kw>
<status status="PASS" starttime="20220704 14:15:41.659" endtime="20220704 14:15:42.084"/>
</kw>
<doc>Verify that a board's description can be updated through API</doc>
<tag>api</tag>
<tag>board.update</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220704 14:15:40.692" endtime="20220704 14:15:42.084"/>
</test>
<kw name="Delete All Sessions" library="request_own_library" type="TEARDOWN">
<status status="PASS" starttime="20220704 14:15:42.085" endtime="20220704 14:15:42.086"/>
</kw>
<doc>Example Test with Trello API Boards</doc>
<status status="PASS" starttime="20220704 14:15:36.631" endtime="20220704 14:15:42.087"/>
</suite>
<suite id="s1-s1-s1-s2" name="Trello Api Cards Tests" source="/trello/api/trello_api_cards_tests.robot">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Create Trello Session</arg>
<arg>Setup Board And List</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Create Trello Session" library="TrelloAPI">
<doc>Creates a Trello Session</doc>
<kw name="Create Session" library="request_own_library">
<arg>${API_BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<status status="PASS" starttime="20220704 14:15:42.098" endtime="20220704 14:15:42.098"/>
</kw>
<status status="PASS" starttime="20220704 14:15:42.098" endtime="20220704 14:15:42.099"/>
</kw>
<kw name="Setup Board And List">
<doc>Create a board and save its ID and its first list's ID</doc>
<kw name="Create A Board" library="Board">
<var>${BOARD}</var>
<arg>TestBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 14:15:42.100" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 14:15:42.100" endtime="20220704 14:15:42.100"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 14:15:42.100" endtime="20220704 14:15:42.100"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:15:42.101" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220704 14:15:42.101" endtime="20220704 14:15:42.101"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 14:15:42.434" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:42.101" endtime="20220704 14:15:42.434"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:15:42.434" endtime="20220704 14:15:42.434"/>
</return>
<msg timestamp="20220704 14:15:42.434" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:42.100" endtime="20220704 14:15:42.434"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:15:42.434" endtime="20220704 14:15:42.434"/>
</return>
<msg timestamp="20220704 14:15:42.435" level="INFO">${BOARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:42.099" endtime="20220704 14:15:42.435"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_BOARD_ID}</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220704 14:15:42.436" level="INFO">${TEST_SUITE_BOARD_ID} = 62c2f60e66239270e28c98c1</msg>
<status status="PASS" starttime="20220704 14:15:42.435" endtime="20220704 14:15:42.436"/>
</kw>
<kw name="Get Lists On A Board" library="Board">
<var>${LISTS}</var>
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Get all the lists in a board</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>lists_on_board</arg>
<arg>${id}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:15:42.437" level="INFO">${url} = boards/62c2f60e66239270e28c98c1/lists/</msg>
<status status="PASS" starttime="20220704 14:15:42.436" endtime="20220704 14:15:42.437"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 14:15:42.578" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:42.437" endtime="20220704 14:15:42.578"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:15:42.578" endtime="20220704 14:15:42.578"/>
</return>
<msg timestamp="20220704 14:15:42.579" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:42.436" endtime="20220704 14:15:42.579"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:15:42.579" endtime="20220704 14:15:42.579"/>
</return>
<msg timestamp="20220704 14:15:42.579" level="INFO">${LISTS} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:42.436" endtime="20220704 14:15:42.579"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_LIST_ID}</arg>
<arg>${LISTS.json()}[0][id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220704 14:15:42.580" level="INFO">${TEST_SUITE_LIST_ID} = 62c2f60e66239270e28c98c8</msg>
<status status="PASS" starttime="20220704 14:15:42.579" endtime="20220704 14:15:42.580"/>
</kw>
<status status="PASS" starttime="20220704 14:15:42.099" endtime="20220704 14:15:42.580"/>
</kw>
<status status="PASS" starttime="20220704 14:15:42.098" endtime="20220704 14:15:42.580"/>
</kw>
<test id="s1-s1-s1-s2-t1" name="Verify A Card Can Be Created" line="13">
<kw name="Create A Card" library="Card">
<var>${response}</var>
<arg>name</arg>
<arg>RFCard2</arg>
<doc>Creates a new card in the given list.
required_args: listId
optional_args: name, desc, pos, idCardSource, idLabels, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>@{optional_args}</arg>
<arg>idList</arg>
<arg>${idList}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 14:15:42.582" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 14:15:42.582" endtime="20220704 14:15:42.582"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 14:15:42.582" endtime="20220704 14:15:42.583"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:15:42.584" level="INFO">${url} = cards/</msg>
<status status="PASS" starttime="20220704 14:15:42.583" endtime="20220704 14:15:42.584"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 14:15:42.872" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:42.584" endtime="20220704 14:15:42.872"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:15:42.872" endtime="20220704 14:15:42.872"/>
</return>
<msg timestamp="20220704 14:15:42.872" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:42.582" endtime="20220704 14:15:42.872"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:15:42.872" endtime="20220704 14:15:42.872"/>
</return>
<msg timestamp="20220704 14:15:42.873" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:42.581" endtime="20220704 14:15:42.873"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>card</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220704 14:15:42.873" endtime="20220704 14:15:42.878"/>
</kw>
<status status="PASS" starttime="20220704 14:15:42.873" endtime="20220704 14:15:42.878"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 14:15:42.879" endtime="20220704 14:15:42.879"/>
</return>
<msg timestamp="20220704 14:15:42.879" level="INFO">${CARD_ID} = 62c2f60e621f4c3f1b093589</msg>
<status status="PASS" starttime="20220704 14:15:42.878" endtime="20220704 14:15:42.879"/>
</kw>
<kw name="Get A Card" library="Card">
<var>${response}</var>
<arg>${CARD_ID}</arg>
<doc>Gets the card with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:15:42.881" level="INFO">${url} = cards/62c2f60e621f4c3f1b093589</msg>
<status status="PASS" starttime="20220704 14:15:42.880" endtime="20220704 14:15:42.881"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 14:15:43.037" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:42.881" endtime="20220704 14:15:43.037"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:15:43.038" endtime="20220704 14:15:43.038"/>
</return>
<msg timestamp="20220704 14:15:43.038" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:42.880" endtime="20220704 14:15:43.038"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:15:43.038" endtime="20220704 14:15:43.038"/>
</return>
<msg timestamp="20220704 14:15:43.038" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:42.880" endtime="20220704 14:15:43.038"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_NAME}</var>
<arg>${response}</arg>
<arg>name</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 14:15:43.039" endtime="20220704 14:15:43.039"/>
</return>
<msg timestamp="20220704 14:15:43.039" level="INFO">${CARD_NAME} = RFCard2</msg>
<status status="PASS" starttime="20220704 14:15:43.038" endtime="20220704 14:15:43.039"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${CARD_NAME}</arg>
<arg>RFCard2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220704 14:15:43.040" endtime="20220704 14:15:43.040"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Card</arg>
<arg>${CARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Card" library="Card">
<arg>${CARD_ID}</arg>
<doc>Deletes the card with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:15:43.041" level="INFO">${url} = cards/62c2f60e621f4c3f1b093589</msg>
<status status="PASS" starttime="20220704 14:15:43.041" endtime="20220704 14:15:43.041"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 14:15:43.288" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:43.041" endtime="20220704 14:15:43.288"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:15:43.288" endtime="20220704 14:15:43.289"/>
</return>
<msg timestamp="20220704 14:15:43.289" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:43.041" endtime="20220704 14:15:43.289"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:15:43.289" endtime="20220704 14:15:43.289"/>
</return>
<status status="PASS" starttime="20220704 14:15:43.040" endtime="20220704 14:15:43.289"/>
</kw>
<status status="PASS" starttime="20220704 14:15:43.040" endtime="20220704 14:15:43.289"/>
</kw>
<doc>Verify that a card can be created through API</doc>
<tag>api</tag>
<tag>card.create</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220704 14:15:42.580" endtime="20220704 14:15:43.289"/>
</test>
<test id="s1-s1-s1-s2-t2" name="Verify A Card Can Be Closed" line="24">
<kw name="Create A Card" library="Card">
<var>${response}</var>
<doc>Creates a new card in the given list.
required_args: listId
optional_args: name, desc, pos, idCardSource, idLabels, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>@{optional_args}</arg>
<arg>idList</arg>
<arg>${idList}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 14:15:43.292" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 14:15:43.292" endtime="20220704 14:15:43.292"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 14:15:43.293" endtime="20220704 14:15:43.293"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:15:43.294" level="INFO">${url} = cards/</msg>
<status status="PASS" starttime="20220704 14:15:43.293" endtime="20220704 14:15:43.294"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 14:15:43.522" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:43.294" endtime="20220704 14:15:43.523"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:15:43.523" endtime="20220704 14:15:43.523"/>
</return>
<msg timestamp="20220704 14:15:43.523" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:43.291" endtime="20220704 14:15:43.523"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:15:43.523" endtime="20220704 14:15:43.523"/>
</return>
<msg timestamp="20220704 14:15:43.523" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:43.291" endtime="20220704 14:15:43.523"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 14:15:43.524" endtime="20220704 14:15:43.524"/>
</return>
<msg timestamp="20220704 14:15:43.525" level="INFO">${CARD_ID} = 62c2f60feceeef71ca6108c3</msg>
<status status="PASS" starttime="20220704 14:15:43.523" endtime="20220704 14:15:43.525"/>
</kw>
<kw name="Archive A Card" library="Card">
<arg>${CARD_ID}</arg>
<doc>Modifies the card status to closed.</doc>
<kw name="Update A Card" library="Card">
<var>${response}</var>
<arg>${id}</arg>
<arg>closed</arg>
<arg>true</arg>
<arg>status_code=${status_code}</arg>
<doc>Updates the card with the given ID
optional_args: name, desc, closed, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<arg>status_code=${status_code}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 14:15:43.527" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 14:15:43.527" endtime="20220704 14:15:43.527"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 14:15:43.527" endtime="20220704 14:15:43.527"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:15:43.528" level="INFO">${url} = cards/62c2f60feceeef71ca6108c3</msg>
<status status="PASS" starttime="20220704 14:15:43.527" endtime="20220704 14:15:43.528"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 14:15:43.745" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:43.528" endtime="20220704 14:15:43.745"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:15:43.745" endtime="20220704 14:15:43.746"/>
</return>
<msg timestamp="20220704 14:15:43.746" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:43.526" endtime="20220704 14:15:43.746"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:15:43.746" endtime="20220704 14:15:43.746"/>
</return>
<msg timestamp="20220704 14:15:43.746" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:43.525" endtime="20220704 14:15:43.746"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:15:43.746" endtime="20220704 14:15:43.746"/>
</return>
<status status="PASS" starttime="20220704 14:15:43.525" endtime="20220704 14:15:43.746"/>
</kw>
<kw name="Get A Card" library="Card">
<var>${response}</var>
<arg>${CARD_ID}</arg>
<doc>Gets the card with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:15:43.748" level="INFO">${url} = cards/62c2f60feceeef71ca6108c3</msg>
<status status="PASS" starttime="20220704 14:15:43.748" endtime="20220704 14:15:43.748"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 14:15:43.898" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:43.748" endtime="20220704 14:15:43.898"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:15:43.898" endtime="20220704 14:15:43.899"/>
</return>
<msg timestamp="20220704 14:15:43.899" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:43.747" endtime="20220704 14:15:43.899"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:15:43.899" endtime="20220704 14:15:43.899"/>
</return>
<msg timestamp="20220704 14:15:43.899" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:43.747" endtime="20220704 14:15:43.899"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_CLOSED}</var>
<arg>${response}</arg>
<arg>closed</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 14:15:43.900" endtime="20220704 14:15:43.900"/>
</return>
<msg timestamp="20220704 14:15:43.901" level="INFO">${CARD_CLOSED} = True</msg>
<status status="PASS" starttime="20220704 14:15:43.899" endtime="20220704 14:15:43.901"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${CARD_CLOSED}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220704 14:15:43.901" endtime="20220704 14:15:43.901"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Card</arg>
<arg>${CARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Card" library="Card">
<arg>${CARD_ID}</arg>
<doc>Deletes the card with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:15:43.903" level="INFO">${url} = cards/62c2f60feceeef71ca6108c3</msg>
<status status="PASS" starttime="20220704 14:15:43.903" endtime="20220704 14:15:43.903"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 14:15:44.120" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:43.903" endtime="20220704 14:15:44.120"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:15:44.120" endtime="20220704 14:15:44.120"/>
</return>
<msg timestamp="20220704 14:15:44.120" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:43.902" endtime="20220704 14:15:44.120"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:15:44.120" endtime="20220704 14:15:44.120"/>
</return>
<status status="PASS" starttime="20220704 14:15:43.902" endtime="20220704 14:15:44.120"/>
</kw>
<status status="PASS" starttime="20220704 14:15:43.901" endtime="20220704 14:15:44.121"/>
</kw>
<doc>Verify that a card can be closed through API</doc>
<tag>api</tag>
<tag>card.close</tag>
<tag>regression</tag>
<status status="PASS" starttime="20220704 14:15:43.290" endtime="20220704 14:15:44.121"/>
</test>
<test id="s1-s1-s1-s2-t3" name="Verify A Card Can Be Deleted" line="35">
<kw name="Create A Card" library="Card">
<var>${response}</var>
<doc>Creates a new card in the given list.
required_args: listId
optional_args: name, desc, pos, idCardSource, idLabels, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>@{optional_args}</arg>
<arg>idList</arg>
<arg>${idList}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 14:15:44.123" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 14:15:44.123" endtime="20220704 14:15:44.123"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 14:15:44.123" endtime="20220704 14:15:44.124"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:15:44.124" level="INFO">${url} = cards/</msg>
<status status="PASS" starttime="20220704 14:15:44.124" endtime="20220704 14:15:44.124"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 14:15:44.378" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:44.124" endtime="20220704 14:15:44.378"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:15:44.378" endtime="20220704 14:15:44.378"/>
</return>
<msg timestamp="20220704 14:15:44.378" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:44.122" endtime="20220704 14:15:44.378"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:15:44.378" endtime="20220704 14:15:44.378"/>
</return>
<msg timestamp="20220704 14:15:44.379" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:44.122" endtime="20220704 14:15:44.379"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 14:15:44.379" endtime="20220704 14:15:44.379"/>
</return>
<msg timestamp="20220704 14:15:44.380" level="INFO">${CARD_ID} = 62c2f610efeb805844e45510</msg>
<status status="PASS" starttime="20220704 14:15:44.379" endtime="20220704 14:15:44.380"/>
</kw>
<kw name="Delete A Card" library="Card">
<var>${response}</var>
<arg>${CARD_ID}</arg>
<doc>Deletes the card with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:15:44.381" level="INFO">${url} = cards/62c2f610efeb805844e45510</msg>
<status status="PASS" starttime="20220704 14:15:44.381" endtime="20220704 14:15:44.381"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 14:15:44.636" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:44.381" endtime="20220704 14:15:44.636"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:15:44.636" endtime="20220704 14:15:44.636"/>
</return>
<msg timestamp="20220704 14:15:44.637" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:44.381" endtime="20220704 14:15:44.637"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:15:44.637" endtime="20220704 14:15:44.637"/>
</return>
<msg timestamp="20220704 14:15:44.637" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:44.380" endtime="20220704 14:15:44.637"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>delete</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220704 14:15:44.638" endtime="20220704 14:15:44.640"/>
</kw>
<status status="PASS" starttime="20220704 14:15:44.637" endtime="20220704 14:15:44.640"/>
</kw>
<kw name="Get A Card" library="Card">
<arg>${CARD_ID}</arg>
<arg>status_code=404</arg>
<doc>Gets the card with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:15:44.641" level="INFO">${url} = cards/62c2f610efeb805844e45510</msg>
<status status="PASS" starttime="20220704 14:15:44.641" endtime="20220704 14:15:44.641"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 14:15:44.771" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220704 14:15:44.641" endtime="20220704 14:15:44.771"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:15:44.771" endtime="20220704 14:15:44.772"/>
</return>
<msg timestamp="20220704 14:15:44.772" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220704 14:15:44.640" endtime="20220704 14:15:44.772"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:15:44.772" endtime="20220704 14:15:44.772"/>
</return>
<status status="PASS" starttime="20220704 14:15:44.640" endtime="20220704 14:15:44.772"/>
</kw>
<doc>Verify that a card can be deleted through API</doc>
<tag>api</tag>
<tag>card.delete</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220704 14:15:44.121" endtime="20220704 14:15:44.772"/>
</test>
<test id="s1-s1-s1-s2-t4" name="Verify A Card Can Be Updated" line="44">
<kw name="Create A Card" library="Card">
<var>${response}</var>
<arg>name</arg>
<arg>RFCard4</arg>
<doc>Creates a new card in the given list.
required_args: listId
optional_args: name, desc, pos, idCardSource, idLabels, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>@{optional_args}</arg>
<arg>idList</arg>
<arg>${idList}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 14:15:44.775" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 14:15:44.774" endtime="20220704 14:15:44.775"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 14:15:44.775" endtime="20220704 14:15:44.775"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:15:44.776" level="INFO">${url} = cards/</msg>
<status status="PASS" starttime="20220704 14:15:44.775" endtime="20220704 14:15:44.776"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 14:15:45.010" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:44.776" endtime="20220704 14:15:45.010"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:15:45.010" endtime="20220704 14:15:45.010"/>
</return>
<msg timestamp="20220704 14:15:45.011" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:44.774" endtime="20220704 14:15:45.011"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:15:45.011" endtime="20220704 14:15:45.011"/>
</return>
<msg timestamp="20220704 14:15:45.011" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:44.773" endtime="20220704 14:15:45.011"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 14:15:45.012" endtime="20220704 14:15:45.012"/>
</return>
<msg timestamp="20220704 14:15:45.012" level="INFO">${CARD_ID} = 62c2f6100cbd9053d3f04455</msg>
<status status="PASS" starttime="20220704 14:15:45.011" endtime="20220704 14:15:45.012"/>
</kw>
<kw name="Update A Card" library="Card">
<var>${response}</var>
<arg>${CARD_ID}</arg>
<arg>name</arg>
<arg>RFCard5</arg>
<arg>desc</arg>
<arg>Description</arg>
<doc>Updates the card with the given ID
optional_args: name, desc, closed, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<arg>status_code=${status_code}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 14:15:45.014" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 14:15:45.014" endtime="20220704 14:15:45.014"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 14:15:45.014" endtime="20220704 14:15:45.014"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:15:45.015" level="INFO">${url} = cards/62c2f6100cbd9053d3f04455</msg>
<status status="PASS" starttime="20220704 14:15:45.014" endtime="20220704 14:15:45.015"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 14:15:45.262" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:45.015" endtime="20220704 14:15:45.262"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:15:45.262" endtime="20220704 14:15:45.262"/>
</return>
<msg timestamp="20220704 14:15:45.262" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:45.013" endtime="20220704 14:15:45.262"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:15:45.262" endtime="20220704 14:15:45.262"/>
</return>
<msg timestamp="20220704 14:15:45.262" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:45.013" endtime="20220704 14:15:45.263"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>card</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220704 14:15:45.263" endtime="20220704 14:15:45.268"/>
</kw>
<status status="PASS" starttime="20220704 14:15:45.263" endtime="20220704 14:15:45.269"/>
</kw>
<kw name="Get A Card" library="Card">
<var>${response}</var>
<arg>${CARD_ID}</arg>
<doc>Gets the card with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:15:45.270" level="INFO">${url} = cards/62c2f6100cbd9053d3f04455</msg>
<status status="PASS" starttime="20220704 14:15:45.270" endtime="20220704 14:15:45.270"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 14:15:45.423" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:45.270" endtime="20220704 14:15:45.423"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:15:45.423" endtime="20220704 14:15:45.423"/>
</return>
<msg timestamp="20220704 14:15:45.424" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:45.269" endtime="20220704 14:15:45.424"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:15:45.424" endtime="20220704 14:15:45.424"/>
</return>
<msg timestamp="20220704 14:15:45.424" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:45.269" endtime="20220704 14:15:45.424"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_NAME}</var>
<arg>${response}</arg>
<arg>name</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 14:15:45.424" endtime="20220704 14:15:45.425"/>
</return>
<msg timestamp="20220704 14:15:45.425" level="INFO">${CARD_NAME} = RFCard5</msg>
<status status="PASS" starttime="20220704 14:15:45.424" endtime="20220704 14:15:45.425"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_DESC}</var>
<arg>${response}</arg>
<arg>desc</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 14:15:45.426" endtime="20220704 14:15:45.426"/>
</return>
<msg timestamp="20220704 14:15:45.427" level="INFO">${CARD_DESC} = Description</msg>
<status status="PASS" starttime="20220704 14:15:45.426" endtime="20220704 14:15:45.427"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${CARD_NAME}</arg>
<arg>RFCard5</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220704 14:15:45.427" endtime="20220704 14:15:45.427"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${CARD_DESC}</arg>
<arg>Description</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220704 14:15:45.427" endtime="20220704 14:15:45.427"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Card</arg>
<arg>${CARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Card" library="Card">
<arg>${CARD_ID}</arg>
<doc>Deletes the card with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:15:45.429" level="INFO">${url} = cards/62c2f6100cbd9053d3f04455</msg>
<status status="PASS" starttime="20220704 14:15:45.429" endtime="20220704 14:15:45.429"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 14:15:45.689" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:45.429" endtime="20220704 14:15:45.689"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:15:45.689" endtime="20220704 14:15:45.689"/>
</return>
<msg timestamp="20220704 14:15:45.690" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:45.428" endtime="20220704 14:15:45.690"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:15:45.690" endtime="20220704 14:15:45.690"/>
</return>
<status status="PASS" starttime="20220704 14:15:45.428" endtime="20220704 14:15:45.690"/>
</kw>
<status status="PASS" starttime="20220704 14:15:45.428" endtime="20220704 14:15:45.690"/>
</kw>
<doc>Verify that a card's name and Description can be updated through API</doc>
<tag>api</tag>
<tag>card.update</tag>
<tag>regression</tag>
<status status="PASS" starttime="20220704 14:15:44.773" endtime="20220704 14:15:45.690"/>
</test>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Teardown Board</arg>
<arg>Delete All Sessions</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Teardown Board">
<doc>Delete the board created for this suite</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:15:45.693" level="INFO">${url} = boards/62c2f60e66239270e28c98c1</msg>
<status status="PASS" starttime="20220704 14:15:45.693" endtime="20220704 14:15:45.693"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 14:15:46.158" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:45.693" endtime="20220704 14:15:46.158"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:15:46.159" endtime="20220704 14:15:46.159"/>
</return>
<msg timestamp="20220704 14:15:46.159" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:45.692" endtime="20220704 14:15:46.159"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:15:46.159" endtime="20220704 14:15:46.159"/>
</return>
<status status="PASS" starttime="20220704 14:15:45.691" endtime="20220704 14:15:46.159"/>
</kw>
<status status="PASS" starttime="20220704 14:15:45.691" endtime="20220704 14:15:46.159"/>
</kw>
<status status="PASS" starttime="20220704 14:15:45.691" endtime="20220704 14:15:46.159"/>
</kw>
<kw name="Delete All Sessions" library="request_own_library">
<status status="PASS" starttime="20220704 14:15:46.160" endtime="20220704 14:15:46.161"/>
</kw>
<status status="PASS" starttime="20220704 14:15:45.691" endtime="20220704 14:15:46.161"/>
</kw>
<doc>Example Test with Trello API Cards</doc>
<status status="PASS" starttime="20220704 14:15:42.088" endtime="20220704 14:15:46.161"/>
</suite>
<suite id="s1-s1-s1-s3" name="Trello Api Checklists Tests" source="/trello/api/trello_api_checklists_tests.robot">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Create Trello Session</arg>
<arg>Setup Board, List And Card</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Create Trello Session" library="TrelloAPI">
<doc>Creates a Trello Session</doc>
<kw name="Create Session" library="request_own_library">
<arg>${API_BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<status status="PASS" starttime="20220704 14:15:46.172" endtime="20220704 14:15:46.172"/>
</kw>
<status status="PASS" starttime="20220704 14:15:46.172" endtime="20220704 14:15:46.172"/>
</kw>
<kw name="Setup Board, List And Card">
<doc>Create a board and save its ID and its first list's ID</doc>
<kw name="Create A Board" library="Board">
<var>${BOARD}</var>
<arg>TestBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 14:15:46.173" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 14:15:46.173" endtime="20220704 14:15:46.173"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 14:15:46.173" endtime="20220704 14:15:46.174"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:15:46.174" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220704 14:15:46.174" endtime="20220704 14:15:46.174"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 14:15:46.553" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:46.174" endtime="20220704 14:15:46.553"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:15:46.553" endtime="20220704 14:15:46.553"/>
</return>
<msg timestamp="20220704 14:15:46.553" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:46.173" endtime="20220704 14:15:46.553"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:15:46.553" endtime="20220704 14:15:46.553"/>
</return>
<msg timestamp="20220704 14:15:46.553" level="INFO">${BOARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:46.172" endtime="20220704 14:15:46.554"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_BOARD_ID}</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220704 14:15:46.555" level="INFO">${TEST_SUITE_BOARD_ID} = 62c2f612eaf0e1105ae59184</msg>
<status status="PASS" starttime="20220704 14:15:46.554" endtime="20220704 14:15:46.555"/>
</kw>
<kw name="Get Lists On A Board" library="Board">
<var>${LISTS}</var>
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Get all the lists in a board</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>lists_on_board</arg>
<arg>${id}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:15:46.556" level="INFO">${url} = boards/62c2f612eaf0e1105ae59184/lists/</msg>
<status status="PASS" starttime="20220704 14:15:46.555" endtime="20220704 14:15:46.556"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 14:15:46.689" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:46.556" endtime="20220704 14:15:46.689"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:15:46.689" endtime="20220704 14:15:46.690"/>
</return>
<msg timestamp="20220704 14:15:46.690" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:46.555" endtime="20220704 14:15:46.690"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:15:46.690" endtime="20220704 14:15:46.690"/>
</return>
<msg timestamp="20220704 14:15:46.690" level="INFO">${LISTS} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:46.555" endtime="20220704 14:15:46.690"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_LIST_ID}</arg>
<arg>${LISTS.json()}[0][id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220704 14:15:46.691" level="INFO">${TEST_SUITE_LIST_ID} = 62c2f612eaf0e1105ae5918b</msg>
<status status="PASS" starttime="20220704 14:15:46.690" endtime="20220704 14:15:46.691"/>
</kw>
<kw name="Create A Card" library="Card">
<var>${CARD}</var>
<arg>name</arg>
<arg>TestCard</arg>
<doc>Creates a new card in the given list.
required_args: listId
optional_args: name, desc, pos, idCardSource, idLabels, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>@{optional_args}</arg>
<arg>idList</arg>
<arg>${idList}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 14:15:46.693" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 14:15:46.693" endtime="20220704 14:15:46.693"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 14:15:46.693" endtime="20220704 14:15:46.693"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:15:46.694" level="INFO">${url} = cards/</msg>
<status status="PASS" starttime="20220704 14:15:46.693" endtime="20220704 14:15:46.694"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 14:15:46.958" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:46.694" endtime="20220704 14:15:46.958"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:15:46.958" endtime="20220704 14:15:46.958"/>
</return>
<msg timestamp="20220704 14:15:46.958" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:46.692" endtime="20220704 14:15:46.958"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:15:46.958" endtime="20220704 14:15:46.958"/>
</return>
<msg timestamp="20220704 14:15:46.959" level="INFO">${CARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:46.691" endtime="20220704 14:15:46.959"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_CARD_ID}</arg>
<arg>${CARD.json()}[id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220704 14:15:46.960" level="INFO">${TEST_SUITE_CARD_ID} = 62c2f612d80ce88e0777f39f</msg>
<status status="PASS" starttime="20220704 14:15:46.959" endtime="20220704 14:15:46.960"/>
</kw>
<status status="PASS" starttime="20220704 14:15:46.172" endtime="20220704 14:15:46.960"/>
</kw>
<status status="PASS" starttime="20220704 14:15:46.171" endtime="20220704 14:15:46.960"/>
</kw>
<test id="s1-s1-s1-s3-t1" name="Verify A Checklist Can Be Created" line="14">
<kw name="Create A Checklist" library="Checklist">
<var>${response}</var>
<arg>name</arg>
<arg>TestChecklist</arg>
<arg>idCard=${TEST_SUITE_CARD_ID}</arg>
<doc>Creates a new checklist in the given card.
required_args: idCard
optional_args: name, pos, idChecklistSource
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>@{optional_args}</arg>
<arg>idCard</arg>
<arg>${idCard}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 14:15:46.962" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 14:15:46.962" endtime="20220704 14:15:46.962"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 14:15:46.962" endtime="20220704 14:15:46.963"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:15:46.963" level="INFO">${url} = checklists/</msg>
<status status="PASS" starttime="20220704 14:15:46.963" endtime="20220704 14:15:46.963"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 14:15:47.176" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:46.964" endtime="20220704 14:15:47.176"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:15:47.176" endtime="20220704 14:15:47.176"/>
</return>
<msg timestamp="20220704 14:15:47.176" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:46.961" endtime="20220704 14:15:47.176"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:15:47.176" endtime="20220704 14:15:47.176"/>
</return>
<msg timestamp="20220704 14:15:47.176" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:46.961" endtime="20220704 14:15:47.176"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${checklist_id}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 14:15:47.177" endtime="20220704 14:15:47.177"/>
</return>
<msg timestamp="20220704 14:15:47.178" level="INFO">${checklist_id} = 62c2f613c701224edb14cad4</msg>
<status status="PASS" starttime="20220704 14:15:47.177" endtime="20220704 14:15:47.178"/>
</kw>
<kw name="Get A Checklist" library="Checklist">
<var>${response}</var>
<arg>${checklist_id}</arg>
<doc>Gets the checklist with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:15:47.179" level="INFO">${url} = checklists/62c2f613c701224edb14cad4</msg>
<status status="PASS" starttime="20220704 14:15:47.179" endtime="20220704 14:15:47.179"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 14:15:47.325" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:47.179" endtime="20220704 14:15:47.325"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:15:47.326" endtime="20220704 14:15:47.326"/>
</return>
<msg timestamp="20220704 14:15:47.326" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:47.178" endtime="20220704 14:15:47.326"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:15:47.326" endtime="20220704 14:15:47.326"/>
</return>
<msg timestamp="20220704 14:15:47.326" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:47.178" endtime="20220704 14:15:47.326"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${checklist_name}</var>
<arg>${response}</arg>
<arg>name</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 14:15:47.327" endtime="20220704 14:15:47.327"/>
</return>
<msg timestamp="20220704 14:15:47.328" level="INFO">${checklist_name} = TestChecklist</msg>
<status status="PASS" starttime="20220704 14:15:47.327" endtime="20220704 14:15:47.328"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${checklist_name}</arg>
<arg>TestChecklist</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220704 14:15:47.328" endtime="20220704 14:15:47.328"/>
</kw>
<kw name="Delete A Checklist" library="Checklist" type="TEARDOWN">
<arg>${checklist_id}</arg>
<doc>Deletes the checklist with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:15:47.330" level="INFO">${url} = checklists/62c2f613c701224edb14cad4</msg>
<status status="PASS" starttime="20220704 14:15:47.329" endtime="20220704 14:15:47.330"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 14:15:47.525" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:47.330" endtime="20220704 14:15:47.525"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:15:47.525" endtime="20220704 14:15:47.525"/>
</return>
<msg timestamp="20220704 14:15:47.525" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:47.329" endtime="20220704 14:15:47.525"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:15:47.525" endtime="20220704 14:15:47.525"/>
</return>
<status status="PASS" starttime="20220704 14:15:47.328" endtime="20220704 14:15:47.525"/>
</kw>
<doc>Verify that a checklist can be created through API</doc>
<tag>api</tag>
<tag>checklist.create</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220704 14:15:46.960" endtime="20220704 14:15:47.525"/>
</test>
<test id="s1-s1-s1-s3-t2" name="Verify A Checklist Can Be Deleted" line="24">
<kw name="Create A Checklist" library="Checklist">
<var>${response}</var>
<arg>name</arg>
<arg>TestChecklist</arg>
<arg>idCard=${TEST_SUITE_CARD_ID}</arg>
<doc>Creates a new checklist in the given card.
required_args: idCard
optional_args: name, pos, idChecklistSource
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>@{optional_args}</arg>
<arg>idCard</arg>
<arg>${idCard}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 14:15:47.528" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 14:15:47.528" endtime="20220704 14:15:47.528"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 14:15:47.528" endtime="20220704 14:15:47.528"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:15:47.529" level="INFO">${url} = checklists/</msg>
<status status="PASS" starttime="20220704 14:15:47.528" endtime="20220704 14:15:47.529"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 14:15:47.752" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:47.529" endtime="20220704 14:15:47.752"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:15:47.752" endtime="20220704 14:15:47.752"/>
</return>
<msg timestamp="20220704 14:15:47.752" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:47.527" endtime="20220704 14:15:47.752"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:15:47.752" endtime="20220704 14:15:47.752"/>
</return>
<msg timestamp="20220704 14:15:47.753" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:47.526" endtime="20220704 14:15:47.753"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${checklist_id}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 14:15:47.753" endtime="20220704 14:15:47.753"/>
</return>
<msg timestamp="20220704 14:15:47.754" level="INFO">${checklist_id} = 62c2f613f364cd1bfea50c64</msg>
<status status="PASS" starttime="20220704 14:15:47.753" endtime="20220704 14:15:47.754"/>
</kw>
<kw name="Delete A Checklist" library="Checklist">
<var>${response}</var>
<arg>${checklist_id}</arg>
<doc>Deletes the checklist with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:15:47.756" level="INFO">${url} = checklists/62c2f613f364cd1bfea50c64</msg>
<status status="PASS" starttime="20220704 14:15:47.755" endtime="20220704 14:15:47.756"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 14:15:47.960" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:47.756" endtime="20220704 14:15:47.960"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:15:47.960" endtime="20220704 14:15:47.960"/>
</return>
<msg timestamp="20220704 14:15:47.960" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:47.755" endtime="20220704 14:15:47.960"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:15:47.960" endtime="20220704 14:15:47.960"/>
</return>
<msg timestamp="20220704 14:15:47.961" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:47.755" endtime="20220704 14:15:47.961"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>delete</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220704 14:15:47.961" endtime="20220704 14:15:47.963"/>
</kw>
<status status="PASS" starttime="20220704 14:15:47.961" endtime="20220704 14:15:47.963"/>
</kw>
<kw name="Get A Checklist" library="Checklist">
<arg>${checklist_id}</arg>
<arg>status_code=404</arg>
<doc>Gets the checklist with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:15:47.964" level="INFO">${url} = checklists/62c2f613f364cd1bfea50c64</msg>
<status status="PASS" starttime="20220704 14:15:47.964" endtime="20220704 14:15:47.964"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 14:15:48.090" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220704 14:15:47.965" endtime="20220704 14:15:48.090"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:15:48.090" endtime="20220704 14:15:48.090"/>
</return>
<msg timestamp="20220704 14:15:48.090" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220704 14:15:47.964" endtime="20220704 14:15:48.090"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:15:48.090" endtime="20220704 14:15:48.090"/>
</return>
<status status="PASS" starttime="20220704 14:15:47.963" endtime="20220704 14:15:48.090"/>
</kw>
<doc>Verify that a checklist can be deleted through API</doc>
<tag>api</tag>
<tag>checklist.delete</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220704 14:15:47.526" endtime="20220704 14:15:48.091"/>
</test>
<test id="s1-s1-s1-s3-t3" name="Verify A Checklist Can Be Updated" line="33">
<kw name="Create A Checklist" library="Checklist">
<var>${response}</var>
<arg>name</arg>
<arg>TestChecklist</arg>
<arg>idCard=${TEST_SUITE_CARD_ID}</arg>
<doc>Creates a new checklist in the given card.
required_args: idCard
optional_args: name, pos, idChecklistSource
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>@{optional_args}</arg>
<arg>idCard</arg>
<arg>${idCard}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 14:15:48.095" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 14:15:48.093" endtime="20220704 14:15:48.095"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 14:15:48.095" endtime="20220704 14:15:48.095"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:15:48.096" level="INFO">${url} = checklists/</msg>
<status status="PASS" starttime="20220704 14:15:48.095" endtime="20220704 14:15:48.096"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 14:15:48.306" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:48.096" endtime="20220704 14:15:48.306"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:15:48.307" endtime="20220704 14:15:48.307"/>
</return>
<msg timestamp="20220704 14:15:48.307" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:48.092" endtime="20220704 14:15:48.307"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:15:48.307" endtime="20220704 14:15:48.307"/>
</return>
<msg timestamp="20220704 14:15:48.307" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:48.092" endtime="20220704 14:15:48.307"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${checklist_id}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 14:15:48.308" endtime="20220704 14:15:48.308"/>
</return>
<msg timestamp="20220704 14:15:48.309" level="INFO">${checklist_id} = 62c2f6147e89595227397c94</msg>
<status status="PASS" starttime="20220704 14:15:48.307" endtime="20220704 14:15:48.309"/>
</kw>
<kw name="Update A Checklist" library="Checklist">
<var>${response}</var>
<arg>${checklist_id}</arg>
<arg>name</arg>
<arg>TestChecklist2</arg>
<doc>Updates the checklist with the given ID
optional_args: name, pos
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<arg>status_code=${status_code}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 14:15:48.310" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 14:15:48.310" endtime="20220704 14:15:48.310"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 14:15:48.310" endtime="20220704 14:15:48.310"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:15:48.311" level="INFO">${url} = checklists/62c2f6147e89595227397c94</msg>
<status status="PASS" starttime="20220704 14:15:48.310" endtime="20220704 14:15:48.311"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 14:15:48.497" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:48.311" endtime="20220704 14:15:48.497"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:15:48.497" endtime="20220704 14:15:48.497"/>
</return>
<msg timestamp="20220704 14:15:48.497" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:48.309" endtime="20220704 14:15:48.497"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:15:48.497" endtime="20220704 14:15:48.497"/>
</return>
<msg timestamp="20220704 14:15:48.497" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:48.309" endtime="20220704 14:15:48.498"/>
</kw>
<kw name="Get A Checklist" library="Checklist">
<var>${response}</var>
<arg>${checklist_id}</arg>
<doc>Gets the checklist with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:15:48.499" level="INFO">${url} = checklists/62c2f6147e89595227397c94</msg>
<status status="PASS" starttime="20220704 14:15:48.499" endtime="20220704 14:15:48.499"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 14:15:48.638" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:48.499" endtime="20220704 14:15:48.638"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:15:48.638" endtime="20220704 14:15:48.638"/>
</return>
<msg timestamp="20220704 14:15:48.639" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:48.498" endtime="20220704 14:15:48.639"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:15:48.639" endtime="20220704 14:15:48.639"/>
</return>
<msg timestamp="20220704 14:15:48.639" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:48.498" endtime="20220704 14:15:48.639"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${checklist_name}</var>
<arg>${response}</arg>
<arg>name</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 14:15:48.640" endtime="20220704 14:15:48.640"/>
</return>
<msg timestamp="20220704 14:15:48.640" level="INFO">${checklist_name} = TestChecklist2</msg>
<status status="PASS" starttime="20220704 14:15:48.639" endtime="20220704 14:15:48.640"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${checklist_name}</arg>
<arg>TestChecklist2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220704 14:15:48.641" endtime="20220704 14:15:48.641"/>
</kw>
<kw name="Delete A Checklist" library="Checklist" type="TEARDOWN">
<arg>${checklist_id}</arg>
<doc>Deletes the checklist with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:15:48.657" level="INFO">${url} = checklists/62c2f6147e89595227397c94</msg>
<status status="PASS" starttime="20220704 14:15:48.656" endtime="20220704 14:15:48.657"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 14:15:48.855" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:48.657" endtime="20220704 14:15:48.855"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:15:48.855" endtime="20220704 14:15:48.855"/>
</return>
<msg timestamp="20220704 14:15:48.856" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:48.656" endtime="20220704 14:15:48.856"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:15:48.856" endtime="20220704 14:15:48.856"/>
</return>
<status status="PASS" starttime="20220704 14:15:48.641" endtime="20220704 14:15:48.856"/>
</kw>
<doc>Verify that a checklist's name can be updated through API</doc>
<tag>api</tag>
<tag>checklist.update</tag>
<tag>regression</tag>
<status status="PASS" starttime="20220704 14:15:48.091" endtime="20220704 14:15:48.856"/>
</test>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Teardown Board</arg>
<arg>Delete All Sessions</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Teardown Board">
<doc>Delete the board created for this suite</doc>
<kw name="Delete A Board" library="Board">
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:15:48.859" level="INFO">${url} = boards/62c2f612eaf0e1105ae59184</msg>
<status status="PASS" starttime="20220704 14:15:48.858" endtime="20220704 14:15:48.859"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 14:15:49.297" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:48.859" endtime="20220704 14:15:49.297"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:15:49.297" endtime="20220704 14:15:49.297"/>
</return>
<msg timestamp="20220704 14:15:49.298" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:48.858" endtime="20220704 14:15:49.298"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:15:49.298" endtime="20220704 14:15:49.298"/>
</return>
<status status="PASS" starttime="20220704 14:15:48.858" endtime="20220704 14:15:49.298"/>
</kw>
<status status="PASS" starttime="20220704 14:15:48.857" endtime="20220704 14:15:49.298"/>
</kw>
<kw name="Delete All Sessions" library="request_own_library">
<status status="PASS" starttime="20220704 14:15:49.298" endtime="20220704 14:15:49.300"/>
</kw>
<status status="PASS" starttime="20220704 14:15:48.857" endtime="20220704 14:15:49.300"/>
</kw>
<doc>Example Test with Trello API Checklists</doc>
<status status="PASS" starttime="20220704 14:15:46.162" endtime="20220704 14:15:49.300"/>
</suite>
<suite id="s1-s1-s1-s4" name="Trello Api Labels Tests" source="/trello/api/trello_api_labels_tests.robot">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Create Trello Session</arg>
<arg>Setup Board And List</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Create Trello Session" library="TrelloAPI">
<doc>Creates a Trello Session</doc>
<kw name="Create Session" library="request_own_library">
<arg>${API_BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<status status="PASS" starttime="20220704 14:15:49.310" endtime="20220704 14:15:49.311"/>
</kw>
<status status="PASS" starttime="20220704 14:15:49.310" endtime="20220704 14:15:49.311"/>
</kw>
<kw name="Setup Board And List">
<doc>Create a board and save its ID and its first list's ID</doc>
<kw name="Create A Board" library="Board">
<var>${BOARD}</var>
<arg>TestBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 14:15:49.312" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 14:15:49.311" endtime="20220704 14:15:49.312"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 14:15:49.312" endtime="20220704 14:15:49.312"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:15:49.313" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220704 14:15:49.312" endtime="20220704 14:15:49.313"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 14:15:49.676" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:49.313" endtime="20220704 14:15:49.676"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:15:49.676" endtime="20220704 14:15:49.677"/>
</return>
<msg timestamp="20220704 14:15:49.677" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:49.311" endtime="20220704 14:15:49.677"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:15:49.677" endtime="20220704 14:15:49.677"/>
</return>
<msg timestamp="20220704 14:15:49.677" level="INFO">${BOARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:49.311" endtime="20220704 14:15:49.677"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_BOARD_ID}</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220704 14:15:49.678" level="INFO">${TEST_SUITE_BOARD_ID} = 62c2f61594fab625d8031a28</msg>
<status status="PASS" starttime="20220704 14:15:49.677" endtime="20220704 14:15:49.678"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${LISTS}</var>
<arg>boards/${TEST_SUITE_BOARD_ID}/lists</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 14:15:49.817" level="INFO">${LISTS} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:49.678" endtime="20220704 14:15:49.818"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_LIST_ID}</arg>
<arg>${LISTS.json()}[0][id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220704 14:15:49.819" level="INFO">${TEST_SUITE_LIST_ID} = 62c2f61594fab625d8031a2f</msg>
<status status="PASS" starttime="20220704 14:15:49.818" endtime="20220704 14:15:49.819"/>
</kw>
<status status="PASS" starttime="20220704 14:15:49.311" endtime="20220704 14:15:49.819"/>
</kw>
<status status="PASS" starttime="20220704 14:15:49.310" endtime="20220704 14:15:49.819"/>
</kw>
<test id="s1-s1-s1-s4-t1" name="Create and get label on board" line="14">
<kw name="Create A Label" library="Label">
<var>${response}</var>
<arg>name</arg>
<arg>label2</arg>
<arg>color</arg>
<arg>yellow</arg>
<doc>Creates a new label in the given board.
required_args: idBoard
optional_args: name, color
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>idBoard</arg>
<arg>${idBoard}</arg>
<arg>@{optional_args}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 14:15:49.821" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 14:15:49.821" endtime="20220704 14:15:49.821"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 14:15:49.821" endtime="20220704 14:15:49.822"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:15:49.822" level="INFO">${url} = labels/</msg>
<status status="PASS" starttime="20220704 14:15:49.822" endtime="20220704 14:15:49.822"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 14:15:50.014" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:49.823" endtime="20220704 14:15:50.014"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:15:50.014" endtime="20220704 14:15:50.014"/>
</return>
<msg timestamp="20220704 14:15:50.015" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:49.821" endtime="20220704 14:15:50.015"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:15:50.015" endtime="20220704 14:15:50.015"/>
</return>
<msg timestamp="20220704 14:15:50.015" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:49.820" endtime="20220704 14:15:50.015"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>label</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220704 14:15:50.016" endtime="20220704 14:15:50.018"/>
</kw>
<status status="PASS" starttime="20220704 14:15:50.015" endtime="20220704 14:15:50.018"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${LABEL_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 14:15:50.018" endtime="20220704 14:15:50.018"/>
</return>
<msg timestamp="20220704 14:15:50.019" level="INFO">${LABEL_ID} = 62c2f615ced95e142e02ea22</msg>
<status status="PASS" starttime="20220704 14:15:50.018" endtime="20220704 14:15:50.019"/>
</kw>
<kw name="Get A Label" library="Label">
<var>${response}</var>
<arg>${LABEL_ID}</arg>
<doc>Gets the label with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:15:50.020" level="INFO">${url} = labels/62c2f615ced95e142e02ea22</msg>
<status status="PASS" starttime="20220704 14:15:50.020" endtime="20220704 14:15:50.020"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 14:15:50.157" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:50.020" endtime="20220704 14:15:50.157"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:15:50.157" endtime="20220704 14:15:50.157"/>
</return>
<msg timestamp="20220704 14:15:50.158" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:50.019" endtime="20220704 14:15:50.158"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:15:50.158" endtime="20220704 14:15:50.158"/>
</return>
<msg timestamp="20220704 14:15:50.158" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:50.019" endtime="20220704 14:15:50.158"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${LABEL_COLOR}</var>
<arg>${response}</arg>
<arg>color</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 14:15:50.159" endtime="20220704 14:15:50.159"/>
</return>
<msg timestamp="20220704 14:15:50.159" level="INFO">${LABEL_COLOR} = yellow</msg>
<status status="PASS" starttime="20220704 14:15:50.158" endtime="20220704 14:15:50.160"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${LABEL_NAME}</var>
<arg>${response}</arg>
<arg>name</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 14:15:50.160" endtime="20220704 14:15:50.160"/>
</return>
<msg timestamp="20220704 14:15:50.161" level="INFO">${LABEL_NAME} = label2</msg>
<status status="PASS" starttime="20220704 14:15:50.160" endtime="20220704 14:15:50.161"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${LABEL_COLOR}</arg>
<arg>yellow</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220704 14:15:50.161" endtime="20220704 14:15:50.161"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${LABEL_NAME}</arg>
<arg>label2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220704 14:15:50.161" endtime="20220704 14:15:50.162"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Label</arg>
<arg>${LABEL_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Label" library="Label">
<arg>${LABEL_ID}</arg>
<doc>Deletes the label with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:15:50.163" level="INFO">${url} = labels/62c2f615ced95e142e02ea22</msg>
<status status="PASS" starttime="20220704 14:15:50.163" endtime="20220704 14:15:50.163"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 14:15:50.367" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:50.163" endtime="20220704 14:15:50.367"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:15:50.367" endtime="20220704 14:15:50.367"/>
</return>
<msg timestamp="20220704 14:15:50.368" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:50.163" endtime="20220704 14:15:50.368"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:15:50.368" endtime="20220704 14:15:50.368"/>
</return>
<status status="PASS" starttime="20220704 14:15:50.162" endtime="20220704 14:15:50.368"/>
</kw>
<status status="PASS" starttime="20220704 14:15:50.162" endtime="20220704 14:15:50.368"/>
</kw>
<doc>Verify that a label can be created through API</doc>
<tag>api</tag>
<tag>label.create</tag>
<tag>label.get</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220704 14:15:49.819" endtime="20220704 14:15:50.368"/>
</test>
<test id="s1-s1-s1-s4-t2" name="Update label on board" line="28">
<kw name="Create A Label" library="Label">
<var>${response}</var>
<arg>name</arg>
<arg>label2</arg>
<arg>color</arg>
<arg>yellow</arg>
<doc>Creates a new label in the given board.
required_args: idBoard
optional_args: name, color
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>idBoard</arg>
<arg>${idBoard}</arg>
<arg>@{optional_args}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 14:15:50.370" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 14:15:50.370" endtime="20220704 14:15:50.371"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 14:15:50.371" endtime="20220704 14:15:50.371"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:15:50.372" level="INFO">${url} = labels/</msg>
<status status="PASS" starttime="20220704 14:15:50.371" endtime="20220704 14:15:50.372"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 14:15:50.559" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:50.372" endtime="20220704 14:15:50.559"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:15:50.559" endtime="20220704 14:15:50.559"/>
</return>
<msg timestamp="20220704 14:15:50.559" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:50.370" endtime="20220704 14:15:50.559"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:15:50.559" endtime="20220704 14:15:50.559"/>
</return>
<msg timestamp="20220704 14:15:50.560" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:50.369" endtime="20220704 14:15:50.560"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>label</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220704 14:15:50.560" endtime="20220704 14:15:50.562"/>
</kw>
<status status="PASS" starttime="20220704 14:15:50.560" endtime="20220704 14:15:50.562"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${LABEL_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 14:15:50.563" endtime="20220704 14:15:50.563"/>
</return>
<msg timestamp="20220704 14:15:50.564" level="INFO">${LABEL_ID} = 62c2f616a01ae83684a262ad</msg>
<status status="PASS" starttime="20220704 14:15:50.563" endtime="20220704 14:15:50.564"/>
</kw>
<kw name="Update A Label" library="Label">
<var>${new_response}</var>
<arg>${LABEL_ID}</arg>
<arg>name</arg>
<arg>label3</arg>
<arg>color</arg>
<arg>orange</arg>
<doc>Updates the label with the given ID
optional_args: name, color
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 14:15:50.565" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 14:15:50.565" endtime="20220704 14:15:50.565"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 14:15:50.565" endtime="20220704 14:15:50.565"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:15:50.566" level="INFO">${url} = labels/62c2f616a01ae83684a262ad</msg>
<status status="PASS" starttime="20220704 14:15:50.565" endtime="20220704 14:15:50.566"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 14:15:50.756" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:50.566" endtime="20220704 14:15:50.756"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:15:50.757" endtime="20220704 14:15:50.757"/>
</return>
<msg timestamp="20220704 14:15:50.757" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:50.564" endtime="20220704 14:15:50.757"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:15:50.757" endtime="20220704 14:15:50.757"/>
</return>
<msg timestamp="20220704 14:15:50.757" level="INFO">${new_response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:50.564" endtime="20220704 14:15:50.757"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${NEW_LABEL_COLOR}</var>
<arg>${new_response}</arg>
<arg>color</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 14:15:50.758" endtime="20220704 14:15:50.758"/>
</return>
<msg timestamp="20220704 14:15:50.758" level="INFO">${NEW_LABEL_COLOR} = orange</msg>
<status status="PASS" starttime="20220704 14:15:50.757" endtime="20220704 14:15:50.759"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${NEW_LABEL_NAME}</var>
<arg>${new_response}</arg>
<arg>name</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 14:15:50.759" endtime="20220704 14:15:50.759"/>
</return>
<msg timestamp="20220704 14:15:50.760" level="INFO">${NEW_LABEL_NAME} = label3</msg>
<status status="PASS" starttime="20220704 14:15:50.759" endtime="20220704 14:15:50.760"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${NEW_LABEL_COLOR}</arg>
<arg>orange</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220704 14:15:50.760" endtime="20220704 14:15:50.760"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${NEW_LABEL_NAME}</arg>
<arg>label3</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220704 14:15:50.760" endtime="20220704 14:15:50.761"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Label</arg>
<arg>${LABEL_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Label" library="Label">
<arg>${LABEL_ID}</arg>
<doc>Deletes the label with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:15:50.762" level="INFO">${url} = labels/62c2f616a01ae83684a262ad</msg>
<status status="PASS" starttime="20220704 14:15:50.762" endtime="20220704 14:15:50.762"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 14:15:50.964" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:50.762" endtime="20220704 14:15:50.964"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:15:50.964" endtime="20220704 14:15:50.964"/>
</return>
<msg timestamp="20220704 14:15:50.964" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:50.761" endtime="20220704 14:15:50.964"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:15:50.964" endtime="20220704 14:15:50.964"/>
</return>
<status status="PASS" starttime="20220704 14:15:50.761" endtime="20220704 14:15:50.965"/>
</kw>
<status status="PASS" starttime="20220704 14:15:50.761" endtime="20220704 14:15:50.965"/>
</kw>
<doc>Verify that a label's name and color can be updated through API</doc>
<tag>api</tag>
<tag>label.update</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220704 14:15:50.368" endtime="20220704 14:15:50.965"/>
</test>
<test id="s1-s1-s1-s4-t3" name="Delete label on board" line="41">
<kw name="Create A Label" library="Label">
<var>${response}</var>
<arg>name</arg>
<arg>label2</arg>
<arg>color</arg>
<arg>yellow</arg>
<doc>Creates a new label in the given board.
required_args: idBoard
optional_args: name, color
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>idBoard</arg>
<arg>${idBoard}</arg>
<arg>@{optional_args}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 14:15:50.967" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 14:15:50.967" endtime="20220704 14:15:50.967"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 14:15:50.967" endtime="20220704 14:15:50.967"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:15:50.968" level="INFO">${url} = labels/</msg>
<status status="PASS" starttime="20220704 14:15:50.968" endtime="20220704 14:15:50.968"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 14:15:51.144" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:50.968" endtime="20220704 14:15:51.144"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:15:51.144" endtime="20220704 14:15:51.144"/>
</return>
<msg timestamp="20220704 14:15:51.145" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:50.966" endtime="20220704 14:15:51.145"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:15:51.145" endtime="20220704 14:15:51.145"/>
</return>
<msg timestamp="20220704 14:15:51.145" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:50.966" endtime="20220704 14:15:51.145"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${LABEL_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 14:15:51.146" endtime="20220704 14:15:51.146"/>
</return>
<msg timestamp="20220704 14:15:51.146" level="INFO">${LABEL_ID} = 62c2f617eb9e8d2e1029cb9b</msg>
<status status="PASS" starttime="20220704 14:15:51.145" endtime="20220704 14:15:51.146"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Label</arg>
<arg>${LABEL_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Label" library="Label">
<arg>${LABEL_ID}</arg>
<doc>Deletes the label with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:15:51.148" level="INFO">${url} = labels/62c2f617eb9e8d2e1029cb9b</msg>
<status status="PASS" starttime="20220704 14:15:51.148" endtime="20220704 14:15:51.148"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 14:15:51.339" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:51.148" endtime="20220704 14:15:51.339"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:15:51.339" endtime="20220704 14:15:51.339"/>
</return>
<msg timestamp="20220704 14:15:51.340" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:51.147" endtime="20220704 14:15:51.340"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:15:51.340" endtime="20220704 14:15:51.340"/>
</return>
<status status="PASS" starttime="20220704 14:15:51.147" endtime="20220704 14:15:51.340"/>
</kw>
<status status="PASS" starttime="20220704 14:15:51.147" endtime="20220704 14:15:51.340"/>
</kw>
<kw name="Get A Label" library="Label">
<arg>${LABEL_ID}</arg>
<arg>status_code=404</arg>
<doc>Gets the label with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:15:51.341" level="INFO">${url} = labels/62c2f617eb9e8d2e1029cb9b</msg>
<status status="PASS" starttime="20220704 14:15:51.341" endtime="20220704 14:15:51.341"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 14:15:51.468" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220704 14:15:51.342" endtime="20220704 14:15:51.468"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:15:51.468" endtime="20220704 14:15:51.469"/>
</return>
<msg timestamp="20220704 14:15:51.469" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220704 14:15:51.341" endtime="20220704 14:15:51.469"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:15:51.469" endtime="20220704 14:15:51.469"/>
</return>
<status status="PASS" starttime="20220704 14:15:51.340" endtime="20220704 14:15:51.469"/>
</kw>
<doc>Verify that a label can be deleted through API</doc>
<tag>api</tag>
<tag>label.delete</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220704 14:15:50.965" endtime="20220704 14:15:51.469"/>
</test>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Teardown Board</arg>
<arg>Delete All Sessions</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Teardown Board">
<doc>Delete the board created for this session.</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:15:51.472" level="INFO">${url} = boards/62c2f61594fab625d8031a28</msg>
<status status="PASS" starttime="20220704 14:15:51.472" endtime="20220704 14:15:51.472"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 14:15:51.967" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:51.473" endtime="20220704 14:15:51.967"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:15:51.967" endtime="20220704 14:15:51.967"/>
</return>
<msg timestamp="20220704 14:15:51.968" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:51.472" endtime="20220704 14:15:51.968"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:15:51.968" endtime="20220704 14:15:51.968"/>
</return>
<status status="PASS" starttime="20220704 14:15:51.471" endtime="20220704 14:15:51.968"/>
</kw>
<status status="PASS" starttime="20220704 14:15:51.471" endtime="20220704 14:15:51.968"/>
</kw>
<status status="PASS" starttime="20220704 14:15:51.471" endtime="20220704 14:15:51.968"/>
</kw>
<kw name="Delete All Sessions" library="request_own_library">
<status status="PASS" starttime="20220704 14:15:51.968" endtime="20220704 14:15:51.970"/>
</kw>
<status status="PASS" starttime="20220704 14:15:51.470" endtime="20220704 14:15:51.970"/>
</kw>
<doc>Example Test with Trello API Cards</doc>
<status status="PASS" starttime="20220704 14:15:49.301" endtime="20220704 14:15:51.970"/>
</suite>
<suite id="s1-s1-s1-s5" name="Trello Api Lists Tests" source="/trello/api/trello_api_lists_tests.robot">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Create Trello Session</arg>
<arg>Setup Board</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Create Trello Session" library="TrelloAPI">
<doc>Creates a Trello Session</doc>
<kw name="Create Session" library="request_own_library">
<arg>${API_BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<status status="PASS" starttime="20220704 14:15:51.980" endtime="20220704 14:15:51.980"/>
</kw>
<status status="PASS" starttime="20220704 14:15:51.980" endtime="20220704 14:15:51.980"/>
</kw>
<kw name="Setup Board">
<doc>Create a board and save it's id for the suite</doc>
<kw name="Create A Board" library="Board">
<var>${BOARD}</var>
<arg>TestBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 14:15:51.982" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 14:15:51.981" endtime="20220704 14:15:51.982"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 14:15:51.982" endtime="20220704 14:15:51.982"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:15:51.983" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220704 14:15:51.982" endtime="20220704 14:15:51.983"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 14:15:52.349" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:51.983" endtime="20220704 14:15:52.349"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:15:52.349" endtime="20220704 14:15:52.349"/>
</return>
<msg timestamp="20220704 14:15:52.349" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:51.981" endtime="20220704 14:15:52.349"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:15:52.349" endtime="20220704 14:15:52.349"/>
</return>
<msg timestamp="20220704 14:15:52.349" level="INFO">${BOARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:51.981" endtime="20220704 14:15:52.349"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Set Suite Variable</arg>
<arg>\${TEST_SUITE_BOARD_ID}</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_BOARD_ID}</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220704 14:15:52.351" level="INFO">${TEST_SUITE_BOARD_ID} = 62c2f618806686216e3b1a23</msg>
<status status="PASS" starttime="20220704 14:15:52.350" endtime="20220704 14:15:52.351"/>
</kw>
<status status="PASS" starttime="20220704 14:15:52.350" endtime="20220704 14:15:52.351"/>
</kw>
<status status="PASS" starttime="20220704 14:15:51.980" endtime="20220704 14:15:52.351"/>
</kw>
<status status="PASS" starttime="20220704 14:15:51.979" endtime="20220704 14:15:52.351"/>
</kw>
<test id="s1-s1-s1-s5-t1" name="CREATE a list" line="13">
<kw name="Create A List" library="List">
<var>${response}</var>
<arg>NewList</arg>
<doc>Creates a new List
board id
name the list will have
optional_args: idListSource, pos, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>list</arg>
<arg>name</arg>
<arg>${name}</arg>
<arg>idBoard</arg>
<arg>${idBoard}</arg>
<arg>@{optional_args}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 14:15:52.353" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 14:15:52.353" endtime="20220704 14:15:52.353"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 14:15:52.353" endtime="20220704 14:15:52.353"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:15:52.354" level="INFO">${url} = lists/</msg>
<status status="PASS" starttime="20220704 14:15:52.354" endtime="20220704 14:15:52.354"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 14:15:52.563" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:52.354" endtime="20220704 14:15:52.563"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:15:52.563" endtime="20220704 14:15:52.563"/>
</return>
<msg timestamp="20220704 14:15:52.563" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:52.352" endtime="20220704 14:15:52.563"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:15:52.563" endtime="20220704 14:15:52.563"/>
</return>
<msg timestamp="20220704 14:15:52.564" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:52.352" endtime="20220704 14:15:52.564"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>list</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220704 14:15:52.564" endtime="20220704 14:15:52.566"/>
</kw>
<status status="PASS" starttime="20220704 14:15:52.564" endtime="20220704 14:15:52.566"/>
</kw>
<doc>Verify that a list can be created through API</doc>
<tag>api</tag>
<tag>list.create</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220704 14:15:52.351" endtime="20220704 14:15:52.567"/>
</test>
<test id="s1-s1-s1-s5-t2" name="UPDATE a list" line="19">
<kw name="Create A List" library="List">
<var>${response}</var>
<arg>NewList</arg>
<doc>Creates a new List
board id
name the list will have
optional_args: idListSource, pos, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>list</arg>
<arg>name</arg>
<arg>${name}</arg>
<arg>idBoard</arg>
<arg>${idBoard}</arg>
<arg>@{optional_args}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 14:15:52.569" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 14:15:52.568" endtime="20220704 14:15:52.569"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 14:15:52.569" endtime="20220704 14:15:52.569"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:15:52.570" level="INFO">${url} = lists/</msg>
<status status="PASS" starttime="20220704 14:15:52.569" endtime="20220704 14:15:52.570"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 14:15:52.744" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:52.570" endtime="20220704 14:15:52.744"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:15:52.745" endtime="20220704 14:15:52.745"/>
</return>
<msg timestamp="20220704 14:15:52.745" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:52.568" endtime="20220704 14:15:52.745"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:15:52.745" endtime="20220704 14:15:52.745"/>
</return>
<msg timestamp="20220704 14:15:52.745" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:52.568" endtime="20220704 14:15:52.745"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>list</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220704 14:15:52.746" endtime="20220704 14:15:52.748"/>
</kw>
<status status="PASS" starttime="20220704 14:15:52.745" endtime="20220704 14:15:52.748"/>
</kw>
<kw name="Update A List" library="List">
<arg>${response.json()}[id]</arg>
<arg>name</arg>
<arg>NewName</arg>
<doc>Updates the board with the given ID
optional_args: name, idListSource, pos, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>list</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 14:15:52.750" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 14:15:52.749" endtime="20220704 14:15:52.750"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 14:15:52.750" endtime="20220704 14:15:52.750"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:15:52.750" level="INFO">${url} = lists/62c2f618487de50b9657cf63</msg>
<status status="PASS" starttime="20220704 14:15:52.750" endtime="20220704 14:15:52.750"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 14:15:52.912" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:52.751" endtime="20220704 14:15:52.912"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:15:52.912" endtime="20220704 14:15:52.912"/>
</return>
<msg timestamp="20220704 14:15:52.912" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:52.749" endtime="20220704 14:15:52.912"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:15:52.912" endtime="20220704 14:15:52.912"/>
</return>
<status status="PASS" starttime="20220704 14:15:52.748" endtime="20220704 14:15:52.913"/>
</kw>
<kw name="Get A List" library="List">
<var>${new_response}</var>
<arg>${response.json()}[id]</arg>
<doc>Gets the List with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>list</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:15:52.915" level="INFO">${url} = lists/62c2f618487de50b9657cf63</msg>
<status status="PASS" starttime="20220704 14:15:52.914" endtime="20220704 14:15:52.915"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 14:15:53.045" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:52.915" endtime="20220704 14:15:53.045"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:15:53.045" endtime="20220704 14:15:53.045"/>
</return>
<msg timestamp="20220704 14:15:53.045" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:52.914" endtime="20220704 14:15:53.046"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:15:53.046" endtime="20220704 14:15:53.046"/>
</return>
<msg timestamp="20220704 14:15:53.046" level="INFO">${new_response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:52.913" endtime="20220704 14:15:53.046"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${new_response}</arg>
<arg>list</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220704 14:15:53.046" endtime="20220704 14:15:53.048"/>
</kw>
<status status="PASS" starttime="20220704 14:15:53.046" endtime="20220704 14:15:53.048"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${new_response.json()}[name]</arg>
<arg>NewName</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220704 14:15:53.048" endtime="20220704 14:15:53.049"/>
</kw>
<doc>Verify that a lists name can be updated through API</doc>
<tag>api</tag>
<tag>list.update</tag>
<tag>regression</tag>
<status status="PASS" starttime="20220704 14:15:52.567" endtime="20220704 14:15:53.049"/>
</test>
<test id="s1-s1-s1-s5-t3" name="ARCHIVE A list" line="29">
<kw name="Create A List" library="List">
<var>${response}</var>
<arg>NewList</arg>
<doc>Creates a new List
board id
name the list will have
optional_args: idListSource, pos, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>list</arg>
<arg>name</arg>
<arg>${name}</arg>
<arg>idBoard</arg>
<arg>${idBoard}</arg>
<arg>@{optional_args}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 14:15:53.051" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 14:15:53.051" endtime="20220704 14:15:53.051"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 14:15:53.051" endtime="20220704 14:15:53.052"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:15:53.053" level="INFO">${url} = lists/</msg>
<status status="PASS" starttime="20220704 14:15:53.053" endtime="20220704 14:15:53.053"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 14:15:53.253" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:53.053" endtime="20220704 14:15:53.253"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:15:53.253" endtime="20220704 14:15:53.253"/>
</return>
<msg timestamp="20220704 14:15:53.254" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:53.050" endtime="20220704 14:15:53.254"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:15:53.254" endtime="20220704 14:15:53.254"/>
</return>
<msg timestamp="20220704 14:15:53.254" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:53.050" endtime="20220704 14:15:53.254"/>
</kw>
<kw name="Archive A List" library="List">
<arg>${response.json()}[id]</arg>
<doc>Deletes the list with the given ID</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>archive_list</arg>
<arg>${id}</arg>
<arg>value</arg>
<arg>true</arg>
<arg>status_code=${status_code}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 14:15:53.256" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 14:15:53.256" endtime="20220704 14:15:53.256"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 14:15:53.256" endtime="20220704 14:15:53.256"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:15:53.257" level="INFO">${url} = lists/62c2f61930f45b3d85a7aeda/closed</msg>
<status status="PASS" starttime="20220704 14:15:53.257" endtime="20220704 14:15:53.257"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 14:15:53.448" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:53.257" endtime="20220704 14:15:53.448"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:15:53.448" endtime="20220704 14:15:53.448"/>
</return>
<msg timestamp="20220704 14:15:53.448" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:53.255" endtime="20220704 14:15:53.448"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:15:53.448" endtime="20220704 14:15:53.448"/>
</return>
<status status="PASS" starttime="20220704 14:15:53.254" endtime="20220704 14:15:53.449"/>
</kw>
<kw name="Get A List" library="List">
<var>${new_response}</var>
<arg>${response.json()}[id]</arg>
<doc>Gets the List with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>list</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:15:53.451" level="INFO">${url} = lists/62c2f61930f45b3d85a7aeda</msg>
<status status="PASS" starttime="20220704 14:15:53.450" endtime="20220704 14:15:53.451"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 14:15:53.618" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:53.451" endtime="20220704 14:15:53.618"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:15:53.618" endtime="20220704 14:15:53.618"/>
</return>
<msg timestamp="20220704 14:15:53.619" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:53.450" endtime="20220704 14:15:53.619"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:15:53.619" endtime="20220704 14:15:53.619"/>
</return>
<msg timestamp="20220704 14:15:53.619" level="INFO">${new_response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:53.449" endtime="20220704 14:15:53.619"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${new_response.json()}[closed]</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220704 14:15:53.619" endtime="20220704 14:15:53.620"/>
</kw>
<doc>Verify that a list can be archived through API</doc>
<tag>api</tag>
<tag>list.archive</tag>
<tag>regression</tag>
<status status="PASS" starttime="20220704 14:15:53.049" endtime="20220704 14:15:53.620"/>
</test>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Teardown Board</arg>
<arg>Delete All Sessions</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Teardown Board">
<doc>Delete the board created for this suite.</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:15:53.623" level="INFO">${url} = boards/62c2f618806686216e3b1a23</msg>
<status status="PASS" starttime="20220704 14:15:53.623" endtime="20220704 14:15:53.623"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 14:15:54.055" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:53.623" endtime="20220704 14:15:54.055"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:15:54.055" endtime="20220704 14:15:54.055"/>
</return>
<msg timestamp="20220704 14:15:54.056" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:53.622" endtime="20220704 14:15:54.056"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:15:54.056" endtime="20220704 14:15:54.056"/>
</return>
<status status="PASS" starttime="20220704 14:15:53.621" endtime="20220704 14:15:54.056"/>
</kw>
<status status="PASS" starttime="20220704 14:15:53.621" endtime="20220704 14:15:54.056"/>
</kw>
<status status="PASS" starttime="20220704 14:15:53.621" endtime="20220704 14:15:54.056"/>
</kw>
<kw name="Delete All Sessions" library="request_own_library">
<status status="PASS" starttime="20220704 14:15:54.056" endtime="20220704 14:15:54.057"/>
</kw>
<status status="PASS" starttime="20220704 14:15:53.621" endtime="20220704 14:15:54.057"/>
</kw>
<doc>Example Test with Trello API lists</doc>
<status status="PASS" starttime="20220704 14:15:51.971" endtime="20220704 14:15:54.057"/>
</suite>
<status status="PASS" starttime="20220704 14:15:36.629" endtime="20220704 14:15:54.060"/>
</suite>
<status status="PASS" starttime="20220704 14:15:36.612" endtime="20220704 14:15:54.063"/>
</suite>
<suite id="s1-s2" name="Trello" source="/trello">
<suite id="s1-s2-s1" name="Gui" source="/trello/gui">
<suite id="s1-s2-s1-s1" name="Trello Gui Board" source="/trello/gui/trello_gui_board.robot">
<kw name="Boards Suite Setup" type="SETUP">
<doc>Creates a Trello Sesion in order to use api's keywords.</doc>
<kw name="Create Trello Session" library="TrelloAPI">
<doc>Creates a Trello Session</doc>
<kw name="Create Session" library="request_own_library">
<arg>${API_BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<status status="PASS" starttime="20220704 14:16:35.855" endtime="20220704 14:16:35.855"/>
</kw>
<status status="PASS" starttime="20220704 14:16:35.854" endtime="20220704 14:16:35.855"/>
</kw>
<status status="PASS" starttime="20220704 14:16:35.854" endtime="20220704 14:16:35.855"/>
</kw>
<test id="s1-s2-s1-s1-t1" name="create a board" line="12">
<kw name="Open Browser From Environment" library="CommonGUI">
<arg>${LOGIN_URL}</arg>
<doc>This keywords takes REMOTE and BROWSER variables
from the environment automatically and only needs a url</doc>
<if>
<branch type="IF" condition="${is_remote}">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${url}</arg>
<arg>${BROWSER}</arg>
<arg>remote_url=http://selenium-hub:4444</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20220704 14:16:35.858" level="INFO">Opening browser 'chrome' to base url 'https://trello.com/login' through remote server at 'http://selenium-hub:4444'.</msg>
<status status="PASS" starttime="20220704 14:16:35.857" endtime="20220704 14:16:37.828"/>
</kw>
<status status="PASS" starttime="20220704 14:16:35.857" endtime="20220704 14:16:37.829"/>
</branch>
<branch type="ELSE">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${url}</arg>
<arg>${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<status status="NOT RUN" starttime="20220704 14:16:37.829" endtime="20220704 14:16:37.829"/>
</kw>
<status status="NOT RUN" starttime="20220704 14:16:37.829" endtime="20220704 14:16:37.829"/>
</branch>
<status status="PASS" starttime="20220704 14:16:35.857" endtime="20220704 14:16:37.829"/>
</if>
<status status="PASS" starttime="20220704 14:16:35.857" endtime="20220704 14:16:37.829"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20220704 14:16:37.829" endtime="20220704 14:16:37.966"/>
</kw>
<kw name="Login To Trello" library="LoginPage">
<arg>${DEFAULT_EMAIL}</arg>
<arg>${DEFAULT_PASSWORD}</arg>
<doc>High-level keyword for logging in to Trello</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220704 14:16:37.987" level="INFO">${url} = https://trello.com/login</msg>
<status status="PASS" starttime="20220704 14:16:37.967" endtime="20220704 14:16:37.987"/>
</kw>
<if>
<branch type="IF" condition="'${url}' != '${LOGIN_URL}'">
<kw name="Go To" library="SeleniumLibrary">
<arg>${LOGIN_URL}</arg>
<doc>Navigates the current browser window to the provided ``url``.</doc>
<status status="NOT RUN" starttime="20220704 14:16:37.988" endtime="20220704 14:16:37.988"/>
</kw>
<status status="NOT RUN" starttime="20220704 14:16:37.987" endtime="20220704 14:16:37.988"/>
</branch>
<status status="PASS" starttime="20220704 14:16:37.987" endtime="20220704 14:16:37.988"/>
</if>
<kw name="Enter Username" library="LoginPage">
<arg>${username}</arg>
<doc>Take a username as argument and
enters it in the user_input</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${USER_INPUT}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 14:16:37.988" endtime="20220704 14:16:38.057"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${USER_INPUT}</arg>
<arg>${username}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220704 14:16:38.058" level="INFO">Typing text 'bootcamp04@mailinator.com' into text field 'css:input#user'.</msg>
<status status="PASS" starttime="20220704 14:16:38.057" endtime="20220704 14:16:38.205"/>
</kw>
<status status="PASS" starttime="20220704 14:16:37.988" endtime="20220704 14:16:38.206"/>
</kw>
<kw name="Wait Until Element Is Not Visible" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<doc>Waits until the element ``locator`` is not visible.</doc>
<status status="PASS" starttime="20220704 14:16:38.206" endtime="20220704 14:16:39.008"/>
</kw>
<kw name="Click Login Button" library="LoginPage">
<doc>Clicks Trello's login button if in Trello's
login page, else it clicks Atlassian's</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220704 14:16:39.032" level="INFO">${url} = https://trello.com/login</msg>
<status status="PASS" starttime="20220704 14:16:39.009" endtime="20220704 14:16:39.032"/>
</kw>
<if>
<branch type="IF" condition="'${url}' == '${LOGIN_URL}'">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220704 14:16:39.032" endtime="20220704 14:16:39.110"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220704 14:16:39.110" level="INFO">Clicking button 'css:input#login'.</msg>
<status status="PASS" starttime="20220704 14:16:39.110" endtime="20220704 14:16:40.217"/>
</kw>
<status status="PASS" starttime="20220704 14:16:39.032" endtime="20220704 14:16:40.217"/>
</branch>
<branch type="ELSE">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="NOT RUN" starttime="20220704 14:16:40.217" endtime="20220704 14:16:40.217"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<status status="NOT RUN" starttime="20220704 14:16:40.217" endtime="20220704 14:16:40.217"/>
</kw>
<status status="NOT RUN" starttime="20220704 14:16:40.217" endtime="20220704 14:16:40.217"/>
</branch>
<status status="PASS" starttime="20220704 14:16:39.032" endtime="20220704 14:16:40.217"/>
</if>
<status status="PASS" starttime="20220704 14:16:39.009" endtime="20220704 14:16:40.218"/>
</kw>
<kw name="Wait Until Location Is Atlassian's Login" library="LoginPage">
<doc>Waits for the page redirection when logging in.</doc>
<kw name="Wait Until Location Contains" library="SeleniumLibrary">
<arg>atlassian.com</arg>
<doc>Waits until the current URL contains ``expected``.</doc>
<status status="PASS" starttime="20220704 14:16:40.218" endtime="20220704 14:16:40.238"/>
</kw>
<status status="PASS" starttime="20220704 14:16:40.218" endtime="20220704 14:16:40.239"/>
</kw>
<kw name="Enter Password" library="LoginPage">
<arg>${password}</arg>
<doc>Take a password as argument and
enters it in the password_input</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<arg>timeout=10</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 14:16:40.239" endtime="20220704 14:16:40.310"/>
</kw>
<kw name="Input Password" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<arg>${password}</arg>
<doc>Types the given password into the text field identified by ``locator``.</doc>
<msg timestamp="20220704 14:16:40.311" level="INFO">Typing password into text field 'css:input#password'.</msg>
<msg timestamp="20220704 14:16:40.376" level="INFO">Temporally setting log level to: NONE</msg>
<msg timestamp="20220704 14:16:40.454" level="INFO">Log level changed from NONE to INFO.</msg>
<status status="PASS" starttime="20220704 14:16:40.310" endtime="20220704 14:16:40.454"/>
</kw>
<status status="PASS" starttime="20220704 14:16:40.239" endtime="20220704 14:16:40.454"/>
</kw>
<kw name="Click Login Button" library="LoginPage">
<doc>Clicks Trello's login button if in Trello's
login page, else it clicks Atlassian's</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220704 14:16:40.478" level="INFO">${url} = https://id.atlassian.com/login?application=trello&amp;continue=https%3A%2F%2Ftrello.com%2Fauth%2Fatlassian%2Fcallback%3FreturnUrl%3D%252F%26display%3D%26aaOnboarding%3D%26updateEmail%3D%26traceId%3D62c2f6...</msg>
<status status="PASS" starttime="20220704 14:16:40.455" endtime="20220704 14:16:40.478"/>
</kw>
<if>
<branch type="IF" condition="'${url}' == '${LOGIN_URL}'">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="NOT RUN" starttime="20220704 14:16:40.479" endtime="20220704 14:16:40.479"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<status status="NOT RUN" starttime="20220704 14:16:40.479" endtime="20220704 14:16:40.479"/>
</kw>
<status status="NOT RUN" starttime="20220704 14:16:40.478" endtime="20220704 14:16:40.479"/>
</branch>
<branch type="ELSE">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220704 14:16:40.479" endtime="20220704 14:16:40.558"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220704 14:16:40.559" level="INFO">Clicking button 'css:button#login-submit'.</msg>
<status status="PASS" starttime="20220704 14:16:40.558" endtime="20220704 14:16:40.680"/>
</kw>
<status status="PASS" starttime="20220704 14:16:40.479" endtime="20220704 14:16:40.680"/>
</branch>
<status status="PASS" starttime="20220704 14:16:40.478" endtime="20220704 14:16:40.680"/>
</if>
<status status="PASS" starttime="20220704 14:16:40.455" endtime="20220704 14:16:40.680"/>
</kw>
<status status="PASS" starttime="20220704 14:16:37.967" endtime="20220704 14:16:40.680"/>
</kw>
<kw name="Click New Board Button" library="BoardsPage">
<doc>Clicks the button that creates a new board.</doc>
<kw name="Wait Until Location Contains" library="SeleniumLibrary">
<arg>${BOARDS_PATH}</arg>
<doc>Waits until the current URL contains ``expected``.</doc>
<status status="PASS" starttime="20220704 14:16:40.681" endtime="20220704 14:16:44.362"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Click Element</arg>
<arg>${CREATE_NEW_BOARD_BUTTON}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${CREATE_NEW_BOARD_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 14:16:44.363" level="INFO">Clicking element 'xpath://div[@class="boards-page-board-section mod-no-sidebar"]//div[@class="board-tile mod-add"]'.</msg>
<status status="PASS" starttime="20220704 14:16:44.363" endtime="20220704 14:16:44.548"/>
</kw>
<status status="PASS" starttime="20220704 14:16:44.362" endtime="20220704 14:16:44.548"/>
</kw>
<status status="PASS" starttime="20220704 14:16:40.680" endtime="20220704 14:16:44.549"/>
</kw>
<kw name="Set Name to Board" library="BoardsPage">
<arg>NewName</arg>
<doc>Set the name of the board and press the create button</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${BOARD_NAME_INPUT}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 14:16:44.549" endtime="20220704 14:16:44.925"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${BOARD_NAME_INPUT}</arg>
<arg>${name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220704 14:16:44.926" level="INFO">Typing text 'NewName' into text field 'xpath://div[@title='Create board']/ancestor::section//input[@type="text"]'.</msg>
<status status="PASS" starttime="20220704 14:16:44.925" endtime="20220704 14:16:45.107"/>
</kw>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${CREATE_BUTTON}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220704 14:16:45.108" endtime="20220704 14:16:45.174"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${CREATE_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 14:16:45.174" level="INFO">Clicking element 'xpath://div[@title='Create board']/ancestor::section//button[text()='Create']'.</msg>
<status status="PASS" starttime="20220704 14:16:45.174" endtime="20220704 14:16:45.259"/>
</kw>
<status status="PASS" starttime="20220704 14:16:44.549" endtime="20220704 14:16:45.259"/>
</kw>
<kw name="Verify Name of Board" library="UpperHorizontalMenu">
<arg>NewName</arg>
<doc>Verifies the name of a board</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${NAME_OF_BOARD}</arg>
<arg>10</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 14:16:45.260" endtime="20220704 14:16:46.523"/>
</kw>
<kw name="Element Text Should Be" library="SeleniumLibrary">
<arg>${NAME_OF_BOARD}</arg>
<arg>${name}</arg>
<doc>Verifies that element ``locator`` contains exact the text ``expected``.</doc>
<msg timestamp="20220704 14:16:46.524" level="INFO">Verifying element 'xpath://h1[contains(@class, 'js-board-editing-target')]' contains exact text 'NewName'.</msg>
<status status="PASS" starttime="20220704 14:16:46.524" endtime="20220704 14:16:46.611"/>
</kw>
<status status="PASS" starttime="20220704 14:16:45.259" endtime="20220704 14:16:46.611"/>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Open Show Menu</arg>
<arg>Delete Current Board</arg>
<arg>Close Browser</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Open Show Menu" library="UpperHorizontalMenu">
<doc>Open the Show Menu in the right side of the board page where multiple options are available</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${SHOW_MENU_BUTTON}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 14:16:46.612" endtime="20220704 14:16:46.668"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${SHOW_MENU_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 14:16:46.669" level="INFO">Clicking element 'xpath://div[contains(@class, 'board-header')]//a[contains(., 'Show menu')]'.</msg>
<status status="PASS" starttime="20220704 14:16:46.668" endtime="20220704 14:16:46.789"/>
</kw>
<status status="PASS" starttime="20220704 14:16:46.611" endtime="20220704 14:16:46.789"/>
</kw>
<kw name="Delete Current Board" library="ShownMenu">
<doc>Deletes the current board</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${MORE_BUTTON}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 14:16:46.790" endtime="20220704 14:16:46.930"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${MORE_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 14:16:46.930" level="INFO">Clicking element 'xpath://div[contains(@class, 'board-menu-content')]//a[contains(text(), 'More')]'.</msg>
<status status="PASS" starttime="20220704 14:16:46.930" endtime="20220704 14:16:47.041"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${CLOSE_BOARD_BUTTON}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 14:16:47.041" endtime="20220704 14:16:47.110"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${CLOSE_BOARD_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 14:16:47.110" level="INFO">Clicking element 'xpath://div[@class= 'board-menu-content-frame']//a[contains(text(), 'Close board')]'.</msg>
<status status="PASS" starttime="20220704 14:16:47.110" endtime="20220704 14:16:47.226"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${CLOSE_BUTTON}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 14:16:47.226" endtime="20220704 14:16:47.281"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${CLOSE_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 14:16:47.281" level="INFO">Clicking element 'xpath://div[@class= 'no-back']//input'.</msg>
<status status="PASS" starttime="20220704 14:16:47.281" endtime="20220704 14:16:47.412"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${PERMANENTLY_DELETE_BUTTON}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 14:16:47.412" endtime="20220704 14:16:47.744"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${PERMANENTLY_DELETE_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 14:16:47.744" level="INFO">Clicking element 'xpath://button[text()= 'Permanently delete board']'.</msg>
<status status="PASS" starttime="20220704 14:16:47.744" endtime="20220704 14:16:47.823"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${CONFIRM_DELETE_BUTTON}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 14:16:47.823" endtime="20220704 14:16:47.869"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${CONFIRM_DELETE_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 14:16:47.870" level="INFO">Clicking element 'xpath://section//button[text()= 'Delete']'.</msg>
<status status="PASS" starttime="20220704 14:16:47.870" endtime="20220704 14:16:47.937"/>
</kw>
<status status="PASS" starttime="20220704 14:16:46.790" endtime="20220704 14:16:47.937"/>
</kw>
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20220704 14:16:47.938" endtime="20220704 14:16:48.046"/>
</kw>
<status status="PASS" starttime="20220704 14:16:46.611" endtime="20220704 14:16:48.046"/>
</kw>
<doc>Verify that a board can be created through GUI</doc>
<tag>board.create</tag>
<tag>gui</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220704 14:16:35.856" endtime="20220704 14:16:48.046"/>
</test>
<test id="s1-s2-s1-s1-t2" name="delete a board" line="26">
<kw name="Create A Board" library="Board">
<var>${BOARD}</var>
<arg>NewName</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 14:16:48.049" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 14:16:48.048" endtime="20220704 14:16:48.049"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 14:16:48.049" endtime="20220704 14:16:48.049"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:16:48.050" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220704 14:16:48.049" endtime="20220704 14:16:48.050"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 14:16:48.367" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:16:48.050" endtime="20220704 14:16:48.367"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:16:48.367" endtime="20220704 14:16:48.367"/>
</return>
<msg timestamp="20220704 14:16:48.367" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:16:48.048" endtime="20220704 14:16:48.367"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:16:48.367" endtime="20220704 14:16:48.367"/>
</return>
<msg timestamp="20220704 14:16:48.368" level="INFO">${BOARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:16:48.048" endtime="20220704 14:16:48.368"/>
</kw>
<kw name="Open Browser From Environment" library="CommonGUI">
<arg>${LOGIN_URL}</arg>
<doc>This keywords takes REMOTE and BROWSER variables
from the environment automatically and only needs a url</doc>
<if>
<branch type="IF" condition="${is_remote}">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${url}</arg>
<arg>${BROWSER}</arg>
<arg>remote_url=http://selenium-hub:4444</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20220704 14:16:48.369" level="INFO">Opening browser 'chrome' to base url 'https://trello.com/login' through remote server at 'http://selenium-hub:4444'.</msg>
<status status="PASS" starttime="20220704 14:16:48.369" endtime="20220704 14:16:49.525"/>
</kw>
<status status="PASS" starttime="20220704 14:16:48.368" endtime="20220704 14:16:49.525"/>
</branch>
<branch type="ELSE">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${url}</arg>
<arg>${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<status status="NOT RUN" starttime="20220704 14:16:49.526" endtime="20220704 14:16:49.526"/>
</kw>
<status status="NOT RUN" starttime="20220704 14:16:49.525" endtime="20220704 14:16:49.526"/>
</branch>
<status status="PASS" starttime="20220704 14:16:48.368" endtime="20220704 14:16:49.526"/>
</if>
<status status="PASS" starttime="20220704 14:16:48.368" endtime="20220704 14:16:49.526"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20220704 14:16:49.526" endtime="20220704 14:16:49.645"/>
</kw>
<kw name="Login To Trello" library="LoginPage">
<arg>${DEFAULT_EMAIL}</arg>
<arg>${DEFAULT_PASSWORD}</arg>
<doc>High-level keyword for logging in to Trello</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220704 14:16:49.664" level="INFO">${url} = https://trello.com/login</msg>
<status status="PASS" starttime="20220704 14:16:49.646" endtime="20220704 14:16:49.664"/>
</kw>
<if>
<branch type="IF" condition="'${url}' != '${LOGIN_URL}'">
<kw name="Go To" library="SeleniumLibrary">
<arg>${LOGIN_URL}</arg>
<doc>Navigates the current browser window to the provided ``url``.</doc>
<status status="NOT RUN" starttime="20220704 14:16:49.664" endtime="20220704 14:16:49.664"/>
</kw>
<status status="NOT RUN" starttime="20220704 14:16:49.664" endtime="20220704 14:16:49.664"/>
</branch>
<status status="PASS" starttime="20220704 14:16:49.664" endtime="20220704 14:16:49.664"/>
</if>
<kw name="Enter Username" library="LoginPage">
<arg>${username}</arg>
<doc>Take a username as argument and
enters it in the user_input</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${USER_INPUT}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 14:16:49.665" endtime="20220704 14:16:49.720"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${USER_INPUT}</arg>
<arg>${username}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220704 14:16:49.721" level="INFO">Typing text 'bootcamp04@mailinator.com' into text field 'css:input#user'.</msg>
<status status="PASS" starttime="20220704 14:16:49.720" endtime="20220704 14:16:49.855"/>
</kw>
<status status="PASS" starttime="20220704 14:16:49.665" endtime="20220704 14:16:49.855"/>
</kw>
<kw name="Wait Until Element Is Not Visible" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<doc>Waits until the element ``locator`` is not visible.</doc>
<status status="PASS" starttime="20220704 14:16:49.855" endtime="20220704 14:16:50.621"/>
</kw>
<kw name="Click Login Button" library="LoginPage">
<doc>Clicks Trello's login button if in Trello's
login page, else it clicks Atlassian's</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220704 14:16:50.633" level="INFO">${url} = https://trello.com/login</msg>
<status status="PASS" starttime="20220704 14:16:50.622" endtime="20220704 14:16:50.633"/>
</kw>
<if>
<branch type="IF" condition="'${url}' == '${LOGIN_URL}'">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220704 14:16:50.634" endtime="20220704 14:16:50.710"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220704 14:16:50.711" level="INFO">Clicking button 'css:input#login'.</msg>
<status status="PASS" starttime="20220704 14:16:50.710" endtime="20220704 14:16:51.714"/>
</kw>
<status status="PASS" starttime="20220704 14:16:50.633" endtime="20220704 14:16:51.714"/>
</branch>
<branch type="ELSE">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="NOT RUN" starttime="20220704 14:16:51.714" endtime="20220704 14:16:51.714"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<status status="NOT RUN" starttime="20220704 14:16:51.714" endtime="20220704 14:16:51.714"/>
</kw>
<status status="NOT RUN" starttime="20220704 14:16:51.714" endtime="20220704 14:16:51.714"/>
</branch>
<status status="PASS" starttime="20220704 14:16:50.633" endtime="20220704 14:16:51.714"/>
</if>
<status status="PASS" starttime="20220704 14:16:50.622" endtime="20220704 14:16:51.714"/>
</kw>
<kw name="Wait Until Location Is Atlassian's Login" library="LoginPage">
<doc>Waits for the page redirection when logging in.</doc>
<kw name="Wait Until Location Contains" library="SeleniumLibrary">
<arg>atlassian.com</arg>
<doc>Waits until the current URL contains ``expected``.</doc>
<status status="PASS" starttime="20220704 14:16:51.715" endtime="20220704 14:16:51.739"/>
</kw>
<status status="PASS" starttime="20220704 14:16:51.714" endtime="20220704 14:16:51.739"/>
</kw>
<kw name="Enter Password" library="LoginPage">
<arg>${password}</arg>
<doc>Take a password as argument and
enters it in the password_input</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<arg>timeout=10</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 14:16:51.739" endtime="20220704 14:16:51.802"/>
</kw>
<kw name="Input Password" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<arg>${password}</arg>
<doc>Types the given password into the text field identified by ``locator``.</doc>
<msg timestamp="20220704 14:16:51.802" level="INFO">Typing password into text field 'css:input#password'.</msg>
<msg timestamp="20220704 14:16:51.891" level="INFO">Temporally setting log level to: NONE</msg>
<msg timestamp="20220704 14:16:51.975" level="INFO">Log level changed from NONE to INFO.</msg>
<status status="PASS" starttime="20220704 14:16:51.802" endtime="20220704 14:16:51.975"/>
</kw>
<status status="PASS" starttime="20220704 14:16:51.739" endtime="20220704 14:16:51.976"/>
</kw>
<kw name="Click Login Button" library="LoginPage">
<doc>Clicks Trello's login button if in Trello's
login page, else it clicks Atlassian's</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220704 14:16:51.991" level="INFO">${url} = https://id.atlassian.com/login?application=trello&amp;continue=https%3A%2F%2Ftrello.com%2Fauth%2Fatlassian%2Fcallback%3FreturnUrl%3D%252F%26display%3D%26aaOnboarding%3D%26updateEmail%3D%26traceId%3D62c2f6...</msg>
<status status="PASS" starttime="20220704 14:16:51.976" endtime="20220704 14:16:51.991"/>
</kw>
<if>
<branch type="IF" condition="'${url}' == '${LOGIN_URL}'">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="NOT RUN" starttime="20220704 14:16:51.991" endtime="20220704 14:16:51.992"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<status status="NOT RUN" starttime="20220704 14:16:51.992" endtime="20220704 14:16:51.992"/>
</kw>
<status status="NOT RUN" starttime="20220704 14:16:51.991" endtime="20220704 14:16:51.992"/>
</branch>
<branch type="ELSE">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220704 14:16:51.992" endtime="20220704 14:16:52.058"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220704 14:16:52.058" level="INFO">Clicking button 'css:button#login-submit'.</msg>
<status status="PASS" starttime="20220704 14:16:52.058" endtime="20220704 14:16:52.174"/>
</kw>
<status status="PASS" starttime="20220704 14:16:51.992" endtime="20220704 14:16:52.174"/>
</branch>
<status status="PASS" starttime="20220704 14:16:51.991" endtime="20220704 14:16:52.174"/>
</if>
<status status="PASS" starttime="20220704 14:16:51.976" endtime="20220704 14:16:52.174"/>
</kw>
<status status="PASS" starttime="20220704 14:16:49.645" endtime="20220704 14:16:52.174"/>
</kw>
<kw name="Go To Board" library="BoardsPage">
<arg>NewName</arg>
<doc>Receives the board name and goes to that board's page.</doc>
<kw name="Format String" library="String">
<var>${locator}</var>
<arg>${BOARD_BUTTON}</arg>
<arg>${board_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:16:52.175" level="INFO">${locator} = //div[@title="NewName"]</msg>
<status status="PASS" starttime="20220704 14:16:52.175" endtime="20220704 14:16:52.175"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 14:16:52.175" endtime="20220704 14:16:55.739"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 14:16:55.740" level="INFO">Clicking element '//div[@title="NewName"]'.</msg>
<status status="PASS" starttime="20220704 14:16:55.740" endtime="20220704 14:16:56.099"/>
</kw>
<status status="PASS" starttime="20220704 14:16:52.174" endtime="20220704 14:16:56.099"/>
</kw>
<kw name="Verify Name of Board" library="UpperHorizontalMenu">
<arg>NewName</arg>
<doc>Verifies the name of a board</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${NAME_OF_BOARD}</arg>
<arg>10</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 14:16:56.100" endtime="20220704 14:16:56.686"/>
</kw>
<kw name="Element Text Should Be" library="SeleniumLibrary">
<arg>${NAME_OF_BOARD}</arg>
<arg>${name}</arg>
<doc>Verifies that element ``locator`` contains exact the text ``expected``.</doc>
<msg timestamp="20220704 14:16:56.687" level="INFO">Verifying element 'xpath://h1[contains(@class, 'js-board-editing-target')]' contains exact text 'NewName'.</msg>
<status status="PASS" starttime="20220704 14:16:56.686" endtime="20220704 14:16:56.757"/>
</kw>
<status status="PASS" starttime="20220704 14:16:56.099" endtime="20220704 14:16:56.757"/>
</kw>
<kw name="Open Show Menu" library="UpperHorizontalMenu">
<doc>Open the Show Menu in the right side of the board page where multiple options are available</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${SHOW_MENU_BUTTON}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 14:16:56.758" endtime="20220704 14:16:56.822"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${SHOW_MENU_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 14:16:56.823" level="INFO">Clicking element 'xpath://div[contains(@class, 'board-header')]//a[contains(., 'Show menu')]'.</msg>
<status status="PASS" starttime="20220704 14:16:56.822" endtime="20220704 14:16:56.948"/>
</kw>
<status status="PASS" starttime="20220704 14:16:56.758" endtime="20220704 14:16:56.948"/>
</kw>
<kw name="Delete Current Board" library="ShownMenu">
<doc>Deletes the current board</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${MORE_BUTTON}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 14:16:56.948" endtime="20220704 14:16:57.024"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${MORE_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 14:16:57.025" level="INFO">Clicking element 'xpath://div[contains(@class, 'board-menu-content')]//a[contains(text(), 'More')]'.</msg>
<status status="PASS" starttime="20220704 14:16:57.024" endtime="20220704 14:16:57.249"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${CLOSE_BOARD_BUTTON}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 14:16:57.249" endtime="20220704 14:16:57.305"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${CLOSE_BOARD_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 14:16:57.306" level="INFO">Clicking element 'xpath://div[@class= 'board-menu-content-frame']//a[contains(text(), 'Close board')]'.</msg>
<status status="PASS" starttime="20220704 14:16:57.305" endtime="20220704 14:16:57.392"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${CLOSE_BUTTON}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 14:16:57.392" endtime="20220704 14:16:57.452"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${CLOSE_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 14:16:57.453" level="INFO">Clicking element 'xpath://div[@class= 'no-back']//input'.</msg>
<status status="PASS" starttime="20220704 14:16:57.452" endtime="20220704 14:16:57.576"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${PERMANENTLY_DELETE_BUTTON}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 14:16:57.576" endtime="20220704 14:16:57.893"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${PERMANENTLY_DELETE_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 14:16:57.894" level="INFO">Clicking element 'xpath://button[text()= 'Permanently delete board']'.</msg>
<status status="PASS" starttime="20220704 14:16:57.894" endtime="20220704 14:16:57.972"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${CONFIRM_DELETE_BUTTON}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 14:16:57.973" endtime="20220704 14:16:58.014"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${CONFIRM_DELETE_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 14:16:58.014" level="INFO">Clicking element 'xpath://section//button[text()= 'Delete']'.</msg>
<status status="PASS" starttime="20220704 14:16:58.014" endtime="20220704 14:16:58.085"/>
</kw>
<status status="PASS" starttime="20220704 14:16:56.948" endtime="20220704 14:16:58.086"/>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Close Browser</arg>
<arg>AND</arg>
<arg>Run Keyword If Test Failed</arg>
<arg>Wait Until Keyword Succeeds</arg>
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20220704 14:16:58.086" endtime="20220704 14:16:58.198"/>
</kw>
<kw name="Run Keyword If Test Failed" library="BuiltIn">
<arg>Wait Until Keyword Succeeds</arg>
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Runs the given keyword with the given arguments, if the test failed.</doc>
<status status="PASS" starttime="20220704 14:16:58.199" endtime="20220704 14:16:58.199"/>
</kw>
<status status="PASS" starttime="20220704 14:16:58.086" endtime="20220704 14:16:58.199"/>
</kw>
<doc>Verify that a board can be deleted through GUI</doc>
<tag>board.delete</tag>
<tag>gui</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220704 14:16:48.047" endtime="20220704 14:16:58.199"/>
</test>
<test id="s1-s2-s1-s1-t3" name="Update a board's description" line="41">
<kw name="Create A Board" library="Board">
<var>${BOARD}</var>
<arg>BoardNew</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 14:16:58.203" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 14:16:58.203" endtime="20220704 14:16:58.203"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 14:16:58.203" endtime="20220704 14:16:58.203"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:16:58.205" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220704 14:16:58.204" endtime="20220704 14:16:58.205"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 14:16:58.420" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:16:58.205" endtime="20220704 14:16:58.420"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:16:58.420" endtime="20220704 14:16:58.420"/>
</return>
<msg timestamp="20220704 14:16:58.420" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:16:58.202" endtime="20220704 14:16:58.420"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:16:58.420" endtime="20220704 14:16:58.420"/>
</return>
<msg timestamp="20220704 14:16:58.420" level="INFO">${BOARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:16:58.202" endtime="20220704 14:16:58.420"/>
</kw>
<kw name="Open Browser From Environment" library="CommonGUI">
<arg>${LOGIN_URL}</arg>
<doc>This keywords takes REMOTE and BROWSER variables
from the environment automatically and only needs a url</doc>
<if>
<branch type="IF" condition="${is_remote}">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${url}</arg>
<arg>${BROWSER}</arg>
<arg>remote_url=http://selenium-hub:4444</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20220704 14:16:58.422" level="INFO">Opening browser 'chrome' to base url 'https://trello.com/login' through remote server at 'http://selenium-hub:4444'.</msg>
<status status="PASS" starttime="20220704 14:16:58.421" endtime="20220704 14:16:59.663"/>
</kw>
<status status="PASS" starttime="20220704 14:16:58.421" endtime="20220704 14:16:59.663"/>
</branch>
<branch type="ELSE">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${url}</arg>
<arg>${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<status status="NOT RUN" starttime="20220704 14:16:59.663" endtime="20220704 14:16:59.663"/>
</kw>
<status status="NOT RUN" starttime="20220704 14:16:59.663" endtime="20220704 14:16:59.663"/>
</branch>
<status status="PASS" starttime="20220704 14:16:58.421" endtime="20220704 14:16:59.663"/>
</if>
<status status="PASS" starttime="20220704 14:16:58.421" endtime="20220704 14:16:59.663"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20220704 14:16:59.663" endtime="20220704 14:16:59.785"/>
</kw>
<kw name="Login To Trello" library="LoginPage">
<arg>${DEFAULT_EMAIL}</arg>
<arg>${DEFAULT_PASSWORD}</arg>
<doc>High-level keyword for logging in to Trello</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220704 14:16:59.809" level="INFO">${url} = https://trello.com/login</msg>
<status status="PASS" starttime="20220704 14:16:59.786" endtime="20220704 14:16:59.809"/>
</kw>
<if>
<branch type="IF" condition="'${url}' != '${LOGIN_URL}'">
<kw name="Go To" library="SeleniumLibrary">
<arg>${LOGIN_URL}</arg>
<doc>Navigates the current browser window to the provided ``url``.</doc>
<status status="NOT RUN" starttime="20220704 14:16:59.810" endtime="20220704 14:16:59.810"/>
</kw>
<status status="NOT RUN" starttime="20220704 14:16:59.809" endtime="20220704 14:16:59.810"/>
</branch>
<status status="PASS" starttime="20220704 14:16:59.809" endtime="20220704 14:16:59.810"/>
</if>
<kw name="Enter Username" library="LoginPage">
<arg>${username}</arg>
<doc>Take a username as argument and
enters it in the user_input</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${USER_INPUT}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 14:16:59.810" endtime="20220704 14:16:59.858"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${USER_INPUT}</arg>
<arg>${username}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220704 14:16:59.859" level="INFO">Typing text 'bootcamp04@mailinator.com' into text field 'css:input#user'.</msg>
<status status="PASS" starttime="20220704 14:16:59.858" endtime="20220704 14:16:59.986"/>
</kw>
<status status="PASS" starttime="20220704 14:16:59.810" endtime="20220704 14:16:59.987"/>
</kw>
<kw name="Wait Until Element Is Not Visible" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<doc>Waits until the element ``locator`` is not visible.</doc>
<status status="PASS" starttime="20220704 14:16:59.987" endtime="20220704 14:17:00.767"/>
</kw>
<kw name="Click Login Button" library="LoginPage">
<doc>Clicks Trello's login button if in Trello's
login page, else it clicks Atlassian's</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220704 14:17:00.780" level="INFO">${url} = https://trello.com/login</msg>
<status status="PASS" starttime="20220704 14:17:00.768" endtime="20220704 14:17:00.780"/>
</kw>
<if>
<branch type="IF" condition="'${url}' == '${LOGIN_URL}'">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220704 14:17:00.780" endtime="20220704 14:17:00.840"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220704 14:17:00.841" level="INFO">Clicking button 'css:input#login'.</msg>
<status status="PASS" starttime="20220704 14:17:00.841" endtime="20220704 14:17:01.894"/>
</kw>
<status status="PASS" starttime="20220704 14:17:00.780" endtime="20220704 14:17:01.894"/>
</branch>
<branch type="ELSE">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="NOT RUN" starttime="20220704 14:17:01.894" endtime="20220704 14:17:01.894"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<status status="NOT RUN" starttime="20220704 14:17:01.895" endtime="20220704 14:17:01.895"/>
</kw>
<status status="NOT RUN" starttime="20220704 14:17:01.894" endtime="20220704 14:17:01.895"/>
</branch>
<status status="PASS" starttime="20220704 14:17:00.780" endtime="20220704 14:17:01.895"/>
</if>
<status status="PASS" starttime="20220704 14:17:00.768" endtime="20220704 14:17:01.895"/>
</kw>
<kw name="Wait Until Location Is Atlassian's Login" library="LoginPage">
<doc>Waits for the page redirection when logging in.</doc>
<kw name="Wait Until Location Contains" library="SeleniumLibrary">
<arg>atlassian.com</arg>
<doc>Waits until the current URL contains ``expected``.</doc>
<status status="PASS" starttime="20220704 14:17:01.895" endtime="20220704 14:17:01.918"/>
</kw>
<status status="PASS" starttime="20220704 14:17:01.895" endtime="20220704 14:17:01.918"/>
</kw>
<kw name="Enter Password" library="LoginPage">
<arg>${password}</arg>
<doc>Take a password as argument and
enters it in the password_input</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<arg>timeout=10</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 14:17:01.919" endtime="20220704 14:17:01.986"/>
</kw>
<kw name="Input Password" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<arg>${password}</arg>
<doc>Types the given password into the text field identified by ``locator``.</doc>
<msg timestamp="20220704 14:17:01.987" level="INFO">Typing password into text field 'css:input#password'.</msg>
<msg timestamp="20220704 14:17:02.058" level="INFO">Temporally setting log level to: NONE</msg>
<msg timestamp="20220704 14:17:02.123" level="INFO">Log level changed from NONE to INFO.</msg>
<status status="PASS" starttime="20220704 14:17:01.986" endtime="20220704 14:17:02.123"/>
</kw>
<status status="PASS" starttime="20220704 14:17:01.919" endtime="20220704 14:17:02.123"/>
</kw>
<kw name="Click Login Button" library="LoginPage">
<doc>Clicks Trello's login button if in Trello's
login page, else it clicks Atlassian's</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220704 14:17:02.135" level="INFO">${url} = https://id.atlassian.com/login?application=trello&amp;continue=https%3A%2F%2Ftrello.com%2Fauth%2Fatlassian%2Fcallback%3FreturnUrl%3D%252F%26display%3D%26aaOnboarding%3D%26updateEmail%3D%26traceId%3D62c2f6...</msg>
<status status="PASS" starttime="20220704 14:17:02.123" endtime="20220704 14:17:02.135"/>
</kw>
<if>
<branch type="IF" condition="'${url}' == '${LOGIN_URL}'">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="NOT RUN" starttime="20220704 14:17:02.135" endtime="20220704 14:17:02.135"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<status status="NOT RUN" starttime="20220704 14:17:02.136" endtime="20220704 14:17:02.136"/>
</kw>
<status status="NOT RUN" starttime="20220704 14:17:02.135" endtime="20220704 14:17:02.136"/>
</branch>
<branch type="ELSE">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220704 14:17:02.136" endtime="20220704 14:17:02.200"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220704 14:17:02.201" level="INFO">Clicking button 'css:button#login-submit'.</msg>
<status status="PASS" starttime="20220704 14:17:02.200" endtime="20220704 14:17:02.319"/>
</kw>
<status status="PASS" starttime="20220704 14:17:02.136" endtime="20220704 14:17:02.319"/>
</branch>
<status status="PASS" starttime="20220704 14:17:02.135" endtime="20220704 14:17:02.319"/>
</if>
<status status="PASS" starttime="20220704 14:17:02.123" endtime="20220704 14:17:02.320"/>
</kw>
<status status="PASS" starttime="20220704 14:16:59.786" endtime="20220704 14:17:02.320"/>
</kw>
<kw name="Go To Board" library="BoardsPage">
<arg>BoardNew</arg>
<doc>Receives the board name and goes to that board's page.</doc>
<kw name="Format String" library="String">
<var>${locator}</var>
<arg>${BOARD_BUTTON}</arg>
<arg>${board_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:17:02.321" level="INFO">${locator} = //div[@title="BoardNew"]</msg>
<status status="PASS" starttime="20220704 14:17:02.320" endtime="20220704 14:17:02.321"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 14:17:02.321" endtime="20220704 14:17:05.976"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 14:17:05.976" level="INFO">Clicking element '//div[@title="BoardNew"]'.</msg>
<status status="PASS" starttime="20220704 14:17:05.976" endtime="20220704 14:17:06.336"/>
</kw>
<status status="PASS" starttime="20220704 14:17:02.320" endtime="20220704 14:17:06.336"/>
</kw>
<kw name="Verify Name of Board" library="UpperHorizontalMenu">
<arg>BoardNew</arg>
<doc>Verifies the name of a board</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${NAME_OF_BOARD}</arg>
<arg>10</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 14:17:06.337" endtime="20220704 14:17:06.946"/>
</kw>
<kw name="Element Text Should Be" library="SeleniumLibrary">
<arg>${NAME_OF_BOARD}</arg>
<arg>${name}</arg>
<doc>Verifies that element ``locator`` contains exact the text ``expected``.</doc>
<msg timestamp="20220704 14:17:06.947" level="INFO">Verifying element 'xpath://h1[contains(@class, 'js-board-editing-target')]' contains exact text 'BoardNew'.</msg>
<status status="PASS" starttime="20220704 14:17:06.947" endtime="20220704 14:17:07.039"/>
</kw>
<status status="PASS" starttime="20220704 14:17:06.336" endtime="20220704 14:17:07.039"/>
</kw>
<kw name="Open Show Menu" library="UpperHorizontalMenu">
<doc>Open the Show Menu in the right side of the board page where multiple options are available</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${SHOW_MENU_BUTTON}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 14:17:07.039" endtime="20220704 14:17:07.119"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${SHOW_MENU_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 14:17:07.120" level="INFO">Clicking element 'xpath://div[contains(@class, 'board-header')]//a[contains(., 'Show menu')]'.</msg>
<status status="PASS" starttime="20220704 14:17:07.119" endtime="20220704 14:17:07.182"/>
</kw>
<status status="PASS" starttime="20220704 14:17:07.039" endtime="20220704 14:17:07.182"/>
</kw>
<kw name="Update Description of Board" library="ShownMenu">
<arg>UpdatedDescription</arg>
<doc>Updates the description of a board</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ABOUT_THIS_BOARD}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 14:17:07.183" endtime="20220704 14:17:07.246"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${ABOUT_THIS_BOARD}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 14:17:07.246" level="INFO">Clicking element 'xpath://div[contains(@class, 'board-menu-content')]//a[contains(text(), 'About')]'.</msg>
<status status="PASS" starttime="20220704 14:17:07.246" endtime="20220704 14:17:07.455"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DESCRIPTION}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 14:17:07.456" endtime="20220704 14:17:07.509"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${DESCRIPTION}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 14:17:07.510" level="INFO">Clicking element 'xpath://a[contains(@class, 'description-fake-text-area')]'.</msg>
<status status="PASS" starttime="20220704 14:17:07.509" endtime="20220704 14:17:07.590"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${DESC_TEXT_AREA}</arg>
<arg>${desc}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220704 14:17:07.590" level="INFO">Typing text 'UpdatedDescription' into text field 'xpath://div[contains(@class, 'board-menu-content')]//textarea'.</msg>
<status status="PASS" starttime="20220704 14:17:07.590" endtime="20220704 14:17:07.752"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${SAVE_DESC_BUTTON}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 14:17:07.752" endtime="20220704 14:17:07.808"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${SAVE_DESC_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 14:17:07.809" level="INFO">Clicking element 'xpath://div[contains(@class, 'board-menu-content')]//input[@value="Save"]'.</msg>
<status status="PASS" starttime="20220704 14:17:07.808" endtime="20220704 14:17:07.918"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${GO_BACK_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 14:17:07.919" level="INFO">Clicking element 'xpath://a[@title="Go back."]'.</msg>
<status status="PASS" starttime="20220704 14:17:07.918" endtime="20220704 14:17:08.033"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${CLOSE_SHOW_MENU}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 14:17:08.034" level="INFO">Clicking element 'xpath://a[@title="Close the board menu."]'.</msg>
<status status="PASS" starttime="20220704 14:17:08.033" endtime="20220704 14:17:08.121"/>
</kw>
<status status="PASS" starttime="20220704 14:17:07.182" endtime="20220704 14:17:08.122"/>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Close Browser</arg>
<arg>AND</arg>
<arg>Wait Until Keyword Succeeds</arg>
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20220704 14:17:08.122" endtime="20220704 14:17:08.238"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${BOARD.json()}[id]</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:17:08.241" level="INFO">${url} = boards/62c2f65afab377873fce8407</msg>
<status status="PASS" starttime="20220704 14:17:08.241" endtime="20220704 14:17:08.241"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 14:17:08.610" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:17:08.241" endtime="20220704 14:17:08.610"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:17:08.610" endtime="20220704 14:17:08.610"/>
</return>
<msg timestamp="20220704 14:17:08.611" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:17:08.240" endtime="20220704 14:17:08.611"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:17:08.611" endtime="20220704 14:17:08.611"/>
</return>
<status status="PASS" starttime="20220704 14:17:08.239" endtime="20220704 14:17:08.611"/>
</kw>
<status status="PASS" starttime="20220704 14:17:08.238" endtime="20220704 14:17:08.611"/>
</kw>
<status status="PASS" starttime="20220704 14:17:08.122" endtime="20220704 14:17:08.611"/>
</kw>
<doc>Verify that a board's description can be updated through GUI</doc>
<tag>board.update.description</tag>
<tag>gui</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220704 14:16:58.201" endtime="20220704 14:17:08.611"/>
</test>
<test id="s1-s2-s1-s1-t4" name="Update a board's name" line="56">
<kw name="Create A Board" library="Board">
<var>${BOARD}</var>
<arg>NewBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 14:17:08.614" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 14:17:08.614" endtime="20220704 14:17:08.614"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 14:17:08.614" endtime="20220704 14:17:08.614"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:17:08.615" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220704 14:17:08.614" endtime="20220704 14:17:08.615"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 14:17:08.843" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:17:08.616" endtime="20220704 14:17:08.843"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:17:08.843" endtime="20220704 14:17:08.843"/>
</return>
<msg timestamp="20220704 14:17:08.843" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:17:08.613" endtime="20220704 14:17:08.843"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:17:08.843" endtime="20220704 14:17:08.844"/>
</return>
<msg timestamp="20220704 14:17:08.844" level="INFO">${BOARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:17:08.612" endtime="20220704 14:17:08.844"/>
</kw>
<kw name="Open Browser From Environment" library="CommonGUI">
<arg>${LOGIN_URL}</arg>
<doc>This keywords takes REMOTE and BROWSER variables
from the environment automatically and only needs a url</doc>
<if>
<branch type="IF" condition="${is_remote}">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${url}</arg>
<arg>${BROWSER}</arg>
<arg>remote_url=http://selenium-hub:4444</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20220704 14:17:08.845" level="INFO">Opening browser 'chrome' to base url 'https://trello.com/login' through remote server at 'http://selenium-hub:4444'.</msg>
<status status="PASS" starttime="20220704 14:17:08.845" endtime="20220704 14:17:10.026"/>
</kw>
<status status="PASS" starttime="20220704 14:17:08.844" endtime="20220704 14:17:10.026"/>
</branch>
<branch type="ELSE">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${url}</arg>
<arg>${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<status status="NOT RUN" starttime="20220704 14:17:10.026" endtime="20220704 14:17:10.026"/>
</kw>
<status status="NOT RUN" starttime="20220704 14:17:10.026" endtime="20220704 14:17:10.026"/>
</branch>
<status status="PASS" starttime="20220704 14:17:08.844" endtime="20220704 14:17:10.026"/>
</if>
<status status="PASS" starttime="20220704 14:17:08.844" endtime="20220704 14:17:10.027"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20220704 14:17:10.027" endtime="20220704 14:17:10.152"/>
</kw>
<kw name="Login To Trello" library="LoginPage">
<arg>${DEFAULT_EMAIL}</arg>
<arg>${DEFAULT_PASSWORD}</arg>
<doc>High-level keyword for logging in to Trello</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220704 14:17:10.170" level="INFO">${url} = https://trello.com/login</msg>
<status status="PASS" starttime="20220704 14:17:10.153" endtime="20220704 14:17:10.170"/>
</kw>
<if>
<branch type="IF" condition="'${url}' != '${LOGIN_URL}'">
<kw name="Go To" library="SeleniumLibrary">
<arg>${LOGIN_URL}</arg>
<doc>Navigates the current browser window to the provided ``url``.</doc>
<status status="NOT RUN" starttime="20220704 14:17:10.170" endtime="20220704 14:17:10.170"/>
</kw>
<status status="NOT RUN" starttime="20220704 14:17:10.170" endtime="20220704 14:17:10.170"/>
</branch>
<status status="PASS" starttime="20220704 14:17:10.170" endtime="20220704 14:17:10.170"/>
</if>
<kw name="Enter Username" library="LoginPage">
<arg>${username}</arg>
<doc>Take a username as argument and
enters it in the user_input</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${USER_INPUT}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 14:17:10.171" endtime="20220704 14:17:10.221"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${USER_INPUT}</arg>
<arg>${username}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220704 14:17:10.222" level="INFO">Typing text 'bootcamp04@mailinator.com' into text field 'css:input#user'.</msg>
<status status="PASS" starttime="20220704 14:17:10.222" endtime="20220704 14:17:10.333"/>
</kw>
<status status="PASS" starttime="20220704 14:17:10.171" endtime="20220704 14:17:10.334"/>
</kw>
<kw name="Wait Until Element Is Not Visible" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<doc>Waits until the element ``locator`` is not visible.</doc>
<status status="PASS" starttime="20220704 14:17:10.334" endtime="20220704 14:17:11.073"/>
</kw>
<kw name="Click Login Button" library="LoginPage">
<doc>Clicks Trello's login button if in Trello's
login page, else it clicks Atlassian's</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220704 14:17:11.083" level="INFO">${url} = https://trello.com/login</msg>
<status status="PASS" starttime="20220704 14:17:11.073" endtime="20220704 14:17:11.083"/>
</kw>
<if>
<branch type="IF" condition="'${url}' == '${LOGIN_URL}'">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220704 14:17:11.084" endtime="20220704 14:17:11.131"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220704 14:17:11.131" level="INFO">Clicking button 'css:input#login'.</msg>
<status status="PASS" starttime="20220704 14:17:11.131" endtime="20220704 14:17:12.155"/>
</kw>
<status status="PASS" starttime="20220704 14:17:11.083" endtime="20220704 14:17:12.155"/>
</branch>
<branch type="ELSE">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="NOT RUN" starttime="20220704 14:17:12.155" endtime="20220704 14:17:12.155"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<status status="NOT RUN" starttime="20220704 14:17:12.155" endtime="20220704 14:17:12.155"/>
</kw>
<status status="NOT RUN" starttime="20220704 14:17:12.155" endtime="20220704 14:17:12.155"/>
</branch>
<status status="PASS" starttime="20220704 14:17:11.083" endtime="20220704 14:17:12.155"/>
</if>
<status status="PASS" starttime="20220704 14:17:11.073" endtime="20220704 14:17:12.155"/>
</kw>
<kw name="Wait Until Location Is Atlassian's Login" library="LoginPage">
<doc>Waits for the page redirection when logging in.</doc>
<kw name="Wait Until Location Contains" library="SeleniumLibrary">
<arg>atlassian.com</arg>
<doc>Waits until the current URL contains ``expected``.</doc>
<status status="PASS" starttime="20220704 14:17:12.156" endtime="20220704 14:17:12.174"/>
</kw>
<status status="PASS" starttime="20220704 14:17:12.156" endtime="20220704 14:17:12.175"/>
</kw>
<kw name="Enter Password" library="LoginPage">
<arg>${password}</arg>
<doc>Take a password as argument and
enters it in the password_input</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<arg>timeout=10</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 14:17:12.175" endtime="20220704 14:17:12.220"/>
</kw>
<kw name="Input Password" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<arg>${password}</arg>
<doc>Types the given password into the text field identified by ``locator``.</doc>
<msg timestamp="20220704 14:17:12.221" level="INFO">Typing password into text field 'css:input#password'.</msg>
<msg timestamp="20220704 14:17:12.274" level="INFO">Temporally setting log level to: NONE</msg>
<msg timestamp="20220704 14:17:12.351" level="INFO">Log level changed from NONE to INFO.</msg>
<status status="PASS" starttime="20220704 14:17:12.220" endtime="20220704 14:17:12.351"/>
</kw>
<status status="PASS" starttime="20220704 14:17:12.175" endtime="20220704 14:17:12.351"/>
</kw>
<kw name="Click Login Button" library="LoginPage">
<doc>Clicks Trello's login button if in Trello's
login page, else it clicks Atlassian's</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220704 14:17:12.362" level="INFO">${url} = https://id.atlassian.com/login?application=trello&amp;continue=https%3A%2F%2Ftrello.com%2Fauth%2Fatlassian%2Fcallback%3FreturnUrl%3D%252F%26display%3D%26aaOnboarding%3D%26updateEmail%3D%26traceId%3D62c2f6...</msg>
<status status="PASS" starttime="20220704 14:17:12.352" endtime="20220704 14:17:12.362"/>
</kw>
<if>
<branch type="IF" condition="'${url}' == '${LOGIN_URL}'">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="NOT RUN" starttime="20220704 14:17:12.362" endtime="20220704 14:17:12.362"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<status status="NOT RUN" starttime="20220704 14:17:12.363" endtime="20220704 14:17:12.363"/>
</kw>
<status status="NOT RUN" starttime="20220704 14:17:12.362" endtime="20220704 14:17:12.363"/>
</branch>
<branch type="ELSE">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220704 14:17:12.363" endtime="20220704 14:17:12.411"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220704 14:17:12.412" level="INFO">Clicking button 'css:button#login-submit'.</msg>
<status status="PASS" starttime="20220704 14:17:12.412" endtime="20220704 14:17:12.528"/>
</kw>
<status status="PASS" starttime="20220704 14:17:12.363" endtime="20220704 14:17:12.528"/>
</branch>
<status status="PASS" starttime="20220704 14:17:12.362" endtime="20220704 14:17:12.528"/>
</if>
<status status="PASS" starttime="20220704 14:17:12.351" endtime="20220704 14:17:12.528"/>
</kw>
<status status="PASS" starttime="20220704 14:17:10.152" endtime="20220704 14:17:12.528"/>
</kw>
<kw name="Go To Board" library="BoardsPage">
<arg>NewBoard</arg>
<doc>Receives the board name and goes to that board's page.</doc>
<kw name="Format String" library="String">
<var>${locator}</var>
<arg>${BOARD_BUTTON}</arg>
<arg>${board_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:17:12.529" level="INFO">${locator} = //div[@title="NewBoard"]</msg>
<status status="PASS" starttime="20220704 14:17:12.529" endtime="20220704 14:17:12.529"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 14:17:12.529" endtime="20220704 14:17:16.085"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 14:17:16.085" level="INFO">Clicking element '//div[@title="NewBoard"]'.</msg>
<status status="PASS" starttime="20220704 14:17:16.085" endtime="20220704 14:17:16.462"/>
</kw>
<status status="PASS" starttime="20220704 14:17:12.528" endtime="20220704 14:17:16.462"/>
</kw>
<kw name="Verify Name of Board" library="UpperHorizontalMenu">
<arg>NewBoard</arg>
<doc>Verifies the name of a board</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${NAME_OF_BOARD}</arg>
<arg>10</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 14:17:16.463" endtime="20220704 14:17:16.980"/>
</kw>
<kw name="Element Text Should Be" library="SeleniumLibrary">
<arg>${NAME_OF_BOARD}</arg>
<arg>${name}</arg>
<doc>Verifies that element ``locator`` contains exact the text ``expected``.</doc>
<msg timestamp="20220704 14:17:16.981" level="INFO">Verifying element 'xpath://h1[contains(@class, 'js-board-editing-target')]' contains exact text 'NewBoard'.</msg>
<status status="PASS" starttime="20220704 14:17:16.980" endtime="20220704 14:17:17.045"/>
</kw>
<status status="PASS" starttime="20220704 14:17:16.462" endtime="20220704 14:17:17.046"/>
</kw>
<kw name="Update Name of Board" library="UpperHorizontalMenu">
<arg>UpdatedName</arg>
<doc>Updates the name of a board
it takes the Length of the boards's name in order to press the delete key
as many times as the name's length</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${NAME_OF_BOARD}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 14:17:17.046" endtime="20220704 14:17:17.087"/>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<var>${response}</var>
<arg>${NAME_OF_BOARD}</arg>
<doc>Returns the text value of the element identified by ``locator``.</doc>
<msg timestamp="20220704 14:17:17.125" level="INFO">${response} = NewBoard</msg>
<status status="PASS" starttime="20220704 14:17:17.087" endtime="20220704 14:17:17.125"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${names_lenght}</var>
<arg>${response}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20220704 14:17:17.126" level="INFO">Length is 8</msg>
<msg timestamp="20220704 14:17:17.126" level="INFO">${names_lenght} = 8</msg>
<status status="PASS" starttime="20220704 14:17:17.125" endtime="20220704 14:17:17.126"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${NAME_OF_BOARD}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 14:17:17.126" level="INFO">Clicking element 'xpath://h1[contains(@class, 'js-board-editing-target')]'.</msg>
<status status="PASS" starttime="20220704 14:17:17.126" endtime="20220704 14:17:17.189"/>
</kw>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>${NAME_OF_BOARD_INPUT}</arg>
<arg>\ue011</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20220704 14:17:17.190" level="INFO">Sending key(s) ('\ue011',) to xpath://input[contains(@class, 'board-name-input')] element.</msg>
<msg timestamp="20220704 14:17:17.528" level="INFO">Sending key </msg>
<status status="PASS" starttime="20220704 14:17:17.190" endtime="20220704 14:17:17.546"/>
</kw>
<kw name="Repeat Keyword" library="BuiltIn">
<arg>${names_lenght}</arg>
<arg>Press Keys</arg>
<arg>${NAME_OF_BOARD_INPUT}</arg>
<arg>\ue017</arg>
<doc>Executes the specified keyword multiple times.</doc>
<msg timestamp="20220704 14:17:17.546" level="INFO">Repeating keyword, round 1/8.</msg>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>${NAME_OF_BOARD_INPUT}</arg>
<arg>\ue017</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20220704 14:17:17.547" level="INFO">Sending key(s) ('\ue017',) to xpath://input[contains(@class, 'board-name-input')] element.</msg>
<msg timestamp="20220704 14:17:17.830" level="INFO">Sending key </msg>
<status status="PASS" starttime="20220704 14:17:17.546" endtime="20220704 14:17:17.854"/>
</kw>
<msg timestamp="20220704 14:17:17.855" level="INFO">Repeating keyword, round 2/8.</msg>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>${NAME_OF_BOARD_INPUT}</arg>
<arg>\ue017</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20220704 14:17:17.855" level="INFO">Sending key(s) ('\ue017',) to xpath://input[contains(@class, 'board-name-input')] element.</msg>
<msg timestamp="20220704 14:17:18.136" level="INFO">Sending key </msg>
<status status="PASS" starttime="20220704 14:17:17.855" endtime="20220704 14:17:18.153"/>
</kw>
<msg timestamp="20220704 14:17:18.153" level="INFO">Repeating keyword, round 3/8.</msg>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>${NAME_OF_BOARD_INPUT}</arg>
<arg>\ue017</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20220704 14:17:18.154" level="INFO">Sending key(s) ('\ue017',) to xpath://input[contains(@class, 'board-name-input')] element.</msg>
<msg timestamp="20220704 14:17:18.484" level="INFO">Sending key </msg>
<status status="PASS" starttime="20220704 14:17:18.153" endtime="20220704 14:17:18.496"/>
</kw>
<msg timestamp="20220704 14:17:18.496" level="INFO">Repeating keyword, round 4/8.</msg>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>${NAME_OF_BOARD_INPUT}</arg>
<arg>\ue017</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20220704 14:17:18.497" level="INFO">Sending key(s) ('\ue017',) to xpath://input[contains(@class, 'board-name-input')] element.</msg>
<msg timestamp="20220704 14:17:18.783" level="INFO">Sending key </msg>
<status status="PASS" starttime="20220704 14:17:18.497" endtime="20220704 14:17:18.803"/>
</kw>
<msg timestamp="20220704 14:17:18.803" level="INFO">Repeating keyword, round 5/8.</msg>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>${NAME_OF_BOARD_INPUT}</arg>
<arg>\ue017</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20220704 14:17:18.803" level="INFO">Sending key(s) ('\ue017',) to xpath://input[contains(@class, 'board-name-input')] element.</msg>
<msg timestamp="20220704 14:17:19.093" level="INFO">Sending key </msg>
<status status="PASS" starttime="20220704 14:17:18.803" endtime="20220704 14:17:19.114"/>
</kw>
<msg timestamp="20220704 14:17:19.114" level="INFO">Repeating keyword, round 6/8.</msg>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>${NAME_OF_BOARD_INPUT}</arg>
<arg>\ue017</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20220704 14:17:19.115" level="INFO">Sending key(s) ('\ue017',) to xpath://input[contains(@class, 'board-name-input')] element.</msg>
<msg timestamp="20220704 14:17:19.404" level="INFO">Sending key </msg>
<status status="PASS" starttime="20220704 14:17:19.115" endtime="20220704 14:17:19.419"/>
</kw>
<msg timestamp="20220704 14:17:19.419" level="INFO">Repeating keyword, round 7/8.</msg>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>${NAME_OF_BOARD_INPUT}</arg>
<arg>\ue017</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20220704 14:17:19.420" level="INFO">Sending key(s) ('\ue017',) to xpath://input[contains(@class, 'board-name-input')] element.</msg>
<msg timestamp="20220704 14:17:19.702" level="INFO">Sending key </msg>
<status status="PASS" starttime="20220704 14:17:19.419" endtime="20220704 14:17:19.718"/>
</kw>
<msg timestamp="20220704 14:17:19.718" level="INFO">Repeating keyword, round 8/8.</msg>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>${NAME_OF_BOARD_INPUT}</arg>
<arg>\ue017</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20220704 14:17:19.719" level="INFO">Sending key(s) ('\ue017',) to xpath://input[contains(@class, 'board-name-input')] element.</msg>
<msg timestamp="20220704 14:17:19.999" level="INFO">Sending key </msg>
<status status="PASS" starttime="20220704 14:17:19.718" endtime="20220704 14:17:20.012"/>
</kw>
<status status="PASS" starttime="20220704 14:17:17.546" endtime="20220704 14:17:20.012"/>
</kw>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>${NAME_OF_BOARD_INPUT}</arg>
<arg>${name}</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20220704 14:17:20.013" level="INFO">Sending key(s) ('UpdatedName',) to xpath://input[contains(@class, 'board-name-input')] element.</msg>
<msg timestamp="20220704 14:17:20.295" level="INFO">Sending keys UpdatedName</msg>
<status status="PASS" starttime="20220704 14:17:20.012" endtime="20220704 14:17:20.396"/>
</kw>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>${NAME_OF_BOARD_INPUT}</arg>
<arg>\ue007</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20220704 14:17:20.397" level="INFO">Sending key(s) ('\ue007',) to xpath://input[contains(@class, 'board-name-input')] element.</msg>
<msg timestamp="20220704 14:17:20.688" level="INFO">Sending key </msg>
<status status="PASS" starttime="20220704 14:17:20.397" endtime="20220704 14:17:20.792"/>
</kw>
<status status="PASS" starttime="20220704 14:17:17.046" endtime="20220704 14:17:20.792"/>
</kw>
<kw name="Verify Name of Board" library="UpperHorizontalMenu">
<arg>UpdatedName</arg>
<doc>Verifies the name of a board</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${NAME_OF_BOARD}</arg>
<arg>10</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 14:17:20.793" endtime="20220704 14:17:20.836"/>
</kw>
<kw name="Element Text Should Be" library="SeleniumLibrary">
<arg>${NAME_OF_BOARD}</arg>
<arg>${name}</arg>
<doc>Verifies that element ``locator`` contains exact the text ``expected``.</doc>
<msg timestamp="20220704 14:17:20.836" level="INFO">Verifying element 'xpath://h1[contains(@class, 'js-board-editing-target')]' contains exact text 'UpdatedName'.</msg>
<status status="PASS" starttime="20220704 14:17:20.836" endtime="20220704 14:17:20.868"/>
</kw>
<status status="PASS" starttime="20220704 14:17:20.792" endtime="20220704 14:17:20.868"/>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Close Browser</arg>
<arg>AND</arg>
<arg>Wait Until Keyword Succeeds</arg>
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20220704 14:17:20.869" endtime="20220704 14:17:20.970"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${BOARD.json()}[id]</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:17:20.974" level="INFO">${url} = boards/62c2f664ad9ed86c53578298</msg>
<status status="PASS" starttime="20220704 14:17:20.973" endtime="20220704 14:17:20.974"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 14:17:21.331" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:17:20.974" endtime="20220704 14:17:21.331"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:17:21.331" endtime="20220704 14:17:21.331"/>
</return>
<msg timestamp="20220704 14:17:21.331" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:17:20.973" endtime="20220704 14:17:21.332"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:17:21.332" endtime="20220704 14:17:21.332"/>
</return>
<status status="PASS" starttime="20220704 14:17:20.971" endtime="20220704 14:17:21.332"/>
</kw>
<status status="PASS" starttime="20220704 14:17:20.971" endtime="20220704 14:17:21.332"/>
</kw>
<status status="PASS" starttime="20220704 14:17:20.869" endtime="20220704 14:17:21.332"/>
</kw>
<doc>Verify that a board's name can be updated through GUI</doc>
<tag>board.update.name</tag>
<tag>gui</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220704 14:17:08.612" endtime="20220704 14:17:21.332"/>
</test>
<kw name="Boards Suite Teardown" type="TEARDOWN">
<doc>Deletes the Trello sesion that had been created</doc>
<kw name="Delete All Sessions" library="request_own_library">
<status status="PASS" starttime="20220704 14:17:21.334" endtime="20220704 14:17:21.335"/>
</kw>
<status status="PASS" starttime="20220704 14:17:21.333" endtime="20220704 14:17:21.335"/>
</kw>
<doc>Board Tests</doc>
<status status="PASS" starttime="20220704 14:16:35.609" endtime="20220704 14:17:21.335"/>
</suite>
<suite id="s1-s2-s1-s2" name="Trello Gui Cards" source="/trello/gui/trello_gui_cards.robot">
<kw name="Cards Suite Setup" type="SETUP">
<doc>Creates a new board through API, then Opens a Browser
Login to Trello, and Go to the created board's page.</doc>
<kw name="Create Trello Session" library="TrelloAPI">
<doc>Creates a Trello Session</doc>
<kw name="Create Session" library="request_own_library">
<arg>${API_BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<status status="PASS" starttime="20220704 14:17:21.352" endtime="20220704 14:17:21.352"/>
</kw>
<status status="PASS" starttime="20220704 14:17:21.352" endtime="20220704 14:17:21.353"/>
</kw>
<kw name="Create A Board" library="Board">
<var>${BOARD}</var>
<arg>CardTestBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 14:17:21.353" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 14:17:21.353" endtime="20220704 14:17:21.354"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 14:17:21.354" endtime="20220704 14:17:21.354"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:17:21.355" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220704 14:17:21.354" endtime="20220704 14:17:21.355"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 14:17:21.657" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:17:21.355" endtime="20220704 14:17:21.657"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:17:21.657" endtime="20220704 14:17:21.657"/>
</return>
<msg timestamp="20220704 14:17:21.657" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:17:21.353" endtime="20220704 14:17:21.657"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:17:21.657" endtime="20220704 14:17:21.657"/>
</return>
<msg timestamp="20220704 14:17:21.658" level="INFO">${BOARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:17:21.353" endtime="20220704 14:17:21.658"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_BOARD_ID}</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220704 14:17:21.659" level="INFO">${TEST_SUITE_BOARD_ID} = 62c2f671a555f21c206473a1</msg>
<status status="PASS" starttime="20220704 14:17:21.658" endtime="20220704 14:17:21.659"/>
</kw>
<kw name="Open Browser From Environment" library="CommonGUI">
<arg>${LOGIN_URL}</arg>
<doc>This keywords takes REMOTE and BROWSER variables
from the environment automatically and only needs a url</doc>
<if>
<branch type="IF" condition="${is_remote}">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${url}</arg>
<arg>${BROWSER}</arg>
<arg>remote_url=http://selenium-hub:4444</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20220704 14:17:21.661" level="INFO">Opening browser 'chrome' to base url 'https://trello.com/login' through remote server at 'http://selenium-hub:4444'.</msg>
<status status="PASS" starttime="20220704 14:17:21.660" endtime="20220704 14:17:22.811"/>
</kw>
<status status="PASS" starttime="20220704 14:17:21.660" endtime="20220704 14:17:22.812"/>
</branch>
<branch type="ELSE">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${url}</arg>
<arg>${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<status status="NOT RUN" starttime="20220704 14:17:22.812" endtime="20220704 14:17:22.812"/>
</kw>
<status status="NOT RUN" starttime="20220704 14:17:22.812" endtime="20220704 14:17:22.812"/>
</branch>
<status status="PASS" starttime="20220704 14:17:21.660" endtime="20220704 14:17:22.812"/>
</if>
<status status="PASS" starttime="20220704 14:17:21.660" endtime="20220704 14:17:22.812"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20220704 14:17:22.812" endtime="20220704 14:17:22.929"/>
</kw>
<kw name="Login To Trello" library="LoginPage">
<arg>${DEFAULT_EMAIL}</arg>
<arg>${DEFAULT_PASSWORD}</arg>
<doc>High-level keyword for logging in to Trello</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220704 14:17:22.943" level="INFO">${url} = https://trello.com/login</msg>
<status status="PASS" starttime="20220704 14:17:22.929" endtime="20220704 14:17:22.943"/>
</kw>
<if>
<branch type="IF" condition="'${url}' != '${LOGIN_URL}'">
<kw name="Go To" library="SeleniumLibrary">
<arg>${LOGIN_URL}</arg>
<doc>Navigates the current browser window to the provided ``url``.</doc>
<status status="NOT RUN" starttime="20220704 14:17:22.944" endtime="20220704 14:17:22.944"/>
</kw>
<status status="NOT RUN" starttime="20220704 14:17:22.943" endtime="20220704 14:17:22.944"/>
</branch>
<status status="PASS" starttime="20220704 14:17:22.943" endtime="20220704 14:17:22.944"/>
</if>
<kw name="Enter Username" library="LoginPage">
<arg>${username}</arg>
<doc>Take a username as argument and
enters it in the user_input</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${USER_INPUT}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 14:17:22.944" endtime="20220704 14:17:23.003"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${USER_INPUT}</arg>
<arg>${username}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220704 14:17:23.004" level="INFO">Typing text 'bootcamp04@mailinator.com' into text field 'css:input#user'.</msg>
<status status="PASS" starttime="20220704 14:17:23.003" endtime="20220704 14:17:23.119"/>
</kw>
<status status="PASS" starttime="20220704 14:17:22.944" endtime="20220704 14:17:23.120"/>
</kw>
<kw name="Wait Until Element Is Not Visible" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<doc>Waits until the element ``locator`` is not visible.</doc>
<status status="PASS" starttime="20220704 14:17:23.120" endtime="20220704 14:17:23.869"/>
</kw>
<kw name="Click Login Button" library="LoginPage">
<doc>Clicks Trello's login button if in Trello's
login page, else it clicks Atlassian's</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220704 14:17:23.880" level="INFO">${url} = https://trello.com/login</msg>
<status status="PASS" starttime="20220704 14:17:23.869" endtime="20220704 14:17:23.880"/>
</kw>
<if>
<branch type="IF" condition="'${url}' == '${LOGIN_URL}'">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220704 14:17:23.881" endtime="20220704 14:17:23.930"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220704 14:17:23.931" level="INFO">Clicking button 'css:input#login'.</msg>
<status status="PASS" starttime="20220704 14:17:23.930" endtime="20220704 14:17:24.946"/>
</kw>
<status status="PASS" starttime="20220704 14:17:23.880" endtime="20220704 14:17:24.946"/>
</branch>
<branch type="ELSE">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="NOT RUN" starttime="20220704 14:17:24.947" endtime="20220704 14:17:24.947"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<status status="NOT RUN" starttime="20220704 14:17:24.947" endtime="20220704 14:17:24.947"/>
</kw>
<status status="NOT RUN" starttime="20220704 14:17:24.946" endtime="20220704 14:17:24.947"/>
</branch>
<status status="PASS" starttime="20220704 14:17:23.880" endtime="20220704 14:17:24.947"/>
</if>
<status status="PASS" starttime="20220704 14:17:23.869" endtime="20220704 14:17:24.947"/>
</kw>
<kw name="Wait Until Location Is Atlassian's Login" library="LoginPage">
<doc>Waits for the page redirection when logging in.</doc>
<kw name="Wait Until Location Contains" library="SeleniumLibrary">
<arg>atlassian.com</arg>
<doc>Waits until the current URL contains ``expected``.</doc>
<status status="PASS" starttime="20220704 14:17:24.948" endtime="20220704 14:17:24.968"/>
</kw>
<status status="PASS" starttime="20220704 14:17:24.947" endtime="20220704 14:17:24.968"/>
</kw>
<kw name="Enter Password" library="LoginPage">
<arg>${password}</arg>
<doc>Take a password as argument and
enters it in the password_input</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<arg>timeout=10</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 14:17:24.969" endtime="20220704 14:17:25.011"/>
</kw>
<kw name="Input Password" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<arg>${password}</arg>
<doc>Types the given password into the text field identified by ``locator``.</doc>
<msg timestamp="20220704 14:17:25.012" level="INFO">Typing password into text field 'css:input#password'.</msg>
<msg timestamp="20220704 14:17:25.071" level="INFO">Temporally setting log level to: NONE</msg>
<msg timestamp="20220704 14:17:25.149" level="INFO">Log level changed from NONE to INFO.</msg>
<status status="PASS" starttime="20220704 14:17:25.012" endtime="20220704 14:17:25.149"/>
</kw>
<status status="PASS" starttime="20220704 14:17:24.968" endtime="20220704 14:17:25.149"/>
</kw>
<kw name="Click Login Button" library="LoginPage">
<doc>Clicks Trello's login button if in Trello's
login page, else it clicks Atlassian's</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220704 14:17:25.165" level="INFO">${url} = https://id.atlassian.com/login?application=trello&amp;continue=https%3A%2F%2Ftrello.com%2Fauth%2Fatlassian%2Fcallback%3FreturnUrl%3D%252F%26display%3D%26aaOnboarding%3D%26updateEmail%3D%26traceId%3D62c2f6...</msg>
<status status="PASS" starttime="20220704 14:17:25.149" endtime="20220704 14:17:25.165"/>
</kw>
<if>
<branch type="IF" condition="'${url}' == '${LOGIN_URL}'">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="NOT RUN" starttime="20220704 14:17:25.165" endtime="20220704 14:17:25.165"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<status status="NOT RUN" starttime="20220704 14:17:25.166" endtime="20220704 14:17:25.166"/>
</kw>
<status status="NOT RUN" starttime="20220704 14:17:25.165" endtime="20220704 14:17:25.166"/>
</branch>
<branch type="ELSE">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220704 14:17:25.166" endtime="20220704 14:17:25.223"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220704 14:17:25.224" level="INFO">Clicking button 'css:button#login-submit'.</msg>
<status status="PASS" starttime="20220704 14:17:25.224" endtime="20220704 14:17:25.371"/>
</kw>
<status status="PASS" starttime="20220704 14:17:25.166" endtime="20220704 14:17:25.371"/>
</branch>
<status status="PASS" starttime="20220704 14:17:25.165" endtime="20220704 14:17:25.371"/>
</if>
<status status="PASS" starttime="20220704 14:17:25.149" endtime="20220704 14:17:25.371"/>
</kw>
<status status="PASS" starttime="20220704 14:17:22.929" endtime="20220704 14:17:25.371"/>
</kw>
<kw name="Go To Board" library="BoardsPage">
<arg>CardTestBoard</arg>
<doc>Receives the board name and goes to that board's page.</doc>
<kw name="Format String" library="String">
<var>${locator}</var>
<arg>${BOARD_BUTTON}</arg>
<arg>${board_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:17:25.372" level="INFO">${locator} = //div[@title="CardTestBoard"]</msg>
<status status="PASS" starttime="20220704 14:17:25.372" endtime="20220704 14:17:25.372"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 14:17:25.372" endtime="20220704 14:17:28.907"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 14:17:28.908" level="INFO">Clicking element '//div[@title="CardTestBoard"]'.</msg>
<status status="PASS" starttime="20220704 14:17:28.908" endtime="20220704 14:17:29.277"/>
</kw>
<status status="PASS" starttime="20220704 14:17:25.371" endtime="20220704 14:17:29.277"/>
</kw>
<status status="PASS" starttime="20220704 14:17:21.351" endtime="20220704 14:17:29.277"/>
</kw>
<test id="s1-s2-s1-s2-t1" name="Verify A Card Can Be Created" line="12">
<kw name="Set Test Variable" library="BuiltIn">
<arg>\${list}</arg>
<arg>To Do</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220704 14:17:29.279" level="INFO">${list} = To Do</msg>
<status status="PASS" starttime="20220704 14:17:29.279" endtime="20220704 14:17:29.279"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>\${card}</arg>
<arg>Test Card</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220704 14:17:29.279" level="INFO">${card} = Test Card</msg>
<status status="PASS" starttime="20220704 14:17:29.279" endtime="20220704 14:17:29.279"/>
</kw>
<kw name="Create Card In List" library="ListComponent">
<arg>${list}</arg>
<arg>${card}</arg>
<doc>Create a new card in the given list
Required args: list_name, card_name</doc>
<kw name="Format String" library="String">
<var>${add_card_locator}</var>
<arg>${LIST_ADD_CARD}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:17:29.280" level="INFO">${add_card_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Add a card')]</msg>
<status status="PASS" starttime="20220704 14:17:29.280" endtime="20220704 14:17:29.280"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${add_card_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 14:17:29.280" endtime="20220704 14:17:29.837"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${add_card_locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 14:17:29.838" level="INFO">Clicking element '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Add a card')]'.</msg>
<status status="PASS" starttime="20220704 14:17:29.838" endtime="20220704 14:17:29.911"/>
</kw>
<kw name="Format String" library="String">
<var>${textarea_locator}</var>
<arg>${CARD_TITLE_INPUT}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:17:29.912" level="INFO">${textarea_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//textarea[contains(@class, 'list-card-composer-textarea')]</msg>
<status status="PASS" starttime="20220704 14:17:29.911" endtime="20220704 14:17:29.912"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 14:17:29.912" endtime="20220704 14:17:29.963"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 14:17:29.964" level="INFO">Clicking element '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//textarea[contains(@class, 'list-card-composer-textarea')]'.</msg>
<status status="PASS" starttime="20220704 14:17:29.963" endtime="20220704 14:17:30.015"/>
</kw>
<kw name="Clear Element Text" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<doc>Clears the value of the text-input-element identified by ``locator``.</doc>
<status status="PASS" starttime="20220704 14:17:30.015" endtime="20220704 14:17:30.054"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<arg>${card_name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220704 14:17:30.054" level="INFO">Typing text 'Test Card' into text field '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//textarea[contains(@class, 'list-card-composer-textarea')]'.</msg>
<status status="PASS" starttime="20220704 14:17:30.054" endtime="20220704 14:17:30.150"/>
</kw>
<kw name="Format String" library="String">
<var>${confirm_locator}</var>
<arg>${CONFIRM_ADD_CARD}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:17:30.151" level="INFO">${confirm_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//input[@value='Add card']</msg>
<status status="PASS" starttime="20220704 14:17:30.150" endtime="20220704 14:17:30.151"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${confirm_locator}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220704 14:17:30.151" level="INFO">Clicking button '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//input[@value='Add card']'.</msg>
<status status="PASS" starttime="20220704 14:17:30.151" endtime="20220704 14:17:30.340"/>
</kw>
<status status="PASS" starttime="20220704 14:17:29.279" endtime="20220704 14:17:30.340"/>
</kw>
<kw name="Verify Card Exists" library="ListComponent">
<arg>${list}</arg>
<arg>${card}</arg>
<doc>Verify that the card with card_name exists in the given list.</doc>
<kw name="Format String" library="String">
<var>${card_name_locator}</var>
<arg>${LIST_CARD_NAME}</arg>
<arg>list_name=${list_name}</arg>
<arg>card_name=${card_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:17:30.341" level="INFO">${card_name_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Test Card')]</msg>
<status status="PASS" starttime="20220704 14:17:30.341" endtime="20220704 14:17:30.341"/>
</kw>
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<arg>${card_name_locator}</arg>
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<msg timestamp="20220704 14:17:30.385" level="INFO">Element '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Test Card')]' is displayed.</msg>
<status status="PASS" starttime="20220704 14:17:30.341" endtime="20220704 14:17:30.385"/>
</kw>
<status status="PASS" starttime="20220704 14:17:30.340" endtime="20220704 14:17:30.386"/>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Go To Card Modal</arg>
<arg>list_name=${list}</arg>
<arg>card_name=${card}</arg>
<arg>AND</arg>
<arg>Delete Current Card</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Go To Card Modal" library="ListComponent">
<arg>list_name=${list}</arg>
<arg>card_name=${card}</arg>
<doc>It opens the modal for card_name in list_name</doc>
<kw name="Format String" library="String">
<var>${card_name_locator}</var>
<arg>${LIST_CARD_NAME}</arg>
<arg>list_name=${list_name}</arg>
<arg>card_name=${card_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:17:30.387" level="INFO">${card_name_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Test Card')]</msg>
<status status="PASS" starttime="20220704 14:17:30.387" endtime="20220704 14:17:30.387"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${card_name_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 14:17:30.388" endtime="20220704 14:17:30.416"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${card_name_locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 14:17:30.416" level="INFO">Clicking element '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Test Card')]'.</msg>
<status status="PASS" starttime="20220704 14:17:30.416" endtime="20220704 14:17:30.497"/>
</kw>
<status status="PASS" starttime="20220704 14:17:30.386" endtime="20220704 14:17:30.497"/>
</kw>
<kw name="Delete Current Card" library="CardModal">
<doc>The Keyword will first check if the card is archived,
if it's not, it will archive it to be able to delete it.</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${not_archived}</var>
<arg>Element Should Not Be Visible</arg>
<arg>${IS_ARCHIVED_MSG}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Element Should Not Be Visible" library="SeleniumLibrary">
<arg>${IS_ARCHIVED_MSG}</arg>
<doc>Verifies that the element identified by ``locator`` is NOT visible.</doc>
<msg timestamp="20220704 14:17:30.580" level="INFO">Element '//p[text()='This card is archived.']' did not exist.</msg>
<status status="PASS" starttime="20220704 14:17:30.498" endtime="20220704 14:17:30.580"/>
</kw>
<msg timestamp="20220704 14:17:30.580" level="INFO">${not_archived} = True</msg>
<status status="PASS" starttime="20220704 14:17:30.498" endtime="20220704 14:17:30.580"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${not_archived}</arg>
<arg>Archive Current Card</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Archive Current Card" library="CardModal">
<doc>Archives the current card from inside the modal.</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ARCHIVE_BUTTON}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 14:17:30.581" endtime="20220704 14:17:30.933"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${ARCHIVE_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 14:17:30.933" level="INFO">Clicking element '//span[@title='Archive']'.</msg>
<status status="PASS" starttime="20220704 14:17:30.933" endtime="20220704 14:17:31.064"/>
</kw>
<status status="PASS" starttime="20220704 14:17:30.580" endtime="20220704 14:17:31.065"/>
</kw>
<status status="PASS" starttime="20220704 14:17:30.580" endtime="20220704 14:17:31.065"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3</arg>
<arg>0.9</arg>
<arg>Click Element</arg>
<arg>${DELETE_BUTTON}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${DELETE_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 14:17:31.065" level="INFO">Clicking element '//a[@title='Delete']'.</msg>
<status status="PASS" starttime="20220704 14:17:31.065" endtime="20220704 14:17:31.182"/>
</kw>
<status status="PASS" starttime="20220704 14:17:31.065" endtime="20220704 14:17:31.182"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${DELETE_CONFIRM}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 14:17:31.183" level="INFO">Clicking element '//input[@value='Delete']'.</msg>
<status status="PASS" starttime="20220704 14:17:31.182" endtime="20220704 14:17:31.391"/>
</kw>
<status status="PASS" starttime="20220704 14:17:30.497" endtime="20220704 14:17:31.391"/>
</kw>
<status status="PASS" starttime="20220704 14:17:30.386" endtime="20220704 14:17:31.391"/>
</kw>
<doc>Verify that it is possible to create a new
card through Trello's GUI.</doc>
<tag>card.create</tag>
<tag>gui</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220704 14:17:29.277" endtime="20220704 14:17:31.391"/>
</test>
<test id="s1-s2-s1-s2-t2" name="Modify A Card's Name From The Board Page" line="24">
<kw name="Set Test Variable" library="BuiltIn">
<arg>\${list}</arg>
<arg>To Do</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220704 14:17:31.394" level="INFO">${list} = To Do</msg>
<status status="PASS" starttime="20220704 14:17:31.394" endtime="20220704 14:17:31.394"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>\${card}</arg>
<arg>Test Card</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220704 14:17:31.394" level="INFO">${card} = Test Card</msg>
<status status="PASS" starttime="20220704 14:17:31.394" endtime="20220704 14:17:31.394"/>
</kw>
<kw name="Create Card In List" library="ListComponent">
<arg>${list}</arg>
<arg>${card}</arg>
<doc>Create a new card in the given list
Required args: list_name, card_name</doc>
<kw name="Format String" library="String">
<var>${add_card_locator}</var>
<arg>${LIST_ADD_CARD}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:17:31.395" level="INFO">${add_card_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Add a card')]</msg>
<status status="PASS" starttime="20220704 14:17:31.395" endtime="20220704 14:17:31.395"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${add_card_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 14:17:31.395" endtime="20220704 14:17:31.449"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${add_card_locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 14:17:31.450" level="INFO">Clicking element '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Add a card')]'.</msg>
<status status="PASS" starttime="20220704 14:17:31.449" endtime="20220704 14:17:31.513"/>
</kw>
<kw name="Format String" library="String">
<var>${textarea_locator}</var>
<arg>${CARD_TITLE_INPUT}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:17:31.514" level="INFO">${textarea_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//textarea[contains(@class, 'list-card-composer-textarea')]</msg>
<status status="PASS" starttime="20220704 14:17:31.513" endtime="20220704 14:17:31.514"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 14:17:31.514" endtime="20220704 14:17:31.564"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 14:17:31.564" level="INFO">Clicking element '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//textarea[contains(@class, 'list-card-composer-textarea')]'.</msg>
<status status="PASS" starttime="20220704 14:17:31.564" endtime="20220704 14:17:31.623"/>
</kw>
<kw name="Clear Element Text" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<doc>Clears the value of the text-input-element identified by ``locator``.</doc>
<status status="PASS" starttime="20220704 14:17:31.623" endtime="20220704 14:17:31.660"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<arg>${card_name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220704 14:17:31.660" level="INFO">Typing text 'Test Card' into text field '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//textarea[contains(@class, 'list-card-composer-textarea')]'.</msg>
<status status="PASS" starttime="20220704 14:17:31.660" endtime="20220704 14:17:31.739"/>
</kw>
<kw name="Format String" library="String">
<var>${confirm_locator}</var>
<arg>${CONFIRM_ADD_CARD}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:17:31.740" level="INFO">${confirm_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//input[@value='Add card']</msg>
<status status="PASS" starttime="20220704 14:17:31.740" endtime="20220704 14:17:31.740"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${confirm_locator}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220704 14:17:31.741" level="INFO">Clicking button '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//input[@value='Add card']'.</msg>
<status status="PASS" starttime="20220704 14:17:31.740" endtime="20220704 14:17:31.806"/>
</kw>
<status status="PASS" starttime="20220704 14:17:31.394" endtime="20220704 14:17:31.806"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>\${new_name}</arg>
<arg>New Name</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220704 14:17:31.806" level="INFO">${new_name} = New Name</msg>
<status status="PASS" starttime="20220704 14:17:31.806" endtime="20220704 14:17:31.806"/>
</kw>
<kw name="Edit Card Title Using Pencil Icon" library="ListComponent">
<arg>${list}</arg>
<arg>${card}</arg>
<arg>${new_name}</arg>
<doc>Modifies the title of the given card, using the pencil icon
required: list_name, card_name, new_title</doc>
<kw name="Format String" library="String">
<var>${card_element}</var>
<arg>${LIST_CARD_NAME}</arg>
<arg>list_name=${list_name}</arg>
<arg>card_name=${card_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:17:31.807" level="INFO">${card_element} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Test Card')]</msg>
<status status="PASS" starttime="20220704 14:17:31.807" endtime="20220704 14:17:31.808"/>
</kw>
<kw name="Format String" library="String">
<var>${pencil_locator}</var>
<arg>${PENCIL_ICON}</arg>
<arg>list_name=${list_name}</arg>
<arg>card_name=${card_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:17:31.808" level="INFO">${pencil_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Test Card')]//span[contains(@class, 'icon-edit')]</msg>
<status status="PASS" starttime="20220704 14:17:31.808" endtime="20220704 14:17:31.808"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${card_element}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 14:17:31.808" endtime="20220704 14:17:31.859"/>
</kw>
<kw name="Mouse Over" library="SeleniumLibrary">
<arg>${card_element}</arg>
<doc>Simulates hovering the mouse over the element ``locator``.</doc>
<msg timestamp="20220704 14:17:31.860" level="INFO">Simulating Mouse Over on element '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Test Card')]'.</msg>
<status status="PASS" starttime="20220704 14:17:31.860" endtime="20220704 14:17:32.141"/>
</kw>
<kw name="Wait Until Page Contains Element" library="SeleniumLibrary">
<arg>${pencil_locator}</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" starttime="20220704 14:17:32.141" endtime="20220704 14:17:32.163"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${pencil_locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 14:17:32.164" level="INFO">Clicking element '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Test Card')]//span[contains(@class, 'icon-edit')]'.</msg>
<status status="PASS" starttime="20220704 14:17:32.163" endtime="20220704 14:17:32.243"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${CARD_EDIT_TITLE}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 14:17:32.244" endtime="20220704 14:17:32.281"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${CARD_EDIT_TITLE}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 14:17:32.282" level="INFO">Clicking element 'css:textarea.list-card-edit-title'.</msg>
<status status="PASS" starttime="20220704 14:17:32.281" endtime="20220704 14:17:32.393"/>
</kw>
<kw name="Clear Element Text" library="SeleniumLibrary">
<arg>${CARD_EDIT_TITLE}</arg>
<doc>Clears the value of the text-input-element identified by ``locator``.</doc>
<status status="PASS" starttime="20220704 14:17:32.393" endtime="20220704 14:17:32.439"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${CARD_EDIT_TITLE}</arg>
<arg>${new_title}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220704 14:17:32.439" level="INFO">Typing text 'New Name' into text field 'css:textarea.list-card-edit-title'.</msg>
<status status="PASS" starttime="20220704 14:17:32.439" endtime="20220704 14:17:32.532"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${CARD_EDIT_TITLE_SAVE}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 14:17:32.533" level="INFO">Clicking element '//input[@value='Save']'.</msg>
<status status="PASS" starttime="20220704 14:17:32.533" endtime="20220704 14:17:32.609"/>
</kw>
<status status="PASS" starttime="20220704 14:17:31.806" endtime="20220704 14:17:32.609"/>
</kw>
<kw name="Verify Card Exists" library="ListComponent">
<arg>${list}</arg>
<arg>${new_name}</arg>
<doc>Verify that the card with card_name exists in the given list.</doc>
<kw name="Format String" library="String">
<var>${card_name_locator}</var>
<arg>${LIST_CARD_NAME}</arg>
<arg>list_name=${list_name}</arg>
<arg>card_name=${card_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:17:32.610" level="INFO">${card_name_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'New Name')]</msg>
<status status="PASS" starttime="20220704 14:17:32.610" endtime="20220704 14:17:32.610"/>
</kw>
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<arg>${card_name_locator}</arg>
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<msg timestamp="20220704 14:17:32.653" level="INFO">Element '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'New Name')]' is displayed.</msg>
<status status="PASS" starttime="20220704 14:17:32.610" endtime="20220704 14:17:32.653"/>
</kw>
<status status="PASS" starttime="20220704 14:17:32.609" endtime="20220704 14:17:32.654"/>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Go To Card Modal</arg>
<arg>list_name=${list}</arg>
<arg>card_name=${new_name}</arg>
<arg>AND</arg>
<arg>Delete Current Card</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Go To Card Modal" library="ListComponent">
<arg>list_name=${list}</arg>
<arg>card_name=${new_name}</arg>
<doc>It opens the modal for card_name in list_name</doc>
<kw name="Format String" library="String">
<var>${card_name_locator}</var>
<arg>${LIST_CARD_NAME}</arg>
<arg>list_name=${list_name}</arg>
<arg>card_name=${card_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:17:32.655" level="INFO">${card_name_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'New Name')]</msg>
<status status="PASS" starttime="20220704 14:17:32.655" endtime="20220704 14:17:32.655"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${card_name_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 14:17:32.656" endtime="20220704 14:17:32.684"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${card_name_locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 14:17:32.685" level="INFO">Clicking element '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'New Name')]'.</msg>
<status status="PASS" starttime="20220704 14:17:32.685" endtime="20220704 14:17:32.945"/>
</kw>
<status status="PASS" starttime="20220704 14:17:32.654" endtime="20220704 14:17:32.945"/>
</kw>
<kw name="Delete Current Card" library="CardModal">
<doc>The Keyword will first check if the card is archived,
if it's not, it will archive it to be able to delete it.</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${not_archived}</var>
<arg>Element Should Not Be Visible</arg>
<arg>${IS_ARCHIVED_MSG}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Element Should Not Be Visible" library="SeleniumLibrary">
<arg>${IS_ARCHIVED_MSG}</arg>
<doc>Verifies that the element identified by ``locator`` is NOT visible.</doc>
<msg timestamp="20220704 14:17:32.979" level="INFO">Element '//p[text()='This card is archived.']' did not exist.</msg>
<status status="PASS" starttime="20220704 14:17:32.946" endtime="20220704 14:17:32.979"/>
</kw>
<msg timestamp="20220704 14:17:32.979" level="INFO">${not_archived} = True</msg>
<status status="PASS" starttime="20220704 14:17:32.946" endtime="20220704 14:17:32.979"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${not_archived}</arg>
<arg>Archive Current Card</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Archive Current Card" library="CardModal">
<doc>Archives the current card from inside the modal.</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ARCHIVE_BUTTON}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 14:17:32.980" endtime="20220704 14:17:33.014"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${ARCHIVE_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 14:17:33.014" level="INFO">Clicking element '//span[@title='Archive']'.</msg>
<status status="PASS" starttime="20220704 14:17:33.014" endtime="20220704 14:17:33.102"/>
</kw>
<status status="PASS" starttime="20220704 14:17:32.980" endtime="20220704 14:17:33.102"/>
</kw>
<status status="PASS" starttime="20220704 14:17:32.979" endtime="20220704 14:17:33.102"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3</arg>
<arg>0.9</arg>
<arg>Click Element</arg>
<arg>${DELETE_BUTTON}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${DELETE_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 14:17:33.103" level="INFO">Clicking element '//a[@title='Delete']'.</msg>
<status status="PASS" starttime="20220704 14:17:33.103" endtime="20220704 14:17:33.171"/>
</kw>
<status status="PASS" starttime="20220704 14:17:33.102" endtime="20220704 14:17:33.171"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${DELETE_CONFIRM}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 14:17:33.171" level="INFO">Clicking element '//input[@value='Delete']'.</msg>
<status status="PASS" starttime="20220704 14:17:33.171" endtime="20220704 14:17:33.366"/>
</kw>
<status status="PASS" starttime="20220704 14:17:32.945" endtime="20220704 14:17:33.366"/>
</kw>
<status status="PASS" starttime="20220704 14:17:32.654" endtime="20220704 14:17:33.366"/>
</kw>
<doc>Verify that it is possible to edit a card's Name
using the pencil icon in the board page.</doc>
<tag>card.title_board</tag>
<tag>gui</tag>
<tag>regression</tag>
<status status="PASS" starttime="20220704 14:17:31.392" endtime="20220704 14:17:33.367"/>
</test>
<test id="s1-s2-s1-s2-t3" name="Leave A Comment On A Card" line="38">
<kw name="Set Test Variable" library="BuiltIn">
<arg>\${list}</arg>
<arg>To Do</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220704 14:17:33.369" level="INFO">${list} = To Do</msg>
<status status="PASS" starttime="20220704 14:17:33.369" endtime="20220704 14:17:33.369"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>\${card}</arg>
<arg>Test Card</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220704 14:17:33.369" level="INFO">${card} = Test Card</msg>
<status status="PASS" starttime="20220704 14:17:33.369" endtime="20220704 14:17:33.370"/>
</kw>
<kw name="Create Card In List" library="ListComponent">
<arg>${list}</arg>
<arg>${card}</arg>
<doc>Create a new card in the given list
Required args: list_name, card_name</doc>
<kw name="Format String" library="String">
<var>${add_card_locator}</var>
<arg>${LIST_ADD_CARD}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:17:33.370" level="INFO">${add_card_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Add a card')]</msg>
<status status="PASS" starttime="20220704 14:17:33.370" endtime="20220704 14:17:33.370"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${add_card_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 14:17:33.371" endtime="20220704 14:17:33.426"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${add_card_locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 14:17:33.426" level="INFO">Clicking element '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Add a card')]'.</msg>
<status status="PASS" starttime="20220704 14:17:33.426" endtime="20220704 14:17:33.521"/>
</kw>
<kw name="Format String" library="String">
<var>${textarea_locator}</var>
<arg>${CARD_TITLE_INPUT}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:17:33.522" level="INFO">${textarea_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//textarea[contains(@class, 'list-card-composer-textarea')]</msg>
<status status="PASS" starttime="20220704 14:17:33.522" endtime="20220704 14:17:33.522"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 14:17:33.522" endtime="20220704 14:17:33.591"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 14:17:33.591" level="INFO">Clicking element '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//textarea[contains(@class, 'list-card-composer-textarea')]'.</msg>
<status status="PASS" starttime="20220704 14:17:33.591" endtime="20220704 14:17:33.658"/>
</kw>
<kw name="Clear Element Text" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<doc>Clears the value of the text-input-element identified by ``locator``.</doc>
<status status="PASS" starttime="20220704 14:17:33.658" endtime="20220704 14:17:33.703"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<arg>${card_name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220704 14:17:33.704" level="INFO">Typing text 'Test Card' into text field '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//textarea[contains(@class, 'list-card-composer-textarea')]'.</msg>
<status status="PASS" starttime="20220704 14:17:33.704" endtime="20220704 14:17:33.807"/>
</kw>
<kw name="Format String" library="String">
<var>${confirm_locator}</var>
<arg>${CONFIRM_ADD_CARD}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:17:33.808" level="INFO">${confirm_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//input[@value='Add card']</msg>
<status status="PASS" starttime="20220704 14:17:33.807" endtime="20220704 14:17:33.808"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${confirm_locator}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220704 14:17:33.808" level="INFO">Clicking button '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//input[@value='Add card']'.</msg>
<status status="PASS" starttime="20220704 14:17:33.808" endtime="20220704 14:17:33.887"/>
</kw>
<status status="PASS" starttime="20220704 14:17:33.370" endtime="20220704 14:17:33.888"/>
</kw>
<kw name="Go To Card Modal" library="ListComponent">
<arg>${list}</arg>
<arg>${card}</arg>
<doc>It opens the modal for card_name in list_name</doc>
<kw name="Format String" library="String">
<var>${card_name_locator}</var>
<arg>${LIST_CARD_NAME}</arg>
<arg>list_name=${list_name}</arg>
<arg>card_name=${card_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:17:33.889" level="INFO">${card_name_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Test Card')]</msg>
<status status="PASS" starttime="20220704 14:17:33.888" endtime="20220704 14:17:33.889"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${card_name_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 14:17:33.889" endtime="20220704 14:17:33.942"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${card_name_locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 14:17:33.943" level="INFO">Clicking element '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Test Card')]'.</msg>
<status status="PASS" starttime="20220704 14:17:33.943" endtime="20220704 14:17:34.002"/>
</kw>
<status status="PASS" starttime="20220704 14:17:33.888" endtime="20220704 14:17:34.002"/>
</kw>
<kw name="Get Number Of Comments" library="CardModal">
<var>${comments_before}</var>
<doc>Return the number of comments present in the modal.</doc>
<kw name="Get Element Count" library="SeleniumLibrary">
<var>${n}</var>
<arg>${COMMENT_DIV}</arg>
<doc>Returns the number of elements matching ``locator``.</doc>
<msg timestamp="20220704 14:17:34.236" level="INFO">${n} = 0</msg>
<status status="PASS" starttime="20220704 14:17:34.003" endtime="20220704 14:17:34.236"/>
</kw>
<return>
<value>${n}</value>
<status status="PASS" starttime="20220704 14:17:34.236" endtime="20220704 14:17:34.236"/>
</return>
<msg timestamp="20220704 14:17:34.236" level="INFO">${comments_before} = 0</msg>
<status status="PASS" starttime="20220704 14:17:34.002" endtime="20220704 14:17:34.236"/>
</kw>
<kw name="Send A Comment" library="CardModal">
<arg>This is a test comment</arg>
<doc>Sends a comment under the "activity" section of the modal
required: comment</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${COMMENT_BOX_INPUT}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 14:17:34.237" endtime="20220704 14:17:34.519"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${COMMENT_BOX_INPUT}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 14:17:34.520" level="INFO">Clicking element '//div[@class='comment-box']/textarea'.</msg>
<status status="PASS" starttime="20220704 14:17:34.519" endtime="20220704 14:17:34.620"/>
</kw>
<kw name="Clear Element Text" library="SeleniumLibrary">
<arg>${COMMENT_BOX_INPUT}</arg>
<doc>Clears the value of the text-input-element identified by ``locator``.</doc>
<status status="PASS" starttime="20220704 14:17:34.620" endtime="20220704 14:17:34.685"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${COMMENT_BOX_INPUT}</arg>
<arg>${comment}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220704 14:17:34.685" level="INFO">Typing text 'This is a test comment' into text field '//div[@class='comment-box']/textarea'.</msg>
<status status="PASS" starttime="20220704 14:17:34.685" endtime="20220704 14:17:34.865"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${SAVE_COMMENT}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 14:17:34.866" level="INFO">Clicking element '//div[contains(@class, 'comment-controls')]//input[@value='Save']'.</msg>
<status status="PASS" starttime="20220704 14:17:34.865" endtime="20220704 14:17:35.024"/>
</kw>
<status status="PASS" starttime="20220704 14:17:34.236" endtime="20220704 14:17:35.024"/>
</kw>
<kw name="Get Number Of Comments" library="CardModal">
<var>${comments_after}</var>
<doc>Return the number of comments present in the modal.</doc>
<kw name="Get Element Count" library="SeleniumLibrary">
<var>${n}</var>
<arg>${COMMENT_DIV}</arg>
<doc>Returns the number of elements matching ``locator``.</doc>
<msg timestamp="20220704 14:17:35.111" level="INFO">${n} = 1</msg>
<status status="PASS" starttime="20220704 14:17:35.025" endtime="20220704 14:17:35.111"/>
</kw>
<return>
<value>${n}</value>
<status status="PASS" starttime="20220704 14:17:35.111" endtime="20220704 14:17:35.111"/>
</return>
<msg timestamp="20220704 14:17:35.112" level="INFO">${comments_after} = 1</msg>
<status status="PASS" starttime="20220704 14:17:35.025" endtime="20220704 14:17:35.112"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${comments_after} == ${comments_before}+${1}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220704 14:17:35.112" endtime="20220704 14:17:35.113"/>
</kw>
<kw name="Delete Current Card" library="CardModal" type="TEARDOWN">
<doc>The Keyword will first check if the card is archived,
if it's not, it will archive it to be able to delete it.</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${not_archived}</var>
<arg>Element Should Not Be Visible</arg>
<arg>${IS_ARCHIVED_MSG}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Element Should Not Be Visible" library="SeleniumLibrary">
<arg>${IS_ARCHIVED_MSG}</arg>
<doc>Verifies that the element identified by ``locator`` is NOT visible.</doc>
<msg timestamp="20220704 14:17:35.174" level="INFO">Element '//p[text()='This card is archived.']' did not exist.</msg>
<status status="PASS" starttime="20220704 14:17:35.114" endtime="20220704 14:17:35.174"/>
</kw>
<msg timestamp="20220704 14:17:35.175" level="INFO">${not_archived} = True</msg>
<status status="PASS" starttime="20220704 14:17:35.114" endtime="20220704 14:17:35.175"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${not_archived}</arg>
<arg>Archive Current Card</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Archive Current Card" library="CardModal">
<doc>Archives the current card from inside the modal.</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ARCHIVE_BUTTON}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 14:17:35.176" endtime="20220704 14:17:35.249"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${ARCHIVE_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 14:17:35.250" level="INFO">Clicking element '//span[@title='Archive']'.</msg>
<status status="PASS" starttime="20220704 14:17:35.249" endtime="20220704 14:17:35.355"/>
</kw>
<status status="PASS" starttime="20220704 14:17:35.175" endtime="20220704 14:17:35.356"/>
</kw>
<status status="PASS" starttime="20220704 14:17:35.175" endtime="20220704 14:17:35.356"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3</arg>
<arg>0.9</arg>
<arg>Click Element</arg>
<arg>${DELETE_BUTTON}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${DELETE_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 14:17:35.356" level="INFO">Clicking element '//a[@title='Delete']'.</msg>
<status status="PASS" starttime="20220704 14:17:35.356" endtime="20220704 14:17:35.471"/>
</kw>
<status status="PASS" starttime="20220704 14:17:35.356" endtime="20220704 14:17:35.471"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${DELETE_CONFIRM}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 14:17:35.472" level="INFO">Clicking element '//input[@value='Delete']'.</msg>
<status status="PASS" starttime="20220704 14:17:35.471" endtime="20220704 14:17:35.707"/>
</kw>
<status status="PASS" starttime="20220704 14:17:35.113" endtime="20220704 14:17:35.707"/>
</kw>
<doc>Verify that it is possible to write a comment
on a card, through the card modal.</doc>
<tag>card.comment</tag>
<tag>gui</tag>
<tag>regression</tag>
<status status="PASS" starttime="20220704 14:17:33.368" endtime="20220704 14:17:35.707"/>
</test>
<test id="s1-s2-s1-s2-t4" name="Verify A Card Can Be Deleted" line="52">
<kw name="Set Test Variable" library="BuiltIn">
<arg>\${list}</arg>
<arg>To Do</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220704 14:17:35.709" level="INFO">${list} = To Do</msg>
<status status="PASS" starttime="20220704 14:17:35.709" endtime="20220704 14:17:35.709"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>\${card}</arg>
<arg>Test Card</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220704 14:17:35.710" level="INFO">${card} = Test Card</msg>
<status status="PASS" starttime="20220704 14:17:35.710" endtime="20220704 14:17:35.710"/>
</kw>
<kw name="Get Number Of Cards In List" library="ListComponent">
<var>${cards_before}</var>
<arg>${list}</arg>
<doc>Return the number of cards present in a given list.
required: list_name</doc>
<kw name="Format String" library="String">
<var>${card_anchor_locator}</var>
<arg>${CARD_ANCHORS}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:17:35.711" level="INFO">${card_anchor_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(@class, 'list-card')]</msg>
<status status="PASS" starttime="20220704 14:17:35.710" endtime="20220704 14:17:35.711"/>
</kw>
<kw name="Get Element Count" library="SeleniumLibrary">
<var>${n}</var>
<arg>${card_anchor_locator}</arg>
<doc>Returns the number of elements matching ``locator``.</doc>
<msg timestamp="20220704 14:17:35.769" level="INFO">${n} = 0</msg>
<status status="PASS" starttime="20220704 14:17:35.711" endtime="20220704 14:17:35.769"/>
</kw>
<return>
<value>${n}</value>
<status status="PASS" starttime="20220704 14:17:35.769" endtime="20220704 14:17:35.769"/>
</return>
<msg timestamp="20220704 14:17:35.769" level="INFO">${cards_before} = 0</msg>
<status status="PASS" starttime="20220704 14:17:35.710" endtime="20220704 14:17:35.769"/>
</kw>
<kw name="Create Card In List" library="ListComponent">
<arg>${list}</arg>
<arg>${card}</arg>
<doc>Create a new card in the given list
Required args: list_name, card_name</doc>
<kw name="Format String" library="String">
<var>${add_card_locator}</var>
<arg>${LIST_ADD_CARD}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:17:35.771" level="INFO">${add_card_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Add a card')]</msg>
<status status="PASS" starttime="20220704 14:17:35.770" endtime="20220704 14:17:35.771"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${add_card_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 14:17:35.771" endtime="20220704 14:17:35.837"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${add_card_locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 14:17:35.838" level="INFO">Clicking element '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Add a card')]'.</msg>
<status status="PASS" starttime="20220704 14:17:35.837" endtime="20220704 14:17:35.983"/>
</kw>
<kw name="Format String" library="String">
<var>${textarea_locator}</var>
<arg>${CARD_TITLE_INPUT}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:17:35.983" level="INFO">${textarea_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//textarea[contains(@class, 'list-card-composer-textarea')]</msg>
<status status="PASS" starttime="20220704 14:17:35.983" endtime="20220704 14:17:35.983"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 14:17:35.984" endtime="20220704 14:17:36.017"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 14:17:36.018" level="INFO">Clicking element '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//textarea[contains(@class, 'list-card-composer-textarea')]'.</msg>
<status status="PASS" starttime="20220704 14:17:36.017" endtime="20220704 14:17:36.093"/>
</kw>
<kw name="Clear Element Text" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<doc>Clears the value of the text-input-element identified by ``locator``.</doc>
<status status="PASS" starttime="20220704 14:17:36.094" endtime="20220704 14:17:36.129"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<arg>${card_name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220704 14:17:36.130" level="INFO">Typing text 'Test Card' into text field '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//textarea[contains(@class, 'list-card-composer-textarea')]'.</msg>
<status status="PASS" starttime="20220704 14:17:36.130" endtime="20220704 14:17:36.270"/>
</kw>
<kw name="Format String" library="String">
<var>${confirm_locator}</var>
<arg>${CONFIRM_ADD_CARD}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:17:36.271" level="INFO">${confirm_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//input[@value='Add card']</msg>
<status status="PASS" starttime="20220704 14:17:36.271" endtime="20220704 14:17:36.271"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${confirm_locator}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220704 14:17:36.272" level="INFO">Clicking button '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//input[@value='Add card']'.</msg>
<status status="PASS" starttime="20220704 14:17:36.271" endtime="20220704 14:17:36.361"/>
</kw>
<status status="PASS" starttime="20220704 14:17:35.770" endtime="20220704 14:17:36.361"/>
</kw>
<kw name="Go To Card Modal" library="ListComponent">
<arg>${list}</arg>
<arg>${card}</arg>
<doc>It opens the modal for card_name in list_name</doc>
<kw name="Format String" library="String">
<var>${card_name_locator}</var>
<arg>${LIST_CARD_NAME}</arg>
<arg>list_name=${list_name}</arg>
<arg>card_name=${card_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:17:36.362" level="INFO">${card_name_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Test Card')]</msg>
<status status="PASS" starttime="20220704 14:17:36.362" endtime="20220704 14:17:36.362"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${card_name_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 14:17:36.362" endtime="20220704 14:17:36.442"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${card_name_locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 14:17:36.442" level="INFO">Clicking element '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Test Card')]'.</msg>
<status status="PASS" starttime="20220704 14:17:36.442" endtime="20220704 14:17:36.499"/>
</kw>
<status status="PASS" starttime="20220704 14:17:36.361" endtime="20220704 14:17:36.500"/>
</kw>
<kw name="Delete Current Card" library="CardModal">
<doc>The Keyword will first check if the card is archived,
if it's not, it will archive it to be able to delete it.</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${not_archived}</var>
<arg>Element Should Not Be Visible</arg>
<arg>${IS_ARCHIVED_MSG}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Element Should Not Be Visible" library="SeleniumLibrary">
<arg>${IS_ARCHIVED_MSG}</arg>
<doc>Verifies that the element identified by ``locator`` is NOT visible.</doc>
<msg timestamp="20220704 14:17:36.842" level="INFO">Element '//p[text()='This card is archived.']' did not exist.</msg>
<status status="PASS" starttime="20220704 14:17:36.500" endtime="20220704 14:17:36.842"/>
</kw>
<msg timestamp="20220704 14:17:36.842" level="INFO">${not_archived} = True</msg>
<status status="PASS" starttime="20220704 14:17:36.500" endtime="20220704 14:17:36.842"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${not_archived}</arg>
<arg>Archive Current Card</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Archive Current Card" library="CardModal">
<doc>Archives the current card from inside the modal.</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ARCHIVE_BUTTON}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 14:17:36.843" endtime="20220704 14:17:36.927"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${ARCHIVE_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 14:17:36.928" level="INFO">Clicking element '//span[@title='Archive']'.</msg>
<status status="PASS" starttime="20220704 14:17:36.927" endtime="20220704 14:17:37.088"/>
</kw>
<status status="PASS" starttime="20220704 14:17:36.843" endtime="20220704 14:17:37.088"/>
</kw>
<status status="PASS" starttime="20220704 14:17:36.843" endtime="20220704 14:17:37.088"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3</arg>
<arg>0.9</arg>
<arg>Click Element</arg>
<arg>${DELETE_BUTTON}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${DELETE_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 14:17:37.089" level="INFO">Clicking element '//a[@title='Delete']'.</msg>
<status status="PASS" starttime="20220704 14:17:37.089" endtime="20220704 14:17:37.212"/>
</kw>
<status status="PASS" starttime="20220704 14:17:37.088" endtime="20220704 14:17:37.212"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${DELETE_CONFIRM}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 14:17:37.213" level="INFO">Clicking element '//input[@value='Delete']'.</msg>
<status status="PASS" starttime="20220704 14:17:37.212" endtime="20220704 14:17:37.494"/>
</kw>
<status status="PASS" starttime="20220704 14:17:36.500" endtime="20220704 14:17:37.494"/>
</kw>
<kw name="Get Number Of Cards In List" library="ListComponent">
<var>${cards_after}</var>
<arg>${list}</arg>
<doc>Return the number of cards present in a given list.
required: list_name</doc>
<kw name="Format String" library="String">
<var>${card_anchor_locator}</var>
<arg>${CARD_ANCHORS}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:17:37.496" level="INFO">${card_anchor_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(@class, 'list-card')]</msg>
<status status="PASS" starttime="20220704 14:17:37.495" endtime="20220704 14:17:37.496"/>
</kw>
<kw name="Get Element Count" library="SeleniumLibrary">
<var>${n}</var>
<arg>${card_anchor_locator}</arg>
<doc>Returns the number of elements matching ``locator``.</doc>
<msg timestamp="20220704 14:17:37.530" level="INFO">${n} = 0</msg>
<status status="PASS" starttime="20220704 14:17:37.496" endtime="20220704 14:17:37.530"/>
</kw>
<return>
<value>${n}</value>
<status status="PASS" starttime="20220704 14:17:37.530" endtime="20220704 14:17:37.530"/>
</return>
<msg timestamp="20220704 14:17:37.530" level="INFO">${cards_after} = 0</msg>
<status status="PASS" starttime="20220704 14:17:37.495" endtime="20220704 14:17:37.530"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${cards_before} == ${cards_after}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220704 14:17:37.531" endtime="20220704 14:17:37.531"/>
</kw>
<doc>Verify that it is possible to delete a card
from inside the card modal.</doc>
<tag>card.delete</tag>
<tag>gui</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220704 14:17:35.708" endtime="20220704 14:17:37.531"/>
</test>
<test id="s1-s2-s1-s2-t5" name="Card Can Be Dragged To Another List" line="65">
<kw name="Set Test Variable" library="BuiltIn">
<arg>\${list}</arg>
<arg>To Do</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220704 14:17:37.533" level="INFO">${list} = To Do</msg>
<status status="PASS" starttime="20220704 14:17:37.533" endtime="20220704 14:17:37.533"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>\${card}</arg>
<arg>Test Card</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220704 14:17:37.533" level="INFO">${card} = Test Card</msg>
<status status="PASS" starttime="20220704 14:17:37.533" endtime="20220704 14:17:37.533"/>
</kw>
<kw name="Create Card In List" library="ListComponent">
<arg>${list}</arg>
<arg>${card}</arg>
<doc>Create a new card in the given list
Required args: list_name, card_name</doc>
<kw name="Format String" library="String">
<var>${add_card_locator}</var>
<arg>${LIST_ADD_CARD}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:17:37.534" level="INFO">${add_card_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Add a card')]</msg>
<status status="PASS" starttime="20220704 14:17:37.534" endtime="20220704 14:17:37.534"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${add_card_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 14:17:37.534" endtime="20220704 14:17:37.570"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${add_card_locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 14:17:37.570" level="INFO">Clicking element '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Add a card')]'.</msg>
<status status="PASS" starttime="20220704 14:17:37.570" endtime="20220704 14:17:37.670"/>
</kw>
<kw name="Format String" library="String">
<var>${textarea_locator}</var>
<arg>${CARD_TITLE_INPUT}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:17:37.671" level="INFO">${textarea_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//textarea[contains(@class, 'list-card-composer-textarea')]</msg>
<status status="PASS" starttime="20220704 14:17:37.671" endtime="20220704 14:17:37.671"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 14:17:37.671" endtime="20220704 14:17:37.815"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 14:17:37.815" level="INFO">Clicking element '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//textarea[contains(@class, 'list-card-composer-textarea')]'.</msg>
<status status="PASS" starttime="20220704 14:17:37.815" endtime="20220704 14:17:38.002"/>
</kw>
<kw name="Clear Element Text" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<doc>Clears the value of the text-input-element identified by ``locator``.</doc>
<status status="PASS" starttime="20220704 14:17:38.003" endtime="20220704 14:17:38.083"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<arg>${card_name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220704 14:17:38.083" level="INFO">Typing text 'Test Card' into text field '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//textarea[contains(@class, 'list-card-composer-textarea')]'.</msg>
<status status="PASS" starttime="20220704 14:17:38.083" endtime="20220704 14:17:38.322"/>
</kw>
<kw name="Format String" library="String">
<var>${confirm_locator}</var>
<arg>${CONFIRM_ADD_CARD}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:17:38.323" level="INFO">${confirm_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//input[@value='Add card']</msg>
<status status="PASS" starttime="20220704 14:17:38.322" endtime="20220704 14:17:38.323"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${confirm_locator}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220704 14:17:38.323" level="INFO">Clicking button '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//input[@value='Add card']'.</msg>
<status status="PASS" starttime="20220704 14:17:38.323" endtime="20220704 14:17:38.583"/>
</kw>
<status status="PASS" starttime="20220704 14:17:37.533" endtime="20220704 14:17:38.583"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>\${list2}</arg>
<arg>Doing</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220704 14:17:38.583" level="INFO">${list2} = Doing</msg>
<status status="PASS" starttime="20220704 14:17:38.583" endtime="20220704 14:17:38.583"/>
</kw>
<kw name="Drag Card From One List To Another" library="ListComponent">
<arg>${card}</arg>
<arg>${list}</arg>
<arg>${list2}</arg>
<doc>required: card_name, source_list_name, target_list_name</doc>
<kw name="Format String" library="String">
<var>${card_locator}</var>
<arg>${LIST_CARD_NAME}</arg>
<arg>list_name=${list1_name}</arg>
<arg>card_name=${card_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:17:38.584" level="INFO">${card_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Test Card')]</msg>
<status status="PASS" starttime="20220704 14:17:38.584" endtime="20220704 14:17:38.585"/>
</kw>
<kw name="Format String" library="String">
<var>${list2_locator}</var>
<arg>${LIST_DIV}</arg>
<arg>list_name=${list2_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:17:38.585" level="INFO">${list2_locator} = //h2[text()='Doing']//ancestor::div[contains(@class, 'list-content')]</msg>
<status status="PASS" starttime="20220704 14:17:38.585" endtime="20220704 14:17:38.585"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${card_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 14:17:38.585" endtime="20220704 14:17:38.737"/>
</kw>
<kw name="Drag And Drop" library="SeleniumLibrary">
<arg>${card_locator}</arg>
<arg>${list2_locator}</arg>
<doc>Drags the element identified by ``locator`` into the ``target`` element.</doc>
<status status="PASS" starttime="20220704 14:17:38.737" endtime="20220704 14:17:39.445"/>
</kw>
<status status="PASS" starttime="20220704 14:17:38.583" endtime="20220704 14:17:39.446"/>
</kw>
<kw name="Card Should Be In List" library="ListComponent">
<arg>${card}</arg>
<arg>${list2}</arg>
<doc>Check that a card is visible and in the given list
required: card_name, list_name</doc>
<kw name="Format String" library="String">
<var>${card_locator}</var>
<arg>${LIST_CARD_NAME}</arg>
<arg>list_name=${list_name}</arg>
<arg>card_name=${card_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:17:39.447" level="INFO">${card_locator} = //h2[text()='Doing']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Test Card')]</msg>
<status status="PASS" starttime="20220704 14:17:39.446" endtime="20220704 14:17:39.447"/>
</kw>
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<arg>${card_locator}</arg>
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<msg timestamp="20220704 14:17:39.498" level="INFO">Element '//h2[text()='Doing']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Test Card')]' is displayed.</msg>
<status status="PASS" starttime="20220704 14:17:39.447" endtime="20220704 14:17:39.498"/>
</kw>
<status status="PASS" starttime="20220704 14:17:39.446" endtime="20220704 14:17:39.498"/>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Go To Card Modal</arg>
<arg>${list2}</arg>
<arg>${card}</arg>
<arg>AND</arg>
<arg>Delete Current Card</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Go To Card Modal" library="ListComponent">
<arg>${list2}</arg>
<arg>${card}</arg>
<doc>It opens the modal for card_name in list_name</doc>
<kw name="Format String" library="String">
<var>${card_name_locator}</var>
<arg>${LIST_CARD_NAME}</arg>
<arg>list_name=${list_name}</arg>
<arg>card_name=${card_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:17:39.500" level="INFO">${card_name_locator} = //h2[text()='Doing']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Test Card')]</msg>
<status status="PASS" starttime="20220704 14:17:39.499" endtime="20220704 14:17:39.500"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${card_name_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 14:17:39.500" endtime="20220704 14:17:39.567"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${card_name_locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 14:17:39.567" level="INFO">Clicking element '//h2[text()='Doing']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Test Card')]'.</msg>
<status status="PASS" starttime="20220704 14:17:39.567" endtime="20220704 14:17:39.624"/>
</kw>
<status status="PASS" starttime="20220704 14:17:39.499" endtime="20220704 14:17:39.625"/>
</kw>
<kw name="Delete Current Card" library="CardModal">
<doc>The Keyword will first check if the card is archived,
if it's not, it will archive it to be able to delete it.</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${not_archived}</var>
<arg>Element Should Not Be Visible</arg>
<arg>${IS_ARCHIVED_MSG}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Element Should Not Be Visible" library="SeleniumLibrary">
<arg>${IS_ARCHIVED_MSG}</arg>
<doc>Verifies that the element identified by ``locator`` is NOT visible.</doc>
<msg timestamp="20220704 14:17:39.895" level="INFO">Element '//p[text()='This card is archived.']' did not exist.</msg>
<status status="PASS" starttime="20220704 14:17:39.626" endtime="20220704 14:17:39.895"/>
</kw>
<msg timestamp="20220704 14:17:39.895" level="INFO">${not_archived} = True</msg>
<status status="PASS" starttime="20220704 14:17:39.625" endtime="20220704 14:17:39.895"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${not_archived}</arg>
<arg>Archive Current Card</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Archive Current Card" library="CardModal">
<doc>Archives the current card from inside the modal.</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ARCHIVE_BUTTON}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 14:17:39.896" endtime="20220704 14:17:39.946"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${ARCHIVE_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 14:17:39.946" level="INFO">Clicking element '//span[@title='Archive']'.</msg>
<status status="PASS" starttime="20220704 14:17:39.946" endtime="20220704 14:17:40.027"/>
</kw>
<status status="PASS" starttime="20220704 14:17:39.896" endtime="20220704 14:17:40.027"/>
</kw>
<status status="PASS" starttime="20220704 14:17:39.896" endtime="20220704 14:17:40.027"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3</arg>
<arg>0.9</arg>
<arg>Click Element</arg>
<arg>${DELETE_BUTTON}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${DELETE_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 14:17:40.028" level="INFO">Clicking element '//a[@title='Delete']'.</msg>
<status status="PASS" starttime="20220704 14:17:40.028" endtime="20220704 14:17:40.116"/>
</kw>
<status status="PASS" starttime="20220704 14:17:40.028" endtime="20220704 14:17:40.116"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${DELETE_CONFIRM}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 14:17:40.116" level="INFO">Clicking element '//input[@value='Delete']'.</msg>
<status status="PASS" starttime="20220704 14:17:40.116" endtime="20220704 14:17:40.285"/>
</kw>
<status status="PASS" starttime="20220704 14:17:39.625" endtime="20220704 14:17:40.285"/>
</kw>
<status status="PASS" starttime="20220704 14:17:39.498" endtime="20220704 14:17:40.285"/>
</kw>
<doc>Verify that a card can be dragged from one list to another.</doc>
<tag>card.drag</tag>
<tag>gui</tag>
<tag>regression</tag>
<status status="PASS" starttime="20220704 14:17:37.532" endtime="20220704 14:17:40.285"/>
</test>
<test id="s1-s2-s1-s2-t6" name="Card Can Be Moved To Another Board" line="79">
<kw name="Create A Board" library="Board">
<var>${board2}</var>
<arg>CardTestBoard2</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 14:17:40.289" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 14:17:40.289" endtime="20220704 14:17:40.289"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 14:17:40.289" endtime="20220704 14:17:40.289"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:17:40.291" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220704 14:17:40.289" endtime="20220704 14:17:40.291"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 14:17:40.532" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:17:40.291" endtime="20220704 14:17:40.532"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:17:40.532" endtime="20220704 14:17:40.532"/>
</return>
<msg timestamp="20220704 14:17:40.533" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:17:40.288" endtime="20220704 14:17:40.533"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:17:40.533" endtime="20220704 14:17:40.533"/>
</return>
<msg timestamp="20220704 14:17:40.533" level="INFO">${board2} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:17:40.287" endtime="20220704 14:17:40.533"/>
</kw>
<kw name="Go Home" library="TrelloUpperMenu">
<doc>it goes to the gome page</doc>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${TRELLO_ICON}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220704 14:17:40.533" endtime="20220704 14:17:40.609"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${TRELLO_ICON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 14:17:40.609" level="INFO">Clicking element 'xpath://a[@aria-label='Back to home']'.</msg>
<status status="PASS" starttime="20220704 14:17:40.609" endtime="20220704 14:17:40.794"/>
</kw>
<status status="PASS" starttime="20220704 14:17:40.533" endtime="20220704 14:17:40.795"/>
</kw>
<kw name="Go To Board" library="BoardsPage">
<arg>CardTestBoard2</arg>
<doc>Receives the board name and goes to that board's page.</doc>
<kw name="Format String" library="String">
<var>${locator}</var>
<arg>${BOARD_BUTTON}</arg>
<arg>${board_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:17:40.796" level="INFO">${locator} = //div[@title="CardTestBoard2"]</msg>
<status status="PASS" starttime="20220704 14:17:40.795" endtime="20220704 14:17:40.796"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 14:17:40.796" endtime="20220704 14:17:41.024"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 14:17:41.024" level="INFO">Clicking element '//div[@title="CardTestBoard2"]'.</msg>
<status status="PASS" starttime="20220704 14:17:41.024" endtime="20220704 14:17:41.194"/>
</kw>
<status status="PASS" starttime="20220704 14:17:40.795" endtime="20220704 14:17:41.194"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>\${list}</arg>
<arg>To Do</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220704 14:17:41.195" level="INFO">${list} = To Do</msg>
<status status="PASS" starttime="20220704 14:17:41.194" endtime="20220704 14:17:41.195"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>\${card}</arg>
<arg>Test Card2</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220704 14:17:41.195" level="INFO">${card} = Test Card2</msg>
<status status="PASS" starttime="20220704 14:17:41.195" endtime="20220704 14:17:41.195"/>
</kw>
<kw name="Create Card In List" library="ListComponent">
<arg>${list}</arg>
<arg>${card}</arg>
<doc>Create a new card in the given list
Required args: list_name, card_name</doc>
<kw name="Format String" library="String">
<var>${add_card_locator}</var>
<arg>${LIST_ADD_CARD}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:17:41.196" level="INFO">${add_card_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Add a card')]</msg>
<status status="PASS" starttime="20220704 14:17:41.196" endtime="20220704 14:17:41.196"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${add_card_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 14:17:41.196" endtime="20220704 14:17:41.700"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${add_card_locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 14:17:41.701" level="INFO">Clicking element '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Add a card')]'.</msg>
<status status="PASS" starttime="20220704 14:17:41.701" endtime="20220704 14:17:41.778"/>
</kw>
<kw name="Format String" library="String">
<var>${textarea_locator}</var>
<arg>${CARD_TITLE_INPUT}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:17:41.779" level="INFO">${textarea_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//textarea[contains(@class, 'list-card-composer-textarea')]</msg>
<status status="PASS" starttime="20220704 14:17:41.778" endtime="20220704 14:17:41.779"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 14:17:41.779" endtime="20220704 14:17:41.819"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 14:17:41.820" level="INFO">Clicking element '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//textarea[contains(@class, 'list-card-composer-textarea')]'.</msg>
<status status="PASS" starttime="20220704 14:17:41.819" endtime="20220704 14:17:41.873"/>
</kw>
<kw name="Clear Element Text" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<doc>Clears the value of the text-input-element identified by ``locator``.</doc>
<status status="PASS" starttime="20220704 14:17:41.873" endtime="20220704 14:17:41.913"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<arg>${card_name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220704 14:17:41.913" level="INFO">Typing text 'Test Card2' into text field '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//textarea[contains(@class, 'list-card-composer-textarea')]'.</msg>
<status status="PASS" starttime="20220704 14:17:41.913" endtime="20220704 14:17:42.023"/>
</kw>
<kw name="Format String" library="String">
<var>${confirm_locator}</var>
<arg>${CONFIRM_ADD_CARD}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:17:42.023" level="INFO">${confirm_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//input[@value='Add card']</msg>
<status status="PASS" starttime="20220704 14:17:42.023" endtime="20220704 14:17:42.023"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${confirm_locator}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220704 14:17:42.024" level="INFO">Clicking button '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//input[@value='Add card']'.</msg>
<status status="PASS" starttime="20220704 14:17:42.024" endtime="20220704 14:17:42.132"/>
</kw>
<status status="PASS" starttime="20220704 14:17:41.195" endtime="20220704 14:17:42.132"/>
</kw>
<kw name="Go To Card Modal" library="ListComponent">
<arg>${list}</arg>
<arg>${card}</arg>
<doc>It opens the modal for card_name in list_name</doc>
<kw name="Format String" library="String">
<var>${card_name_locator}</var>
<arg>${LIST_CARD_NAME}</arg>
<arg>list_name=${list_name}</arg>
<arg>card_name=${card_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:17:42.134" level="INFO">${card_name_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Test Card2')]</msg>
<status status="PASS" starttime="20220704 14:17:42.133" endtime="20220704 14:17:42.134"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${card_name_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 14:17:42.134" endtime="20220704 14:17:42.177"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${card_name_locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 14:17:42.177" level="INFO">Clicking element '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Test Card2')]'.</msg>
<status status="PASS" starttime="20220704 14:17:42.177" endtime="20220704 14:17:42.228"/>
</kw>
<status status="PASS" starttime="20220704 14:17:42.133" endtime="20220704 14:17:42.229"/>
</kw>
<kw name="Move Card To Another Board" library="CardModal">
<arg>CardTestBoard</arg>
<doc>Moves the card using the "name of destination board"
required: name (name of the destination board)</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${MOVE_BUTTON}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 14:17:42.229" endtime="20220704 14:17:42.521"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${MOVE_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 14:17:42.521" level="INFO">Clicking element '//a[@title='Move']'.</msg>
<status status="PASS" starttime="20220704 14:17:42.521" endtime="20220704 14:17:42.594"/>
</kw>
<kw name="Select From List By Label" library="SeleniumLibrary">
<arg>${SELECT_DESTINATION}</arg>
<arg>${name_of_destination_board}</arg>
<doc>Selects options from selection list ``locator`` by ``labels``.</doc>
<msg timestamp="20220704 14:17:42.595" level="INFO">Selecting options from selection list '//select[@data-test-id='move-board-select']' by label CardTestBoard.</msg>
<status status="PASS" starttime="20220704 14:17:42.594" endtime="20220704 14:17:42.753"/>
</kw>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${ACCEPT_MOVE_BUTTON}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220704 14:17:42.754" endtime="20220704 14:17:43.039"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${ACCEPT_MOVE_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 14:17:43.039" level="INFO">Clicking element '//input[@value="Move"]'.</msg>
<status status="PASS" starttime="20220704 14:17:43.039" endtime="20220704 14:17:43.190"/>
</kw>
<kw name="Wait Until Element Is Not Visible" library="SeleniumLibrary">
<arg>${ARCHIVE_BUTTON}</arg>
<doc>Waits until the element ``locator`` is not visible.</doc>
<status status="PASS" starttime="20220704 14:17:43.190" endtime="20220704 14:17:43.206"/>
</kw>
<status status="PASS" starttime="20220704 14:17:42.229" endtime="20220704 14:17:43.206"/>
</kw>
<kw name="Get Number Of Cards In List" library="ListComponent">
<var>${Cards_On_list}</var>
<arg>To Do</arg>
<doc>Return the number of cards present in a given list.
required: list_name</doc>
<kw name="Format String" library="String">
<var>${card_anchor_locator}</var>
<arg>${CARD_ANCHORS}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:17:43.207" level="INFO">${card_anchor_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(@class, 'list-card')]</msg>
<status status="PASS" starttime="20220704 14:17:43.207" endtime="20220704 14:17:43.208"/>
</kw>
<kw name="Get Element Count" library="SeleniumLibrary">
<var>${n}</var>
<arg>${card_anchor_locator}</arg>
<doc>Returns the number of elements matching ``locator``.</doc>
<msg timestamp="20220704 14:17:43.220" level="INFO">${n} = 0</msg>
<status status="PASS" starttime="20220704 14:17:43.208" endtime="20220704 14:17:43.220"/>
</kw>
<return>
<value>${n}</value>
<status status="PASS" starttime="20220704 14:17:43.220" endtime="20220704 14:17:43.220"/>
</return>
<msg timestamp="20220704 14:17:43.220" level="INFO">${Cards_On_list} = 0</msg>
<status status="PASS" starttime="20220704 14:17:43.206" endtime="20220704 14:17:43.220"/>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<var>${0}</var>
<arg>0</arg>
<doc>Converts the given item to an integer number.</doc>
<msg timestamp="20220704 14:17:43.221" level="INFO">${0} = 0</msg>
<status status="PASS" starttime="20220704 14:17:43.221" endtime="20220704 14:17:43.221"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${Cards_On_list}</arg>
<arg>${0}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220704 14:17:43.221" endtime="20220704 14:17:43.221"/>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Close Browser</arg>
<arg>AND</arg>
<arg>Wait Until Keyword Succeeds</arg>
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${board2.json()}[id]</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20220704 14:17:43.222" endtime="20220704 14:17:43.305"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${board2.json()}[id]</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${board2.json()}[id]</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:17:43.308" level="INFO">${url} = boards/62c2f684c67ade85b67b3429</msg>
<status status="PASS" starttime="20220704 14:17:43.308" endtime="20220704 14:17:43.308"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 14:17:43.389" level="INFO">${response} = None</msg>
<msg timestamp="20220704 14:17:43.389" level="FAIL">InvalidExpectedStatus: it was expected the status 200 but the status was 429</msg>
<status status="FAIL" starttime="20220704 14:17:43.309" endtime="20220704 14:17:43.389"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:17:43.389" endtime="20220704 14:17:43.389"/>
</return>
<msg timestamp="20220704 14:17:43.390" level="INFO">${response} = None</msg>
<status status="FAIL" starttime="20220704 14:17:43.307" endtime="20220704 14:17:43.390"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:17:43.390" endtime="20220704 14:17:43.390"/>
</return>
<status status="FAIL" starttime="20220704 14:17:43.306" endtime="20220704 14:17:43.390"/>
</kw>
<kw name="Delete A Board" library="Board">
<arg>${board2.json()}[id]</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:17:45.894" level="INFO">${url} = boards/62c2f684c67ade85b67b3429</msg>
<status status="PASS" starttime="20220704 14:17:45.893" endtime="20220704 14:17:45.894"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 14:17:46.293" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:17:45.894" endtime="20220704 14:17:46.294"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:17:46.294" endtime="20220704 14:17:46.294"/>
</return>
<msg timestamp="20220704 14:17:46.294" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:17:45.893" endtime="20220704 14:17:46.294"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:17:46.294" endtime="20220704 14:17:46.294"/>
</return>
<status status="PASS" starttime="20220704 14:17:45.891" endtime="20220704 14:17:46.294"/>
</kw>
<status status="PASS" starttime="20220704 14:17:43.306" endtime="20220704 14:17:46.294"/>
</kw>
<status status="PASS" starttime="20220704 14:17:43.222" endtime="20220704 14:17:46.294"/>
</kw>
<doc>Creates a new board through API, then goes to the
second board, creates a card and moves it to the other board</doc>
<tag>card.move</tag>
<tag>gui</tag>
<tag>regression</tag>
<status status="PASS" starttime="20220704 14:17:40.286" endtime="20220704 14:17:46.294"/>
</test>
<kw name="Cards Suite Teardown" type="TEARDOWN">
<doc>Deletes the created board through API and closes all browsers.</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:17:46.298" level="INFO">${url} = boards/62c2f671a555f21c206473a1</msg>
<status status="PASS" starttime="20220704 14:17:46.297" endtime="20220704 14:17:46.298"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 14:17:46.705" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:17:46.298" endtime="20220704 14:17:46.705"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:17:46.705" endtime="20220704 14:17:46.705"/>
</return>
<msg timestamp="20220704 14:17:46.706" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:17:46.297" endtime="20220704 14:17:46.706"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:17:46.706" endtime="20220704 14:17:46.706"/>
</return>
<status status="PASS" starttime="20220704 14:17:46.297" endtime="20220704 14:17:46.706"/>
</kw>
<status status="PASS" starttime="20220704 14:17:46.296" endtime="20220704 14:17:46.706"/>
</kw>
<kw name="Delete All Sessions" library="request_own_library">
<status status="PASS" starttime="20220704 14:17:46.706" endtime="20220704 14:17:46.707"/>
</kw>
<kw name="Close All Browsers" library="SeleniumLibrary">
<doc>Closes all open browsers and resets the browser cache.</doc>
<status status="PASS" starttime="20220704 14:17:46.708" endtime="20220704 14:17:46.708"/>
</kw>
<status status="PASS" starttime="20220704 14:17:46.296" endtime="20220704 14:17:46.708"/>
</kw>
<doc>Test Cases for Cards Feature</doc>
<status status="PASS" starttime="20220704 14:17:21.337" endtime="20220704 14:17:46.708"/>
</suite>
<suite id="s1-s2-s1-s3" name="Trello Gui Labels" source="/trello/gui/trello_gui_labels.robot">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Create Trello Session</arg>
<arg>Setup Board</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Create Trello Session" library="TrelloAPI">
<doc>Creates a Trello Session</doc>
<kw name="Create Session" library="request_own_library">
<arg>${API_BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<status status="PASS" starttime="20220704 14:17:46.727" endtime="20220704 14:17:46.727"/>
</kw>
<status status="PASS" starttime="20220704 14:17:46.727" endtime="20220704 14:17:46.727"/>
</kw>
<kw name="Setup Board">
<doc>Creates a board and saves its ID</doc>
<kw name="Create A Board" library="Board">
<var>${BOARD}</var>
<arg>TestBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 14:17:46.729" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 14:17:46.728" endtime="20220704 14:17:46.729"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 14:17:46.729" endtime="20220704 14:17:46.729"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:17:46.730" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220704 14:17:46.729" endtime="20220704 14:17:46.730"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 14:17:47.008" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:17:46.730" endtime="20220704 14:17:47.008"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:17:47.008" endtime="20220704 14:17:47.008"/>
</return>
<msg timestamp="20220704 14:17:47.009" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:17:46.728" endtime="20220704 14:17:47.009"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:17:47.009" endtime="20220704 14:17:47.009"/>
</return>
<msg timestamp="20220704 14:17:47.009" level="INFO">${BOARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:17:46.728" endtime="20220704 14:17:47.009"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_BOARD_ID}</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220704 14:17:47.011" level="INFO">${TEST_SUITE_BOARD_ID} = 62c2f68a3678f387559fbf26</msg>
<status status="PASS" starttime="20220704 14:17:47.009" endtime="20220704 14:17:47.011"/>
</kw>
<status status="PASS" starttime="20220704 14:17:46.728" endtime="20220704 14:17:47.011"/>
</kw>
<status status="PASS" starttime="20220704 14:17:46.726" endtime="20220704 14:17:47.011"/>
</kw>
<test id="s1-s2-s1-s3-t1" name="filter label" line="21">
<kw name="Open Browser From Environment" library="CommonGUI">
<arg>${LOGIN_URL}</arg>
<doc>This keywords takes REMOTE and BROWSER variables
from the environment automatically and only needs a url</doc>
<if>
<branch type="IF" condition="${is_remote}">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${url}</arg>
<arg>${BROWSER}</arg>
<arg>remote_url=http://selenium-hub:4444</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20220704 14:17:47.013" level="INFO">Opening browser 'chrome' to base url 'https://trello.com/login' through remote server at 'http://selenium-hub:4444'.</msg>
<status status="PASS" starttime="20220704 14:17:47.013" endtime="20220704 14:17:48.221"/>
</kw>
<status status="PASS" starttime="20220704 14:17:47.012" endtime="20220704 14:17:48.221"/>
</branch>
<branch type="ELSE">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${url}</arg>
<arg>${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<status status="NOT RUN" starttime="20220704 14:17:48.222" endtime="20220704 14:17:48.222"/>
</kw>
<status status="NOT RUN" starttime="20220704 14:17:48.221" endtime="20220704 14:17:48.222"/>
</branch>
<status status="PASS" starttime="20220704 14:17:47.012" endtime="20220704 14:17:48.222"/>
</if>
<status status="PASS" starttime="20220704 14:17:47.012" endtime="20220704 14:17:48.222"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20220704 14:17:48.222" endtime="20220704 14:17:48.338"/>
</kw>
<kw name="Login To Trello" library="LoginPage">
<arg>${DEFAULT_EMAIL}</arg>
<arg>${DEFAULT_PASSWORD}</arg>
<doc>High-level keyword for logging in to Trello</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220704 14:17:48.348" level="INFO">${url} = https://trello.com/login</msg>
<status status="PASS" starttime="20220704 14:17:48.339" endtime="20220704 14:17:48.348"/>
</kw>
<if>
<branch type="IF" condition="'${url}' != '${LOGIN_URL}'">
<kw name="Go To" library="SeleniumLibrary">
<arg>${LOGIN_URL}</arg>
<doc>Navigates the current browser window to the provided ``url``.</doc>
<status status="NOT RUN" starttime="20220704 14:17:48.349" endtime="20220704 14:17:48.349"/>
</kw>
<status status="NOT RUN" starttime="20220704 14:17:48.349" endtime="20220704 14:17:48.349"/>
</branch>
<status status="PASS" starttime="20220704 14:17:48.348" endtime="20220704 14:17:48.349"/>
</if>
<kw name="Enter Username" library="LoginPage">
<arg>${username}</arg>
<doc>Take a username as argument and
enters it in the user_input</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${USER_INPUT}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 14:17:48.349" endtime="20220704 14:17:48.384"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${USER_INPUT}</arg>
<arg>${username}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220704 14:17:48.385" level="INFO">Typing text 'bootcamp04@mailinator.com' into text field 'css:input#user'.</msg>
<status status="PASS" starttime="20220704 14:17:48.384" endtime="20220704 14:17:48.488"/>
</kw>
<status status="PASS" starttime="20220704 14:17:48.349" endtime="20220704 14:17:48.488"/>
</kw>
<kw name="Wait Until Element Is Not Visible" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<doc>Waits until the element ``locator`` is not visible.</doc>
<status status="PASS" starttime="20220704 14:17:48.488" endtime="20220704 14:17:49.203"/>
</kw>
<kw name="Click Login Button" library="LoginPage">
<doc>Clicks Trello's login button if in Trello's
login page, else it clicks Atlassian's</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220704 14:17:49.220" level="INFO">${url} = https://trello.com/login</msg>
<status status="PASS" starttime="20220704 14:17:49.204" endtime="20220704 14:17:49.220"/>
</kw>
<if>
<branch type="IF" condition="'${url}' == '${LOGIN_URL}'">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220704 14:17:49.221" endtime="20220704 14:17:49.292"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220704 14:17:49.293" level="INFO">Clicking button 'css:input#login'.</msg>
<status status="PASS" starttime="20220704 14:17:49.292" endtime="20220704 14:17:50.345"/>
</kw>
<status status="PASS" starttime="20220704 14:17:49.221" endtime="20220704 14:17:50.345"/>
</branch>
<branch type="ELSE">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="NOT RUN" starttime="20220704 14:17:50.345" endtime="20220704 14:17:50.345"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<status status="NOT RUN" starttime="20220704 14:17:50.345" endtime="20220704 14:17:50.345"/>
</kw>
<status status="NOT RUN" starttime="20220704 14:17:50.345" endtime="20220704 14:17:50.346"/>
</branch>
<status status="PASS" starttime="20220704 14:17:49.220" endtime="20220704 14:17:50.346"/>
</if>
<status status="PASS" starttime="20220704 14:17:49.204" endtime="20220704 14:17:50.346"/>
</kw>
<kw name="Wait Until Location Is Atlassian's Login" library="LoginPage">
<doc>Waits for the page redirection when logging in.</doc>
<kw name="Wait Until Location Contains" library="SeleniumLibrary">
<arg>atlassian.com</arg>
<doc>Waits until the current URL contains ``expected``.</doc>
<status status="PASS" starttime="20220704 14:17:50.346" endtime="20220704 14:17:50.365"/>
</kw>
<status status="PASS" starttime="20220704 14:17:50.346" endtime="20220704 14:17:50.365"/>
</kw>
<kw name="Enter Password" library="LoginPage">
<arg>${password}</arg>
<doc>Take a password as argument and
enters it in the password_input</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<arg>timeout=10</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 14:17:50.366" endtime="20220704 14:17:50.419"/>
</kw>
<kw name="Input Password" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<arg>${password}</arg>
<doc>Types the given password into the text field identified by ``locator``.</doc>
<msg timestamp="20220704 14:17:50.420" level="INFO">Typing password into text field 'css:input#password'.</msg>
<msg timestamp="20220704 14:17:50.506" level="INFO">Temporally setting log level to: NONE</msg>
<msg timestamp="20220704 14:17:50.582" level="INFO">Log level changed from NONE to INFO.</msg>
<status status="PASS" starttime="20220704 14:17:50.419" endtime="20220704 14:17:50.582"/>
</kw>
<status status="PASS" starttime="20220704 14:17:50.365" endtime="20220704 14:17:50.582"/>
</kw>
<kw name="Click Login Button" library="LoginPage">
<doc>Clicks Trello's login button if in Trello's
login page, else it clicks Atlassian's</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220704 14:17:50.591" level="INFO">${url} = https://id.atlassian.com/login?application=trello&amp;continue=https%3A%2F%2Ftrello.com%2Fauth%2Fatlassian%2Fcallback%3FreturnUrl%3D%252F%26display%3D%26aaOnboarding%3D%26updateEmail%3D%26traceId%3D62c2f6...</msg>
<status status="PASS" starttime="20220704 14:17:50.583" endtime="20220704 14:17:50.591"/>
</kw>
<if>
<branch type="IF" condition="'${url}' == '${LOGIN_URL}'">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="NOT RUN" starttime="20220704 14:17:50.592" endtime="20220704 14:17:50.592"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<status status="NOT RUN" starttime="20220704 14:17:50.592" endtime="20220704 14:17:50.592"/>
</kw>
<status status="NOT RUN" starttime="20220704 14:17:50.592" endtime="20220704 14:17:50.592"/>
</branch>
<branch type="ELSE">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220704 14:17:50.592" endtime="20220704 14:17:50.648"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220704 14:17:50.649" level="INFO">Clicking button 'css:button#login-submit'.</msg>
<status status="PASS" starttime="20220704 14:17:50.648" endtime="20220704 14:17:50.754"/>
</kw>
<status status="PASS" starttime="20220704 14:17:50.592" endtime="20220704 14:17:50.754"/>
</branch>
<status status="PASS" starttime="20220704 14:17:50.592" endtime="20220704 14:17:50.754"/>
</if>
<status status="PASS" starttime="20220704 14:17:50.582" endtime="20220704 14:17:50.754"/>
</kw>
<status status="PASS" starttime="20220704 14:17:48.338" endtime="20220704 14:17:50.754"/>
</kw>
<kw name="Go To Board" library="BoardsPage">
<arg>TestBoard</arg>
<doc>Receives the board name and goes to that board's page.</doc>
<kw name="Format String" library="String">
<var>${locator}</var>
<arg>${BOARD_BUTTON}</arg>
<arg>${board_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:17:50.755" level="INFO">${locator} = //div[@title="TestBoard"]</msg>
<status status="PASS" starttime="20220704 14:17:50.755" endtime="20220704 14:17:50.755"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 14:17:50.755" endtime="20220704 14:17:54.452"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 14:17:54.453" level="INFO">Clicking element '//div[@title="TestBoard"]'.</msg>
<status status="PASS" starttime="20220704 14:17:54.452" endtime="20220704 14:17:54.811"/>
</kw>
<status status="PASS" starttime="20220704 14:17:50.754" endtime="20220704 14:17:54.811"/>
</kw>
<kw name="Create Card In List" library="ListComponent">
<arg>To Do</arg>
<arg>card1</arg>
<doc>Create a new card in the given list
Required args: list_name, card_name</doc>
<kw name="Format String" library="String">
<var>${add_card_locator}</var>
<arg>${LIST_ADD_CARD}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:17:54.812" level="INFO">${add_card_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Add a card')]</msg>
<status status="PASS" starttime="20220704 14:17:54.811" endtime="20220704 14:17:54.812"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${add_card_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 14:17:54.812" endtime="20220704 14:17:55.346"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${add_card_locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 14:17:55.347" level="INFO">Clicking element '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Add a card')]'.</msg>
<status status="PASS" starttime="20220704 14:17:55.347" endtime="20220704 14:17:55.447"/>
</kw>
<kw name="Format String" library="String">
<var>${textarea_locator}</var>
<arg>${CARD_TITLE_INPUT}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:17:55.448" level="INFO">${textarea_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//textarea[contains(@class, 'list-card-composer-textarea')]</msg>
<status status="PASS" starttime="20220704 14:17:55.447" endtime="20220704 14:17:55.448"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 14:17:55.448" endtime="20220704 14:17:55.533"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 14:17:55.534" level="INFO">Clicking element '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//textarea[contains(@class, 'list-card-composer-textarea')]'.</msg>
<status status="PASS" starttime="20220704 14:17:55.534" endtime="20220704 14:17:55.589"/>
</kw>
<kw name="Clear Element Text" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<doc>Clears the value of the text-input-element identified by ``locator``.</doc>
<status status="PASS" starttime="20220704 14:17:55.590" endtime="20220704 14:17:55.635"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<arg>${card_name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220704 14:17:55.636" level="INFO">Typing text 'card1' into text field '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//textarea[contains(@class, 'list-card-composer-textarea')]'.</msg>
<status status="PASS" starttime="20220704 14:17:55.636" endtime="20220704 14:17:55.787"/>
</kw>
<kw name="Format String" library="String">
<var>${confirm_locator}</var>
<arg>${CONFIRM_ADD_CARD}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:17:55.788" level="INFO">${confirm_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//input[@value='Add card']</msg>
<status status="PASS" starttime="20220704 14:17:55.788" endtime="20220704 14:17:55.788"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${confirm_locator}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220704 14:17:55.789" level="INFO">Clicking button '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//input[@value='Add card']'.</msg>
<status status="PASS" starttime="20220704 14:17:55.788" endtime="20220704 14:17:55.866"/>
</kw>
<status status="PASS" starttime="20220704 14:17:54.811" endtime="20220704 14:17:55.867"/>
</kw>
<kw name="Click pencil menu" library="ListComponent">
<arg>To Do</arg>
<arg>card1</arg>
<doc>Adds a label to an specific card</doc>
<kw name="Format String" library="String">
<var>${card_element}</var>
<arg>${LIST_CARD_NAME}</arg>
<arg>list_name=${list_name}</arg>
<arg>card_name=${card_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:17:55.868" level="INFO">${card_element} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'card1')]</msg>
<status status="PASS" starttime="20220704 14:17:55.867" endtime="20220704 14:17:55.868"/>
</kw>
<kw name="Format String" library="String">
<var>${pencil_locator}</var>
<arg>${PENCIL_ICON}</arg>
<arg>list_name=${list_name}</arg>
<arg>card_name=${card_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:17:55.868" level="INFO">${pencil_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'card1')]//span[contains(@class, 'icon-edit')]</msg>
<status status="PASS" starttime="20220704 14:17:55.868" endtime="20220704 14:17:55.868"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${card_element}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 14:17:55.868" endtime="20220704 14:17:55.931"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20220704 14:18:00.931" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20220704 14:17:55.931" endtime="20220704 14:18:00.932"/>
</kw>
<kw name="Mouse Over" library="SeleniumLibrary">
<arg>${card_element}</arg>
<doc>Simulates hovering the mouse over the element ``locator``.</doc>
<msg timestamp="20220704 14:18:00.932" level="INFO">Simulating Mouse Over on element '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'card1')]'.</msg>
<status status="PASS" starttime="20220704 14:18:00.932" endtime="20220704 14:18:01.225"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20220704 14:18:06.226" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20220704 14:18:01.225" endtime="20220704 14:18:06.226"/>
</kw>
<kw name="Wait Until Page Contains Element" library="SeleniumLibrary">
<arg>${pencil_locator}</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" starttime="20220704 14:18:06.226" endtime="20220704 14:18:06.243"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${pencil_locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 14:18:06.244" level="INFO">Clicking element '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'card1')]//span[contains(@class, 'icon-edit')]'.</msg>
<status status="PASS" starttime="20220704 14:18:06.244" endtime="20220704 14:18:06.335"/>
</kw>
<status status="PASS" starttime="20220704 14:17:55.867" endtime="20220704 14:18:06.335"/>
</kw>
<kw name="Add Color Label In Card" library="CardModal">
<arg>yellow</arg>
<doc>add label of a given color to a list</doc>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${EDIT_LABEL}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220704 14:18:06.336" endtime="20220704 14:18:06.383"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${EDIT_LABEL}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 14:18:06.384" level="INFO">Clicking element '//a[contains(@class,'js-edit-labels')]'.</msg>
<status status="PASS" starttime="20220704 14:18:06.384" endtime="20220704 14:18:06.474"/>
</kw>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LABEL_INPUT}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220704 14:18:06.474" endtime="20220704 14:18:06.541"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${LABEL_INPUT}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 14:18:06.542" level="INFO">Clicking element '//input[contains(@class,"js-autofocus")]'.</msg>
<status status="PASS" starttime="20220704 14:18:06.542" endtime="20220704 14:18:06.599"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${LABEL_INPUT}</arg>
<arg>${color}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220704 14:18:06.600" level="INFO">Typing text 'yellow' into text field '//input[contains(@class,"js-autofocus")]'.</msg>
<status status="PASS" starttime="20220704 14:18:06.599" endtime="20220704 14:18:06.685"/>
</kw>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LABEL_INPUT}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220704 14:18:06.685" endtime="20220704 14:18:06.742"/>
</kw>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>${LABEL_INPUT}</arg>
<arg>RETURN</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20220704 14:18:06.742" level="INFO">Sending key(s) ('RETURN',) to //input[contains(@class,"js-autofocus")] element.</msg>
<msg timestamp="20220704 14:18:07.040" level="INFO">Pressing special key RETURN to element.</msg>
<msg timestamp="20220704 14:18:07.040" level="INFO">Releasing special key RETURN.</msg>
<status status="PASS" starttime="20220704 14:18:06.742" endtime="20220704 14:18:07.079"/>
</kw>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>None</arg>
<arg>ESCAPE</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20220704 14:18:07.080" level="INFO">Sending key(s) ('ESCAPE',) to page.</msg>
<msg timestamp="20220704 14:18:07.080" level="INFO">Pressing special key ESCAPE to browser.</msg>
<msg timestamp="20220704 14:18:07.080" level="INFO">Releasing special key ESCAPE.</msg>
<status status="PASS" starttime="20220704 14:18:07.079" endtime="20220704 14:18:07.095"/>
</kw>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>None</arg>
<arg>ESCAPE</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20220704 14:18:07.096" level="INFO">Sending key(s) ('ESCAPE',) to page.</msg>
<msg timestamp="20220704 14:18:07.096" level="INFO">Pressing special key ESCAPE to browser.</msg>
<msg timestamp="20220704 14:18:07.096" level="INFO">Releasing special key ESCAPE.</msg>
<status status="PASS" starttime="20220704 14:18:07.095" endtime="20220704 14:18:07.122"/>
</kw>
<status status="PASS" starttime="20220704 14:18:06.336" endtime="20220704 14:18:07.122"/>
</kw>
<kw name="Create Card In List" library="ListComponent">
<arg>Doing</arg>
<arg>card2</arg>
<doc>Create a new card in the given list
Required args: list_name, card_name</doc>
<kw name="Format String" library="String">
<var>${add_card_locator}</var>
<arg>${LIST_ADD_CARD}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:18:07.123" level="INFO">${add_card_locator} = //h2[text()='Doing']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Add a card')]</msg>
<status status="PASS" starttime="20220704 14:18:07.123" endtime="20220704 14:18:07.123"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${add_card_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 14:18:07.123" endtime="20220704 14:18:07.165"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${add_card_locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 14:18:07.166" level="INFO">Clicking element '//h2[text()='Doing']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Add a card')]'.</msg>
<status status="PASS" starttime="20220704 14:18:07.166" endtime="20220704 14:18:07.233"/>
</kw>
<kw name="Format String" library="String">
<var>${textarea_locator}</var>
<arg>${CARD_TITLE_INPUT}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:18:07.233" level="INFO">${textarea_locator} = //h2[text()='Doing']//ancestor::div[contains(@class, 'list-content')]//textarea[contains(@class, 'list-card-composer-textarea')]</msg>
<status status="PASS" starttime="20220704 14:18:07.233" endtime="20220704 14:18:07.233"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 14:18:07.234" endtime="20220704 14:18:07.275"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 14:18:07.275" level="INFO">Clicking element '//h2[text()='Doing']//ancestor::div[contains(@class, 'list-content')]//textarea[contains(@class, 'list-card-composer-textarea')]'.</msg>
<status status="PASS" starttime="20220704 14:18:07.275" endtime="20220704 14:18:07.340"/>
</kw>
<kw name="Clear Element Text" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<doc>Clears the value of the text-input-element identified by ``locator``.</doc>
<status status="PASS" starttime="20220704 14:18:07.340" endtime="20220704 14:18:07.374"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<arg>${card_name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220704 14:18:07.375" level="INFO">Typing text 'card2' into text field '//h2[text()='Doing']//ancestor::div[contains(@class, 'list-content')]//textarea[contains(@class, 'list-card-composer-textarea')]'.</msg>
<status status="PASS" starttime="20220704 14:18:07.374" endtime="20220704 14:18:07.444"/>
</kw>
<kw name="Format String" library="String">
<var>${confirm_locator}</var>
<arg>${CONFIRM_ADD_CARD}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:18:07.445" level="INFO">${confirm_locator} = //h2[text()='Doing']//ancestor::div[contains(@class, 'list-content')]//input[@value='Add card']</msg>
<status status="PASS" starttime="20220704 14:18:07.444" endtime="20220704 14:18:07.445"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${confirm_locator}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220704 14:18:07.445" level="INFO">Clicking button '//h2[text()='Doing']//ancestor::div[contains(@class, 'list-content')]//input[@value='Add card']'.</msg>
<status status="PASS" starttime="20220704 14:18:07.445" endtime="20220704 14:18:07.508"/>
</kw>
<status status="PASS" starttime="20220704 14:18:07.122" endtime="20220704 14:18:07.509"/>
</kw>
<kw name="Create Card In List" library="ListComponent">
<arg>Done</arg>
<arg>card3</arg>
<doc>Create a new card in the given list
Required args: list_name, card_name</doc>
<kw name="Format String" library="String">
<var>${add_card_locator}</var>
<arg>${LIST_ADD_CARD}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:18:07.510" level="INFO">${add_card_locator} = //h2[text()='Done']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Add a card')]</msg>
<status status="PASS" starttime="20220704 14:18:07.509" endtime="20220704 14:18:07.510"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${add_card_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 14:18:07.510" endtime="20220704 14:18:07.557"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${add_card_locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 14:18:07.558" level="INFO">Clicking element '//h2[text()='Done']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Add a card')]'.</msg>
<status status="PASS" starttime="20220704 14:18:07.557" endtime="20220704 14:18:07.614"/>
</kw>
<kw name="Format String" library="String">
<var>${textarea_locator}</var>
<arg>${CARD_TITLE_INPUT}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:18:07.615" level="INFO">${textarea_locator} = //h2[text()='Done']//ancestor::div[contains(@class, 'list-content')]//textarea[contains(@class, 'list-card-composer-textarea')]</msg>
<status status="PASS" starttime="20220704 14:18:07.615" endtime="20220704 14:18:07.615"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 14:18:07.615" endtime="20220704 14:18:07.649"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 14:18:07.649" level="INFO">Clicking element '//h2[text()='Done']//ancestor::div[contains(@class, 'list-content')]//textarea[contains(@class, 'list-card-composer-textarea')]'.</msg>
<status status="PASS" starttime="20220704 14:18:07.649" endtime="20220704 14:18:07.698"/>
</kw>
<kw name="Clear Element Text" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<doc>Clears the value of the text-input-element identified by ``locator``.</doc>
<status status="PASS" starttime="20220704 14:18:07.698" endtime="20220704 14:18:07.782"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<arg>${card_name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220704 14:18:07.783" level="INFO">Typing text 'card3' into text field '//h2[text()='Done']//ancestor::div[contains(@class, 'list-content')]//textarea[contains(@class, 'list-card-composer-textarea')]'.</msg>
<status status="PASS" starttime="20220704 14:18:07.783" endtime="20220704 14:18:07.864"/>
</kw>
<kw name="Format String" library="String">
<var>${confirm_locator}</var>
<arg>${CONFIRM_ADD_CARD}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:18:07.865" level="INFO">${confirm_locator} = //h2[text()='Done']//ancestor::div[contains(@class, 'list-content')]//input[@value='Add card']</msg>
<status status="PASS" starttime="20220704 14:18:07.864" endtime="20220704 14:18:07.865"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${confirm_locator}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220704 14:18:07.865" level="INFO">Clicking button '//h2[text()='Done']//ancestor::div[contains(@class, 'list-content')]//input[@value='Add card']'.</msg>
<status status="PASS" starttime="20220704 14:18:07.865" endtime="20220704 14:18:07.963"/>
</kw>
<status status="PASS" starttime="20220704 14:18:07.509" endtime="20220704 14:18:07.964"/>
</kw>
<kw name="Enter To Filter Menu" library="TopBar">
<doc>accesing to the filter menu</doc>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${FILTER_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 14:18:07.964" level="INFO">Clicking element 'xpath://button[@data-test-id='filter-popover-button']'.</msg>
<status status="PASS" starttime="20220704 14:18:07.964" endtime="20220704 14:18:08.067"/>
</kw>
<status status="PASS" starttime="20220704 14:18:07.964" endtime="20220704 14:18:08.067"/>
</kw>
<kw name="Click no labels filter" library="FilterModal">
<doc>filters all cards with labes</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${NO_LABELS_FILTER}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 14:18:08.068" endtime="20220704 14:18:08.212"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${NO_LABELS_FILTER}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 14:18:08.212" level="INFO">Clicking element '//span[@aria-label='LabelIcon']'.</msg>
<status status="PASS" starttime="20220704 14:18:08.212" endtime="20220704 14:18:08.357"/>
</kw>
<status status="PASS" starttime="20220704 14:18:08.067" endtime="20220704 14:18:08.357"/>
</kw>
<kw name="Card Should Not Be In List" library="ListComponent">
<arg>card1</arg>
<arg>To Do</arg>
<doc>Check that a card is visible and in the given list
required: card_name, list_name</doc>
<kw name="Format String" library="String">
<var>${card_locator}</var>
<arg>${LIST_CARD_NAME}</arg>
<arg>list_name=${list_name}</arg>
<arg>card_name=${card_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:18:08.358" level="INFO">${card_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'card1')]</msg>
<status status="PASS" starttime="20220704 14:18:08.358" endtime="20220704 14:18:08.358"/>
</kw>
<kw name="Element Should Not Be Visible" library="SeleniumLibrary">
<arg>${card_locator}</arg>
<doc>Verifies that the element identified by ``locator`` is NOT visible.</doc>
<msg timestamp="20220704 14:18:08.442" level="INFO">Element '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'card1')]' exists but is not displayed.</msg>
<status status="PASS" starttime="20220704 14:18:08.358" endtime="20220704 14:18:08.442"/>
</kw>
<status status="PASS" starttime="20220704 14:18:08.357" endtime="20220704 14:18:08.442"/>
</kw>
<kw name="Click no labels filter" library="FilterModal">
<doc>filters all cards with labes</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${NO_LABELS_FILTER}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 14:18:08.443" endtime="20220704 14:18:08.473"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${NO_LABELS_FILTER}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 14:18:08.474" level="INFO">Clicking element '//span[@aria-label='LabelIcon']'.</msg>
<status status="PASS" starttime="20220704 14:18:08.473" endtime="20220704 14:18:08.594"/>
</kw>
<status status="PASS" starttime="20220704 14:18:08.443" endtime="20220704 14:18:08.594"/>
</kw>
<kw name="Card Should Be In List" library="ListComponent">
<arg>card1</arg>
<arg>To Do</arg>
<doc>Check that a card is visible and in the given list
required: card_name, list_name</doc>
<kw name="Format String" library="String">
<var>${card_locator}</var>
<arg>${LIST_CARD_NAME}</arg>
<arg>list_name=${list_name}</arg>
<arg>card_name=${card_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:18:08.596" level="INFO">${card_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'card1')]</msg>
<status status="PASS" starttime="20220704 14:18:08.595" endtime="20220704 14:18:08.596"/>
</kw>
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<arg>${card_locator}</arg>
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<msg timestamp="20220704 14:18:08.623" level="INFO">Element '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'card1')]' is displayed.</msg>
<status status="PASS" starttime="20220704 14:18:08.596" endtime="20220704 14:18:08.624"/>
</kw>
<status status="PASS" starttime="20220704 14:18:08.595" endtime="20220704 14:18:08.624"/>
</kw>
<kw name="Close Browser" library="SeleniumLibrary" type="TEARDOWN">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20220704 14:18:08.624" endtime="20220704 14:18:08.725"/>
</kw>
<doc>check filter card by label function</doc>
<tag>gui</tag>
<tag>list.create</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220704 14:17:47.011" endtime="20220704 14:18:08.725"/>
</test>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Teardown Board</arg>
<arg>Delete All Sessions</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Teardown Board">
<doc>Deletes used board for teardown</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:18:08.728" level="INFO">${url} = boards/62c2f68a3678f387559fbf26</msg>
<status status="PASS" starttime="20220704 14:18:08.728" endtime="20220704 14:18:08.728"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 14:18:09.128" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:18:08.728" endtime="20220704 14:18:09.128"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:18:09.128" endtime="20220704 14:18:09.128"/>
</return>
<msg timestamp="20220704 14:18:09.128" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:18:08.727" endtime="20220704 14:18:09.128"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:18:09.128" endtime="20220704 14:18:09.128"/>
</return>
<status status="PASS" starttime="20220704 14:18:08.727" endtime="20220704 14:18:09.129"/>
</kw>
<status status="PASS" starttime="20220704 14:18:08.727" endtime="20220704 14:18:09.129"/>
</kw>
<status status="PASS" starttime="20220704 14:18:08.727" endtime="20220704 14:18:09.129"/>
</kw>
<kw name="Delete All Sessions" library="request_own_library">
<status status="PASS" starttime="20220704 14:18:09.129" endtime="20220704 14:18:09.130"/>
</kw>
<status status="PASS" starttime="20220704 14:18:08.726" endtime="20220704 14:18:09.130"/>
</kw>
<doc>Label Tests</doc>
<status status="PASS" starttime="20220704 14:17:46.711" endtime="20220704 14:18:09.131"/>
</suite>
<suite id="s1-s2-s1-s4" name="Trello Gui Lists" source="/trello/gui/trello_gui_lists.robot">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Create Trello Session</arg>
<arg>Setup Board</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Create Trello Session" library="TrelloAPI">
<doc>Creates a Trello Session</doc>
<kw name="Create Session" library="request_own_library">
<arg>${API_BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<status status="PASS" starttime="20220704 14:18:09.145" endtime="20220704 14:18:09.145"/>
</kw>
<status status="PASS" starttime="20220704 14:18:09.145" endtime="20220704 14:18:09.145"/>
</kw>
<kw name="Setup Board">
<doc>Creates a board and saves its ID</doc>
<kw name="Create A Board" library="Board">
<var>${BOARD}</var>
<arg>TestBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 14:18:09.146" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 14:18:09.146" endtime="20220704 14:18:09.146"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 14:18:09.146" endtime="20220704 14:18:09.147"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:18:09.148" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220704 14:18:09.147" endtime="20220704 14:18:09.148"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 14:18:09.446" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:18:09.148" endtime="20220704 14:18:09.446"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:18:09.446" endtime="20220704 14:18:09.446"/>
</return>
<msg timestamp="20220704 14:18:09.446" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:18:09.146" endtime="20220704 14:18:09.446"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:18:09.446" endtime="20220704 14:18:09.446"/>
</return>
<msg timestamp="20220704 14:18:09.447" level="INFO">${BOARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:18:09.145" endtime="20220704 14:18:09.447"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_BOARD_ID}</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220704 14:18:09.448" level="INFO">${TEST_SUITE_BOARD_ID} = 62c2f6a174cc565f228b1b71</msg>
<status status="PASS" starttime="20220704 14:18:09.447" endtime="20220704 14:18:09.448"/>
</kw>
<status status="PASS" starttime="20220704 14:18:09.145" endtime="20220704 14:18:09.448"/>
</kw>
<status status="PASS" starttime="20220704 14:18:09.144" endtime="20220704 14:18:09.448"/>
</kw>
<test id="s1-s2-s1-s4-t1" name="create list" line="18">
<kw name="Open Browser From Environment" library="CommonGUI">
<arg>${LOGIN_URL}</arg>
<doc>This keywords takes REMOTE and BROWSER variables
from the environment automatically and only needs a url</doc>
<if>
<branch type="IF" condition="${is_remote}">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${url}</arg>
<arg>${BROWSER}</arg>
<arg>remote_url=http://selenium-hub:4444</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20220704 14:18:09.450" level="INFO">Opening browser 'chrome' to base url 'https://trello.com/login' through remote server at 'http://selenium-hub:4444'.</msg>
<status status="PASS" starttime="20220704 14:18:09.450" endtime="20220704 14:18:10.536"/>
</kw>
<status status="PASS" starttime="20220704 14:18:09.450" endtime="20220704 14:18:10.536"/>
</branch>
<branch type="ELSE">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${url}</arg>
<arg>${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<status status="NOT RUN" starttime="20220704 14:18:10.536" endtime="20220704 14:18:10.536"/>
</kw>
<status status="NOT RUN" starttime="20220704 14:18:10.536" endtime="20220704 14:18:10.536"/>
</branch>
<status status="PASS" starttime="20220704 14:18:09.450" endtime="20220704 14:18:10.536"/>
</if>
<status status="PASS" starttime="20220704 14:18:09.449" endtime="20220704 14:18:10.536"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20220704 14:18:10.537" endtime="20220704 14:18:10.648"/>
</kw>
<kw name="Login To Trello" library="LoginPage">
<arg>${DEFAULT_EMAIL}</arg>
<arg>${DEFAULT_PASSWORD}</arg>
<doc>High-level keyword for logging in to Trello</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220704 14:18:10.657" level="INFO">${url} = https://trello.com/login</msg>
<status status="PASS" starttime="20220704 14:18:10.649" endtime="20220704 14:18:10.657"/>
</kw>
<if>
<branch type="IF" condition="'${url}' != '${LOGIN_URL}'">
<kw name="Go To" library="SeleniumLibrary">
<arg>${LOGIN_URL}</arg>
<doc>Navigates the current browser window to the provided ``url``.</doc>
<status status="NOT RUN" starttime="20220704 14:18:10.658" endtime="20220704 14:18:10.658"/>
</kw>
<status status="NOT RUN" starttime="20220704 14:18:10.657" endtime="20220704 14:18:10.658"/>
</branch>
<status status="PASS" starttime="20220704 14:18:10.657" endtime="20220704 14:18:10.658"/>
</if>
<kw name="Enter Username" library="LoginPage">
<arg>${username}</arg>
<doc>Take a username as argument and
enters it in the user_input</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${USER_INPUT}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 14:18:10.658" endtime="20220704 14:18:10.692"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${USER_INPUT}</arg>
<arg>${username}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220704 14:18:10.693" level="INFO">Typing text 'bootcamp04@mailinator.com' into text field 'css:input#user'.</msg>
<status status="PASS" starttime="20220704 14:18:10.693" endtime="20220704 14:18:10.825"/>
</kw>
<status status="PASS" starttime="20220704 14:18:10.658" endtime="20220704 14:18:10.826"/>
</kw>
<kw name="Wait Until Element Is Not Visible" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<doc>Waits until the element ``locator`` is not visible.</doc>
<status status="PASS" starttime="20220704 14:18:10.826" endtime="20220704 14:18:11.545"/>
</kw>
<kw name="Click Login Button" library="LoginPage">
<doc>Clicks Trello's login button if in Trello's
login page, else it clicks Atlassian's</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220704 14:18:11.556" level="INFO">${url} = https://trello.com/login</msg>
<status status="PASS" starttime="20220704 14:18:11.545" endtime="20220704 14:18:11.556"/>
</kw>
<if>
<branch type="IF" condition="'${url}' == '${LOGIN_URL}'">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220704 14:18:11.556" endtime="20220704 14:18:11.596"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220704 14:18:11.596" level="INFO">Clicking button 'css:input#login'.</msg>
<status status="PASS" starttime="20220704 14:18:11.596" endtime="20220704 14:18:12.671"/>
</kw>
<status status="PASS" starttime="20220704 14:18:11.556" endtime="20220704 14:18:12.671"/>
</branch>
<branch type="ELSE">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="NOT RUN" starttime="20220704 14:18:12.671" endtime="20220704 14:18:12.671"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<status status="NOT RUN" starttime="20220704 14:18:12.671" endtime="20220704 14:18:12.671"/>
</kw>
<status status="NOT RUN" starttime="20220704 14:18:12.671" endtime="20220704 14:18:12.671"/>
</branch>
<status status="PASS" starttime="20220704 14:18:11.556" endtime="20220704 14:18:12.671"/>
</if>
<status status="PASS" starttime="20220704 14:18:11.545" endtime="20220704 14:18:12.671"/>
</kw>
<kw name="Wait Until Location Is Atlassian's Login" library="LoginPage">
<doc>Waits for the page redirection when logging in.</doc>
<kw name="Wait Until Location Contains" library="SeleniumLibrary">
<arg>atlassian.com</arg>
<doc>Waits until the current URL contains ``expected``.</doc>
<status status="PASS" starttime="20220704 14:18:12.672" endtime="20220704 14:18:12.686"/>
</kw>
<status status="PASS" starttime="20220704 14:18:12.671" endtime="20220704 14:18:12.686"/>
</kw>
<kw name="Enter Password" library="LoginPage">
<arg>${password}</arg>
<doc>Take a password as argument and
enters it in the password_input</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<arg>timeout=10</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 14:18:12.687" endtime="20220704 14:18:12.749"/>
</kw>
<kw name="Input Password" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<arg>${password}</arg>
<doc>Types the given password into the text field identified by ``locator``.</doc>
<msg timestamp="20220704 14:18:12.749" level="INFO">Typing password into text field 'css:input#password'.</msg>
<msg timestamp="20220704 14:18:12.790" level="INFO">Temporally setting log level to: NONE</msg>
<msg timestamp="20220704 14:18:12.852" level="INFO">Log level changed from NONE to INFO.</msg>
<status status="PASS" starttime="20220704 14:18:12.749" endtime="20220704 14:18:12.852"/>
</kw>
<status status="PASS" starttime="20220704 14:18:12.686" endtime="20220704 14:18:12.852"/>
</kw>
<kw name="Click Login Button" library="LoginPage">
<doc>Clicks Trello's login button if in Trello's
login page, else it clicks Atlassian's</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220704 14:18:12.861" level="INFO">${url} = https://id.atlassian.com/login?application=trello&amp;continue=https%3A%2F%2Ftrello.com%2Fauth%2Fatlassian%2Fcallback%3FreturnUrl%3D%252F%26display%3D%26aaOnboarding%3D%26updateEmail%3D%26traceId%3D62c2f6...</msg>
<status status="PASS" starttime="20220704 14:18:12.853" endtime="20220704 14:18:12.861"/>
</kw>
<if>
<branch type="IF" condition="'${url}' == '${LOGIN_URL}'">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="NOT RUN" starttime="20220704 14:18:12.861" endtime="20220704 14:18:12.861"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<status status="NOT RUN" starttime="20220704 14:18:12.861" endtime="20220704 14:18:12.861"/>
</kw>
<status status="NOT RUN" starttime="20220704 14:18:12.861" endtime="20220704 14:18:12.861"/>
</branch>
<branch type="ELSE">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220704 14:18:12.861" endtime="20220704 14:18:12.908"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220704 14:18:12.908" level="INFO">Clicking button 'css:button#login-submit'.</msg>
<status status="PASS" starttime="20220704 14:18:12.908" endtime="20220704 14:18:13.008"/>
</kw>
<status status="PASS" starttime="20220704 14:18:12.861" endtime="20220704 14:18:13.008"/>
</branch>
<status status="PASS" starttime="20220704 14:18:12.861" endtime="20220704 14:18:13.008"/>
</if>
<status status="PASS" starttime="20220704 14:18:12.852" endtime="20220704 14:18:13.009"/>
</kw>
<status status="PASS" starttime="20220704 14:18:10.648" endtime="20220704 14:18:13.009"/>
</kw>
<kw name="Go To Board" library="BoardsPage">
<arg>TestBoard</arg>
<doc>Receives the board name and goes to that board's page.</doc>
<kw name="Format String" library="String">
<var>${locator}</var>
<arg>${BOARD_BUTTON}</arg>
<arg>${board_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:18:13.010" level="INFO">${locator} = //div[@title="TestBoard"]</msg>
<status status="PASS" starttime="20220704 14:18:13.009" endtime="20220704 14:18:13.010"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 14:18:13.010" endtime="20220704 14:18:16.562"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 14:18:16.562" level="INFO">Clicking element '//div[@title="TestBoard"]'.</msg>
<status status="PASS" starttime="20220704 14:18:16.562" endtime="20220704 14:18:16.932"/>
</kw>
<status status="PASS" starttime="20220704 14:18:13.009" endtime="20220704 14:18:16.933"/>
</kw>
<kw name="Create new list with the name" library="ListComponent">
<arg>NEW_TEST_LIST</arg>
<doc>Create a new list with the given name</doc>
<kw name="Wait Until Page Contains Element" library="SeleniumLibrary">
<arg>${ADD_LIST_BUTTON}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" starttime="20220704 14:18:16.933" endtime="20220704 14:18:17.434"/>
</kw>
<kw name="Click Link" library="SeleniumLibrary">
<arg>${ADD_LIST_BUTTON}</arg>
<doc>Clicks a link identified by ``locator``.</doc>
<msg timestamp="20220704 14:18:17.435" level="INFO">Clicking link 'xpath://a[contains(@Class, 'open-add-list')]'.</msg>
<status status="PASS" starttime="20220704 14:18:17.434" endtime="20220704 14:18:17.587"/>
</kw>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LIST_NAME_INPUT}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220704 14:18:17.587" endtime="20220704 14:18:17.658"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${LIST_NAME_INPUT}</arg>
<arg>${list_name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220704 14:18:17.659" level="INFO">Typing text 'NEW_TEST_LIST' into text field 'xpath://input[@class="list-name-input"]'.</msg>
<status status="PASS" starttime="20220704 14:18:17.658" endtime="20220704 14:18:17.763"/>
</kw>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>${LIST_NAME_INPUT}</arg>
<arg>RETURN</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20220704 14:18:17.763" level="INFO">Sending key(s) ('RETURN',) to xpath://input[@class="list-name-input"] element.</msg>
<msg timestamp="20220704 14:18:18.092" level="INFO">Pressing special key RETURN to element.</msg>
<msg timestamp="20220704 14:18:18.092" level="INFO">Releasing special key RETURN.</msg>
<status status="PASS" starttime="20220704 14:18:17.763" endtime="20220704 14:18:18.128"/>
</kw>
<status status="PASS" starttime="20220704 14:18:16.933" endtime="20220704 14:18:18.128"/>
</kw>
<kw name="Verify That The List Exists" library="ListComponent">
<arg>NEW_TEST_LIST</arg>
<doc>Verify that a given header of a list matches</doc>
<kw name="Format String" library="String">
<var>${list_name_locator}</var>
<arg>${LIST_DIV}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:18:18.129" level="INFO">${list_name_locator} = //h2[text()='NEW_TEST_LIST']//ancestor::div[contains(@class, 'list-content')]</msg>
<status status="PASS" starttime="20220704 14:18:18.129" endtime="20220704 14:18:18.130"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${list_name_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 14:18:18.130" endtime="20220704 14:18:18.176"/>
</kw>
<kw name="Page Should Contain Element" library="SeleniumLibrary">
<arg>${list_name_locator}</arg>
<doc>Verifies that element ``locator`` is found on the current page.</doc>
<msg timestamp="20220704 14:18:18.187" level="INFO">Current page contains element '//h2[text()='NEW_TEST_LIST']//ancestor::div[contains(@class, 'list-content')]'.</msg>
<status status="PASS" starttime="20220704 14:18:18.176" endtime="20220704 14:18:18.187"/>
</kw>
<status status="PASS" starttime="20220704 14:18:18.129" endtime="20220704 14:18:18.188"/>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Close a list</arg>
<arg>Close Browser</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Close a list" library="ListComponent">
<doc>archives a list</doc>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LIST_ACTIONS_BUTTON}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220704 14:18:18.188" endtime="20220704 14:18:18.230"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Click Link</arg>
<arg>${LIST_ACTIONS_BUTTON}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Click Link" library="SeleniumLibrary">
<arg>${LIST_ACTIONS_BUTTON}</arg>
<doc>Clicks a link identified by ``locator``.</doc>
<msg timestamp="20220704 14:18:18.231" level="INFO">Clicking link 'xpath://div[@class='js-list list-wrapper'][last()]//a[@aria-label="List actions"]'.</msg>
<status status="PASS" starttime="20220704 14:18:18.231" endtime="20220704 14:18:18.359"/>
</kw>
<status status="PASS" starttime="20220704 14:18:18.230" endtime="20220704 14:18:18.359"/>
</kw>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${CLOSE_LIST_BUTTON}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220704 14:18:18.360" endtime="20220704 14:18:18.428"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Click Link</arg>
<arg>${CLOSE_LIST_BUTTON}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Click Link" library="SeleniumLibrary">
<arg>${CLOSE_LIST_BUTTON}</arg>
<doc>Clicks a link identified by ``locator``.</doc>
<msg timestamp="20220704 14:18:18.428" level="INFO">Clicking link 'xpath://li//a[@class='js-close-list']'.</msg>
<status status="PASS" starttime="20220704 14:18:18.428" endtime="20220704 14:18:18.499"/>
</kw>
<status status="PASS" starttime="20220704 14:18:18.428" endtime="20220704 14:18:18.499"/>
</kw>
<status status="PASS" starttime="20220704 14:18:18.188" endtime="20220704 14:18:18.499"/>
</kw>
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20220704 14:18:18.499" endtime="20220704 14:18:18.606"/>
</kw>
<status status="PASS" starttime="20220704 14:18:18.188" endtime="20220704 14:18:18.606"/>
</kw>
<doc>verify that a list can be created in GUI</doc>
<tag>gui</tag>
<tag>list.create</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220704 14:18:09.449" endtime="20220704 14:18:18.606"/>
</test>
<test id="s1-s2-s1-s4-t2" name="modify name of a list" line="31">
<kw name="Open Browser From Environment" library="CommonGUI">
<arg>${LOGIN_URL}</arg>
<doc>This keywords takes REMOTE and BROWSER variables
from the environment automatically and only needs a url</doc>
<if>
<branch type="IF" condition="${is_remote}">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${url}</arg>
<arg>${BROWSER}</arg>
<arg>remote_url=http://selenium-hub:4444</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20220704 14:18:18.609" level="INFO">Opening browser 'chrome' to base url 'https://trello.com/login' through remote server at 'http://selenium-hub:4444'.</msg>
<status status="PASS" starttime="20220704 14:18:18.609" endtime="20220704 14:18:19.711"/>
</kw>
<status status="PASS" starttime="20220704 14:18:18.609" endtime="20220704 14:18:19.711"/>
</branch>
<branch type="ELSE">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${url}</arg>
<arg>${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<status status="NOT RUN" starttime="20220704 14:18:19.712" endtime="20220704 14:18:19.712"/>
</kw>
<status status="NOT RUN" starttime="20220704 14:18:19.711" endtime="20220704 14:18:19.712"/>
</branch>
<status status="PASS" starttime="20220704 14:18:18.609" endtime="20220704 14:18:19.712"/>
</if>
<status status="PASS" starttime="20220704 14:18:18.608" endtime="20220704 14:18:19.712"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20220704 14:18:19.712" endtime="20220704 14:18:19.820"/>
</kw>
<kw name="Login To Trello" library="LoginPage">
<arg>${DEFAULT_EMAIL}</arg>
<arg>${DEFAULT_PASSWORD}</arg>
<doc>High-level keyword for logging in to Trello</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220704 14:18:19.829" level="INFO">${url} = https://trello.com/login</msg>
<status status="PASS" starttime="20220704 14:18:19.821" endtime="20220704 14:18:19.829"/>
</kw>
<if>
<branch type="IF" condition="'${url}' != '${LOGIN_URL}'">
<kw name="Go To" library="SeleniumLibrary">
<arg>${LOGIN_URL}</arg>
<doc>Navigates the current browser window to the provided ``url``.</doc>
<status status="NOT RUN" starttime="20220704 14:18:19.830" endtime="20220704 14:18:19.830"/>
</kw>
<status status="NOT RUN" starttime="20220704 14:18:19.829" endtime="20220704 14:18:19.830"/>
</branch>
<status status="PASS" starttime="20220704 14:18:19.829" endtime="20220704 14:18:19.830"/>
</if>
<kw name="Enter Username" library="LoginPage">
<arg>${username}</arg>
<doc>Take a username as argument and
enters it in the user_input</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${USER_INPUT}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 14:18:19.830" endtime="20220704 14:18:19.866"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${USER_INPUT}</arg>
<arg>${username}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220704 14:18:19.866" level="INFO">Typing text 'bootcamp04@mailinator.com' into text field 'css:input#user'.</msg>
<status status="PASS" starttime="20220704 14:18:19.866" endtime="20220704 14:18:19.968"/>
</kw>
<status status="PASS" starttime="20220704 14:18:19.830" endtime="20220704 14:18:19.969"/>
</kw>
<kw name="Wait Until Element Is Not Visible" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<doc>Waits until the element ``locator`` is not visible.</doc>
<status status="PASS" starttime="20220704 14:18:19.969" endtime="20220704 14:18:20.685"/>
</kw>
<kw name="Click Login Button" library="LoginPage">
<doc>Clicks Trello's login button if in Trello's
login page, else it clicks Atlassian's</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220704 14:18:20.692" level="INFO">${url} = https://trello.com/login</msg>
<status status="PASS" starttime="20220704 14:18:20.686" endtime="20220704 14:18:20.692"/>
</kw>
<if>
<branch type="IF" condition="'${url}' == '${LOGIN_URL}'">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220704 14:18:20.692" endtime="20220704 14:18:20.748"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220704 14:18:20.749" level="INFO">Clicking button 'css:input#login'.</msg>
<status status="PASS" starttime="20220704 14:18:20.748" endtime="20220704 14:18:21.785"/>
</kw>
<status status="PASS" starttime="20220704 14:18:20.692" endtime="20220704 14:18:21.785"/>
</branch>
<branch type="ELSE">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="NOT RUN" starttime="20220704 14:18:21.785" endtime="20220704 14:18:21.785"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<status status="NOT RUN" starttime="20220704 14:18:21.785" endtime="20220704 14:18:21.785"/>
</kw>
<status status="NOT RUN" starttime="20220704 14:18:21.785" endtime="20220704 14:18:21.785"/>
</branch>
<status status="PASS" starttime="20220704 14:18:20.692" endtime="20220704 14:18:21.785"/>
</if>
<status status="PASS" starttime="20220704 14:18:20.685" endtime="20220704 14:18:21.786"/>
</kw>
<kw name="Wait Until Location Is Atlassian's Login" library="LoginPage">
<doc>Waits for the page redirection when logging in.</doc>
<kw name="Wait Until Location Contains" library="SeleniumLibrary">
<arg>atlassian.com</arg>
<doc>Waits until the current URL contains ``expected``.</doc>
<status status="PASS" starttime="20220704 14:18:21.786" endtime="20220704 14:18:21.798"/>
</kw>
<status status="PASS" starttime="20220704 14:18:21.786" endtime="20220704 14:18:21.799"/>
</kw>
<kw name="Enter Password" library="LoginPage">
<arg>${password}</arg>
<doc>Take a password as argument and
enters it in the password_input</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<arg>timeout=10</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 14:18:21.799" endtime="20220704 14:18:21.842"/>
</kw>
<kw name="Input Password" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<arg>${password}</arg>
<doc>Types the given password into the text field identified by ``locator``.</doc>
<msg timestamp="20220704 14:18:21.842" level="INFO">Typing password into text field 'css:input#password'.</msg>
<msg timestamp="20220704 14:18:21.893" level="INFO">Temporally setting log level to: NONE</msg>
<msg timestamp="20220704 14:18:21.963" level="INFO">Log level changed from NONE to INFO.</msg>
<status status="PASS" starttime="20220704 14:18:21.842" endtime="20220704 14:18:21.963"/>
</kw>
<status status="PASS" starttime="20220704 14:18:21.799" endtime="20220704 14:18:21.963"/>
</kw>
<kw name="Click Login Button" library="LoginPage">
<doc>Clicks Trello's login button if in Trello's
login page, else it clicks Atlassian's</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220704 14:18:21.972" level="INFO">${url} = https://id.atlassian.com/login?application=trello&amp;continue=https%3A%2F%2Ftrello.com%2Fauth%2Fatlassian%2Fcallback%3FreturnUrl%3D%252F%26display%3D%26aaOnboarding%3D%26updateEmail%3D%26traceId%3D62c2f6...</msg>
<status status="PASS" starttime="20220704 14:18:21.964" endtime="20220704 14:18:21.972"/>
</kw>
<if>
<branch type="IF" condition="'${url}' == '${LOGIN_URL}'">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="NOT RUN" starttime="20220704 14:18:21.973" endtime="20220704 14:18:21.973"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<status status="NOT RUN" starttime="20220704 14:18:21.973" endtime="20220704 14:18:21.973"/>
</kw>
<status status="NOT RUN" starttime="20220704 14:18:21.973" endtime="20220704 14:18:21.973"/>
</branch>
<branch type="ELSE">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220704 14:18:21.973" endtime="20220704 14:18:22.037"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220704 14:18:22.038" level="INFO">Clicking button 'css:button#login-submit'.</msg>
<status status="PASS" starttime="20220704 14:18:22.037" endtime="20220704 14:18:22.151"/>
</kw>
<status status="PASS" starttime="20220704 14:18:21.973" endtime="20220704 14:18:22.151"/>
</branch>
<status status="PASS" starttime="20220704 14:18:21.972" endtime="20220704 14:18:22.151"/>
</if>
<status status="PASS" starttime="20220704 14:18:21.963" endtime="20220704 14:18:22.151"/>
</kw>
<status status="PASS" starttime="20220704 14:18:19.820" endtime="20220704 14:18:22.151"/>
</kw>
<kw name="Go To Board" library="BoardsPage">
<arg>TestBoard</arg>
<doc>Receives the board name and goes to that board's page.</doc>
<kw name="Format String" library="String">
<var>${locator}</var>
<arg>${BOARD_BUTTON}</arg>
<arg>${board_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:18:22.152" level="INFO">${locator} = //div[@title="TestBoard"]</msg>
<status status="PASS" starttime="20220704 14:18:22.152" endtime="20220704 14:18:22.152"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 14:18:22.152" endtime="20220704 14:18:25.666"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 14:18:25.667" level="INFO">Clicking element '//div[@title="TestBoard"]'.</msg>
<status status="PASS" starttime="20220704 14:18:25.667" endtime="20220704 14:18:26.026"/>
</kw>
<status status="PASS" starttime="20220704 14:18:22.151" endtime="20220704 14:18:26.026"/>
</kw>
<kw name="Create new list with the name" library="ListComponent">
<arg>TO_MODIFY</arg>
<doc>Create a new list with the given name</doc>
<kw name="Wait Until Page Contains Element" library="SeleniumLibrary">
<arg>${ADD_LIST_BUTTON}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" starttime="20220704 14:18:26.027" endtime="20220704 14:18:26.464"/>
</kw>
<kw name="Click Link" library="SeleniumLibrary">
<arg>${ADD_LIST_BUTTON}</arg>
<doc>Clicks a link identified by ``locator``.</doc>
<msg timestamp="20220704 14:18:26.465" level="INFO">Clicking link 'xpath://a[contains(@Class, 'open-add-list')]'.</msg>
<status status="PASS" starttime="20220704 14:18:26.464" endtime="20220704 14:18:26.639"/>
</kw>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LIST_NAME_INPUT}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220704 14:18:26.639" endtime="20220704 14:18:26.736"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${LIST_NAME_INPUT}</arg>
<arg>${list_name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220704 14:18:26.737" level="INFO">Typing text 'TO_MODIFY' into text field 'xpath://input[@class="list-name-input"]'.</msg>
<status status="PASS" starttime="20220704 14:18:26.736" endtime="20220704 14:18:26.848"/>
</kw>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>${LIST_NAME_INPUT}</arg>
<arg>RETURN</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20220704 14:18:26.849" level="INFO">Sending key(s) ('RETURN',) to xpath://input[@class="list-name-input"] element.</msg>
<msg timestamp="20220704 14:18:27.139" level="INFO">Pressing special key RETURN to element.</msg>
<msg timestamp="20220704 14:18:27.139" level="INFO">Releasing special key RETURN.</msg>
<status status="PASS" starttime="20220704 14:18:26.848" endtime="20220704 14:18:27.171"/>
</kw>
<status status="PASS" starttime="20220704 14:18:26.026" endtime="20220704 14:18:27.171"/>
</kw>
<kw name="Modify the name of a list with" library="ListComponent">
<arg>TO_MODIFY</arg>
<arg>MODIFIED_LIST</arg>
<doc>Modify the name of an existent list</doc>
<kw name="Format String" library="String">
<var>${name_header_instance}</var>
<arg>${LIST_NAME_HEADER}</arg>
<arg>old_name=${old_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:18:27.172" level="INFO">${name_header_instance} = xpath://div[@class='list-header js-list-header u-clearfix is-menu-shown' and contains(.,'TO_MODIFY')]</msg>
<status status="PASS" starttime="20220704 14:18:27.172" endtime="20220704 14:18:27.172"/>
</kw>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${name_header_instance}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220704 14:18:27.172" endtime="20220704 14:18:27.233"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${name_header_instance}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 14:18:27.234" level="INFO">Clicking element 'xpath://div[@class='list-header js-list-header u-clearfix is-menu-shown' and contains(.,'TO_MODIFY')]'.</msg>
<status status="PASS" starttime="20220704 14:18:27.234" endtime="20220704 14:18:27.299"/>
</kw>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LIST_NAME_INPUT}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220704 14:18:27.300" endtime="20220704 14:18:27.355"/>
</kw>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>${LIST_NAME_INPUT}</arg>
<arg>BACKSPACE</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20220704 14:18:27.356" level="INFO">Sending key(s) ('BACKSPACE',) to xpath://input[@class="list-name-input"] element.</msg>
<msg timestamp="20220704 14:18:27.651" level="INFO">Pressing special key BACKSPACE to element.</msg>
<msg timestamp="20220704 14:18:27.651" level="INFO">Releasing special key BACKSPACE.</msg>
<status status="PASS" starttime="20220704 14:18:27.355" endtime="20220704 14:18:27.661"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${LIST_TEXT_AREA_NAME}</arg>
<arg>${new_name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220704 14:18:27.662" level="INFO">Typing text 'MODIFIED_LIST' into text field 'xpath://div[@class='js-list list-wrapper'][last()]//textarea'.</msg>
<status status="PASS" starttime="20220704 14:18:27.661" endtime="20220704 14:18:27.793"/>
</kw>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>None</arg>
<arg>RETURN</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20220704 14:18:27.794" level="INFO">Sending key(s) ('RETURN',) to page.</msg>
<msg timestamp="20220704 14:18:27.794" level="INFO">Pressing special key RETURN to browser.</msg>
<msg timestamp="20220704 14:18:27.794" level="INFO">Releasing special key RETURN.</msg>
<status status="PASS" starttime="20220704 14:18:27.793" endtime="20220704 14:18:27.813"/>
</kw>
<status status="PASS" starttime="20220704 14:18:27.171" endtime="20220704 14:18:27.813"/>
</kw>
<kw name="Verify That The List Exists" library="ListComponent">
<arg>MODIFIED_LIST</arg>
<doc>Verify that a given header of a list matches</doc>
<kw name="Format String" library="String">
<var>${list_name_locator}</var>
<arg>${LIST_DIV}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:18:27.814" level="INFO">${list_name_locator} = //h2[text()='MODIFIED_LIST']//ancestor::div[contains(@class, 'list-content')]</msg>
<status status="PASS" starttime="20220704 14:18:27.814" endtime="20220704 14:18:27.814"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${list_name_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 14:18:27.814" endtime="20220704 14:18:27.874"/>
</kw>
<kw name="Page Should Contain Element" library="SeleniumLibrary">
<arg>${list_name_locator}</arg>
<doc>Verifies that element ``locator`` is found on the current page.</doc>
<msg timestamp="20220704 14:18:27.885" level="INFO">Current page contains element '//h2[text()='MODIFIED_LIST']//ancestor::div[contains(@class, 'list-content')]'.</msg>
<status status="PASS" starttime="20220704 14:18:27.875" endtime="20220704 14:18:27.886"/>
</kw>
<status status="PASS" starttime="20220704 14:18:27.813" endtime="20220704 14:18:27.886"/>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Close a list</arg>
<arg>Close Browser</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Close a list" library="ListComponent">
<doc>archives a list</doc>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LIST_ACTIONS_BUTTON}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220704 14:18:27.887" endtime="20220704 14:18:27.951"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Click Link</arg>
<arg>${LIST_ACTIONS_BUTTON}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Click Link" library="SeleniumLibrary">
<arg>${LIST_ACTIONS_BUTTON}</arg>
<doc>Clicks a link identified by ``locator``.</doc>
<msg timestamp="20220704 14:18:27.952" level="INFO">Clicking link 'xpath://div[@class='js-list list-wrapper'][last()]//a[@aria-label="List actions"]'.</msg>
<status status="PASS" starttime="20220704 14:18:27.952" endtime="20220704 14:18:28.034"/>
</kw>
<status status="PASS" starttime="20220704 14:18:27.951" endtime="20220704 14:18:28.034"/>
</kw>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${CLOSE_LIST_BUTTON}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220704 14:18:28.034" endtime="20220704 14:18:28.129"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Click Link</arg>
<arg>${CLOSE_LIST_BUTTON}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Click Link" library="SeleniumLibrary">
<arg>${CLOSE_LIST_BUTTON}</arg>
<doc>Clicks a link identified by ``locator``.</doc>
<msg timestamp="20220704 14:18:28.130" level="INFO">Clicking link 'xpath://li//a[@class='js-close-list']'.</msg>
<status status="PASS" starttime="20220704 14:18:28.129" endtime="20220704 14:18:28.197"/>
</kw>
<status status="PASS" starttime="20220704 14:18:28.129" endtime="20220704 14:18:28.197"/>
</kw>
<status status="PASS" starttime="20220704 14:18:27.886" endtime="20220704 14:18:28.197"/>
</kw>
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20220704 14:18:28.197" endtime="20220704 14:18:28.279"/>
</kw>
<status status="PASS" starttime="20220704 14:18:27.886" endtime="20220704 14:18:28.279"/>
</kw>
<doc>verify that a list name can be modified in GUI</doc>
<tag>gui</tag>
<tag>list.update</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220704 14:18:18.607" endtime="20220704 14:18:28.279"/>
</test>
<test id="s1-s2-s1-s4-t3" name="archive a list" line="45">
<kw name="Open Browser From Environment" library="CommonGUI">
<arg>${LOGIN_URL}</arg>
<doc>This keywords takes REMOTE and BROWSER variables
from the environment automatically and only needs a url</doc>
<if>
<branch type="IF" condition="${is_remote}">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${url}</arg>
<arg>${BROWSER}</arg>
<arg>remote_url=http://selenium-hub:4444</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20220704 14:18:28.282" level="INFO">Opening browser 'chrome' to base url 'https://trello.com/login' through remote server at 'http://selenium-hub:4444'.</msg>
<status status="PASS" starttime="20220704 14:18:28.282" endtime="20220704 14:18:29.448"/>
</kw>
<status status="PASS" starttime="20220704 14:18:28.282" endtime="20220704 14:18:29.448"/>
</branch>
<branch type="ELSE">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${url}</arg>
<arg>${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<status status="NOT RUN" starttime="20220704 14:18:29.449" endtime="20220704 14:18:29.449"/>
</kw>
<status status="NOT RUN" starttime="20220704 14:18:29.448" endtime="20220704 14:18:29.449"/>
</branch>
<status status="PASS" starttime="20220704 14:18:28.281" endtime="20220704 14:18:29.449"/>
</if>
<status status="PASS" starttime="20220704 14:18:28.281" endtime="20220704 14:18:29.449"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20220704 14:18:29.449" endtime="20220704 14:18:29.562"/>
</kw>
<kw name="Login To Trello" library="LoginPage">
<arg>${DEFAULT_EMAIL}</arg>
<arg>${DEFAULT_PASSWORD}</arg>
<doc>High-level keyword for logging in to Trello</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220704 14:18:29.573" level="INFO">${url} = https://trello.com/login</msg>
<status status="PASS" starttime="20220704 14:18:29.563" endtime="20220704 14:18:29.573"/>
</kw>
<if>
<branch type="IF" condition="'${url}' != '${LOGIN_URL}'">
<kw name="Go To" library="SeleniumLibrary">
<arg>${LOGIN_URL}</arg>
<doc>Navigates the current browser window to the provided ``url``.</doc>
<status status="NOT RUN" starttime="20220704 14:18:29.573" endtime="20220704 14:18:29.573"/>
</kw>
<status status="NOT RUN" starttime="20220704 14:18:29.573" endtime="20220704 14:18:29.573"/>
</branch>
<status status="PASS" starttime="20220704 14:18:29.573" endtime="20220704 14:18:29.573"/>
</if>
<kw name="Enter Username" library="LoginPage">
<arg>${username}</arg>
<doc>Take a username as argument and
enters it in the user_input</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${USER_INPUT}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 14:18:29.574" endtime="20220704 14:18:29.629"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${USER_INPUT}</arg>
<arg>${username}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220704 14:18:29.630" level="INFO">Typing text 'bootcamp04@mailinator.com' into text field 'css:input#user'.</msg>
<status status="PASS" starttime="20220704 14:18:29.629" endtime="20220704 14:18:29.732"/>
</kw>
<status status="PASS" starttime="20220704 14:18:29.573" endtime="20220704 14:18:29.732"/>
</kw>
<kw name="Wait Until Element Is Not Visible" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<doc>Waits until the element ``locator`` is not visible.</doc>
<status status="PASS" starttime="20220704 14:18:29.732" endtime="20220704 14:18:30.436"/>
</kw>
<kw name="Click Login Button" library="LoginPage">
<doc>Clicks Trello's login button if in Trello's
login page, else it clicks Atlassian's</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220704 14:18:30.443" level="INFO">${url} = https://trello.com/login</msg>
<status status="PASS" starttime="20220704 14:18:30.436" endtime="20220704 14:18:30.443"/>
</kw>
<if>
<branch type="IF" condition="'${url}' == '${LOGIN_URL}'">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220704 14:18:30.443" endtime="20220704 14:18:30.503"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220704 14:18:30.503" level="INFO">Clicking button 'css:input#login'.</msg>
<status status="PASS" starttime="20220704 14:18:30.503" endtime="20220704 14:18:31.500"/>
</kw>
<status status="PASS" starttime="20220704 14:18:30.443" endtime="20220704 14:18:31.500"/>
</branch>
<branch type="ELSE">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="NOT RUN" starttime="20220704 14:18:31.501" endtime="20220704 14:18:31.501"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<status status="NOT RUN" starttime="20220704 14:18:31.501" endtime="20220704 14:18:31.501"/>
</kw>
<status status="NOT RUN" starttime="20220704 14:18:31.500" endtime="20220704 14:18:31.501"/>
</branch>
<status status="PASS" starttime="20220704 14:18:30.443" endtime="20220704 14:18:31.501"/>
</if>
<status status="PASS" starttime="20220704 14:18:30.436" endtime="20220704 14:18:31.501"/>
</kw>
<kw name="Wait Until Location Is Atlassian's Login" library="LoginPage">
<doc>Waits for the page redirection when logging in.</doc>
<kw name="Wait Until Location Contains" library="SeleniumLibrary">
<arg>atlassian.com</arg>
<doc>Waits until the current URL contains ``expected``.</doc>
<status status="PASS" starttime="20220704 14:18:31.501" endtime="20220704 14:18:31.519"/>
</kw>
<status status="PASS" starttime="20220704 14:18:31.501" endtime="20220704 14:18:31.519"/>
</kw>
<kw name="Enter Password" library="LoginPage">
<arg>${password}</arg>
<doc>Take a password as argument and
enters it in the password_input</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<arg>timeout=10</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 14:18:31.520" endtime="20220704 14:18:31.562"/>
</kw>
<kw name="Input Password" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<arg>${password}</arg>
<doc>Types the given password into the text field identified by ``locator``.</doc>
<msg timestamp="20220704 14:18:31.563" level="INFO">Typing password into text field 'css:input#password'.</msg>
<msg timestamp="20220704 14:18:31.639" level="INFO">Temporally setting log level to: NONE</msg>
<msg timestamp="20220704 14:18:31.718" level="INFO">Log level changed from NONE to INFO.</msg>
<status status="PASS" starttime="20220704 14:18:31.563" endtime="20220704 14:18:31.718"/>
</kw>
<status status="PASS" starttime="20220704 14:18:31.519" endtime="20220704 14:18:31.718"/>
</kw>
<kw name="Click Login Button" library="LoginPage">
<doc>Clicks Trello's login button if in Trello's
login page, else it clicks Atlassian's</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220704 14:18:31.730" level="INFO">${url} = https://id.atlassian.com/login?application=trello&amp;continue=https%3A%2F%2Ftrello.com%2Fauth%2Fatlassian%2Fcallback%3FreturnUrl%3D%252F%26display%3D%26aaOnboarding%3D%26updateEmail%3D%26traceId%3D62c2f6...</msg>
<status status="PASS" starttime="20220704 14:18:31.719" endtime="20220704 14:18:31.730"/>
</kw>
<if>
<branch type="IF" condition="'${url}' == '${LOGIN_URL}'">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="NOT RUN" starttime="20220704 14:18:31.731" endtime="20220704 14:18:31.731"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<status status="NOT RUN" starttime="20220704 14:18:31.731" endtime="20220704 14:18:31.731"/>
</kw>
<status status="NOT RUN" starttime="20220704 14:18:31.730" endtime="20220704 14:18:31.731"/>
</branch>
<branch type="ELSE">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220704 14:18:31.731" endtime="20220704 14:18:31.781"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220704 14:18:31.781" level="INFO">Clicking button 'css:button#login-submit'.</msg>
<status status="PASS" starttime="20220704 14:18:31.781" endtime="20220704 14:18:31.894"/>
</kw>
<status status="PASS" starttime="20220704 14:18:31.731" endtime="20220704 14:18:31.894"/>
</branch>
<status status="PASS" starttime="20220704 14:18:31.730" endtime="20220704 14:18:31.894"/>
</if>
<status status="PASS" starttime="20220704 14:18:31.719" endtime="20220704 14:18:31.894"/>
</kw>
<status status="PASS" starttime="20220704 14:18:29.562" endtime="20220704 14:18:31.894"/>
</kw>
<kw name="Go To Board" library="BoardsPage">
<arg>TestBoard</arg>
<doc>Receives the board name and goes to that board's page.</doc>
<kw name="Format String" library="String">
<var>${locator}</var>
<arg>${BOARD_BUTTON}</arg>
<arg>${board_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:18:31.895" level="INFO">${locator} = //div[@title="TestBoard"]</msg>
<status status="PASS" starttime="20220704 14:18:31.895" endtime="20220704 14:18:31.895"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 14:18:31.895" endtime="20220704 14:18:35.600"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 14:18:35.600" level="INFO">Clicking element '//div[@title="TestBoard"]'.</msg>
<status status="PASS" starttime="20220704 14:18:35.600" endtime="20220704 14:18:35.961"/>
</kw>
<status status="PASS" starttime="20220704 14:18:31.895" endtime="20220704 14:18:35.961"/>
</kw>
<kw name="Create new list with the name" library="ListComponent">
<arg>TO_ARCHIVE</arg>
<doc>Create a new list with the given name</doc>
<kw name="Wait Until Page Contains Element" library="SeleniumLibrary">
<arg>${ADD_LIST_BUTTON}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" starttime="20220704 14:18:35.962" endtime="20220704 14:18:36.444"/>
</kw>
<kw name="Click Link" library="SeleniumLibrary">
<arg>${ADD_LIST_BUTTON}</arg>
<doc>Clicks a link identified by ``locator``.</doc>
<msg timestamp="20220704 14:18:36.445" level="INFO">Clicking link 'xpath://a[contains(@Class, 'open-add-list')]'.</msg>
<status status="PASS" starttime="20220704 14:18:36.444" endtime="20220704 14:18:36.654"/>
</kw>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LIST_NAME_INPUT}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220704 14:18:36.655" endtime="20220704 14:18:36.707"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${LIST_NAME_INPUT}</arg>
<arg>${list_name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220704 14:18:36.708" level="INFO">Typing text 'TO_ARCHIVE' into text field 'xpath://input[@class="list-name-input"]'.</msg>
<status status="PASS" starttime="20220704 14:18:36.707" endtime="20220704 14:18:36.818"/>
</kw>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>${LIST_NAME_INPUT}</arg>
<arg>RETURN</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20220704 14:18:36.819" level="INFO">Sending key(s) ('RETURN',) to xpath://input[@class="list-name-input"] element.</msg>
<msg timestamp="20220704 14:18:37.139" level="INFO">Pressing special key RETURN to element.</msg>
<msg timestamp="20220704 14:18:37.139" level="INFO">Releasing special key RETURN.</msg>
<status status="PASS" starttime="20220704 14:18:36.819" endtime="20220704 14:18:37.186"/>
</kw>
<status status="PASS" starttime="20220704 14:18:35.962" endtime="20220704 14:18:37.187"/>
</kw>
<kw name="Close a list" library="ListComponent">
<doc>archives a list</doc>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LIST_ACTIONS_BUTTON}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220704 14:18:37.187" endtime="20220704 14:18:37.234"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Click Link</arg>
<arg>${LIST_ACTIONS_BUTTON}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Click Link" library="SeleniumLibrary">
<arg>${LIST_ACTIONS_BUTTON}</arg>
<doc>Clicks a link identified by ``locator``.</doc>
<msg timestamp="20220704 14:18:37.235" level="INFO">Clicking link 'xpath://div[@class='js-list list-wrapper'][last()]//a[@aria-label="List actions"]'.</msg>
<status status="PASS" starttime="20220704 14:18:37.234" endtime="20220704 14:18:37.322"/>
</kw>
<status status="PASS" starttime="20220704 14:18:37.234" endtime="20220704 14:18:37.322"/>
</kw>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${CLOSE_LIST_BUTTON}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220704 14:18:37.323" endtime="20220704 14:18:37.406"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Click Link</arg>
<arg>${CLOSE_LIST_BUTTON}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Click Link" library="SeleniumLibrary">
<arg>${CLOSE_LIST_BUTTON}</arg>
<doc>Clicks a link identified by ``locator``.</doc>
<msg timestamp="20220704 14:18:37.407" level="INFO">Clicking link 'xpath://li//a[@class='js-close-list']'.</msg>
<status status="PASS" starttime="20220704 14:18:37.407" endtime="20220704 14:18:37.499"/>
</kw>
<status status="PASS" starttime="20220704 14:18:37.406" endtime="20220704 14:18:37.499"/>
</kw>
<status status="PASS" starttime="20220704 14:18:37.187" endtime="20220704 14:18:37.499"/>
</kw>
<kw name="Enter to the side menu" library="TopBar">
<doc>accesing to the archive menu in the sidebar</doc>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${SHOW_MENU_BUTTON}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220704 14:18:37.500" endtime="20220704 14:18:37.541"/>
</kw>
<kw name="Click Link" library="SeleniumLibrary">
<arg>${SHOW_MENU_BUTTON}</arg>
<doc>Clicks a link identified by ``locator``.</doc>
<msg timestamp="20220704 14:18:37.542" level="INFO">Clicking link 'xpath://div[contains(@class, 'board-header')]//a[contains(., 'Show menu')]'.</msg>
<status status="PASS" starttime="20220704 14:18:37.542" endtime="20220704 14:18:37.651"/>
</kw>
<status status="PASS" starttime="20220704 14:18:37.500" endtime="20220704 14:18:37.651"/>
</kw>
<kw name="Enter to the list archive" library="ShownMenu">
<doc>accesing to the archive menu in the sidebar</doc>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${MORE_OPTIONS_SIDEBAR}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220704 14:18:37.652" endtime="20220704 14:18:37.720"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Click Link</arg>
<arg>${MORE_OPTIONS_SIDEBAR}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Click Link" library="SeleniumLibrary">
<arg>${MORE_OPTIONS_SIDEBAR}</arg>
<doc>Clicks a link identified by ``locator``.</doc>
<msg timestamp="20220704 14:18:37.720" level="INFO">Clicking link 'xpath://a[contains(@class,'board-menu-navigation-item-link') and contains(.,'More')]'.</msg>
<status status="PASS" starttime="20220704 14:18:37.720" endtime="20220704 14:18:37.867"/>
</kw>
<status status="PASS" starttime="20220704 14:18:37.720" endtime="20220704 14:18:37.867"/>
</kw>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${ARCHIVED_ITEMS_BUTTON}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220704 14:18:37.867" endtime="20220704 14:18:37.915"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Click Link</arg>
<arg>${ARCHIVED_ITEMS_BUTTON}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Click Link" library="SeleniumLibrary">
<arg>${ARCHIVED_ITEMS_BUTTON}</arg>
<doc>Clicks a link identified by ``locator``.</doc>
<msg timestamp="20220704 14:18:37.915" level="INFO">Clicking link 'xpath://a[contains(@class, 'js-open-archive')]'.</msg>
<status status="PASS" starttime="20220704 14:18:37.915" endtime="20220704 14:18:37.994"/>
</kw>
<status status="PASS" starttime="20220704 14:18:37.915" endtime="20220704 14:18:37.994"/>
</kw>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${SWITCH_TO_LIST_BUTTON}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220704 14:18:37.994" endtime="20220704 14:18:38.050"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Click Link</arg>
<arg>${SWITCH_TO_LIST_BUTTON}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Click Link" library="SeleniumLibrary">
<arg>${SWITCH_TO_LIST_BUTTON}</arg>
<doc>Clicks a link identified by ``locator``.</doc>
<msg timestamp="20220704 14:18:38.051" level="INFO">Clicking link 'xpath://div[@class='archive-controls']/a[contains(.,'Switch to lists')]'.</msg>
<status status="PASS" starttime="20220704 14:18:38.050" endtime="20220704 14:18:38.133"/>
</kw>
<status status="PASS" starttime="20220704 14:18:38.050" endtime="20220704 14:18:38.133"/>
</kw>
<status status="PASS" starttime="20220704 14:18:37.651" endtime="20220704 14:18:38.133"/>
</kw>
<kw name="Verify That A List Is In The Archive" library="ShownMenu">
<arg>TO_ARCHIVE</arg>
<doc>Verify that a given header of a list matches</doc>
<kw name="Format String" library="String">
<var>${list_name_locator_archive}</var>
<arg>${ARCHIVED_LIST_NAME_FIELD}</arg>
<arg>archived_list_title=${archived_list_title}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:18:38.134" level="INFO">${list_name_locator_archive} = xpath://div[@class='item-name']/span[.='TO_ARCHIVE']</msg>
<status status="PASS" starttime="20220704 14:18:38.134" endtime="20220704 14:18:38.134"/>
</kw>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${list_name_locator_archive}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220704 14:18:38.135" endtime="20220704 14:18:38.388"/>
</kw>
<kw name="Page Should Contain Element" library="SeleniumLibrary">
<arg>${list_name_locator_archive}</arg>
<doc>Verifies that element ``locator`` is found on the current page.</doc>
<msg timestamp="20220704 14:18:38.398" level="INFO">Current page contains element 'xpath://div[@class='item-name']/span[.='TO_ARCHIVE']'.</msg>
<status status="PASS" starttime="20220704 14:18:38.388" endtime="20220704 14:18:38.398"/>
</kw>
<status status="PASS" starttime="20220704 14:18:38.134" endtime="20220704 14:18:38.398"/>
</kw>
<kw name="Close archive tab" library="ShownMenu">
<doc>close sidebar tab</doc>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${CLOSE_SHOW_MENU}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220704 14:18:38.399" endtime="20220704 14:18:38.439"/>
</kw>
<kw name="Click Link" library="SeleniumLibrary">
<arg>${CLOSE_SHOW_MENU}</arg>
<doc>Clicks a link identified by ``locator``.</doc>
<msg timestamp="20220704 14:18:38.440" level="INFO">Clicking link 'xpath://a[@title="Close the board menu."]'.</msg>
<status status="PASS" starttime="20220704 14:18:38.439" endtime="20220704 14:18:38.504"/>
</kw>
<status status="PASS" starttime="20220704 14:18:38.398" endtime="20220704 14:18:38.504"/>
</kw>
<kw name="Close Browser" library="SeleniumLibrary" type="TEARDOWN">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20220704 14:18:38.505" endtime="20220704 14:18:38.588"/>
</kw>
<doc>verify that a list can be archived in GUI</doc>
<tag>gui</tag>
<tag>list.archive</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220704 14:18:28.280" endtime="20220704 14:18:38.588"/>
</test>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Teardown Board</arg>
<arg>Delete All Sessions</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Teardown Board">
<doc>Deletes used board for teardown</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:18:38.591" level="INFO">${url} = boards/62c2f6a174cc565f228b1b71</msg>
<status status="PASS" starttime="20220704 14:18:38.591" endtime="20220704 14:18:38.591"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 14:18:38.976" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:18:38.591" endtime="20220704 14:18:38.976"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:18:38.977" endtime="20220704 14:18:38.977"/>
</return>
<msg timestamp="20220704 14:18:38.977" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:18:38.590" endtime="20220704 14:18:38.977"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:18:38.977" endtime="20220704 14:18:38.977"/>
</return>
<status status="PASS" starttime="20220704 14:18:38.590" endtime="20220704 14:18:38.977"/>
</kw>
<status status="PASS" starttime="20220704 14:18:38.590" endtime="20220704 14:18:38.977"/>
</kw>
<status status="PASS" starttime="20220704 14:18:38.590" endtime="20220704 14:18:38.977"/>
</kw>
<kw name="Delete All Sessions" library="request_own_library">
<status status="PASS" starttime="20220704 14:18:38.977" endtime="20220704 14:18:38.979"/>
</kw>
<status status="PASS" starttime="20220704 14:18:38.589" endtime="20220704 14:18:38.979"/>
</kw>
<doc>List Tests</doc>
<status status="PASS" starttime="20220704 14:18:09.132" endtime="20220704 14:18:38.979"/>
</suite>
<suite id="s1-s2-s1-s5" name="Trello Gui Login" source="/trello/gui/trello_gui_login.robot">
<test id="s1-s2-s1-s5-t1" name="Login With A Valid User and Password" line="7">
<kw name="Open Browser From Environment" library="CommonGUI">
<arg>${LOGIN_URL}</arg>
<doc>This keywords takes REMOTE and BROWSER variables
from the environment automatically and only needs a url</doc>
<if>
<branch type="IF" condition="${is_remote}">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${url}</arg>
<arg>${BROWSER}</arg>
<arg>remote_url=http://selenium-hub:4444</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20220704 14:18:38.988" level="INFO">Opening browser 'chrome' to base url 'https://trello.com/login' through remote server at 'http://selenium-hub:4444'.</msg>
<status status="PASS" starttime="20220704 14:18:38.988" endtime="20220704 14:18:40.186"/>
</kw>
<status status="PASS" starttime="20220704 14:18:38.988" endtime="20220704 14:18:40.186"/>
</branch>
<branch type="ELSE">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${url}</arg>
<arg>${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<status status="NOT RUN" starttime="20220704 14:18:40.186" endtime="20220704 14:18:40.186"/>
</kw>
<status status="NOT RUN" starttime="20220704 14:18:40.186" endtime="20220704 14:18:40.186"/>
</branch>
<status status="PASS" starttime="20220704 14:18:38.988" endtime="20220704 14:18:40.186"/>
</if>
<status status="PASS" starttime="20220704 14:18:38.987" endtime="20220704 14:18:40.186"/>
</kw>
<kw name="Enter Username" library="LoginPage">
<arg>${DEFAULT_EMAIL}</arg>
<doc>Take a username as argument and
enters it in the user_input</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${USER_INPUT}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 14:18:40.187" endtime="20220704 14:18:40.260"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${USER_INPUT}</arg>
<arg>${username}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220704 14:18:40.260" level="INFO">Typing text 'bootcamp04@mailinator.com' into text field 'css:input#user'.</msg>
<status status="PASS" starttime="20220704 14:18:40.260" endtime="20220704 14:18:40.422"/>
</kw>
<status status="PASS" starttime="20220704 14:18:40.186" endtime="20220704 14:18:40.422"/>
</kw>
<kw name="Wait Until Element Is Not Visible" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<doc>Waits until the element ``locator`` is not visible.</doc>
<status status="PASS" starttime="20220704 14:18:40.422" endtime="20220704 14:18:41.139"/>
</kw>
<kw name="Click Login Button" library="LoginPage">
<doc>Clicks Trello's login button if in Trello's
login page, else it clicks Atlassian's</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220704 14:18:41.149" level="INFO">${url} = https://trello.com/login</msg>
<status status="PASS" starttime="20220704 14:18:41.140" endtime="20220704 14:18:41.149"/>
</kw>
<if>
<branch type="IF" condition="'${url}' == '${LOGIN_URL}'">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220704 14:18:41.149" endtime="20220704 14:18:41.189"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220704 14:18:41.190" level="INFO">Clicking button 'css:input#login'.</msg>
<status status="PASS" starttime="20220704 14:18:41.190" endtime="20220704 14:18:42.170"/>
</kw>
<status status="PASS" starttime="20220704 14:18:41.149" endtime="20220704 14:18:42.170"/>
</branch>
<branch type="ELSE">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="NOT RUN" starttime="20220704 14:18:42.170" endtime="20220704 14:18:42.170"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<status status="NOT RUN" starttime="20220704 14:18:42.170" endtime="20220704 14:18:42.170"/>
</kw>
<status status="NOT RUN" starttime="20220704 14:18:42.170" endtime="20220704 14:18:42.170"/>
</branch>
<status status="PASS" starttime="20220704 14:18:41.149" endtime="20220704 14:18:42.170"/>
</if>
<status status="PASS" starttime="20220704 14:18:41.140" endtime="20220704 14:18:42.171"/>
</kw>
<kw name="Wait Until Location Is Atlassian's Login" library="LoginPage">
<doc>Waits for the page redirection when logging in.</doc>
<kw name="Wait Until Location Contains" library="SeleniumLibrary">
<arg>atlassian.com</arg>
<doc>Waits until the current URL contains ``expected``.</doc>
<status status="PASS" starttime="20220704 14:18:42.171" endtime="20220704 14:18:42.217"/>
</kw>
<status status="PASS" starttime="20220704 14:18:42.171" endtime="20220704 14:18:42.217"/>
</kw>
<kw name="Enter Password" library="LoginPage">
<arg>${DEFAULT_PASSWORD}</arg>
<doc>Take a password as argument and
enters it in the password_input</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<arg>timeout=10</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 14:18:42.218" endtime="20220704 14:18:42.263"/>
</kw>
<kw name="Input Password" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<arg>${password}</arg>
<doc>Types the given password into the text field identified by ``locator``.</doc>
<msg timestamp="20220704 14:18:42.263" level="INFO">Typing password into text field 'css:input#password'.</msg>
<msg timestamp="20220704 14:18:42.328" level="INFO">Temporally setting log level to: NONE</msg>
<msg timestamp="20220704 14:18:42.393" level="INFO">Log level changed from NONE to INFO.</msg>
<status status="PASS" starttime="20220704 14:18:42.263" endtime="20220704 14:18:42.393"/>
</kw>
<status status="PASS" starttime="20220704 14:18:42.218" endtime="20220704 14:18:42.393"/>
</kw>
<kw name="Click Login Button" library="LoginPage">
<doc>Clicks Trello's login button if in Trello's
login page, else it clicks Atlassian's</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220704 14:18:42.402" level="INFO">${url} = https://id.atlassian.com/login?application=trello&amp;continue=https%3A%2F%2Ftrello.com%2Fauth%2Fatlassian%2Fcallback%3FreturnUrl%3D%252F%26display%3D%26aaOnboarding%3D%26updateEmail%3D%26traceId%3D62c2f6...</msg>
<status status="PASS" starttime="20220704 14:18:42.394" endtime="20220704 14:18:42.402"/>
</kw>
<if>
<branch type="IF" condition="'${url}' == '${LOGIN_URL}'">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="NOT RUN" starttime="20220704 14:18:42.402" endtime="20220704 14:18:42.402"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<status status="NOT RUN" starttime="20220704 14:18:42.402" endtime="20220704 14:18:42.402"/>
</kw>
<status status="NOT RUN" starttime="20220704 14:18:42.402" endtime="20220704 14:18:42.402"/>
</branch>
<branch type="ELSE">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220704 14:18:42.402" endtime="20220704 14:18:42.445"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220704 14:18:42.445" level="INFO">Clicking button 'css:button#login-submit'.</msg>
<status status="PASS" starttime="20220704 14:18:42.445" endtime="20220704 14:18:42.549"/>
</kw>
<status status="PASS" starttime="20220704 14:18:42.402" endtime="20220704 14:18:42.549"/>
</branch>
<status status="PASS" starttime="20220704 14:18:42.402" endtime="20220704 14:18:42.549"/>
</if>
<status status="PASS" starttime="20220704 14:18:42.393" endtime="20220704 14:18:42.549"/>
</kw>
<kw name="Verify Current Page Is Boards Page" library="BoardsPage">
<doc>Assert that the browser is showing the boards page.</doc>
<kw name="Wait Until Location Contains" library="SeleniumLibrary">
<arg>${BOARDS_PATH}</arg>
<doc>Waits until the current URL contains ``expected``.</doc>
<status status="PASS" starttime="20220704 14:18:42.550" endtime="20220704 14:18:46.021"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${YOUR_WORKSPACES}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 14:18:46.022" endtime="20220704 14:18:46.068"/>
</kw>
<kw name="Element Text Should Be" library="SeleniumLibrary">
<arg>${YOUR_WORKSPACES}</arg>
<arg>YOUR WORKSPACES</arg>
<doc>Verifies that element ``locator`` contains exact the text ``expected``.</doc>
<msg timestamp="20220704 14:18:46.069" level="INFO">Verifying element 'css:h3.boards-page-section-header-name' contains exact text 'YOUR WORKSPACES'.</msg>
<status status="PASS" starttime="20220704 14:18:46.068" endtime="20220704 14:18:46.100"/>
</kw>
<status status="PASS" starttime="20220704 14:18:42.550" endtime="20220704 14:18:46.100"/>
</kw>
<kw name="Close Browser" library="SeleniumLibrary" type="TEARDOWN">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20220704 14:18:46.100" endtime="20220704 14:18:46.179"/>
</kw>
<doc>Verify that it is possible to login through
Trello's GUI using a valid email and password.</doc>
<tag>gui</tag>
<tag>login</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220704 14:18:38.987" endtime="20220704 14:18:46.179"/>
</test>
<doc>Example Trello Login Test</doc>
<status status="PASS" starttime="20220704 14:18:38.981" endtime="20220704 14:18:46.181"/>
</suite>
<status status="PASS" starttime="20220704 14:16:35.608" endtime="20220704 14:18:46.184"/>
</suite>
<status status="PASS" starttime="20220704 14:16:35.589" endtime="20220704 14:18:46.188"/>
</suite>
<status status="PASS" starttime="N/A" endtime="N/A" elapsedtime="148050"/>
</suite>
<statistics>
<total>
<stat pass="33" fail="0" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="18" fail="0" skip="0">api</stat>
<stat pass="2" fail="0" skip="0">board.create</stat>
<stat pass="2" fail="0" skip="0">board.delete</stat>
<stat pass="1" fail="0" skip="0">board.get</stat>
<stat pass="2" fail="0" skip="0">board.update</stat>
<stat pass="1" fail="0" skip="0">board.update.description</stat>
<stat pass="1" fail="0" skip="0">board.update.name</stat>
<stat pass="1" fail="0" skip="0">card.close</stat>
<stat pass="1" fail="0" skip="0">card.comment</stat>
<stat pass="2" fail="0" skip="0">card.create</stat>
<stat pass="2" fail="0" skip="0">card.delete</stat>
<stat pass="1" fail="0" skip="0">card.drag</stat>
<stat pass="1" fail="0" skip="0">card.move</stat>
<stat pass="1" fail="0" skip="0">card.title_board</stat>
<stat pass="1" fail="0" skip="0">card.update</stat>
<stat pass="1" fail="0" skip="0">checklist.create</stat>
<stat pass="1" fail="0" skip="0">checklist.delete</stat>
<stat pass="1" fail="0" skip="0">checklist.update</stat>
<stat pass="15" fail="0" skip="0">gui</stat>
<stat pass="1" fail="0" skip="0">label.create</stat>
<stat pass="1" fail="0" skip="0">label.delete</stat>
<stat pass="1" fail="0" skip="0">label.get</stat>
<stat pass="1" fail="0" skip="0">label.update</stat>
<stat pass="2" fail="0" skip="0">list.archive</stat>
<stat pass="3" fail="0" skip="0">list.create</stat>
<stat pass="2" fail="0" skip="0">list.update</stat>
<stat pass="1" fail="0" skip="0">login</stat>
<stat pass="9" fail="0" skip="0">regression</stat>
<stat pass="24" fail="0" skip="0">smoke</stat>
</tag>
<suite>
<stat pass="33" fail="0" skip="0" id="s1" name="Trello">Trello</stat>
<stat pass="18" fail="0" skip="0" id="s1-s1" name="Trello">Trello.Trello</stat>
<stat pass="18" fail="0" skip="0" id="s1-s1-s1" name="Api">Trello.Trello.Api</stat>
<stat pass="5" fail="0" skip="0" id="s1-s1-s1-s1" name="Trello Api Boards Tests">Trello.Trello.Api.Trello Api Boards Tests</stat>
<stat pass="4" fail="0" skip="0" id="s1-s1-s1-s2" name="Trello Api Cards Tests">Trello.Trello.Api.Trello Api Cards Tests</stat>
<stat pass="3" fail="0" skip="0" id="s1-s1-s1-s3" name="Trello Api Checklists Tests">Trello.Trello.Api.Trello Api Checklists Tests</stat>
<stat pass="3" fail="0" skip="0" id="s1-s1-s1-s4" name="Trello Api Labels Tests">Trello.Trello.Api.Trello Api Labels Tests</stat>
<stat pass="3" fail="0" skip="0" id="s1-s1-s1-s5" name="Trello Api Lists Tests">Trello.Trello.Api.Trello Api Lists Tests</stat>
<stat pass="15" fail="0" skip="0" id="s1-s2" name="Trello">Trello.Trello</stat>
<stat pass="15" fail="0" skip="0" id="s1-s2-s1" name="Gui">Trello.Trello.Gui</stat>
<stat pass="4" fail="0" skip="0" id="s1-s2-s1-s1" name="Trello Gui Board">Trello.Trello.Gui.Trello Gui Board</stat>
<stat pass="6" fail="0" skip="0" id="s1-s2-s1-s2" name="Trello Gui Cards">Trello.Trello.Gui.Trello Gui Cards</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s1-s3" name="Trello Gui Labels">Trello.Trello.Gui.Trello Gui Labels</stat>
<stat pass="3" fail="0" skip="0" id="s1-s2-s1-s4" name="Trello Gui Lists">Trello.Trello.Gui.Trello Gui Lists</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s1-s5" name="Trello Gui Login">Trello.Trello.Gui.Trello Gui Login</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
