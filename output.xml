<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Rebot 5.0.1 (Python 3.10.5 on linux)" generated="20220704 15:29:16.977" rpa="false" schemaversion="3">
<suite id="s1" name="Trello">
<suite id="s1-s1" name="Trello" source="/trello">
<suite id="s1-s1-s1" name="Api" source="/trello/api">
<suite id="s1-s1-s1-s1" name="Trello Api Boards Tests" source="/trello/api/trello_api_boards_tests.robot">
<kw name="Create Trello Session" library="TrelloAPI" type="SETUP">
<doc>Creates a Trello Session</doc>
<kw name="Create Session" library="request_own_library">
<arg>${API_BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<status status="PASS" starttime="20220704 14:15:36.737" endtime="20220704 14:15:36.737"/>
</kw>
<status status="PASS" starttime="20220704 14:15:36.736" endtime="20220704 14:15:36.737"/>
</kw>
<test id="s1-s1-s1-s1-t1" name="CREATE a board" line="9">
<kw name="Create A Board" library="Board">
<var>${response}</var>
<arg>NewBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 14:15:36.739" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 14:15:36.739" endtime="20220704 14:15:36.739"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 14:15:36.739" endtime="20220704 14:15:36.740"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:15:36.740" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220704 14:15:36.740" endtime="20220704 14:15:36.740"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 14:15:37.121" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:36.741" endtime="20220704 14:15:37.121"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:15:37.121" endtime="20220704 14:15:37.121"/>
</return>
<msg timestamp="20220704 14:15:37.121" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:36.739" endtime="20220704 14:15:37.121"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:15:37.121" endtime="20220704 14:15:37.121"/>
</return>
<msg timestamp="20220704 14:15:37.121" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:36.738" endtime="20220704 14:15:37.121"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>board</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220704 14:15:37.122" endtime="20220704 14:15:37.126"/>
</kw>
<status status="PASS" starttime="20220704 14:15:37.121" endtime="20220704 14:15:37.126"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${response.json()}[id]</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${response.json()}[id]</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:15:37.129" level="INFO">${url} = boards/62c2f6088ca98b5e4aa92aa4</msg>
<status status="PASS" starttime="20220704 14:15:37.128" endtime="20220704 14:15:37.129"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 14:15:37.656" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:37.129" endtime="20220704 14:15:37.656"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:15:37.656" endtime="20220704 14:15:37.656"/>
</return>
<msg timestamp="20220704 14:15:37.656" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:37.128" endtime="20220704 14:15:37.656"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:15:37.657" endtime="20220704 14:15:37.657"/>
</return>
<status status="PASS" starttime="20220704 14:15:37.127" endtime="20220704 14:15:37.657"/>
</kw>
<status status="PASS" starttime="20220704 14:15:37.127" endtime="20220704 14:15:37.657"/>
</kw>
<doc>Verify that a board can be create through API</doc>
<tag>api</tag>
<tag>board.create</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220704 14:15:36.738" endtime="20220704 14:15:37.657"/>
</test>
<test id="s1-s1-s1-s1-t2" name="UPDATE a Board's name" line="16">
<kw name="Create A Board" library="Board">
<var>${response}</var>
<arg>NewBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 14:15:37.660" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 14:15:37.660" endtime="20220704 14:15:37.660"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 14:15:37.660" endtime="20220704 14:15:37.660"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:15:37.661" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220704 14:15:37.660" endtime="20220704 14:15:37.661"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 14:15:37.923" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:37.661" endtime="20220704 14:15:37.923"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:15:37.923" endtime="20220704 14:15:37.923"/>
</return>
<msg timestamp="20220704 14:15:37.924" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:37.659" endtime="20220704 14:15:37.924"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:15:37.924" endtime="20220704 14:15:37.924"/>
</return>
<msg timestamp="20220704 14:15:37.924" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:37.658" endtime="20220704 14:15:37.924"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>board</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220704 14:15:37.924" endtime="20220704 14:15:37.928"/>
</kw>
<status status="PASS" starttime="20220704 14:15:37.924" endtime="20220704 14:15:37.928"/>
</kw>
<kw name="Update A Board" library="Board">
<arg>${response.json()}[id]</arg>
<arg>name</arg>
<arg>NewName</arg>
<doc>Updates the board with the given ID
optional_args: name, desc, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 14:15:37.930" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 14:15:37.930" endtime="20220704 14:15:37.930"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 14:15:37.930" endtime="20220704 14:15:37.930"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:15:37.931" level="INFO">${url} = boards/62c2f609ef3d4f2bf3e17a54</msg>
<status status="PASS" starttime="20220704 14:15:37.930" endtime="20220704 14:15:37.931"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 14:15:38.107" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:37.931" endtime="20220704 14:15:38.107"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:15:38.107" endtime="20220704 14:15:38.107"/>
</return>
<msg timestamp="20220704 14:15:38.107" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:37.929" endtime="20220704 14:15:38.107"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:15:38.107" endtime="20220704 14:15:38.107"/>
</return>
<status status="PASS" starttime="20220704 14:15:37.929" endtime="20220704 14:15:38.107"/>
</kw>
<kw name="Get A Board" library="Board">
<var>${new_response}</var>
<arg>${response.json()}[id]</arg>
<doc>Gets the Board with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:15:38.109" level="INFO">${url} = boards/62c2f609ef3d4f2bf3e17a54</msg>
<status status="PASS" starttime="20220704 14:15:38.109" endtime="20220704 14:15:38.109"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 14:15:38.248" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:38.109" endtime="20220704 14:15:38.248"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:15:38.248" endtime="20220704 14:15:38.248"/>
</return>
<msg timestamp="20220704 14:15:38.248" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:38.108" endtime="20220704 14:15:38.248"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:15:38.248" endtime="20220704 14:15:38.248"/>
</return>
<msg timestamp="20220704 14:15:38.249" level="INFO">${new_response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:38.107" endtime="20220704 14:15:38.249"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${new_response}</arg>
<arg>board</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220704 14:15:38.249" endtime="20220704 14:15:38.253"/>
</kw>
<status status="PASS" starttime="20220704 14:15:38.249" endtime="20220704 14:15:38.253"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${new_response.json()}[name]</arg>
<arg>NewName</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220704 14:15:38.253" endtime="20220704 14:15:38.254"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${response.json()}[id]</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${response.json()}[id]</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:15:38.256" level="INFO">${url} = boards/62c2f609ef3d4f2bf3e17a54</msg>
<status status="PASS" starttime="20220704 14:15:38.256" endtime="20220704 14:15:38.256"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 14:15:38.668" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:38.256" endtime="20220704 14:15:38.668"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:15:38.668" endtime="20220704 14:15:38.668"/>
</return>
<msg timestamp="20220704 14:15:38.668" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:38.255" endtime="20220704 14:15:38.668"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:15:38.668" endtime="20220704 14:15:38.668"/>
</return>
<status status="PASS" starttime="20220704 14:15:38.254" endtime="20220704 14:15:38.669"/>
</kw>
<status status="PASS" starttime="20220704 14:15:38.254" endtime="20220704 14:15:38.669"/>
</kw>
<doc>Verify that a board's name can be updated through API</doc>
<tag>api</tag>
<tag>board.update</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220704 14:15:37.657" endtime="20220704 14:15:38.669"/>
</test>
<test id="s1-s1-s1-s1-t3" name="DELETE A Board" line="27">
<kw name="Create A Board" library="Board">
<var>${response}</var>
<arg>NewBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 14:15:38.671" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 14:15:38.671" endtime="20220704 14:15:38.671"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 14:15:38.671" endtime="20220704 14:15:38.671"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:15:38.672" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220704 14:15:38.671" endtime="20220704 14:15:38.672"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 14:15:38.988" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:38.672" endtime="20220704 14:15:38.988"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:15:38.988" endtime="20220704 14:15:38.988"/>
</return>
<msg timestamp="20220704 14:15:38.989" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:38.670" endtime="20220704 14:15:38.989"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:15:38.989" endtime="20220704 14:15:38.989"/>
</return>
<msg timestamp="20220704 14:15:38.989" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:38.670" endtime="20220704 14:15:38.989"/>
</kw>
<kw name="Delete A Board" library="Board">
<arg>${response.json()}[id]</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:15:38.991" level="INFO">${url} = boards/62c2f60aef5e0e3f1f91adbd</msg>
<status status="PASS" starttime="20220704 14:15:38.991" endtime="20220704 14:15:38.991"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 14:15:39.647" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:38.991" endtime="20220704 14:15:39.647"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:15:39.648" endtime="20220704 14:15:39.648"/>
</return>
<msg timestamp="20220704 14:15:39.648" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:38.990" endtime="20220704 14:15:39.648"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:15:39.648" endtime="20220704 14:15:39.648"/>
</return>
<status status="PASS" starttime="20220704 14:15:38.989" endtime="20220704 14:15:39.648"/>
</kw>
<kw name="Get A Board" library="Board">
<arg>${response.json()}[id]</arg>
<arg>status_code=404</arg>
<doc>Gets the Board with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:15:39.650" level="INFO">${url} = boards/62c2f60aef5e0e3f1f91adbd</msg>
<status status="PASS" starttime="20220704 14:15:39.650" endtime="20220704 14:15:39.650"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 14:15:39.773" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220704 14:15:39.650" endtime="20220704 14:15:39.773"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:15:39.774" endtime="20220704 14:15:39.774"/>
</return>
<msg timestamp="20220704 14:15:39.774" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220704 14:15:39.649" endtime="20220704 14:15:39.774"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:15:39.774" endtime="20220704 14:15:39.774"/>
</return>
<status status="PASS" starttime="20220704 14:15:39.648" endtime="20220704 14:15:39.774"/>
</kw>
<doc>Verify that a board can be deleted through API</doc>
<tag>api</tag>
<tag>board.delete</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220704 14:15:38.669" endtime="20220704 14:15:39.774"/>
</test>
<test id="s1-s1-s1-s1-t4" name="GET Information of A Board" line="34">
<kw name="Create A Board" library="Board">
<var>${response}</var>
<arg>BoardTest</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 14:15:39.777" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 14:15:39.777" endtime="20220704 14:15:39.777"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 14:15:39.777" endtime="20220704 14:15:39.778"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:15:39.779" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220704 14:15:39.778" endtime="20220704 14:15:39.779"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 14:15:40.029" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:39.779" endtime="20220704 14:15:40.029"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:15:40.029" endtime="20220704 14:15:40.029"/>
</return>
<msg timestamp="20220704 14:15:40.029" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:39.777" endtime="20220704 14:15:40.029"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:15:40.029" endtime="20220704 14:15:40.029"/>
</return>
<msg timestamp="20220704 14:15:40.029" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:39.776" endtime="20220704 14:15:40.030"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>board</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220704 14:15:40.030" endtime="20220704 14:15:40.034"/>
</kw>
<status status="PASS" starttime="20220704 14:15:40.030" endtime="20220704 14:15:40.035"/>
</kw>
<kw name="Get A Board" library="Board">
<var>${response2}</var>
<arg>${response.json()}[id]</arg>
<doc>Gets the Board with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:15:40.036" level="INFO">${url} = boards/62c2f60b87c6192d8cdf6ed2</msg>
<status status="PASS" starttime="20220704 14:15:40.036" endtime="20220704 14:15:40.036"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 14:15:40.174" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:40.037" endtime="20220704 14:15:40.174"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:15:40.174" endtime="20220704 14:15:40.174"/>
</return>
<msg timestamp="20220704 14:15:40.175" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:40.036" endtime="20220704 14:15:40.175"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:15:40.175" endtime="20220704 14:15:40.175"/>
</return>
<msg timestamp="20220704 14:15:40.175" level="INFO">${response2} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:40.035" endtime="20220704 14:15:40.175"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response2}</arg>
<arg>board</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220704 14:15:40.176" endtime="20220704 14:15:40.180"/>
</kw>
<status status="PASS" starttime="20220704 14:15:40.175" endtime="20220704 14:15:40.180"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${response2.json()}[name]</arg>
<arg>BoardTest</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220704 14:15:40.180" endtime="20220704 14:15:40.181"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${response.json()}[id]</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${response.json()}[id]</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:15:40.183" level="INFO">${url} = boards/62c2f60b87c6192d8cdf6ed2</msg>
<status status="PASS" starttime="20220704 14:15:40.182" endtime="20220704 14:15:40.183"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 14:15:40.691" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:40.183" endtime="20220704 14:15:40.691"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:15:40.691" endtime="20220704 14:15:40.691"/>
</return>
<msg timestamp="20220704 14:15:40.691" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:40.182" endtime="20220704 14:15:40.691"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:15:40.691" endtime="20220704 14:15:40.691"/>
</return>
<status status="PASS" starttime="20220704 14:15:40.181" endtime="20220704 14:15:40.691"/>
</kw>
<status status="PASS" starttime="20220704 14:15:40.181" endtime="20220704 14:15:40.692"/>
</kw>
<doc>Verify that a board's information can be accesed through API</doc>
<tag>api</tag>
<tag>board.get</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220704 14:15:39.775" endtime="20220704 14:15:40.692"/>
</test>
<test id="s1-s1-s1-s1-t5" name="UPDATE a Board's description" line="45">
<kw name="Create A Board" library="Board">
<var>${response}</var>
<arg>NewBoardForTest</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 14:15:40.694" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 14:15:40.694" endtime="20220704 14:15:40.694"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 14:15:40.694" endtime="20220704 14:15:40.694"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:15:40.695" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220704 14:15:40.694" endtime="20220704 14:15:40.695"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 14:15:40.971" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:40.695" endtime="20220704 14:15:40.971"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:15:40.971" endtime="20220704 14:15:40.971"/>
</return>
<msg timestamp="20220704 14:15:40.972" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:40.693" endtime="20220704 14:15:40.972"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:15:40.972" endtime="20220704 14:15:40.972"/>
</return>
<msg timestamp="20220704 14:15:40.972" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:40.693" endtime="20220704 14:15:40.972"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>board</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220704 14:15:40.972" endtime="20220704 14:15:40.977"/>
</kw>
<status status="PASS" starttime="20220704 14:15:40.972" endtime="20220704 14:15:40.977"/>
</kw>
<kw name="Update A Board" library="Board">
<arg>${response.json()}[id]</arg>
<arg>desc</arg>
<arg>sampleDescription</arg>
<doc>Updates the board with the given ID
optional_args: name, desc, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 14:15:40.979" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 14:15:40.979" endtime="20220704 14:15:40.979"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 14:15:40.979" endtime="20220704 14:15:40.979"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:15:40.980" level="INFO">${url} = boards/62c2f60c3cff9530c4d70d3d</msg>
<status status="PASS" starttime="20220704 14:15:40.979" endtime="20220704 14:15:40.980"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 14:15:41.155" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:40.980" endtime="20220704 14:15:41.155"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:15:41.155" endtime="20220704 14:15:41.156"/>
</return>
<msg timestamp="20220704 14:15:41.156" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:40.978" endtime="20220704 14:15:41.156"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:15:41.156" endtime="20220704 14:15:41.156"/>
</return>
<status status="PASS" starttime="20220704 14:15:40.977" endtime="20220704 14:15:41.156"/>
</kw>
<kw name="Get A Board" library="Board">
<var>${new_response}</var>
<arg>${response.json()}[id]</arg>
<doc>Gets the Board with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:15:41.158" level="INFO">${url} = boards/62c2f60c3cff9530c4d70d3d</msg>
<status status="PASS" starttime="20220704 14:15:41.158" endtime="20220704 14:15:41.158"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 14:15:41.320" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:41.158" endtime="20220704 14:15:41.320"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:15:41.320" endtime="20220704 14:15:41.320"/>
</return>
<msg timestamp="20220704 14:15:41.321" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:41.157" endtime="20220704 14:15:41.321"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:15:41.321" endtime="20220704 14:15:41.321"/>
</return>
<msg timestamp="20220704 14:15:41.321" level="INFO">${new_response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:41.156" endtime="20220704 14:15:41.321"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${new_response.json()}[desc]</arg>
<arg>sampleDescription</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220704 14:15:41.321" endtime="20220704 14:15:41.322"/>
</kw>
<kw name="Update A Board" library="Board">
<arg>${response.json()}[id]</arg>
<arg>desc</arg>
<arg>updatedDescription</arg>
<doc>Updates the board with the given ID
optional_args: name, desc, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 14:15:41.324" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 14:15:41.324" endtime="20220704 14:15:41.324"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 14:15:41.324" endtime="20220704 14:15:41.324"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:15:41.325" level="INFO">${url} = boards/62c2f60c3cff9530c4d70d3d</msg>
<status status="PASS" starttime="20220704 14:15:41.324" endtime="20220704 14:15:41.325"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 14:15:41.517" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:41.325" endtime="20220704 14:15:41.517"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:15:41.517" endtime="20220704 14:15:41.517"/>
</return>
<msg timestamp="20220704 14:15:41.517" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:41.323" endtime="20220704 14:15:41.517"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:15:41.517" endtime="20220704 14:15:41.517"/>
</return>
<status status="PASS" starttime="20220704 14:15:41.322" endtime="20220704 14:15:41.517"/>
</kw>
<kw name="Get A Board" library="Board">
<var>${new_response2}</var>
<arg>${response.json()}[id]</arg>
<doc>Gets the Board with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:15:41.519" level="INFO">${url} = boards/62c2f60c3cff9530c4d70d3d</msg>
<status status="PASS" starttime="20220704 14:15:41.519" endtime="20220704 14:15:41.519"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 14:15:41.657" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:41.519" endtime="20220704 14:15:41.657"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:15:41.657" endtime="20220704 14:15:41.657"/>
</return>
<msg timestamp="20220704 14:15:41.658" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:41.518" endtime="20220704 14:15:41.658"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:15:41.658" endtime="20220704 14:15:41.658"/>
</return>
<msg timestamp="20220704 14:15:41.658" level="INFO">${new_response2} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:41.518" endtime="20220704 14:15:41.658"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${new_response2.json()}[desc]</arg>
<arg>updatedDescription</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220704 14:15:41.658" endtime="20220704 14:15:41.659"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${response.json()}[id]</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${response.json()}[id]</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:15:41.661" level="INFO">${url} = boards/62c2f60c3cff9530c4d70d3d</msg>
<status status="PASS" starttime="20220704 14:15:41.661" endtime="20220704 14:15:41.661"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 14:15:42.083" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:41.662" endtime="20220704 14:15:42.083"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:15:42.083" endtime="20220704 14:15:42.084"/>
</return>
<msg timestamp="20220704 14:15:42.084" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:41.661" endtime="20220704 14:15:42.084"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:15:42.084" endtime="20220704 14:15:42.084"/>
</return>
<status status="PASS" starttime="20220704 14:15:41.660" endtime="20220704 14:15:42.084"/>
</kw>
<status status="PASS" starttime="20220704 14:15:41.659" endtime="20220704 14:15:42.084"/>
</kw>
<doc>Verify that a board's description can be updated through API</doc>
<tag>api</tag>
<tag>board.update</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220704 14:15:40.692" endtime="20220704 14:15:42.084"/>
</test>
<kw name="Delete All Sessions" library="request_own_library" type="TEARDOWN">
<status status="PASS" starttime="20220704 14:15:42.085" endtime="20220704 14:15:42.086"/>
</kw>
<doc>Example Test with Trello API Boards</doc>
<status status="PASS" starttime="20220704 14:15:36.631" endtime="20220704 14:15:42.087"/>
</suite>
<suite id="s1-s1-s1-s2" name="Trello Api Cards Tests" source="/trello/api/trello_api_cards_tests.robot">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Create Trello Session</arg>
<arg>Setup Board And List</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Create Trello Session" library="TrelloAPI">
<doc>Creates a Trello Session</doc>
<kw name="Create Session" library="request_own_library">
<arg>${API_BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<status status="PASS" starttime="20220704 14:15:42.098" endtime="20220704 14:15:42.098"/>
</kw>
<status status="PASS" starttime="20220704 14:15:42.098" endtime="20220704 14:15:42.099"/>
</kw>
<kw name="Setup Board And List">
<doc>Create a board and save its ID and its first list's ID</doc>
<kw name="Create A Board" library="Board">
<var>${BOARD}</var>
<arg>TestBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 14:15:42.100" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 14:15:42.100" endtime="20220704 14:15:42.100"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 14:15:42.100" endtime="20220704 14:15:42.100"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:15:42.101" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220704 14:15:42.101" endtime="20220704 14:15:42.101"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 14:15:42.434" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:42.101" endtime="20220704 14:15:42.434"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:15:42.434" endtime="20220704 14:15:42.434"/>
</return>
<msg timestamp="20220704 14:15:42.434" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:42.100" endtime="20220704 14:15:42.434"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:15:42.434" endtime="20220704 14:15:42.434"/>
</return>
<msg timestamp="20220704 14:15:42.435" level="INFO">${BOARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:42.099" endtime="20220704 14:15:42.435"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_BOARD_ID}</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220704 14:15:42.436" level="INFO">${TEST_SUITE_BOARD_ID} = 62c2f60e66239270e28c98c1</msg>
<status status="PASS" starttime="20220704 14:15:42.435" endtime="20220704 14:15:42.436"/>
</kw>
<kw name="Get Lists On A Board" library="Board">
<var>${LISTS}</var>
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Get all the lists in a board</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>lists_on_board</arg>
<arg>${id}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:15:42.437" level="INFO">${url} = boards/62c2f60e66239270e28c98c1/lists/</msg>
<status status="PASS" starttime="20220704 14:15:42.436" endtime="20220704 14:15:42.437"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 14:15:42.578" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:42.437" endtime="20220704 14:15:42.578"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:15:42.578" endtime="20220704 14:15:42.578"/>
</return>
<msg timestamp="20220704 14:15:42.579" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:42.436" endtime="20220704 14:15:42.579"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:15:42.579" endtime="20220704 14:15:42.579"/>
</return>
<msg timestamp="20220704 14:15:42.579" level="INFO">${LISTS} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:42.436" endtime="20220704 14:15:42.579"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_LIST_ID}</arg>
<arg>${LISTS.json()}[0][id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220704 14:15:42.580" level="INFO">${TEST_SUITE_LIST_ID} = 62c2f60e66239270e28c98c8</msg>
<status status="PASS" starttime="20220704 14:15:42.579" endtime="20220704 14:15:42.580"/>
</kw>
<status status="PASS" starttime="20220704 14:15:42.099" endtime="20220704 14:15:42.580"/>
</kw>
<status status="PASS" starttime="20220704 14:15:42.098" endtime="20220704 14:15:42.580"/>
</kw>
<test id="s1-s1-s1-s2-t1" name="Verify A Card Can Be Created" line="13">
<kw name="Create A Card" library="Card">
<var>${response}</var>
<arg>name</arg>
<arg>RFCard2</arg>
<doc>Creates a new card in the given list.
required_args: listId
optional_args: name, desc, pos, idCardSource, idLabels, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>@{optional_args}</arg>
<arg>idList</arg>
<arg>${idList}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 14:15:42.582" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 14:15:42.582" endtime="20220704 14:15:42.582"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 14:15:42.582" endtime="20220704 14:15:42.583"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:15:42.584" level="INFO">${url} = cards/</msg>
<status status="PASS" starttime="20220704 14:15:42.583" endtime="20220704 14:15:42.584"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 14:15:42.872" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:42.584" endtime="20220704 14:15:42.872"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:15:42.872" endtime="20220704 14:15:42.872"/>
</return>
<msg timestamp="20220704 14:15:42.872" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:42.582" endtime="20220704 14:15:42.872"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:15:42.872" endtime="20220704 14:15:42.872"/>
</return>
<msg timestamp="20220704 14:15:42.873" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:42.581" endtime="20220704 14:15:42.873"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>card</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220704 14:15:42.873" endtime="20220704 14:15:42.878"/>
</kw>
<status status="PASS" starttime="20220704 14:15:42.873" endtime="20220704 14:15:42.878"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 14:15:42.879" endtime="20220704 14:15:42.879"/>
</return>
<msg timestamp="20220704 14:15:42.879" level="INFO">${CARD_ID} = 62c2f60e621f4c3f1b093589</msg>
<status status="PASS" starttime="20220704 14:15:42.878" endtime="20220704 14:15:42.879"/>
</kw>
<kw name="Get A Card" library="Card">
<var>${response}</var>
<arg>${CARD_ID}</arg>
<doc>Gets the card with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:15:42.881" level="INFO">${url} = cards/62c2f60e621f4c3f1b093589</msg>
<status status="PASS" starttime="20220704 14:15:42.880" endtime="20220704 14:15:42.881"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 14:15:43.037" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:42.881" endtime="20220704 14:15:43.037"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:15:43.038" endtime="20220704 14:15:43.038"/>
</return>
<msg timestamp="20220704 14:15:43.038" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:42.880" endtime="20220704 14:15:43.038"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:15:43.038" endtime="20220704 14:15:43.038"/>
</return>
<msg timestamp="20220704 14:15:43.038" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:42.880" endtime="20220704 14:15:43.038"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_NAME}</var>
<arg>${response}</arg>
<arg>name</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 14:15:43.039" endtime="20220704 14:15:43.039"/>
</return>
<msg timestamp="20220704 14:15:43.039" level="INFO">${CARD_NAME} = RFCard2</msg>
<status status="PASS" starttime="20220704 14:15:43.038" endtime="20220704 14:15:43.039"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${CARD_NAME}</arg>
<arg>RFCard2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220704 14:15:43.040" endtime="20220704 14:15:43.040"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Card</arg>
<arg>${CARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Card" library="Card">
<arg>${CARD_ID}</arg>
<doc>Deletes the card with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:15:43.041" level="INFO">${url} = cards/62c2f60e621f4c3f1b093589</msg>
<status status="PASS" starttime="20220704 14:15:43.041" endtime="20220704 14:15:43.041"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 14:15:43.288" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:43.041" endtime="20220704 14:15:43.288"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:15:43.288" endtime="20220704 14:15:43.289"/>
</return>
<msg timestamp="20220704 14:15:43.289" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:43.041" endtime="20220704 14:15:43.289"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:15:43.289" endtime="20220704 14:15:43.289"/>
</return>
<status status="PASS" starttime="20220704 14:15:43.040" endtime="20220704 14:15:43.289"/>
</kw>
<status status="PASS" starttime="20220704 14:15:43.040" endtime="20220704 14:15:43.289"/>
</kw>
<doc>Verify that a card can be created through API</doc>
<tag>api</tag>
<tag>card.create</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220704 14:15:42.580" endtime="20220704 14:15:43.289"/>
</test>
<test id="s1-s1-s1-s2-t2" name="Verify A Card Can Be Closed" line="24">
<kw name="Create A Card" library="Card">
<var>${response}</var>
<doc>Creates a new card in the given list.
required_args: listId
optional_args: name, desc, pos, idCardSource, idLabels, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>@{optional_args}</arg>
<arg>idList</arg>
<arg>${idList}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 14:15:43.292" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 14:15:43.292" endtime="20220704 14:15:43.292"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 14:15:43.293" endtime="20220704 14:15:43.293"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:15:43.294" level="INFO">${url} = cards/</msg>
<status status="PASS" starttime="20220704 14:15:43.293" endtime="20220704 14:15:43.294"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 14:15:43.522" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:43.294" endtime="20220704 14:15:43.523"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:15:43.523" endtime="20220704 14:15:43.523"/>
</return>
<msg timestamp="20220704 14:15:43.523" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:43.291" endtime="20220704 14:15:43.523"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:15:43.523" endtime="20220704 14:15:43.523"/>
</return>
<msg timestamp="20220704 14:15:43.523" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:43.291" endtime="20220704 14:15:43.523"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 14:15:43.524" endtime="20220704 14:15:43.524"/>
</return>
<msg timestamp="20220704 14:15:43.525" level="INFO">${CARD_ID} = 62c2f60feceeef71ca6108c3</msg>
<status status="PASS" starttime="20220704 14:15:43.523" endtime="20220704 14:15:43.525"/>
</kw>
<kw name="Archive A Card" library="Card">
<arg>${CARD_ID}</arg>
<doc>Modifies the card status to closed.</doc>
<kw name="Update A Card" library="Card">
<var>${response}</var>
<arg>${id}</arg>
<arg>closed</arg>
<arg>true</arg>
<arg>status_code=${status_code}</arg>
<doc>Updates the card with the given ID
optional_args: name, desc, closed, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<arg>status_code=${status_code}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 14:15:43.527" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 14:15:43.527" endtime="20220704 14:15:43.527"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 14:15:43.527" endtime="20220704 14:15:43.527"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:15:43.528" level="INFO">${url} = cards/62c2f60feceeef71ca6108c3</msg>
<status status="PASS" starttime="20220704 14:15:43.527" endtime="20220704 14:15:43.528"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 14:15:43.745" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:43.528" endtime="20220704 14:15:43.745"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:15:43.745" endtime="20220704 14:15:43.746"/>
</return>
<msg timestamp="20220704 14:15:43.746" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:43.526" endtime="20220704 14:15:43.746"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:15:43.746" endtime="20220704 14:15:43.746"/>
</return>
<msg timestamp="20220704 14:15:43.746" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:43.525" endtime="20220704 14:15:43.746"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:15:43.746" endtime="20220704 14:15:43.746"/>
</return>
<status status="PASS" starttime="20220704 14:15:43.525" endtime="20220704 14:15:43.746"/>
</kw>
<kw name="Get A Card" library="Card">
<var>${response}</var>
<arg>${CARD_ID}</arg>
<doc>Gets the card with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:15:43.748" level="INFO">${url} = cards/62c2f60feceeef71ca6108c3</msg>
<status status="PASS" starttime="20220704 14:15:43.748" endtime="20220704 14:15:43.748"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 14:15:43.898" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:43.748" endtime="20220704 14:15:43.898"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:15:43.898" endtime="20220704 14:15:43.899"/>
</return>
<msg timestamp="20220704 14:15:43.899" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:43.747" endtime="20220704 14:15:43.899"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:15:43.899" endtime="20220704 14:15:43.899"/>
</return>
<msg timestamp="20220704 14:15:43.899" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:43.747" endtime="20220704 14:15:43.899"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_CLOSED}</var>
<arg>${response}</arg>
<arg>closed</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 14:15:43.900" endtime="20220704 14:15:43.900"/>
</return>
<msg timestamp="20220704 14:15:43.901" level="INFO">${CARD_CLOSED} = True</msg>
<status status="PASS" starttime="20220704 14:15:43.899" endtime="20220704 14:15:43.901"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${CARD_CLOSED}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220704 14:15:43.901" endtime="20220704 14:15:43.901"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Card</arg>
<arg>${CARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Card" library="Card">
<arg>${CARD_ID}</arg>
<doc>Deletes the card with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:15:43.903" level="INFO">${url} = cards/62c2f60feceeef71ca6108c3</msg>
<status status="PASS" starttime="20220704 14:15:43.903" endtime="20220704 14:15:43.903"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 14:15:44.120" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:43.903" endtime="20220704 14:15:44.120"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:15:44.120" endtime="20220704 14:15:44.120"/>
</return>
<msg timestamp="20220704 14:15:44.120" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:43.902" endtime="20220704 14:15:44.120"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:15:44.120" endtime="20220704 14:15:44.120"/>
</return>
<status status="PASS" starttime="20220704 14:15:43.902" endtime="20220704 14:15:44.120"/>
</kw>
<status status="PASS" starttime="20220704 14:15:43.901" endtime="20220704 14:15:44.121"/>
</kw>
<doc>Verify that a card can be closed through API</doc>
<tag>api</tag>
<tag>card.close</tag>
<tag>regression</tag>
<status status="PASS" starttime="20220704 14:15:43.290" endtime="20220704 14:15:44.121"/>
</test>
<test id="s1-s1-s1-s2-t3" name="Verify A Card Can Be Deleted" line="35">
<kw name="Create A Card" library="Card">
<var>${response}</var>
<doc>Creates a new card in the given list.
required_args: listId
optional_args: name, desc, pos, idCardSource, idLabels, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>@{optional_args}</arg>
<arg>idList</arg>
<arg>${idList}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 14:15:44.123" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 14:15:44.123" endtime="20220704 14:15:44.123"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 14:15:44.123" endtime="20220704 14:15:44.124"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:15:44.124" level="INFO">${url} = cards/</msg>
<status status="PASS" starttime="20220704 14:15:44.124" endtime="20220704 14:15:44.124"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 14:15:44.378" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:44.124" endtime="20220704 14:15:44.378"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:15:44.378" endtime="20220704 14:15:44.378"/>
</return>
<msg timestamp="20220704 14:15:44.378" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:44.122" endtime="20220704 14:15:44.378"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:15:44.378" endtime="20220704 14:15:44.378"/>
</return>
<msg timestamp="20220704 14:15:44.379" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:44.122" endtime="20220704 14:15:44.379"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 14:15:44.379" endtime="20220704 14:15:44.379"/>
</return>
<msg timestamp="20220704 14:15:44.380" level="INFO">${CARD_ID} = 62c2f610efeb805844e45510</msg>
<status status="PASS" starttime="20220704 14:15:44.379" endtime="20220704 14:15:44.380"/>
</kw>
<kw name="Delete A Card" library="Card">
<var>${response}</var>
<arg>${CARD_ID}</arg>
<doc>Deletes the card with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:15:44.381" level="INFO">${url} = cards/62c2f610efeb805844e45510</msg>
<status status="PASS" starttime="20220704 14:15:44.381" endtime="20220704 14:15:44.381"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 14:15:44.636" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:44.381" endtime="20220704 14:15:44.636"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:15:44.636" endtime="20220704 14:15:44.636"/>
</return>
<msg timestamp="20220704 14:15:44.637" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:44.381" endtime="20220704 14:15:44.637"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:15:44.637" endtime="20220704 14:15:44.637"/>
</return>
<msg timestamp="20220704 14:15:44.637" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:44.380" endtime="20220704 14:15:44.637"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>delete</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220704 14:15:44.638" endtime="20220704 14:15:44.640"/>
</kw>
<status status="PASS" starttime="20220704 14:15:44.637" endtime="20220704 14:15:44.640"/>
</kw>
<kw name="Get A Card" library="Card">
<arg>${CARD_ID}</arg>
<arg>status_code=404</arg>
<doc>Gets the card with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:15:44.641" level="INFO">${url} = cards/62c2f610efeb805844e45510</msg>
<status status="PASS" starttime="20220704 14:15:44.641" endtime="20220704 14:15:44.641"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 14:15:44.771" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220704 14:15:44.641" endtime="20220704 14:15:44.771"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:15:44.771" endtime="20220704 14:15:44.772"/>
</return>
<msg timestamp="20220704 14:15:44.772" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220704 14:15:44.640" endtime="20220704 14:15:44.772"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:15:44.772" endtime="20220704 14:15:44.772"/>
</return>
<status status="PASS" starttime="20220704 14:15:44.640" endtime="20220704 14:15:44.772"/>
</kw>
<doc>Verify that a card can be deleted through API</doc>
<tag>api</tag>
<tag>card.delete</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220704 14:15:44.121" endtime="20220704 14:15:44.772"/>
</test>
<test id="s1-s1-s1-s2-t4" name="Verify A Card Can Be Updated" line="44">
<kw name="Create A Card" library="Card">
<var>${response}</var>
<arg>name</arg>
<arg>RFCard4</arg>
<doc>Creates a new card in the given list.
required_args: listId
optional_args: name, desc, pos, idCardSource, idLabels, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>@{optional_args}</arg>
<arg>idList</arg>
<arg>${idList}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 14:15:44.775" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 14:15:44.774" endtime="20220704 14:15:44.775"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 14:15:44.775" endtime="20220704 14:15:44.775"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:15:44.776" level="INFO">${url} = cards/</msg>
<status status="PASS" starttime="20220704 14:15:44.775" endtime="20220704 14:15:44.776"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 14:15:45.010" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:44.776" endtime="20220704 14:15:45.010"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:15:45.010" endtime="20220704 14:15:45.010"/>
</return>
<msg timestamp="20220704 14:15:45.011" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:44.774" endtime="20220704 14:15:45.011"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:15:45.011" endtime="20220704 14:15:45.011"/>
</return>
<msg timestamp="20220704 14:15:45.011" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:44.773" endtime="20220704 14:15:45.011"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 14:15:45.012" endtime="20220704 14:15:45.012"/>
</return>
<msg timestamp="20220704 14:15:45.012" level="INFO">${CARD_ID} = 62c2f6100cbd9053d3f04455</msg>
<status status="PASS" starttime="20220704 14:15:45.011" endtime="20220704 14:15:45.012"/>
</kw>
<kw name="Update A Card" library="Card">
<var>${response}</var>
<arg>${CARD_ID}</arg>
<arg>name</arg>
<arg>RFCard5</arg>
<arg>desc</arg>
<arg>Description</arg>
<doc>Updates the card with the given ID
optional_args: name, desc, closed, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<arg>status_code=${status_code}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 14:15:45.014" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 14:15:45.014" endtime="20220704 14:15:45.014"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 14:15:45.014" endtime="20220704 14:15:45.014"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:15:45.015" level="INFO">${url} = cards/62c2f6100cbd9053d3f04455</msg>
<status status="PASS" starttime="20220704 14:15:45.014" endtime="20220704 14:15:45.015"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 14:15:45.262" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:45.015" endtime="20220704 14:15:45.262"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:15:45.262" endtime="20220704 14:15:45.262"/>
</return>
<msg timestamp="20220704 14:15:45.262" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:45.013" endtime="20220704 14:15:45.262"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:15:45.262" endtime="20220704 14:15:45.262"/>
</return>
<msg timestamp="20220704 14:15:45.262" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:45.013" endtime="20220704 14:15:45.263"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>card</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220704 14:15:45.263" endtime="20220704 14:15:45.268"/>
</kw>
<status status="PASS" starttime="20220704 14:15:45.263" endtime="20220704 14:15:45.269"/>
</kw>
<kw name="Get A Card" library="Card">
<var>${response}</var>
<arg>${CARD_ID}</arg>
<doc>Gets the card with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:15:45.270" level="INFO">${url} = cards/62c2f6100cbd9053d3f04455</msg>
<status status="PASS" starttime="20220704 14:15:45.270" endtime="20220704 14:15:45.270"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 14:15:45.423" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:45.270" endtime="20220704 14:15:45.423"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:15:45.423" endtime="20220704 14:15:45.423"/>
</return>
<msg timestamp="20220704 14:15:45.424" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:45.269" endtime="20220704 14:15:45.424"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:15:45.424" endtime="20220704 14:15:45.424"/>
</return>
<msg timestamp="20220704 14:15:45.424" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:45.269" endtime="20220704 14:15:45.424"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_NAME}</var>
<arg>${response}</arg>
<arg>name</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 14:15:45.424" endtime="20220704 14:15:45.425"/>
</return>
<msg timestamp="20220704 14:15:45.425" level="INFO">${CARD_NAME} = RFCard5</msg>
<status status="PASS" starttime="20220704 14:15:45.424" endtime="20220704 14:15:45.425"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_DESC}</var>
<arg>${response}</arg>
<arg>desc</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 14:15:45.426" endtime="20220704 14:15:45.426"/>
</return>
<msg timestamp="20220704 14:15:45.427" level="INFO">${CARD_DESC} = Description</msg>
<status status="PASS" starttime="20220704 14:15:45.426" endtime="20220704 14:15:45.427"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${CARD_NAME}</arg>
<arg>RFCard5</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220704 14:15:45.427" endtime="20220704 14:15:45.427"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${CARD_DESC}</arg>
<arg>Description</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220704 14:15:45.427" endtime="20220704 14:15:45.427"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Card</arg>
<arg>${CARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Card" library="Card">
<arg>${CARD_ID}</arg>
<doc>Deletes the card with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:15:45.429" level="INFO">${url} = cards/62c2f6100cbd9053d3f04455</msg>
<status status="PASS" starttime="20220704 14:15:45.429" endtime="20220704 14:15:45.429"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 14:15:45.689" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:45.429" endtime="20220704 14:15:45.689"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:15:45.689" endtime="20220704 14:15:45.689"/>
</return>
<msg timestamp="20220704 14:15:45.690" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:45.428" endtime="20220704 14:15:45.690"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:15:45.690" endtime="20220704 14:15:45.690"/>
</return>
<status status="PASS" starttime="20220704 14:15:45.428" endtime="20220704 14:15:45.690"/>
</kw>
<status status="PASS" starttime="20220704 14:15:45.428" endtime="20220704 14:15:45.690"/>
</kw>
<doc>Verify that a card's name and Description can be updated through API</doc>
<tag>api</tag>
<tag>card.update</tag>
<tag>regression</tag>
<status status="PASS" starttime="20220704 14:15:44.773" endtime="20220704 14:15:45.690"/>
</test>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Teardown Board</arg>
<arg>Delete All Sessions</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Teardown Board">
<doc>Delete the board created for this suite</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:15:45.693" level="INFO">${url} = boards/62c2f60e66239270e28c98c1</msg>
<status status="PASS" starttime="20220704 14:15:45.693" endtime="20220704 14:15:45.693"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 14:15:46.158" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:45.693" endtime="20220704 14:15:46.158"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:15:46.159" endtime="20220704 14:15:46.159"/>
</return>
<msg timestamp="20220704 14:15:46.159" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:45.692" endtime="20220704 14:15:46.159"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:15:46.159" endtime="20220704 14:15:46.159"/>
</return>
<status status="PASS" starttime="20220704 14:15:45.691" endtime="20220704 14:15:46.159"/>
</kw>
<status status="PASS" starttime="20220704 14:15:45.691" endtime="20220704 14:15:46.159"/>
</kw>
<status status="PASS" starttime="20220704 14:15:45.691" endtime="20220704 14:15:46.159"/>
</kw>
<kw name="Delete All Sessions" library="request_own_library">
<status status="PASS" starttime="20220704 14:15:46.160" endtime="20220704 14:15:46.161"/>
</kw>
<status status="PASS" starttime="20220704 14:15:45.691" endtime="20220704 14:15:46.161"/>
</kw>
<doc>Example Test with Trello API Cards</doc>
<status status="PASS" starttime="20220704 14:15:42.088" endtime="20220704 14:15:46.161"/>
</suite>
<suite id="s1-s1-s1-s3" name="Trello Api Checklists Tests" source="/trello/api/trello_api_checklists_tests.robot">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Create Trello Session</arg>
<arg>Setup Board, List And Card</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Create Trello Session" library="TrelloAPI">
<doc>Creates a Trello Session</doc>
<kw name="Create Session" library="request_own_library">
<arg>${API_BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<status status="PASS" starttime="20220704 14:15:46.172" endtime="20220704 14:15:46.172"/>
</kw>
<status status="PASS" starttime="20220704 14:15:46.172" endtime="20220704 14:15:46.172"/>
</kw>
<kw name="Setup Board, List And Card">
<doc>Create a board and save its ID and its first list's ID</doc>
<kw name="Create A Board" library="Board">
<var>${BOARD}</var>
<arg>TestBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 14:15:46.173" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 14:15:46.173" endtime="20220704 14:15:46.173"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 14:15:46.173" endtime="20220704 14:15:46.174"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:15:46.174" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220704 14:15:46.174" endtime="20220704 14:15:46.174"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 14:15:46.553" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:46.174" endtime="20220704 14:15:46.553"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:15:46.553" endtime="20220704 14:15:46.553"/>
</return>
<msg timestamp="20220704 14:15:46.553" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:46.173" endtime="20220704 14:15:46.553"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:15:46.553" endtime="20220704 14:15:46.553"/>
</return>
<msg timestamp="20220704 14:15:46.553" level="INFO">${BOARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:46.172" endtime="20220704 14:15:46.554"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_BOARD_ID}</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220704 14:15:46.555" level="INFO">${TEST_SUITE_BOARD_ID} = 62c2f612eaf0e1105ae59184</msg>
<status status="PASS" starttime="20220704 14:15:46.554" endtime="20220704 14:15:46.555"/>
</kw>
<kw name="Get Lists On A Board" library="Board">
<var>${LISTS}</var>
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Get all the lists in a board</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>lists_on_board</arg>
<arg>${id}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:15:46.556" level="INFO">${url} = boards/62c2f612eaf0e1105ae59184/lists/</msg>
<status status="PASS" starttime="20220704 14:15:46.555" endtime="20220704 14:15:46.556"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 14:15:46.689" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:46.556" endtime="20220704 14:15:46.689"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:15:46.689" endtime="20220704 14:15:46.690"/>
</return>
<msg timestamp="20220704 14:15:46.690" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:46.555" endtime="20220704 14:15:46.690"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:15:46.690" endtime="20220704 14:15:46.690"/>
</return>
<msg timestamp="20220704 14:15:46.690" level="INFO">${LISTS} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:46.555" endtime="20220704 14:15:46.690"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_LIST_ID}</arg>
<arg>${LISTS.json()}[0][id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220704 14:15:46.691" level="INFO">${TEST_SUITE_LIST_ID} = 62c2f612eaf0e1105ae5918b</msg>
<status status="PASS" starttime="20220704 14:15:46.690" endtime="20220704 14:15:46.691"/>
</kw>
<kw name="Create A Card" library="Card">
<var>${CARD}</var>
<arg>name</arg>
<arg>TestCard</arg>
<doc>Creates a new card in the given list.
required_args: listId
optional_args: name, desc, pos, idCardSource, idLabels, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>@{optional_args}</arg>
<arg>idList</arg>
<arg>${idList}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 14:15:46.693" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 14:15:46.693" endtime="20220704 14:15:46.693"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 14:15:46.693" endtime="20220704 14:15:46.693"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:15:46.694" level="INFO">${url} = cards/</msg>
<status status="PASS" starttime="20220704 14:15:46.693" endtime="20220704 14:15:46.694"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 14:15:46.958" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:46.694" endtime="20220704 14:15:46.958"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:15:46.958" endtime="20220704 14:15:46.958"/>
</return>
<msg timestamp="20220704 14:15:46.958" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:46.692" endtime="20220704 14:15:46.958"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:15:46.958" endtime="20220704 14:15:46.958"/>
</return>
<msg timestamp="20220704 14:15:46.959" level="INFO">${CARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:46.691" endtime="20220704 14:15:46.959"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_CARD_ID}</arg>
<arg>${CARD.json()}[id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220704 14:15:46.960" level="INFO">${TEST_SUITE_CARD_ID} = 62c2f612d80ce88e0777f39f</msg>
<status status="PASS" starttime="20220704 14:15:46.959" endtime="20220704 14:15:46.960"/>
</kw>
<status status="PASS" starttime="20220704 14:15:46.172" endtime="20220704 14:15:46.960"/>
</kw>
<status status="PASS" starttime="20220704 14:15:46.171" endtime="20220704 14:15:46.960"/>
</kw>
<test id="s1-s1-s1-s3-t1" name="Verify A Checklist Can Be Created" line="14">
<kw name="Create A Checklist" library="Checklist">
<var>${response}</var>
<arg>name</arg>
<arg>TestChecklist</arg>
<arg>idCard=${TEST_SUITE_CARD_ID}</arg>
<doc>Creates a new checklist in the given card.
required_args: idCard
optional_args: name, pos, idChecklistSource
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>@{optional_args}</arg>
<arg>idCard</arg>
<arg>${idCard}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 14:15:46.962" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 14:15:46.962" endtime="20220704 14:15:46.962"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 14:15:46.962" endtime="20220704 14:15:46.963"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:15:46.963" level="INFO">${url} = checklists/</msg>
<status status="PASS" starttime="20220704 14:15:46.963" endtime="20220704 14:15:46.963"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 14:15:47.176" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:46.964" endtime="20220704 14:15:47.176"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:15:47.176" endtime="20220704 14:15:47.176"/>
</return>
<msg timestamp="20220704 14:15:47.176" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:46.961" endtime="20220704 14:15:47.176"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:15:47.176" endtime="20220704 14:15:47.176"/>
</return>
<msg timestamp="20220704 14:15:47.176" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:46.961" endtime="20220704 14:15:47.176"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${checklist_id}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 14:15:47.177" endtime="20220704 14:15:47.177"/>
</return>
<msg timestamp="20220704 14:15:47.178" level="INFO">${checklist_id} = 62c2f613c701224edb14cad4</msg>
<status status="PASS" starttime="20220704 14:15:47.177" endtime="20220704 14:15:47.178"/>
</kw>
<kw name="Get A Checklist" library="Checklist">
<var>${response}</var>
<arg>${checklist_id}</arg>
<doc>Gets the checklist with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:15:47.179" level="INFO">${url} = checklists/62c2f613c701224edb14cad4</msg>
<status status="PASS" starttime="20220704 14:15:47.179" endtime="20220704 14:15:47.179"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 14:15:47.325" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:47.179" endtime="20220704 14:15:47.325"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:15:47.326" endtime="20220704 14:15:47.326"/>
</return>
<msg timestamp="20220704 14:15:47.326" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:47.178" endtime="20220704 14:15:47.326"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:15:47.326" endtime="20220704 14:15:47.326"/>
</return>
<msg timestamp="20220704 14:15:47.326" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:47.178" endtime="20220704 14:15:47.326"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${checklist_name}</var>
<arg>${response}</arg>
<arg>name</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 14:15:47.327" endtime="20220704 14:15:47.327"/>
</return>
<msg timestamp="20220704 14:15:47.328" level="INFO">${checklist_name} = TestChecklist</msg>
<status status="PASS" starttime="20220704 14:15:47.327" endtime="20220704 14:15:47.328"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${checklist_name}</arg>
<arg>TestChecklist</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220704 14:15:47.328" endtime="20220704 14:15:47.328"/>
</kw>
<kw name="Delete A Checklist" library="Checklist" type="TEARDOWN">
<arg>${checklist_id}</arg>
<doc>Deletes the checklist with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:15:47.330" level="INFO">${url} = checklists/62c2f613c701224edb14cad4</msg>
<status status="PASS" starttime="20220704 14:15:47.329" endtime="20220704 14:15:47.330"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 14:15:47.525" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:47.330" endtime="20220704 14:15:47.525"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:15:47.525" endtime="20220704 14:15:47.525"/>
</return>
<msg timestamp="20220704 14:15:47.525" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:47.329" endtime="20220704 14:15:47.525"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:15:47.525" endtime="20220704 14:15:47.525"/>
</return>
<status status="PASS" starttime="20220704 14:15:47.328" endtime="20220704 14:15:47.525"/>
</kw>
<doc>Verify that a checklist can be created through API</doc>
<tag>api</tag>
<tag>checklist.create</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220704 14:15:46.960" endtime="20220704 14:15:47.525"/>
</test>
<test id="s1-s1-s1-s3-t2" name="Verify A Checklist Can Be Deleted" line="24">
<kw name="Create A Checklist" library="Checklist">
<var>${response}</var>
<arg>name</arg>
<arg>TestChecklist</arg>
<arg>idCard=${TEST_SUITE_CARD_ID}</arg>
<doc>Creates a new checklist in the given card.
required_args: idCard
optional_args: name, pos, idChecklistSource
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>@{optional_args}</arg>
<arg>idCard</arg>
<arg>${idCard}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 14:15:47.528" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 14:15:47.528" endtime="20220704 14:15:47.528"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 14:15:47.528" endtime="20220704 14:15:47.528"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:15:47.529" level="INFO">${url} = checklists/</msg>
<status status="PASS" starttime="20220704 14:15:47.528" endtime="20220704 14:15:47.529"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 14:15:47.752" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:47.529" endtime="20220704 14:15:47.752"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:15:47.752" endtime="20220704 14:15:47.752"/>
</return>
<msg timestamp="20220704 14:15:47.752" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:47.527" endtime="20220704 14:15:47.752"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:15:47.752" endtime="20220704 14:15:47.752"/>
</return>
<msg timestamp="20220704 14:15:47.753" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:47.526" endtime="20220704 14:15:47.753"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${checklist_id}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 14:15:47.753" endtime="20220704 14:15:47.753"/>
</return>
<msg timestamp="20220704 14:15:47.754" level="INFO">${checklist_id} = 62c2f613f364cd1bfea50c64</msg>
<status status="PASS" starttime="20220704 14:15:47.753" endtime="20220704 14:15:47.754"/>
</kw>
<kw name="Delete A Checklist" library="Checklist">
<var>${response}</var>
<arg>${checklist_id}</arg>
<doc>Deletes the checklist with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:15:47.756" level="INFO">${url} = checklists/62c2f613f364cd1bfea50c64</msg>
<status status="PASS" starttime="20220704 14:15:47.755" endtime="20220704 14:15:47.756"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 14:15:47.960" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:47.756" endtime="20220704 14:15:47.960"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:15:47.960" endtime="20220704 14:15:47.960"/>
</return>
<msg timestamp="20220704 14:15:47.960" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:47.755" endtime="20220704 14:15:47.960"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:15:47.960" endtime="20220704 14:15:47.960"/>
</return>
<msg timestamp="20220704 14:15:47.961" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:47.755" endtime="20220704 14:15:47.961"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>delete</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220704 14:15:47.961" endtime="20220704 14:15:47.963"/>
</kw>
<status status="PASS" starttime="20220704 14:15:47.961" endtime="20220704 14:15:47.963"/>
</kw>
<kw name="Get A Checklist" library="Checklist">
<arg>${checklist_id}</arg>
<arg>status_code=404</arg>
<doc>Gets the checklist with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:15:47.964" level="INFO">${url} = checklists/62c2f613f364cd1bfea50c64</msg>
<status status="PASS" starttime="20220704 14:15:47.964" endtime="20220704 14:15:47.964"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 14:15:48.090" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220704 14:15:47.965" endtime="20220704 14:15:48.090"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:15:48.090" endtime="20220704 14:15:48.090"/>
</return>
<msg timestamp="20220704 14:15:48.090" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220704 14:15:47.964" endtime="20220704 14:15:48.090"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:15:48.090" endtime="20220704 14:15:48.090"/>
</return>
<status status="PASS" starttime="20220704 14:15:47.963" endtime="20220704 14:15:48.090"/>
</kw>
<doc>Verify that a checklist can be deleted through API</doc>
<tag>api</tag>
<tag>checklist.delete</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220704 14:15:47.526" endtime="20220704 14:15:48.091"/>
</test>
<test id="s1-s1-s1-s3-t3" name="Verify A Checklist Can Be Updated" line="33">
<kw name="Create A Checklist" library="Checklist">
<var>${response}</var>
<arg>name</arg>
<arg>TestChecklist</arg>
<arg>idCard=${TEST_SUITE_CARD_ID}</arg>
<doc>Creates a new checklist in the given card.
required_args: idCard
optional_args: name, pos, idChecklistSource
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>@{optional_args}</arg>
<arg>idCard</arg>
<arg>${idCard}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 14:15:48.095" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 14:15:48.093" endtime="20220704 14:15:48.095"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 14:15:48.095" endtime="20220704 14:15:48.095"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:15:48.096" level="INFO">${url} = checklists/</msg>
<status status="PASS" starttime="20220704 14:15:48.095" endtime="20220704 14:15:48.096"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 14:15:48.306" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:48.096" endtime="20220704 14:15:48.306"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:15:48.307" endtime="20220704 14:15:48.307"/>
</return>
<msg timestamp="20220704 14:15:48.307" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:48.092" endtime="20220704 14:15:48.307"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:15:48.307" endtime="20220704 14:15:48.307"/>
</return>
<msg timestamp="20220704 14:15:48.307" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:48.092" endtime="20220704 14:15:48.307"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${checklist_id}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 14:15:48.308" endtime="20220704 14:15:48.308"/>
</return>
<msg timestamp="20220704 14:15:48.309" level="INFO">${checklist_id} = 62c2f6147e89595227397c94</msg>
<status status="PASS" starttime="20220704 14:15:48.307" endtime="20220704 14:15:48.309"/>
</kw>
<kw name="Update A Checklist" library="Checklist">
<var>${response}</var>
<arg>${checklist_id}</arg>
<arg>name</arg>
<arg>TestChecklist2</arg>
<doc>Updates the checklist with the given ID
optional_args: name, pos
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<arg>status_code=${status_code}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 14:15:48.310" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 14:15:48.310" endtime="20220704 14:15:48.310"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 14:15:48.310" endtime="20220704 14:15:48.310"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:15:48.311" level="INFO">${url} = checklists/62c2f6147e89595227397c94</msg>
<status status="PASS" starttime="20220704 14:15:48.310" endtime="20220704 14:15:48.311"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 14:15:48.497" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:48.311" endtime="20220704 14:15:48.497"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:15:48.497" endtime="20220704 14:15:48.497"/>
</return>
<msg timestamp="20220704 14:15:48.497" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:48.309" endtime="20220704 14:15:48.497"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:15:48.497" endtime="20220704 14:15:48.497"/>
</return>
<msg timestamp="20220704 14:15:48.497" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:48.309" endtime="20220704 14:15:48.498"/>
</kw>
<kw name="Get A Checklist" library="Checklist">
<var>${response}</var>
<arg>${checklist_id}</arg>
<doc>Gets the checklist with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:15:48.499" level="INFO">${url} = checklists/62c2f6147e89595227397c94</msg>
<status status="PASS" starttime="20220704 14:15:48.499" endtime="20220704 14:15:48.499"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 14:15:48.638" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:48.499" endtime="20220704 14:15:48.638"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:15:48.638" endtime="20220704 14:15:48.638"/>
</return>
<msg timestamp="20220704 14:15:48.639" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:48.498" endtime="20220704 14:15:48.639"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:15:48.639" endtime="20220704 14:15:48.639"/>
</return>
<msg timestamp="20220704 14:15:48.639" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:48.498" endtime="20220704 14:15:48.639"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${checklist_name}</var>
<arg>${response}</arg>
<arg>name</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 14:15:48.640" endtime="20220704 14:15:48.640"/>
</return>
<msg timestamp="20220704 14:15:48.640" level="INFO">${checklist_name} = TestChecklist2</msg>
<status status="PASS" starttime="20220704 14:15:48.639" endtime="20220704 14:15:48.640"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${checklist_name}</arg>
<arg>TestChecklist2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220704 14:15:48.641" endtime="20220704 14:15:48.641"/>
</kw>
<kw name="Delete A Checklist" library="Checklist" type="TEARDOWN">
<arg>${checklist_id}</arg>
<doc>Deletes the checklist with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:15:48.657" level="INFO">${url} = checklists/62c2f6147e89595227397c94</msg>
<status status="PASS" starttime="20220704 14:15:48.656" endtime="20220704 14:15:48.657"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 14:15:48.855" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:48.657" endtime="20220704 14:15:48.855"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:15:48.855" endtime="20220704 14:15:48.855"/>
</return>
<msg timestamp="20220704 14:15:48.856" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:48.656" endtime="20220704 14:15:48.856"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:15:48.856" endtime="20220704 14:15:48.856"/>
</return>
<status status="PASS" starttime="20220704 14:15:48.641" endtime="20220704 14:15:48.856"/>
</kw>
<doc>Verify that a checklist's name can be updated through API</doc>
<tag>api</tag>
<tag>checklist.update</tag>
<tag>regression</tag>
<status status="PASS" starttime="20220704 14:15:48.091" endtime="20220704 14:15:48.856"/>
</test>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Teardown Board</arg>
<arg>Delete All Sessions</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Teardown Board">
<doc>Delete the board created for this suite</doc>
<kw name="Delete A Board" library="Board">
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:15:48.859" level="INFO">${url} = boards/62c2f612eaf0e1105ae59184</msg>
<status status="PASS" starttime="20220704 14:15:48.858" endtime="20220704 14:15:48.859"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 14:15:49.297" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:48.859" endtime="20220704 14:15:49.297"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:15:49.297" endtime="20220704 14:15:49.297"/>
</return>
<msg timestamp="20220704 14:15:49.298" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:48.858" endtime="20220704 14:15:49.298"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:15:49.298" endtime="20220704 14:15:49.298"/>
</return>
<status status="PASS" starttime="20220704 14:15:48.858" endtime="20220704 14:15:49.298"/>
</kw>
<status status="PASS" starttime="20220704 14:15:48.857" endtime="20220704 14:15:49.298"/>
</kw>
<kw name="Delete All Sessions" library="request_own_library">
<status status="PASS" starttime="20220704 14:15:49.298" endtime="20220704 14:15:49.300"/>
</kw>
<status status="PASS" starttime="20220704 14:15:48.857" endtime="20220704 14:15:49.300"/>
</kw>
<doc>Example Test with Trello API Checklists</doc>
<status status="PASS" starttime="20220704 14:15:46.162" endtime="20220704 14:15:49.300"/>
</suite>
<suite id="s1-s1-s1-s4" name="Trello Api Labels Tests" source="/trello/api/trello_api_labels_tests.robot">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Create Trello Session</arg>
<arg>Setup Board And List</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Create Trello Session" library="TrelloAPI">
<doc>Creates a Trello Session</doc>
<kw name="Create Session" library="request_own_library">
<arg>${API_BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<status status="PASS" starttime="20220704 14:15:49.310" endtime="20220704 14:15:49.311"/>
</kw>
<status status="PASS" starttime="20220704 14:15:49.310" endtime="20220704 14:15:49.311"/>
</kw>
<kw name="Setup Board And List">
<doc>Create a board and save its ID and its first list's ID</doc>
<kw name="Create A Board" library="Board">
<var>${BOARD}</var>
<arg>TestBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 14:15:49.312" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 14:15:49.311" endtime="20220704 14:15:49.312"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 14:15:49.312" endtime="20220704 14:15:49.312"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:15:49.313" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220704 14:15:49.312" endtime="20220704 14:15:49.313"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 14:15:49.676" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:49.313" endtime="20220704 14:15:49.676"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:15:49.676" endtime="20220704 14:15:49.677"/>
</return>
<msg timestamp="20220704 14:15:49.677" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:49.311" endtime="20220704 14:15:49.677"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:15:49.677" endtime="20220704 14:15:49.677"/>
</return>
<msg timestamp="20220704 14:15:49.677" level="INFO">${BOARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:49.311" endtime="20220704 14:15:49.677"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_BOARD_ID}</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220704 14:15:49.678" level="INFO">${TEST_SUITE_BOARD_ID} = 62c2f61594fab625d8031a28</msg>
<status status="PASS" starttime="20220704 14:15:49.677" endtime="20220704 14:15:49.678"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${LISTS}</var>
<arg>boards/${TEST_SUITE_BOARD_ID}/lists</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 14:15:49.817" level="INFO">${LISTS} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:49.678" endtime="20220704 14:15:49.818"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_LIST_ID}</arg>
<arg>${LISTS.json()}[0][id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220704 14:15:49.819" level="INFO">${TEST_SUITE_LIST_ID} = 62c2f61594fab625d8031a2f</msg>
<status status="PASS" starttime="20220704 14:15:49.818" endtime="20220704 14:15:49.819"/>
</kw>
<status status="PASS" starttime="20220704 14:15:49.311" endtime="20220704 14:15:49.819"/>
</kw>
<status status="PASS" starttime="20220704 14:15:49.310" endtime="20220704 14:15:49.819"/>
</kw>
<test id="s1-s1-s1-s4-t1" name="Create and get label on board" line="14">
<kw name="Create A Label" library="Label">
<var>${response}</var>
<arg>name</arg>
<arg>label2</arg>
<arg>color</arg>
<arg>yellow</arg>
<doc>Creates a new label in the given board.
required_args: idBoard
optional_args: name, color
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>idBoard</arg>
<arg>${idBoard}</arg>
<arg>@{optional_args}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 14:15:49.821" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 14:15:49.821" endtime="20220704 14:15:49.821"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 14:15:49.821" endtime="20220704 14:15:49.822"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:15:49.822" level="INFO">${url} = labels/</msg>
<status status="PASS" starttime="20220704 14:15:49.822" endtime="20220704 14:15:49.822"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 14:15:50.014" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:49.823" endtime="20220704 14:15:50.014"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:15:50.014" endtime="20220704 14:15:50.014"/>
</return>
<msg timestamp="20220704 14:15:50.015" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:49.821" endtime="20220704 14:15:50.015"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:15:50.015" endtime="20220704 14:15:50.015"/>
</return>
<msg timestamp="20220704 14:15:50.015" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:49.820" endtime="20220704 14:15:50.015"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>label</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220704 14:15:50.016" endtime="20220704 14:15:50.018"/>
</kw>
<status status="PASS" starttime="20220704 14:15:50.015" endtime="20220704 14:15:50.018"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${LABEL_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 14:15:50.018" endtime="20220704 14:15:50.018"/>
</return>
<msg timestamp="20220704 14:15:50.019" level="INFO">${LABEL_ID} = 62c2f615ced95e142e02ea22</msg>
<status status="PASS" starttime="20220704 14:15:50.018" endtime="20220704 14:15:50.019"/>
</kw>
<kw name="Get A Label" library="Label">
<var>${response}</var>
<arg>${LABEL_ID}</arg>
<doc>Gets the label with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:15:50.020" level="INFO">${url} = labels/62c2f615ced95e142e02ea22</msg>
<status status="PASS" starttime="20220704 14:15:50.020" endtime="20220704 14:15:50.020"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 14:15:50.157" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:50.020" endtime="20220704 14:15:50.157"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:15:50.157" endtime="20220704 14:15:50.157"/>
</return>
<msg timestamp="20220704 14:15:50.158" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:50.019" endtime="20220704 14:15:50.158"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:15:50.158" endtime="20220704 14:15:50.158"/>
</return>
<msg timestamp="20220704 14:15:50.158" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:50.019" endtime="20220704 14:15:50.158"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${LABEL_COLOR}</var>
<arg>${response}</arg>
<arg>color</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 14:15:50.159" endtime="20220704 14:15:50.159"/>
</return>
<msg timestamp="20220704 14:15:50.159" level="INFO">${LABEL_COLOR} = yellow</msg>
<status status="PASS" starttime="20220704 14:15:50.158" endtime="20220704 14:15:50.160"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${LABEL_NAME}</var>
<arg>${response}</arg>
<arg>name</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 14:15:50.160" endtime="20220704 14:15:50.160"/>
</return>
<msg timestamp="20220704 14:15:50.161" level="INFO">${LABEL_NAME} = label2</msg>
<status status="PASS" starttime="20220704 14:15:50.160" endtime="20220704 14:15:50.161"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${LABEL_COLOR}</arg>
<arg>yellow</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220704 14:15:50.161" endtime="20220704 14:15:50.161"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${LABEL_NAME}</arg>
<arg>label2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220704 14:15:50.161" endtime="20220704 14:15:50.162"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Label</arg>
<arg>${LABEL_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Label" library="Label">
<arg>${LABEL_ID}</arg>
<doc>Deletes the label with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:15:50.163" level="INFO">${url} = labels/62c2f615ced95e142e02ea22</msg>
<status status="PASS" starttime="20220704 14:15:50.163" endtime="20220704 14:15:50.163"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 14:15:50.367" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:50.163" endtime="20220704 14:15:50.367"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:15:50.367" endtime="20220704 14:15:50.367"/>
</return>
<msg timestamp="20220704 14:15:50.368" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:50.163" endtime="20220704 14:15:50.368"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:15:50.368" endtime="20220704 14:15:50.368"/>
</return>
<status status="PASS" starttime="20220704 14:15:50.162" endtime="20220704 14:15:50.368"/>
</kw>
<status status="PASS" starttime="20220704 14:15:50.162" endtime="20220704 14:15:50.368"/>
</kw>
<doc>Verify that a label can be created through API</doc>
<tag>api</tag>
<tag>label.create</tag>
<tag>label.get</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220704 14:15:49.819" endtime="20220704 14:15:50.368"/>
</test>
<test id="s1-s1-s1-s4-t2" name="Update label on board" line="28">
<kw name="Create A Label" library="Label">
<var>${response}</var>
<arg>name</arg>
<arg>label2</arg>
<arg>color</arg>
<arg>yellow</arg>
<doc>Creates a new label in the given board.
required_args: idBoard
optional_args: name, color
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>idBoard</arg>
<arg>${idBoard}</arg>
<arg>@{optional_args}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 14:15:50.370" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 14:15:50.370" endtime="20220704 14:15:50.371"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 14:15:50.371" endtime="20220704 14:15:50.371"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:15:50.372" level="INFO">${url} = labels/</msg>
<status status="PASS" starttime="20220704 14:15:50.371" endtime="20220704 14:15:50.372"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 14:15:50.559" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:50.372" endtime="20220704 14:15:50.559"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:15:50.559" endtime="20220704 14:15:50.559"/>
</return>
<msg timestamp="20220704 14:15:50.559" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:50.370" endtime="20220704 14:15:50.559"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:15:50.559" endtime="20220704 14:15:50.559"/>
</return>
<msg timestamp="20220704 14:15:50.560" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:50.369" endtime="20220704 14:15:50.560"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>label</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220704 14:15:50.560" endtime="20220704 14:15:50.562"/>
</kw>
<status status="PASS" starttime="20220704 14:15:50.560" endtime="20220704 14:15:50.562"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${LABEL_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 14:15:50.563" endtime="20220704 14:15:50.563"/>
</return>
<msg timestamp="20220704 14:15:50.564" level="INFO">${LABEL_ID} = 62c2f616a01ae83684a262ad</msg>
<status status="PASS" starttime="20220704 14:15:50.563" endtime="20220704 14:15:50.564"/>
</kw>
<kw name="Update A Label" library="Label">
<var>${new_response}</var>
<arg>${LABEL_ID}</arg>
<arg>name</arg>
<arg>label3</arg>
<arg>color</arg>
<arg>orange</arg>
<doc>Updates the label with the given ID
optional_args: name, color
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 14:15:50.565" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 14:15:50.565" endtime="20220704 14:15:50.565"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 14:15:50.565" endtime="20220704 14:15:50.565"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:15:50.566" level="INFO">${url} = labels/62c2f616a01ae83684a262ad</msg>
<status status="PASS" starttime="20220704 14:15:50.565" endtime="20220704 14:15:50.566"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 14:15:50.756" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:50.566" endtime="20220704 14:15:50.756"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:15:50.757" endtime="20220704 14:15:50.757"/>
</return>
<msg timestamp="20220704 14:15:50.757" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:50.564" endtime="20220704 14:15:50.757"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:15:50.757" endtime="20220704 14:15:50.757"/>
</return>
<msg timestamp="20220704 14:15:50.757" level="INFO">${new_response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:50.564" endtime="20220704 14:15:50.757"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${NEW_LABEL_COLOR}</var>
<arg>${new_response}</arg>
<arg>color</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 14:15:50.758" endtime="20220704 14:15:50.758"/>
</return>
<msg timestamp="20220704 14:15:50.758" level="INFO">${NEW_LABEL_COLOR} = orange</msg>
<status status="PASS" starttime="20220704 14:15:50.757" endtime="20220704 14:15:50.759"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${NEW_LABEL_NAME}</var>
<arg>${new_response}</arg>
<arg>name</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 14:15:50.759" endtime="20220704 14:15:50.759"/>
</return>
<msg timestamp="20220704 14:15:50.760" level="INFO">${NEW_LABEL_NAME} = label3</msg>
<status status="PASS" starttime="20220704 14:15:50.759" endtime="20220704 14:15:50.760"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${NEW_LABEL_COLOR}</arg>
<arg>orange</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220704 14:15:50.760" endtime="20220704 14:15:50.760"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${NEW_LABEL_NAME}</arg>
<arg>label3</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220704 14:15:50.760" endtime="20220704 14:15:50.761"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Label</arg>
<arg>${LABEL_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Label" library="Label">
<arg>${LABEL_ID}</arg>
<doc>Deletes the label with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:15:50.762" level="INFO">${url} = labels/62c2f616a01ae83684a262ad</msg>
<status status="PASS" starttime="20220704 14:15:50.762" endtime="20220704 14:15:50.762"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 14:15:50.964" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:50.762" endtime="20220704 14:15:50.964"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:15:50.964" endtime="20220704 14:15:50.964"/>
</return>
<msg timestamp="20220704 14:15:50.964" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:50.761" endtime="20220704 14:15:50.964"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:15:50.964" endtime="20220704 14:15:50.964"/>
</return>
<status status="PASS" starttime="20220704 14:15:50.761" endtime="20220704 14:15:50.965"/>
</kw>
<status status="PASS" starttime="20220704 14:15:50.761" endtime="20220704 14:15:50.965"/>
</kw>
<doc>Verify that a label's name and color can be updated through API</doc>
<tag>api</tag>
<tag>label.update</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220704 14:15:50.368" endtime="20220704 14:15:50.965"/>
</test>
<test id="s1-s1-s1-s4-t3" name="Delete label on board" line="41">
<kw name="Create A Label" library="Label">
<var>${response}</var>
<arg>name</arg>
<arg>label2</arg>
<arg>color</arg>
<arg>yellow</arg>
<doc>Creates a new label in the given board.
required_args: idBoard
optional_args: name, color
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>idBoard</arg>
<arg>${idBoard}</arg>
<arg>@{optional_args}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 14:15:50.967" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 14:15:50.967" endtime="20220704 14:15:50.967"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 14:15:50.967" endtime="20220704 14:15:50.967"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:15:50.968" level="INFO">${url} = labels/</msg>
<status status="PASS" starttime="20220704 14:15:50.968" endtime="20220704 14:15:50.968"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 14:15:51.144" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:50.968" endtime="20220704 14:15:51.144"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:15:51.144" endtime="20220704 14:15:51.144"/>
</return>
<msg timestamp="20220704 14:15:51.145" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:50.966" endtime="20220704 14:15:51.145"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:15:51.145" endtime="20220704 14:15:51.145"/>
</return>
<msg timestamp="20220704 14:15:51.145" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:50.966" endtime="20220704 14:15:51.145"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${LABEL_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 14:15:51.146" endtime="20220704 14:15:51.146"/>
</return>
<msg timestamp="20220704 14:15:51.146" level="INFO">${LABEL_ID} = 62c2f617eb9e8d2e1029cb9b</msg>
<status status="PASS" starttime="20220704 14:15:51.145" endtime="20220704 14:15:51.146"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Label</arg>
<arg>${LABEL_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Label" library="Label">
<arg>${LABEL_ID}</arg>
<doc>Deletes the label with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:15:51.148" level="INFO">${url} = labels/62c2f617eb9e8d2e1029cb9b</msg>
<status status="PASS" starttime="20220704 14:15:51.148" endtime="20220704 14:15:51.148"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 14:15:51.339" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:51.148" endtime="20220704 14:15:51.339"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:15:51.339" endtime="20220704 14:15:51.339"/>
</return>
<msg timestamp="20220704 14:15:51.340" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:51.147" endtime="20220704 14:15:51.340"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:15:51.340" endtime="20220704 14:15:51.340"/>
</return>
<status status="PASS" starttime="20220704 14:15:51.147" endtime="20220704 14:15:51.340"/>
</kw>
<status status="PASS" starttime="20220704 14:15:51.147" endtime="20220704 14:15:51.340"/>
</kw>
<kw name="Get A Label" library="Label">
<arg>${LABEL_ID}</arg>
<arg>status_code=404</arg>
<doc>Gets the label with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:15:51.341" level="INFO">${url} = labels/62c2f617eb9e8d2e1029cb9b</msg>
<status status="PASS" starttime="20220704 14:15:51.341" endtime="20220704 14:15:51.341"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 14:15:51.468" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220704 14:15:51.342" endtime="20220704 14:15:51.468"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:15:51.468" endtime="20220704 14:15:51.469"/>
</return>
<msg timestamp="20220704 14:15:51.469" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220704 14:15:51.341" endtime="20220704 14:15:51.469"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:15:51.469" endtime="20220704 14:15:51.469"/>
</return>
<status status="PASS" starttime="20220704 14:15:51.340" endtime="20220704 14:15:51.469"/>
</kw>
<doc>Verify that a label can be deleted through API</doc>
<tag>api</tag>
<tag>label.delete</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220704 14:15:50.965" endtime="20220704 14:15:51.469"/>
</test>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Teardown Board</arg>
<arg>Delete All Sessions</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Teardown Board">
<doc>Delete the board created for this session.</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:15:51.472" level="INFO">${url} = boards/62c2f61594fab625d8031a28</msg>
<status status="PASS" starttime="20220704 14:15:51.472" endtime="20220704 14:15:51.472"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 14:15:51.967" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:51.473" endtime="20220704 14:15:51.967"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:15:51.967" endtime="20220704 14:15:51.967"/>
</return>
<msg timestamp="20220704 14:15:51.968" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:51.472" endtime="20220704 14:15:51.968"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:15:51.968" endtime="20220704 14:15:51.968"/>
</return>
<status status="PASS" starttime="20220704 14:15:51.471" endtime="20220704 14:15:51.968"/>
</kw>
<status status="PASS" starttime="20220704 14:15:51.471" endtime="20220704 14:15:51.968"/>
</kw>
<status status="PASS" starttime="20220704 14:15:51.471" endtime="20220704 14:15:51.968"/>
</kw>
<kw name="Delete All Sessions" library="request_own_library">
<status status="PASS" starttime="20220704 14:15:51.968" endtime="20220704 14:15:51.970"/>
</kw>
<status status="PASS" starttime="20220704 14:15:51.470" endtime="20220704 14:15:51.970"/>
</kw>
<doc>Example Test with Trello API Cards</doc>
<status status="PASS" starttime="20220704 14:15:49.301" endtime="20220704 14:15:51.970"/>
</suite>
<suite id="s1-s1-s1-s5" name="Trello Api Lists Tests" source="/trello/api/trello_api_lists_tests.robot">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Create Trello Session</arg>
<arg>Setup Board</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Create Trello Session" library="TrelloAPI">
<doc>Creates a Trello Session</doc>
<kw name="Create Session" library="request_own_library">
<arg>${API_BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<status status="PASS" starttime="20220704 14:15:51.980" endtime="20220704 14:15:51.980"/>
</kw>
<status status="PASS" starttime="20220704 14:15:51.980" endtime="20220704 14:15:51.980"/>
</kw>
<kw name="Setup Board">
<doc>Create a board and save it's id for the suite</doc>
<kw name="Create A Board" library="Board">
<var>${BOARD}</var>
<arg>TestBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 14:15:51.982" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 14:15:51.981" endtime="20220704 14:15:51.982"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 14:15:51.982" endtime="20220704 14:15:51.982"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:15:51.983" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220704 14:15:51.982" endtime="20220704 14:15:51.983"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 14:15:52.349" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:51.983" endtime="20220704 14:15:52.349"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:15:52.349" endtime="20220704 14:15:52.349"/>
</return>
<msg timestamp="20220704 14:15:52.349" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:51.981" endtime="20220704 14:15:52.349"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:15:52.349" endtime="20220704 14:15:52.349"/>
</return>
<msg timestamp="20220704 14:15:52.349" level="INFO">${BOARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:51.981" endtime="20220704 14:15:52.349"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Set Suite Variable</arg>
<arg>\${TEST_SUITE_BOARD_ID}</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_BOARD_ID}</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220704 14:15:52.351" level="INFO">${TEST_SUITE_BOARD_ID} = 62c2f618806686216e3b1a23</msg>
<status status="PASS" starttime="20220704 14:15:52.350" endtime="20220704 14:15:52.351"/>
</kw>
<status status="PASS" starttime="20220704 14:15:52.350" endtime="20220704 14:15:52.351"/>
</kw>
<status status="PASS" starttime="20220704 14:15:51.980" endtime="20220704 14:15:52.351"/>
</kw>
<status status="PASS" starttime="20220704 14:15:51.979" endtime="20220704 14:15:52.351"/>
</kw>
<test id="s1-s1-s1-s5-t1" name="CREATE a list" line="13">
<kw name="Create A List" library="List">
<var>${response}</var>
<arg>NewList</arg>
<doc>Creates a new List
board id
name the list will have
optional_args: idListSource, pos, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>list</arg>
<arg>name</arg>
<arg>${name}</arg>
<arg>idBoard</arg>
<arg>${idBoard}</arg>
<arg>@{optional_args}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 14:15:52.353" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 14:15:52.353" endtime="20220704 14:15:52.353"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 14:15:52.353" endtime="20220704 14:15:52.353"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:15:52.354" level="INFO">${url} = lists/</msg>
<status status="PASS" starttime="20220704 14:15:52.354" endtime="20220704 14:15:52.354"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 14:15:52.563" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:52.354" endtime="20220704 14:15:52.563"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:15:52.563" endtime="20220704 14:15:52.563"/>
</return>
<msg timestamp="20220704 14:15:52.563" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:52.352" endtime="20220704 14:15:52.563"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:15:52.563" endtime="20220704 14:15:52.563"/>
</return>
<msg timestamp="20220704 14:15:52.564" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:52.352" endtime="20220704 14:15:52.564"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>list</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220704 14:15:52.564" endtime="20220704 14:15:52.566"/>
</kw>
<status status="PASS" starttime="20220704 14:15:52.564" endtime="20220704 14:15:52.566"/>
</kw>
<doc>Verify that a list can be created through API</doc>
<tag>api</tag>
<tag>list.create</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220704 14:15:52.351" endtime="20220704 14:15:52.567"/>
</test>
<test id="s1-s1-s1-s5-t2" name="UPDATE a list" line="19">
<kw name="Create A List" library="List">
<var>${response}</var>
<arg>NewList</arg>
<doc>Creates a new List
board id
name the list will have
optional_args: idListSource, pos, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>list</arg>
<arg>name</arg>
<arg>${name}</arg>
<arg>idBoard</arg>
<arg>${idBoard}</arg>
<arg>@{optional_args}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 14:15:52.569" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 14:15:52.568" endtime="20220704 14:15:52.569"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 14:15:52.569" endtime="20220704 14:15:52.569"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:15:52.570" level="INFO">${url} = lists/</msg>
<status status="PASS" starttime="20220704 14:15:52.569" endtime="20220704 14:15:52.570"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 14:15:52.744" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:52.570" endtime="20220704 14:15:52.744"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:15:52.745" endtime="20220704 14:15:52.745"/>
</return>
<msg timestamp="20220704 14:15:52.745" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:52.568" endtime="20220704 14:15:52.745"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:15:52.745" endtime="20220704 14:15:52.745"/>
</return>
<msg timestamp="20220704 14:15:52.745" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:52.568" endtime="20220704 14:15:52.745"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>list</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220704 14:15:52.746" endtime="20220704 14:15:52.748"/>
</kw>
<status status="PASS" starttime="20220704 14:15:52.745" endtime="20220704 14:15:52.748"/>
</kw>
<kw name="Update A List" library="List">
<arg>${response.json()}[id]</arg>
<arg>name</arg>
<arg>NewName</arg>
<doc>Updates the board with the given ID
optional_args: name, idListSource, pos, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>list</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 14:15:52.750" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 14:15:52.749" endtime="20220704 14:15:52.750"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 14:15:52.750" endtime="20220704 14:15:52.750"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:15:52.750" level="INFO">${url} = lists/62c2f618487de50b9657cf63</msg>
<status status="PASS" starttime="20220704 14:15:52.750" endtime="20220704 14:15:52.750"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 14:15:52.912" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:52.751" endtime="20220704 14:15:52.912"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:15:52.912" endtime="20220704 14:15:52.912"/>
</return>
<msg timestamp="20220704 14:15:52.912" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:52.749" endtime="20220704 14:15:52.912"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:15:52.912" endtime="20220704 14:15:52.912"/>
</return>
<status status="PASS" starttime="20220704 14:15:52.748" endtime="20220704 14:15:52.913"/>
</kw>
<kw name="Get A List" library="List">
<var>${new_response}</var>
<arg>${response.json()}[id]</arg>
<doc>Gets the List with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>list</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:15:52.915" level="INFO">${url} = lists/62c2f618487de50b9657cf63</msg>
<status status="PASS" starttime="20220704 14:15:52.914" endtime="20220704 14:15:52.915"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 14:15:53.045" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:52.915" endtime="20220704 14:15:53.045"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:15:53.045" endtime="20220704 14:15:53.045"/>
</return>
<msg timestamp="20220704 14:15:53.045" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:52.914" endtime="20220704 14:15:53.046"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:15:53.046" endtime="20220704 14:15:53.046"/>
</return>
<msg timestamp="20220704 14:15:53.046" level="INFO">${new_response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:52.913" endtime="20220704 14:15:53.046"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${new_response}</arg>
<arg>list</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220704 14:15:53.046" endtime="20220704 14:15:53.048"/>
</kw>
<status status="PASS" starttime="20220704 14:15:53.046" endtime="20220704 14:15:53.048"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${new_response.json()}[name]</arg>
<arg>NewName</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220704 14:15:53.048" endtime="20220704 14:15:53.049"/>
</kw>
<doc>Verify that a lists name can be updated through API</doc>
<tag>api</tag>
<tag>list.update</tag>
<tag>regression</tag>
<status status="PASS" starttime="20220704 14:15:52.567" endtime="20220704 14:15:53.049"/>
</test>
<test id="s1-s1-s1-s5-t3" name="ARCHIVE A list" line="29">
<kw name="Create A List" library="List">
<var>${response}</var>
<arg>NewList</arg>
<doc>Creates a new List
board id
name the list will have
optional_args: idListSource, pos, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>list</arg>
<arg>name</arg>
<arg>${name}</arg>
<arg>idBoard</arg>
<arg>${idBoard}</arg>
<arg>@{optional_args}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 14:15:53.051" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 14:15:53.051" endtime="20220704 14:15:53.051"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 14:15:53.051" endtime="20220704 14:15:53.052"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:15:53.053" level="INFO">${url} = lists/</msg>
<status status="PASS" starttime="20220704 14:15:53.053" endtime="20220704 14:15:53.053"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 14:15:53.253" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:53.053" endtime="20220704 14:15:53.253"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:15:53.253" endtime="20220704 14:15:53.253"/>
</return>
<msg timestamp="20220704 14:15:53.254" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:53.050" endtime="20220704 14:15:53.254"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:15:53.254" endtime="20220704 14:15:53.254"/>
</return>
<msg timestamp="20220704 14:15:53.254" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:53.050" endtime="20220704 14:15:53.254"/>
</kw>
<kw name="Archive A List" library="List">
<arg>${response.json()}[id]</arg>
<doc>Deletes the list with the given ID</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>archive_list</arg>
<arg>${id}</arg>
<arg>value</arg>
<arg>true</arg>
<arg>status_code=${status_code}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 14:15:53.256" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 14:15:53.256" endtime="20220704 14:15:53.256"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 14:15:53.256" endtime="20220704 14:15:53.256"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:15:53.257" level="INFO">${url} = lists/62c2f61930f45b3d85a7aeda/closed</msg>
<status status="PASS" starttime="20220704 14:15:53.257" endtime="20220704 14:15:53.257"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 14:15:53.448" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:53.257" endtime="20220704 14:15:53.448"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:15:53.448" endtime="20220704 14:15:53.448"/>
</return>
<msg timestamp="20220704 14:15:53.448" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:53.255" endtime="20220704 14:15:53.448"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:15:53.448" endtime="20220704 14:15:53.448"/>
</return>
<status status="PASS" starttime="20220704 14:15:53.254" endtime="20220704 14:15:53.449"/>
</kw>
<kw name="Get A List" library="List">
<var>${new_response}</var>
<arg>${response.json()}[id]</arg>
<doc>Gets the List with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>list</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:15:53.451" level="INFO">${url} = lists/62c2f61930f45b3d85a7aeda</msg>
<status status="PASS" starttime="20220704 14:15:53.450" endtime="20220704 14:15:53.451"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 14:15:53.618" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:53.451" endtime="20220704 14:15:53.618"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:15:53.618" endtime="20220704 14:15:53.618"/>
</return>
<msg timestamp="20220704 14:15:53.619" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:53.450" endtime="20220704 14:15:53.619"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:15:53.619" endtime="20220704 14:15:53.619"/>
</return>
<msg timestamp="20220704 14:15:53.619" level="INFO">${new_response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:53.449" endtime="20220704 14:15:53.619"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${new_response.json()}[closed]</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220704 14:15:53.619" endtime="20220704 14:15:53.620"/>
</kw>
<doc>Verify that a list can be archived through API</doc>
<tag>api</tag>
<tag>list.archive</tag>
<tag>regression</tag>
<status status="PASS" starttime="20220704 14:15:53.049" endtime="20220704 14:15:53.620"/>
</test>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Teardown Board</arg>
<arg>Delete All Sessions</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Teardown Board">
<doc>Delete the board created for this suite.</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:15:53.623" level="INFO">${url} = boards/62c2f618806686216e3b1a23</msg>
<status status="PASS" starttime="20220704 14:15:53.623" endtime="20220704 14:15:53.623"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 14:15:54.055" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:53.623" endtime="20220704 14:15:54.055"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:15:54.055" endtime="20220704 14:15:54.055"/>
</return>
<msg timestamp="20220704 14:15:54.056" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:15:53.622" endtime="20220704 14:15:54.056"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:15:54.056" endtime="20220704 14:15:54.056"/>
</return>
<status status="PASS" starttime="20220704 14:15:53.621" endtime="20220704 14:15:54.056"/>
</kw>
<status status="PASS" starttime="20220704 14:15:53.621" endtime="20220704 14:15:54.056"/>
</kw>
<status status="PASS" starttime="20220704 14:15:53.621" endtime="20220704 14:15:54.056"/>
</kw>
<kw name="Delete All Sessions" library="request_own_library">
<status status="PASS" starttime="20220704 14:15:54.056" endtime="20220704 14:15:54.057"/>
</kw>
<status status="PASS" starttime="20220704 14:15:53.621" endtime="20220704 14:15:54.057"/>
</kw>
<doc>Example Test with Trello API lists</doc>
<status status="PASS" starttime="20220704 14:15:51.971" endtime="20220704 14:15:54.057"/>
</suite>
<status status="PASS" starttime="20220704 14:15:36.629" endtime="20220704 14:15:54.060"/>
</suite>
<status status="PASS" starttime="20220704 14:15:36.612" endtime="20220704 14:15:54.063"/>
</suite>
<suite id="s1-s2" name="Trello" source="/trello">
<suite id="s1-s2-s1" name="Gui" source="/trello/gui">
<suite id="s1-s2-s1-s1" name="Trello Gui Board" source="/trello/gui/trello_gui_board.robot">
<kw name="Boards Suite Setup" type="SETUP">
<doc>Creates a Trello Sesion in order to use api's keywords.</doc>
<kw name="Create Trello Session" library="TrelloAPI">
<doc>Creates a Trello Session</doc>
<kw name="Create Session" library="request_own_library">
<arg>${API_BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<status status="PASS" starttime="20220704 14:16:35.855" endtime="20220704 14:16:35.855"/>
</kw>
<status status="PASS" starttime="20220704 14:16:35.854" endtime="20220704 14:16:35.855"/>
</kw>
<status status="PASS" starttime="20220704 14:16:35.854" endtime="20220704 14:16:35.855"/>
</kw>
<test id="s1-s2-s1-s1-t1" name="create a board" line="12">
<kw name="Open Browser From Environment" library="CommonGUI">
<arg>${LOGIN_URL}</arg>
<doc>This keywords takes REMOTE and BROWSER variables
from the environment automatically and only needs a url</doc>
<if>
<branch type="IF" condition="${is_remote}">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${url}</arg>
<arg>${BROWSER}</arg>
<arg>remote_url=http://selenium-hub:4444</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20220704 14:16:35.858" level="INFO">Opening browser 'chrome' to base url 'https://trello.com/login' through remote server at 'http://selenium-hub:4444'.</msg>
<status status="PASS" starttime="20220704 14:16:35.857" endtime="20220704 14:16:37.828"/>
</kw>
<status status="PASS" starttime="20220704 14:16:35.857" endtime="20220704 14:16:37.829"/>
</branch>
<branch type="ELSE">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${url}</arg>
<arg>${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<status status="NOT RUN" starttime="20220704 14:16:37.829" endtime="20220704 14:16:37.829"/>
</kw>
<status status="NOT RUN" starttime="20220704 14:16:37.829" endtime="20220704 14:16:37.829"/>
</branch>
<status status="PASS" starttime="20220704 14:16:35.857" endtime="20220704 14:16:37.829"/>
</if>
<status status="PASS" starttime="20220704 14:16:35.857" endtime="20220704 14:16:37.829"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20220704 14:16:37.829" endtime="20220704 14:16:37.966"/>
</kw>
<kw name="Login To Trello" library="LoginPage">
<arg>${DEFAULT_EMAIL}</arg>
<arg>${DEFAULT_PASSWORD}</arg>
<doc>High-level keyword for logging in to Trello</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220704 14:16:37.987" level="INFO">${url} = https://trello.com/login</msg>
<status status="PASS" starttime="20220704 14:16:37.967" endtime="20220704 14:16:37.987"/>
</kw>
<if>
<branch type="IF" condition="'${url}' != '${LOGIN_URL}'">
<kw name="Go To" library="SeleniumLibrary">
<arg>${LOGIN_URL}</arg>
<doc>Navigates the current browser window to the provided ``url``.</doc>
<status status="NOT RUN" starttime="20220704 14:16:37.988" endtime="20220704 14:16:37.988"/>
</kw>
<status status="NOT RUN" starttime="20220704 14:16:37.987" endtime="20220704 14:16:37.988"/>
</branch>
<status status="PASS" starttime="20220704 14:16:37.987" endtime="20220704 14:16:37.988"/>
</if>
<kw name="Enter Username" library="LoginPage">
<arg>${username}</arg>
<doc>Take a username as argument and
enters it in the user_input</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${USER_INPUT}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 14:16:37.988" endtime="20220704 14:16:38.057"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${USER_INPUT}</arg>
<arg>${username}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220704 14:16:38.058" level="INFO">Typing text 'bootcamp04@mailinator.com' into text field 'css:input#user'.</msg>
<status status="PASS" starttime="20220704 14:16:38.057" endtime="20220704 14:16:38.205"/>
</kw>
<status status="PASS" starttime="20220704 14:16:37.988" endtime="20220704 14:16:38.206"/>
</kw>
<kw name="Wait Until Element Is Not Visible" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<doc>Waits until the element ``locator`` is not visible.</doc>
<status status="PASS" starttime="20220704 14:16:38.206" endtime="20220704 14:16:39.008"/>
</kw>
<kw name="Click Login Button" library="LoginPage">
<doc>Clicks Trello's login button if in Trello's
login page, else it clicks Atlassian's</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220704 14:16:39.032" level="INFO">${url} = https://trello.com/login</msg>
<status status="PASS" starttime="20220704 14:16:39.009" endtime="20220704 14:16:39.032"/>
</kw>
<if>
<branch type="IF" condition="'${url}' == '${LOGIN_URL}'">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220704 14:16:39.032" endtime="20220704 14:16:39.110"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220704 14:16:39.110" level="INFO">Clicking button 'css:input#login'.</msg>
<status status="PASS" starttime="20220704 14:16:39.110" endtime="20220704 14:16:40.217"/>
</kw>
<status status="PASS" starttime="20220704 14:16:39.032" endtime="20220704 14:16:40.217"/>
</branch>
<branch type="ELSE">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="NOT RUN" starttime="20220704 14:16:40.217" endtime="20220704 14:16:40.217"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<status status="NOT RUN" starttime="20220704 14:16:40.217" endtime="20220704 14:16:40.217"/>
</kw>
<status status="NOT RUN" starttime="20220704 14:16:40.217" endtime="20220704 14:16:40.217"/>
</branch>
<status status="PASS" starttime="20220704 14:16:39.032" endtime="20220704 14:16:40.217"/>
</if>
<status status="PASS" starttime="20220704 14:16:39.009" endtime="20220704 14:16:40.218"/>
</kw>
<kw name="Wait Until Location Is Atlassian's Login" library="LoginPage">
<doc>Waits for the page redirection when logging in.</doc>
<kw name="Wait Until Location Contains" library="SeleniumLibrary">
<arg>atlassian.com</arg>
<doc>Waits until the current URL contains ``expected``.</doc>
<status status="PASS" starttime="20220704 14:16:40.218" endtime="20220704 14:16:40.238"/>
</kw>
<status status="PASS" starttime="20220704 14:16:40.218" endtime="20220704 14:16:40.239"/>
</kw>
<kw name="Enter Password" library="LoginPage">
<arg>${password}</arg>
<doc>Take a password as argument and
enters it in the password_input</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<arg>timeout=10</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 14:16:40.239" endtime="20220704 14:16:40.310"/>
</kw>
<kw name="Input Password" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<arg>${password}</arg>
<doc>Types the given password into the text field identified by ``locator``.</doc>
<msg timestamp="20220704 14:16:40.311" level="INFO">Typing password into text field 'css:input#password'.</msg>
<msg timestamp="20220704 14:16:40.376" level="INFO">Temporally setting log level to: NONE</msg>
<msg timestamp="20220704 14:16:40.454" level="INFO">Log level changed from NONE to INFO.</msg>
<status status="PASS" starttime="20220704 14:16:40.310" endtime="20220704 14:16:40.454"/>
</kw>
<status status="PASS" starttime="20220704 14:16:40.239" endtime="20220704 14:16:40.454"/>
</kw>
<kw name="Click Login Button" library="LoginPage">
<doc>Clicks Trello's login button if in Trello's
login page, else it clicks Atlassian's</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220704 14:16:40.478" level="INFO">${url} = https://id.atlassian.com/login?application=trello&amp;continue=https%3A%2F%2Ftrello.com%2Fauth%2Fatlassian%2Fcallback%3FreturnUrl%3D%252F%26display%3D%26aaOnboarding%3D%26updateEmail%3D%26traceId%3D62c2f6...</msg>
<status status="PASS" starttime="20220704 14:16:40.455" endtime="20220704 14:16:40.478"/>
</kw>
<if>
<branch type="IF" condition="'${url}' == '${LOGIN_URL}'">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="NOT RUN" starttime="20220704 14:16:40.479" endtime="20220704 14:16:40.479"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<status status="NOT RUN" starttime="20220704 14:16:40.479" endtime="20220704 14:16:40.479"/>
</kw>
<status status="NOT RUN" starttime="20220704 14:16:40.478" endtime="20220704 14:16:40.479"/>
</branch>
<branch type="ELSE">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220704 14:16:40.479" endtime="20220704 14:16:40.558"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220704 14:16:40.559" level="INFO">Clicking button 'css:button#login-submit'.</msg>
<status status="PASS" starttime="20220704 14:16:40.558" endtime="20220704 14:16:40.680"/>
</kw>
<status status="PASS" starttime="20220704 14:16:40.479" endtime="20220704 14:16:40.680"/>
</branch>
<status status="PASS" starttime="20220704 14:16:40.478" endtime="20220704 14:16:40.680"/>
</if>
<status status="PASS" starttime="20220704 14:16:40.455" endtime="20220704 14:16:40.680"/>
</kw>
<status status="PASS" starttime="20220704 14:16:37.967" endtime="20220704 14:16:40.680"/>
</kw>
<kw name="Click New Board Button" library="BoardsPage">
<doc>Clicks the button that creates a new board.</doc>
<kw name="Wait Until Location Contains" library="SeleniumLibrary">
<arg>${BOARDS_PATH}</arg>
<doc>Waits until the current URL contains ``expected``.</doc>
<status status="PASS" starttime="20220704 14:16:40.681" endtime="20220704 14:16:44.362"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Click Element</arg>
<arg>${CREATE_NEW_BOARD_BUTTON}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${CREATE_NEW_BOARD_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 14:16:44.363" level="INFO">Clicking element 'xpath://div[@class="boards-page-board-section mod-no-sidebar"]//div[@class="board-tile mod-add"]'.</msg>
<status status="PASS" starttime="20220704 14:16:44.363" endtime="20220704 14:16:44.548"/>
</kw>
<status status="PASS" starttime="20220704 14:16:44.362" endtime="20220704 14:16:44.548"/>
</kw>
<status status="PASS" starttime="20220704 14:16:40.680" endtime="20220704 14:16:44.549"/>
</kw>
<kw name="Set Name to Board" library="BoardsPage">
<arg>NewName</arg>
<doc>Set the name of the board and press the create button</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${BOARD_NAME_INPUT}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 14:16:44.549" endtime="20220704 14:16:44.925"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${BOARD_NAME_INPUT}</arg>
<arg>${name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220704 14:16:44.926" level="INFO">Typing text 'NewName' into text field 'xpath://div[@title='Create board']/ancestor::section//input[@type="text"]'.</msg>
<status status="PASS" starttime="20220704 14:16:44.925" endtime="20220704 14:16:45.107"/>
</kw>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${CREATE_BUTTON}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220704 14:16:45.108" endtime="20220704 14:16:45.174"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${CREATE_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 14:16:45.174" level="INFO">Clicking element 'xpath://div[@title='Create board']/ancestor::section//button[text()='Create']'.</msg>
<status status="PASS" starttime="20220704 14:16:45.174" endtime="20220704 14:16:45.259"/>
</kw>
<status status="PASS" starttime="20220704 14:16:44.549" endtime="20220704 14:16:45.259"/>
</kw>
<kw name="Verify Name of Board" library="UpperHorizontalMenu">
<arg>NewName</arg>
<doc>Verifies the name of a board</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${NAME_OF_BOARD}</arg>
<arg>10</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 14:16:45.260" endtime="20220704 14:16:46.523"/>
</kw>
<kw name="Element Text Should Be" library="SeleniumLibrary">
<arg>${NAME_OF_BOARD}</arg>
<arg>${name}</arg>
<doc>Verifies that element ``locator`` contains exact the text ``expected``.</doc>
<msg timestamp="20220704 14:16:46.524" level="INFO">Verifying element 'xpath://h1[contains(@class, 'js-board-editing-target')]' contains exact text 'NewName'.</msg>
<status status="PASS" starttime="20220704 14:16:46.524" endtime="20220704 14:16:46.611"/>
</kw>
<status status="PASS" starttime="20220704 14:16:45.259" endtime="20220704 14:16:46.611"/>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Open Show Menu</arg>
<arg>Delete Current Board</arg>
<arg>Close Browser</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Open Show Menu" library="UpperHorizontalMenu">
<doc>Open the Show Menu in the right side of the board page where multiple options are available</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${SHOW_MENU_BUTTON}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 14:16:46.612" endtime="20220704 14:16:46.668"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${SHOW_MENU_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 14:16:46.669" level="INFO">Clicking element 'xpath://div[contains(@class, 'board-header')]//a[contains(., 'Show menu')]'.</msg>
<status status="PASS" starttime="20220704 14:16:46.668" endtime="20220704 14:16:46.789"/>
</kw>
<status status="PASS" starttime="20220704 14:16:46.611" endtime="20220704 14:16:46.789"/>
</kw>
<kw name="Delete Current Board" library="ShownMenu">
<doc>Deletes the current board</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${MORE_BUTTON}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 14:16:46.790" endtime="20220704 14:16:46.930"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${MORE_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 14:16:46.930" level="INFO">Clicking element 'xpath://div[contains(@class, 'board-menu-content')]//a[contains(text(), 'More')]'.</msg>
<status status="PASS" starttime="20220704 14:16:46.930" endtime="20220704 14:16:47.041"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${CLOSE_BOARD_BUTTON}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 14:16:47.041" endtime="20220704 14:16:47.110"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${CLOSE_BOARD_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 14:16:47.110" level="INFO">Clicking element 'xpath://div[@class= 'board-menu-content-frame']//a[contains(text(), 'Close board')]'.</msg>
<status status="PASS" starttime="20220704 14:16:47.110" endtime="20220704 14:16:47.226"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${CLOSE_BUTTON}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 14:16:47.226" endtime="20220704 14:16:47.281"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${CLOSE_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 14:16:47.281" level="INFO">Clicking element 'xpath://div[@class= 'no-back']//input'.</msg>
<status status="PASS" starttime="20220704 14:16:47.281" endtime="20220704 14:16:47.412"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${PERMANENTLY_DELETE_BUTTON}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 14:16:47.412" endtime="20220704 14:16:47.744"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${PERMANENTLY_DELETE_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 14:16:47.744" level="INFO">Clicking element 'xpath://button[text()= 'Permanently delete board']'.</msg>
<status status="PASS" starttime="20220704 14:16:47.744" endtime="20220704 14:16:47.823"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${CONFIRM_DELETE_BUTTON}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 14:16:47.823" endtime="20220704 14:16:47.869"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${CONFIRM_DELETE_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 14:16:47.870" level="INFO">Clicking element 'xpath://section//button[text()= 'Delete']'.</msg>
<status status="PASS" starttime="20220704 14:16:47.870" endtime="20220704 14:16:47.937"/>
</kw>
<status status="PASS" starttime="20220704 14:16:46.790" endtime="20220704 14:16:47.937"/>
</kw>
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20220704 14:16:47.938" endtime="20220704 14:16:48.046"/>
</kw>
<status status="PASS" starttime="20220704 14:16:46.611" endtime="20220704 14:16:48.046"/>
</kw>
<doc>Verify that a board can be created through GUI</doc>
<tag>board.create</tag>
<tag>gui</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220704 14:16:35.856" endtime="20220704 14:16:48.046"/>
</test>
<test id="s1-s2-s1-s1-t2" name="delete a board" line="26">
<kw name="Create A Board" library="Board">
<var>${BOARD}</var>
<arg>NewName</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 14:16:48.049" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 14:16:48.048" endtime="20220704 14:16:48.049"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 14:16:48.049" endtime="20220704 14:16:48.049"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:16:48.050" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220704 14:16:48.049" endtime="20220704 14:16:48.050"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 14:16:48.367" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:16:48.050" endtime="20220704 14:16:48.367"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:16:48.367" endtime="20220704 14:16:48.367"/>
</return>
<msg timestamp="20220704 14:16:48.367" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:16:48.048" endtime="20220704 14:16:48.367"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:16:48.367" endtime="20220704 14:16:48.367"/>
</return>
<msg timestamp="20220704 14:16:48.368" level="INFO">${BOARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:16:48.048" endtime="20220704 14:16:48.368"/>
</kw>
<kw name="Open Browser From Environment" library="CommonGUI">
<arg>${LOGIN_URL}</arg>
<doc>This keywords takes REMOTE and BROWSER variables
from the environment automatically and only needs a url</doc>
<if>
<branch type="IF" condition="${is_remote}">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${url}</arg>
<arg>${BROWSER}</arg>
<arg>remote_url=http://selenium-hub:4444</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20220704 14:16:48.369" level="INFO">Opening browser 'chrome' to base url 'https://trello.com/login' through remote server at 'http://selenium-hub:4444'.</msg>
<status status="PASS" starttime="20220704 14:16:48.369" endtime="20220704 14:16:49.525"/>
</kw>
<status status="PASS" starttime="20220704 14:16:48.368" endtime="20220704 14:16:49.525"/>
</branch>
<branch type="ELSE">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${url}</arg>
<arg>${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<status status="NOT RUN" starttime="20220704 14:16:49.526" endtime="20220704 14:16:49.526"/>
</kw>
<status status="NOT RUN" starttime="20220704 14:16:49.525" endtime="20220704 14:16:49.526"/>
</branch>
<status status="PASS" starttime="20220704 14:16:48.368" endtime="20220704 14:16:49.526"/>
</if>
<status status="PASS" starttime="20220704 14:16:48.368" endtime="20220704 14:16:49.526"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20220704 14:16:49.526" endtime="20220704 14:16:49.645"/>
</kw>
<kw name="Login To Trello" library="LoginPage">
<arg>${DEFAULT_EMAIL}</arg>
<arg>${DEFAULT_PASSWORD}</arg>
<doc>High-level keyword for logging in to Trello</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220704 14:16:49.664" level="INFO">${url} = https://trello.com/login</msg>
<status status="PASS" starttime="20220704 14:16:49.646" endtime="20220704 14:16:49.664"/>
</kw>
<if>
<branch type="IF" condition="'${url}' != '${LOGIN_URL}'">
<kw name="Go To" library="SeleniumLibrary">
<arg>${LOGIN_URL}</arg>
<doc>Navigates the current browser window to the provided ``url``.</doc>
<status status="NOT RUN" starttime="20220704 14:16:49.664" endtime="20220704 14:16:49.664"/>
</kw>
<status status="NOT RUN" starttime="20220704 14:16:49.664" endtime="20220704 14:16:49.664"/>
</branch>
<status status="PASS" starttime="20220704 14:16:49.664" endtime="20220704 14:16:49.664"/>
</if>
<kw name="Enter Username" library="LoginPage">
<arg>${username}</arg>
<doc>Take a username as argument and
enters it in the user_input</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${USER_INPUT}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 14:16:49.665" endtime="20220704 14:16:49.720"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${USER_INPUT}</arg>
<arg>${username}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220704 14:16:49.721" level="INFO">Typing text 'bootcamp04@mailinator.com' into text field 'css:input#user'.</msg>
<status status="PASS" starttime="20220704 14:16:49.720" endtime="20220704 14:16:49.855"/>
</kw>
<status status="PASS" starttime="20220704 14:16:49.665" endtime="20220704 14:16:49.855"/>
</kw>
<kw name="Wait Until Element Is Not Visible" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<doc>Waits until the element ``locator`` is not visible.</doc>
<status status="PASS" starttime="20220704 14:16:49.855" endtime="20220704 14:16:50.621"/>
</kw>
<kw name="Click Login Button" library="LoginPage">
<doc>Clicks Trello's login button if in Trello's
login page, else it clicks Atlassian's</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220704 14:16:50.633" level="INFO">${url} = https://trello.com/login</msg>
<status status="PASS" starttime="20220704 14:16:50.622" endtime="20220704 14:16:50.633"/>
</kw>
<if>
<branch type="IF" condition="'${url}' == '${LOGIN_URL}'">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220704 14:16:50.634" endtime="20220704 14:16:50.710"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220704 14:16:50.711" level="INFO">Clicking button 'css:input#login'.</msg>
<status status="PASS" starttime="20220704 14:16:50.710" endtime="20220704 14:16:51.714"/>
</kw>
<status status="PASS" starttime="20220704 14:16:50.633" endtime="20220704 14:16:51.714"/>
</branch>
<branch type="ELSE">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="NOT RUN" starttime="20220704 14:16:51.714" endtime="20220704 14:16:51.714"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<status status="NOT RUN" starttime="20220704 14:16:51.714" endtime="20220704 14:16:51.714"/>
</kw>
<status status="NOT RUN" starttime="20220704 14:16:51.714" endtime="20220704 14:16:51.714"/>
</branch>
<status status="PASS" starttime="20220704 14:16:50.633" endtime="20220704 14:16:51.714"/>
</if>
<status status="PASS" starttime="20220704 14:16:50.622" endtime="20220704 14:16:51.714"/>
</kw>
<kw name="Wait Until Location Is Atlassian's Login" library="LoginPage">
<doc>Waits for the page redirection when logging in.</doc>
<kw name="Wait Until Location Contains" library="SeleniumLibrary">
<arg>atlassian.com</arg>
<doc>Waits until the current URL contains ``expected``.</doc>
<status status="PASS" starttime="20220704 14:16:51.715" endtime="20220704 14:16:51.739"/>
</kw>
<status status="PASS" starttime="20220704 14:16:51.714" endtime="20220704 14:16:51.739"/>
</kw>
<kw name="Enter Password" library="LoginPage">
<arg>${password}</arg>
<doc>Take a password as argument and
enters it in the password_input</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<arg>timeout=10</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 14:16:51.739" endtime="20220704 14:16:51.802"/>
</kw>
<kw name="Input Password" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<arg>${password}</arg>
<doc>Types the given password into the text field identified by ``locator``.</doc>
<msg timestamp="20220704 14:16:51.802" level="INFO">Typing password into text field 'css:input#password'.</msg>
<msg timestamp="20220704 14:16:51.891" level="INFO">Temporally setting log level to: NONE</msg>
<msg timestamp="20220704 14:16:51.975" level="INFO">Log level changed from NONE to INFO.</msg>
<status status="PASS" starttime="20220704 14:16:51.802" endtime="20220704 14:16:51.975"/>
</kw>
<status status="PASS" starttime="20220704 14:16:51.739" endtime="20220704 14:16:51.976"/>
</kw>
<kw name="Click Login Button" library="LoginPage">
<doc>Clicks Trello's login button if in Trello's
login page, else it clicks Atlassian's</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220704 14:16:51.991" level="INFO">${url} = https://id.atlassian.com/login?application=trello&amp;continue=https%3A%2F%2Ftrello.com%2Fauth%2Fatlassian%2Fcallback%3FreturnUrl%3D%252F%26display%3D%26aaOnboarding%3D%26updateEmail%3D%26traceId%3D62c2f6...</msg>
<status status="PASS" starttime="20220704 14:16:51.976" endtime="20220704 14:16:51.991"/>
</kw>
<if>
<branch type="IF" condition="'${url}' == '${LOGIN_URL}'">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="NOT RUN" starttime="20220704 14:16:51.991" endtime="20220704 14:16:51.992"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<status status="NOT RUN" starttime="20220704 14:16:51.992" endtime="20220704 14:16:51.992"/>
</kw>
<status status="NOT RUN" starttime="20220704 14:16:51.991" endtime="20220704 14:16:51.992"/>
</branch>
<branch type="ELSE">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220704 14:16:51.992" endtime="20220704 14:16:52.058"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220704 14:16:52.058" level="INFO">Clicking button 'css:button#login-submit'.</msg>
<status status="PASS" starttime="20220704 14:16:52.058" endtime="20220704 14:16:52.174"/>
</kw>
<status status="PASS" starttime="20220704 14:16:51.992" endtime="20220704 14:16:52.174"/>
</branch>
<status status="PASS" starttime="20220704 14:16:51.991" endtime="20220704 14:16:52.174"/>
</if>
<status status="PASS" starttime="20220704 14:16:51.976" endtime="20220704 14:16:52.174"/>
</kw>
<status status="PASS" starttime="20220704 14:16:49.645" endtime="20220704 14:16:52.174"/>
</kw>
<kw name="Go To Board" library="BoardsPage">
<arg>NewName</arg>
<doc>Receives the board name and goes to that board's page.</doc>
<kw name="Format String" library="String">
<var>${locator}</var>
<arg>${BOARD_BUTTON}</arg>
<arg>${board_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:16:52.175" level="INFO">${locator} = //div[@title="NewName"]</msg>
<status status="PASS" starttime="20220704 14:16:52.175" endtime="20220704 14:16:52.175"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 14:16:52.175" endtime="20220704 14:16:55.739"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 14:16:55.740" level="INFO">Clicking element '//div[@title="NewName"]'.</msg>
<status status="PASS" starttime="20220704 14:16:55.740" endtime="20220704 14:16:56.099"/>
</kw>
<status status="PASS" starttime="20220704 14:16:52.174" endtime="20220704 14:16:56.099"/>
</kw>
<kw name="Verify Name of Board" library="UpperHorizontalMenu">
<arg>NewName</arg>
<doc>Verifies the name of a board</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${NAME_OF_BOARD}</arg>
<arg>10</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 14:16:56.100" endtime="20220704 14:16:56.686"/>
</kw>
<kw name="Element Text Should Be" library="SeleniumLibrary">
<arg>${NAME_OF_BOARD}</arg>
<arg>${name}</arg>
<doc>Verifies that element ``locator`` contains exact the text ``expected``.</doc>
<msg timestamp="20220704 14:16:56.687" level="INFO">Verifying element 'xpath://h1[contains(@class, 'js-board-editing-target')]' contains exact text 'NewName'.</msg>
<status status="PASS" starttime="20220704 14:16:56.686" endtime="20220704 14:16:56.757"/>
</kw>
<status status="PASS" starttime="20220704 14:16:56.099" endtime="20220704 14:16:56.757"/>
</kw>
<kw name="Open Show Menu" library="UpperHorizontalMenu">
<doc>Open the Show Menu in the right side of the board page where multiple options are available</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${SHOW_MENU_BUTTON}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 14:16:56.758" endtime="20220704 14:16:56.822"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${SHOW_MENU_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 14:16:56.823" level="INFO">Clicking element 'xpath://div[contains(@class, 'board-header')]//a[contains(., 'Show menu')]'.</msg>
<status status="PASS" starttime="20220704 14:16:56.822" endtime="20220704 14:16:56.948"/>
</kw>
<status status="PASS" starttime="20220704 14:16:56.758" endtime="20220704 14:16:56.948"/>
</kw>
<kw name="Delete Current Board" library="ShownMenu">
<doc>Deletes the current board</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${MORE_BUTTON}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 14:16:56.948" endtime="20220704 14:16:57.024"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${MORE_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 14:16:57.025" level="INFO">Clicking element 'xpath://div[contains(@class, 'board-menu-content')]//a[contains(text(), 'More')]'.</msg>
<status status="PASS" starttime="20220704 14:16:57.024" endtime="20220704 14:16:57.249"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${CLOSE_BOARD_BUTTON}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 14:16:57.249" endtime="20220704 14:16:57.305"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${CLOSE_BOARD_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 14:16:57.306" level="INFO">Clicking element 'xpath://div[@class= 'board-menu-content-frame']//a[contains(text(), 'Close board')]'.</msg>
<status status="PASS" starttime="20220704 14:16:57.305" endtime="20220704 14:16:57.392"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${CLOSE_BUTTON}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 14:16:57.392" endtime="20220704 14:16:57.452"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${CLOSE_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 14:16:57.453" level="INFO">Clicking element 'xpath://div[@class= 'no-back']//input'.</msg>
<status status="PASS" starttime="20220704 14:16:57.452" endtime="20220704 14:16:57.576"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${PERMANENTLY_DELETE_BUTTON}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 14:16:57.576" endtime="20220704 14:16:57.893"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${PERMANENTLY_DELETE_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 14:16:57.894" level="INFO">Clicking element 'xpath://button[text()= 'Permanently delete board']'.</msg>
<status status="PASS" starttime="20220704 14:16:57.894" endtime="20220704 14:16:57.972"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${CONFIRM_DELETE_BUTTON}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 14:16:57.973" endtime="20220704 14:16:58.014"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${CONFIRM_DELETE_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 14:16:58.014" level="INFO">Clicking element 'xpath://section//button[text()= 'Delete']'.</msg>
<status status="PASS" starttime="20220704 14:16:58.014" endtime="20220704 14:16:58.085"/>
</kw>
<status status="PASS" starttime="20220704 14:16:56.948" endtime="20220704 14:16:58.086"/>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Close Browser</arg>
<arg>AND</arg>
<arg>Run Keyword If Test Failed</arg>
<arg>Wait Until Keyword Succeeds</arg>
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20220704 14:16:58.086" endtime="20220704 14:16:58.198"/>
</kw>
<kw name="Run Keyword If Test Failed" library="BuiltIn">
<arg>Wait Until Keyword Succeeds</arg>
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Runs the given keyword with the given arguments, if the test failed.</doc>
<status status="PASS" starttime="20220704 14:16:58.199" endtime="20220704 14:16:58.199"/>
</kw>
<status status="PASS" starttime="20220704 14:16:58.086" endtime="20220704 14:16:58.199"/>
</kw>
<doc>Verify that a board can be deleted through GUI</doc>
<tag>board.delete</tag>
<tag>gui</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220704 14:16:48.047" endtime="20220704 14:16:58.199"/>
</test>
<test id="s1-s2-s1-s1-t3" name="Update a board's description" line="41">
<kw name="Create A Board" library="Board">
<var>${BOARD}</var>
<arg>BoardNew</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 14:16:58.203" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 14:16:58.203" endtime="20220704 14:16:58.203"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 14:16:58.203" endtime="20220704 14:16:58.203"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:16:58.205" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220704 14:16:58.204" endtime="20220704 14:16:58.205"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 14:16:58.420" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:16:58.205" endtime="20220704 14:16:58.420"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:16:58.420" endtime="20220704 14:16:58.420"/>
</return>
<msg timestamp="20220704 14:16:58.420" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:16:58.202" endtime="20220704 14:16:58.420"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:16:58.420" endtime="20220704 14:16:58.420"/>
</return>
<msg timestamp="20220704 14:16:58.420" level="INFO">${BOARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:16:58.202" endtime="20220704 14:16:58.420"/>
</kw>
<kw name="Open Browser From Environment" library="CommonGUI">
<arg>${LOGIN_URL}</arg>
<doc>This keywords takes REMOTE and BROWSER variables
from the environment automatically and only needs a url</doc>
<if>
<branch type="IF" condition="${is_remote}">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${url}</arg>
<arg>${BROWSER}</arg>
<arg>remote_url=http://selenium-hub:4444</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20220704 14:16:58.422" level="INFO">Opening browser 'chrome' to base url 'https://trello.com/login' through remote server at 'http://selenium-hub:4444'.</msg>
<status status="PASS" starttime="20220704 14:16:58.421" endtime="20220704 14:16:59.663"/>
</kw>
<status status="PASS" starttime="20220704 14:16:58.421" endtime="20220704 14:16:59.663"/>
</branch>
<branch type="ELSE">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${url}</arg>
<arg>${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<status status="NOT RUN" starttime="20220704 14:16:59.663" endtime="20220704 14:16:59.663"/>
</kw>
<status status="NOT RUN" starttime="20220704 14:16:59.663" endtime="20220704 14:16:59.663"/>
</branch>
<status status="PASS" starttime="20220704 14:16:58.421" endtime="20220704 14:16:59.663"/>
</if>
<status status="PASS" starttime="20220704 14:16:58.421" endtime="20220704 14:16:59.663"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20220704 14:16:59.663" endtime="20220704 14:16:59.785"/>
</kw>
<kw name="Login To Trello" library="LoginPage">
<arg>${DEFAULT_EMAIL}</arg>
<arg>${DEFAULT_PASSWORD}</arg>
<doc>High-level keyword for logging in to Trello</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220704 14:16:59.809" level="INFO">${url} = https://trello.com/login</msg>
<status status="PASS" starttime="20220704 14:16:59.786" endtime="20220704 14:16:59.809"/>
</kw>
<if>
<branch type="IF" condition="'${url}' != '${LOGIN_URL}'">
<kw name="Go To" library="SeleniumLibrary">
<arg>${LOGIN_URL}</arg>
<doc>Navigates the current browser window to the provided ``url``.</doc>
<status status="NOT RUN" starttime="20220704 14:16:59.810" endtime="20220704 14:16:59.810"/>
</kw>
<status status="NOT RUN" starttime="20220704 14:16:59.809" endtime="20220704 14:16:59.810"/>
</branch>
<status status="PASS" starttime="20220704 14:16:59.809" endtime="20220704 14:16:59.810"/>
</if>
<kw name="Enter Username" library="LoginPage">
<arg>${username}</arg>
<doc>Take a username as argument and
enters it in the user_input</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${USER_INPUT}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 14:16:59.810" endtime="20220704 14:16:59.858"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${USER_INPUT}</arg>
<arg>${username}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220704 14:16:59.859" level="INFO">Typing text 'bootcamp04@mailinator.com' into text field 'css:input#user'.</msg>
<status status="PASS" starttime="20220704 14:16:59.858" endtime="20220704 14:16:59.986"/>
</kw>
<status status="PASS" starttime="20220704 14:16:59.810" endtime="20220704 14:16:59.987"/>
</kw>
<kw name="Wait Until Element Is Not Visible" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<doc>Waits until the element ``locator`` is not visible.</doc>
<status status="PASS" starttime="20220704 14:16:59.987" endtime="20220704 14:17:00.767"/>
</kw>
<kw name="Click Login Button" library="LoginPage">
<doc>Clicks Trello's login button if in Trello's
login page, else it clicks Atlassian's</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220704 14:17:00.780" level="INFO">${url} = https://trello.com/login</msg>
<status status="PASS" starttime="20220704 14:17:00.768" endtime="20220704 14:17:00.780"/>
</kw>
<if>
<branch type="IF" condition="'${url}' == '${LOGIN_URL}'">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220704 14:17:00.780" endtime="20220704 14:17:00.840"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220704 14:17:00.841" level="INFO">Clicking button 'css:input#login'.</msg>
<status status="PASS" starttime="20220704 14:17:00.841" endtime="20220704 14:17:01.894"/>
</kw>
<status status="PASS" starttime="20220704 14:17:00.780" endtime="20220704 14:17:01.894"/>
</branch>
<branch type="ELSE">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="NOT RUN" starttime="20220704 14:17:01.894" endtime="20220704 14:17:01.894"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<status status="NOT RUN" starttime="20220704 14:17:01.895" endtime="20220704 14:17:01.895"/>
</kw>
<status status="NOT RUN" starttime="20220704 14:17:01.894" endtime="20220704 14:17:01.895"/>
</branch>
<status status="PASS" starttime="20220704 14:17:00.780" endtime="20220704 14:17:01.895"/>
</if>
<status status="PASS" starttime="20220704 14:17:00.768" endtime="20220704 14:17:01.895"/>
</kw>
<kw name="Wait Until Location Is Atlassian's Login" library="LoginPage">
<doc>Waits for the page redirection when logging in.</doc>
<kw name="Wait Until Location Contains" library="SeleniumLibrary">
<arg>atlassian.com</arg>
<doc>Waits until the current URL contains ``expected``.</doc>
<status status="PASS" starttime="20220704 14:17:01.895" endtime="20220704 14:17:01.918"/>
</kw>
<status status="PASS" starttime="20220704 14:17:01.895" endtime="20220704 14:17:01.918"/>
</kw>
<kw name="Enter Password" library="LoginPage">
<arg>${password}</arg>
<doc>Take a password as argument and
enters it in the password_input</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<arg>timeout=10</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 14:17:01.919" endtime="20220704 14:17:01.986"/>
</kw>
<kw name="Input Password" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<arg>${password}</arg>
<doc>Types the given password into the text field identified by ``locator``.</doc>
<msg timestamp="20220704 14:17:01.987" level="INFO">Typing password into text field 'css:input#password'.</msg>
<msg timestamp="20220704 14:17:02.058" level="INFO">Temporally setting log level to: NONE</msg>
<msg timestamp="20220704 14:17:02.123" level="INFO">Log level changed from NONE to INFO.</msg>
<status status="PASS" starttime="20220704 14:17:01.986" endtime="20220704 14:17:02.123"/>
</kw>
<status status="PASS" starttime="20220704 14:17:01.919" endtime="20220704 14:17:02.123"/>
</kw>
<kw name="Click Login Button" library="LoginPage">
<doc>Clicks Trello's login button if in Trello's
login page, else it clicks Atlassian's</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220704 14:17:02.135" level="INFO">${url} = https://id.atlassian.com/login?application=trello&amp;continue=https%3A%2F%2Ftrello.com%2Fauth%2Fatlassian%2Fcallback%3FreturnUrl%3D%252F%26display%3D%26aaOnboarding%3D%26updateEmail%3D%26traceId%3D62c2f6...</msg>
<status status="PASS" starttime="20220704 14:17:02.123" endtime="20220704 14:17:02.135"/>
</kw>
<if>
<branch type="IF" condition="'${url}' == '${LOGIN_URL}'">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="NOT RUN" starttime="20220704 14:17:02.135" endtime="20220704 14:17:02.135"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<status status="NOT RUN" starttime="20220704 14:17:02.136" endtime="20220704 14:17:02.136"/>
</kw>
<status status="NOT RUN" starttime="20220704 14:17:02.135" endtime="20220704 14:17:02.136"/>
</branch>
<branch type="ELSE">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220704 14:17:02.136" endtime="20220704 14:17:02.200"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220704 14:17:02.201" level="INFO">Clicking button 'css:button#login-submit'.</msg>
<status status="PASS" starttime="20220704 14:17:02.200" endtime="20220704 14:17:02.319"/>
</kw>
<status status="PASS" starttime="20220704 14:17:02.136" endtime="20220704 14:17:02.319"/>
</branch>
<status status="PASS" starttime="20220704 14:17:02.135" endtime="20220704 14:17:02.319"/>
</if>
<status status="PASS" starttime="20220704 14:17:02.123" endtime="20220704 14:17:02.320"/>
</kw>
<status status="PASS" starttime="20220704 14:16:59.786" endtime="20220704 14:17:02.320"/>
</kw>
<kw name="Go To Board" library="BoardsPage">
<arg>BoardNew</arg>
<doc>Receives the board name and goes to that board's page.</doc>
<kw name="Format String" library="String">
<var>${locator}</var>
<arg>${BOARD_BUTTON}</arg>
<arg>${board_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:17:02.321" level="INFO">${locator} = //div[@title="BoardNew"]</msg>
<status status="PASS" starttime="20220704 14:17:02.320" endtime="20220704 14:17:02.321"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 14:17:02.321" endtime="20220704 14:17:05.976"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 14:17:05.976" level="INFO">Clicking element '//div[@title="BoardNew"]'.</msg>
<status status="PASS" starttime="20220704 14:17:05.976" endtime="20220704 14:17:06.336"/>
</kw>
<status status="PASS" starttime="20220704 14:17:02.320" endtime="20220704 14:17:06.336"/>
</kw>
<kw name="Verify Name of Board" library="UpperHorizontalMenu">
<arg>BoardNew</arg>
<doc>Verifies the name of a board</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${NAME_OF_BOARD}</arg>
<arg>10</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 14:17:06.337" endtime="20220704 14:17:06.946"/>
</kw>
<kw name="Element Text Should Be" library="SeleniumLibrary">
<arg>${NAME_OF_BOARD}</arg>
<arg>${name}</arg>
<doc>Verifies that element ``locator`` contains exact the text ``expected``.</doc>
<msg timestamp="20220704 14:17:06.947" level="INFO">Verifying element 'xpath://h1[contains(@class, 'js-board-editing-target')]' contains exact text 'BoardNew'.</msg>
<status status="PASS" starttime="20220704 14:17:06.947" endtime="20220704 14:17:07.039"/>
</kw>
<status status="PASS" starttime="20220704 14:17:06.336" endtime="20220704 14:17:07.039"/>
</kw>
<kw name="Open Show Menu" library="UpperHorizontalMenu">
<doc>Open the Show Menu in the right side of the board page where multiple options are available</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${SHOW_MENU_BUTTON}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 14:17:07.039" endtime="20220704 14:17:07.119"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${SHOW_MENU_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 14:17:07.120" level="INFO">Clicking element 'xpath://div[contains(@class, 'board-header')]//a[contains(., 'Show menu')]'.</msg>
<status status="PASS" starttime="20220704 14:17:07.119" endtime="20220704 14:17:07.182"/>
</kw>
<status status="PASS" starttime="20220704 14:17:07.039" endtime="20220704 14:17:07.182"/>
</kw>
<kw name="Update Description of Board" library="ShownMenu">
<arg>UpdatedDescription</arg>
<doc>Updates the description of a board</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ABOUT_THIS_BOARD}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 14:17:07.183" endtime="20220704 14:17:07.246"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${ABOUT_THIS_BOARD}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 14:17:07.246" level="INFO">Clicking element 'xpath://div[contains(@class, 'board-menu-content')]//a[contains(text(), 'About')]'.</msg>
<status status="PASS" starttime="20220704 14:17:07.246" endtime="20220704 14:17:07.455"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DESCRIPTION}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 14:17:07.456" endtime="20220704 14:17:07.509"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${DESCRIPTION}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 14:17:07.510" level="INFO">Clicking element 'xpath://a[contains(@class, 'description-fake-text-area')]'.</msg>
<status status="PASS" starttime="20220704 14:17:07.509" endtime="20220704 14:17:07.590"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${DESC_TEXT_AREA}</arg>
<arg>${desc}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220704 14:17:07.590" level="INFO">Typing text 'UpdatedDescription' into text field 'xpath://div[contains(@class, 'board-menu-content')]//textarea'.</msg>
<status status="PASS" starttime="20220704 14:17:07.590" endtime="20220704 14:17:07.752"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${SAVE_DESC_BUTTON}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 14:17:07.752" endtime="20220704 14:17:07.808"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${SAVE_DESC_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 14:17:07.809" level="INFO">Clicking element 'xpath://div[contains(@class, 'board-menu-content')]//input[@value="Save"]'.</msg>
<status status="PASS" starttime="20220704 14:17:07.808" endtime="20220704 14:17:07.918"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${GO_BACK_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 14:17:07.919" level="INFO">Clicking element 'xpath://a[@title="Go back."]'.</msg>
<status status="PASS" starttime="20220704 14:17:07.918" endtime="20220704 14:17:08.033"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${CLOSE_SHOW_MENU}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 14:17:08.034" level="INFO">Clicking element 'xpath://a[@title="Close the board menu."]'.</msg>
<status status="PASS" starttime="20220704 14:17:08.033" endtime="20220704 14:17:08.121"/>
</kw>
<status status="PASS" starttime="20220704 14:17:07.182" endtime="20220704 14:17:08.122"/>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Close Browser</arg>
<arg>AND</arg>
<arg>Wait Until Keyword Succeeds</arg>
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20220704 14:17:08.122" endtime="20220704 14:17:08.238"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${BOARD.json()}[id]</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:17:08.241" level="INFO">${url} = boards/62c2f65afab377873fce8407</msg>
<status status="PASS" starttime="20220704 14:17:08.241" endtime="20220704 14:17:08.241"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 14:17:08.610" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:17:08.241" endtime="20220704 14:17:08.610"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:17:08.610" endtime="20220704 14:17:08.610"/>
</return>
<msg timestamp="20220704 14:17:08.611" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:17:08.240" endtime="20220704 14:17:08.611"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:17:08.611" endtime="20220704 14:17:08.611"/>
</return>
<status status="PASS" starttime="20220704 14:17:08.239" endtime="20220704 14:17:08.611"/>
</kw>
<status status="PASS" starttime="20220704 14:17:08.238" endtime="20220704 14:17:08.611"/>
</kw>
<status status="PASS" starttime="20220704 14:17:08.122" endtime="20220704 14:17:08.611"/>
</kw>
<doc>Verify that a board's description can be updated through GUI</doc>
<tag>board.update.description</tag>
<tag>gui</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220704 14:16:58.201" endtime="20220704 14:17:08.611"/>
</test>
<test id="s1-s2-s1-s1-t4" name="Update a board's name" line="56">
<kw name="Create A Board" library="Board">
<var>${BOARD}</var>
<arg>NewBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 14:17:08.614" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 14:17:08.614" endtime="20220704 14:17:08.614"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 14:17:08.614" endtime="20220704 14:17:08.614"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:17:08.615" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220704 14:17:08.614" endtime="20220704 14:17:08.615"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 14:17:08.843" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:17:08.616" endtime="20220704 14:17:08.843"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:17:08.843" endtime="20220704 14:17:08.843"/>
</return>
<msg timestamp="20220704 14:17:08.843" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:17:08.613" endtime="20220704 14:17:08.843"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:17:08.843" endtime="20220704 14:17:08.844"/>
</return>
<msg timestamp="20220704 14:17:08.844" level="INFO">${BOARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:17:08.612" endtime="20220704 14:17:08.844"/>
</kw>
<kw name="Open Browser From Environment" library="CommonGUI">
<arg>${LOGIN_URL}</arg>
<doc>This keywords takes REMOTE and BROWSER variables
from the environment automatically and only needs a url</doc>
<if>
<branch type="IF" condition="${is_remote}">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${url}</arg>
<arg>${BROWSER}</arg>
<arg>remote_url=http://selenium-hub:4444</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20220704 14:17:08.845" level="INFO">Opening browser 'chrome' to base url 'https://trello.com/login' through remote server at 'http://selenium-hub:4444'.</msg>
<status status="PASS" starttime="20220704 14:17:08.845" endtime="20220704 14:17:10.026"/>
</kw>
<status status="PASS" starttime="20220704 14:17:08.844" endtime="20220704 14:17:10.026"/>
</branch>
<branch type="ELSE">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${url}</arg>
<arg>${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<status status="NOT RUN" starttime="20220704 14:17:10.026" endtime="20220704 14:17:10.026"/>
</kw>
<status status="NOT RUN" starttime="20220704 14:17:10.026" endtime="20220704 14:17:10.026"/>
</branch>
<status status="PASS" starttime="20220704 14:17:08.844" endtime="20220704 14:17:10.026"/>
</if>
<status status="PASS" starttime="20220704 14:17:08.844" endtime="20220704 14:17:10.027"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20220704 14:17:10.027" endtime="20220704 14:17:10.152"/>
</kw>
<kw name="Login To Trello" library="LoginPage">
<arg>${DEFAULT_EMAIL}</arg>
<arg>${DEFAULT_PASSWORD}</arg>
<doc>High-level keyword for logging in to Trello</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220704 14:17:10.170" level="INFO">${url} = https://trello.com/login</msg>
<status status="PASS" starttime="20220704 14:17:10.153" endtime="20220704 14:17:10.170"/>
</kw>
<if>
<branch type="IF" condition="'${url}' != '${LOGIN_URL}'">
<kw name="Go To" library="SeleniumLibrary">
<arg>${LOGIN_URL}</arg>
<doc>Navigates the current browser window to the provided ``url``.</doc>
<status status="NOT RUN" starttime="20220704 14:17:10.170" endtime="20220704 14:17:10.170"/>
</kw>
<status status="NOT RUN" starttime="20220704 14:17:10.170" endtime="20220704 14:17:10.170"/>
</branch>
<status status="PASS" starttime="20220704 14:17:10.170" endtime="20220704 14:17:10.170"/>
</if>
<kw name="Enter Username" library="LoginPage">
<arg>${username}</arg>
<doc>Take a username as argument and
enters it in the user_input</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${USER_INPUT}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 14:17:10.171" endtime="20220704 14:17:10.221"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${USER_INPUT}</arg>
<arg>${username}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220704 14:17:10.222" level="INFO">Typing text 'bootcamp04@mailinator.com' into text field 'css:input#user'.</msg>
<status status="PASS" starttime="20220704 14:17:10.222" endtime="20220704 14:17:10.333"/>
</kw>
<status status="PASS" starttime="20220704 14:17:10.171" endtime="20220704 14:17:10.334"/>
</kw>
<kw name="Wait Until Element Is Not Visible" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<doc>Waits until the element ``locator`` is not visible.</doc>
<status status="PASS" starttime="20220704 14:17:10.334" endtime="20220704 14:17:11.073"/>
</kw>
<kw name="Click Login Button" library="LoginPage">
<doc>Clicks Trello's login button if in Trello's
login page, else it clicks Atlassian's</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220704 14:17:11.083" level="INFO">${url} = https://trello.com/login</msg>
<status status="PASS" starttime="20220704 14:17:11.073" endtime="20220704 14:17:11.083"/>
</kw>
<if>
<branch type="IF" condition="'${url}' == '${LOGIN_URL}'">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220704 14:17:11.084" endtime="20220704 14:17:11.131"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220704 14:17:11.131" level="INFO">Clicking button 'css:input#login'.</msg>
<status status="PASS" starttime="20220704 14:17:11.131" endtime="20220704 14:17:12.155"/>
</kw>
<status status="PASS" starttime="20220704 14:17:11.083" endtime="20220704 14:17:12.155"/>
</branch>
<branch type="ELSE">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="NOT RUN" starttime="20220704 14:17:12.155" endtime="20220704 14:17:12.155"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<status status="NOT RUN" starttime="20220704 14:17:12.155" endtime="20220704 14:17:12.155"/>
</kw>
<status status="NOT RUN" starttime="20220704 14:17:12.155" endtime="20220704 14:17:12.155"/>
</branch>
<status status="PASS" starttime="20220704 14:17:11.083" endtime="20220704 14:17:12.155"/>
</if>
<status status="PASS" starttime="20220704 14:17:11.073" endtime="20220704 14:17:12.155"/>
</kw>
<kw name="Wait Until Location Is Atlassian's Login" library="LoginPage">
<doc>Waits for the page redirection when logging in.</doc>
<kw name="Wait Until Location Contains" library="SeleniumLibrary">
<arg>atlassian.com</arg>
<doc>Waits until the current URL contains ``expected``.</doc>
<status status="PASS" starttime="20220704 14:17:12.156" endtime="20220704 14:17:12.174"/>
</kw>
<status status="PASS" starttime="20220704 14:17:12.156" endtime="20220704 14:17:12.175"/>
</kw>
<kw name="Enter Password" library="LoginPage">
<arg>${password}</arg>
<doc>Take a password as argument and
enters it in the password_input</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<arg>timeout=10</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 14:17:12.175" endtime="20220704 14:17:12.220"/>
</kw>
<kw name="Input Password" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<arg>${password}</arg>
<doc>Types the given password into the text field identified by ``locator``.</doc>
<msg timestamp="20220704 14:17:12.221" level="INFO">Typing password into text field 'css:input#password'.</msg>
<msg timestamp="20220704 14:17:12.274" level="INFO">Temporally setting log level to: NONE</msg>
<msg timestamp="20220704 14:17:12.351" level="INFO">Log level changed from NONE to INFO.</msg>
<status status="PASS" starttime="20220704 14:17:12.220" endtime="20220704 14:17:12.351"/>
</kw>
<status status="PASS" starttime="20220704 14:17:12.175" endtime="20220704 14:17:12.351"/>
</kw>
<kw name="Click Login Button" library="LoginPage">
<doc>Clicks Trello's login button if in Trello's
login page, else it clicks Atlassian's</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220704 14:17:12.362" level="INFO">${url} = https://id.atlassian.com/login?application=trello&amp;continue=https%3A%2F%2Ftrello.com%2Fauth%2Fatlassian%2Fcallback%3FreturnUrl%3D%252F%26display%3D%26aaOnboarding%3D%26updateEmail%3D%26traceId%3D62c2f6...</msg>
<status status="PASS" starttime="20220704 14:17:12.352" endtime="20220704 14:17:12.362"/>
</kw>
<if>
<branch type="IF" condition="'${url}' == '${LOGIN_URL}'">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="NOT RUN" starttime="20220704 14:17:12.362" endtime="20220704 14:17:12.362"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<status status="NOT RUN" starttime="20220704 14:17:12.363" endtime="20220704 14:17:12.363"/>
</kw>
<status status="NOT RUN" starttime="20220704 14:17:12.362" endtime="20220704 14:17:12.363"/>
</branch>
<branch type="ELSE">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220704 14:17:12.363" endtime="20220704 14:17:12.411"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220704 14:17:12.412" level="INFO">Clicking button 'css:button#login-submit'.</msg>
<status status="PASS" starttime="20220704 14:17:12.412" endtime="20220704 14:17:12.528"/>
</kw>
<status status="PASS" starttime="20220704 14:17:12.363" endtime="20220704 14:17:12.528"/>
</branch>
<status status="PASS" starttime="20220704 14:17:12.362" endtime="20220704 14:17:12.528"/>
</if>
<status status="PASS" starttime="20220704 14:17:12.351" endtime="20220704 14:17:12.528"/>
</kw>
<status status="PASS" starttime="20220704 14:17:10.152" endtime="20220704 14:17:12.528"/>
</kw>
<kw name="Go To Board" library="BoardsPage">
<arg>NewBoard</arg>
<doc>Receives the board name and goes to that board's page.</doc>
<kw name="Format String" library="String">
<var>${locator}</var>
<arg>${BOARD_BUTTON}</arg>
<arg>${board_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:17:12.529" level="INFO">${locator} = //div[@title="NewBoard"]</msg>
<status status="PASS" starttime="20220704 14:17:12.529" endtime="20220704 14:17:12.529"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 14:17:12.529" endtime="20220704 14:17:16.085"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 14:17:16.085" level="INFO">Clicking element '//div[@title="NewBoard"]'.</msg>
<status status="PASS" starttime="20220704 14:17:16.085" endtime="20220704 14:17:16.462"/>
</kw>
<status status="PASS" starttime="20220704 14:17:12.528" endtime="20220704 14:17:16.462"/>
</kw>
<kw name="Verify Name of Board" library="UpperHorizontalMenu">
<arg>NewBoard</arg>
<doc>Verifies the name of a board</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${NAME_OF_BOARD}</arg>
<arg>10</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 14:17:16.463" endtime="20220704 14:17:16.980"/>
</kw>
<kw name="Element Text Should Be" library="SeleniumLibrary">
<arg>${NAME_OF_BOARD}</arg>
<arg>${name}</arg>
<doc>Verifies that element ``locator`` contains exact the text ``expected``.</doc>
<msg timestamp="20220704 14:17:16.981" level="INFO">Verifying element 'xpath://h1[contains(@class, 'js-board-editing-target')]' contains exact text 'NewBoard'.</msg>
<status status="PASS" starttime="20220704 14:17:16.980" endtime="20220704 14:17:17.045"/>
</kw>
<status status="PASS" starttime="20220704 14:17:16.462" endtime="20220704 14:17:17.046"/>
</kw>
<kw name="Update Name of Board" library="UpperHorizontalMenu">
<arg>UpdatedName</arg>
<doc>Updates the name of a board
it takes the Length of the boards's name in order to press the delete key
as many times as the name's length</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${NAME_OF_BOARD}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 14:17:17.046" endtime="20220704 14:17:17.087"/>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<var>${response}</var>
<arg>${NAME_OF_BOARD}</arg>
<doc>Returns the text value of the element identified by ``locator``.</doc>
<msg timestamp="20220704 14:17:17.125" level="INFO">${response} = NewBoard</msg>
<status status="PASS" starttime="20220704 14:17:17.087" endtime="20220704 14:17:17.125"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${names_lenght}</var>
<arg>${response}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20220704 14:17:17.126" level="INFO">Length is 8</msg>
<msg timestamp="20220704 14:17:17.126" level="INFO">${names_lenght} = 8</msg>
<status status="PASS" starttime="20220704 14:17:17.125" endtime="20220704 14:17:17.126"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${NAME_OF_BOARD}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 14:17:17.126" level="INFO">Clicking element 'xpath://h1[contains(@class, 'js-board-editing-target')]'.</msg>
<status status="PASS" starttime="20220704 14:17:17.126" endtime="20220704 14:17:17.189"/>
</kw>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>${NAME_OF_BOARD_INPUT}</arg>
<arg>\ue011</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20220704 14:17:17.190" level="INFO">Sending key(s) ('\ue011',) to xpath://input[contains(@class, 'board-name-input')] element.</msg>
<msg timestamp="20220704 14:17:17.528" level="INFO">Sending key </msg>
<status status="PASS" starttime="20220704 14:17:17.190" endtime="20220704 14:17:17.546"/>
</kw>
<kw name="Repeat Keyword" library="BuiltIn">
<arg>${names_lenght}</arg>
<arg>Press Keys</arg>
<arg>${NAME_OF_BOARD_INPUT}</arg>
<arg>\ue017</arg>
<doc>Executes the specified keyword multiple times.</doc>
<msg timestamp="20220704 14:17:17.546" level="INFO">Repeating keyword, round 1/8.</msg>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>${NAME_OF_BOARD_INPUT}</arg>
<arg>\ue017</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20220704 14:17:17.547" level="INFO">Sending key(s) ('\ue017',) to xpath://input[contains(@class, 'board-name-input')] element.</msg>
<msg timestamp="20220704 14:17:17.830" level="INFO">Sending key </msg>
<status status="PASS" starttime="20220704 14:17:17.546" endtime="20220704 14:17:17.854"/>
</kw>
<msg timestamp="20220704 14:17:17.855" level="INFO">Repeating keyword, round 2/8.</msg>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>${NAME_OF_BOARD_INPUT}</arg>
<arg>\ue017</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20220704 14:17:17.855" level="INFO">Sending key(s) ('\ue017',) to xpath://input[contains(@class, 'board-name-input')] element.</msg>
<msg timestamp="20220704 14:17:18.136" level="INFO">Sending key </msg>
<status status="PASS" starttime="20220704 14:17:17.855" endtime="20220704 14:17:18.153"/>
</kw>
<msg timestamp="20220704 14:17:18.153" level="INFO">Repeating keyword, round 3/8.</msg>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>${NAME_OF_BOARD_INPUT}</arg>
<arg>\ue017</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20220704 14:17:18.154" level="INFO">Sending key(s) ('\ue017',) to xpath://input[contains(@class, 'board-name-input')] element.</msg>
<msg timestamp="20220704 14:17:18.484" level="INFO">Sending key </msg>
<status status="PASS" starttime="20220704 14:17:18.153" endtime="20220704 14:17:18.496"/>
</kw>
<msg timestamp="20220704 14:17:18.496" level="INFO">Repeating keyword, round 4/8.</msg>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>${NAME_OF_BOARD_INPUT}</arg>
<arg>\ue017</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20220704 14:17:18.497" level="INFO">Sending key(s) ('\ue017',) to xpath://input[contains(@class, 'board-name-input')] element.</msg>
<msg timestamp="20220704 14:17:18.783" level="INFO">Sending key </msg>
<status status="PASS" starttime="20220704 14:17:18.497" endtime="20220704 14:17:18.803"/>
</kw>
<msg timestamp="20220704 14:17:18.803" level="INFO">Repeating keyword, round 5/8.</msg>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>${NAME_OF_BOARD_INPUT}</arg>
<arg>\ue017</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20220704 14:17:18.803" level="INFO">Sending key(s) ('\ue017',) to xpath://input[contains(@class, 'board-name-input')] element.</msg>
<msg timestamp="20220704 14:17:19.093" level="INFO">Sending key </msg>
<status status="PASS" starttime="20220704 14:17:18.803" endtime="20220704 14:17:19.114"/>
</kw>
<msg timestamp="20220704 14:17:19.114" level="INFO">Repeating keyword, round 6/8.</msg>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>${NAME_OF_BOARD_INPUT}</arg>
<arg>\ue017</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20220704 14:17:19.115" level="INFO">Sending key(s) ('\ue017',) to xpath://input[contains(@class, 'board-name-input')] element.</msg>
<msg timestamp="20220704 14:17:19.404" level="INFO">Sending key </msg>
<status status="PASS" starttime="20220704 14:17:19.115" endtime="20220704 14:17:19.419"/>
</kw>
<msg timestamp="20220704 14:17:19.419" level="INFO">Repeating keyword, round 7/8.</msg>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>${NAME_OF_BOARD_INPUT}</arg>
<arg>\ue017</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20220704 14:17:19.420" level="INFO">Sending key(s) ('\ue017',) to xpath://input[contains(@class, 'board-name-input')] element.</msg>
<msg timestamp="20220704 14:17:19.702" level="INFO">Sending key </msg>
<status status="PASS" starttime="20220704 14:17:19.419" endtime="20220704 14:17:19.718"/>
</kw>
<msg timestamp="20220704 14:17:19.718" level="INFO">Repeating keyword, round 8/8.</msg>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>${NAME_OF_BOARD_INPUT}</arg>
<arg>\ue017</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20220704 14:17:19.719" level="INFO">Sending key(s) ('\ue017',) to xpath://input[contains(@class, 'board-name-input')] element.</msg>
<msg timestamp="20220704 14:17:19.999" level="INFO">Sending key </msg>
<status status="PASS" starttime="20220704 14:17:19.718" endtime="20220704 14:17:20.012"/>
</kw>
<status status="PASS" starttime="20220704 14:17:17.546" endtime="20220704 14:17:20.012"/>
</kw>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>${NAME_OF_BOARD_INPUT}</arg>
<arg>${name}</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20220704 14:17:20.013" level="INFO">Sending key(s) ('UpdatedName',) to xpath://input[contains(@class, 'board-name-input')] element.</msg>
<msg timestamp="20220704 14:17:20.295" level="INFO">Sending keys UpdatedName</msg>
<status status="PASS" starttime="20220704 14:17:20.012" endtime="20220704 14:17:20.396"/>
</kw>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>${NAME_OF_BOARD_INPUT}</arg>
<arg>\ue007</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20220704 14:17:20.397" level="INFO">Sending key(s) ('\ue007',) to xpath://input[contains(@class, 'board-name-input')] element.</msg>
<msg timestamp="20220704 14:17:20.688" level="INFO">Sending key </msg>
<status status="PASS" starttime="20220704 14:17:20.397" endtime="20220704 14:17:20.792"/>
</kw>
<status status="PASS" starttime="20220704 14:17:17.046" endtime="20220704 14:17:20.792"/>
</kw>
<kw name="Verify Name of Board" library="UpperHorizontalMenu">
<arg>UpdatedName</arg>
<doc>Verifies the name of a board</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${NAME_OF_BOARD}</arg>
<arg>10</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 14:17:20.793" endtime="20220704 14:17:20.836"/>
</kw>
<kw name="Element Text Should Be" library="SeleniumLibrary">
<arg>${NAME_OF_BOARD}</arg>
<arg>${name}</arg>
<doc>Verifies that element ``locator`` contains exact the text ``expected``.</doc>
<msg timestamp="20220704 14:17:20.836" level="INFO">Verifying element 'xpath://h1[contains(@class, 'js-board-editing-target')]' contains exact text 'UpdatedName'.</msg>
<status status="PASS" starttime="20220704 14:17:20.836" endtime="20220704 14:17:20.868"/>
</kw>
<status status="PASS" starttime="20220704 14:17:20.792" endtime="20220704 14:17:20.868"/>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Close Browser</arg>
<arg>AND</arg>
<arg>Wait Until Keyword Succeeds</arg>
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20220704 14:17:20.869" endtime="20220704 14:17:20.970"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${BOARD.json()}[id]</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:17:20.974" level="INFO">${url} = boards/62c2f664ad9ed86c53578298</msg>
<status status="PASS" starttime="20220704 14:17:20.973" endtime="20220704 14:17:20.974"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 14:17:21.331" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:17:20.974" endtime="20220704 14:17:21.331"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:17:21.331" endtime="20220704 14:17:21.331"/>
</return>
<msg timestamp="20220704 14:17:21.331" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:17:20.973" endtime="20220704 14:17:21.332"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:17:21.332" endtime="20220704 14:17:21.332"/>
</return>
<status status="PASS" starttime="20220704 14:17:20.971" endtime="20220704 14:17:21.332"/>
</kw>
<status status="PASS" starttime="20220704 14:17:20.971" endtime="20220704 14:17:21.332"/>
</kw>
<status status="PASS" starttime="20220704 14:17:20.869" endtime="20220704 14:17:21.332"/>
</kw>
<doc>Verify that a board's name can be updated through GUI</doc>
<tag>board.update.name</tag>
<tag>gui</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220704 14:17:08.612" endtime="20220704 14:17:21.332"/>
</test>
<kw name="Boards Suite Teardown" type="TEARDOWN">
<doc>Deletes the Trello sesion that had been created</doc>
<kw name="Delete All Sessions" library="request_own_library">
<status status="PASS" starttime="20220704 14:17:21.334" endtime="20220704 14:17:21.335"/>
</kw>
<status status="PASS" starttime="20220704 14:17:21.333" endtime="20220704 14:17:21.335"/>
</kw>
<doc>Board Tests</doc>
<status status="PASS" starttime="20220704 14:16:35.609" endtime="20220704 14:17:21.335"/>
</suite>
<suite id="s1-s2-s1-s2" name="Trello Gui Cards" source="/trello/gui/trello_gui_cards.robot">
<kw name="Cards Suite Setup" type="SETUP">
<doc>Creates a new board through API, then Opens a Browser
Login to Trello, and Go to the created board's page.</doc>
<kw name="Create Trello Session" library="TrelloAPI">
<doc>Creates a Trello Session</doc>
<kw name="Create Session" library="request_own_library">
<arg>${API_BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<status status="PASS" starttime="20220704 14:17:21.352" endtime="20220704 14:17:21.352"/>
</kw>
<status status="PASS" starttime="20220704 14:17:21.352" endtime="20220704 14:17:21.353"/>
</kw>
<kw name="Create A Board" library="Board">
<var>${BOARD}</var>
<arg>CardTestBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 14:17:21.353" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 14:17:21.353" endtime="20220704 14:17:21.354"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 14:17:21.354" endtime="20220704 14:17:21.354"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:17:21.355" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220704 14:17:21.354" endtime="20220704 14:17:21.355"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 14:17:21.657" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:17:21.355" endtime="20220704 14:17:21.657"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:17:21.657" endtime="20220704 14:17:21.657"/>
</return>
<msg timestamp="20220704 14:17:21.657" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:17:21.353" endtime="20220704 14:17:21.657"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:17:21.657" endtime="20220704 14:17:21.657"/>
</return>
<msg timestamp="20220704 14:17:21.658" level="INFO">${BOARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:17:21.353" endtime="20220704 14:17:21.658"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_BOARD_ID}</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220704 14:17:21.659" level="INFO">${TEST_SUITE_BOARD_ID} = 62c2f671a555f21c206473a1</msg>
<status status="PASS" starttime="20220704 14:17:21.658" endtime="20220704 14:17:21.659"/>
</kw>
<kw name="Open Browser From Environment" library="CommonGUI">
<arg>${LOGIN_URL}</arg>
<doc>This keywords takes REMOTE and BROWSER variables
from the environment automatically and only needs a url</doc>
<if>
<branch type="IF" condition="${is_remote}">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${url}</arg>
<arg>${BROWSER}</arg>
<arg>remote_url=http://selenium-hub:4444</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20220704 14:17:21.661" level="INFO">Opening browser 'chrome' to base url 'https://trello.com/login' through remote server at 'http://selenium-hub:4444'.</msg>
<status status="PASS" starttime="20220704 14:17:21.660" endtime="20220704 14:17:22.811"/>
</kw>
<status status="PASS" starttime="20220704 14:17:21.660" endtime="20220704 14:17:22.812"/>
</branch>
<branch type="ELSE">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${url}</arg>
<arg>${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<status status="NOT RUN" starttime="20220704 14:17:22.812" endtime="20220704 14:17:22.812"/>
</kw>
<status status="NOT RUN" starttime="20220704 14:17:22.812" endtime="20220704 14:17:22.812"/>
</branch>
<status status="PASS" starttime="20220704 14:17:21.660" endtime="20220704 14:17:22.812"/>
</if>
<status status="PASS" starttime="20220704 14:17:21.660" endtime="20220704 14:17:22.812"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20220704 14:17:22.812" endtime="20220704 14:17:22.929"/>
</kw>
<kw name="Login To Trello" library="LoginPage">
<arg>${DEFAULT_EMAIL}</arg>
<arg>${DEFAULT_PASSWORD}</arg>
<doc>High-level keyword for logging in to Trello</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220704 14:17:22.943" level="INFO">${url} = https://trello.com/login</msg>
<status status="PASS" starttime="20220704 14:17:22.929" endtime="20220704 14:17:22.943"/>
</kw>
<if>
<branch type="IF" condition="'${url}' != '${LOGIN_URL}'">
<kw name="Go To" library="SeleniumLibrary">
<arg>${LOGIN_URL}</arg>
<doc>Navigates the current browser window to the provided ``url``.</doc>
<status status="NOT RUN" starttime="20220704 14:17:22.944" endtime="20220704 14:17:22.944"/>
</kw>
<status status="NOT RUN" starttime="20220704 14:17:22.943" endtime="20220704 14:17:22.944"/>
</branch>
<status status="PASS" starttime="20220704 14:17:22.943" endtime="20220704 14:17:22.944"/>
</if>
<kw name="Enter Username" library="LoginPage">
<arg>${username}</arg>
<doc>Take a username as argument and
enters it in the user_input</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${USER_INPUT}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 14:17:22.944" endtime="20220704 14:17:23.003"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${USER_INPUT}</arg>
<arg>${username}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220704 14:17:23.004" level="INFO">Typing text 'bootcamp04@mailinator.com' into text field 'css:input#user'.</msg>
<status status="PASS" starttime="20220704 14:17:23.003" endtime="20220704 14:17:23.119"/>
</kw>
<status status="PASS" starttime="20220704 14:17:22.944" endtime="20220704 14:17:23.120"/>
</kw>
<kw name="Wait Until Element Is Not Visible" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<doc>Waits until the element ``locator`` is not visible.</doc>
<status status="PASS" starttime="20220704 14:17:23.120" endtime="20220704 14:17:23.869"/>
</kw>
<kw name="Click Login Button" library="LoginPage">
<doc>Clicks Trello's login button if in Trello's
login page, else it clicks Atlassian's</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220704 14:17:23.880" level="INFO">${url} = https://trello.com/login</msg>
<status status="PASS" starttime="20220704 14:17:23.869" endtime="20220704 14:17:23.880"/>
</kw>
<if>
<branch type="IF" condition="'${url}' == '${LOGIN_URL}'">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220704 14:17:23.881" endtime="20220704 14:17:23.930"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220704 14:17:23.931" level="INFO">Clicking button 'css:input#login'.</msg>
<status status="PASS" starttime="20220704 14:17:23.930" endtime="20220704 14:17:24.946"/>
</kw>
<status status="PASS" starttime="20220704 14:17:23.880" endtime="20220704 14:17:24.946"/>
</branch>
<branch type="ELSE">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="NOT RUN" starttime="20220704 14:17:24.947" endtime="20220704 14:17:24.947"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<status status="NOT RUN" starttime="20220704 14:17:24.947" endtime="20220704 14:17:24.947"/>
</kw>
<status status="NOT RUN" starttime="20220704 14:17:24.946" endtime="20220704 14:17:24.947"/>
</branch>
<status status="PASS" starttime="20220704 14:17:23.880" endtime="20220704 14:17:24.947"/>
</if>
<status status="PASS" starttime="20220704 14:17:23.869" endtime="20220704 14:17:24.947"/>
</kw>
<kw name="Wait Until Location Is Atlassian's Login" library="LoginPage">
<doc>Waits for the page redirection when logging in.</doc>
<kw name="Wait Until Location Contains" library="SeleniumLibrary">
<arg>atlassian.com</arg>
<doc>Waits until the current URL contains ``expected``.</doc>
<status status="PASS" starttime="20220704 14:17:24.948" endtime="20220704 14:17:24.968"/>
</kw>
<status status="PASS" starttime="20220704 14:17:24.947" endtime="20220704 14:17:24.968"/>
</kw>
<kw name="Enter Password" library="LoginPage">
<arg>${password}</arg>
<doc>Take a password as argument and
enters it in the password_input</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<arg>timeout=10</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 14:17:24.969" endtime="20220704 14:17:25.011"/>
</kw>
<kw name="Input Password" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<arg>${password}</arg>
<doc>Types the given password into the text field identified by ``locator``.</doc>
<msg timestamp="20220704 14:17:25.012" level="INFO">Typing password into text field 'css:input#password'.</msg>
<msg timestamp="20220704 14:17:25.071" level="INFO">Temporally setting log level to: NONE</msg>
<msg timestamp="20220704 14:17:25.149" level="INFO">Log level changed from NONE to INFO.</msg>
<status status="PASS" starttime="20220704 14:17:25.012" endtime="20220704 14:17:25.149"/>
</kw>
<status status="PASS" starttime="20220704 14:17:24.968" endtime="20220704 14:17:25.149"/>
</kw>
<kw name="Click Login Button" library="LoginPage">
<doc>Clicks Trello's login button if in Trello's
login page, else it clicks Atlassian's</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220704 14:17:25.165" level="INFO">${url} = https://id.atlassian.com/login?application=trello&amp;continue=https%3A%2F%2Ftrello.com%2Fauth%2Fatlassian%2Fcallback%3FreturnUrl%3D%252F%26display%3D%26aaOnboarding%3D%26updateEmail%3D%26traceId%3D62c2f6...</msg>
<status status="PASS" starttime="20220704 14:17:25.149" endtime="20220704 14:17:25.165"/>
</kw>
<if>
<branch type="IF" condition="'${url}' == '${LOGIN_URL}'">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="NOT RUN" starttime="20220704 14:17:25.165" endtime="20220704 14:17:25.165"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<status status="NOT RUN" starttime="20220704 14:17:25.166" endtime="20220704 14:17:25.166"/>
</kw>
<status status="NOT RUN" starttime="20220704 14:17:25.165" endtime="20220704 14:17:25.166"/>
</branch>
<branch type="ELSE">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220704 14:17:25.166" endtime="20220704 14:17:25.223"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220704 14:17:25.224" level="INFO">Clicking button 'css:button#login-submit'.</msg>
<status status="PASS" starttime="20220704 14:17:25.224" endtime="20220704 14:17:25.371"/>
</kw>
<status status="PASS" starttime="20220704 14:17:25.166" endtime="20220704 14:17:25.371"/>
</branch>
<status status="PASS" starttime="20220704 14:17:25.165" endtime="20220704 14:17:25.371"/>
</if>
<status status="PASS" starttime="20220704 14:17:25.149" endtime="20220704 14:17:25.371"/>
</kw>
<status status="PASS" starttime="20220704 14:17:22.929" endtime="20220704 14:17:25.371"/>
</kw>
<kw name="Go To Board" library="BoardsPage">
<arg>CardTestBoard</arg>
<doc>Receives the board name and goes to that board's page.</doc>
<kw name="Format String" library="String">
<var>${locator}</var>
<arg>${BOARD_BUTTON}</arg>
<arg>${board_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:17:25.372" level="INFO">${locator} = //div[@title="CardTestBoard"]</msg>
<status status="PASS" starttime="20220704 14:17:25.372" endtime="20220704 14:17:25.372"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 14:17:25.372" endtime="20220704 14:17:28.907"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 14:17:28.908" level="INFO">Clicking element '//div[@title="CardTestBoard"]'.</msg>
<status status="PASS" starttime="20220704 14:17:28.908" endtime="20220704 14:17:29.277"/>
</kw>
<status status="PASS" starttime="20220704 14:17:25.371" endtime="20220704 14:17:29.277"/>
</kw>
<status status="PASS" starttime="20220704 14:17:21.351" endtime="20220704 14:17:29.277"/>
</kw>
<test id="s1-s2-s1-s2-t1" name="Verify A Card Can Be Created" line="12">
<kw name="Set Test Variable" library="BuiltIn">
<arg>\${list}</arg>
<arg>To Do</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220704 14:17:29.279" level="INFO">${list} = To Do</msg>
<status status="PASS" starttime="20220704 14:17:29.279" endtime="20220704 14:17:29.279"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>\${card}</arg>
<arg>Test Card</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220704 14:17:29.279" level="INFO">${card} = Test Card</msg>
<status status="PASS" starttime="20220704 14:17:29.279" endtime="20220704 14:17:29.279"/>
</kw>
<kw name="Create Card In List" library="ListComponent">
<arg>${list}</arg>
<arg>${card}</arg>
<doc>Create a new card in the given list
Required args: list_name, card_name</doc>
<kw name="Format String" library="String">
<var>${add_card_locator}</var>
<arg>${LIST_ADD_CARD}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:17:29.280" level="INFO">${add_card_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Add a card')]</msg>
<status status="PASS" starttime="20220704 14:17:29.280" endtime="20220704 14:17:29.280"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${add_card_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 14:17:29.280" endtime="20220704 14:17:29.837"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${add_card_locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 14:17:29.838" level="INFO">Clicking element '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Add a card')]'.</msg>
<status status="PASS" starttime="20220704 14:17:29.838" endtime="20220704 14:17:29.911"/>
</kw>
<kw name="Format String" library="String">
<var>${textarea_locator}</var>
<arg>${CARD_TITLE_INPUT}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:17:29.912" level="INFO">${textarea_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//textarea[contains(@class, 'list-card-composer-textarea')]</msg>
<status status="PASS" starttime="20220704 14:17:29.911" endtime="20220704 14:17:29.912"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 14:17:29.912" endtime="20220704 14:17:29.963"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 14:17:29.964" level="INFO">Clicking element '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//textarea[contains(@class, 'list-card-composer-textarea')]'.</msg>
<status status="PASS" starttime="20220704 14:17:29.963" endtime="20220704 14:17:30.015"/>
</kw>
<kw name="Clear Element Text" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<doc>Clears the value of the text-input-element identified by ``locator``.</doc>
<status status="PASS" starttime="20220704 14:17:30.015" endtime="20220704 14:17:30.054"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<arg>${card_name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220704 14:17:30.054" level="INFO">Typing text 'Test Card' into text field '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//textarea[contains(@class, 'list-card-composer-textarea')]'.</msg>
<status status="PASS" starttime="20220704 14:17:30.054" endtime="20220704 14:17:30.150"/>
</kw>
<kw name="Format String" library="String">
<var>${confirm_locator}</var>
<arg>${CONFIRM_ADD_CARD}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:17:30.151" level="INFO">${confirm_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//input[@value='Add card']</msg>
<status status="PASS" starttime="20220704 14:17:30.150" endtime="20220704 14:17:30.151"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${confirm_locator}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220704 14:17:30.151" level="INFO">Clicking button '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//input[@value='Add card']'.</msg>
<status status="PASS" starttime="20220704 14:17:30.151" endtime="20220704 14:17:30.340"/>
</kw>
<status status="PASS" starttime="20220704 14:17:29.279" endtime="20220704 14:17:30.340"/>
</kw>
<kw name="Verify Card Exists" library="ListComponent">
<arg>${list}</arg>
<arg>${card}</arg>
<doc>Verify that the card with card_name exists in the given list.</doc>
<kw name="Format String" library="String">
<var>${card_name_locator}</var>
<arg>${LIST_CARD_NAME}</arg>
<arg>list_name=${list_name}</arg>
<arg>card_name=${card_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:17:30.341" level="INFO">${card_name_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Test Card')]</msg>
<status status="PASS" starttime="20220704 14:17:30.341" endtime="20220704 14:17:30.341"/>
</kw>
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<arg>${card_name_locator}</arg>
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<msg timestamp="20220704 14:17:30.385" level="INFO">Element '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Test Card')]' is displayed.</msg>
<status status="PASS" starttime="20220704 14:17:30.341" endtime="20220704 14:17:30.385"/>
</kw>
<status status="PASS" starttime="20220704 14:17:30.340" endtime="20220704 14:17:30.386"/>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Go To Card Modal</arg>
<arg>list_name=${list}</arg>
<arg>card_name=${card}</arg>
<arg>AND</arg>
<arg>Delete Current Card</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Go To Card Modal" library="ListComponent">
<arg>list_name=${list}</arg>
<arg>card_name=${card}</arg>
<doc>It opens the modal for card_name in list_name</doc>
<kw name="Format String" library="String">
<var>${card_name_locator}</var>
<arg>${LIST_CARD_NAME}</arg>
<arg>list_name=${list_name}</arg>
<arg>card_name=${card_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:17:30.387" level="INFO">${card_name_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Test Card')]</msg>
<status status="PASS" starttime="20220704 14:17:30.387" endtime="20220704 14:17:30.387"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${card_name_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 14:17:30.388" endtime="20220704 14:17:30.416"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${card_name_locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 14:17:30.416" level="INFO">Clicking element '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Test Card')]'.</msg>
<status status="PASS" starttime="20220704 14:17:30.416" endtime="20220704 14:17:30.497"/>
</kw>
<status status="PASS" starttime="20220704 14:17:30.386" endtime="20220704 14:17:30.497"/>
</kw>
<kw name="Delete Current Card" library="CardModal">
<doc>The Keyword will first check if the card is archived,
if it's not, it will archive it to be able to delete it.</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${not_archived}</var>
<arg>Element Should Not Be Visible</arg>
<arg>${IS_ARCHIVED_MSG}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Element Should Not Be Visible" library="SeleniumLibrary">
<arg>${IS_ARCHIVED_MSG}</arg>
<doc>Verifies that the element identified by ``locator`` is NOT visible.</doc>
<msg timestamp="20220704 14:17:30.580" level="INFO">Element '//p[text()='This card is archived.']' did not exist.</msg>
<status status="PASS" starttime="20220704 14:17:30.498" endtime="20220704 14:17:30.580"/>
</kw>
<msg timestamp="20220704 14:17:30.580" level="INFO">${not_archived} = True</msg>
<status status="PASS" starttime="20220704 14:17:30.498" endtime="20220704 14:17:30.580"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${not_archived}</arg>
<arg>Archive Current Card</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Archive Current Card" library="CardModal">
<doc>Archives the current card from inside the modal.</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ARCHIVE_BUTTON}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 14:17:30.581" endtime="20220704 14:17:30.933"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${ARCHIVE_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 14:17:30.933" level="INFO">Clicking element '//span[@title='Archive']'.</msg>
<status status="PASS" starttime="20220704 14:17:30.933" endtime="20220704 14:17:31.064"/>
</kw>
<status status="PASS" starttime="20220704 14:17:30.580" endtime="20220704 14:17:31.065"/>
</kw>
<status status="PASS" starttime="20220704 14:17:30.580" endtime="20220704 14:17:31.065"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3</arg>
<arg>0.9</arg>
<arg>Click Element</arg>
<arg>${DELETE_BUTTON}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${DELETE_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 14:17:31.065" level="INFO">Clicking element '//a[@title='Delete']'.</msg>
<status status="PASS" starttime="20220704 14:17:31.065" endtime="20220704 14:17:31.182"/>
</kw>
<status status="PASS" starttime="20220704 14:17:31.065" endtime="20220704 14:17:31.182"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${DELETE_CONFIRM}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 14:17:31.183" level="INFO">Clicking element '//input[@value='Delete']'.</msg>
<status status="PASS" starttime="20220704 14:17:31.182" endtime="20220704 14:17:31.391"/>
</kw>
<status status="PASS" starttime="20220704 14:17:30.497" endtime="20220704 14:17:31.391"/>
</kw>
<status status="PASS" starttime="20220704 14:17:30.386" endtime="20220704 14:17:31.391"/>
</kw>
<doc>Verify that it is possible to create a new
card through Trello's GUI.</doc>
<tag>card.create</tag>
<tag>gui</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220704 14:17:29.277" endtime="20220704 14:17:31.391"/>
</test>
<test id="s1-s2-s1-s2-t2" name="Modify A Card's Name From The Board Page" line="24">
<kw name="Set Test Variable" library="BuiltIn">
<arg>\${list}</arg>
<arg>To Do</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220704 14:17:31.394" level="INFO">${list} = To Do</msg>
<status status="PASS" starttime="20220704 14:17:31.394" endtime="20220704 14:17:31.394"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>\${card}</arg>
<arg>Test Card</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220704 14:17:31.394" level="INFO">${card} = Test Card</msg>
<status status="PASS" starttime="20220704 14:17:31.394" endtime="20220704 14:17:31.394"/>
</kw>
<kw name="Create Card In List" library="ListComponent">
<arg>${list}</arg>
<arg>${card}</arg>
<doc>Create a new card in the given list
Required args: list_name, card_name</doc>
<kw name="Format String" library="String">
<var>${add_card_locator}</var>
<arg>${LIST_ADD_CARD}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:17:31.395" level="INFO">${add_card_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Add a card')]</msg>
<status status="PASS" starttime="20220704 14:17:31.395" endtime="20220704 14:17:31.395"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${add_card_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 14:17:31.395" endtime="20220704 14:17:31.449"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${add_card_locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 14:17:31.450" level="INFO">Clicking element '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Add a card')]'.</msg>
<status status="PASS" starttime="20220704 14:17:31.449" endtime="20220704 14:17:31.513"/>
</kw>
<kw name="Format String" library="String">
<var>${textarea_locator}</var>
<arg>${CARD_TITLE_INPUT}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:17:31.514" level="INFO">${textarea_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//textarea[contains(@class, 'list-card-composer-textarea')]</msg>
<status status="PASS" starttime="20220704 14:17:31.513" endtime="20220704 14:17:31.514"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 14:17:31.514" endtime="20220704 14:17:31.564"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 14:17:31.564" level="INFO">Clicking element '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//textarea[contains(@class, 'list-card-composer-textarea')]'.</msg>
<status status="PASS" starttime="20220704 14:17:31.564" endtime="20220704 14:17:31.623"/>
</kw>
<kw name="Clear Element Text" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<doc>Clears the value of the text-input-element identified by ``locator``.</doc>
<status status="PASS" starttime="20220704 14:17:31.623" endtime="20220704 14:17:31.660"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<arg>${card_name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220704 14:17:31.660" level="INFO">Typing text 'Test Card' into text field '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//textarea[contains(@class, 'list-card-composer-textarea')]'.</msg>
<status status="PASS" starttime="20220704 14:17:31.660" endtime="20220704 14:17:31.739"/>
</kw>
<kw name="Format String" library="String">
<var>${confirm_locator}</var>
<arg>${CONFIRM_ADD_CARD}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:17:31.740" level="INFO">${confirm_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//input[@value='Add card']</msg>
<status status="PASS" starttime="20220704 14:17:31.740" endtime="20220704 14:17:31.740"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${confirm_locator}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220704 14:17:31.741" level="INFO">Clicking button '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//input[@value='Add card']'.</msg>
<status status="PASS" starttime="20220704 14:17:31.740" endtime="20220704 14:17:31.806"/>
</kw>
<status status="PASS" starttime="20220704 14:17:31.394" endtime="20220704 14:17:31.806"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>\${new_name}</arg>
<arg>New Name</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220704 14:17:31.806" level="INFO">${new_name} = New Name</msg>
<status status="PASS" starttime="20220704 14:17:31.806" endtime="20220704 14:17:31.806"/>
</kw>
<kw name="Edit Card Title Using Pencil Icon" library="ListComponent">
<arg>${list}</arg>
<arg>${card}</arg>
<arg>${new_name}</arg>
<doc>Modifies the title of the given card, using the pencil icon
required: list_name, card_name, new_title</doc>
<kw name="Format String" library="String">
<var>${card_element}</var>
<arg>${LIST_CARD_NAME}</arg>
<arg>list_name=${list_name}</arg>
<arg>card_name=${card_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:17:31.807" level="INFO">${card_element} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Test Card')]</msg>
<status status="PASS" starttime="20220704 14:17:31.807" endtime="20220704 14:17:31.808"/>
</kw>
<kw name="Format String" library="String">
<var>${pencil_locator}</var>
<arg>${PENCIL_ICON}</arg>
<arg>list_name=${list_name}</arg>
<arg>card_name=${card_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:17:31.808" level="INFO">${pencil_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Test Card')]//span[contains(@class, 'icon-edit')]</msg>
<status status="PASS" starttime="20220704 14:17:31.808" endtime="20220704 14:17:31.808"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${card_element}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 14:17:31.808" endtime="20220704 14:17:31.859"/>
</kw>
<kw name="Mouse Over" library="SeleniumLibrary">
<arg>${card_element}</arg>
<doc>Simulates hovering the mouse over the element ``locator``.</doc>
<msg timestamp="20220704 14:17:31.860" level="INFO">Simulating Mouse Over on element '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Test Card')]'.</msg>
<status status="PASS" starttime="20220704 14:17:31.860" endtime="20220704 14:17:32.141"/>
</kw>
<kw name="Wait Until Page Contains Element" library="SeleniumLibrary">
<arg>${pencil_locator}</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" starttime="20220704 14:17:32.141" endtime="20220704 14:17:32.163"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${pencil_locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 14:17:32.164" level="INFO">Clicking element '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Test Card')]//span[contains(@class, 'icon-edit')]'.</msg>
<status status="PASS" starttime="20220704 14:17:32.163" endtime="20220704 14:17:32.243"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${CARD_EDIT_TITLE}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 14:17:32.244" endtime="20220704 14:17:32.281"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${CARD_EDIT_TITLE}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 14:17:32.282" level="INFO">Clicking element 'css:textarea.list-card-edit-title'.</msg>
<status status="PASS" starttime="20220704 14:17:32.281" endtime="20220704 14:17:32.393"/>
</kw>
<kw name="Clear Element Text" library="SeleniumLibrary">
<arg>${CARD_EDIT_TITLE}</arg>
<doc>Clears the value of the text-input-element identified by ``locator``.</doc>
<status status="PASS" starttime="20220704 14:17:32.393" endtime="20220704 14:17:32.439"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${CARD_EDIT_TITLE}</arg>
<arg>${new_title}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220704 14:17:32.439" level="INFO">Typing text 'New Name' into text field 'css:textarea.list-card-edit-title'.</msg>
<status status="PASS" starttime="20220704 14:17:32.439" endtime="20220704 14:17:32.532"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${CARD_EDIT_TITLE_SAVE}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 14:17:32.533" level="INFO">Clicking element '//input[@value='Save']'.</msg>
<status status="PASS" starttime="20220704 14:17:32.533" endtime="20220704 14:17:32.609"/>
</kw>
<status status="PASS" starttime="20220704 14:17:31.806" endtime="20220704 14:17:32.609"/>
</kw>
<kw name="Verify Card Exists" library="ListComponent">
<arg>${list}</arg>
<arg>${new_name}</arg>
<doc>Verify that the card with card_name exists in the given list.</doc>
<kw name="Format String" library="String">
<var>${card_name_locator}</var>
<arg>${LIST_CARD_NAME}</arg>
<arg>list_name=${list_name}</arg>
<arg>card_name=${card_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:17:32.610" level="INFO">${card_name_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'New Name')]</msg>
<status status="PASS" starttime="20220704 14:17:32.610" endtime="20220704 14:17:32.610"/>
</kw>
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<arg>${card_name_locator}</arg>
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<msg timestamp="20220704 14:17:32.653" level="INFO">Element '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'New Name')]' is displayed.</msg>
<status status="PASS" starttime="20220704 14:17:32.610" endtime="20220704 14:17:32.653"/>
</kw>
<status status="PASS" starttime="20220704 14:17:32.609" endtime="20220704 14:17:32.654"/>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Go To Card Modal</arg>
<arg>list_name=${list}</arg>
<arg>card_name=${new_name}</arg>
<arg>AND</arg>
<arg>Delete Current Card</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Go To Card Modal" library="ListComponent">
<arg>list_name=${list}</arg>
<arg>card_name=${new_name}</arg>
<doc>It opens the modal for card_name in list_name</doc>
<kw name="Format String" library="String">
<var>${card_name_locator}</var>
<arg>${LIST_CARD_NAME}</arg>
<arg>list_name=${list_name}</arg>
<arg>card_name=${card_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:17:32.655" level="INFO">${card_name_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'New Name')]</msg>
<status status="PASS" starttime="20220704 14:17:32.655" endtime="20220704 14:17:32.655"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${card_name_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 14:17:32.656" endtime="20220704 14:17:32.684"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${card_name_locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 14:17:32.685" level="INFO">Clicking element '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'New Name')]'.</msg>
<status status="PASS" starttime="20220704 14:17:32.685" endtime="20220704 14:17:32.945"/>
</kw>
<status status="PASS" starttime="20220704 14:17:32.654" endtime="20220704 14:17:32.945"/>
</kw>
<kw name="Delete Current Card" library="CardModal">
<doc>The Keyword will first check if the card is archived,
if it's not, it will archive it to be able to delete it.</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${not_archived}</var>
<arg>Element Should Not Be Visible</arg>
<arg>${IS_ARCHIVED_MSG}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Element Should Not Be Visible" library="SeleniumLibrary">
<arg>${IS_ARCHIVED_MSG}</arg>
<doc>Verifies that the element identified by ``locator`` is NOT visible.</doc>
<msg timestamp="20220704 14:17:32.979" level="INFO">Element '//p[text()='This card is archived.']' did not exist.</msg>
<status status="PASS" starttime="20220704 14:17:32.946" endtime="20220704 14:17:32.979"/>
</kw>
<msg timestamp="20220704 14:17:32.979" level="INFO">${not_archived} = True</msg>
<status status="PASS" starttime="20220704 14:17:32.946" endtime="20220704 14:17:32.979"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${not_archived}</arg>
<arg>Archive Current Card</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Archive Current Card" library="CardModal">
<doc>Archives the current card from inside the modal.</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ARCHIVE_BUTTON}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 14:17:32.980" endtime="20220704 14:17:33.014"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${ARCHIVE_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 14:17:33.014" level="INFO">Clicking element '//span[@title='Archive']'.</msg>
<status status="PASS" starttime="20220704 14:17:33.014" endtime="20220704 14:17:33.102"/>
</kw>
<status status="PASS" starttime="20220704 14:17:32.980" endtime="20220704 14:17:33.102"/>
</kw>
<status status="PASS" starttime="20220704 14:17:32.979" endtime="20220704 14:17:33.102"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3</arg>
<arg>0.9</arg>
<arg>Click Element</arg>
<arg>${DELETE_BUTTON}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${DELETE_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 14:17:33.103" level="INFO">Clicking element '//a[@title='Delete']'.</msg>
<status status="PASS" starttime="20220704 14:17:33.103" endtime="20220704 14:17:33.171"/>
</kw>
<status status="PASS" starttime="20220704 14:17:33.102" endtime="20220704 14:17:33.171"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${DELETE_CONFIRM}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 14:17:33.171" level="INFO">Clicking element '//input[@value='Delete']'.</msg>
<status status="PASS" starttime="20220704 14:17:33.171" endtime="20220704 14:17:33.366"/>
</kw>
<status status="PASS" starttime="20220704 14:17:32.945" endtime="20220704 14:17:33.366"/>
</kw>
<status status="PASS" starttime="20220704 14:17:32.654" endtime="20220704 14:17:33.366"/>
</kw>
<doc>Verify that it is possible to edit a card's Name
using the pencil icon in the board page.</doc>
<tag>card.title_board</tag>
<tag>gui</tag>
<tag>regression</tag>
<status status="PASS" starttime="20220704 14:17:31.392" endtime="20220704 14:17:33.367"/>
</test>
<test id="s1-s2-s1-s2-t3" name="Leave A Comment On A Card" line="38">
<kw name="Set Test Variable" library="BuiltIn">
<arg>\${list}</arg>
<arg>To Do</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220704 14:17:33.369" level="INFO">${list} = To Do</msg>
<status status="PASS" starttime="20220704 14:17:33.369" endtime="20220704 14:17:33.369"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>\${card}</arg>
<arg>Test Card</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220704 14:17:33.369" level="INFO">${card} = Test Card</msg>
<status status="PASS" starttime="20220704 14:17:33.369" endtime="20220704 14:17:33.370"/>
</kw>
<kw name="Create Card In List" library="ListComponent">
<arg>${list}</arg>
<arg>${card}</arg>
<doc>Create a new card in the given list
Required args: list_name, card_name</doc>
<kw name="Format String" library="String">
<var>${add_card_locator}</var>
<arg>${LIST_ADD_CARD}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:17:33.370" level="INFO">${add_card_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Add a card')]</msg>
<status status="PASS" starttime="20220704 14:17:33.370" endtime="20220704 14:17:33.370"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${add_card_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 14:17:33.371" endtime="20220704 14:17:33.426"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${add_card_locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 14:17:33.426" level="INFO">Clicking element '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Add a card')]'.</msg>
<status status="PASS" starttime="20220704 14:17:33.426" endtime="20220704 14:17:33.521"/>
</kw>
<kw name="Format String" library="String">
<var>${textarea_locator}</var>
<arg>${CARD_TITLE_INPUT}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:17:33.522" level="INFO">${textarea_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//textarea[contains(@class, 'list-card-composer-textarea')]</msg>
<status status="PASS" starttime="20220704 14:17:33.522" endtime="20220704 14:17:33.522"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 14:17:33.522" endtime="20220704 14:17:33.591"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 14:17:33.591" level="INFO">Clicking element '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//textarea[contains(@class, 'list-card-composer-textarea')]'.</msg>
<status status="PASS" starttime="20220704 14:17:33.591" endtime="20220704 14:17:33.658"/>
</kw>
<kw name="Clear Element Text" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<doc>Clears the value of the text-input-element identified by ``locator``.</doc>
<status status="PASS" starttime="20220704 14:17:33.658" endtime="20220704 14:17:33.703"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<arg>${card_name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220704 14:17:33.704" level="INFO">Typing text 'Test Card' into text field '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//textarea[contains(@class, 'list-card-composer-textarea')]'.</msg>
<status status="PASS" starttime="20220704 14:17:33.704" endtime="20220704 14:17:33.807"/>
</kw>
<kw name="Format String" library="String">
<var>${confirm_locator}</var>
<arg>${CONFIRM_ADD_CARD}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:17:33.808" level="INFO">${confirm_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//input[@value='Add card']</msg>
<status status="PASS" starttime="20220704 14:17:33.807" endtime="20220704 14:17:33.808"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${confirm_locator}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220704 14:17:33.808" level="INFO">Clicking button '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//input[@value='Add card']'.</msg>
<status status="PASS" starttime="20220704 14:17:33.808" endtime="20220704 14:17:33.887"/>
</kw>
<status status="PASS" starttime="20220704 14:17:33.370" endtime="20220704 14:17:33.888"/>
</kw>
<kw name="Go To Card Modal" library="ListComponent">
<arg>${list}</arg>
<arg>${card}</arg>
<doc>It opens the modal for card_name in list_name</doc>
<kw name="Format String" library="String">
<var>${card_name_locator}</var>
<arg>${LIST_CARD_NAME}</arg>
<arg>list_name=${list_name}</arg>
<arg>card_name=${card_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:17:33.889" level="INFO">${card_name_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Test Card')]</msg>
<status status="PASS" starttime="20220704 14:17:33.888" endtime="20220704 14:17:33.889"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${card_name_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 14:17:33.889" endtime="20220704 14:17:33.942"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${card_name_locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 14:17:33.943" level="INFO">Clicking element '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Test Card')]'.</msg>
<status status="PASS" starttime="20220704 14:17:33.943" endtime="20220704 14:17:34.002"/>
</kw>
<status status="PASS" starttime="20220704 14:17:33.888" endtime="20220704 14:17:34.002"/>
</kw>
<kw name="Get Number Of Comments" library="CardModal">
<var>${comments_before}</var>
<doc>Return the number of comments present in the modal.</doc>
<kw name="Get Element Count" library="SeleniumLibrary">
<var>${n}</var>
<arg>${COMMENT_DIV}</arg>
<doc>Returns the number of elements matching ``locator``.</doc>
<msg timestamp="20220704 14:17:34.236" level="INFO">${n} = 0</msg>
<status status="PASS" starttime="20220704 14:17:34.003" endtime="20220704 14:17:34.236"/>
</kw>
<return>
<value>${n}</value>
<status status="PASS" starttime="20220704 14:17:34.236" endtime="20220704 14:17:34.236"/>
</return>
<msg timestamp="20220704 14:17:34.236" level="INFO">${comments_before} = 0</msg>
<status status="PASS" starttime="20220704 14:17:34.002" endtime="20220704 14:17:34.236"/>
</kw>
<kw name="Send A Comment" library="CardModal">
<arg>This is a test comment</arg>
<doc>Sends a comment under the "activity" section of the modal
required: comment</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${COMMENT_BOX_INPUT}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 14:17:34.237" endtime="20220704 14:17:34.519"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${COMMENT_BOX_INPUT}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 14:17:34.520" level="INFO">Clicking element '//div[@class='comment-box']/textarea'.</msg>
<status status="PASS" starttime="20220704 14:17:34.519" endtime="20220704 14:17:34.620"/>
</kw>
<kw name="Clear Element Text" library="SeleniumLibrary">
<arg>${COMMENT_BOX_INPUT}</arg>
<doc>Clears the value of the text-input-element identified by ``locator``.</doc>
<status status="PASS" starttime="20220704 14:17:34.620" endtime="20220704 14:17:34.685"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${COMMENT_BOX_INPUT}</arg>
<arg>${comment}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220704 14:17:34.685" level="INFO">Typing text 'This is a test comment' into text field '//div[@class='comment-box']/textarea'.</msg>
<status status="PASS" starttime="20220704 14:17:34.685" endtime="20220704 14:17:34.865"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${SAVE_COMMENT}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 14:17:34.866" level="INFO">Clicking element '//div[contains(@class, 'comment-controls')]//input[@value='Save']'.</msg>
<status status="PASS" starttime="20220704 14:17:34.865" endtime="20220704 14:17:35.024"/>
</kw>
<status status="PASS" starttime="20220704 14:17:34.236" endtime="20220704 14:17:35.024"/>
</kw>
<kw name="Get Number Of Comments" library="CardModal">
<var>${comments_after}</var>
<doc>Return the number of comments present in the modal.</doc>
<kw name="Get Element Count" library="SeleniumLibrary">
<var>${n}</var>
<arg>${COMMENT_DIV}</arg>
<doc>Returns the number of elements matching ``locator``.</doc>
<msg timestamp="20220704 14:17:35.111" level="INFO">${n} = 1</msg>
<status status="PASS" starttime="20220704 14:17:35.025" endtime="20220704 14:17:35.111"/>
</kw>
<return>
<value>${n}</value>
<status status="PASS" starttime="20220704 14:17:35.111" endtime="20220704 14:17:35.111"/>
</return>
<msg timestamp="20220704 14:17:35.112" level="INFO">${comments_after} = 1</msg>
<status status="PASS" starttime="20220704 14:17:35.025" endtime="20220704 14:17:35.112"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${comments_after} == ${comments_before}+${1}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220704 14:17:35.112" endtime="20220704 14:17:35.113"/>
</kw>
<kw name="Delete Current Card" library="CardModal" type="TEARDOWN">
<doc>The Keyword will first check if the card is archived,
if it's not, it will archive it to be able to delete it.</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${not_archived}</var>
<arg>Element Should Not Be Visible</arg>
<arg>${IS_ARCHIVED_MSG}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Element Should Not Be Visible" library="SeleniumLibrary">
<arg>${IS_ARCHIVED_MSG}</arg>
<doc>Verifies that the element identified by ``locator`` is NOT visible.</doc>
<msg timestamp="20220704 14:17:35.174" level="INFO">Element '//p[text()='This card is archived.']' did not exist.</msg>
<status status="PASS" starttime="20220704 14:17:35.114" endtime="20220704 14:17:35.174"/>
</kw>
<msg timestamp="20220704 14:17:35.175" level="INFO">${not_archived} = True</msg>
<status status="PASS" starttime="20220704 14:17:35.114" endtime="20220704 14:17:35.175"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${not_archived}</arg>
<arg>Archive Current Card</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Archive Current Card" library="CardModal">
<doc>Archives the current card from inside the modal.</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ARCHIVE_BUTTON}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 14:17:35.176" endtime="20220704 14:17:35.249"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${ARCHIVE_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 14:17:35.250" level="INFO">Clicking element '//span[@title='Archive']'.</msg>
<status status="PASS" starttime="20220704 14:17:35.249" endtime="20220704 14:17:35.355"/>
</kw>
<status status="PASS" starttime="20220704 14:17:35.175" endtime="20220704 14:17:35.356"/>
</kw>
<status status="PASS" starttime="20220704 14:17:35.175" endtime="20220704 14:17:35.356"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3</arg>
<arg>0.9</arg>
<arg>Click Element</arg>
<arg>${DELETE_BUTTON}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${DELETE_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 14:17:35.356" level="INFO">Clicking element '//a[@title='Delete']'.</msg>
<status status="PASS" starttime="20220704 14:17:35.356" endtime="20220704 14:17:35.471"/>
</kw>
<status status="PASS" starttime="20220704 14:17:35.356" endtime="20220704 14:17:35.471"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${DELETE_CONFIRM}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 14:17:35.472" level="INFO">Clicking element '//input[@value='Delete']'.</msg>
<status status="PASS" starttime="20220704 14:17:35.471" endtime="20220704 14:17:35.707"/>
</kw>
<status status="PASS" starttime="20220704 14:17:35.113" endtime="20220704 14:17:35.707"/>
</kw>
<doc>Verify that it is possible to write a comment
on a card, through the card modal.</doc>
<tag>card.comment</tag>
<tag>gui</tag>
<tag>regression</tag>
<status status="PASS" starttime="20220704 14:17:33.368" endtime="20220704 14:17:35.707"/>
</test>
<test id="s1-s2-s1-s2-t4" name="Verify A Card Can Be Deleted" line="52">
<kw name="Set Test Variable" library="BuiltIn">
<arg>\${list}</arg>
<arg>To Do</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220704 14:17:35.709" level="INFO">${list} = To Do</msg>
<status status="PASS" starttime="20220704 14:17:35.709" endtime="20220704 14:17:35.709"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>\${card}</arg>
<arg>Test Card</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220704 14:17:35.710" level="INFO">${card} = Test Card</msg>
<status status="PASS" starttime="20220704 14:17:35.710" endtime="20220704 14:17:35.710"/>
</kw>
<kw name="Get Number Of Cards In List" library="ListComponent">
<var>${cards_before}</var>
<arg>${list}</arg>
<doc>Return the number of cards present in a given list.
required: list_name</doc>
<kw name="Format String" library="String">
<var>${card_anchor_locator}</var>
<arg>${CARD_ANCHORS}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:17:35.711" level="INFO">${card_anchor_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(@class, 'list-card')]</msg>
<status status="PASS" starttime="20220704 14:17:35.710" endtime="20220704 14:17:35.711"/>
</kw>
<kw name="Get Element Count" library="SeleniumLibrary">
<var>${n}</var>
<arg>${card_anchor_locator}</arg>
<doc>Returns the number of elements matching ``locator``.</doc>
<msg timestamp="20220704 14:17:35.769" level="INFO">${n} = 0</msg>
<status status="PASS" starttime="20220704 14:17:35.711" endtime="20220704 14:17:35.769"/>
</kw>
<return>
<value>${n}</value>
<status status="PASS" starttime="20220704 14:17:35.769" endtime="20220704 14:17:35.769"/>
</return>
<msg timestamp="20220704 14:17:35.769" level="INFO">${cards_before} = 0</msg>
<status status="PASS" starttime="20220704 14:17:35.710" endtime="20220704 14:17:35.769"/>
</kw>
<kw name="Create Card In List" library="ListComponent">
<arg>${list}</arg>
<arg>${card}</arg>
<doc>Create a new card in the given list
Required args: list_name, card_name</doc>
<kw name="Format String" library="String">
<var>${add_card_locator}</var>
<arg>${LIST_ADD_CARD}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:17:35.771" level="INFO">${add_card_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Add a card')]</msg>
<status status="PASS" starttime="20220704 14:17:35.770" endtime="20220704 14:17:35.771"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${add_card_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 14:17:35.771" endtime="20220704 14:17:35.837"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${add_card_locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 14:17:35.838" level="INFO">Clicking element '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Add a card')]'.</msg>
<status status="PASS" starttime="20220704 14:17:35.837" endtime="20220704 14:17:35.983"/>
</kw>
<kw name="Format String" library="String">
<var>${textarea_locator}</var>
<arg>${CARD_TITLE_INPUT}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:17:35.983" level="INFO">${textarea_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//textarea[contains(@class, 'list-card-composer-textarea')]</msg>
<status status="PASS" starttime="20220704 14:17:35.983" endtime="20220704 14:17:35.983"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 14:17:35.984" endtime="20220704 14:17:36.017"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 14:17:36.018" level="INFO">Clicking element '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//textarea[contains(@class, 'list-card-composer-textarea')]'.</msg>
<status status="PASS" starttime="20220704 14:17:36.017" endtime="20220704 14:17:36.093"/>
</kw>
<kw name="Clear Element Text" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<doc>Clears the value of the text-input-element identified by ``locator``.</doc>
<status status="PASS" starttime="20220704 14:17:36.094" endtime="20220704 14:17:36.129"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<arg>${card_name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220704 14:17:36.130" level="INFO">Typing text 'Test Card' into text field '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//textarea[contains(@class, 'list-card-composer-textarea')]'.</msg>
<status status="PASS" starttime="20220704 14:17:36.130" endtime="20220704 14:17:36.270"/>
</kw>
<kw name="Format String" library="String">
<var>${confirm_locator}</var>
<arg>${CONFIRM_ADD_CARD}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:17:36.271" level="INFO">${confirm_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//input[@value='Add card']</msg>
<status status="PASS" starttime="20220704 14:17:36.271" endtime="20220704 14:17:36.271"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${confirm_locator}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220704 14:17:36.272" level="INFO">Clicking button '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//input[@value='Add card']'.</msg>
<status status="PASS" starttime="20220704 14:17:36.271" endtime="20220704 14:17:36.361"/>
</kw>
<status status="PASS" starttime="20220704 14:17:35.770" endtime="20220704 14:17:36.361"/>
</kw>
<kw name="Go To Card Modal" library="ListComponent">
<arg>${list}</arg>
<arg>${card}</arg>
<doc>It opens the modal for card_name in list_name</doc>
<kw name="Format String" library="String">
<var>${card_name_locator}</var>
<arg>${LIST_CARD_NAME}</arg>
<arg>list_name=${list_name}</arg>
<arg>card_name=${card_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:17:36.362" level="INFO">${card_name_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Test Card')]</msg>
<status status="PASS" starttime="20220704 14:17:36.362" endtime="20220704 14:17:36.362"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${card_name_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 14:17:36.362" endtime="20220704 14:17:36.442"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${card_name_locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 14:17:36.442" level="INFO">Clicking element '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Test Card')]'.</msg>
<status status="PASS" starttime="20220704 14:17:36.442" endtime="20220704 14:17:36.499"/>
</kw>
<status status="PASS" starttime="20220704 14:17:36.361" endtime="20220704 14:17:36.500"/>
</kw>
<kw name="Delete Current Card" library="CardModal">
<doc>The Keyword will first check if the card is archived,
if it's not, it will archive it to be able to delete it.</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${not_archived}</var>
<arg>Element Should Not Be Visible</arg>
<arg>${IS_ARCHIVED_MSG}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Element Should Not Be Visible" library="SeleniumLibrary">
<arg>${IS_ARCHIVED_MSG}</arg>
<doc>Verifies that the element identified by ``locator`` is NOT visible.</doc>
<msg timestamp="20220704 14:17:36.842" level="INFO">Element '//p[text()='This card is archived.']' did not exist.</msg>
<status status="PASS" starttime="20220704 14:17:36.500" endtime="20220704 14:17:36.842"/>
</kw>
<msg timestamp="20220704 14:17:36.842" level="INFO">${not_archived} = True</msg>
<status status="PASS" starttime="20220704 14:17:36.500" endtime="20220704 14:17:36.842"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${not_archived}</arg>
<arg>Archive Current Card</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Archive Current Card" library="CardModal">
<doc>Archives the current card from inside the modal.</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ARCHIVE_BUTTON}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 14:17:36.843" endtime="20220704 14:17:36.927"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${ARCHIVE_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 14:17:36.928" level="INFO">Clicking element '//span[@title='Archive']'.</msg>
<status status="PASS" starttime="20220704 14:17:36.927" endtime="20220704 14:17:37.088"/>
</kw>
<status status="PASS" starttime="20220704 14:17:36.843" endtime="20220704 14:17:37.088"/>
</kw>
<status status="PASS" starttime="20220704 14:17:36.843" endtime="20220704 14:17:37.088"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3</arg>
<arg>0.9</arg>
<arg>Click Element</arg>
<arg>${DELETE_BUTTON}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${DELETE_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 14:17:37.089" level="INFO">Clicking element '//a[@title='Delete']'.</msg>
<status status="PASS" starttime="20220704 14:17:37.089" endtime="20220704 14:17:37.212"/>
</kw>
<status status="PASS" starttime="20220704 14:17:37.088" endtime="20220704 14:17:37.212"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${DELETE_CONFIRM}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 14:17:37.213" level="INFO">Clicking element '//input[@value='Delete']'.</msg>
<status status="PASS" starttime="20220704 14:17:37.212" endtime="20220704 14:17:37.494"/>
</kw>
<status status="PASS" starttime="20220704 14:17:36.500" endtime="20220704 14:17:37.494"/>
</kw>
<kw name="Get Number Of Cards In List" library="ListComponent">
<var>${cards_after}</var>
<arg>${list}</arg>
<doc>Return the number of cards present in a given list.
required: list_name</doc>
<kw name="Format String" library="String">
<var>${card_anchor_locator}</var>
<arg>${CARD_ANCHORS}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:17:37.496" level="INFO">${card_anchor_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(@class, 'list-card')]</msg>
<status status="PASS" starttime="20220704 14:17:37.495" endtime="20220704 14:17:37.496"/>
</kw>
<kw name="Get Element Count" library="SeleniumLibrary">
<var>${n}</var>
<arg>${card_anchor_locator}</arg>
<doc>Returns the number of elements matching ``locator``.</doc>
<msg timestamp="20220704 14:17:37.530" level="INFO">${n} = 0</msg>
<status status="PASS" starttime="20220704 14:17:37.496" endtime="20220704 14:17:37.530"/>
</kw>
<return>
<value>${n}</value>
<status status="PASS" starttime="20220704 14:17:37.530" endtime="20220704 14:17:37.530"/>
</return>
<msg timestamp="20220704 14:17:37.530" level="INFO">${cards_after} = 0</msg>
<status status="PASS" starttime="20220704 14:17:37.495" endtime="20220704 14:17:37.530"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${cards_before} == ${cards_after}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220704 14:17:37.531" endtime="20220704 14:17:37.531"/>
</kw>
<doc>Verify that it is possible to delete a card
from inside the card modal.</doc>
<tag>card.delete</tag>
<tag>gui</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220704 14:17:35.708" endtime="20220704 14:17:37.531"/>
</test>
<test id="s1-s2-s1-s2-t5" name="Card Can Be Dragged To Another List" line="65">
<kw name="Set Test Variable" library="BuiltIn">
<arg>\${list}</arg>
<arg>To Do</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220704 14:17:37.533" level="INFO">${list} = To Do</msg>
<status status="PASS" starttime="20220704 14:17:37.533" endtime="20220704 14:17:37.533"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>\${card}</arg>
<arg>Test Card</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220704 14:17:37.533" level="INFO">${card} = Test Card</msg>
<status status="PASS" starttime="20220704 14:17:37.533" endtime="20220704 14:17:37.533"/>
</kw>
<kw name="Create Card In List" library="ListComponent">
<arg>${list}</arg>
<arg>${card}</arg>
<doc>Create a new card in the given list
Required args: list_name, card_name</doc>
<kw name="Format String" library="String">
<var>${add_card_locator}</var>
<arg>${LIST_ADD_CARD}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:17:37.534" level="INFO">${add_card_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Add a card')]</msg>
<status status="PASS" starttime="20220704 14:17:37.534" endtime="20220704 14:17:37.534"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${add_card_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 14:17:37.534" endtime="20220704 14:17:37.570"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${add_card_locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 14:17:37.570" level="INFO">Clicking element '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Add a card')]'.</msg>
<status status="PASS" starttime="20220704 14:17:37.570" endtime="20220704 14:17:37.670"/>
</kw>
<kw name="Format String" library="String">
<var>${textarea_locator}</var>
<arg>${CARD_TITLE_INPUT}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:17:37.671" level="INFO">${textarea_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//textarea[contains(@class, 'list-card-composer-textarea')]</msg>
<status status="PASS" starttime="20220704 14:17:37.671" endtime="20220704 14:17:37.671"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 14:17:37.671" endtime="20220704 14:17:37.815"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 14:17:37.815" level="INFO">Clicking element '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//textarea[contains(@class, 'list-card-composer-textarea')]'.</msg>
<status status="PASS" starttime="20220704 14:17:37.815" endtime="20220704 14:17:38.002"/>
</kw>
<kw name="Clear Element Text" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<doc>Clears the value of the text-input-element identified by ``locator``.</doc>
<status status="PASS" starttime="20220704 14:17:38.003" endtime="20220704 14:17:38.083"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<arg>${card_name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220704 14:17:38.083" level="INFO">Typing text 'Test Card' into text field '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//textarea[contains(@class, 'list-card-composer-textarea')]'.</msg>
<status status="PASS" starttime="20220704 14:17:38.083" endtime="20220704 14:17:38.322"/>
</kw>
<kw name="Format String" library="String">
<var>${confirm_locator}</var>
<arg>${CONFIRM_ADD_CARD}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:17:38.323" level="INFO">${confirm_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//input[@value='Add card']</msg>
<status status="PASS" starttime="20220704 14:17:38.322" endtime="20220704 14:17:38.323"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${confirm_locator}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220704 14:17:38.323" level="INFO">Clicking button '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//input[@value='Add card']'.</msg>
<status status="PASS" starttime="20220704 14:17:38.323" endtime="20220704 14:17:38.583"/>
</kw>
<status status="PASS" starttime="20220704 14:17:37.533" endtime="20220704 14:17:38.583"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>\${list2}</arg>
<arg>Doing</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220704 14:17:38.583" level="INFO">${list2} = Doing</msg>
<status status="PASS" starttime="20220704 14:17:38.583" endtime="20220704 14:17:38.583"/>
</kw>
<kw name="Drag Card From One List To Another" library="ListComponent">
<arg>${card}</arg>
<arg>${list}</arg>
<arg>${list2}</arg>
<doc>required: card_name, source_list_name, target_list_name</doc>
<kw name="Format String" library="String">
<var>${card_locator}</var>
<arg>${LIST_CARD_NAME}</arg>
<arg>list_name=${list1_name}</arg>
<arg>card_name=${card_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:17:38.584" level="INFO">${card_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Test Card')]</msg>
<status status="PASS" starttime="20220704 14:17:38.584" endtime="20220704 14:17:38.585"/>
</kw>
<kw name="Format String" library="String">
<var>${list2_locator}</var>
<arg>${LIST_DIV}</arg>
<arg>list_name=${list2_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:17:38.585" level="INFO">${list2_locator} = //h2[text()='Doing']//ancestor::div[contains(@class, 'list-content')]</msg>
<status status="PASS" starttime="20220704 14:17:38.585" endtime="20220704 14:17:38.585"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${card_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 14:17:38.585" endtime="20220704 14:17:38.737"/>
</kw>
<kw name="Drag And Drop" library="SeleniumLibrary">
<arg>${card_locator}</arg>
<arg>${list2_locator}</arg>
<doc>Drags the element identified by ``locator`` into the ``target`` element.</doc>
<status status="PASS" starttime="20220704 14:17:38.737" endtime="20220704 14:17:39.445"/>
</kw>
<status status="PASS" starttime="20220704 14:17:38.583" endtime="20220704 14:17:39.446"/>
</kw>
<kw name="Card Should Be In List" library="ListComponent">
<arg>${card}</arg>
<arg>${list2}</arg>
<doc>Check that a card is visible and in the given list
required: card_name, list_name</doc>
<kw name="Format String" library="String">
<var>${card_locator}</var>
<arg>${LIST_CARD_NAME}</arg>
<arg>list_name=${list_name}</arg>
<arg>card_name=${card_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:17:39.447" level="INFO">${card_locator} = //h2[text()='Doing']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Test Card')]</msg>
<status status="PASS" starttime="20220704 14:17:39.446" endtime="20220704 14:17:39.447"/>
</kw>
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<arg>${card_locator}</arg>
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<msg timestamp="20220704 14:17:39.498" level="INFO">Element '//h2[text()='Doing']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Test Card')]' is displayed.</msg>
<status status="PASS" starttime="20220704 14:17:39.447" endtime="20220704 14:17:39.498"/>
</kw>
<status status="PASS" starttime="20220704 14:17:39.446" endtime="20220704 14:17:39.498"/>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Go To Card Modal</arg>
<arg>${list2}</arg>
<arg>${card}</arg>
<arg>AND</arg>
<arg>Delete Current Card</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Go To Card Modal" library="ListComponent">
<arg>${list2}</arg>
<arg>${card}</arg>
<doc>It opens the modal for card_name in list_name</doc>
<kw name="Format String" library="String">
<var>${card_name_locator}</var>
<arg>${LIST_CARD_NAME}</arg>
<arg>list_name=${list_name}</arg>
<arg>card_name=${card_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:17:39.500" level="INFO">${card_name_locator} = //h2[text()='Doing']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Test Card')]</msg>
<status status="PASS" starttime="20220704 14:17:39.499" endtime="20220704 14:17:39.500"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${card_name_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 14:17:39.500" endtime="20220704 14:17:39.567"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${card_name_locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 14:17:39.567" level="INFO">Clicking element '//h2[text()='Doing']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Test Card')]'.</msg>
<status status="PASS" starttime="20220704 14:17:39.567" endtime="20220704 14:17:39.624"/>
</kw>
<status status="PASS" starttime="20220704 14:17:39.499" endtime="20220704 14:17:39.625"/>
</kw>
<kw name="Delete Current Card" library="CardModal">
<doc>The Keyword will first check if the card is archived,
if it's not, it will archive it to be able to delete it.</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${not_archived}</var>
<arg>Element Should Not Be Visible</arg>
<arg>${IS_ARCHIVED_MSG}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Element Should Not Be Visible" library="SeleniumLibrary">
<arg>${IS_ARCHIVED_MSG}</arg>
<doc>Verifies that the element identified by ``locator`` is NOT visible.</doc>
<msg timestamp="20220704 14:17:39.895" level="INFO">Element '//p[text()='This card is archived.']' did not exist.</msg>
<status status="PASS" starttime="20220704 14:17:39.626" endtime="20220704 14:17:39.895"/>
</kw>
<msg timestamp="20220704 14:17:39.895" level="INFO">${not_archived} = True</msg>
<status status="PASS" starttime="20220704 14:17:39.625" endtime="20220704 14:17:39.895"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${not_archived}</arg>
<arg>Archive Current Card</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Archive Current Card" library="CardModal">
<doc>Archives the current card from inside the modal.</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ARCHIVE_BUTTON}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 14:17:39.896" endtime="20220704 14:17:39.946"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${ARCHIVE_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 14:17:39.946" level="INFO">Clicking element '//span[@title='Archive']'.</msg>
<status status="PASS" starttime="20220704 14:17:39.946" endtime="20220704 14:17:40.027"/>
</kw>
<status status="PASS" starttime="20220704 14:17:39.896" endtime="20220704 14:17:40.027"/>
</kw>
<status status="PASS" starttime="20220704 14:17:39.896" endtime="20220704 14:17:40.027"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3</arg>
<arg>0.9</arg>
<arg>Click Element</arg>
<arg>${DELETE_BUTTON}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${DELETE_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 14:17:40.028" level="INFO">Clicking element '//a[@title='Delete']'.</msg>
<status status="PASS" starttime="20220704 14:17:40.028" endtime="20220704 14:17:40.116"/>
</kw>
<status status="PASS" starttime="20220704 14:17:40.028" endtime="20220704 14:17:40.116"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${DELETE_CONFIRM}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 14:17:40.116" level="INFO">Clicking element '//input[@value='Delete']'.</msg>
<status status="PASS" starttime="20220704 14:17:40.116" endtime="20220704 14:17:40.285"/>
</kw>
<status status="PASS" starttime="20220704 14:17:39.625" endtime="20220704 14:17:40.285"/>
</kw>
<status status="PASS" starttime="20220704 14:17:39.498" endtime="20220704 14:17:40.285"/>
</kw>
<doc>Verify that a card can be dragged from one list to another.</doc>
<tag>card.drag</tag>
<tag>gui</tag>
<tag>regression</tag>
<status status="PASS" starttime="20220704 14:17:37.532" endtime="20220704 14:17:40.285"/>
</test>
<test id="s1-s2-s1-s2-t6" name="Card Can Be Moved To Another Board" line="79">
<kw name="Create A Board" library="Board">
<var>${board2}</var>
<arg>CardTestBoard2</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 14:17:40.289" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 14:17:40.289" endtime="20220704 14:17:40.289"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 14:17:40.289" endtime="20220704 14:17:40.289"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:17:40.291" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220704 14:17:40.289" endtime="20220704 14:17:40.291"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 14:17:40.532" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:17:40.291" endtime="20220704 14:17:40.532"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:17:40.532" endtime="20220704 14:17:40.532"/>
</return>
<msg timestamp="20220704 14:17:40.533" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:17:40.288" endtime="20220704 14:17:40.533"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:17:40.533" endtime="20220704 14:17:40.533"/>
</return>
<msg timestamp="20220704 14:17:40.533" level="INFO">${board2} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:17:40.287" endtime="20220704 14:17:40.533"/>
</kw>
<kw name="Go Home" library="TrelloUpperMenu">
<doc>it goes to the gome page</doc>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${TRELLO_ICON}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220704 14:17:40.533" endtime="20220704 14:17:40.609"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${TRELLO_ICON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 14:17:40.609" level="INFO">Clicking element 'xpath://a[@aria-label='Back to home']'.</msg>
<status status="PASS" starttime="20220704 14:17:40.609" endtime="20220704 14:17:40.794"/>
</kw>
<status status="PASS" starttime="20220704 14:17:40.533" endtime="20220704 14:17:40.795"/>
</kw>
<kw name="Go To Board" library="BoardsPage">
<arg>CardTestBoard2</arg>
<doc>Receives the board name and goes to that board's page.</doc>
<kw name="Format String" library="String">
<var>${locator}</var>
<arg>${BOARD_BUTTON}</arg>
<arg>${board_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:17:40.796" level="INFO">${locator} = //div[@title="CardTestBoard2"]</msg>
<status status="PASS" starttime="20220704 14:17:40.795" endtime="20220704 14:17:40.796"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 14:17:40.796" endtime="20220704 14:17:41.024"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 14:17:41.024" level="INFO">Clicking element '//div[@title="CardTestBoard2"]'.</msg>
<status status="PASS" starttime="20220704 14:17:41.024" endtime="20220704 14:17:41.194"/>
</kw>
<status status="PASS" starttime="20220704 14:17:40.795" endtime="20220704 14:17:41.194"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>\${list}</arg>
<arg>To Do</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220704 14:17:41.195" level="INFO">${list} = To Do</msg>
<status status="PASS" starttime="20220704 14:17:41.194" endtime="20220704 14:17:41.195"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>\${card}</arg>
<arg>Test Card2</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220704 14:17:41.195" level="INFO">${card} = Test Card2</msg>
<status status="PASS" starttime="20220704 14:17:41.195" endtime="20220704 14:17:41.195"/>
</kw>
<kw name="Create Card In List" library="ListComponent">
<arg>${list}</arg>
<arg>${card}</arg>
<doc>Create a new card in the given list
Required args: list_name, card_name</doc>
<kw name="Format String" library="String">
<var>${add_card_locator}</var>
<arg>${LIST_ADD_CARD}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:17:41.196" level="INFO">${add_card_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Add a card')]</msg>
<status status="PASS" starttime="20220704 14:17:41.196" endtime="20220704 14:17:41.196"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${add_card_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 14:17:41.196" endtime="20220704 14:17:41.700"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${add_card_locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 14:17:41.701" level="INFO">Clicking element '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Add a card')]'.</msg>
<status status="PASS" starttime="20220704 14:17:41.701" endtime="20220704 14:17:41.778"/>
</kw>
<kw name="Format String" library="String">
<var>${textarea_locator}</var>
<arg>${CARD_TITLE_INPUT}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:17:41.779" level="INFO">${textarea_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//textarea[contains(@class, 'list-card-composer-textarea')]</msg>
<status status="PASS" starttime="20220704 14:17:41.778" endtime="20220704 14:17:41.779"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 14:17:41.779" endtime="20220704 14:17:41.819"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 14:17:41.820" level="INFO">Clicking element '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//textarea[contains(@class, 'list-card-composer-textarea')]'.</msg>
<status status="PASS" starttime="20220704 14:17:41.819" endtime="20220704 14:17:41.873"/>
</kw>
<kw name="Clear Element Text" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<doc>Clears the value of the text-input-element identified by ``locator``.</doc>
<status status="PASS" starttime="20220704 14:17:41.873" endtime="20220704 14:17:41.913"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<arg>${card_name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220704 14:17:41.913" level="INFO">Typing text 'Test Card2' into text field '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//textarea[contains(@class, 'list-card-composer-textarea')]'.</msg>
<status status="PASS" starttime="20220704 14:17:41.913" endtime="20220704 14:17:42.023"/>
</kw>
<kw name="Format String" library="String">
<var>${confirm_locator}</var>
<arg>${CONFIRM_ADD_CARD}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:17:42.023" level="INFO">${confirm_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//input[@value='Add card']</msg>
<status status="PASS" starttime="20220704 14:17:42.023" endtime="20220704 14:17:42.023"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${confirm_locator}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220704 14:17:42.024" level="INFO">Clicking button '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//input[@value='Add card']'.</msg>
<status status="PASS" starttime="20220704 14:17:42.024" endtime="20220704 14:17:42.132"/>
</kw>
<status status="PASS" starttime="20220704 14:17:41.195" endtime="20220704 14:17:42.132"/>
</kw>
<kw name="Go To Card Modal" library="ListComponent">
<arg>${list}</arg>
<arg>${card}</arg>
<doc>It opens the modal for card_name in list_name</doc>
<kw name="Format String" library="String">
<var>${card_name_locator}</var>
<arg>${LIST_CARD_NAME}</arg>
<arg>list_name=${list_name}</arg>
<arg>card_name=${card_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:17:42.134" level="INFO">${card_name_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Test Card2')]</msg>
<status status="PASS" starttime="20220704 14:17:42.133" endtime="20220704 14:17:42.134"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${card_name_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 14:17:42.134" endtime="20220704 14:17:42.177"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${card_name_locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 14:17:42.177" level="INFO">Clicking element '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Test Card2')]'.</msg>
<status status="PASS" starttime="20220704 14:17:42.177" endtime="20220704 14:17:42.228"/>
</kw>
<status status="PASS" starttime="20220704 14:17:42.133" endtime="20220704 14:17:42.229"/>
</kw>
<kw name="Move Card To Another Board" library="CardModal">
<arg>CardTestBoard</arg>
<doc>Moves the card using the "name of destination board"
required: name (name of the destination board)</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${MOVE_BUTTON}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 14:17:42.229" endtime="20220704 14:17:42.521"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${MOVE_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 14:17:42.521" level="INFO">Clicking element '//a[@title='Move']'.</msg>
<status status="PASS" starttime="20220704 14:17:42.521" endtime="20220704 14:17:42.594"/>
</kw>
<kw name="Select From List By Label" library="SeleniumLibrary">
<arg>${SELECT_DESTINATION}</arg>
<arg>${name_of_destination_board}</arg>
<doc>Selects options from selection list ``locator`` by ``labels``.</doc>
<msg timestamp="20220704 14:17:42.595" level="INFO">Selecting options from selection list '//select[@data-test-id='move-board-select']' by label CardTestBoard.</msg>
<status status="PASS" starttime="20220704 14:17:42.594" endtime="20220704 14:17:42.753"/>
</kw>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${ACCEPT_MOVE_BUTTON}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220704 14:17:42.754" endtime="20220704 14:17:43.039"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${ACCEPT_MOVE_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 14:17:43.039" level="INFO">Clicking element '//input[@value="Move"]'.</msg>
<status status="PASS" starttime="20220704 14:17:43.039" endtime="20220704 14:17:43.190"/>
</kw>
<kw name="Wait Until Element Is Not Visible" library="SeleniumLibrary">
<arg>${ARCHIVE_BUTTON}</arg>
<doc>Waits until the element ``locator`` is not visible.</doc>
<status status="PASS" starttime="20220704 14:17:43.190" endtime="20220704 14:17:43.206"/>
</kw>
<status status="PASS" starttime="20220704 14:17:42.229" endtime="20220704 14:17:43.206"/>
</kw>
<kw name="Get Number Of Cards In List" library="ListComponent">
<var>${Cards_On_list}</var>
<arg>To Do</arg>
<doc>Return the number of cards present in a given list.
required: list_name</doc>
<kw name="Format String" library="String">
<var>${card_anchor_locator}</var>
<arg>${CARD_ANCHORS}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:17:43.207" level="INFO">${card_anchor_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(@class, 'list-card')]</msg>
<status status="PASS" starttime="20220704 14:17:43.207" endtime="20220704 14:17:43.208"/>
</kw>
<kw name="Get Element Count" library="SeleniumLibrary">
<var>${n}</var>
<arg>${card_anchor_locator}</arg>
<doc>Returns the number of elements matching ``locator``.</doc>
<msg timestamp="20220704 14:17:43.220" level="INFO">${n} = 0</msg>
<status status="PASS" starttime="20220704 14:17:43.208" endtime="20220704 14:17:43.220"/>
</kw>
<return>
<value>${n}</value>
<status status="PASS" starttime="20220704 14:17:43.220" endtime="20220704 14:17:43.220"/>
</return>
<msg timestamp="20220704 14:17:43.220" level="INFO">${Cards_On_list} = 0</msg>
<status status="PASS" starttime="20220704 14:17:43.206" endtime="20220704 14:17:43.220"/>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<var>${0}</var>
<arg>0</arg>
<doc>Converts the given item to an integer number.</doc>
<msg timestamp="20220704 14:17:43.221" level="INFO">${0} = 0</msg>
<status status="PASS" starttime="20220704 14:17:43.221" endtime="20220704 14:17:43.221"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${Cards_On_list}</arg>
<arg>${0}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220704 14:17:43.221" endtime="20220704 14:17:43.221"/>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Close Browser</arg>
<arg>AND</arg>
<arg>Wait Until Keyword Succeeds</arg>
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${board2.json()}[id]</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20220704 14:17:43.222" endtime="20220704 14:17:43.305"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${board2.json()}[id]</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${board2.json()}[id]</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:17:43.308" level="INFO">${url} = boards/62c2f684c67ade85b67b3429</msg>
<status status="PASS" starttime="20220704 14:17:43.308" endtime="20220704 14:17:43.308"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 14:17:43.389" level="INFO">${response} = None</msg>
<msg timestamp="20220704 14:17:43.389" level="FAIL">InvalidExpectedStatus: it was expected the status 200 but the status was 429</msg>
<status status="FAIL" starttime="20220704 14:17:43.309" endtime="20220704 14:17:43.389"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:17:43.389" endtime="20220704 14:17:43.389"/>
</return>
<msg timestamp="20220704 14:17:43.390" level="INFO">${response} = None</msg>
<status status="FAIL" starttime="20220704 14:17:43.307" endtime="20220704 14:17:43.390"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:17:43.390" endtime="20220704 14:17:43.390"/>
</return>
<status status="FAIL" starttime="20220704 14:17:43.306" endtime="20220704 14:17:43.390"/>
</kw>
<kw name="Delete A Board" library="Board">
<arg>${board2.json()}[id]</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:17:45.894" level="INFO">${url} = boards/62c2f684c67ade85b67b3429</msg>
<status status="PASS" starttime="20220704 14:17:45.893" endtime="20220704 14:17:45.894"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 14:17:46.293" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:17:45.894" endtime="20220704 14:17:46.294"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:17:46.294" endtime="20220704 14:17:46.294"/>
</return>
<msg timestamp="20220704 14:17:46.294" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:17:45.893" endtime="20220704 14:17:46.294"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:17:46.294" endtime="20220704 14:17:46.294"/>
</return>
<status status="PASS" starttime="20220704 14:17:45.891" endtime="20220704 14:17:46.294"/>
</kw>
<status status="PASS" starttime="20220704 14:17:43.306" endtime="20220704 14:17:46.294"/>
</kw>
<status status="PASS" starttime="20220704 14:17:43.222" endtime="20220704 14:17:46.294"/>
</kw>
<doc>Creates a new board through API, then goes to the
second board, creates a card and moves it to the other board</doc>
<tag>card.move</tag>
<tag>gui</tag>
<tag>regression</tag>
<status status="PASS" starttime="20220704 14:17:40.286" endtime="20220704 14:17:46.294"/>
</test>
<kw name="Cards Suite Teardown" type="TEARDOWN">
<doc>Deletes the created board through API and closes all browsers.</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:17:46.298" level="INFO">${url} = boards/62c2f671a555f21c206473a1</msg>
<status status="PASS" starttime="20220704 14:17:46.297" endtime="20220704 14:17:46.298"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 14:17:46.705" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:17:46.298" endtime="20220704 14:17:46.705"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:17:46.705" endtime="20220704 14:17:46.705"/>
</return>
<msg timestamp="20220704 14:17:46.706" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:17:46.297" endtime="20220704 14:17:46.706"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:17:46.706" endtime="20220704 14:17:46.706"/>
</return>
<status status="PASS" starttime="20220704 14:17:46.297" endtime="20220704 14:17:46.706"/>
</kw>
<status status="PASS" starttime="20220704 14:17:46.296" endtime="20220704 14:17:46.706"/>
</kw>
<kw name="Delete All Sessions" library="request_own_library">
<status status="PASS" starttime="20220704 14:17:46.706" endtime="20220704 14:17:46.707"/>
</kw>
<kw name="Close All Browsers" library="SeleniumLibrary">
<doc>Closes all open browsers and resets the browser cache.</doc>
<status status="PASS" starttime="20220704 14:17:46.708" endtime="20220704 14:17:46.708"/>
</kw>
<status status="PASS" starttime="20220704 14:17:46.296" endtime="20220704 14:17:46.708"/>
</kw>
<doc>Test Cases for Cards Feature</doc>
<status status="PASS" starttime="20220704 14:17:21.337" endtime="20220704 14:17:46.708"/>
</suite>
<suite id="s1-s2-s1-s3" name="Trello Gui Labels" source="/trello/gui/trello_gui_labels.robot">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Create Trello Session</arg>
<arg>Setup Board</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Create Trello Session" library="TrelloAPI">
<doc>Creates a Trello Session</doc>
<kw name="Create Session" library="request_own_library">
<arg>${API_BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<status status="PASS" starttime="20220704 14:17:46.727" endtime="20220704 14:17:46.727"/>
</kw>
<status status="PASS" starttime="20220704 14:17:46.727" endtime="20220704 14:17:46.727"/>
</kw>
<kw name="Setup Board">
<doc>Creates a board and saves its ID</doc>
<kw name="Create A Board" library="Board">
<var>${BOARD}</var>
<arg>TestBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 14:17:46.729" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 14:17:46.728" endtime="20220704 14:17:46.729"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 14:17:46.729" endtime="20220704 14:17:46.729"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:17:46.730" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220704 14:17:46.729" endtime="20220704 14:17:46.730"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 14:17:47.008" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:17:46.730" endtime="20220704 14:17:47.008"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:17:47.008" endtime="20220704 14:17:47.008"/>
</return>
<msg timestamp="20220704 14:17:47.009" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:17:46.728" endtime="20220704 14:17:47.009"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:17:47.009" endtime="20220704 14:17:47.009"/>
</return>
<msg timestamp="20220704 14:17:47.009" level="INFO">${BOARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:17:46.728" endtime="20220704 14:17:47.009"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_BOARD_ID}</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220704 14:17:47.011" level="INFO">${TEST_SUITE_BOARD_ID} = 62c2f68a3678f387559fbf26</msg>
<status status="PASS" starttime="20220704 14:17:47.009" endtime="20220704 14:17:47.011"/>
</kw>
<status status="PASS" starttime="20220704 14:17:46.728" endtime="20220704 14:17:47.011"/>
</kw>
<status status="PASS" starttime="20220704 14:17:46.726" endtime="20220704 14:17:47.011"/>
</kw>
<test id="s1-s2-s1-s3-t1" name="filter label" line="21">
<kw name="Open Browser From Environment" library="CommonGUI">
<arg>${LOGIN_URL}</arg>
<doc>This keywords takes REMOTE and BROWSER variables
from the environment automatically and only needs a url</doc>
<if>
<branch type="IF" condition="${is_remote}">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${url}</arg>
<arg>${BROWSER}</arg>
<arg>remote_url=http://selenium-hub:4444</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20220704 14:17:47.013" level="INFO">Opening browser 'chrome' to base url 'https://trello.com/login' through remote server at 'http://selenium-hub:4444'.</msg>
<status status="PASS" starttime="20220704 14:17:47.013" endtime="20220704 14:17:48.221"/>
</kw>
<status status="PASS" starttime="20220704 14:17:47.012" endtime="20220704 14:17:48.221"/>
</branch>
<branch type="ELSE">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${url}</arg>
<arg>${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<status status="NOT RUN" starttime="20220704 14:17:48.222" endtime="20220704 14:17:48.222"/>
</kw>
<status status="NOT RUN" starttime="20220704 14:17:48.221" endtime="20220704 14:17:48.222"/>
</branch>
<status status="PASS" starttime="20220704 14:17:47.012" endtime="20220704 14:17:48.222"/>
</if>
<status status="PASS" starttime="20220704 14:17:47.012" endtime="20220704 14:17:48.222"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20220704 14:17:48.222" endtime="20220704 14:17:48.338"/>
</kw>
<kw name="Login To Trello" library="LoginPage">
<arg>${DEFAULT_EMAIL}</arg>
<arg>${DEFAULT_PASSWORD}</arg>
<doc>High-level keyword for logging in to Trello</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220704 14:17:48.348" level="INFO">${url} = https://trello.com/login</msg>
<status status="PASS" starttime="20220704 14:17:48.339" endtime="20220704 14:17:48.348"/>
</kw>
<if>
<branch type="IF" condition="'${url}' != '${LOGIN_URL}'">
<kw name="Go To" library="SeleniumLibrary">
<arg>${LOGIN_URL}</arg>
<doc>Navigates the current browser window to the provided ``url``.</doc>
<status status="NOT RUN" starttime="20220704 14:17:48.349" endtime="20220704 14:17:48.349"/>
</kw>
<status status="NOT RUN" starttime="20220704 14:17:48.349" endtime="20220704 14:17:48.349"/>
</branch>
<status status="PASS" starttime="20220704 14:17:48.348" endtime="20220704 14:17:48.349"/>
</if>
<kw name="Enter Username" library="LoginPage">
<arg>${username}</arg>
<doc>Take a username as argument and
enters it in the user_input</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${USER_INPUT}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 14:17:48.349" endtime="20220704 14:17:48.384"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${USER_INPUT}</arg>
<arg>${username}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220704 14:17:48.385" level="INFO">Typing text 'bootcamp04@mailinator.com' into text field 'css:input#user'.</msg>
<status status="PASS" starttime="20220704 14:17:48.384" endtime="20220704 14:17:48.488"/>
</kw>
<status status="PASS" starttime="20220704 14:17:48.349" endtime="20220704 14:17:48.488"/>
</kw>
<kw name="Wait Until Element Is Not Visible" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<doc>Waits until the element ``locator`` is not visible.</doc>
<status status="PASS" starttime="20220704 14:17:48.488" endtime="20220704 14:17:49.203"/>
</kw>
<kw name="Click Login Button" library="LoginPage">
<doc>Clicks Trello's login button if in Trello's
login page, else it clicks Atlassian's</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220704 14:17:49.220" level="INFO">${url} = https://trello.com/login</msg>
<status status="PASS" starttime="20220704 14:17:49.204" endtime="20220704 14:17:49.220"/>
</kw>
<if>
<branch type="IF" condition="'${url}' == '${LOGIN_URL}'">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220704 14:17:49.221" endtime="20220704 14:17:49.292"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220704 14:17:49.293" level="INFO">Clicking button 'css:input#login'.</msg>
<status status="PASS" starttime="20220704 14:17:49.292" endtime="20220704 14:17:50.345"/>
</kw>
<status status="PASS" starttime="20220704 14:17:49.221" endtime="20220704 14:17:50.345"/>
</branch>
<branch type="ELSE">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="NOT RUN" starttime="20220704 14:17:50.345" endtime="20220704 14:17:50.345"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<status status="NOT RUN" starttime="20220704 14:17:50.345" endtime="20220704 14:17:50.345"/>
</kw>
<status status="NOT RUN" starttime="20220704 14:17:50.345" endtime="20220704 14:17:50.346"/>
</branch>
<status status="PASS" starttime="20220704 14:17:49.220" endtime="20220704 14:17:50.346"/>
</if>
<status status="PASS" starttime="20220704 14:17:49.204" endtime="20220704 14:17:50.346"/>
</kw>
<kw name="Wait Until Location Is Atlassian's Login" library="LoginPage">
<doc>Waits for the page redirection when logging in.</doc>
<kw name="Wait Until Location Contains" library="SeleniumLibrary">
<arg>atlassian.com</arg>
<doc>Waits until the current URL contains ``expected``.</doc>
<status status="PASS" starttime="20220704 14:17:50.346" endtime="20220704 14:17:50.365"/>
</kw>
<status status="PASS" starttime="20220704 14:17:50.346" endtime="20220704 14:17:50.365"/>
</kw>
<kw name="Enter Password" library="LoginPage">
<arg>${password}</arg>
<doc>Take a password as argument and
enters it in the password_input</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<arg>timeout=10</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 14:17:50.366" endtime="20220704 14:17:50.419"/>
</kw>
<kw name="Input Password" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<arg>${password}</arg>
<doc>Types the given password into the text field identified by ``locator``.</doc>
<msg timestamp="20220704 14:17:50.420" level="INFO">Typing password into text field 'css:input#password'.</msg>
<msg timestamp="20220704 14:17:50.506" level="INFO">Temporally setting log level to: NONE</msg>
<msg timestamp="20220704 14:17:50.582" level="INFO">Log level changed from NONE to INFO.</msg>
<status status="PASS" starttime="20220704 14:17:50.419" endtime="20220704 14:17:50.582"/>
</kw>
<status status="PASS" starttime="20220704 14:17:50.365" endtime="20220704 14:17:50.582"/>
</kw>
<kw name="Click Login Button" library="LoginPage">
<doc>Clicks Trello's login button if in Trello's
login page, else it clicks Atlassian's</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220704 14:17:50.591" level="INFO">${url} = https://id.atlassian.com/login?application=trello&amp;continue=https%3A%2F%2Ftrello.com%2Fauth%2Fatlassian%2Fcallback%3FreturnUrl%3D%252F%26display%3D%26aaOnboarding%3D%26updateEmail%3D%26traceId%3D62c2f6...</msg>
<status status="PASS" starttime="20220704 14:17:50.583" endtime="20220704 14:17:50.591"/>
</kw>
<if>
<branch type="IF" condition="'${url}' == '${LOGIN_URL}'">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="NOT RUN" starttime="20220704 14:17:50.592" endtime="20220704 14:17:50.592"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<status status="NOT RUN" starttime="20220704 14:17:50.592" endtime="20220704 14:17:50.592"/>
</kw>
<status status="NOT RUN" starttime="20220704 14:17:50.592" endtime="20220704 14:17:50.592"/>
</branch>
<branch type="ELSE">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220704 14:17:50.592" endtime="20220704 14:17:50.648"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220704 14:17:50.649" level="INFO">Clicking button 'css:button#login-submit'.</msg>
<status status="PASS" starttime="20220704 14:17:50.648" endtime="20220704 14:17:50.754"/>
</kw>
<status status="PASS" starttime="20220704 14:17:50.592" endtime="20220704 14:17:50.754"/>
</branch>
<status status="PASS" starttime="20220704 14:17:50.592" endtime="20220704 14:17:50.754"/>
</if>
<status status="PASS" starttime="20220704 14:17:50.582" endtime="20220704 14:17:50.754"/>
</kw>
<status status="PASS" starttime="20220704 14:17:48.338" endtime="20220704 14:17:50.754"/>
</kw>
<kw name="Go To Board" library="BoardsPage">
<arg>TestBoard</arg>
<doc>Receives the board name and goes to that board's page.</doc>
<kw name="Format String" library="String">
<var>${locator}</var>
<arg>${BOARD_BUTTON}</arg>
<arg>${board_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:17:50.755" level="INFO">${locator} = //div[@title="TestBoard"]</msg>
<status status="PASS" starttime="20220704 14:17:50.755" endtime="20220704 14:17:50.755"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 14:17:50.755" endtime="20220704 14:17:54.452"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 14:17:54.453" level="INFO">Clicking element '//div[@title="TestBoard"]'.</msg>
<status status="PASS" starttime="20220704 14:17:54.452" endtime="20220704 14:17:54.811"/>
</kw>
<status status="PASS" starttime="20220704 14:17:50.754" endtime="20220704 14:17:54.811"/>
</kw>
<kw name="Create Card In List" library="ListComponent">
<arg>To Do</arg>
<arg>card1</arg>
<doc>Create a new card in the given list
Required args: list_name, card_name</doc>
<kw name="Format String" library="String">
<var>${add_card_locator}</var>
<arg>${LIST_ADD_CARD}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:17:54.812" level="INFO">${add_card_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Add a card')]</msg>
<status status="PASS" starttime="20220704 14:17:54.811" endtime="20220704 14:17:54.812"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${add_card_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 14:17:54.812" endtime="20220704 14:17:55.346"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${add_card_locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 14:17:55.347" level="INFO">Clicking element '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Add a card')]'.</msg>
<status status="PASS" starttime="20220704 14:17:55.347" endtime="20220704 14:17:55.447"/>
</kw>
<kw name="Format String" library="String">
<var>${textarea_locator}</var>
<arg>${CARD_TITLE_INPUT}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:17:55.448" level="INFO">${textarea_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//textarea[contains(@class, 'list-card-composer-textarea')]</msg>
<status status="PASS" starttime="20220704 14:17:55.447" endtime="20220704 14:17:55.448"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 14:17:55.448" endtime="20220704 14:17:55.533"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 14:17:55.534" level="INFO">Clicking element '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//textarea[contains(@class, 'list-card-composer-textarea')]'.</msg>
<status status="PASS" starttime="20220704 14:17:55.534" endtime="20220704 14:17:55.589"/>
</kw>
<kw name="Clear Element Text" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<doc>Clears the value of the text-input-element identified by ``locator``.</doc>
<status status="PASS" starttime="20220704 14:17:55.590" endtime="20220704 14:17:55.635"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<arg>${card_name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220704 14:17:55.636" level="INFO">Typing text 'card1' into text field '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//textarea[contains(@class, 'list-card-composer-textarea')]'.</msg>
<status status="PASS" starttime="20220704 14:17:55.636" endtime="20220704 14:17:55.787"/>
</kw>
<kw name="Format String" library="String">
<var>${confirm_locator}</var>
<arg>${CONFIRM_ADD_CARD}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:17:55.788" level="INFO">${confirm_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//input[@value='Add card']</msg>
<status status="PASS" starttime="20220704 14:17:55.788" endtime="20220704 14:17:55.788"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${confirm_locator}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220704 14:17:55.789" level="INFO">Clicking button '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//input[@value='Add card']'.</msg>
<status status="PASS" starttime="20220704 14:17:55.788" endtime="20220704 14:17:55.866"/>
</kw>
<status status="PASS" starttime="20220704 14:17:54.811" endtime="20220704 14:17:55.867"/>
</kw>
<kw name="Click pencil menu" library="ListComponent">
<arg>To Do</arg>
<arg>card1</arg>
<doc>Adds a label to an specific card</doc>
<kw name="Format String" library="String">
<var>${card_element}</var>
<arg>${LIST_CARD_NAME}</arg>
<arg>list_name=${list_name}</arg>
<arg>card_name=${card_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:17:55.868" level="INFO">${card_element} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'card1')]</msg>
<status status="PASS" starttime="20220704 14:17:55.867" endtime="20220704 14:17:55.868"/>
</kw>
<kw name="Format String" library="String">
<var>${pencil_locator}</var>
<arg>${PENCIL_ICON}</arg>
<arg>list_name=${list_name}</arg>
<arg>card_name=${card_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:17:55.868" level="INFO">${pencil_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'card1')]//span[contains(@class, 'icon-edit')]</msg>
<status status="PASS" starttime="20220704 14:17:55.868" endtime="20220704 14:17:55.868"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${card_element}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 14:17:55.868" endtime="20220704 14:17:55.931"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20220704 14:18:00.931" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20220704 14:17:55.931" endtime="20220704 14:18:00.932"/>
</kw>
<kw name="Mouse Over" library="SeleniumLibrary">
<arg>${card_element}</arg>
<doc>Simulates hovering the mouse over the element ``locator``.</doc>
<msg timestamp="20220704 14:18:00.932" level="INFO">Simulating Mouse Over on element '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'card1')]'.</msg>
<status status="PASS" starttime="20220704 14:18:00.932" endtime="20220704 14:18:01.225"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20220704 14:18:06.226" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20220704 14:18:01.225" endtime="20220704 14:18:06.226"/>
</kw>
<kw name="Wait Until Page Contains Element" library="SeleniumLibrary">
<arg>${pencil_locator}</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" starttime="20220704 14:18:06.226" endtime="20220704 14:18:06.243"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${pencil_locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 14:18:06.244" level="INFO">Clicking element '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'card1')]//span[contains(@class, 'icon-edit')]'.</msg>
<status status="PASS" starttime="20220704 14:18:06.244" endtime="20220704 14:18:06.335"/>
</kw>
<status status="PASS" starttime="20220704 14:17:55.867" endtime="20220704 14:18:06.335"/>
</kw>
<kw name="Add Color Label In Card" library="CardModal">
<arg>yellow</arg>
<doc>add label of a given color to a list</doc>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${EDIT_LABEL}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220704 14:18:06.336" endtime="20220704 14:18:06.383"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${EDIT_LABEL}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 14:18:06.384" level="INFO">Clicking element '//a[contains(@class,'js-edit-labels')]'.</msg>
<status status="PASS" starttime="20220704 14:18:06.384" endtime="20220704 14:18:06.474"/>
</kw>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LABEL_INPUT}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220704 14:18:06.474" endtime="20220704 14:18:06.541"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${LABEL_INPUT}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 14:18:06.542" level="INFO">Clicking element '//input[contains(@class,"js-autofocus")]'.</msg>
<status status="PASS" starttime="20220704 14:18:06.542" endtime="20220704 14:18:06.599"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${LABEL_INPUT}</arg>
<arg>${color}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220704 14:18:06.600" level="INFO">Typing text 'yellow' into text field '//input[contains(@class,"js-autofocus")]'.</msg>
<status status="PASS" starttime="20220704 14:18:06.599" endtime="20220704 14:18:06.685"/>
</kw>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LABEL_INPUT}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220704 14:18:06.685" endtime="20220704 14:18:06.742"/>
</kw>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>${LABEL_INPUT}</arg>
<arg>RETURN</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20220704 14:18:06.742" level="INFO">Sending key(s) ('RETURN',) to //input[contains(@class,"js-autofocus")] element.</msg>
<msg timestamp="20220704 14:18:07.040" level="INFO">Pressing special key RETURN to element.</msg>
<msg timestamp="20220704 14:18:07.040" level="INFO">Releasing special key RETURN.</msg>
<status status="PASS" starttime="20220704 14:18:06.742" endtime="20220704 14:18:07.079"/>
</kw>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>None</arg>
<arg>ESCAPE</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20220704 14:18:07.080" level="INFO">Sending key(s) ('ESCAPE',) to page.</msg>
<msg timestamp="20220704 14:18:07.080" level="INFO">Pressing special key ESCAPE to browser.</msg>
<msg timestamp="20220704 14:18:07.080" level="INFO">Releasing special key ESCAPE.</msg>
<status status="PASS" starttime="20220704 14:18:07.079" endtime="20220704 14:18:07.095"/>
</kw>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>None</arg>
<arg>ESCAPE</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20220704 14:18:07.096" level="INFO">Sending key(s) ('ESCAPE',) to page.</msg>
<msg timestamp="20220704 14:18:07.096" level="INFO">Pressing special key ESCAPE to browser.</msg>
<msg timestamp="20220704 14:18:07.096" level="INFO">Releasing special key ESCAPE.</msg>
<status status="PASS" starttime="20220704 14:18:07.095" endtime="20220704 14:18:07.122"/>
</kw>
<status status="PASS" starttime="20220704 14:18:06.336" endtime="20220704 14:18:07.122"/>
</kw>
<kw name="Create Card In List" library="ListComponent">
<arg>Doing</arg>
<arg>card2</arg>
<doc>Create a new card in the given list
Required args: list_name, card_name</doc>
<kw name="Format String" library="String">
<var>${add_card_locator}</var>
<arg>${LIST_ADD_CARD}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:18:07.123" level="INFO">${add_card_locator} = //h2[text()='Doing']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Add a card')]</msg>
<status status="PASS" starttime="20220704 14:18:07.123" endtime="20220704 14:18:07.123"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${add_card_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 14:18:07.123" endtime="20220704 14:18:07.165"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${add_card_locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 14:18:07.166" level="INFO">Clicking element '//h2[text()='Doing']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Add a card')]'.</msg>
<status status="PASS" starttime="20220704 14:18:07.166" endtime="20220704 14:18:07.233"/>
</kw>
<kw name="Format String" library="String">
<var>${textarea_locator}</var>
<arg>${CARD_TITLE_INPUT}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:18:07.233" level="INFO">${textarea_locator} = //h2[text()='Doing']//ancestor::div[contains(@class, 'list-content')]//textarea[contains(@class, 'list-card-composer-textarea')]</msg>
<status status="PASS" starttime="20220704 14:18:07.233" endtime="20220704 14:18:07.233"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 14:18:07.234" endtime="20220704 14:18:07.275"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 14:18:07.275" level="INFO">Clicking element '//h2[text()='Doing']//ancestor::div[contains(@class, 'list-content')]//textarea[contains(@class, 'list-card-composer-textarea')]'.</msg>
<status status="PASS" starttime="20220704 14:18:07.275" endtime="20220704 14:18:07.340"/>
</kw>
<kw name="Clear Element Text" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<doc>Clears the value of the text-input-element identified by ``locator``.</doc>
<status status="PASS" starttime="20220704 14:18:07.340" endtime="20220704 14:18:07.374"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<arg>${card_name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220704 14:18:07.375" level="INFO">Typing text 'card2' into text field '//h2[text()='Doing']//ancestor::div[contains(@class, 'list-content')]//textarea[contains(@class, 'list-card-composer-textarea')]'.</msg>
<status status="PASS" starttime="20220704 14:18:07.374" endtime="20220704 14:18:07.444"/>
</kw>
<kw name="Format String" library="String">
<var>${confirm_locator}</var>
<arg>${CONFIRM_ADD_CARD}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:18:07.445" level="INFO">${confirm_locator} = //h2[text()='Doing']//ancestor::div[contains(@class, 'list-content')]//input[@value='Add card']</msg>
<status status="PASS" starttime="20220704 14:18:07.444" endtime="20220704 14:18:07.445"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${confirm_locator}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220704 14:18:07.445" level="INFO">Clicking button '//h2[text()='Doing']//ancestor::div[contains(@class, 'list-content')]//input[@value='Add card']'.</msg>
<status status="PASS" starttime="20220704 14:18:07.445" endtime="20220704 14:18:07.508"/>
</kw>
<status status="PASS" starttime="20220704 14:18:07.122" endtime="20220704 14:18:07.509"/>
</kw>
<kw name="Create Card In List" library="ListComponent">
<arg>Done</arg>
<arg>card3</arg>
<doc>Create a new card in the given list
Required args: list_name, card_name</doc>
<kw name="Format String" library="String">
<var>${add_card_locator}</var>
<arg>${LIST_ADD_CARD}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:18:07.510" level="INFO">${add_card_locator} = //h2[text()='Done']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Add a card')]</msg>
<status status="PASS" starttime="20220704 14:18:07.509" endtime="20220704 14:18:07.510"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${add_card_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 14:18:07.510" endtime="20220704 14:18:07.557"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${add_card_locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 14:18:07.558" level="INFO">Clicking element '//h2[text()='Done']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Add a card')]'.</msg>
<status status="PASS" starttime="20220704 14:18:07.557" endtime="20220704 14:18:07.614"/>
</kw>
<kw name="Format String" library="String">
<var>${textarea_locator}</var>
<arg>${CARD_TITLE_INPUT}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:18:07.615" level="INFO">${textarea_locator} = //h2[text()='Done']//ancestor::div[contains(@class, 'list-content')]//textarea[contains(@class, 'list-card-composer-textarea')]</msg>
<status status="PASS" starttime="20220704 14:18:07.615" endtime="20220704 14:18:07.615"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 14:18:07.615" endtime="20220704 14:18:07.649"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 14:18:07.649" level="INFO">Clicking element '//h2[text()='Done']//ancestor::div[contains(@class, 'list-content')]//textarea[contains(@class, 'list-card-composer-textarea')]'.</msg>
<status status="PASS" starttime="20220704 14:18:07.649" endtime="20220704 14:18:07.698"/>
</kw>
<kw name="Clear Element Text" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<doc>Clears the value of the text-input-element identified by ``locator``.</doc>
<status status="PASS" starttime="20220704 14:18:07.698" endtime="20220704 14:18:07.782"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<arg>${card_name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220704 14:18:07.783" level="INFO">Typing text 'card3' into text field '//h2[text()='Done']//ancestor::div[contains(@class, 'list-content')]//textarea[contains(@class, 'list-card-composer-textarea')]'.</msg>
<status status="PASS" starttime="20220704 14:18:07.783" endtime="20220704 14:18:07.864"/>
</kw>
<kw name="Format String" library="String">
<var>${confirm_locator}</var>
<arg>${CONFIRM_ADD_CARD}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:18:07.865" level="INFO">${confirm_locator} = //h2[text()='Done']//ancestor::div[contains(@class, 'list-content')]//input[@value='Add card']</msg>
<status status="PASS" starttime="20220704 14:18:07.864" endtime="20220704 14:18:07.865"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${confirm_locator}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220704 14:18:07.865" level="INFO">Clicking button '//h2[text()='Done']//ancestor::div[contains(@class, 'list-content')]//input[@value='Add card']'.</msg>
<status status="PASS" starttime="20220704 14:18:07.865" endtime="20220704 14:18:07.963"/>
</kw>
<status status="PASS" starttime="20220704 14:18:07.509" endtime="20220704 14:18:07.964"/>
</kw>
<kw name="Enter To Filter Menu" library="TopBar">
<doc>accesing to the filter menu</doc>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${FILTER_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 14:18:07.964" level="INFO">Clicking element 'xpath://button[@data-test-id='filter-popover-button']'.</msg>
<status status="PASS" starttime="20220704 14:18:07.964" endtime="20220704 14:18:08.067"/>
</kw>
<status status="PASS" starttime="20220704 14:18:07.964" endtime="20220704 14:18:08.067"/>
</kw>
<kw name="Click no labels filter" library="FilterModal">
<doc>filters all cards with labes</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${NO_LABELS_FILTER}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 14:18:08.068" endtime="20220704 14:18:08.212"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${NO_LABELS_FILTER}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 14:18:08.212" level="INFO">Clicking element '//span[@aria-label='LabelIcon']'.</msg>
<status status="PASS" starttime="20220704 14:18:08.212" endtime="20220704 14:18:08.357"/>
</kw>
<status status="PASS" starttime="20220704 14:18:08.067" endtime="20220704 14:18:08.357"/>
</kw>
<kw name="Card Should Not Be In List" library="ListComponent">
<arg>card1</arg>
<arg>To Do</arg>
<doc>Check that a card is visible and in the given list
required: card_name, list_name</doc>
<kw name="Format String" library="String">
<var>${card_locator}</var>
<arg>${LIST_CARD_NAME}</arg>
<arg>list_name=${list_name}</arg>
<arg>card_name=${card_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:18:08.358" level="INFO">${card_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'card1')]</msg>
<status status="PASS" starttime="20220704 14:18:08.358" endtime="20220704 14:18:08.358"/>
</kw>
<kw name="Element Should Not Be Visible" library="SeleniumLibrary">
<arg>${card_locator}</arg>
<doc>Verifies that the element identified by ``locator`` is NOT visible.</doc>
<msg timestamp="20220704 14:18:08.442" level="INFO">Element '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'card1')]' exists but is not displayed.</msg>
<status status="PASS" starttime="20220704 14:18:08.358" endtime="20220704 14:18:08.442"/>
</kw>
<status status="PASS" starttime="20220704 14:18:08.357" endtime="20220704 14:18:08.442"/>
</kw>
<kw name="Click no labels filter" library="FilterModal">
<doc>filters all cards with labes</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${NO_LABELS_FILTER}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 14:18:08.443" endtime="20220704 14:18:08.473"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${NO_LABELS_FILTER}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 14:18:08.474" level="INFO">Clicking element '//span[@aria-label='LabelIcon']'.</msg>
<status status="PASS" starttime="20220704 14:18:08.473" endtime="20220704 14:18:08.594"/>
</kw>
<status status="PASS" starttime="20220704 14:18:08.443" endtime="20220704 14:18:08.594"/>
</kw>
<kw name="Card Should Be In List" library="ListComponent">
<arg>card1</arg>
<arg>To Do</arg>
<doc>Check that a card is visible and in the given list
required: card_name, list_name</doc>
<kw name="Format String" library="String">
<var>${card_locator}</var>
<arg>${LIST_CARD_NAME}</arg>
<arg>list_name=${list_name}</arg>
<arg>card_name=${card_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:18:08.596" level="INFO">${card_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'card1')]</msg>
<status status="PASS" starttime="20220704 14:18:08.595" endtime="20220704 14:18:08.596"/>
</kw>
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<arg>${card_locator}</arg>
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<msg timestamp="20220704 14:18:08.623" level="INFO">Element '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'card1')]' is displayed.</msg>
<status status="PASS" starttime="20220704 14:18:08.596" endtime="20220704 14:18:08.624"/>
</kw>
<status status="PASS" starttime="20220704 14:18:08.595" endtime="20220704 14:18:08.624"/>
</kw>
<kw name="Close Browser" library="SeleniumLibrary" type="TEARDOWN">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20220704 14:18:08.624" endtime="20220704 14:18:08.725"/>
</kw>
<doc>check filter card by label function</doc>
<tag>gui</tag>
<tag>list.create</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220704 14:17:47.011" endtime="20220704 14:18:08.725"/>
</test>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Teardown Board</arg>
<arg>Delete All Sessions</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Teardown Board">
<doc>Deletes used board for teardown</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:18:08.728" level="INFO">${url} = boards/62c2f68a3678f387559fbf26</msg>
<status status="PASS" starttime="20220704 14:18:08.728" endtime="20220704 14:18:08.728"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 14:18:09.128" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:18:08.728" endtime="20220704 14:18:09.128"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:18:09.128" endtime="20220704 14:18:09.128"/>
</return>
<msg timestamp="20220704 14:18:09.128" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:18:08.727" endtime="20220704 14:18:09.128"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:18:09.128" endtime="20220704 14:18:09.128"/>
</return>
<status status="PASS" starttime="20220704 14:18:08.727" endtime="20220704 14:18:09.129"/>
</kw>
<status status="PASS" starttime="20220704 14:18:08.727" endtime="20220704 14:18:09.129"/>
</kw>
<status status="PASS" starttime="20220704 14:18:08.727" endtime="20220704 14:18:09.129"/>
</kw>
<kw name="Delete All Sessions" library="request_own_library">
<status status="PASS" starttime="20220704 14:18:09.129" endtime="20220704 14:18:09.130"/>
</kw>
<status status="PASS" starttime="20220704 14:18:08.726" endtime="20220704 14:18:09.130"/>
</kw>
<doc>Label Tests</doc>
<status status="PASS" starttime="20220704 14:17:46.711" endtime="20220704 14:18:09.131"/>
</suite>
<suite id="s1-s2-s1-s4" name="Trello Gui Lists" source="/trello/gui/trello_gui_lists.robot">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Create Trello Session</arg>
<arg>Setup Board</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Create Trello Session" library="TrelloAPI">
<doc>Creates a Trello Session</doc>
<kw name="Create Session" library="request_own_library">
<arg>${API_BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<status status="PASS" starttime="20220704 14:18:09.145" endtime="20220704 14:18:09.145"/>
</kw>
<status status="PASS" starttime="20220704 14:18:09.145" endtime="20220704 14:18:09.145"/>
</kw>
<kw name="Setup Board">
<doc>Creates a board and saves its ID</doc>
<kw name="Create A Board" library="Board">
<var>${BOARD}</var>
<arg>TestBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 14:18:09.146" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 14:18:09.146" endtime="20220704 14:18:09.146"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 14:18:09.146" endtime="20220704 14:18:09.147"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:18:09.148" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220704 14:18:09.147" endtime="20220704 14:18:09.148"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 14:18:09.446" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:18:09.148" endtime="20220704 14:18:09.446"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:18:09.446" endtime="20220704 14:18:09.446"/>
</return>
<msg timestamp="20220704 14:18:09.446" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:18:09.146" endtime="20220704 14:18:09.446"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:18:09.446" endtime="20220704 14:18:09.446"/>
</return>
<msg timestamp="20220704 14:18:09.447" level="INFO">${BOARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:18:09.145" endtime="20220704 14:18:09.447"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_BOARD_ID}</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220704 14:18:09.448" level="INFO">${TEST_SUITE_BOARD_ID} = 62c2f6a174cc565f228b1b71</msg>
<status status="PASS" starttime="20220704 14:18:09.447" endtime="20220704 14:18:09.448"/>
</kw>
<status status="PASS" starttime="20220704 14:18:09.145" endtime="20220704 14:18:09.448"/>
</kw>
<status status="PASS" starttime="20220704 14:18:09.144" endtime="20220704 14:18:09.448"/>
</kw>
<test id="s1-s2-s1-s4-t1" name="create list" line="18">
<kw name="Open Browser From Environment" library="CommonGUI">
<arg>${LOGIN_URL}</arg>
<doc>This keywords takes REMOTE and BROWSER variables
from the environment automatically and only needs a url</doc>
<if>
<branch type="IF" condition="${is_remote}">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${url}</arg>
<arg>${BROWSER}</arg>
<arg>remote_url=http://selenium-hub:4444</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20220704 14:18:09.450" level="INFO">Opening browser 'chrome' to base url 'https://trello.com/login' through remote server at 'http://selenium-hub:4444'.</msg>
<status status="PASS" starttime="20220704 14:18:09.450" endtime="20220704 14:18:10.536"/>
</kw>
<status status="PASS" starttime="20220704 14:18:09.450" endtime="20220704 14:18:10.536"/>
</branch>
<branch type="ELSE">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${url}</arg>
<arg>${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<status status="NOT RUN" starttime="20220704 14:18:10.536" endtime="20220704 14:18:10.536"/>
</kw>
<status status="NOT RUN" starttime="20220704 14:18:10.536" endtime="20220704 14:18:10.536"/>
</branch>
<status status="PASS" starttime="20220704 14:18:09.450" endtime="20220704 14:18:10.536"/>
</if>
<status status="PASS" starttime="20220704 14:18:09.449" endtime="20220704 14:18:10.536"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20220704 14:18:10.537" endtime="20220704 14:18:10.648"/>
</kw>
<kw name="Login To Trello" library="LoginPage">
<arg>${DEFAULT_EMAIL}</arg>
<arg>${DEFAULT_PASSWORD}</arg>
<doc>High-level keyword for logging in to Trello</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220704 14:18:10.657" level="INFO">${url} = https://trello.com/login</msg>
<status status="PASS" starttime="20220704 14:18:10.649" endtime="20220704 14:18:10.657"/>
</kw>
<if>
<branch type="IF" condition="'${url}' != '${LOGIN_URL}'">
<kw name="Go To" library="SeleniumLibrary">
<arg>${LOGIN_URL}</arg>
<doc>Navigates the current browser window to the provided ``url``.</doc>
<status status="NOT RUN" starttime="20220704 14:18:10.658" endtime="20220704 14:18:10.658"/>
</kw>
<status status="NOT RUN" starttime="20220704 14:18:10.657" endtime="20220704 14:18:10.658"/>
</branch>
<status status="PASS" starttime="20220704 14:18:10.657" endtime="20220704 14:18:10.658"/>
</if>
<kw name="Enter Username" library="LoginPage">
<arg>${username}</arg>
<doc>Take a username as argument and
enters it in the user_input</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${USER_INPUT}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 14:18:10.658" endtime="20220704 14:18:10.692"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${USER_INPUT}</arg>
<arg>${username}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220704 14:18:10.693" level="INFO">Typing text 'bootcamp04@mailinator.com' into text field 'css:input#user'.</msg>
<status status="PASS" starttime="20220704 14:18:10.693" endtime="20220704 14:18:10.825"/>
</kw>
<status status="PASS" starttime="20220704 14:18:10.658" endtime="20220704 14:18:10.826"/>
</kw>
<kw name="Wait Until Element Is Not Visible" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<doc>Waits until the element ``locator`` is not visible.</doc>
<status status="PASS" starttime="20220704 14:18:10.826" endtime="20220704 14:18:11.545"/>
</kw>
<kw name="Click Login Button" library="LoginPage">
<doc>Clicks Trello's login button if in Trello's
login page, else it clicks Atlassian's</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220704 14:18:11.556" level="INFO">${url} = https://trello.com/login</msg>
<status status="PASS" starttime="20220704 14:18:11.545" endtime="20220704 14:18:11.556"/>
</kw>
<if>
<branch type="IF" condition="'${url}' == '${LOGIN_URL}'">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220704 14:18:11.556" endtime="20220704 14:18:11.596"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220704 14:18:11.596" level="INFO">Clicking button 'css:input#login'.</msg>
<status status="PASS" starttime="20220704 14:18:11.596" endtime="20220704 14:18:12.671"/>
</kw>
<status status="PASS" starttime="20220704 14:18:11.556" endtime="20220704 14:18:12.671"/>
</branch>
<branch type="ELSE">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="NOT RUN" starttime="20220704 14:18:12.671" endtime="20220704 14:18:12.671"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<status status="NOT RUN" starttime="20220704 14:18:12.671" endtime="20220704 14:18:12.671"/>
</kw>
<status status="NOT RUN" starttime="20220704 14:18:12.671" endtime="20220704 14:18:12.671"/>
</branch>
<status status="PASS" starttime="20220704 14:18:11.556" endtime="20220704 14:18:12.671"/>
</if>
<status status="PASS" starttime="20220704 14:18:11.545" endtime="20220704 14:18:12.671"/>
</kw>
<kw name="Wait Until Location Is Atlassian's Login" library="LoginPage">
<doc>Waits for the page redirection when logging in.</doc>
<kw name="Wait Until Location Contains" library="SeleniumLibrary">
<arg>atlassian.com</arg>
<doc>Waits until the current URL contains ``expected``.</doc>
<status status="PASS" starttime="20220704 14:18:12.672" endtime="20220704 14:18:12.686"/>
</kw>
<status status="PASS" starttime="20220704 14:18:12.671" endtime="20220704 14:18:12.686"/>
</kw>
<kw name="Enter Password" library="LoginPage">
<arg>${password}</arg>
<doc>Take a password as argument and
enters it in the password_input</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<arg>timeout=10</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 14:18:12.687" endtime="20220704 14:18:12.749"/>
</kw>
<kw name="Input Password" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<arg>${password}</arg>
<doc>Types the given password into the text field identified by ``locator``.</doc>
<msg timestamp="20220704 14:18:12.749" level="INFO">Typing password into text field 'css:input#password'.</msg>
<msg timestamp="20220704 14:18:12.790" level="INFO">Temporally setting log level to: NONE</msg>
<msg timestamp="20220704 14:18:12.852" level="INFO">Log level changed from NONE to INFO.</msg>
<status status="PASS" starttime="20220704 14:18:12.749" endtime="20220704 14:18:12.852"/>
</kw>
<status status="PASS" starttime="20220704 14:18:12.686" endtime="20220704 14:18:12.852"/>
</kw>
<kw name="Click Login Button" library="LoginPage">
<doc>Clicks Trello's login button if in Trello's
login page, else it clicks Atlassian's</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220704 14:18:12.861" level="INFO">${url} = https://id.atlassian.com/login?application=trello&amp;continue=https%3A%2F%2Ftrello.com%2Fauth%2Fatlassian%2Fcallback%3FreturnUrl%3D%252F%26display%3D%26aaOnboarding%3D%26updateEmail%3D%26traceId%3D62c2f6...</msg>
<status status="PASS" starttime="20220704 14:18:12.853" endtime="20220704 14:18:12.861"/>
</kw>
<if>
<branch type="IF" condition="'${url}' == '${LOGIN_URL}'">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="NOT RUN" starttime="20220704 14:18:12.861" endtime="20220704 14:18:12.861"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<status status="NOT RUN" starttime="20220704 14:18:12.861" endtime="20220704 14:18:12.861"/>
</kw>
<status status="NOT RUN" starttime="20220704 14:18:12.861" endtime="20220704 14:18:12.861"/>
</branch>
<branch type="ELSE">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220704 14:18:12.861" endtime="20220704 14:18:12.908"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220704 14:18:12.908" level="INFO">Clicking button 'css:button#login-submit'.</msg>
<status status="PASS" starttime="20220704 14:18:12.908" endtime="20220704 14:18:13.008"/>
</kw>
<status status="PASS" starttime="20220704 14:18:12.861" endtime="20220704 14:18:13.008"/>
</branch>
<status status="PASS" starttime="20220704 14:18:12.861" endtime="20220704 14:18:13.008"/>
</if>
<status status="PASS" starttime="20220704 14:18:12.852" endtime="20220704 14:18:13.009"/>
</kw>
<status status="PASS" starttime="20220704 14:18:10.648" endtime="20220704 14:18:13.009"/>
</kw>
<kw name="Go To Board" library="BoardsPage">
<arg>TestBoard</arg>
<doc>Receives the board name and goes to that board's page.</doc>
<kw name="Format String" library="String">
<var>${locator}</var>
<arg>${BOARD_BUTTON}</arg>
<arg>${board_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:18:13.010" level="INFO">${locator} = //div[@title="TestBoard"]</msg>
<status status="PASS" starttime="20220704 14:18:13.009" endtime="20220704 14:18:13.010"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 14:18:13.010" endtime="20220704 14:18:16.562"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 14:18:16.562" level="INFO">Clicking element '//div[@title="TestBoard"]'.</msg>
<status status="PASS" starttime="20220704 14:18:16.562" endtime="20220704 14:18:16.932"/>
</kw>
<status status="PASS" starttime="20220704 14:18:13.009" endtime="20220704 14:18:16.933"/>
</kw>
<kw name="Create new list with the name" library="ListComponent">
<arg>NEW_TEST_LIST</arg>
<doc>Create a new list with the given name</doc>
<kw name="Wait Until Page Contains Element" library="SeleniumLibrary">
<arg>${ADD_LIST_BUTTON}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" starttime="20220704 14:18:16.933" endtime="20220704 14:18:17.434"/>
</kw>
<kw name="Click Link" library="SeleniumLibrary">
<arg>${ADD_LIST_BUTTON}</arg>
<doc>Clicks a link identified by ``locator``.</doc>
<msg timestamp="20220704 14:18:17.435" level="INFO">Clicking link 'xpath://a[contains(@Class, 'open-add-list')]'.</msg>
<status status="PASS" starttime="20220704 14:18:17.434" endtime="20220704 14:18:17.587"/>
</kw>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LIST_NAME_INPUT}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220704 14:18:17.587" endtime="20220704 14:18:17.658"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${LIST_NAME_INPUT}</arg>
<arg>${list_name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220704 14:18:17.659" level="INFO">Typing text 'NEW_TEST_LIST' into text field 'xpath://input[@class="list-name-input"]'.</msg>
<status status="PASS" starttime="20220704 14:18:17.658" endtime="20220704 14:18:17.763"/>
</kw>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>${LIST_NAME_INPUT}</arg>
<arg>RETURN</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20220704 14:18:17.763" level="INFO">Sending key(s) ('RETURN',) to xpath://input[@class="list-name-input"] element.</msg>
<msg timestamp="20220704 14:18:18.092" level="INFO">Pressing special key RETURN to element.</msg>
<msg timestamp="20220704 14:18:18.092" level="INFO">Releasing special key RETURN.</msg>
<status status="PASS" starttime="20220704 14:18:17.763" endtime="20220704 14:18:18.128"/>
</kw>
<status status="PASS" starttime="20220704 14:18:16.933" endtime="20220704 14:18:18.128"/>
</kw>
<kw name="Verify That The List Exists" library="ListComponent">
<arg>NEW_TEST_LIST</arg>
<doc>Verify that a given header of a list matches</doc>
<kw name="Format String" library="String">
<var>${list_name_locator}</var>
<arg>${LIST_DIV}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:18:18.129" level="INFO">${list_name_locator} = //h2[text()='NEW_TEST_LIST']//ancestor::div[contains(@class, 'list-content')]</msg>
<status status="PASS" starttime="20220704 14:18:18.129" endtime="20220704 14:18:18.130"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${list_name_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 14:18:18.130" endtime="20220704 14:18:18.176"/>
</kw>
<kw name="Page Should Contain Element" library="SeleniumLibrary">
<arg>${list_name_locator}</arg>
<doc>Verifies that element ``locator`` is found on the current page.</doc>
<msg timestamp="20220704 14:18:18.187" level="INFO">Current page contains element '//h2[text()='NEW_TEST_LIST']//ancestor::div[contains(@class, 'list-content')]'.</msg>
<status status="PASS" starttime="20220704 14:18:18.176" endtime="20220704 14:18:18.187"/>
</kw>
<status status="PASS" starttime="20220704 14:18:18.129" endtime="20220704 14:18:18.188"/>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Close a list</arg>
<arg>Close Browser</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Close a list" library="ListComponent">
<doc>archives a list</doc>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LIST_ACTIONS_BUTTON}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220704 14:18:18.188" endtime="20220704 14:18:18.230"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Click Link</arg>
<arg>${LIST_ACTIONS_BUTTON}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Click Link" library="SeleniumLibrary">
<arg>${LIST_ACTIONS_BUTTON}</arg>
<doc>Clicks a link identified by ``locator``.</doc>
<msg timestamp="20220704 14:18:18.231" level="INFO">Clicking link 'xpath://div[@class='js-list list-wrapper'][last()]//a[@aria-label="List actions"]'.</msg>
<status status="PASS" starttime="20220704 14:18:18.231" endtime="20220704 14:18:18.359"/>
</kw>
<status status="PASS" starttime="20220704 14:18:18.230" endtime="20220704 14:18:18.359"/>
</kw>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${CLOSE_LIST_BUTTON}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220704 14:18:18.360" endtime="20220704 14:18:18.428"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Click Link</arg>
<arg>${CLOSE_LIST_BUTTON}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Click Link" library="SeleniumLibrary">
<arg>${CLOSE_LIST_BUTTON}</arg>
<doc>Clicks a link identified by ``locator``.</doc>
<msg timestamp="20220704 14:18:18.428" level="INFO">Clicking link 'xpath://li//a[@class='js-close-list']'.</msg>
<status status="PASS" starttime="20220704 14:18:18.428" endtime="20220704 14:18:18.499"/>
</kw>
<status status="PASS" starttime="20220704 14:18:18.428" endtime="20220704 14:18:18.499"/>
</kw>
<status status="PASS" starttime="20220704 14:18:18.188" endtime="20220704 14:18:18.499"/>
</kw>
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20220704 14:18:18.499" endtime="20220704 14:18:18.606"/>
</kw>
<status status="PASS" starttime="20220704 14:18:18.188" endtime="20220704 14:18:18.606"/>
</kw>
<doc>verify that a list can be created in GUI</doc>
<tag>gui</tag>
<tag>list.create</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220704 14:18:09.449" endtime="20220704 14:18:18.606"/>
</test>
<test id="s1-s2-s1-s4-t2" name="modify name of a list" line="31">
<kw name="Open Browser From Environment" library="CommonGUI">
<arg>${LOGIN_URL}</arg>
<doc>This keywords takes REMOTE and BROWSER variables
from the environment automatically and only needs a url</doc>
<if>
<branch type="IF" condition="${is_remote}">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${url}</arg>
<arg>${BROWSER}</arg>
<arg>remote_url=http://selenium-hub:4444</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20220704 14:18:18.609" level="INFO">Opening browser 'chrome' to base url 'https://trello.com/login' through remote server at 'http://selenium-hub:4444'.</msg>
<status status="PASS" starttime="20220704 14:18:18.609" endtime="20220704 14:18:19.711"/>
</kw>
<status status="PASS" starttime="20220704 14:18:18.609" endtime="20220704 14:18:19.711"/>
</branch>
<branch type="ELSE">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${url}</arg>
<arg>${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<status status="NOT RUN" starttime="20220704 14:18:19.712" endtime="20220704 14:18:19.712"/>
</kw>
<status status="NOT RUN" starttime="20220704 14:18:19.711" endtime="20220704 14:18:19.712"/>
</branch>
<status status="PASS" starttime="20220704 14:18:18.609" endtime="20220704 14:18:19.712"/>
</if>
<status status="PASS" starttime="20220704 14:18:18.608" endtime="20220704 14:18:19.712"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20220704 14:18:19.712" endtime="20220704 14:18:19.820"/>
</kw>
<kw name="Login To Trello" library="LoginPage">
<arg>${DEFAULT_EMAIL}</arg>
<arg>${DEFAULT_PASSWORD}</arg>
<doc>High-level keyword for logging in to Trello</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220704 14:18:19.829" level="INFO">${url} = https://trello.com/login</msg>
<status status="PASS" starttime="20220704 14:18:19.821" endtime="20220704 14:18:19.829"/>
</kw>
<if>
<branch type="IF" condition="'${url}' != '${LOGIN_URL}'">
<kw name="Go To" library="SeleniumLibrary">
<arg>${LOGIN_URL}</arg>
<doc>Navigates the current browser window to the provided ``url``.</doc>
<status status="NOT RUN" starttime="20220704 14:18:19.830" endtime="20220704 14:18:19.830"/>
</kw>
<status status="NOT RUN" starttime="20220704 14:18:19.829" endtime="20220704 14:18:19.830"/>
</branch>
<status status="PASS" starttime="20220704 14:18:19.829" endtime="20220704 14:18:19.830"/>
</if>
<kw name="Enter Username" library="LoginPage">
<arg>${username}</arg>
<doc>Take a username as argument and
enters it in the user_input</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${USER_INPUT}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 14:18:19.830" endtime="20220704 14:18:19.866"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${USER_INPUT}</arg>
<arg>${username}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220704 14:18:19.866" level="INFO">Typing text 'bootcamp04@mailinator.com' into text field 'css:input#user'.</msg>
<status status="PASS" starttime="20220704 14:18:19.866" endtime="20220704 14:18:19.968"/>
</kw>
<status status="PASS" starttime="20220704 14:18:19.830" endtime="20220704 14:18:19.969"/>
</kw>
<kw name="Wait Until Element Is Not Visible" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<doc>Waits until the element ``locator`` is not visible.</doc>
<status status="PASS" starttime="20220704 14:18:19.969" endtime="20220704 14:18:20.685"/>
</kw>
<kw name="Click Login Button" library="LoginPage">
<doc>Clicks Trello's login button if in Trello's
login page, else it clicks Atlassian's</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220704 14:18:20.692" level="INFO">${url} = https://trello.com/login</msg>
<status status="PASS" starttime="20220704 14:18:20.686" endtime="20220704 14:18:20.692"/>
</kw>
<if>
<branch type="IF" condition="'${url}' == '${LOGIN_URL}'">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220704 14:18:20.692" endtime="20220704 14:18:20.748"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220704 14:18:20.749" level="INFO">Clicking button 'css:input#login'.</msg>
<status status="PASS" starttime="20220704 14:18:20.748" endtime="20220704 14:18:21.785"/>
</kw>
<status status="PASS" starttime="20220704 14:18:20.692" endtime="20220704 14:18:21.785"/>
</branch>
<branch type="ELSE">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="NOT RUN" starttime="20220704 14:18:21.785" endtime="20220704 14:18:21.785"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<status status="NOT RUN" starttime="20220704 14:18:21.785" endtime="20220704 14:18:21.785"/>
</kw>
<status status="NOT RUN" starttime="20220704 14:18:21.785" endtime="20220704 14:18:21.785"/>
</branch>
<status status="PASS" starttime="20220704 14:18:20.692" endtime="20220704 14:18:21.785"/>
</if>
<status status="PASS" starttime="20220704 14:18:20.685" endtime="20220704 14:18:21.786"/>
</kw>
<kw name="Wait Until Location Is Atlassian's Login" library="LoginPage">
<doc>Waits for the page redirection when logging in.</doc>
<kw name="Wait Until Location Contains" library="SeleniumLibrary">
<arg>atlassian.com</arg>
<doc>Waits until the current URL contains ``expected``.</doc>
<status status="PASS" starttime="20220704 14:18:21.786" endtime="20220704 14:18:21.798"/>
</kw>
<status status="PASS" starttime="20220704 14:18:21.786" endtime="20220704 14:18:21.799"/>
</kw>
<kw name="Enter Password" library="LoginPage">
<arg>${password}</arg>
<doc>Take a password as argument and
enters it in the password_input</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<arg>timeout=10</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 14:18:21.799" endtime="20220704 14:18:21.842"/>
</kw>
<kw name="Input Password" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<arg>${password}</arg>
<doc>Types the given password into the text field identified by ``locator``.</doc>
<msg timestamp="20220704 14:18:21.842" level="INFO">Typing password into text field 'css:input#password'.</msg>
<msg timestamp="20220704 14:18:21.893" level="INFO">Temporally setting log level to: NONE</msg>
<msg timestamp="20220704 14:18:21.963" level="INFO">Log level changed from NONE to INFO.</msg>
<status status="PASS" starttime="20220704 14:18:21.842" endtime="20220704 14:18:21.963"/>
</kw>
<status status="PASS" starttime="20220704 14:18:21.799" endtime="20220704 14:18:21.963"/>
</kw>
<kw name="Click Login Button" library="LoginPage">
<doc>Clicks Trello's login button if in Trello's
login page, else it clicks Atlassian's</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220704 14:18:21.972" level="INFO">${url} = https://id.atlassian.com/login?application=trello&amp;continue=https%3A%2F%2Ftrello.com%2Fauth%2Fatlassian%2Fcallback%3FreturnUrl%3D%252F%26display%3D%26aaOnboarding%3D%26updateEmail%3D%26traceId%3D62c2f6...</msg>
<status status="PASS" starttime="20220704 14:18:21.964" endtime="20220704 14:18:21.972"/>
</kw>
<if>
<branch type="IF" condition="'${url}' == '${LOGIN_URL}'">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="NOT RUN" starttime="20220704 14:18:21.973" endtime="20220704 14:18:21.973"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<status status="NOT RUN" starttime="20220704 14:18:21.973" endtime="20220704 14:18:21.973"/>
</kw>
<status status="NOT RUN" starttime="20220704 14:18:21.973" endtime="20220704 14:18:21.973"/>
</branch>
<branch type="ELSE">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220704 14:18:21.973" endtime="20220704 14:18:22.037"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220704 14:18:22.038" level="INFO">Clicking button 'css:button#login-submit'.</msg>
<status status="PASS" starttime="20220704 14:18:22.037" endtime="20220704 14:18:22.151"/>
</kw>
<status status="PASS" starttime="20220704 14:18:21.973" endtime="20220704 14:18:22.151"/>
</branch>
<status status="PASS" starttime="20220704 14:18:21.972" endtime="20220704 14:18:22.151"/>
</if>
<status status="PASS" starttime="20220704 14:18:21.963" endtime="20220704 14:18:22.151"/>
</kw>
<status status="PASS" starttime="20220704 14:18:19.820" endtime="20220704 14:18:22.151"/>
</kw>
<kw name="Go To Board" library="BoardsPage">
<arg>TestBoard</arg>
<doc>Receives the board name and goes to that board's page.</doc>
<kw name="Format String" library="String">
<var>${locator}</var>
<arg>${BOARD_BUTTON}</arg>
<arg>${board_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:18:22.152" level="INFO">${locator} = //div[@title="TestBoard"]</msg>
<status status="PASS" starttime="20220704 14:18:22.152" endtime="20220704 14:18:22.152"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 14:18:22.152" endtime="20220704 14:18:25.666"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 14:18:25.667" level="INFO">Clicking element '//div[@title="TestBoard"]'.</msg>
<status status="PASS" starttime="20220704 14:18:25.667" endtime="20220704 14:18:26.026"/>
</kw>
<status status="PASS" starttime="20220704 14:18:22.151" endtime="20220704 14:18:26.026"/>
</kw>
<kw name="Create new list with the name" library="ListComponent">
<arg>TO_MODIFY</arg>
<doc>Create a new list with the given name</doc>
<kw name="Wait Until Page Contains Element" library="SeleniumLibrary">
<arg>${ADD_LIST_BUTTON}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" starttime="20220704 14:18:26.027" endtime="20220704 14:18:26.464"/>
</kw>
<kw name="Click Link" library="SeleniumLibrary">
<arg>${ADD_LIST_BUTTON}</arg>
<doc>Clicks a link identified by ``locator``.</doc>
<msg timestamp="20220704 14:18:26.465" level="INFO">Clicking link 'xpath://a[contains(@Class, 'open-add-list')]'.</msg>
<status status="PASS" starttime="20220704 14:18:26.464" endtime="20220704 14:18:26.639"/>
</kw>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LIST_NAME_INPUT}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220704 14:18:26.639" endtime="20220704 14:18:26.736"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${LIST_NAME_INPUT}</arg>
<arg>${list_name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220704 14:18:26.737" level="INFO">Typing text 'TO_MODIFY' into text field 'xpath://input[@class="list-name-input"]'.</msg>
<status status="PASS" starttime="20220704 14:18:26.736" endtime="20220704 14:18:26.848"/>
</kw>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>${LIST_NAME_INPUT}</arg>
<arg>RETURN</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20220704 14:18:26.849" level="INFO">Sending key(s) ('RETURN',) to xpath://input[@class="list-name-input"] element.</msg>
<msg timestamp="20220704 14:18:27.139" level="INFO">Pressing special key RETURN to element.</msg>
<msg timestamp="20220704 14:18:27.139" level="INFO">Releasing special key RETURN.</msg>
<status status="PASS" starttime="20220704 14:18:26.848" endtime="20220704 14:18:27.171"/>
</kw>
<status status="PASS" starttime="20220704 14:18:26.026" endtime="20220704 14:18:27.171"/>
</kw>
<kw name="Modify the name of a list with" library="ListComponent">
<arg>TO_MODIFY</arg>
<arg>MODIFIED_LIST</arg>
<doc>Modify the name of an existent list</doc>
<kw name="Format String" library="String">
<var>${name_header_instance}</var>
<arg>${LIST_NAME_HEADER}</arg>
<arg>old_name=${old_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:18:27.172" level="INFO">${name_header_instance} = xpath://div[@class='list-header js-list-header u-clearfix is-menu-shown' and contains(.,'TO_MODIFY')]</msg>
<status status="PASS" starttime="20220704 14:18:27.172" endtime="20220704 14:18:27.172"/>
</kw>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${name_header_instance}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220704 14:18:27.172" endtime="20220704 14:18:27.233"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${name_header_instance}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 14:18:27.234" level="INFO">Clicking element 'xpath://div[@class='list-header js-list-header u-clearfix is-menu-shown' and contains(.,'TO_MODIFY')]'.</msg>
<status status="PASS" starttime="20220704 14:18:27.234" endtime="20220704 14:18:27.299"/>
</kw>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LIST_NAME_INPUT}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220704 14:18:27.300" endtime="20220704 14:18:27.355"/>
</kw>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>${LIST_NAME_INPUT}</arg>
<arg>BACKSPACE</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20220704 14:18:27.356" level="INFO">Sending key(s) ('BACKSPACE',) to xpath://input[@class="list-name-input"] element.</msg>
<msg timestamp="20220704 14:18:27.651" level="INFO">Pressing special key BACKSPACE to element.</msg>
<msg timestamp="20220704 14:18:27.651" level="INFO">Releasing special key BACKSPACE.</msg>
<status status="PASS" starttime="20220704 14:18:27.355" endtime="20220704 14:18:27.661"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${LIST_TEXT_AREA_NAME}</arg>
<arg>${new_name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220704 14:18:27.662" level="INFO">Typing text 'MODIFIED_LIST' into text field 'xpath://div[@class='js-list list-wrapper'][last()]//textarea'.</msg>
<status status="PASS" starttime="20220704 14:18:27.661" endtime="20220704 14:18:27.793"/>
</kw>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>None</arg>
<arg>RETURN</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20220704 14:18:27.794" level="INFO">Sending key(s) ('RETURN',) to page.</msg>
<msg timestamp="20220704 14:18:27.794" level="INFO">Pressing special key RETURN to browser.</msg>
<msg timestamp="20220704 14:18:27.794" level="INFO">Releasing special key RETURN.</msg>
<status status="PASS" starttime="20220704 14:18:27.793" endtime="20220704 14:18:27.813"/>
</kw>
<status status="PASS" starttime="20220704 14:18:27.171" endtime="20220704 14:18:27.813"/>
</kw>
<kw name="Verify That The List Exists" library="ListComponent">
<arg>MODIFIED_LIST</arg>
<doc>Verify that a given header of a list matches</doc>
<kw name="Format String" library="String">
<var>${list_name_locator}</var>
<arg>${LIST_DIV}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:18:27.814" level="INFO">${list_name_locator} = //h2[text()='MODIFIED_LIST']//ancestor::div[contains(@class, 'list-content')]</msg>
<status status="PASS" starttime="20220704 14:18:27.814" endtime="20220704 14:18:27.814"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${list_name_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 14:18:27.814" endtime="20220704 14:18:27.874"/>
</kw>
<kw name="Page Should Contain Element" library="SeleniumLibrary">
<arg>${list_name_locator}</arg>
<doc>Verifies that element ``locator`` is found on the current page.</doc>
<msg timestamp="20220704 14:18:27.885" level="INFO">Current page contains element '//h2[text()='MODIFIED_LIST']//ancestor::div[contains(@class, 'list-content')]'.</msg>
<status status="PASS" starttime="20220704 14:18:27.875" endtime="20220704 14:18:27.886"/>
</kw>
<status status="PASS" starttime="20220704 14:18:27.813" endtime="20220704 14:18:27.886"/>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Close a list</arg>
<arg>Close Browser</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Close a list" library="ListComponent">
<doc>archives a list</doc>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LIST_ACTIONS_BUTTON}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220704 14:18:27.887" endtime="20220704 14:18:27.951"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Click Link</arg>
<arg>${LIST_ACTIONS_BUTTON}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Click Link" library="SeleniumLibrary">
<arg>${LIST_ACTIONS_BUTTON}</arg>
<doc>Clicks a link identified by ``locator``.</doc>
<msg timestamp="20220704 14:18:27.952" level="INFO">Clicking link 'xpath://div[@class='js-list list-wrapper'][last()]//a[@aria-label="List actions"]'.</msg>
<status status="PASS" starttime="20220704 14:18:27.952" endtime="20220704 14:18:28.034"/>
</kw>
<status status="PASS" starttime="20220704 14:18:27.951" endtime="20220704 14:18:28.034"/>
</kw>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${CLOSE_LIST_BUTTON}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220704 14:18:28.034" endtime="20220704 14:18:28.129"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Click Link</arg>
<arg>${CLOSE_LIST_BUTTON}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Click Link" library="SeleniumLibrary">
<arg>${CLOSE_LIST_BUTTON}</arg>
<doc>Clicks a link identified by ``locator``.</doc>
<msg timestamp="20220704 14:18:28.130" level="INFO">Clicking link 'xpath://li//a[@class='js-close-list']'.</msg>
<status status="PASS" starttime="20220704 14:18:28.129" endtime="20220704 14:18:28.197"/>
</kw>
<status status="PASS" starttime="20220704 14:18:28.129" endtime="20220704 14:18:28.197"/>
</kw>
<status status="PASS" starttime="20220704 14:18:27.886" endtime="20220704 14:18:28.197"/>
</kw>
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20220704 14:18:28.197" endtime="20220704 14:18:28.279"/>
</kw>
<status status="PASS" starttime="20220704 14:18:27.886" endtime="20220704 14:18:28.279"/>
</kw>
<doc>verify that a list name can be modified in GUI</doc>
<tag>gui</tag>
<tag>list.update</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220704 14:18:18.607" endtime="20220704 14:18:28.279"/>
</test>
<test id="s1-s2-s1-s4-t3" name="archive a list" line="45">
<kw name="Open Browser From Environment" library="CommonGUI">
<arg>${LOGIN_URL}</arg>
<doc>This keywords takes REMOTE and BROWSER variables
from the environment automatically and only needs a url</doc>
<if>
<branch type="IF" condition="${is_remote}">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${url}</arg>
<arg>${BROWSER}</arg>
<arg>remote_url=http://selenium-hub:4444</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20220704 14:18:28.282" level="INFO">Opening browser 'chrome' to base url 'https://trello.com/login' through remote server at 'http://selenium-hub:4444'.</msg>
<status status="PASS" starttime="20220704 14:18:28.282" endtime="20220704 14:18:29.448"/>
</kw>
<status status="PASS" starttime="20220704 14:18:28.282" endtime="20220704 14:18:29.448"/>
</branch>
<branch type="ELSE">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${url}</arg>
<arg>${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<status status="NOT RUN" starttime="20220704 14:18:29.449" endtime="20220704 14:18:29.449"/>
</kw>
<status status="NOT RUN" starttime="20220704 14:18:29.448" endtime="20220704 14:18:29.449"/>
</branch>
<status status="PASS" starttime="20220704 14:18:28.281" endtime="20220704 14:18:29.449"/>
</if>
<status status="PASS" starttime="20220704 14:18:28.281" endtime="20220704 14:18:29.449"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20220704 14:18:29.449" endtime="20220704 14:18:29.562"/>
</kw>
<kw name="Login To Trello" library="LoginPage">
<arg>${DEFAULT_EMAIL}</arg>
<arg>${DEFAULT_PASSWORD}</arg>
<doc>High-level keyword for logging in to Trello</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220704 14:18:29.573" level="INFO">${url} = https://trello.com/login</msg>
<status status="PASS" starttime="20220704 14:18:29.563" endtime="20220704 14:18:29.573"/>
</kw>
<if>
<branch type="IF" condition="'${url}' != '${LOGIN_URL}'">
<kw name="Go To" library="SeleniumLibrary">
<arg>${LOGIN_URL}</arg>
<doc>Navigates the current browser window to the provided ``url``.</doc>
<status status="NOT RUN" starttime="20220704 14:18:29.573" endtime="20220704 14:18:29.573"/>
</kw>
<status status="NOT RUN" starttime="20220704 14:18:29.573" endtime="20220704 14:18:29.573"/>
</branch>
<status status="PASS" starttime="20220704 14:18:29.573" endtime="20220704 14:18:29.573"/>
</if>
<kw name="Enter Username" library="LoginPage">
<arg>${username}</arg>
<doc>Take a username as argument and
enters it in the user_input</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${USER_INPUT}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 14:18:29.574" endtime="20220704 14:18:29.629"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${USER_INPUT}</arg>
<arg>${username}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220704 14:18:29.630" level="INFO">Typing text 'bootcamp04@mailinator.com' into text field 'css:input#user'.</msg>
<status status="PASS" starttime="20220704 14:18:29.629" endtime="20220704 14:18:29.732"/>
</kw>
<status status="PASS" starttime="20220704 14:18:29.573" endtime="20220704 14:18:29.732"/>
</kw>
<kw name="Wait Until Element Is Not Visible" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<doc>Waits until the element ``locator`` is not visible.</doc>
<status status="PASS" starttime="20220704 14:18:29.732" endtime="20220704 14:18:30.436"/>
</kw>
<kw name="Click Login Button" library="LoginPage">
<doc>Clicks Trello's login button if in Trello's
login page, else it clicks Atlassian's</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220704 14:18:30.443" level="INFO">${url} = https://trello.com/login</msg>
<status status="PASS" starttime="20220704 14:18:30.436" endtime="20220704 14:18:30.443"/>
</kw>
<if>
<branch type="IF" condition="'${url}' == '${LOGIN_URL}'">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220704 14:18:30.443" endtime="20220704 14:18:30.503"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220704 14:18:30.503" level="INFO">Clicking button 'css:input#login'.</msg>
<status status="PASS" starttime="20220704 14:18:30.503" endtime="20220704 14:18:31.500"/>
</kw>
<status status="PASS" starttime="20220704 14:18:30.443" endtime="20220704 14:18:31.500"/>
</branch>
<branch type="ELSE">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="NOT RUN" starttime="20220704 14:18:31.501" endtime="20220704 14:18:31.501"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<status status="NOT RUN" starttime="20220704 14:18:31.501" endtime="20220704 14:18:31.501"/>
</kw>
<status status="NOT RUN" starttime="20220704 14:18:31.500" endtime="20220704 14:18:31.501"/>
</branch>
<status status="PASS" starttime="20220704 14:18:30.443" endtime="20220704 14:18:31.501"/>
</if>
<status status="PASS" starttime="20220704 14:18:30.436" endtime="20220704 14:18:31.501"/>
</kw>
<kw name="Wait Until Location Is Atlassian's Login" library="LoginPage">
<doc>Waits for the page redirection when logging in.</doc>
<kw name="Wait Until Location Contains" library="SeleniumLibrary">
<arg>atlassian.com</arg>
<doc>Waits until the current URL contains ``expected``.</doc>
<status status="PASS" starttime="20220704 14:18:31.501" endtime="20220704 14:18:31.519"/>
</kw>
<status status="PASS" starttime="20220704 14:18:31.501" endtime="20220704 14:18:31.519"/>
</kw>
<kw name="Enter Password" library="LoginPage">
<arg>${password}</arg>
<doc>Take a password as argument and
enters it in the password_input</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<arg>timeout=10</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 14:18:31.520" endtime="20220704 14:18:31.562"/>
</kw>
<kw name="Input Password" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<arg>${password}</arg>
<doc>Types the given password into the text field identified by ``locator``.</doc>
<msg timestamp="20220704 14:18:31.563" level="INFO">Typing password into text field 'css:input#password'.</msg>
<msg timestamp="20220704 14:18:31.639" level="INFO">Temporally setting log level to: NONE</msg>
<msg timestamp="20220704 14:18:31.718" level="INFO">Log level changed from NONE to INFO.</msg>
<status status="PASS" starttime="20220704 14:18:31.563" endtime="20220704 14:18:31.718"/>
</kw>
<status status="PASS" starttime="20220704 14:18:31.519" endtime="20220704 14:18:31.718"/>
</kw>
<kw name="Click Login Button" library="LoginPage">
<doc>Clicks Trello's login button if in Trello's
login page, else it clicks Atlassian's</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220704 14:18:31.730" level="INFO">${url} = https://id.atlassian.com/login?application=trello&amp;continue=https%3A%2F%2Ftrello.com%2Fauth%2Fatlassian%2Fcallback%3FreturnUrl%3D%252F%26display%3D%26aaOnboarding%3D%26updateEmail%3D%26traceId%3D62c2f6...</msg>
<status status="PASS" starttime="20220704 14:18:31.719" endtime="20220704 14:18:31.730"/>
</kw>
<if>
<branch type="IF" condition="'${url}' == '${LOGIN_URL}'">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="NOT RUN" starttime="20220704 14:18:31.731" endtime="20220704 14:18:31.731"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<status status="NOT RUN" starttime="20220704 14:18:31.731" endtime="20220704 14:18:31.731"/>
</kw>
<status status="NOT RUN" starttime="20220704 14:18:31.730" endtime="20220704 14:18:31.731"/>
</branch>
<branch type="ELSE">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220704 14:18:31.731" endtime="20220704 14:18:31.781"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220704 14:18:31.781" level="INFO">Clicking button 'css:button#login-submit'.</msg>
<status status="PASS" starttime="20220704 14:18:31.781" endtime="20220704 14:18:31.894"/>
</kw>
<status status="PASS" starttime="20220704 14:18:31.731" endtime="20220704 14:18:31.894"/>
</branch>
<status status="PASS" starttime="20220704 14:18:31.730" endtime="20220704 14:18:31.894"/>
</if>
<status status="PASS" starttime="20220704 14:18:31.719" endtime="20220704 14:18:31.894"/>
</kw>
<status status="PASS" starttime="20220704 14:18:29.562" endtime="20220704 14:18:31.894"/>
</kw>
<kw name="Go To Board" library="BoardsPage">
<arg>TestBoard</arg>
<doc>Receives the board name and goes to that board's page.</doc>
<kw name="Format String" library="String">
<var>${locator}</var>
<arg>${BOARD_BUTTON}</arg>
<arg>${board_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:18:31.895" level="INFO">${locator} = //div[@title="TestBoard"]</msg>
<status status="PASS" starttime="20220704 14:18:31.895" endtime="20220704 14:18:31.895"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 14:18:31.895" endtime="20220704 14:18:35.600"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 14:18:35.600" level="INFO">Clicking element '//div[@title="TestBoard"]'.</msg>
<status status="PASS" starttime="20220704 14:18:35.600" endtime="20220704 14:18:35.961"/>
</kw>
<status status="PASS" starttime="20220704 14:18:31.895" endtime="20220704 14:18:35.961"/>
</kw>
<kw name="Create new list with the name" library="ListComponent">
<arg>TO_ARCHIVE</arg>
<doc>Create a new list with the given name</doc>
<kw name="Wait Until Page Contains Element" library="SeleniumLibrary">
<arg>${ADD_LIST_BUTTON}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" starttime="20220704 14:18:35.962" endtime="20220704 14:18:36.444"/>
</kw>
<kw name="Click Link" library="SeleniumLibrary">
<arg>${ADD_LIST_BUTTON}</arg>
<doc>Clicks a link identified by ``locator``.</doc>
<msg timestamp="20220704 14:18:36.445" level="INFO">Clicking link 'xpath://a[contains(@Class, 'open-add-list')]'.</msg>
<status status="PASS" starttime="20220704 14:18:36.444" endtime="20220704 14:18:36.654"/>
</kw>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LIST_NAME_INPUT}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220704 14:18:36.655" endtime="20220704 14:18:36.707"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${LIST_NAME_INPUT}</arg>
<arg>${list_name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220704 14:18:36.708" level="INFO">Typing text 'TO_ARCHIVE' into text field 'xpath://input[@class="list-name-input"]'.</msg>
<status status="PASS" starttime="20220704 14:18:36.707" endtime="20220704 14:18:36.818"/>
</kw>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>${LIST_NAME_INPUT}</arg>
<arg>RETURN</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20220704 14:18:36.819" level="INFO">Sending key(s) ('RETURN',) to xpath://input[@class="list-name-input"] element.</msg>
<msg timestamp="20220704 14:18:37.139" level="INFO">Pressing special key RETURN to element.</msg>
<msg timestamp="20220704 14:18:37.139" level="INFO">Releasing special key RETURN.</msg>
<status status="PASS" starttime="20220704 14:18:36.819" endtime="20220704 14:18:37.186"/>
</kw>
<status status="PASS" starttime="20220704 14:18:35.962" endtime="20220704 14:18:37.187"/>
</kw>
<kw name="Close a list" library="ListComponent">
<doc>archives a list</doc>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LIST_ACTIONS_BUTTON}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220704 14:18:37.187" endtime="20220704 14:18:37.234"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Click Link</arg>
<arg>${LIST_ACTIONS_BUTTON}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Click Link" library="SeleniumLibrary">
<arg>${LIST_ACTIONS_BUTTON}</arg>
<doc>Clicks a link identified by ``locator``.</doc>
<msg timestamp="20220704 14:18:37.235" level="INFO">Clicking link 'xpath://div[@class='js-list list-wrapper'][last()]//a[@aria-label="List actions"]'.</msg>
<status status="PASS" starttime="20220704 14:18:37.234" endtime="20220704 14:18:37.322"/>
</kw>
<status status="PASS" starttime="20220704 14:18:37.234" endtime="20220704 14:18:37.322"/>
</kw>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${CLOSE_LIST_BUTTON}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220704 14:18:37.323" endtime="20220704 14:18:37.406"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Click Link</arg>
<arg>${CLOSE_LIST_BUTTON}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Click Link" library="SeleniumLibrary">
<arg>${CLOSE_LIST_BUTTON}</arg>
<doc>Clicks a link identified by ``locator``.</doc>
<msg timestamp="20220704 14:18:37.407" level="INFO">Clicking link 'xpath://li//a[@class='js-close-list']'.</msg>
<status status="PASS" starttime="20220704 14:18:37.407" endtime="20220704 14:18:37.499"/>
</kw>
<status status="PASS" starttime="20220704 14:18:37.406" endtime="20220704 14:18:37.499"/>
</kw>
<status status="PASS" starttime="20220704 14:18:37.187" endtime="20220704 14:18:37.499"/>
</kw>
<kw name="Enter to the side menu" library="TopBar">
<doc>accesing to the archive menu in the sidebar</doc>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${SHOW_MENU_BUTTON}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220704 14:18:37.500" endtime="20220704 14:18:37.541"/>
</kw>
<kw name="Click Link" library="SeleniumLibrary">
<arg>${SHOW_MENU_BUTTON}</arg>
<doc>Clicks a link identified by ``locator``.</doc>
<msg timestamp="20220704 14:18:37.542" level="INFO">Clicking link 'xpath://div[contains(@class, 'board-header')]//a[contains(., 'Show menu')]'.</msg>
<status status="PASS" starttime="20220704 14:18:37.542" endtime="20220704 14:18:37.651"/>
</kw>
<status status="PASS" starttime="20220704 14:18:37.500" endtime="20220704 14:18:37.651"/>
</kw>
<kw name="Enter to the list archive" library="ShownMenu">
<doc>accesing to the archive menu in the sidebar</doc>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${MORE_OPTIONS_SIDEBAR}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220704 14:18:37.652" endtime="20220704 14:18:37.720"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Click Link</arg>
<arg>${MORE_OPTIONS_SIDEBAR}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Click Link" library="SeleniumLibrary">
<arg>${MORE_OPTIONS_SIDEBAR}</arg>
<doc>Clicks a link identified by ``locator``.</doc>
<msg timestamp="20220704 14:18:37.720" level="INFO">Clicking link 'xpath://a[contains(@class,'board-menu-navigation-item-link') and contains(.,'More')]'.</msg>
<status status="PASS" starttime="20220704 14:18:37.720" endtime="20220704 14:18:37.867"/>
</kw>
<status status="PASS" starttime="20220704 14:18:37.720" endtime="20220704 14:18:37.867"/>
</kw>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${ARCHIVED_ITEMS_BUTTON}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220704 14:18:37.867" endtime="20220704 14:18:37.915"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Click Link</arg>
<arg>${ARCHIVED_ITEMS_BUTTON}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Click Link" library="SeleniumLibrary">
<arg>${ARCHIVED_ITEMS_BUTTON}</arg>
<doc>Clicks a link identified by ``locator``.</doc>
<msg timestamp="20220704 14:18:37.915" level="INFO">Clicking link 'xpath://a[contains(@class, 'js-open-archive')]'.</msg>
<status status="PASS" starttime="20220704 14:18:37.915" endtime="20220704 14:18:37.994"/>
</kw>
<status status="PASS" starttime="20220704 14:18:37.915" endtime="20220704 14:18:37.994"/>
</kw>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${SWITCH_TO_LIST_BUTTON}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220704 14:18:37.994" endtime="20220704 14:18:38.050"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Click Link</arg>
<arg>${SWITCH_TO_LIST_BUTTON}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Click Link" library="SeleniumLibrary">
<arg>${SWITCH_TO_LIST_BUTTON}</arg>
<doc>Clicks a link identified by ``locator``.</doc>
<msg timestamp="20220704 14:18:38.051" level="INFO">Clicking link 'xpath://div[@class='archive-controls']/a[contains(.,'Switch to lists')]'.</msg>
<status status="PASS" starttime="20220704 14:18:38.050" endtime="20220704 14:18:38.133"/>
</kw>
<status status="PASS" starttime="20220704 14:18:38.050" endtime="20220704 14:18:38.133"/>
</kw>
<status status="PASS" starttime="20220704 14:18:37.651" endtime="20220704 14:18:38.133"/>
</kw>
<kw name="Verify That A List Is In The Archive" library="ShownMenu">
<arg>TO_ARCHIVE</arg>
<doc>Verify that a given header of a list matches</doc>
<kw name="Format String" library="String">
<var>${list_name_locator_archive}</var>
<arg>${ARCHIVED_LIST_NAME_FIELD}</arg>
<arg>archived_list_title=${archived_list_title}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:18:38.134" level="INFO">${list_name_locator_archive} = xpath://div[@class='item-name']/span[.='TO_ARCHIVE']</msg>
<status status="PASS" starttime="20220704 14:18:38.134" endtime="20220704 14:18:38.134"/>
</kw>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${list_name_locator_archive}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220704 14:18:38.135" endtime="20220704 14:18:38.388"/>
</kw>
<kw name="Page Should Contain Element" library="SeleniumLibrary">
<arg>${list_name_locator_archive}</arg>
<doc>Verifies that element ``locator`` is found on the current page.</doc>
<msg timestamp="20220704 14:18:38.398" level="INFO">Current page contains element 'xpath://div[@class='item-name']/span[.='TO_ARCHIVE']'.</msg>
<status status="PASS" starttime="20220704 14:18:38.388" endtime="20220704 14:18:38.398"/>
</kw>
<status status="PASS" starttime="20220704 14:18:38.134" endtime="20220704 14:18:38.398"/>
</kw>
<kw name="Close archive tab" library="ShownMenu">
<doc>close sidebar tab</doc>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${CLOSE_SHOW_MENU}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220704 14:18:38.399" endtime="20220704 14:18:38.439"/>
</kw>
<kw name="Click Link" library="SeleniumLibrary">
<arg>${CLOSE_SHOW_MENU}</arg>
<doc>Clicks a link identified by ``locator``.</doc>
<msg timestamp="20220704 14:18:38.440" level="INFO">Clicking link 'xpath://a[@title="Close the board menu."]'.</msg>
<status status="PASS" starttime="20220704 14:18:38.439" endtime="20220704 14:18:38.504"/>
</kw>
<status status="PASS" starttime="20220704 14:18:38.398" endtime="20220704 14:18:38.504"/>
</kw>
<kw name="Close Browser" library="SeleniumLibrary" type="TEARDOWN">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20220704 14:18:38.505" endtime="20220704 14:18:38.588"/>
</kw>
<doc>verify that a list can be archived in GUI</doc>
<tag>gui</tag>
<tag>list.archive</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220704 14:18:28.280" endtime="20220704 14:18:38.588"/>
</test>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Teardown Board</arg>
<arg>Delete All Sessions</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Teardown Board">
<doc>Deletes used board for teardown</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:18:38.591" level="INFO">${url} = boards/62c2f6a174cc565f228b1b71</msg>
<status status="PASS" starttime="20220704 14:18:38.591" endtime="20220704 14:18:38.591"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 14:18:38.976" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:18:38.591" endtime="20220704 14:18:38.976"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:18:38.977" endtime="20220704 14:18:38.977"/>
</return>
<msg timestamp="20220704 14:18:38.977" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:18:38.590" endtime="20220704 14:18:38.977"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:18:38.977" endtime="20220704 14:18:38.977"/>
</return>
<status status="PASS" starttime="20220704 14:18:38.590" endtime="20220704 14:18:38.977"/>
</kw>
<status status="PASS" starttime="20220704 14:18:38.590" endtime="20220704 14:18:38.977"/>
</kw>
<status status="PASS" starttime="20220704 14:18:38.590" endtime="20220704 14:18:38.977"/>
</kw>
<kw name="Delete All Sessions" library="request_own_library">
<status status="PASS" starttime="20220704 14:18:38.977" endtime="20220704 14:18:38.979"/>
</kw>
<status status="PASS" starttime="20220704 14:18:38.589" endtime="20220704 14:18:38.979"/>
</kw>
<doc>List Tests</doc>
<status status="PASS" starttime="20220704 14:18:09.132" endtime="20220704 14:18:38.979"/>
</suite>
<suite id="s1-s2-s1-s5" name="Trello Gui Login" source="/trello/gui/trello_gui_login.robot">
<test id="s1-s2-s1-s5-t1" name="Login With A Valid User and Password" line="7">
<kw name="Open Browser From Environment" library="CommonGUI">
<arg>${LOGIN_URL}</arg>
<doc>This keywords takes REMOTE and BROWSER variables
from the environment automatically and only needs a url</doc>
<if>
<branch type="IF" condition="${is_remote}">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${url}</arg>
<arg>${BROWSER}</arg>
<arg>remote_url=http://selenium-hub:4444</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20220704 14:18:38.988" level="INFO">Opening browser 'chrome' to base url 'https://trello.com/login' through remote server at 'http://selenium-hub:4444'.</msg>
<status status="PASS" starttime="20220704 14:18:38.988" endtime="20220704 14:18:40.186"/>
</kw>
<status status="PASS" starttime="20220704 14:18:38.988" endtime="20220704 14:18:40.186"/>
</branch>
<branch type="ELSE">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${url}</arg>
<arg>${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<status status="NOT RUN" starttime="20220704 14:18:40.186" endtime="20220704 14:18:40.186"/>
</kw>
<status status="NOT RUN" starttime="20220704 14:18:40.186" endtime="20220704 14:18:40.186"/>
</branch>
<status status="PASS" starttime="20220704 14:18:38.988" endtime="20220704 14:18:40.186"/>
</if>
<status status="PASS" starttime="20220704 14:18:38.987" endtime="20220704 14:18:40.186"/>
</kw>
<kw name="Enter Username" library="LoginPage">
<arg>${DEFAULT_EMAIL}</arg>
<doc>Take a username as argument and
enters it in the user_input</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${USER_INPUT}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 14:18:40.187" endtime="20220704 14:18:40.260"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${USER_INPUT}</arg>
<arg>${username}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220704 14:18:40.260" level="INFO">Typing text 'bootcamp04@mailinator.com' into text field 'css:input#user'.</msg>
<status status="PASS" starttime="20220704 14:18:40.260" endtime="20220704 14:18:40.422"/>
</kw>
<status status="PASS" starttime="20220704 14:18:40.186" endtime="20220704 14:18:40.422"/>
</kw>
<kw name="Wait Until Element Is Not Visible" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<doc>Waits until the element ``locator`` is not visible.</doc>
<status status="PASS" starttime="20220704 14:18:40.422" endtime="20220704 14:18:41.139"/>
</kw>
<kw name="Click Login Button" library="LoginPage">
<doc>Clicks Trello's login button if in Trello's
login page, else it clicks Atlassian's</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220704 14:18:41.149" level="INFO">${url} = https://trello.com/login</msg>
<status status="PASS" starttime="20220704 14:18:41.140" endtime="20220704 14:18:41.149"/>
</kw>
<if>
<branch type="IF" condition="'${url}' == '${LOGIN_URL}'">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220704 14:18:41.149" endtime="20220704 14:18:41.189"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220704 14:18:41.190" level="INFO">Clicking button 'css:input#login'.</msg>
<status status="PASS" starttime="20220704 14:18:41.190" endtime="20220704 14:18:42.170"/>
</kw>
<status status="PASS" starttime="20220704 14:18:41.149" endtime="20220704 14:18:42.170"/>
</branch>
<branch type="ELSE">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="NOT RUN" starttime="20220704 14:18:42.170" endtime="20220704 14:18:42.170"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<status status="NOT RUN" starttime="20220704 14:18:42.170" endtime="20220704 14:18:42.170"/>
</kw>
<status status="NOT RUN" starttime="20220704 14:18:42.170" endtime="20220704 14:18:42.170"/>
</branch>
<status status="PASS" starttime="20220704 14:18:41.149" endtime="20220704 14:18:42.170"/>
</if>
<status status="PASS" starttime="20220704 14:18:41.140" endtime="20220704 14:18:42.171"/>
</kw>
<kw name="Wait Until Location Is Atlassian's Login" library="LoginPage">
<doc>Waits for the page redirection when logging in.</doc>
<kw name="Wait Until Location Contains" library="SeleniumLibrary">
<arg>atlassian.com</arg>
<doc>Waits until the current URL contains ``expected``.</doc>
<status status="PASS" starttime="20220704 14:18:42.171" endtime="20220704 14:18:42.217"/>
</kw>
<status status="PASS" starttime="20220704 14:18:42.171" endtime="20220704 14:18:42.217"/>
</kw>
<kw name="Enter Password" library="LoginPage">
<arg>${DEFAULT_PASSWORD}</arg>
<doc>Take a password as argument and
enters it in the password_input</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<arg>timeout=10</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 14:18:42.218" endtime="20220704 14:18:42.263"/>
</kw>
<kw name="Input Password" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<arg>${password}</arg>
<doc>Types the given password into the text field identified by ``locator``.</doc>
<msg timestamp="20220704 14:18:42.263" level="INFO">Typing password into text field 'css:input#password'.</msg>
<msg timestamp="20220704 14:18:42.328" level="INFO">Temporally setting log level to: NONE</msg>
<msg timestamp="20220704 14:18:42.393" level="INFO">Log level changed from NONE to INFO.</msg>
<status status="PASS" starttime="20220704 14:18:42.263" endtime="20220704 14:18:42.393"/>
</kw>
<status status="PASS" starttime="20220704 14:18:42.218" endtime="20220704 14:18:42.393"/>
</kw>
<kw name="Click Login Button" library="LoginPage">
<doc>Clicks Trello's login button if in Trello's
login page, else it clicks Atlassian's</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220704 14:18:42.402" level="INFO">${url} = https://id.atlassian.com/login?application=trello&amp;continue=https%3A%2F%2Ftrello.com%2Fauth%2Fatlassian%2Fcallback%3FreturnUrl%3D%252F%26display%3D%26aaOnboarding%3D%26updateEmail%3D%26traceId%3D62c2f6...</msg>
<status status="PASS" starttime="20220704 14:18:42.394" endtime="20220704 14:18:42.402"/>
</kw>
<if>
<branch type="IF" condition="'${url}' == '${LOGIN_URL}'">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="NOT RUN" starttime="20220704 14:18:42.402" endtime="20220704 14:18:42.402"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<status status="NOT RUN" starttime="20220704 14:18:42.402" endtime="20220704 14:18:42.402"/>
</kw>
<status status="NOT RUN" starttime="20220704 14:18:42.402" endtime="20220704 14:18:42.402"/>
</branch>
<branch type="ELSE">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220704 14:18:42.402" endtime="20220704 14:18:42.445"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220704 14:18:42.445" level="INFO">Clicking button 'css:button#login-submit'.</msg>
<status status="PASS" starttime="20220704 14:18:42.445" endtime="20220704 14:18:42.549"/>
</kw>
<status status="PASS" starttime="20220704 14:18:42.402" endtime="20220704 14:18:42.549"/>
</branch>
<status status="PASS" starttime="20220704 14:18:42.402" endtime="20220704 14:18:42.549"/>
</if>
<status status="PASS" starttime="20220704 14:18:42.393" endtime="20220704 14:18:42.549"/>
</kw>
<kw name="Verify Current Page Is Boards Page" library="BoardsPage">
<doc>Assert that the browser is showing the boards page.</doc>
<kw name="Wait Until Location Contains" library="SeleniumLibrary">
<arg>${BOARDS_PATH}</arg>
<doc>Waits until the current URL contains ``expected``.</doc>
<status status="PASS" starttime="20220704 14:18:42.550" endtime="20220704 14:18:46.021"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${YOUR_WORKSPACES}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 14:18:46.022" endtime="20220704 14:18:46.068"/>
</kw>
<kw name="Element Text Should Be" library="SeleniumLibrary">
<arg>${YOUR_WORKSPACES}</arg>
<arg>YOUR WORKSPACES</arg>
<doc>Verifies that element ``locator`` contains exact the text ``expected``.</doc>
<msg timestamp="20220704 14:18:46.069" level="INFO">Verifying element 'css:h3.boards-page-section-header-name' contains exact text 'YOUR WORKSPACES'.</msg>
<status status="PASS" starttime="20220704 14:18:46.068" endtime="20220704 14:18:46.100"/>
</kw>
<status status="PASS" starttime="20220704 14:18:42.550" endtime="20220704 14:18:46.100"/>
</kw>
<kw name="Close Browser" library="SeleniumLibrary" type="TEARDOWN">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20220704 14:18:46.100" endtime="20220704 14:18:46.179"/>
</kw>
<doc>Verify that it is possible to login through
Trello's GUI using a valid email and password.</doc>
<tag>gui</tag>
<tag>login</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220704 14:18:38.987" endtime="20220704 14:18:46.179"/>
</test>
<doc>Example Trello Login Test</doc>
<status status="PASS" starttime="20220704 14:18:38.981" endtime="20220704 14:18:46.181"/>
</suite>
<status status="PASS" starttime="20220704 14:16:35.608" endtime="20220704 14:18:46.184"/>
</suite>
<status status="PASS" starttime="20220704 14:16:35.589" endtime="20220704 14:18:46.188"/>
</suite>
<suite id="s1-s3" name="Trello" source="/trello">
<suite id="s1-s3-s1" name="Api" source="/trello/api">
<suite id="s1-s3-s1-s1" name="Trello Api Boards Tests" source="/trello/api/trello_api_boards_tests.robot">
<kw name="Create Trello Session" library="TrelloAPI" type="SETUP">
<doc>Creates a Trello Session</doc>
<kw name="Create Session" library="request_own_library">
<arg>${API_BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<status status="PASS" starttime="20220704 14:36:07.696" endtime="20220704 14:36:07.697"/>
</kw>
<status status="PASS" starttime="20220704 14:36:07.692" endtime="20220704 14:36:07.697"/>
</kw>
<test id="s1-s3-s1-s1-t1" name="CREATE a board" line="9">
<kw name="Create A Board" library="Board">
<var>${response}</var>
<arg>NewBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 14:36:07.699" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 14:36:07.699" endtime="20220704 14:36:07.699"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 14:36:07.699" endtime="20220704 14:36:07.699"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:36:07.700" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220704 14:36:07.699" endtime="20220704 14:36:07.700"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 14:36:07.925" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:36:07.700" endtime="20220704 14:36:07.926"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:36:07.926" endtime="20220704 14:36:07.926"/>
</return>
<msg timestamp="20220704 14:36:07.926" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:36:07.698" endtime="20220704 14:36:07.926"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:36:07.926" endtime="20220704 14:36:07.926"/>
</return>
<msg timestamp="20220704 14:36:07.926" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:36:07.698" endtime="20220704 14:36:07.926"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>board</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220704 14:36:07.927" endtime="20220704 14:36:07.931"/>
</kw>
<status status="PASS" starttime="20220704 14:36:07.926" endtime="20220704 14:36:07.932"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${response.json()}[id]</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${response.json()}[id]</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:36:07.934" level="INFO">${url} = boards/62c2fad74abb7986b2858ae5</msg>
<status status="PASS" starttime="20220704 14:36:07.933" endtime="20220704 14:36:07.934"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 14:36:08.273" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:36:07.934" endtime="20220704 14:36:08.273"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:36:08.274" endtime="20220704 14:36:08.274"/>
</return>
<msg timestamp="20220704 14:36:08.274" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:36:07.933" endtime="20220704 14:36:08.274"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:36:08.274" endtime="20220704 14:36:08.274"/>
</return>
<status status="PASS" starttime="20220704 14:36:07.932" endtime="20220704 14:36:08.274"/>
</kw>
<status status="PASS" starttime="20220704 14:36:07.932" endtime="20220704 14:36:08.274"/>
</kw>
<doc>Verify that a board can be create through API</doc>
<tag>api</tag>
<tag>board.create</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220704 14:36:07.697" endtime="20220704 14:36:08.274"/>
</test>
<test id="s1-s3-s1-s1-t2" name="UPDATE a Board's name" line="16">
<kw name="Create A Board" library="Board">
<var>${response}</var>
<arg>NewBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 14:36:08.277" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 14:36:08.277" endtime="20220704 14:36:08.277"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 14:36:08.278" endtime="20220704 14:36:08.278"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:36:08.278" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220704 14:36:08.278" endtime="20220704 14:36:08.278"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 14:36:08.487" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:36:08.279" endtime="20220704 14:36:08.487"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:36:08.487" endtime="20220704 14:36:08.487"/>
</return>
<msg timestamp="20220704 14:36:08.488" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:36:08.277" endtime="20220704 14:36:08.488"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:36:08.488" endtime="20220704 14:36:08.488"/>
</return>
<msg timestamp="20220704 14:36:08.488" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:36:08.276" endtime="20220704 14:36:08.488"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>board</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220704 14:36:08.488" endtime="20220704 14:36:08.492"/>
</kw>
<status status="PASS" starttime="20220704 14:36:08.488" endtime="20220704 14:36:08.492"/>
</kw>
<kw name="Update A Board" library="Board">
<arg>${response.json()}[id]</arg>
<arg>name</arg>
<arg>NewName</arg>
<doc>Updates the board with the given ID
optional_args: name, desc, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 14:36:08.494" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 14:36:08.494" endtime="20220704 14:36:08.494"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 14:36:08.494" endtime="20220704 14:36:08.494"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:36:08.495" level="INFO">${url} = boards/62c2fad80d0d698cc4715dc5</msg>
<status status="PASS" starttime="20220704 14:36:08.494" endtime="20220704 14:36:08.495"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 14:36:08.583" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:36:08.495" endtime="20220704 14:36:08.583"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:36:08.583" endtime="20220704 14:36:08.583"/>
</return>
<msg timestamp="20220704 14:36:08.583" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:36:08.493" endtime="20220704 14:36:08.583"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:36:08.583" endtime="20220704 14:36:08.583"/>
</return>
<status status="PASS" starttime="20220704 14:36:08.493" endtime="20220704 14:36:08.583"/>
</kw>
<kw name="Get A Board" library="Board">
<var>${new_response}</var>
<arg>${response.json()}[id]</arg>
<doc>Gets the Board with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:36:08.585" level="INFO">${url} = boards/62c2fad80d0d698cc4715dc5</msg>
<status status="PASS" starttime="20220704 14:36:08.585" endtime="20220704 14:36:08.585"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 14:36:08.629" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:36:08.585" endtime="20220704 14:36:08.629"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:36:08.629" endtime="20220704 14:36:08.629"/>
</return>
<msg timestamp="20220704 14:36:08.629" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:36:08.584" endtime="20220704 14:36:08.629"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:36:08.629" endtime="20220704 14:36:08.629"/>
</return>
<msg timestamp="20220704 14:36:08.629" level="INFO">${new_response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:36:08.583" endtime="20220704 14:36:08.629"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${new_response}</arg>
<arg>board</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220704 14:36:08.630" endtime="20220704 14:36:08.634"/>
</kw>
<status status="PASS" starttime="20220704 14:36:08.630" endtime="20220704 14:36:08.634"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${new_response.json()}[name]</arg>
<arg>NewName</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220704 14:36:08.634" endtime="20220704 14:36:08.635"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${response.json()}[id]</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${response.json()}[id]</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:36:08.637" level="INFO">${url} = boards/62c2fad80d0d698cc4715dc5</msg>
<status status="PASS" starttime="20220704 14:36:08.637" endtime="20220704 14:36:08.638"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 14:36:08.962" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:36:08.638" endtime="20220704 14:36:08.962"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:36:08.962" endtime="20220704 14:36:08.962"/>
</return>
<msg timestamp="20220704 14:36:08.962" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:36:08.636" endtime="20220704 14:36:08.962"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:36:08.962" endtime="20220704 14:36:08.962"/>
</return>
<status status="PASS" starttime="20220704 14:36:08.636" endtime="20220704 14:36:08.962"/>
</kw>
<status status="PASS" starttime="20220704 14:36:08.635" endtime="20220704 14:36:08.962"/>
</kw>
<doc>Verify that a board's name can be updated through API</doc>
<tag>api</tag>
<tag>board.update</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220704 14:36:08.275" endtime="20220704 14:36:08.962"/>
</test>
<test id="s1-s3-s1-s1-t3" name="DELETE A Board" line="27">
<kw name="Create A Board" library="Board">
<var>${response}</var>
<arg>NewBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 14:36:08.966" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 14:36:08.965" endtime="20220704 14:36:08.966"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 14:36:08.966" endtime="20220704 14:36:08.966"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:36:08.967" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220704 14:36:08.966" endtime="20220704 14:36:08.967"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 14:36:09.135" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:36:08.967" endtime="20220704 14:36:09.135"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:36:09.135" endtime="20220704 14:36:09.135"/>
</return>
<msg timestamp="20220704 14:36:09.135" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:36:08.965" endtime="20220704 14:36:09.135"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:36:09.135" endtime="20220704 14:36:09.135"/>
</return>
<msg timestamp="20220704 14:36:09.136" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:36:08.964" endtime="20220704 14:36:09.136"/>
</kw>
<kw name="Delete A Board" library="Board">
<arg>${response.json()}[id]</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:36:09.138" level="INFO">${url} = boards/62c2fad9da328d62051cebd0</msg>
<status status="PASS" starttime="20220704 14:36:09.137" endtime="20220704 14:36:09.138"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 14:36:09.454" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:36:09.138" endtime="20220704 14:36:09.454"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:36:09.454" endtime="20220704 14:36:09.455"/>
</return>
<msg timestamp="20220704 14:36:09.455" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:36:09.137" endtime="20220704 14:36:09.455"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:36:09.455" endtime="20220704 14:36:09.455"/>
</return>
<status status="PASS" starttime="20220704 14:36:09.136" endtime="20220704 14:36:09.455"/>
</kw>
<kw name="Get A Board" library="Board">
<arg>${response.json()}[id]</arg>
<arg>status_code=404</arg>
<doc>Gets the Board with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:36:09.457" level="INFO">${url} = boards/62c2fad9da328d62051cebd0</msg>
<status status="PASS" starttime="20220704 14:36:09.457" endtime="20220704 14:36:09.457"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 14:36:09.492" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220704 14:36:09.457" endtime="20220704 14:36:09.493"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:36:09.493" endtime="20220704 14:36:09.493"/>
</return>
<msg timestamp="20220704 14:36:09.493" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220704 14:36:09.456" endtime="20220704 14:36:09.493"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:36:09.493" endtime="20220704 14:36:09.493"/>
</return>
<status status="PASS" starttime="20220704 14:36:09.455" endtime="20220704 14:36:09.493"/>
</kw>
<doc>Verify that a board can be deleted through API</doc>
<tag>api</tag>
<tag>board.delete</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220704 14:36:08.963" endtime="20220704 14:36:09.493"/>
</test>
<test id="s1-s3-s1-s1-t4" name="GET Information of A Board" line="34">
<kw name="Create A Board" library="Board">
<var>${response}</var>
<arg>BoardTest</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 14:36:09.495" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 14:36:09.495" endtime="20220704 14:36:09.495"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 14:36:09.495" endtime="20220704 14:36:09.496"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:36:09.496" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220704 14:36:09.496" endtime="20220704 14:36:09.496"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 14:36:09.660" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:36:09.497" endtime="20220704 14:36:09.660"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:36:09.660" endtime="20220704 14:36:09.660"/>
</return>
<msg timestamp="20220704 14:36:09.661" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:36:09.495" endtime="20220704 14:36:09.661"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:36:09.661" endtime="20220704 14:36:09.661"/>
</return>
<msg timestamp="20220704 14:36:09.661" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:36:09.494" endtime="20220704 14:36:09.661"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>board</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220704 14:36:09.662" endtime="20220704 14:36:09.666"/>
</kw>
<status status="PASS" starttime="20220704 14:36:09.661" endtime="20220704 14:36:09.666"/>
</kw>
<kw name="Get A Board" library="Board">
<var>${response2}</var>
<arg>${response.json()}[id]</arg>
<doc>Gets the Board with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:36:09.668" level="INFO">${url} = boards/62c2fad95e58b7052bb2f146</msg>
<status status="PASS" starttime="20220704 14:36:09.668" endtime="20220704 14:36:09.668"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 14:36:09.717" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:36:09.668" endtime="20220704 14:36:09.717"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:36:09.717" endtime="20220704 14:36:09.717"/>
</return>
<msg timestamp="20220704 14:36:09.717" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:36:09.667" endtime="20220704 14:36:09.717"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:36:09.717" endtime="20220704 14:36:09.717"/>
</return>
<msg timestamp="20220704 14:36:09.717" level="INFO">${response2} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:36:09.666" endtime="20220704 14:36:09.717"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response2}</arg>
<arg>board</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220704 14:36:09.718" endtime="20220704 14:36:09.722"/>
</kw>
<status status="PASS" starttime="20220704 14:36:09.717" endtime="20220704 14:36:09.722"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${response2.json()}[name]</arg>
<arg>BoardTest</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220704 14:36:09.722" endtime="20220704 14:36:09.723"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${response.json()}[id]</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${response.json()}[id]</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:36:09.725" level="INFO">${url} = boards/62c2fad95e58b7052bb2f146</msg>
<status status="PASS" starttime="20220704 14:36:09.724" endtime="20220704 14:36:09.725"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 14:36:10.081" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:36:09.725" endtime="20220704 14:36:10.081"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:36:10.081" endtime="20220704 14:36:10.081"/>
</return>
<msg timestamp="20220704 14:36:10.081" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:36:09.724" endtime="20220704 14:36:10.081"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:36:10.081" endtime="20220704 14:36:10.081"/>
</return>
<status status="PASS" starttime="20220704 14:36:09.723" endtime="20220704 14:36:10.081"/>
</kw>
<status status="PASS" starttime="20220704 14:36:09.723" endtime="20220704 14:36:10.081"/>
</kw>
<doc>Verify that a board's information can be accesed through API</doc>
<tag>api</tag>
<tag>board.get</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220704 14:36:09.494" endtime="20220704 14:36:10.082"/>
</test>
<test id="s1-s3-s1-s1-t5" name="UPDATE a Board's description" line="45">
<kw name="Create A Board" library="Board">
<var>${response}</var>
<arg>NewBoardForTest</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 14:36:10.085" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 14:36:10.085" endtime="20220704 14:36:10.085"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 14:36:10.085" endtime="20220704 14:36:10.085"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:36:10.086" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220704 14:36:10.085" endtime="20220704 14:36:10.086"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 14:36:10.241" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:36:10.086" endtime="20220704 14:36:10.241"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:36:10.241" endtime="20220704 14:36:10.241"/>
</return>
<msg timestamp="20220704 14:36:10.241" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:36:10.084" endtime="20220704 14:36:10.241"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:36:10.241" endtime="20220704 14:36:10.241"/>
</return>
<msg timestamp="20220704 14:36:10.241" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:36:10.084" endtime="20220704 14:36:10.241"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>board</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220704 14:36:10.242" endtime="20220704 14:36:10.247"/>
</kw>
<status status="PASS" starttime="20220704 14:36:10.242" endtime="20220704 14:36:10.247"/>
</kw>
<kw name="Update A Board" library="Board">
<arg>${response.json()}[id]</arg>
<arg>desc</arg>
<arg>sampleDescription</arg>
<doc>Updates the board with the given ID
optional_args: name, desc, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 14:36:10.249" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 14:36:10.248" endtime="20220704 14:36:10.249"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 14:36:10.249" endtime="20220704 14:36:10.249"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:36:10.249" level="INFO">${url} = boards/62c2fada00b3b22fd797faba</msg>
<status status="PASS" starttime="20220704 14:36:10.249" endtime="20220704 14:36:10.249"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 14:36:10.358" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:36:10.249" endtime="20220704 14:36:10.358"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:36:10.358" endtime="20220704 14:36:10.358"/>
</return>
<msg timestamp="20220704 14:36:10.358" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:36:10.248" endtime="20220704 14:36:10.358"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:36:10.358" endtime="20220704 14:36:10.358"/>
</return>
<status status="PASS" starttime="20220704 14:36:10.247" endtime="20220704 14:36:10.358"/>
</kw>
<kw name="Get A Board" library="Board">
<var>${new_response}</var>
<arg>${response.json()}[id]</arg>
<doc>Gets the Board with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:36:10.360" level="INFO">${url} = boards/62c2fada00b3b22fd797faba</msg>
<status status="PASS" starttime="20220704 14:36:10.360" endtime="20220704 14:36:10.360"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 14:36:10.422" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:36:10.360" endtime="20220704 14:36:10.422"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:36:10.422" endtime="20220704 14:36:10.422"/>
</return>
<msg timestamp="20220704 14:36:10.423" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:36:10.360" endtime="20220704 14:36:10.423"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:36:10.423" endtime="20220704 14:36:10.423"/>
</return>
<msg timestamp="20220704 14:36:10.423" level="INFO">${new_response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:36:10.358" endtime="20220704 14:36:10.423"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${new_response.json()}[desc]</arg>
<arg>sampleDescription</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220704 14:36:10.423" endtime="20220704 14:36:10.424"/>
</kw>
<kw name="Update A Board" library="Board">
<arg>${response.json()}[id]</arg>
<arg>desc</arg>
<arg>updatedDescription</arg>
<doc>Updates the board with the given ID
optional_args: name, desc, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 14:36:10.426" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 14:36:10.426" endtime="20220704 14:36:10.426"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 14:36:10.426" endtime="20220704 14:36:10.426"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:36:10.427" level="INFO">${url} = boards/62c2fada00b3b22fd797faba</msg>
<status status="PASS" starttime="20220704 14:36:10.427" endtime="20220704 14:36:10.427"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 14:36:10.524" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:36:10.427" endtime="20220704 14:36:10.524"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:36:10.524" endtime="20220704 14:36:10.524"/>
</return>
<msg timestamp="20220704 14:36:10.525" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:36:10.425" endtime="20220704 14:36:10.525"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:36:10.525" endtime="20220704 14:36:10.525"/>
</return>
<status status="PASS" starttime="20220704 14:36:10.424" endtime="20220704 14:36:10.525"/>
</kw>
<kw name="Get A Board" library="Board">
<var>${new_response2}</var>
<arg>${response.json()}[id]</arg>
<doc>Gets the Board with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:36:10.527" level="INFO">${url} = boards/62c2fada00b3b22fd797faba</msg>
<status status="PASS" starttime="20220704 14:36:10.527" endtime="20220704 14:36:10.527"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 14:36:10.572" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:36:10.527" endtime="20220704 14:36:10.572"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:36:10.572" endtime="20220704 14:36:10.572"/>
</return>
<msg timestamp="20220704 14:36:10.572" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:36:10.526" endtime="20220704 14:36:10.572"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:36:10.572" endtime="20220704 14:36:10.572"/>
</return>
<msg timestamp="20220704 14:36:10.572" level="INFO">${new_response2} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:36:10.525" endtime="20220704 14:36:10.572"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${new_response2.json()}[desc]</arg>
<arg>updatedDescription</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220704 14:36:10.573" endtime="20220704 14:36:10.573"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${response.json()}[id]</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${response.json()}[id]</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:36:10.576" level="INFO">${url} = boards/62c2fada00b3b22fd797faba</msg>
<status status="PASS" starttime="20220704 14:36:10.575" endtime="20220704 14:36:10.576"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 14:36:10.984" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:36:10.576" endtime="20220704 14:36:10.984"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:36:10.984" endtime="20220704 14:36:10.984"/>
</return>
<msg timestamp="20220704 14:36:10.985" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:36:10.575" endtime="20220704 14:36:10.985"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:36:10.985" endtime="20220704 14:36:10.985"/>
</return>
<status status="PASS" starttime="20220704 14:36:10.574" endtime="20220704 14:36:10.985"/>
</kw>
<status status="PASS" starttime="20220704 14:36:10.574" endtime="20220704 14:36:10.985"/>
</kw>
<doc>Verify that a board's description can be updated through API</doc>
<tag>api</tag>
<tag>board.update</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220704 14:36:10.082" endtime="20220704 14:36:10.985"/>
</test>
<kw name="Delete All Sessions" library="request_own_library" type="TEARDOWN">
<status status="PASS" starttime="20220704 14:36:10.986" endtime="20220704 14:36:10.987"/>
</kw>
<doc>Example Test with Trello API Boards</doc>
<status status="PASS" starttime="20220704 14:36:07.584" endtime="20220704 14:36:10.988"/>
</suite>
<suite id="s1-s3-s1-s2" name="Trello Api Cards Tests" source="/trello/api/trello_api_cards_tests.robot">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Create Trello Session</arg>
<arg>Setup Board And List</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Create Trello Session" library="TrelloAPI">
<doc>Creates a Trello Session</doc>
<kw name="Create Session" library="request_own_library">
<arg>${API_BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<status status="PASS" starttime="20220704 14:36:11.000" endtime="20220704 14:36:11.000"/>
</kw>
<status status="PASS" starttime="20220704 14:36:10.999" endtime="20220704 14:36:11.000"/>
</kw>
<kw name="Setup Board And List">
<doc>Create a board and save its ID and its first list's ID</doc>
<kw name="Create A Board" library="Board">
<var>${BOARD}</var>
<arg>TestBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 14:36:11.001" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 14:36:11.001" endtime="20220704 14:36:11.001"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 14:36:11.001" endtime="20220704 14:36:11.001"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:36:11.002" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220704 14:36:11.001" endtime="20220704 14:36:11.002"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 14:36:11.188" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:36:11.002" endtime="20220704 14:36:11.188"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:36:11.188" endtime="20220704 14:36:11.188"/>
</return>
<msg timestamp="20220704 14:36:11.188" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:36:11.000" endtime="20220704 14:36:11.188"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:36:11.189" endtime="20220704 14:36:11.189"/>
</return>
<msg timestamp="20220704 14:36:11.189" level="INFO">${BOARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:36:11.000" endtime="20220704 14:36:11.189"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_BOARD_ID}</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220704 14:36:11.190" level="INFO">${TEST_SUITE_BOARD_ID} = 62c2fadb73928849fcea6d16</msg>
<status status="PASS" starttime="20220704 14:36:11.189" endtime="20220704 14:36:11.190"/>
</kw>
<kw name="Get Lists On A Board" library="Board">
<var>${LISTS}</var>
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Get all the lists in a board</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>lists_on_board</arg>
<arg>${id}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:36:11.191" level="INFO">${url} = boards/62c2fadb73928849fcea6d16/lists/</msg>
<status status="PASS" starttime="20220704 14:36:11.191" endtime="20220704 14:36:11.191"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 14:36:11.241" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:36:11.191" endtime="20220704 14:36:11.241"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:36:11.241" endtime="20220704 14:36:11.241"/>
</return>
<msg timestamp="20220704 14:36:11.241" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:36:11.190" endtime="20220704 14:36:11.241"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:36:11.241" endtime="20220704 14:36:11.241"/>
</return>
<msg timestamp="20220704 14:36:11.242" level="INFO">${LISTS} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:36:11.190" endtime="20220704 14:36:11.242"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_LIST_ID}</arg>
<arg>${LISTS.json()}[0][id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220704 14:36:11.243" level="INFO">${TEST_SUITE_LIST_ID} = 62c2fadb73928849fcea6d1d</msg>
<status status="PASS" starttime="20220704 14:36:11.242" endtime="20220704 14:36:11.243"/>
</kw>
<status status="PASS" starttime="20220704 14:36:11.000" endtime="20220704 14:36:11.243"/>
</kw>
<status status="PASS" starttime="20220704 14:36:10.999" endtime="20220704 14:36:11.243"/>
</kw>
<test id="s1-s3-s1-s2-t1" name="Verify A Card Can Be Created" line="13">
<kw name="Create A Card" library="Card">
<var>${response}</var>
<arg>name</arg>
<arg>RFCard2</arg>
<doc>Creates a new card in the given list.
required_args: listId
optional_args: name, desc, pos, idCardSource, idLabels, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>@{optional_args}</arg>
<arg>idList</arg>
<arg>${idList}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 14:36:11.245" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 14:36:11.245" endtime="20220704 14:36:11.245"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 14:36:11.245" endtime="20220704 14:36:11.245"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:36:11.246" level="INFO">${url} = cards/</msg>
<status status="PASS" starttime="20220704 14:36:11.246" endtime="20220704 14:36:11.246"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 14:36:11.414" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:36:11.247" endtime="20220704 14:36:11.414"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:36:11.414" endtime="20220704 14:36:11.414"/>
</return>
<msg timestamp="20220704 14:36:11.414" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:36:11.244" endtime="20220704 14:36:11.414"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:36:11.414" endtime="20220704 14:36:11.414"/>
</return>
<msg timestamp="20220704 14:36:11.415" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:36:11.244" endtime="20220704 14:36:11.415"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>card</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220704 14:36:11.415" endtime="20220704 14:36:11.421"/>
</kw>
<status status="PASS" starttime="20220704 14:36:11.415" endtime="20220704 14:36:11.421"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 14:36:11.421" endtime="20220704 14:36:11.421"/>
</return>
<msg timestamp="20220704 14:36:11.422" level="INFO">${CARD_ID} = 62c2fadb91710d1372588a0c</msg>
<status status="PASS" starttime="20220704 14:36:11.421" endtime="20220704 14:36:11.422"/>
</kw>
<kw name="Get A Card" library="Card">
<var>${response}</var>
<arg>${CARD_ID}</arg>
<doc>Gets the card with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:36:11.423" level="INFO">${url} = cards/62c2fadb91710d1372588a0c</msg>
<status status="PASS" starttime="20220704 14:36:11.423" endtime="20220704 14:36:11.423"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 14:36:11.501" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:36:11.423" endtime="20220704 14:36:11.501"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:36:11.501" endtime="20220704 14:36:11.501"/>
</return>
<msg timestamp="20220704 14:36:11.501" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:36:11.423" endtime="20220704 14:36:11.501"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:36:11.501" endtime="20220704 14:36:11.501"/>
</return>
<msg timestamp="20220704 14:36:11.501" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:36:11.422" endtime="20220704 14:36:11.501"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_NAME}</var>
<arg>${response}</arg>
<arg>name</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 14:36:11.502" endtime="20220704 14:36:11.502"/>
</return>
<msg timestamp="20220704 14:36:11.503" level="INFO">${CARD_NAME} = RFCard2</msg>
<status status="PASS" starttime="20220704 14:36:11.502" endtime="20220704 14:36:11.503"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${CARD_NAME}</arg>
<arg>RFCard2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220704 14:36:11.503" endtime="20220704 14:36:11.503"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Card</arg>
<arg>${CARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Card" library="Card">
<arg>${CARD_ID}</arg>
<doc>Deletes the card with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:36:11.505" level="INFO">${url} = cards/62c2fadb91710d1372588a0c</msg>
<status status="PASS" starttime="20220704 14:36:11.504" endtime="20220704 14:36:11.505"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 14:36:11.648" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:36:11.505" endtime="20220704 14:36:11.648"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:36:11.648" endtime="20220704 14:36:11.648"/>
</return>
<msg timestamp="20220704 14:36:11.648" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:36:11.504" endtime="20220704 14:36:11.648"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:36:11.648" endtime="20220704 14:36:11.648"/>
</return>
<status status="PASS" starttime="20220704 14:36:11.504" endtime="20220704 14:36:11.649"/>
</kw>
<status status="PASS" starttime="20220704 14:36:11.503" endtime="20220704 14:36:11.649"/>
</kw>
<doc>Verify that a card can be created through API</doc>
<tag>api</tag>
<tag>card.create</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220704 14:36:11.243" endtime="20220704 14:36:11.649"/>
</test>
<test id="s1-s3-s1-s2-t2" name="Verify A Card Can Be Closed" line="24">
<kw name="Create A Card" library="Card">
<var>${response}</var>
<doc>Creates a new card in the given list.
required_args: listId
optional_args: name, desc, pos, idCardSource, idLabels, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>@{optional_args}</arg>
<arg>idList</arg>
<arg>${idList}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 14:36:11.652" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 14:36:11.651" endtime="20220704 14:36:11.652"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 14:36:11.652" endtime="20220704 14:36:11.652"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:36:11.653" level="INFO">${url} = cards/</msg>
<status status="PASS" starttime="20220704 14:36:11.652" endtime="20220704 14:36:11.653"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 14:36:11.801" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:36:11.653" endtime="20220704 14:36:11.801"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:36:11.801" endtime="20220704 14:36:11.801"/>
</return>
<msg timestamp="20220704 14:36:11.801" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:36:11.651" endtime="20220704 14:36:11.801"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:36:11.801" endtime="20220704 14:36:11.801"/>
</return>
<msg timestamp="20220704 14:36:11.802" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:36:11.650" endtime="20220704 14:36:11.802"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 14:36:11.802" endtime="20220704 14:36:11.802"/>
</return>
<msg timestamp="20220704 14:36:11.803" level="INFO">${CARD_ID} = 62c2fadb76aa3449d0354a50</msg>
<status status="PASS" starttime="20220704 14:36:11.802" endtime="20220704 14:36:11.803"/>
</kw>
<kw name="Archive A Card" library="Card">
<arg>${CARD_ID}</arg>
<doc>Modifies the card status to closed.</doc>
<kw name="Update A Card" library="Card">
<var>${response}</var>
<arg>${id}</arg>
<arg>closed</arg>
<arg>true</arg>
<arg>status_code=${status_code}</arg>
<doc>Updates the card with the given ID
optional_args: name, desc, closed, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<arg>status_code=${status_code}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 14:36:11.805" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 14:36:11.805" endtime="20220704 14:36:11.805"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 14:36:11.806" endtime="20220704 14:36:11.806"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:36:11.806" level="INFO">${url} = cards/62c2fadb76aa3449d0354a50</msg>
<status status="PASS" starttime="20220704 14:36:11.806" endtime="20220704 14:36:11.806"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 14:36:11.934" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:36:11.806" endtime="20220704 14:36:11.934"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:36:11.934" endtime="20220704 14:36:11.934"/>
</return>
<msg timestamp="20220704 14:36:11.935" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:36:11.805" endtime="20220704 14:36:11.935"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:36:11.935" endtime="20220704 14:36:11.935"/>
</return>
<msg timestamp="20220704 14:36:11.935" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:36:11.804" endtime="20220704 14:36:11.935"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:36:11.935" endtime="20220704 14:36:11.935"/>
</return>
<status status="PASS" starttime="20220704 14:36:11.803" endtime="20220704 14:36:11.935"/>
</kw>
<kw name="Get A Card" library="Card">
<var>${response}</var>
<arg>${CARD_ID}</arg>
<doc>Gets the card with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:36:11.937" level="INFO">${url} = cards/62c2fadb76aa3449d0354a50</msg>
<status status="PASS" starttime="20220704 14:36:11.936" endtime="20220704 14:36:11.937"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 14:36:11.986" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:36:11.937" endtime="20220704 14:36:11.986"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:36:11.986" endtime="20220704 14:36:11.986"/>
</return>
<msg timestamp="20220704 14:36:11.987" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:36:11.936" endtime="20220704 14:36:11.987"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:36:11.987" endtime="20220704 14:36:11.987"/>
</return>
<msg timestamp="20220704 14:36:11.987" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:36:11.935" endtime="20220704 14:36:11.987"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_CLOSED}</var>
<arg>${response}</arg>
<arg>closed</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 14:36:11.988" endtime="20220704 14:36:11.988"/>
</return>
<msg timestamp="20220704 14:36:11.989" level="INFO">${CARD_CLOSED} = True</msg>
<status status="PASS" starttime="20220704 14:36:11.987" endtime="20220704 14:36:11.989"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${CARD_CLOSED}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220704 14:36:11.989" endtime="20220704 14:36:11.989"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Card</arg>
<arg>${CARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Card" library="Card">
<arg>${CARD_ID}</arg>
<doc>Deletes the card with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:36:11.991" level="INFO">${url} = cards/62c2fadb76aa3449d0354a50</msg>
<status status="PASS" starttime="20220704 14:36:11.990" endtime="20220704 14:36:11.991"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 14:36:12.119" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:36:11.991" endtime="20220704 14:36:12.119"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:36:12.119" endtime="20220704 14:36:12.119"/>
</return>
<msg timestamp="20220704 14:36:12.119" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:36:11.990" endtime="20220704 14:36:12.119"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:36:12.119" endtime="20220704 14:36:12.119"/>
</return>
<status status="PASS" starttime="20220704 14:36:11.989" endtime="20220704 14:36:12.120"/>
</kw>
<status status="PASS" starttime="20220704 14:36:11.989" endtime="20220704 14:36:12.120"/>
</kw>
<doc>Verify that a card can be closed through API</doc>
<tag>api</tag>
<tag>card.close</tag>
<tag>regression</tag>
<status status="PASS" starttime="20220704 14:36:11.649" endtime="20220704 14:36:12.120"/>
</test>
<test id="s1-s3-s1-s2-t3" name="Verify A Card Can Be Deleted" line="35">
<kw name="Create A Card" library="Card">
<var>${response}</var>
<doc>Creates a new card in the given list.
required_args: listId
optional_args: name, desc, pos, idCardSource, idLabels, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>@{optional_args}</arg>
<arg>idList</arg>
<arg>${idList}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 14:36:12.123" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 14:36:12.123" endtime="20220704 14:36:12.123"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 14:36:12.123" endtime="20220704 14:36:12.123"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:36:12.124" level="INFO">${url} = cards/</msg>
<status status="PASS" starttime="20220704 14:36:12.123" endtime="20220704 14:36:12.124"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 14:36:12.296" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:36:12.124" endtime="20220704 14:36:12.296"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:36:12.296" endtime="20220704 14:36:12.296"/>
</return>
<msg timestamp="20220704 14:36:12.296" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:36:12.122" endtime="20220704 14:36:12.296"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:36:12.296" endtime="20220704 14:36:12.296"/>
</return>
<msg timestamp="20220704 14:36:12.296" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:36:12.121" endtime="20220704 14:36:12.296"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 14:36:12.297" endtime="20220704 14:36:12.297"/>
</return>
<msg timestamp="20220704 14:36:12.298" level="INFO">${CARD_ID} = 62c2fadc1b15ad5c6831ffd6</msg>
<status status="PASS" starttime="20220704 14:36:12.297" endtime="20220704 14:36:12.298"/>
</kw>
<kw name="Delete A Card" library="Card">
<var>${response}</var>
<arg>${CARD_ID}</arg>
<doc>Deletes the card with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:36:12.299" level="INFO">${url} = cards/62c2fadc1b15ad5c6831ffd6</msg>
<status status="PASS" starttime="20220704 14:36:12.299" endtime="20220704 14:36:12.299"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 14:36:12.472" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:36:12.299" endtime="20220704 14:36:12.472"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:36:12.472" endtime="20220704 14:36:12.472"/>
</return>
<msg timestamp="20220704 14:36:12.472" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:36:12.298" endtime="20220704 14:36:12.472"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:36:12.472" endtime="20220704 14:36:12.472"/>
</return>
<msg timestamp="20220704 14:36:12.472" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:36:12.298" endtime="20220704 14:36:12.472"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>delete</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220704 14:36:12.473" endtime="20220704 14:36:12.475"/>
</kw>
<status status="PASS" starttime="20220704 14:36:12.473" endtime="20220704 14:36:12.475"/>
</kw>
<kw name="Get A Card" library="Card">
<arg>${CARD_ID}</arg>
<arg>status_code=404</arg>
<doc>Gets the card with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:36:12.476" level="INFO">${url} = cards/62c2fadc1b15ad5c6831ffd6</msg>
<status status="PASS" starttime="20220704 14:36:12.476" endtime="20220704 14:36:12.476"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 14:36:12.513" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220704 14:36:12.476" endtime="20220704 14:36:12.513"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:36:12.513" endtime="20220704 14:36:12.513"/>
</return>
<msg timestamp="20220704 14:36:12.513" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220704 14:36:12.476" endtime="20220704 14:36:12.513"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:36:12.513" endtime="20220704 14:36:12.513"/>
</return>
<status status="PASS" starttime="20220704 14:36:12.475" endtime="20220704 14:36:12.513"/>
</kw>
<doc>Verify that a card can be deleted through API</doc>
<tag>api</tag>
<tag>card.delete</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220704 14:36:12.120" endtime="20220704 14:36:12.514"/>
</test>
<test id="s1-s3-s1-s2-t4" name="Verify A Card Can Be Updated" line="44">
<kw name="Create A Card" library="Card">
<var>${response}</var>
<arg>name</arg>
<arg>RFCard4</arg>
<doc>Creates a new card in the given list.
required_args: listId
optional_args: name, desc, pos, idCardSource, idLabels, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>@{optional_args}</arg>
<arg>idList</arg>
<arg>${idList}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 14:36:12.517" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 14:36:12.516" endtime="20220704 14:36:12.517"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 14:36:12.517" endtime="20220704 14:36:12.517"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:36:12.518" level="INFO">${url} = cards/</msg>
<status status="PASS" starttime="20220704 14:36:12.517" endtime="20220704 14:36:12.518"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 14:36:12.676" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:36:12.518" endtime="20220704 14:36:12.677"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:36:12.677" endtime="20220704 14:36:12.677"/>
</return>
<msg timestamp="20220704 14:36:12.677" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:36:12.516" endtime="20220704 14:36:12.677"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:36:12.677" endtime="20220704 14:36:12.677"/>
</return>
<msg timestamp="20220704 14:36:12.677" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:36:12.515" endtime="20220704 14:36:12.677"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 14:36:12.678" endtime="20220704 14:36:12.678"/>
</return>
<msg timestamp="20220704 14:36:12.679" level="INFO">${CARD_ID} = 62c2fadc1da1656d7987e3e6</msg>
<status status="PASS" starttime="20220704 14:36:12.677" endtime="20220704 14:36:12.679"/>
</kw>
<kw name="Update A Card" library="Card">
<var>${response}</var>
<arg>${CARD_ID}</arg>
<arg>name</arg>
<arg>RFCard5</arg>
<arg>desc</arg>
<arg>Description</arg>
<doc>Updates the card with the given ID
optional_args: name, desc, closed, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<arg>status_code=${status_code}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 14:36:12.680" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 14:36:12.680" endtime="20220704 14:36:12.680"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 14:36:12.680" endtime="20220704 14:36:12.681"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:36:12.681" level="INFO">${url} = cards/62c2fadc1da1656d7987e3e6</msg>
<status status="PASS" starttime="20220704 14:36:12.681" endtime="20220704 14:36:12.681"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 14:36:12.818" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:36:12.681" endtime="20220704 14:36:12.818"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:36:12.818" endtime="20220704 14:36:12.818"/>
</return>
<msg timestamp="20220704 14:36:12.818" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:36:12.679" endtime="20220704 14:36:12.818"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:36:12.818" endtime="20220704 14:36:12.818"/>
</return>
<msg timestamp="20220704 14:36:12.819" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:36:12.679" endtime="20220704 14:36:12.819"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>card</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220704 14:36:12.819" endtime="20220704 14:36:12.824"/>
</kw>
<status status="PASS" starttime="20220704 14:36:12.819" endtime="20220704 14:36:12.824"/>
</kw>
<kw name="Get A Card" library="Card">
<var>${response}</var>
<arg>${CARD_ID}</arg>
<doc>Gets the card with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:36:12.826" level="INFO">${url} = cards/62c2fadc1da1656d7987e3e6</msg>
<status status="PASS" starttime="20220704 14:36:12.825" endtime="20220704 14:36:12.826"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 14:36:12.883" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:36:12.826" endtime="20220704 14:36:12.883"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:36:12.883" endtime="20220704 14:36:12.883"/>
</return>
<msg timestamp="20220704 14:36:12.883" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:36:12.825" endtime="20220704 14:36:12.884"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:36:12.884" endtime="20220704 14:36:12.884"/>
</return>
<msg timestamp="20220704 14:36:12.884" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:36:12.825" endtime="20220704 14:36:12.884"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_NAME}</var>
<arg>${response}</arg>
<arg>name</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 14:36:12.884" endtime="20220704 14:36:12.884"/>
</return>
<msg timestamp="20220704 14:36:12.885" level="INFO">${CARD_NAME} = RFCard5</msg>
<status status="PASS" starttime="20220704 14:36:12.884" endtime="20220704 14:36:12.885"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_DESC}</var>
<arg>${response}</arg>
<arg>desc</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 14:36:12.886" endtime="20220704 14:36:12.886"/>
</return>
<msg timestamp="20220704 14:36:12.887" level="INFO">${CARD_DESC} = Description</msg>
<status status="PASS" starttime="20220704 14:36:12.885" endtime="20220704 14:36:12.887"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${CARD_NAME}</arg>
<arg>RFCard5</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220704 14:36:12.887" endtime="20220704 14:36:12.887"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${CARD_DESC}</arg>
<arg>Description</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220704 14:36:12.887" endtime="20220704 14:36:12.887"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Card</arg>
<arg>${CARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Card" library="Card">
<arg>${CARD_ID}</arg>
<doc>Deletes the card with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:36:12.889" level="INFO">${url} = cards/62c2fadc1da1656d7987e3e6</msg>
<status status="PASS" starttime="20220704 14:36:12.889" endtime="20220704 14:36:12.889"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 14:36:13.026" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:36:12.889" endtime="20220704 14:36:13.026"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:36:13.026" endtime="20220704 14:36:13.026"/>
</return>
<msg timestamp="20220704 14:36:13.027" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:36:12.888" endtime="20220704 14:36:13.027"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:36:13.027" endtime="20220704 14:36:13.027"/>
</return>
<status status="PASS" starttime="20220704 14:36:12.888" endtime="20220704 14:36:13.027"/>
</kw>
<status status="PASS" starttime="20220704 14:36:12.888" endtime="20220704 14:36:13.027"/>
</kw>
<doc>Verify that a card's name and Description can be updated through API</doc>
<tag>api</tag>
<tag>card.update</tag>
<tag>regression</tag>
<status status="PASS" starttime="20220704 14:36:12.514" endtime="20220704 14:36:13.027"/>
</test>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Teardown Board</arg>
<arg>Delete All Sessions</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Teardown Board">
<doc>Delete the board created for this suite</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:36:13.031" level="INFO">${url} = boards/62c2fadb73928849fcea6d16</msg>
<status status="PASS" starttime="20220704 14:36:13.030" endtime="20220704 14:36:13.031"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 14:36:13.431" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:36:13.031" endtime="20220704 14:36:13.431"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:36:13.431" endtime="20220704 14:36:13.431"/>
</return>
<msg timestamp="20220704 14:36:13.432" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:36:13.030" endtime="20220704 14:36:13.432"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:36:13.432" endtime="20220704 14:36:13.432"/>
</return>
<status status="PASS" starttime="20220704 14:36:13.029" endtime="20220704 14:36:13.432"/>
</kw>
<status status="PASS" starttime="20220704 14:36:13.029" endtime="20220704 14:36:13.432"/>
</kw>
<status status="PASS" starttime="20220704 14:36:13.028" endtime="20220704 14:36:13.432"/>
</kw>
<kw name="Delete All Sessions" library="request_own_library">
<status status="PASS" starttime="20220704 14:36:13.432" endtime="20220704 14:36:13.433"/>
</kw>
<status status="PASS" starttime="20220704 14:36:13.028" endtime="20220704 14:36:13.433"/>
</kw>
<doc>Example Test with Trello API Cards</doc>
<status status="PASS" starttime="20220704 14:36:10.990" endtime="20220704 14:36:13.433"/>
</suite>
<suite id="s1-s3-s1-s3" name="Trello Api Checklists Tests" source="/trello/api/trello_api_checklists_tests.robot">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Create Trello Session</arg>
<arg>Setup Board, List And Card</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Create Trello Session" library="TrelloAPI">
<doc>Creates a Trello Session</doc>
<kw name="Create Session" library="request_own_library">
<arg>${API_BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<status status="PASS" starttime="20220704 14:36:13.445" endtime="20220704 14:36:13.445"/>
</kw>
<status status="PASS" starttime="20220704 14:36:13.444" endtime="20220704 14:36:13.445"/>
</kw>
<kw name="Setup Board, List And Card">
<doc>Create a board and save its ID and its first list's ID</doc>
<kw name="Create A Board" library="Board">
<var>${BOARD}</var>
<arg>TestBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 14:36:13.446" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 14:36:13.446" endtime="20220704 14:36:13.446"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 14:36:13.447" endtime="20220704 14:36:13.447"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:36:13.447" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220704 14:36:13.447" endtime="20220704 14:36:13.447"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 14:36:13.647" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:36:13.448" endtime="20220704 14:36:13.647"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:36:13.647" endtime="20220704 14:36:13.647"/>
</return>
<msg timestamp="20220704 14:36:13.647" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:36:13.446" endtime="20220704 14:36:13.647"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:36:13.648" endtime="20220704 14:36:13.648"/>
</return>
<msg timestamp="20220704 14:36:13.648" level="INFO">${BOARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:36:13.446" endtime="20220704 14:36:13.648"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_BOARD_ID}</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220704 14:36:13.649" level="INFO">${TEST_SUITE_BOARD_ID} = 62c2fadd44d13a4758ffc3cd</msg>
<status status="PASS" starttime="20220704 14:36:13.648" endtime="20220704 14:36:13.649"/>
</kw>
<kw name="Get Lists On A Board" library="Board">
<var>${LISTS}</var>
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Get all the lists in a board</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>lists_on_board</arg>
<arg>${id}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:36:13.650" level="INFO">${url} = boards/62c2fadd44d13a4758ffc3cd/lists/</msg>
<status status="PASS" starttime="20220704 14:36:13.650" endtime="20220704 14:36:13.650"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 14:36:13.691" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:36:13.650" endtime="20220704 14:36:13.691"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:36:13.691" endtime="20220704 14:36:13.691"/>
</return>
<msg timestamp="20220704 14:36:13.691" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:36:13.649" endtime="20220704 14:36:13.691"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:36:13.691" endtime="20220704 14:36:13.691"/>
</return>
<msg timestamp="20220704 14:36:13.692" level="INFO">${LISTS} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:36:13.649" endtime="20220704 14:36:13.692"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_LIST_ID}</arg>
<arg>${LISTS.json()}[0][id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220704 14:36:13.693" level="INFO">${TEST_SUITE_LIST_ID} = 62c2fadd44d13a4758ffc3d4</msg>
<status status="PASS" starttime="20220704 14:36:13.692" endtime="20220704 14:36:13.693"/>
</kw>
<kw name="Create A Card" library="Card">
<var>${CARD}</var>
<arg>name</arg>
<arg>TestCard</arg>
<doc>Creates a new card in the given list.
required_args: listId
optional_args: name, desc, pos, idCardSource, idLabels, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>@{optional_args}</arg>
<arg>idList</arg>
<arg>${idList}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 14:36:13.694" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 14:36:13.694" endtime="20220704 14:36:13.694"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 14:36:13.694" endtime="20220704 14:36:13.695"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:36:13.695" level="INFO">${url} = cards/</msg>
<status status="PASS" starttime="20220704 14:36:13.695" endtime="20220704 14:36:13.695"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 14:36:13.867" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:36:13.695" endtime="20220704 14:36:13.868"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:36:13.868" endtime="20220704 14:36:13.868"/>
</return>
<msg timestamp="20220704 14:36:13.868" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:36:13.694" endtime="20220704 14:36:13.868"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:36:13.868" endtime="20220704 14:36:13.868"/>
</return>
<msg timestamp="20220704 14:36:13.868" level="INFO">${CARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:36:13.693" endtime="20220704 14:36:13.868"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_CARD_ID}</arg>
<arg>${CARD.json()}[id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220704 14:36:13.869" level="INFO">${TEST_SUITE_CARD_ID} = 62c2fadd6597113db91f0eef</msg>
<status status="PASS" starttime="20220704 14:36:13.868" endtime="20220704 14:36:13.869"/>
</kw>
<status status="PASS" starttime="20220704 14:36:13.445" endtime="20220704 14:36:13.870"/>
</kw>
<status status="PASS" starttime="20220704 14:36:13.444" endtime="20220704 14:36:13.870"/>
</kw>
<test id="s1-s3-s1-s3-t1" name="Verify A Checklist Can Be Created" line="14">
<kw name="Create A Checklist" library="Checklist">
<var>${response}</var>
<arg>name</arg>
<arg>TestChecklist</arg>
<arg>idCard=${TEST_SUITE_CARD_ID}</arg>
<doc>Creates a new checklist in the given card.
required_args: idCard
optional_args: name, pos, idChecklistSource
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>@{optional_args}</arg>
<arg>idCard</arg>
<arg>${idCard}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 14:36:13.872" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 14:36:13.872" endtime="20220704 14:36:13.872"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 14:36:13.872" endtime="20220704 14:36:13.872"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:36:13.873" level="INFO">${url} = checklists/</msg>
<status status="PASS" starttime="20220704 14:36:13.872" endtime="20220704 14:36:13.873"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 14:36:14.047" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:36:13.873" endtime="20220704 14:36:14.048"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:36:14.048" endtime="20220704 14:36:14.048"/>
</return>
<msg timestamp="20220704 14:36:14.048" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:36:13.871" endtime="20220704 14:36:14.048"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:36:14.048" endtime="20220704 14:36:14.048"/>
</return>
<msg timestamp="20220704 14:36:14.048" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:36:13.871" endtime="20220704 14:36:14.048"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${checklist_id}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 14:36:14.049" endtime="20220704 14:36:14.049"/>
</return>
<msg timestamp="20220704 14:36:14.050" level="INFO">${checklist_id} = 62c2faddc41cd8084f73a9ad</msg>
<status status="PASS" starttime="20220704 14:36:14.048" endtime="20220704 14:36:14.050"/>
</kw>
<kw name="Get A Checklist" library="Checklist">
<var>${response}</var>
<arg>${checklist_id}</arg>
<doc>Gets the checklist with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:36:14.051" level="INFO">${url} = checklists/62c2faddc41cd8084f73a9ad</msg>
<status status="PASS" starttime="20220704 14:36:14.051" endtime="20220704 14:36:14.051"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 14:36:14.104" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:36:14.051" endtime="20220704 14:36:14.105"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:36:14.105" endtime="20220704 14:36:14.105"/>
</return>
<msg timestamp="20220704 14:36:14.105" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:36:14.050" endtime="20220704 14:36:14.105"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:36:14.105" endtime="20220704 14:36:14.105"/>
</return>
<msg timestamp="20220704 14:36:14.105" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:36:14.050" endtime="20220704 14:36:14.105"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${checklist_name}</var>
<arg>${response}</arg>
<arg>name</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 14:36:14.106" endtime="20220704 14:36:14.106"/>
</return>
<msg timestamp="20220704 14:36:14.107" level="INFO">${checklist_name} = TestChecklist</msg>
<status status="PASS" starttime="20220704 14:36:14.106" endtime="20220704 14:36:14.107"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${checklist_name}</arg>
<arg>TestChecklist</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220704 14:36:14.107" endtime="20220704 14:36:14.107"/>
</kw>
<kw name="Delete A Checklist" library="Checklist" type="TEARDOWN">
<arg>${checklist_id}</arg>
<doc>Deletes the checklist with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:36:14.108" level="INFO">${url} = checklists/62c2faddc41cd8084f73a9ad</msg>
<status status="PASS" starttime="20220704 14:36:14.108" endtime="20220704 14:36:14.108"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 14:36:14.226" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:36:14.109" endtime="20220704 14:36:14.226"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:36:14.226" endtime="20220704 14:36:14.226"/>
</return>
<msg timestamp="20220704 14:36:14.227" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:36:14.108" endtime="20220704 14:36:14.227"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:36:14.227" endtime="20220704 14:36:14.227"/>
</return>
<status status="PASS" starttime="20220704 14:36:14.107" endtime="20220704 14:36:14.227"/>
</kw>
<doc>Verify that a checklist can be created through API</doc>
<tag>api</tag>
<tag>checklist.create</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220704 14:36:13.870" endtime="20220704 14:36:14.227"/>
</test>
<test id="s1-s3-s1-s3-t2" name="Verify A Checklist Can Be Deleted" line="24">
<kw name="Create A Checklist" library="Checklist">
<var>${response}</var>
<arg>name</arg>
<arg>TestChecklist</arg>
<arg>idCard=${TEST_SUITE_CARD_ID}</arg>
<doc>Creates a new checklist in the given card.
required_args: idCard
optional_args: name, pos, idChecklistSource
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>@{optional_args}</arg>
<arg>idCard</arg>
<arg>${idCard}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 14:36:14.229" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 14:36:14.229" endtime="20220704 14:36:14.229"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 14:36:14.229" endtime="20220704 14:36:14.229"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:36:14.230" level="INFO">${url} = checklists/</msg>
<status status="PASS" starttime="20220704 14:36:14.230" endtime="20220704 14:36:14.230"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 14:36:14.340" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:36:14.230" endtime="20220704 14:36:14.340"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:36:14.341" endtime="20220704 14:36:14.341"/>
</return>
<msg timestamp="20220704 14:36:14.341" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:36:14.228" endtime="20220704 14:36:14.341"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:36:14.341" endtime="20220704 14:36:14.341"/>
</return>
<msg timestamp="20220704 14:36:14.341" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:36:14.228" endtime="20220704 14:36:14.341"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${checklist_id}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 14:36:14.342" endtime="20220704 14:36:14.342"/>
</return>
<msg timestamp="20220704 14:36:14.343" level="INFO">${checklist_id} = 62c2fade18d31c88d9cea85a</msg>
<status status="PASS" starttime="20220704 14:36:14.341" endtime="20220704 14:36:14.343"/>
</kw>
<kw name="Delete A Checklist" library="Checklist">
<var>${response}</var>
<arg>${checklist_id}</arg>
<doc>Deletes the checklist with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:36:14.345" level="INFO">${url} = checklists/62c2fade18d31c88d9cea85a</msg>
<status status="PASS" starttime="20220704 14:36:14.344" endtime="20220704 14:36:14.345"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 14:36:14.475" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:36:14.345" endtime="20220704 14:36:14.475"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:36:14.475" endtime="20220704 14:36:14.476"/>
</return>
<msg timestamp="20220704 14:36:14.476" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:36:14.344" endtime="20220704 14:36:14.476"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:36:14.476" endtime="20220704 14:36:14.476"/>
</return>
<msg timestamp="20220704 14:36:14.476" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:36:14.343" endtime="20220704 14:36:14.476"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>delete</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220704 14:36:14.477" endtime="20220704 14:36:14.479"/>
</kw>
<status status="PASS" starttime="20220704 14:36:14.476" endtime="20220704 14:36:14.479"/>
</kw>
<kw name="Get A Checklist" library="Checklist">
<arg>${checklist_id}</arg>
<arg>status_code=404</arg>
<doc>Gets the checklist with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:36:14.480" level="INFO">${url} = checklists/62c2fade18d31c88d9cea85a</msg>
<status status="PASS" starttime="20220704 14:36:14.480" endtime="20220704 14:36:14.480"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 14:36:14.511" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220704 14:36:14.480" endtime="20220704 14:36:14.512"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:36:14.512" endtime="20220704 14:36:14.512"/>
</return>
<msg timestamp="20220704 14:36:14.512" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220704 14:36:14.480" endtime="20220704 14:36:14.512"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:36:14.512" endtime="20220704 14:36:14.512"/>
</return>
<status status="PASS" starttime="20220704 14:36:14.479" endtime="20220704 14:36:14.512"/>
</kw>
<doc>Verify that a checklist can be deleted through API</doc>
<tag>api</tag>
<tag>checklist.delete</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220704 14:36:14.227" endtime="20220704 14:36:14.512"/>
</test>
<test id="s1-s3-s1-s3-t3" name="Verify A Checklist Can Be Updated" line="33">
<kw name="Create A Checklist" library="Checklist">
<var>${response}</var>
<arg>name</arg>
<arg>TestChecklist</arg>
<arg>idCard=${TEST_SUITE_CARD_ID}</arg>
<doc>Creates a new checklist in the given card.
required_args: idCard
optional_args: name, pos, idChecklistSource
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>@{optional_args}</arg>
<arg>idCard</arg>
<arg>${idCard}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 14:36:14.517" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 14:36:14.515" endtime="20220704 14:36:14.517"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 14:36:14.517" endtime="20220704 14:36:14.517"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:36:14.518" level="INFO">${url} = checklists/</msg>
<status status="PASS" starttime="20220704 14:36:14.517" endtime="20220704 14:36:14.518"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 14:36:14.614" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:36:14.518" endtime="20220704 14:36:14.614"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:36:14.614" endtime="20220704 14:36:14.614"/>
</return>
<msg timestamp="20220704 14:36:14.614" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:36:14.514" endtime="20220704 14:36:14.614"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:36:14.614" endtime="20220704 14:36:14.614"/>
</return>
<msg timestamp="20220704 14:36:14.615" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:36:14.513" endtime="20220704 14:36:14.615"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${checklist_id}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 14:36:14.615" endtime="20220704 14:36:14.615"/>
</return>
<msg timestamp="20220704 14:36:14.616" level="INFO">${checklist_id} = 62c2fadea920cc14ba2cdf8a</msg>
<status status="PASS" starttime="20220704 14:36:14.615" endtime="20220704 14:36:14.616"/>
</kw>
<kw name="Update A Checklist" library="Checklist">
<var>${response}</var>
<arg>${checklist_id}</arg>
<arg>name</arg>
<arg>TestChecklist2</arg>
<doc>Updates the checklist with the given ID
optional_args: name, pos
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<arg>status_code=${status_code}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 14:36:14.618" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 14:36:14.617" endtime="20220704 14:36:14.618"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 14:36:14.618" endtime="20220704 14:36:14.618"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:36:14.618" level="INFO">${url} = checklists/62c2fadea920cc14ba2cdf8a</msg>
<status status="PASS" starttime="20220704 14:36:14.618" endtime="20220704 14:36:14.618"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 14:36:14.732" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:36:14.619" endtime="20220704 14:36:14.732"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:36:14.732" endtime="20220704 14:36:14.732"/>
</return>
<msg timestamp="20220704 14:36:14.732" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:36:14.617" endtime="20220704 14:36:14.732"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:36:14.732" endtime="20220704 14:36:14.732"/>
</return>
<msg timestamp="20220704 14:36:14.732" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:36:14.616" endtime="20220704 14:36:14.732"/>
</kw>
<kw name="Get A Checklist" library="Checklist">
<var>${response}</var>
<arg>${checklist_id}</arg>
<doc>Gets the checklist with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:36:14.734" level="INFO">${url} = checklists/62c2fadea920cc14ba2cdf8a</msg>
<status status="PASS" starttime="20220704 14:36:14.734" endtime="20220704 14:36:14.734"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 14:36:14.778" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:36:14.734" endtime="20220704 14:36:14.778"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:36:14.778" endtime="20220704 14:36:14.778"/>
</return>
<msg timestamp="20220704 14:36:14.779" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:36:14.733" endtime="20220704 14:36:14.779"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:36:14.779" endtime="20220704 14:36:14.779"/>
</return>
<msg timestamp="20220704 14:36:14.779" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:36:14.733" endtime="20220704 14:36:14.779"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${checklist_name}</var>
<arg>${response}</arg>
<arg>name</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 14:36:14.780" endtime="20220704 14:36:14.780"/>
</return>
<msg timestamp="20220704 14:36:14.780" level="INFO">${checklist_name} = TestChecklist2</msg>
<status status="PASS" starttime="20220704 14:36:14.779" endtime="20220704 14:36:14.780"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${checklist_name}</arg>
<arg>TestChecklist2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220704 14:36:14.781" endtime="20220704 14:36:14.781"/>
</kw>
<kw name="Delete A Checklist" library="Checklist" type="TEARDOWN">
<arg>${checklist_id}</arg>
<doc>Deletes the checklist with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:36:14.798" level="INFO">${url} = checklists/62c2fadea920cc14ba2cdf8a</msg>
<status status="PASS" starttime="20220704 14:36:14.797" endtime="20220704 14:36:14.798"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 14:36:14.952" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:36:14.798" endtime="20220704 14:36:14.952"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:36:14.952" endtime="20220704 14:36:14.952"/>
</return>
<msg timestamp="20220704 14:36:14.952" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:36:14.797" endtime="20220704 14:36:14.952"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:36:14.952" endtime="20220704 14:36:14.952"/>
</return>
<status status="PASS" starttime="20220704 14:36:14.781" endtime="20220704 14:36:14.952"/>
</kw>
<doc>Verify that a checklist's name can be updated through API</doc>
<tag>api</tag>
<tag>checklist.update</tag>
<tag>regression</tag>
<status status="PASS" starttime="20220704 14:36:14.513" endtime="20220704 14:36:14.952"/>
</test>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Teardown Board</arg>
<arg>Delete All Sessions</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Teardown Board">
<doc>Delete the board created for this suite</doc>
<kw name="Delete A Board" library="Board">
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:36:14.955" level="INFO">${url} = boards/62c2fadd44d13a4758ffc3cd</msg>
<status status="PASS" starttime="20220704 14:36:14.955" endtime="20220704 14:36:14.955"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 14:36:15.410" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:36:14.955" endtime="20220704 14:36:15.410"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:36:15.410" endtime="20220704 14:36:15.410"/>
</return>
<msg timestamp="20220704 14:36:15.410" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:36:14.954" endtime="20220704 14:36:15.410"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:36:15.410" endtime="20220704 14:36:15.411"/>
</return>
<status status="PASS" starttime="20220704 14:36:14.954" endtime="20220704 14:36:15.411"/>
</kw>
<status status="PASS" starttime="20220704 14:36:14.953" endtime="20220704 14:36:15.411"/>
</kw>
<kw name="Delete All Sessions" library="request_own_library">
<status status="PASS" starttime="20220704 14:36:15.411" endtime="20220704 14:36:15.412"/>
</kw>
<status status="PASS" starttime="20220704 14:36:14.953" endtime="20220704 14:36:15.412"/>
</kw>
<doc>Example Test with Trello API Checklists</doc>
<status status="PASS" starttime="20220704 14:36:13.435" endtime="20220704 14:36:15.412"/>
</suite>
<suite id="s1-s3-s1-s4" name="Trello Api Labels Tests" source="/trello/api/trello_api_labels_tests.robot">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Create Trello Session</arg>
<arg>Setup Board And List</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Create Trello Session" library="TrelloAPI">
<doc>Creates a Trello Session</doc>
<kw name="Create Session" library="request_own_library">
<arg>${API_BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<status status="PASS" starttime="20220704 14:36:15.422" endtime="20220704 14:36:15.422"/>
</kw>
<status status="PASS" starttime="20220704 14:36:15.422" endtime="20220704 14:36:15.422"/>
</kw>
<kw name="Setup Board And List">
<doc>Create a board and save its ID and its first list's ID</doc>
<kw name="Create A Board" library="Board">
<var>${BOARD}</var>
<arg>TestBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 14:36:15.423" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 14:36:15.423" endtime="20220704 14:36:15.423"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 14:36:15.423" endtime="20220704 14:36:15.424"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:36:15.424" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220704 14:36:15.424" endtime="20220704 14:36:15.424"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 14:36:15.638" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:36:15.424" endtime="20220704 14:36:15.638"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:36:15.638" endtime="20220704 14:36:15.638"/>
</return>
<msg timestamp="20220704 14:36:15.638" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:36:15.423" endtime="20220704 14:36:15.638"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:36:15.638" endtime="20220704 14:36:15.638"/>
</return>
<msg timestamp="20220704 14:36:15.638" level="INFO">${BOARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:36:15.423" endtime="20220704 14:36:15.639"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_BOARD_ID}</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220704 14:36:15.640" level="INFO">${TEST_SUITE_BOARD_ID} = 62c2fadf9511e9450fd5b87b</msg>
<status status="PASS" starttime="20220704 14:36:15.639" endtime="20220704 14:36:15.640"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${LISTS}</var>
<arg>boards/${TEST_SUITE_BOARD_ID}/lists</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 14:36:15.687" level="INFO">${LISTS} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:36:15.640" endtime="20220704 14:36:15.687"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_LIST_ID}</arg>
<arg>${LISTS.json()}[0][id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220704 14:36:15.688" level="INFO">${TEST_SUITE_LIST_ID} = 62c2fadf9511e9450fd5b882</msg>
<status status="PASS" starttime="20220704 14:36:15.687" endtime="20220704 14:36:15.688"/>
</kw>
<status status="PASS" starttime="20220704 14:36:15.423" endtime="20220704 14:36:15.689"/>
</kw>
<status status="PASS" starttime="20220704 14:36:15.422" endtime="20220704 14:36:15.689"/>
</kw>
<test id="s1-s3-s1-s4-t1" name="Create and get label on board" line="14">
<kw name="Create A Label" library="Label">
<var>${response}</var>
<arg>name</arg>
<arg>label2</arg>
<arg>color</arg>
<arg>yellow</arg>
<doc>Creates a new label in the given board.
required_args: idBoard
optional_args: name, color
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>idBoard</arg>
<arg>${idBoard}</arg>
<arg>@{optional_args}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 14:36:15.691" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 14:36:15.690" endtime="20220704 14:36:15.691"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 14:36:15.691" endtime="20220704 14:36:15.691"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:36:15.692" level="INFO">${url} = labels/</msg>
<status status="PASS" starttime="20220704 14:36:15.691" endtime="20220704 14:36:15.692"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 14:36:15.802" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:36:15.692" endtime="20220704 14:36:15.802"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:36:15.802" endtime="20220704 14:36:15.802"/>
</return>
<msg timestamp="20220704 14:36:15.802" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:36:15.690" endtime="20220704 14:36:15.802"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:36:15.802" endtime="20220704 14:36:15.802"/>
</return>
<msg timestamp="20220704 14:36:15.803" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:36:15.689" endtime="20220704 14:36:15.803"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>label</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220704 14:36:15.803" endtime="20220704 14:36:15.805"/>
</kw>
<status status="PASS" starttime="20220704 14:36:15.803" endtime="20220704 14:36:15.805"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${LABEL_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 14:36:15.805" endtime="20220704 14:36:15.806"/>
</return>
<msg timestamp="20220704 14:36:15.806" level="INFO">${LABEL_ID} = 62c2fadf7fad8f859e558759</msg>
<status status="PASS" starttime="20220704 14:36:15.805" endtime="20220704 14:36:15.806"/>
</kw>
<kw name="Get A Label" library="Label">
<var>${response}</var>
<arg>${LABEL_ID}</arg>
<doc>Gets the label with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:36:15.807" level="INFO">${url} = labels/62c2fadf7fad8f859e558759</msg>
<status status="PASS" starttime="20220704 14:36:15.807" endtime="20220704 14:36:15.807"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 14:36:15.857" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:36:15.807" endtime="20220704 14:36:15.857"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:36:15.857" endtime="20220704 14:36:15.857"/>
</return>
<msg timestamp="20220704 14:36:15.857" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:36:15.807" endtime="20220704 14:36:15.857"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:36:15.857" endtime="20220704 14:36:15.857"/>
</return>
<msg timestamp="20220704 14:36:15.857" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:36:15.806" endtime="20220704 14:36:15.857"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${LABEL_COLOR}</var>
<arg>${response}</arg>
<arg>color</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 14:36:15.858" endtime="20220704 14:36:15.858"/>
</return>
<msg timestamp="20220704 14:36:15.859" level="INFO">${LABEL_COLOR} = yellow</msg>
<status status="PASS" starttime="20220704 14:36:15.858" endtime="20220704 14:36:15.859"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${LABEL_NAME}</var>
<arg>${response}</arg>
<arg>name</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 14:36:15.859" endtime="20220704 14:36:15.859"/>
</return>
<msg timestamp="20220704 14:36:15.860" level="INFO">${LABEL_NAME} = label2</msg>
<status status="PASS" starttime="20220704 14:36:15.859" endtime="20220704 14:36:15.860"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${LABEL_COLOR}</arg>
<arg>yellow</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220704 14:36:15.860" endtime="20220704 14:36:15.861"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${LABEL_NAME}</arg>
<arg>label2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220704 14:36:15.861" endtime="20220704 14:36:15.861"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Label</arg>
<arg>${LABEL_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Label" library="Label">
<arg>${LABEL_ID}</arg>
<doc>Deletes the label with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:36:15.863" level="INFO">${url} = labels/62c2fadf7fad8f859e558759</msg>
<status status="PASS" starttime="20220704 14:36:15.862" endtime="20220704 14:36:15.863"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 14:36:16.000" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:36:15.863" endtime="20220704 14:36:16.000"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:36:16.000" endtime="20220704 14:36:16.000"/>
</return>
<msg timestamp="20220704 14:36:16.001" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:36:15.862" endtime="20220704 14:36:16.001"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:36:16.001" endtime="20220704 14:36:16.001"/>
</return>
<status status="PASS" starttime="20220704 14:36:15.861" endtime="20220704 14:36:16.001"/>
</kw>
<status status="PASS" starttime="20220704 14:36:15.861" endtime="20220704 14:36:16.001"/>
</kw>
<doc>Verify that a label can be created through API</doc>
<tag>api</tag>
<tag>label.create</tag>
<tag>label.get</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220704 14:36:15.689" endtime="20220704 14:36:16.001"/>
</test>
<test id="s1-s3-s1-s4-t2" name="Update label on board" line="28">
<kw name="Create A Label" library="Label">
<var>${response}</var>
<arg>name</arg>
<arg>label2</arg>
<arg>color</arg>
<arg>yellow</arg>
<doc>Creates a new label in the given board.
required_args: idBoard
optional_args: name, color
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>idBoard</arg>
<arg>${idBoard}</arg>
<arg>@{optional_args}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 14:36:16.003" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 14:36:16.003" endtime="20220704 14:36:16.003"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 14:36:16.004" endtime="20220704 14:36:16.004"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:36:16.005" level="INFO">${url} = labels/</msg>
<status status="PASS" starttime="20220704 14:36:16.004" endtime="20220704 14:36:16.005"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 14:36:16.083" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:36:16.005" endtime="20220704 14:36:16.083"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:36:16.084" endtime="20220704 14:36:16.084"/>
</return>
<msg timestamp="20220704 14:36:16.084" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:36:16.003" endtime="20220704 14:36:16.084"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:36:16.084" endtime="20220704 14:36:16.084"/>
</return>
<msg timestamp="20220704 14:36:16.084" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:36:16.002" endtime="20220704 14:36:16.084"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>label</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220704 14:36:16.085" endtime="20220704 14:36:16.087"/>
</kw>
<status status="PASS" starttime="20220704 14:36:16.084" endtime="20220704 14:36:16.087"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${LABEL_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 14:36:16.087" endtime="20220704 14:36:16.088"/>
</return>
<msg timestamp="20220704 14:36:16.088" level="INFO">${LABEL_ID} = 62c2fae033b6c826135222cb</msg>
<status status="PASS" starttime="20220704 14:36:16.087" endtime="20220704 14:36:16.088"/>
</kw>
<kw name="Update A Label" library="Label">
<var>${new_response}</var>
<arg>${LABEL_ID}</arg>
<arg>name</arg>
<arg>label3</arg>
<arg>color</arg>
<arg>orange</arg>
<doc>Updates the label with the given ID
optional_args: name, color
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 14:36:16.089" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 14:36:16.089" endtime="20220704 14:36:16.089"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 14:36:16.089" endtime="20220704 14:36:16.089"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:36:16.090" level="INFO">${url} = labels/62c2fae033b6c826135222cb</msg>
<status status="PASS" starttime="20220704 14:36:16.090" endtime="20220704 14:36:16.090"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 14:36:16.195" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:36:16.090" endtime="20220704 14:36:16.195"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:36:16.196" endtime="20220704 14:36:16.196"/>
</return>
<msg timestamp="20220704 14:36:16.196" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:36:16.089" endtime="20220704 14:36:16.196"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:36:16.196" endtime="20220704 14:36:16.196"/>
</return>
<msg timestamp="20220704 14:36:16.196" level="INFO">${new_response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:36:16.088" endtime="20220704 14:36:16.196"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${NEW_LABEL_COLOR}</var>
<arg>${new_response}</arg>
<arg>color</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 14:36:16.197" endtime="20220704 14:36:16.197"/>
</return>
<msg timestamp="20220704 14:36:16.198" level="INFO">${NEW_LABEL_COLOR} = orange</msg>
<status status="PASS" starttime="20220704 14:36:16.196" endtime="20220704 14:36:16.198"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${NEW_LABEL_NAME}</var>
<arg>${new_response}</arg>
<arg>name</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 14:36:16.198" endtime="20220704 14:36:16.198"/>
</return>
<msg timestamp="20220704 14:36:16.199" level="INFO">${NEW_LABEL_NAME} = label3</msg>
<status status="PASS" starttime="20220704 14:36:16.198" endtime="20220704 14:36:16.199"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${NEW_LABEL_COLOR}</arg>
<arg>orange</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220704 14:36:16.199" endtime="20220704 14:36:16.199"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${NEW_LABEL_NAME}</arg>
<arg>label3</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220704 14:36:16.199" endtime="20220704 14:36:16.200"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Label</arg>
<arg>${LABEL_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Label" library="Label">
<arg>${LABEL_ID}</arg>
<doc>Deletes the label with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:36:16.201" level="INFO">${url} = labels/62c2fae033b6c826135222cb</msg>
<status status="PASS" starttime="20220704 14:36:16.201" endtime="20220704 14:36:16.201"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 14:36:16.306" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:36:16.202" endtime="20220704 14:36:16.306"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:36:16.306" endtime="20220704 14:36:16.306"/>
</return>
<msg timestamp="20220704 14:36:16.306" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:36:16.201" endtime="20220704 14:36:16.306"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:36:16.306" endtime="20220704 14:36:16.306"/>
</return>
<status status="PASS" starttime="20220704 14:36:16.200" endtime="20220704 14:36:16.307"/>
</kw>
<status status="PASS" starttime="20220704 14:36:16.200" endtime="20220704 14:36:16.307"/>
</kw>
<doc>Verify that a label's name and color can be updated through API</doc>
<tag>api</tag>
<tag>label.update</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220704 14:36:16.001" endtime="20220704 14:36:16.307"/>
</test>
<test id="s1-s3-s1-s4-t3" name="Delete label on board" line="41">
<kw name="Create A Label" library="Label">
<var>${response}</var>
<arg>name</arg>
<arg>label2</arg>
<arg>color</arg>
<arg>yellow</arg>
<doc>Creates a new label in the given board.
required_args: idBoard
optional_args: name, color
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>idBoard</arg>
<arg>${idBoard}</arg>
<arg>@{optional_args}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 14:36:16.309" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 14:36:16.309" endtime="20220704 14:36:16.309"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 14:36:16.309" endtime="20220704 14:36:16.309"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:36:16.310" level="INFO">${url} = labels/</msg>
<status status="PASS" starttime="20220704 14:36:16.309" endtime="20220704 14:36:16.310"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 14:36:16.386" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:36:16.310" endtime="20220704 14:36:16.386"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:36:16.386" endtime="20220704 14:36:16.386"/>
</return>
<msg timestamp="20220704 14:36:16.387" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:36:16.308" endtime="20220704 14:36:16.387"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:36:16.387" endtime="20220704 14:36:16.387"/>
</return>
<msg timestamp="20220704 14:36:16.387" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:36:16.308" endtime="20220704 14:36:16.387"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${LABEL_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 14:36:16.388" endtime="20220704 14:36:16.388"/>
</return>
<msg timestamp="20220704 14:36:16.388" level="INFO">${LABEL_ID} = 62c2fae052d2302c2d82cd4a</msg>
<status status="PASS" starttime="20220704 14:36:16.387" endtime="20220704 14:36:16.388"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Label</arg>
<arg>${LABEL_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Label" library="Label">
<arg>${LABEL_ID}</arg>
<doc>Deletes the label with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:36:16.390" level="INFO">${url} = labels/62c2fae052d2302c2d82cd4a</msg>
<status status="PASS" starttime="20220704 14:36:16.390" endtime="20220704 14:36:16.390"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 14:36:16.507" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:36:16.391" endtime="20220704 14:36:16.507"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:36:16.508" endtime="20220704 14:36:16.508"/>
</return>
<msg timestamp="20220704 14:36:16.508" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:36:16.390" endtime="20220704 14:36:16.508"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:36:16.508" endtime="20220704 14:36:16.508"/>
</return>
<status status="PASS" starttime="20220704 14:36:16.389" endtime="20220704 14:36:16.508"/>
</kw>
<status status="PASS" starttime="20220704 14:36:16.389" endtime="20220704 14:36:16.508"/>
</kw>
<kw name="Get A Label" library="Label">
<arg>${LABEL_ID}</arg>
<arg>status_code=404</arg>
<doc>Gets the label with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:36:16.510" level="INFO">${url} = labels/62c2fae052d2302c2d82cd4a</msg>
<status status="PASS" starttime="20220704 14:36:16.509" endtime="20220704 14:36:16.510"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 14:36:16.539" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220704 14:36:16.510" endtime="20220704 14:36:16.539"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:36:16.540" endtime="20220704 14:36:16.540"/>
</return>
<msg timestamp="20220704 14:36:16.540" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220704 14:36:16.509" endtime="20220704 14:36:16.540"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:36:16.540" endtime="20220704 14:36:16.540"/>
</return>
<status status="PASS" starttime="20220704 14:36:16.508" endtime="20220704 14:36:16.540"/>
</kw>
<doc>Verify that a label can be deleted through API</doc>
<tag>api</tag>
<tag>label.delete</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220704 14:36:16.307" endtime="20220704 14:36:16.540"/>
</test>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Teardown Board</arg>
<arg>Delete All Sessions</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Teardown Board">
<doc>Delete the board created for this session.</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:36:16.543" level="INFO">${url} = boards/62c2fadf9511e9450fd5b87b</msg>
<status status="PASS" starttime="20220704 14:36:16.543" endtime="20220704 14:36:16.543"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 14:36:16.984" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:36:16.543" endtime="20220704 14:36:16.984"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:36:16.984" endtime="20220704 14:36:16.984"/>
</return>
<msg timestamp="20220704 14:36:16.985" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:36:16.542" endtime="20220704 14:36:16.985"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:36:16.985" endtime="20220704 14:36:16.985"/>
</return>
<status status="PASS" starttime="20220704 14:36:16.542" endtime="20220704 14:36:16.985"/>
</kw>
<status status="PASS" starttime="20220704 14:36:16.541" endtime="20220704 14:36:16.985"/>
</kw>
<status status="PASS" starttime="20220704 14:36:16.541" endtime="20220704 14:36:16.985"/>
</kw>
<kw name="Delete All Sessions" library="request_own_library">
<status status="PASS" starttime="20220704 14:36:16.985" endtime="20220704 14:36:16.986"/>
</kw>
<status status="PASS" starttime="20220704 14:36:16.541" endtime="20220704 14:36:16.987"/>
</kw>
<doc>Example Test with Trello API Cards</doc>
<status status="PASS" starttime="20220704 14:36:15.414" endtime="20220704 14:36:16.987"/>
</suite>
<suite id="s1-s3-s1-s5" name="Trello Api Lists Tests" source="/trello/api/trello_api_lists_tests.robot">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Create Trello Session</arg>
<arg>Setup Board</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Create Trello Session" library="TrelloAPI">
<doc>Creates a Trello Session</doc>
<kw name="Create Session" library="request_own_library">
<arg>${API_BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<status status="PASS" starttime="20220704 14:36:16.996" endtime="20220704 14:36:16.996"/>
</kw>
<status status="PASS" starttime="20220704 14:36:16.996" endtime="20220704 14:36:16.997"/>
</kw>
<kw name="Setup Board">
<doc>Create a board and save it's id for the suite</doc>
<kw name="Create A Board" library="Board">
<var>${BOARD}</var>
<arg>TestBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 14:36:16.998" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 14:36:16.997" endtime="20220704 14:36:16.998"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 14:36:16.998" endtime="20220704 14:36:16.998"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:36:16.999" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220704 14:36:16.998" endtime="20220704 14:36:16.999"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 14:36:17.160" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:36:16.999" endtime="20220704 14:36:17.160"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:36:17.160" endtime="20220704 14:36:17.160"/>
</return>
<msg timestamp="20220704 14:36:17.160" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:36:16.997" endtime="20220704 14:36:17.160"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:36:17.161" endtime="20220704 14:36:17.161"/>
</return>
<msg timestamp="20220704 14:36:17.161" level="INFO">${BOARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:36:16.997" endtime="20220704 14:36:17.161"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Set Suite Variable</arg>
<arg>\${TEST_SUITE_BOARD_ID}</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_BOARD_ID}</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220704 14:36:17.162" level="INFO">${TEST_SUITE_BOARD_ID} = 62c2fae18d3aa34572397714</msg>
<status status="PASS" starttime="20220704 14:36:17.161" endtime="20220704 14:36:17.162"/>
</kw>
<status status="PASS" starttime="20220704 14:36:17.161" endtime="20220704 14:36:17.162"/>
</kw>
<status status="PASS" starttime="20220704 14:36:16.997" endtime="20220704 14:36:17.162"/>
</kw>
<status status="PASS" starttime="20220704 14:36:16.996" endtime="20220704 14:36:17.162"/>
</kw>
<test id="s1-s3-s1-s5-t1" name="CREATE a list" line="13">
<kw name="Create A List" library="List">
<var>${response}</var>
<arg>NewList</arg>
<doc>Creates a new List
board id
name the list will have
optional_args: idListSource, pos, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>list</arg>
<arg>name</arg>
<arg>${name}</arg>
<arg>idBoard</arg>
<arg>${idBoard}</arg>
<arg>@{optional_args}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 14:36:17.164" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 14:36:17.164" endtime="20220704 14:36:17.164"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 14:36:17.165" endtime="20220704 14:36:17.165"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:36:17.166" level="INFO">${url} = lists/</msg>
<status status="PASS" starttime="20220704 14:36:17.165" endtime="20220704 14:36:17.166"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 14:36:17.315" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:36:17.166" endtime="20220704 14:36:17.315"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:36:17.315" endtime="20220704 14:36:17.315"/>
</return>
<msg timestamp="20220704 14:36:17.315" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:36:17.164" endtime="20220704 14:36:17.315"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:36:17.315" endtime="20220704 14:36:17.316"/>
</return>
<msg timestamp="20220704 14:36:17.316" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:36:17.163" endtime="20220704 14:36:17.316"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>list</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220704 14:36:17.316" endtime="20220704 14:36:17.318"/>
</kw>
<status status="PASS" starttime="20220704 14:36:17.316" endtime="20220704 14:36:17.318"/>
</kw>
<doc>Verify that a list can be created through API</doc>
<tag>api</tag>
<tag>list.create</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220704 14:36:17.163" endtime="20220704 14:36:17.319"/>
</test>
<test id="s1-s3-s1-s5-t2" name="UPDATE a list" line="19">
<kw name="Create A List" library="List">
<var>${response}</var>
<arg>NewList</arg>
<doc>Creates a new List
board id
name the list will have
optional_args: idListSource, pos, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>list</arg>
<arg>name</arg>
<arg>${name}</arg>
<arg>idBoard</arg>
<arg>${idBoard}</arg>
<arg>@{optional_args}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 14:36:17.321" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 14:36:17.320" endtime="20220704 14:36:17.321"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 14:36:17.321" endtime="20220704 14:36:17.321"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:36:17.322" level="INFO">${url} = lists/</msg>
<status status="PASS" starttime="20220704 14:36:17.321" endtime="20220704 14:36:17.322"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 14:36:17.427" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:36:17.322" endtime="20220704 14:36:17.427"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:36:17.427" endtime="20220704 14:36:17.427"/>
</return>
<msg timestamp="20220704 14:36:17.428" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:36:17.320" endtime="20220704 14:36:17.428"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:36:17.428" endtime="20220704 14:36:17.428"/>
</return>
<msg timestamp="20220704 14:36:17.428" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:36:17.320" endtime="20220704 14:36:17.428"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>list</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220704 14:36:17.428" endtime="20220704 14:36:17.430"/>
</kw>
<status status="PASS" starttime="20220704 14:36:17.428" endtime="20220704 14:36:17.430"/>
</kw>
<kw name="Update A List" library="List">
<arg>${response.json()}[id]</arg>
<arg>name</arg>
<arg>NewName</arg>
<doc>Updates the board with the given ID
optional_args: name, idListSource, pos, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>list</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 14:36:17.432" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 14:36:17.432" endtime="20220704 14:36:17.433"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 14:36:17.433" endtime="20220704 14:36:17.433"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:36:17.433" level="INFO">${url} = lists/62c2fae11447473eef0898da</msg>
<status status="PASS" starttime="20220704 14:36:17.433" endtime="20220704 14:36:17.433"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 14:36:17.499" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:36:17.433" endtime="20220704 14:36:17.499"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:36:17.499" endtime="20220704 14:36:17.499"/>
</return>
<msg timestamp="20220704 14:36:17.499" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:36:17.431" endtime="20220704 14:36:17.499"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:36:17.499" endtime="20220704 14:36:17.499"/>
</return>
<status status="PASS" starttime="20220704 14:36:17.431" endtime="20220704 14:36:17.500"/>
</kw>
<kw name="Get A List" library="List">
<var>${new_response}</var>
<arg>${response.json()}[id]</arg>
<doc>Gets the List with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>list</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:36:17.502" level="INFO">${url} = lists/62c2fae11447473eef0898da</msg>
<status status="PASS" starttime="20220704 14:36:17.501" endtime="20220704 14:36:17.502"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 14:36:17.548" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:36:17.502" endtime="20220704 14:36:17.548"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:36:17.548" endtime="20220704 14:36:17.548"/>
</return>
<msg timestamp="20220704 14:36:17.549" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:36:17.501" endtime="20220704 14:36:17.549"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:36:17.549" endtime="20220704 14:36:17.549"/>
</return>
<msg timestamp="20220704 14:36:17.549" level="INFO">${new_response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:36:17.500" endtime="20220704 14:36:17.549"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${new_response}</arg>
<arg>list</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220704 14:36:17.549" endtime="20220704 14:36:17.551"/>
</kw>
<status status="PASS" starttime="20220704 14:36:17.549" endtime="20220704 14:36:17.551"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${new_response.json()}[name]</arg>
<arg>NewName</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220704 14:36:17.552" endtime="20220704 14:36:17.552"/>
</kw>
<doc>Verify that a lists name can be updated through API</doc>
<tag>api</tag>
<tag>list.update</tag>
<tag>regression</tag>
<status status="PASS" starttime="20220704 14:36:17.319" endtime="20220704 14:36:17.552"/>
</test>
<test id="s1-s3-s1-s5-t3" name="ARCHIVE A list" line="29">
<kw name="Create A List" library="List">
<var>${response}</var>
<arg>NewList</arg>
<doc>Creates a new List
board id
name the list will have
optional_args: idListSource, pos, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>list</arg>
<arg>name</arg>
<arg>${name}</arg>
<arg>idBoard</arg>
<arg>${idBoard}</arg>
<arg>@{optional_args}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 14:36:17.556" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 14:36:17.556" endtime="20220704 14:36:17.556"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 14:36:17.556" endtime="20220704 14:36:17.556"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:36:17.557" level="INFO">${url} = lists/</msg>
<status status="PASS" starttime="20220704 14:36:17.556" endtime="20220704 14:36:17.557"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 14:36:17.643" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:36:17.557" endtime="20220704 14:36:17.643"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:36:17.643" endtime="20220704 14:36:17.643"/>
</return>
<msg timestamp="20220704 14:36:17.643" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:36:17.555" endtime="20220704 14:36:17.643"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:36:17.643" endtime="20220704 14:36:17.643"/>
</return>
<msg timestamp="20220704 14:36:17.644" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:36:17.553" endtime="20220704 14:36:17.644"/>
</kw>
<kw name="Archive A List" library="List">
<arg>${response.json()}[id]</arg>
<doc>Deletes the list with the given ID</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>archive_list</arg>
<arg>${id}</arg>
<arg>value</arg>
<arg>true</arg>
<arg>status_code=${status_code}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 14:36:17.646" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 14:36:17.645" endtime="20220704 14:36:17.646"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 14:36:17.646" endtime="20220704 14:36:17.646"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:36:17.646" level="INFO">${url} = lists/62c2fae15478895d0792ddf0/closed</msg>
<status status="PASS" starttime="20220704 14:36:17.646" endtime="20220704 14:36:17.647"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 14:36:17.744" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:36:17.647" endtime="20220704 14:36:17.744"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:36:17.744" endtime="20220704 14:36:17.744"/>
</return>
<msg timestamp="20220704 14:36:17.745" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:36:17.645" endtime="20220704 14:36:17.745"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:36:17.745" endtime="20220704 14:36:17.745"/>
</return>
<status status="PASS" starttime="20220704 14:36:17.644" endtime="20220704 14:36:17.745"/>
</kw>
<kw name="Get A List" library="List">
<var>${new_response}</var>
<arg>${response.json()}[id]</arg>
<doc>Gets the List with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>list</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:36:17.747" level="INFO">${url} = lists/62c2fae15478895d0792ddf0</msg>
<status status="PASS" starttime="20220704 14:36:17.747" endtime="20220704 14:36:17.747"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 14:36:17.783" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:36:17.747" endtime="20220704 14:36:17.783"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:36:17.783" endtime="20220704 14:36:17.783"/>
</return>
<msg timestamp="20220704 14:36:17.783" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:36:17.746" endtime="20220704 14:36:17.783"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:36:17.784" endtime="20220704 14:36:17.784"/>
</return>
<msg timestamp="20220704 14:36:17.784" level="INFO">${new_response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:36:17.745" endtime="20220704 14:36:17.784"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${new_response.json()}[closed]</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220704 14:36:17.784" endtime="20220704 14:36:17.785"/>
</kw>
<doc>Verify that a list can be archived through API</doc>
<tag>api</tag>
<tag>list.archive</tag>
<tag>regression</tag>
<status status="PASS" starttime="20220704 14:36:17.553" endtime="20220704 14:36:17.785"/>
</test>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Teardown Board</arg>
<arg>Delete All Sessions</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Teardown Board">
<doc>Delete the board created for this suite.</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:36:17.788" level="INFO">${url} = boards/62c2fae18d3aa34572397714</msg>
<status status="PASS" starttime="20220704 14:36:17.787" endtime="20220704 14:36:17.788"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 14:36:18.107" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:36:17.788" endtime="20220704 14:36:18.107"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:36:18.107" endtime="20220704 14:36:18.107"/>
</return>
<msg timestamp="20220704 14:36:18.107" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:36:17.787" endtime="20220704 14:36:18.107"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:36:18.107" endtime="20220704 14:36:18.107"/>
</return>
<status status="PASS" starttime="20220704 14:36:17.787" endtime="20220704 14:36:18.107"/>
</kw>
<status status="PASS" starttime="20220704 14:36:17.786" endtime="20220704 14:36:18.107"/>
</kw>
<status status="PASS" starttime="20220704 14:36:17.786" endtime="20220704 14:36:18.108"/>
</kw>
<kw name="Delete All Sessions" library="request_own_library">
<status status="PASS" starttime="20220704 14:36:18.108" endtime="20220704 14:36:18.109"/>
</kw>
<status status="PASS" starttime="20220704 14:36:17.785" endtime="20220704 14:36:18.109"/>
</kw>
<doc>Example Test with Trello API lists</doc>
<status status="PASS" starttime="20220704 14:36:16.988" endtime="20220704 14:36:18.109"/>
</suite>
<status status="PASS" starttime="20220704 14:36:07.582" endtime="20220704 14:36:18.111"/>
</suite>
<status status="PASS" starttime="20220704 14:36:07.565" endtime="20220704 14:36:18.115"/>
</suite>
<suite id="s1-s4" name="Trello" source="/trello">
<suite id="s1-s4-s1" name="Gui" source="/trello/gui">
<suite id="s1-s4-s1-s1" name="Trello Gui Board" source="/trello/gui/trello_gui_board.robot">
<kw name="Boards Suite Setup" type="SETUP">
<doc>Creates a Trello Sesion in order to use api's keywords.</doc>
<kw name="Create Trello Session" library="TrelloAPI">
<doc>Creates a Trello Session</doc>
<kw name="Create Session" library="request_own_library">
<arg>${API_BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<status status="PASS" starttime="20220704 14:36:56.117" endtime="20220704 14:36:56.117"/>
</kw>
<status status="PASS" starttime="20220704 14:36:56.117" endtime="20220704 14:36:56.118"/>
</kw>
<status status="PASS" starttime="20220704 14:36:56.116" endtime="20220704 14:36:56.118"/>
</kw>
<test id="s1-s4-s1-s1-t1" name="create a board" line="12">
<kw name="Open Browser From Environment" library="CommonGUI">
<arg>${LOGIN_URL}</arg>
<doc>This keywords takes REMOTE and BROWSER variables
from the environment automatically and only needs a url</doc>
<if>
<branch type="IF" condition="${is_remote}">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${url}</arg>
<arg>${BROWSER}</arg>
<arg>remote_url=http://selenium-hub:4444</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20220704 14:36:56.120" level="INFO">Opening browser 'chrome' to base url 'https://trello.com/login' through remote server at 'http://selenium-hub:4444'.</msg>
<status status="PASS" starttime="20220704 14:36:56.119" endtime="20220704 14:36:58.177"/>
</kw>
<status status="PASS" starttime="20220704 14:36:56.119" endtime="20220704 14:36:58.177"/>
</branch>
<branch type="ELSE">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${url}</arg>
<arg>${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<status status="NOT RUN" starttime="20220704 14:36:58.177" endtime="20220704 14:36:58.177"/>
</kw>
<status status="NOT RUN" starttime="20220704 14:36:58.177" endtime="20220704 14:36:58.177"/>
</branch>
<status status="PASS" starttime="20220704 14:36:56.119" endtime="20220704 14:36:58.178"/>
</if>
<status status="PASS" starttime="20220704 14:36:56.119" endtime="20220704 14:36:58.178"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20220704 14:36:58.178" endtime="20220704 14:36:58.302"/>
</kw>
<kw name="Login To Trello" library="LoginPage">
<arg>${DEFAULT_EMAIL}</arg>
<arg>${DEFAULT_PASSWORD}</arg>
<doc>High-level keyword for logging in to Trello</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220704 14:36:58.320" level="INFO">${url} = https://trello.com/login</msg>
<status status="PASS" starttime="20220704 14:36:58.303" endtime="20220704 14:36:58.320"/>
</kw>
<if>
<branch type="IF" condition="'${url}' != '${LOGIN_URL}'">
<kw name="Go To" library="SeleniumLibrary">
<arg>${LOGIN_URL}</arg>
<doc>Navigates the current browser window to the provided ``url``.</doc>
<status status="NOT RUN" starttime="20220704 14:36:58.321" endtime="20220704 14:36:58.321"/>
</kw>
<status status="NOT RUN" starttime="20220704 14:36:58.321" endtime="20220704 14:36:58.321"/>
</branch>
<status status="PASS" starttime="20220704 14:36:58.320" endtime="20220704 14:36:58.321"/>
</if>
<kw name="Enter Username" library="LoginPage">
<arg>${username}</arg>
<doc>Take a username as argument and
enters it in the user_input</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${USER_INPUT}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 14:36:58.321" endtime="20220704 14:36:58.382"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${USER_INPUT}</arg>
<arg>${username}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220704 14:36:58.383" level="INFO">Typing text 'bootcamp04@mailinator.com' into text field 'css:input#user'.</msg>
<status status="PASS" starttime="20220704 14:36:58.383" endtime="20220704 14:36:58.549"/>
</kw>
<status status="PASS" starttime="20220704 14:36:58.321" endtime="20220704 14:36:58.549"/>
</kw>
<kw name="Wait Until Element Is Not Visible" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<doc>Waits until the element ``locator`` is not visible.</doc>
<status status="PASS" starttime="20220704 14:36:58.549" endtime="20220704 14:36:59.124"/>
</kw>
<kw name="Click Login Button" library="LoginPage">
<doc>Clicks Trello's login button if in Trello's
login page, else it clicks Atlassian's</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220704 14:36:59.146" level="INFO">${url} = https://trello.com/login</msg>
<status status="PASS" starttime="20220704 14:36:59.124" endtime="20220704 14:36:59.146"/>
</kw>
<if>
<branch type="IF" condition="'${url}' == '${LOGIN_URL}'">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220704 14:36:59.147" endtime="20220704 14:36:59.222"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220704 14:36:59.223" level="INFO">Clicking button 'css:input#login'.</msg>
<status status="PASS" starttime="20220704 14:36:59.223" endtime="20220704 14:37:00.049"/>
</kw>
<status status="PASS" starttime="20220704 14:36:59.147" endtime="20220704 14:37:00.049"/>
</branch>
<branch type="ELSE">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="NOT RUN" starttime="20220704 14:37:00.050" endtime="20220704 14:37:00.050"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<status status="NOT RUN" starttime="20220704 14:37:00.050" endtime="20220704 14:37:00.050"/>
</kw>
<status status="NOT RUN" starttime="20220704 14:37:00.050" endtime="20220704 14:37:00.050"/>
</branch>
<status status="PASS" starttime="20220704 14:36:59.146" endtime="20220704 14:37:00.050"/>
</if>
<status status="PASS" starttime="20220704 14:36:59.124" endtime="20220704 14:37:00.050"/>
</kw>
<kw name="Wait Until Location Is Atlassian's Login" library="LoginPage">
<doc>Waits for the page redirection when logging in.</doc>
<kw name="Wait Until Location Contains" library="SeleniumLibrary">
<arg>atlassian.com</arg>
<doc>Waits until the current URL contains ``expected``.</doc>
<status status="PASS" starttime="20220704 14:37:00.051" endtime="20220704 14:37:00.087"/>
</kw>
<status status="PASS" starttime="20220704 14:37:00.050" endtime="20220704 14:37:00.087"/>
</kw>
<kw name="Enter Password" library="LoginPage">
<arg>${password}</arg>
<doc>Take a password as argument and
enters it in the password_input</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<arg>timeout=10</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 14:37:00.088" endtime="20220704 14:37:00.161"/>
</kw>
<kw name="Input Password" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<arg>${password}</arg>
<doc>Types the given password into the text field identified by ``locator``.</doc>
<msg timestamp="20220704 14:37:00.162" level="INFO">Typing password into text field 'css:input#password'.</msg>
<msg timestamp="20220704 14:37:00.238" level="INFO">Temporally setting log level to: NONE</msg>
<msg timestamp="20220704 14:37:00.320" level="INFO">Log level changed from NONE to INFO.</msg>
<status status="PASS" starttime="20220704 14:37:00.162" endtime="20220704 14:37:00.320"/>
</kw>
<status status="PASS" starttime="20220704 14:37:00.088" endtime="20220704 14:37:00.320"/>
</kw>
<kw name="Click Login Button" library="LoginPage">
<doc>Clicks Trello's login button if in Trello's
login page, else it clicks Atlassian's</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220704 14:37:00.340" level="INFO">${url} = https://id.atlassian.com/login?application=trello&amp;continue=https%3A%2F%2Ftrello.com%2Fauth%2Fatlassian%2Fcallback%3FreturnUrl%3D%252F%26display%3D%26aaOnboarding%3D%26updateEmail%3D%26traceId%3D62c2fb...</msg>
<status status="PASS" starttime="20220704 14:37:00.321" endtime="20220704 14:37:00.340"/>
</kw>
<if>
<branch type="IF" condition="'${url}' == '${LOGIN_URL}'">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="NOT RUN" starttime="20220704 14:37:00.341" endtime="20220704 14:37:00.341"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<status status="NOT RUN" starttime="20220704 14:37:00.341" endtime="20220704 14:37:00.341"/>
</kw>
<status status="NOT RUN" starttime="20220704 14:37:00.341" endtime="20220704 14:37:00.341"/>
</branch>
<branch type="ELSE">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220704 14:37:00.341" endtime="20220704 14:37:00.411"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220704 14:37:00.411" level="INFO">Clicking button 'css:button#login-submit'.</msg>
<status status="PASS" starttime="20220704 14:37:00.411" endtime="20220704 14:37:00.546"/>
</kw>
<status status="PASS" starttime="20220704 14:37:00.341" endtime="20220704 14:37:00.546"/>
</branch>
<status status="PASS" starttime="20220704 14:37:00.341" endtime="20220704 14:37:00.546"/>
</if>
<status status="PASS" starttime="20220704 14:37:00.320" endtime="20220704 14:37:00.546"/>
</kw>
<status status="PASS" starttime="20220704 14:36:58.302" endtime="20220704 14:37:00.546"/>
</kw>
<kw name="Click New Board Button" library="BoardsPage">
<doc>Clicks the button that creates a new board.</doc>
<kw name="Wait Until Location Contains" library="SeleniumLibrary">
<arg>${BOARDS_PATH}</arg>
<doc>Waits until the current URL contains ``expected``.</doc>
<status status="PASS" starttime="20220704 14:37:00.547" endtime="20220704 14:37:03.577"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Click Element</arg>
<arg>${CREATE_NEW_BOARD_BUTTON}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${CREATE_NEW_BOARD_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 14:37:03.578" level="INFO">Clicking element 'xpath://div[@class="boards-page-board-section mod-no-sidebar"]//div[@class="board-tile mod-add"]'.</msg>
<status status="PASS" starttime="20220704 14:37:03.577" endtime="20220704 14:37:03.705"/>
</kw>
<status status="PASS" starttime="20220704 14:37:03.577" endtime="20220704 14:37:03.706"/>
</kw>
<status status="PASS" starttime="20220704 14:37:00.547" endtime="20220704 14:37:03.706"/>
</kw>
<kw name="Set Name to Board" library="BoardsPage">
<arg>NewName</arg>
<doc>Set the name of the board and press the create button</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${BOARD_NAME_INPUT}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 14:37:03.706" endtime="20220704 14:37:04.047"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${BOARD_NAME_INPUT}</arg>
<arg>${name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220704 14:37:04.048" level="INFO">Typing text 'NewName' into text field 'xpath://div[@title='Create board']/ancestor::section//input[@type="text"]'.</msg>
<status status="PASS" starttime="20220704 14:37:04.047" endtime="20220704 14:37:04.235"/>
</kw>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${CREATE_BUTTON}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220704 14:37:04.235" endtime="20220704 14:37:04.306"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${CREATE_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 14:37:04.306" level="INFO">Clicking element 'xpath://div[@title='Create board']/ancestor::section//button[text()='Create']'.</msg>
<status status="PASS" starttime="20220704 14:37:04.306" endtime="20220704 14:37:04.384"/>
</kw>
<status status="PASS" starttime="20220704 14:37:03.706" endtime="20220704 14:37:04.384"/>
</kw>
<kw name="Verify Name of Board" library="UpperHorizontalMenu">
<arg>NewName</arg>
<doc>Verifies the name of a board</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${NAME_OF_BOARD}</arg>
<arg>10</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 14:37:04.385" endtime="20220704 14:37:05.571"/>
</kw>
<kw name="Element Text Should Be" library="SeleniumLibrary">
<arg>${NAME_OF_BOARD}</arg>
<arg>${name}</arg>
<doc>Verifies that element ``locator`` contains exact the text ``expected``.</doc>
<msg timestamp="20220704 14:37:05.572" level="INFO">Verifying element 'xpath://h1[contains(@class, 'js-board-editing-target')]' contains exact text 'NewName'.</msg>
<status status="PASS" starttime="20220704 14:37:05.572" endtime="20220704 14:37:05.629"/>
</kw>
<status status="PASS" starttime="20220704 14:37:04.384" endtime="20220704 14:37:05.629"/>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Open Show Menu</arg>
<arg>Delete Current Board</arg>
<arg>Close Browser</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Open Show Menu" library="UpperHorizontalMenu">
<doc>Open the Show Menu in the right side of the board page where multiple options are available</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${SHOW_MENU_BUTTON}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 14:37:05.630" endtime="20220704 14:37:05.696"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${SHOW_MENU_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 14:37:05.697" level="INFO">Clicking element 'xpath://div[contains(@class, 'board-header')]//a[contains(., 'Show menu')]'.</msg>
<status status="PASS" starttime="20220704 14:37:05.697" endtime="20220704 14:37:05.786"/>
</kw>
<status status="PASS" starttime="20220704 14:37:05.630" endtime="20220704 14:37:05.787"/>
</kw>
<kw name="Delete Current Board" library="ShownMenu">
<doc>Deletes the current board</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${MORE_BUTTON}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 14:37:05.787" endtime="20220704 14:37:05.870"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${MORE_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 14:37:05.870" level="INFO">Clicking element 'xpath://div[contains(@class, 'board-menu-content')]//a[contains(text(), 'More')]'.</msg>
<status status="PASS" starttime="20220704 14:37:05.870" endtime="20220704 14:37:06.059"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${CLOSE_BOARD_BUTTON}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 14:37:06.059" endtime="20220704 14:37:06.400"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${CLOSE_BOARD_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 14:37:06.400" level="INFO">Clicking element 'xpath://div[@class= 'board-menu-content-frame']//a[contains(text(), 'Close board')]'.</msg>
<status status="PASS" starttime="20220704 14:37:06.400" endtime="20220704 14:37:06.466"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${CLOSE_BUTTON}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 14:37:06.467" endtime="20220704 14:37:06.549"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${CLOSE_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 14:37:06.550" level="INFO">Clicking element 'xpath://div[@class= 'no-back']//input'.</msg>
<status status="PASS" starttime="20220704 14:37:06.549" endtime="20220704 14:37:06.662"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${PERMANENTLY_DELETE_BUTTON}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 14:37:06.662" endtime="20220704 14:37:06.953"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${PERMANENTLY_DELETE_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 14:37:06.954" level="INFO">Clicking element 'xpath://button[text()= 'Permanently delete board']'.</msg>
<status status="PASS" starttime="20220704 14:37:06.954" endtime="20220704 14:37:07.034"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${CONFIRM_DELETE_BUTTON}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 14:37:07.034" endtime="20220704 14:37:07.074"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${CONFIRM_DELETE_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 14:37:07.075" level="INFO">Clicking element 'xpath://section//button[text()= 'Delete']'.</msg>
<status status="PASS" starttime="20220704 14:37:07.075" endtime="20220704 14:37:07.148"/>
</kw>
<status status="PASS" starttime="20220704 14:37:05.787" endtime="20220704 14:37:07.148"/>
</kw>
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20220704 14:37:07.149" endtime="20220704 14:37:07.238"/>
</kw>
<status status="PASS" starttime="20220704 14:37:05.630" endtime="20220704 14:37:07.238"/>
</kw>
<doc>Verify that a board can be created through GUI</doc>
<tag>board.create</tag>
<tag>gui</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220704 14:36:56.118" endtime="20220704 14:37:07.238"/>
</test>
<test id="s1-s4-s1-s1-t2" name="delete a board" line="26">
<kw name="Create A Board" library="Board">
<var>${BOARD}</var>
<arg>NewName</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 14:37:07.243" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 14:37:07.243" endtime="20220704 14:37:07.243"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 14:37:07.243" endtime="20220704 14:37:07.243"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:37:07.245" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220704 14:37:07.243" endtime="20220704 14:37:07.245"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 14:37:07.438" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:37:07.245" endtime="20220704 14:37:07.438"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:37:07.438" endtime="20220704 14:37:07.438"/>
</return>
<msg timestamp="20220704 14:37:07.439" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:37:07.242" endtime="20220704 14:37:07.439"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:37:07.439" endtime="20220704 14:37:07.439"/>
</return>
<msg timestamp="20220704 14:37:07.439" level="INFO">${BOARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:37:07.242" endtime="20220704 14:37:07.439"/>
</kw>
<kw name="Open Browser From Environment" library="CommonGUI">
<arg>${LOGIN_URL}</arg>
<doc>This keywords takes REMOTE and BROWSER variables
from the environment automatically and only needs a url</doc>
<if>
<branch type="IF" condition="${is_remote}">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${url}</arg>
<arg>${BROWSER}</arg>
<arg>remote_url=http://selenium-hub:4444</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20220704 14:37:07.440" level="INFO">Opening browser 'chrome' to base url 'https://trello.com/login' through remote server at 'http://selenium-hub:4444'.</msg>
<status status="PASS" starttime="20220704 14:37:07.440" endtime="20220704 14:37:08.516"/>
</kw>
<status status="PASS" starttime="20220704 14:37:07.440" endtime="20220704 14:37:08.516"/>
</branch>
<branch type="ELSE">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${url}</arg>
<arg>${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<status status="NOT RUN" starttime="20220704 14:37:08.516" endtime="20220704 14:37:08.516"/>
</kw>
<status status="NOT RUN" starttime="20220704 14:37:08.516" endtime="20220704 14:37:08.516"/>
</branch>
<status status="PASS" starttime="20220704 14:37:07.440" endtime="20220704 14:37:08.516"/>
</if>
<status status="PASS" starttime="20220704 14:37:07.439" endtime="20220704 14:37:08.517"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20220704 14:37:08.517" endtime="20220704 14:37:08.645"/>
</kw>
<kw name="Login To Trello" library="LoginPage">
<arg>${DEFAULT_EMAIL}</arg>
<arg>${DEFAULT_PASSWORD}</arg>
<doc>High-level keyword for logging in to Trello</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220704 14:37:08.662" level="INFO">${url} = https://trello.com/login</msg>
<status status="PASS" starttime="20220704 14:37:08.646" endtime="20220704 14:37:08.662"/>
</kw>
<if>
<branch type="IF" condition="'${url}' != '${LOGIN_URL}'">
<kw name="Go To" library="SeleniumLibrary">
<arg>${LOGIN_URL}</arg>
<doc>Navigates the current browser window to the provided ``url``.</doc>
<status status="NOT RUN" starttime="20220704 14:37:08.663" endtime="20220704 14:37:08.663"/>
</kw>
<status status="NOT RUN" starttime="20220704 14:37:08.662" endtime="20220704 14:37:08.663"/>
</branch>
<status status="PASS" starttime="20220704 14:37:08.662" endtime="20220704 14:37:08.663"/>
</if>
<kw name="Enter Username" library="LoginPage">
<arg>${username}</arg>
<doc>Take a username as argument and
enters it in the user_input</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${USER_INPUT}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 14:37:08.663" endtime="20220704 14:37:08.712"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${USER_INPUT}</arg>
<arg>${username}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220704 14:37:08.713" level="INFO">Typing text 'bootcamp04@mailinator.com' into text field 'css:input#user'.</msg>
<status status="PASS" starttime="20220704 14:37:08.713" endtime="20220704 14:37:08.840"/>
</kw>
<status status="PASS" starttime="20220704 14:37:08.663" endtime="20220704 14:37:08.840"/>
</kw>
<kw name="Wait Until Element Is Not Visible" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<doc>Waits until the element ``locator`` is not visible.</doc>
<status status="PASS" starttime="20220704 14:37:08.840" endtime="20220704 14:37:09.412"/>
</kw>
<kw name="Click Login Button" library="LoginPage">
<doc>Clicks Trello's login button if in Trello's
login page, else it clicks Atlassian's</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220704 14:37:09.424" level="INFO">${url} = https://trello.com/login</msg>
<status status="PASS" starttime="20220704 14:37:09.413" endtime="20220704 14:37:09.424"/>
</kw>
<if>
<branch type="IF" condition="'${url}' == '${LOGIN_URL}'">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220704 14:37:09.424" endtime="20220704 14:37:09.476"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220704 14:37:09.477" level="INFO">Clicking button 'css:input#login'.</msg>
<status status="PASS" starttime="20220704 14:37:09.477" endtime="20220704 14:37:10.235"/>
</kw>
<status status="PASS" starttime="20220704 14:37:09.424" endtime="20220704 14:37:10.235"/>
</branch>
<branch type="ELSE">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="NOT RUN" starttime="20220704 14:37:10.236" endtime="20220704 14:37:10.236"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<status status="NOT RUN" starttime="20220704 14:37:10.236" endtime="20220704 14:37:10.236"/>
</kw>
<status status="NOT RUN" starttime="20220704 14:37:10.235" endtime="20220704 14:37:10.236"/>
</branch>
<status status="PASS" starttime="20220704 14:37:09.424" endtime="20220704 14:37:10.236"/>
</if>
<status status="PASS" starttime="20220704 14:37:09.412" endtime="20220704 14:37:10.236"/>
</kw>
<kw name="Wait Until Location Is Atlassian's Login" library="LoginPage">
<doc>Waits for the page redirection when logging in.</doc>
<kw name="Wait Until Location Contains" library="SeleniumLibrary">
<arg>atlassian.com</arg>
<doc>Waits until the current URL contains ``expected``.</doc>
<status status="PASS" starttime="20220704 14:37:10.236" endtime="20220704 14:37:10.268"/>
</kw>
<status status="PASS" starttime="20220704 14:37:10.236" endtime="20220704 14:37:10.268"/>
</kw>
<kw name="Enter Password" library="LoginPage">
<arg>${password}</arg>
<doc>Take a password as argument and
enters it in the password_input</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<arg>timeout=10</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 14:37:10.269" endtime="20220704 14:37:10.332"/>
</kw>
<kw name="Input Password" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<arg>${password}</arg>
<doc>Types the given password into the text field identified by ``locator``.</doc>
<msg timestamp="20220704 14:37:10.332" level="INFO">Typing password into text field 'css:input#password'.</msg>
<msg timestamp="20220704 14:37:10.402" level="INFO">Temporally setting log level to: NONE</msg>
<msg timestamp="20220704 14:37:10.484" level="INFO">Log level changed from NONE to INFO.</msg>
<status status="PASS" starttime="20220704 14:37:10.332" endtime="20220704 14:37:10.485"/>
</kw>
<status status="PASS" starttime="20220704 14:37:10.268" endtime="20220704 14:37:10.485"/>
</kw>
<kw name="Click Login Button" library="LoginPage">
<doc>Clicks Trello's login button if in Trello's
login page, else it clicks Atlassian's</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220704 14:37:10.500" level="INFO">${url} = https://id.atlassian.com/login?application=trello&amp;continue=https%3A%2F%2Ftrello.com%2Fauth%2Fatlassian%2Fcallback%3FreturnUrl%3D%252F%26display%3D%26aaOnboarding%3D%26updateEmail%3D%26traceId%3D62c2fb...</msg>
<status status="PASS" starttime="20220704 14:37:10.485" endtime="20220704 14:37:10.500"/>
</kw>
<if>
<branch type="IF" condition="'${url}' == '${LOGIN_URL}'">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="NOT RUN" starttime="20220704 14:37:10.500" endtime="20220704 14:37:10.500"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<status status="NOT RUN" starttime="20220704 14:37:10.501" endtime="20220704 14:37:10.501"/>
</kw>
<status status="NOT RUN" starttime="20220704 14:37:10.500" endtime="20220704 14:37:10.501"/>
</branch>
<branch type="ELSE">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220704 14:37:10.501" endtime="20220704 14:37:10.590"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220704 14:37:10.590" level="INFO">Clicking button 'css:button#login-submit'.</msg>
<status status="PASS" starttime="20220704 14:37:10.590" endtime="20220704 14:37:10.734"/>
</kw>
<status status="PASS" starttime="20220704 14:37:10.501" endtime="20220704 14:37:10.734"/>
</branch>
<status status="PASS" starttime="20220704 14:37:10.500" endtime="20220704 14:37:10.734"/>
</if>
<status status="PASS" starttime="20220704 14:37:10.485" endtime="20220704 14:37:10.734"/>
</kw>
<status status="PASS" starttime="20220704 14:37:08.645" endtime="20220704 14:37:10.734"/>
</kw>
<kw name="Go To Board" library="BoardsPage">
<arg>NewName</arg>
<doc>Receives the board name and goes to that board's page.</doc>
<kw name="Format String" library="String">
<var>${locator}</var>
<arg>${BOARD_BUTTON}</arg>
<arg>${board_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:37:10.735" level="INFO">${locator} = //div[@title="NewName"]</msg>
<status status="PASS" starttime="20220704 14:37:10.735" endtime="20220704 14:37:10.735"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 14:37:10.735" endtime="20220704 14:37:13.574"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 14:37:13.574" level="INFO">Clicking element '//div[@title="NewName"]'.</msg>
<status status="PASS" starttime="20220704 14:37:13.574" endtime="20220704 14:37:13.946"/>
</kw>
<status status="PASS" starttime="20220704 14:37:10.734" endtime="20220704 14:37:13.947"/>
</kw>
<kw name="Verify Name of Board" library="UpperHorizontalMenu">
<arg>NewName</arg>
<doc>Verifies the name of a board</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${NAME_OF_BOARD}</arg>
<arg>10</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 14:37:13.947" endtime="20220704 14:37:14.444"/>
</kw>
<kw name="Element Text Should Be" library="SeleniumLibrary">
<arg>${NAME_OF_BOARD}</arg>
<arg>${name}</arg>
<doc>Verifies that element ``locator`` contains exact the text ``expected``.</doc>
<msg timestamp="20220704 14:37:14.444" level="INFO">Verifying element 'xpath://h1[contains(@class, 'js-board-editing-target')]' contains exact text 'NewName'.</msg>
<status status="PASS" starttime="20220704 14:37:14.444" endtime="20220704 14:37:14.494"/>
</kw>
<status status="PASS" starttime="20220704 14:37:13.947" endtime="20220704 14:37:14.495"/>
</kw>
<kw name="Open Show Menu" library="UpperHorizontalMenu">
<doc>Open the Show Menu in the right side of the board page where multiple options are available</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${SHOW_MENU_BUTTON}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 14:37:14.495" endtime="20220704 14:37:14.560"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${SHOW_MENU_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 14:37:14.561" level="INFO">Clicking element 'xpath://div[contains(@class, 'board-header')]//a[contains(., 'Show menu')]'.</msg>
<status status="PASS" starttime="20220704 14:37:14.561" endtime="20220704 14:37:14.639"/>
</kw>
<status status="PASS" starttime="20220704 14:37:14.495" endtime="20220704 14:37:14.639"/>
</kw>
<kw name="Delete Current Board" library="ShownMenu">
<doc>Deletes the current board</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${MORE_BUTTON}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 14:37:14.640" endtime="20220704 14:37:14.715"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${MORE_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 14:37:14.716" level="INFO">Clicking element 'xpath://div[contains(@class, 'board-menu-content')]//a[contains(text(), 'More')]'.</msg>
<status status="PASS" starttime="20220704 14:37:14.716" endtime="20220704 14:37:14.950"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${CLOSE_BOARD_BUTTON}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 14:37:14.950" endtime="20220704 14:37:15.015"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${CLOSE_BOARD_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 14:37:15.016" level="INFO">Clicking element 'xpath://div[@class= 'board-menu-content-frame']//a[contains(text(), 'Close board')]'.</msg>
<status status="PASS" starttime="20220704 14:37:15.015" endtime="20220704 14:37:15.128"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${CLOSE_BUTTON}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 14:37:15.128" endtime="20220704 14:37:15.176"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${CLOSE_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 14:37:15.176" level="INFO">Clicking element 'xpath://div[@class= 'no-back']//input'.</msg>
<status status="PASS" starttime="20220704 14:37:15.176" endtime="20220704 14:37:15.287"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${PERMANENTLY_DELETE_BUTTON}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 14:37:15.288" endtime="20220704 14:37:15.553"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${PERMANENTLY_DELETE_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 14:37:15.554" level="INFO">Clicking element 'xpath://button[text()= 'Permanently delete board']'.</msg>
<status status="PASS" starttime="20220704 14:37:15.554" endtime="20220704 14:37:15.629"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${CONFIRM_DELETE_BUTTON}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 14:37:15.630" endtime="20220704 14:37:15.664"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${CONFIRM_DELETE_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 14:37:15.665" level="INFO">Clicking element 'xpath://section//button[text()= 'Delete']'.</msg>
<status status="PASS" starttime="20220704 14:37:15.665" endtime="20220704 14:37:15.741"/>
</kw>
<status status="PASS" starttime="20220704 14:37:14.639" endtime="20220704 14:37:15.741"/>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Close Browser</arg>
<arg>AND</arg>
<arg>Run Keyword If Test Failed</arg>
<arg>Wait Until Keyword Succeeds</arg>
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20220704 14:37:15.742" endtime="20220704 14:37:15.835"/>
</kw>
<kw name="Run Keyword If Test Failed" library="BuiltIn">
<arg>Wait Until Keyword Succeeds</arg>
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Runs the given keyword with the given arguments, if the test failed.</doc>
<status status="PASS" starttime="20220704 14:37:15.835" endtime="20220704 14:37:15.835"/>
</kw>
<status status="PASS" starttime="20220704 14:37:15.741" endtime="20220704 14:37:15.835"/>
</kw>
<doc>Verify that a board can be deleted through GUI</doc>
<tag>board.delete</tag>
<tag>gui</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220704 14:37:07.241" endtime="20220704 14:37:15.835"/>
</test>
<test id="s1-s4-s1-s1-t3" name="Update a board's description" line="41">
<kw name="Create A Board" library="Board">
<var>${BOARD}</var>
<arg>BoardNew</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 14:37:15.838" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 14:37:15.838" endtime="20220704 14:37:15.838"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 14:37:15.838" endtime="20220704 14:37:15.839"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:37:15.840" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220704 14:37:15.839" endtime="20220704 14:37:15.840"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 14:37:16.002" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:37:15.840" endtime="20220704 14:37:16.002"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:37:16.002" endtime="20220704 14:37:16.002"/>
</return>
<msg timestamp="20220704 14:37:16.002" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:37:15.838" endtime="20220704 14:37:16.002"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:37:16.002" endtime="20220704 14:37:16.002"/>
</return>
<msg timestamp="20220704 14:37:16.002" level="INFO">${BOARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:37:15.837" endtime="20220704 14:37:16.002"/>
</kw>
<kw name="Open Browser From Environment" library="CommonGUI">
<arg>${LOGIN_URL}</arg>
<doc>This keywords takes REMOTE and BROWSER variables
from the environment automatically and only needs a url</doc>
<if>
<branch type="IF" condition="${is_remote}">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${url}</arg>
<arg>${BROWSER}</arg>
<arg>remote_url=http://selenium-hub:4444</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20220704 14:37:16.004" level="INFO">Opening browser 'chrome' to base url 'https://trello.com/login' through remote server at 'http://selenium-hub:4444'.</msg>
<status status="PASS" starttime="20220704 14:37:16.003" endtime="20220704 14:37:17.549"/>
</kw>
<status status="PASS" starttime="20220704 14:37:16.003" endtime="20220704 14:37:17.549"/>
</branch>
<branch type="ELSE">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${url}</arg>
<arg>${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<status status="NOT RUN" starttime="20220704 14:37:17.550" endtime="20220704 14:37:17.550"/>
</kw>
<status status="NOT RUN" starttime="20220704 14:37:17.549" endtime="20220704 14:37:17.550"/>
</branch>
<status status="PASS" starttime="20220704 14:37:16.003" endtime="20220704 14:37:17.550"/>
</if>
<status status="PASS" starttime="20220704 14:37:16.003" endtime="20220704 14:37:17.550"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20220704 14:37:17.550" endtime="20220704 14:37:17.681"/>
</kw>
<kw name="Login To Trello" library="LoginPage">
<arg>${DEFAULT_EMAIL}</arg>
<arg>${DEFAULT_PASSWORD}</arg>
<doc>High-level keyword for logging in to Trello</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220704 14:37:17.693" level="INFO">${url} = https://trello.com/login</msg>
<status status="PASS" starttime="20220704 14:37:17.682" endtime="20220704 14:37:17.693"/>
</kw>
<if>
<branch type="IF" condition="'${url}' != '${LOGIN_URL}'">
<kw name="Go To" library="SeleniumLibrary">
<arg>${LOGIN_URL}</arg>
<doc>Navigates the current browser window to the provided ``url``.</doc>
<status status="NOT RUN" starttime="20220704 14:37:17.693" endtime="20220704 14:37:17.693"/>
</kw>
<status status="NOT RUN" starttime="20220704 14:37:17.693" endtime="20220704 14:37:17.693"/>
</branch>
<status status="PASS" starttime="20220704 14:37:17.693" endtime="20220704 14:37:17.693"/>
</if>
<kw name="Enter Username" library="LoginPage">
<arg>${username}</arg>
<doc>Take a username as argument and
enters it in the user_input</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${USER_INPUT}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 14:37:17.694" endtime="20220704 14:37:17.732"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${USER_INPUT}</arg>
<arg>${username}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220704 14:37:17.733" level="INFO">Typing text 'bootcamp04@mailinator.com' into text field 'css:input#user'.</msg>
<status status="PASS" starttime="20220704 14:37:17.733" endtime="20220704 14:37:17.863"/>
</kw>
<status status="PASS" starttime="20220704 14:37:17.693" endtime="20220704 14:37:17.863"/>
</kw>
<kw name="Wait Until Element Is Not Visible" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<doc>Waits until the element ``locator`` is not visible.</doc>
<status status="PASS" starttime="20220704 14:37:17.863" endtime="20220704 14:37:18.622"/>
</kw>
<kw name="Click Login Button" library="LoginPage">
<doc>Clicks Trello's login button if in Trello's
login page, else it clicks Atlassian's</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220704 14:37:18.635" level="INFO">${url} = https://trello.com/login</msg>
<status status="PASS" starttime="20220704 14:37:18.622" endtime="20220704 14:37:18.635"/>
</kw>
<if>
<branch type="IF" condition="'${url}' == '${LOGIN_URL}'">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220704 14:37:18.635" endtime="20220704 14:37:18.696"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220704 14:37:18.697" level="INFO">Clicking button 'css:input#login'.</msg>
<status status="PASS" starttime="20220704 14:37:18.697" endtime="20220704 14:37:19.464"/>
</kw>
<status status="PASS" starttime="20220704 14:37:18.635" endtime="20220704 14:37:19.464"/>
</branch>
<branch type="ELSE">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="NOT RUN" starttime="20220704 14:37:19.464" endtime="20220704 14:37:19.464"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<status status="NOT RUN" starttime="20220704 14:37:19.464" endtime="20220704 14:37:19.464"/>
</kw>
<status status="NOT RUN" starttime="20220704 14:37:19.464" endtime="20220704 14:37:19.464"/>
</branch>
<status status="PASS" starttime="20220704 14:37:18.635" endtime="20220704 14:37:19.464"/>
</if>
<status status="PASS" starttime="20220704 14:37:18.622" endtime="20220704 14:37:19.464"/>
</kw>
<kw name="Wait Until Location Is Atlassian's Login" library="LoginPage">
<doc>Waits for the page redirection when logging in.</doc>
<kw name="Wait Until Location Contains" library="SeleniumLibrary">
<arg>atlassian.com</arg>
<doc>Waits until the current URL contains ``expected``.</doc>
<status status="PASS" starttime="20220704 14:37:19.465" endtime="20220704 14:37:19.504"/>
</kw>
<status status="PASS" starttime="20220704 14:37:19.465" endtime="20220704 14:37:19.504"/>
</kw>
<kw name="Enter Password" library="LoginPage">
<arg>${password}</arg>
<doc>Take a password as argument and
enters it in the password_input</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<arg>timeout=10</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 14:37:19.505" endtime="20220704 14:37:19.566"/>
</kw>
<kw name="Input Password" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<arg>${password}</arg>
<doc>Types the given password into the text field identified by ``locator``.</doc>
<msg timestamp="20220704 14:37:19.566" level="INFO">Typing password into text field 'css:input#password'.</msg>
<msg timestamp="20220704 14:37:19.666" level="INFO">Temporally setting log level to: NONE</msg>
<msg timestamp="20220704 14:37:19.741" level="INFO">Log level changed from NONE to INFO.</msg>
<status status="PASS" starttime="20220704 14:37:19.566" endtime="20220704 14:37:19.741"/>
</kw>
<status status="PASS" starttime="20220704 14:37:19.504" endtime="20220704 14:37:19.741"/>
</kw>
<kw name="Click Login Button" library="LoginPage">
<doc>Clicks Trello's login button if in Trello's
login page, else it clicks Atlassian's</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220704 14:37:19.753" level="INFO">${url} = https://id.atlassian.com/login?application=trello&amp;continue=https%3A%2F%2Ftrello.com%2Fauth%2Fatlassian%2Fcallback%3FreturnUrl%3D%252F%26display%3D%26aaOnboarding%3D%26updateEmail%3D%26traceId%3D62c2fb...</msg>
<status status="PASS" starttime="20220704 14:37:19.742" endtime="20220704 14:37:19.753"/>
</kw>
<if>
<branch type="IF" condition="'${url}' == '${LOGIN_URL}'">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="NOT RUN" starttime="20220704 14:37:19.753" endtime="20220704 14:37:19.753"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<status status="NOT RUN" starttime="20220704 14:37:19.754" endtime="20220704 14:37:19.754"/>
</kw>
<status status="NOT RUN" starttime="20220704 14:37:19.753" endtime="20220704 14:37:19.754"/>
</branch>
<branch type="ELSE">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220704 14:37:19.754" endtime="20220704 14:37:19.811"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220704 14:37:19.811" level="INFO">Clicking button 'css:button#login-submit'.</msg>
<status status="PASS" starttime="20220704 14:37:19.811" endtime="20220704 14:37:19.918"/>
</kw>
<status status="PASS" starttime="20220704 14:37:19.754" endtime="20220704 14:37:19.918"/>
</branch>
<status status="PASS" starttime="20220704 14:37:19.753" endtime="20220704 14:37:19.918"/>
</if>
<status status="PASS" starttime="20220704 14:37:19.742" endtime="20220704 14:37:19.919"/>
</kw>
<status status="PASS" starttime="20220704 14:37:17.681" endtime="20220704 14:37:19.919"/>
</kw>
<kw name="Go To Board" library="BoardsPage">
<arg>BoardNew</arg>
<doc>Receives the board name and goes to that board's page.</doc>
<kw name="Format String" library="String">
<var>${locator}</var>
<arg>${BOARD_BUTTON}</arg>
<arg>${board_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:37:19.920" level="INFO">${locator} = //div[@title="BoardNew"]</msg>
<status status="PASS" starttime="20220704 14:37:19.919" endtime="20220704 14:37:19.920"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 14:37:19.920" endtime="20220704 14:37:22.728"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 14:37:22.729" level="INFO">Clicking element '//div[@title="BoardNew"]'.</msg>
<status status="PASS" starttime="20220704 14:37:22.729" endtime="20220704 14:37:23.060"/>
</kw>
<status status="PASS" starttime="20220704 14:37:19.919" endtime="20220704 14:37:23.060"/>
</kw>
<kw name="Verify Name of Board" library="UpperHorizontalMenu">
<arg>BoardNew</arg>
<doc>Verifies the name of a board</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${NAME_OF_BOARD}</arg>
<arg>10</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 14:37:23.061" endtime="20220704 14:37:23.625"/>
</kw>
<kw name="Element Text Should Be" library="SeleniumLibrary">
<arg>${NAME_OF_BOARD}</arg>
<arg>${name}</arg>
<doc>Verifies that element ``locator`` contains exact the text ``expected``.</doc>
<msg timestamp="20220704 14:37:23.625" level="INFO">Verifying element 'xpath://h1[contains(@class, 'js-board-editing-target')]' contains exact text 'BoardNew'.</msg>
<status status="PASS" starttime="20220704 14:37:23.625" endtime="20220704 14:37:23.670"/>
</kw>
<status status="PASS" starttime="20220704 14:37:23.060" endtime="20220704 14:37:23.670"/>
</kw>
<kw name="Open Show Menu" library="UpperHorizontalMenu">
<doc>Open the Show Menu in the right side of the board page where multiple options are available</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${SHOW_MENU_BUTTON}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 14:37:23.670" endtime="20220704 14:37:23.717"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${SHOW_MENU_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 14:37:23.718" level="INFO">Clicking element 'xpath://div[contains(@class, 'board-header')]//a[contains(., 'Show menu')]'.</msg>
<status status="PASS" starttime="20220704 14:37:23.718" endtime="20220704 14:37:23.776"/>
</kw>
<status status="PASS" starttime="20220704 14:37:23.670" endtime="20220704 14:37:23.777"/>
</kw>
<kw name="Update Description of Board" library="ShownMenu">
<arg>UpdatedDescription</arg>
<doc>Updates the description of a board</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ABOUT_THIS_BOARD}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 14:37:23.777" endtime="20220704 14:37:23.842"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${ABOUT_THIS_BOARD}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 14:37:23.843" level="INFO">Clicking element 'xpath://div[contains(@class, 'board-menu-content')]//a[contains(text(), 'About')]'.</msg>
<status status="PASS" starttime="20220704 14:37:23.842" endtime="20220704 14:37:23.979"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DESCRIPTION}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 14:37:23.980" endtime="20220704 14:37:24.077"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${DESCRIPTION}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 14:37:24.077" level="INFO">Clicking element 'xpath://a[contains(@class, 'description-fake-text-area')]'.</msg>
<status status="PASS" starttime="20220704 14:37:24.077" endtime="20220704 14:37:24.176"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${DESC_TEXT_AREA}</arg>
<arg>${desc}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220704 14:37:24.176" level="INFO">Typing text 'UpdatedDescription' into text field 'xpath://div[contains(@class, 'board-menu-content')]//textarea'.</msg>
<status status="PASS" starttime="20220704 14:37:24.176" endtime="20220704 14:37:24.327"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${SAVE_DESC_BUTTON}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 14:37:24.327" endtime="20220704 14:37:24.363"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${SAVE_DESC_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 14:37:24.364" level="INFO">Clicking element 'xpath://div[contains(@class, 'board-menu-content')]//input[@value="Save"]'.</msg>
<status status="PASS" starttime="20220704 14:37:24.363" endtime="20220704 14:37:24.457"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${GO_BACK_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 14:37:24.458" level="INFO">Clicking element 'xpath://a[@title="Go back."]'.</msg>
<status status="PASS" starttime="20220704 14:37:24.457" endtime="20220704 14:37:24.549"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${CLOSE_SHOW_MENU}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 14:37:24.549" level="INFO">Clicking element 'xpath://a[@title="Close the board menu."]'.</msg>
<status status="PASS" starttime="20220704 14:37:24.549" endtime="20220704 14:37:24.631"/>
</kw>
<status status="PASS" starttime="20220704 14:37:23.777" endtime="20220704 14:37:24.631"/>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Close Browser</arg>
<arg>AND</arg>
<arg>Wait Until Keyword Succeeds</arg>
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20220704 14:37:24.632" endtime="20220704 14:37:24.725"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${BOARD.json()}[id]</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:37:24.728" level="INFO">${url} = boards/62c2fb1b50819a627f628e36</msg>
<status status="PASS" starttime="20220704 14:37:24.728" endtime="20220704 14:37:24.728"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 14:37:25.104" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:37:24.728" endtime="20220704 14:37:25.105"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:37:25.105" endtime="20220704 14:37:25.105"/>
</return>
<msg timestamp="20220704 14:37:25.105" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:37:24.727" endtime="20220704 14:37:25.105"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:37:25.105" endtime="20220704 14:37:25.105"/>
</return>
<status status="PASS" starttime="20220704 14:37:24.726" endtime="20220704 14:37:25.105"/>
</kw>
<status status="PASS" starttime="20220704 14:37:24.726" endtime="20220704 14:37:25.105"/>
</kw>
<status status="PASS" starttime="20220704 14:37:24.631" endtime="20220704 14:37:25.105"/>
</kw>
<doc>Verify that a board's description can be updated through GUI</doc>
<tag>board.update.description</tag>
<tag>gui</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220704 14:37:15.836" endtime="20220704 14:37:25.105"/>
</test>
<test id="s1-s4-s1-s1-t4" name="Update a board's name" line="56">
<kw name="Create A Board" library="Board">
<var>${BOARD}</var>
<arg>NewBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 14:37:25.108" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 14:37:25.108" endtime="20220704 14:37:25.108"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 14:37:25.108" endtime="20220704 14:37:25.109"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:37:25.110" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220704 14:37:25.109" endtime="20220704 14:37:25.110"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 14:37:25.284" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:37:25.110" endtime="20220704 14:37:25.284"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:37:25.284" endtime="20220704 14:37:25.284"/>
</return>
<msg timestamp="20220704 14:37:25.284" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:37:25.108" endtime="20220704 14:37:25.284"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:37:25.285" endtime="20220704 14:37:25.285"/>
</return>
<msg timestamp="20220704 14:37:25.285" level="INFO">${BOARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:37:25.107" endtime="20220704 14:37:25.285"/>
</kw>
<kw name="Open Browser From Environment" library="CommonGUI">
<arg>${LOGIN_URL}</arg>
<doc>This keywords takes REMOTE and BROWSER variables
from the environment automatically and only needs a url</doc>
<if>
<branch type="IF" condition="${is_remote}">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${url}</arg>
<arg>${BROWSER}</arg>
<arg>remote_url=http://selenium-hub:4444</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20220704 14:37:25.286" level="INFO">Opening browser 'chrome' to base url 'https://trello.com/login' through remote server at 'http://selenium-hub:4444'.</msg>
<status status="PASS" starttime="20220704 14:37:25.286" endtime="20220704 14:37:26.334"/>
</kw>
<status status="PASS" starttime="20220704 14:37:25.286" endtime="20220704 14:37:26.334"/>
</branch>
<branch type="ELSE">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${url}</arg>
<arg>${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<status status="NOT RUN" starttime="20220704 14:37:26.334" endtime="20220704 14:37:26.334"/>
</kw>
<status status="NOT RUN" starttime="20220704 14:37:26.334" endtime="20220704 14:37:26.334"/>
</branch>
<status status="PASS" starttime="20220704 14:37:25.285" endtime="20220704 14:37:26.334"/>
</if>
<status status="PASS" starttime="20220704 14:37:25.285" endtime="20220704 14:37:26.334"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20220704 14:37:26.334" endtime="20220704 14:37:26.458"/>
</kw>
<kw name="Login To Trello" library="LoginPage">
<arg>${DEFAULT_EMAIL}</arg>
<arg>${DEFAULT_PASSWORD}</arg>
<doc>High-level keyword for logging in to Trello</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220704 14:37:26.474" level="INFO">${url} = https://trello.com/login</msg>
<status status="PASS" starttime="20220704 14:37:26.459" endtime="20220704 14:37:26.474"/>
</kw>
<if>
<branch type="IF" condition="'${url}' != '${LOGIN_URL}'">
<kw name="Go To" library="SeleniumLibrary">
<arg>${LOGIN_URL}</arg>
<doc>Navigates the current browser window to the provided ``url``.</doc>
<status status="NOT RUN" starttime="20220704 14:37:26.475" endtime="20220704 14:37:26.475"/>
</kw>
<status status="NOT RUN" starttime="20220704 14:37:26.475" endtime="20220704 14:37:26.475"/>
</branch>
<status status="PASS" starttime="20220704 14:37:26.474" endtime="20220704 14:37:26.475"/>
</if>
<kw name="Enter Username" library="LoginPage">
<arg>${username}</arg>
<doc>Take a username as argument and
enters it in the user_input</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${USER_INPUT}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 14:37:26.476" endtime="20220704 14:37:26.515"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${USER_INPUT}</arg>
<arg>${username}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220704 14:37:26.516" level="INFO">Typing text 'bootcamp04@mailinator.com' into text field 'css:input#user'.</msg>
<status status="PASS" starttime="20220704 14:37:26.515" endtime="20220704 14:37:26.631"/>
</kw>
<status status="PASS" starttime="20220704 14:37:26.475" endtime="20220704 14:37:26.631"/>
</kw>
<kw name="Wait Until Element Is Not Visible" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<doc>Waits until the element ``locator`` is not visible.</doc>
<status status="PASS" starttime="20220704 14:37:26.631" endtime="20220704 14:37:27.386"/>
</kw>
<kw name="Click Login Button" library="LoginPage">
<doc>Clicks Trello's login button if in Trello's
login page, else it clicks Atlassian's</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220704 14:37:27.397" level="INFO">${url} = https://trello.com/login</msg>
<status status="PASS" starttime="20220704 14:37:27.386" endtime="20220704 14:37:27.397"/>
</kw>
<if>
<branch type="IF" condition="'${url}' == '${LOGIN_URL}'">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220704 14:37:27.397" endtime="20220704 14:37:27.443"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220704 14:37:27.443" level="INFO">Clicking button 'css:input#login'.</msg>
<status status="PASS" starttime="20220704 14:37:27.443" endtime="20220704 14:37:28.157"/>
</kw>
<status status="PASS" starttime="20220704 14:37:27.397" endtime="20220704 14:37:28.158"/>
</branch>
<branch type="ELSE">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="NOT RUN" starttime="20220704 14:37:28.158" endtime="20220704 14:37:28.158"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<status status="NOT RUN" starttime="20220704 14:37:28.158" endtime="20220704 14:37:28.158"/>
</kw>
<status status="NOT RUN" starttime="20220704 14:37:28.158" endtime="20220704 14:37:28.158"/>
</branch>
<status status="PASS" starttime="20220704 14:37:27.397" endtime="20220704 14:37:28.158"/>
</if>
<status status="PASS" starttime="20220704 14:37:27.386" endtime="20220704 14:37:28.158"/>
</kw>
<kw name="Wait Until Location Is Atlassian's Login" library="LoginPage">
<doc>Waits for the page redirection when logging in.</doc>
<kw name="Wait Until Location Contains" library="SeleniumLibrary">
<arg>atlassian.com</arg>
<doc>Waits until the current URL contains ``expected``.</doc>
<status status="PASS" starttime="20220704 14:37:28.159" endtime="20220704 14:37:28.194"/>
</kw>
<status status="PASS" starttime="20220704 14:37:28.158" endtime="20220704 14:37:28.195"/>
</kw>
<kw name="Enter Password" library="LoginPage">
<arg>${password}</arg>
<doc>Take a password as argument and
enters it in the password_input</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<arg>timeout=10</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 14:37:28.195" endtime="20220704 14:37:28.240"/>
</kw>
<kw name="Input Password" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<arg>${password}</arg>
<doc>Types the given password into the text field identified by ``locator``.</doc>
<msg timestamp="20220704 14:37:28.241" level="INFO">Typing password into text field 'css:input#password'.</msg>
<msg timestamp="20220704 14:37:28.301" level="INFO">Temporally setting log level to: NONE</msg>
<msg timestamp="20220704 14:37:28.398" level="INFO">Log level changed from NONE to INFO.</msg>
<status status="PASS" starttime="20220704 14:37:28.241" endtime="20220704 14:37:28.398"/>
</kw>
<status status="PASS" starttime="20220704 14:37:28.195" endtime="20220704 14:37:28.398"/>
</kw>
<kw name="Click Login Button" library="LoginPage">
<doc>Clicks Trello's login button if in Trello's
login page, else it clicks Atlassian's</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220704 14:37:28.411" level="INFO">${url} = https://id.atlassian.com/login?application=trello&amp;continue=https%3A%2F%2Ftrello.com%2Fauth%2Fatlassian%2Fcallback%3FreturnUrl%3D%252F%26display%3D%26aaOnboarding%3D%26updateEmail%3D%26traceId%3D62c2fb...</msg>
<status status="PASS" starttime="20220704 14:37:28.399" endtime="20220704 14:37:28.411"/>
</kw>
<if>
<branch type="IF" condition="'${url}' == '${LOGIN_URL}'">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="NOT RUN" starttime="20220704 14:37:28.411" endtime="20220704 14:37:28.411"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<status status="NOT RUN" starttime="20220704 14:37:28.411" endtime="20220704 14:37:28.411"/>
</kw>
<status status="NOT RUN" starttime="20220704 14:37:28.411" endtime="20220704 14:37:28.411"/>
</branch>
<branch type="ELSE">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220704 14:37:28.411" endtime="20220704 14:37:28.466"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220704 14:37:28.466" level="INFO">Clicking button 'css:button#login-submit'.</msg>
<status status="PASS" starttime="20220704 14:37:28.466" endtime="20220704 14:37:28.557"/>
</kw>
<status status="PASS" starttime="20220704 14:37:28.411" endtime="20220704 14:37:28.557"/>
</branch>
<status status="PASS" starttime="20220704 14:37:28.411" endtime="20220704 14:37:28.557"/>
</if>
<status status="PASS" starttime="20220704 14:37:28.398" endtime="20220704 14:37:28.557"/>
</kw>
<status status="PASS" starttime="20220704 14:37:26.458" endtime="20220704 14:37:28.557"/>
</kw>
<kw name="Go To Board" library="BoardsPage">
<arg>NewBoard</arg>
<doc>Receives the board name and goes to that board's page.</doc>
<kw name="Format String" library="String">
<var>${locator}</var>
<arg>${BOARD_BUTTON}</arg>
<arg>${board_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:37:28.558" level="INFO">${locator} = //div[@title="NewBoard"]</msg>
<status status="PASS" starttime="20220704 14:37:28.558" endtime="20220704 14:37:28.558"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 14:37:28.558" endtime="20220704 14:37:31.494"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 14:37:31.495" level="INFO">Clicking element '//div[@title="NewBoard"]'.</msg>
<status status="PASS" starttime="20220704 14:37:31.495" endtime="20220704 14:37:31.854"/>
</kw>
<status status="PASS" starttime="20220704 14:37:28.557" endtime="20220704 14:37:31.854"/>
</kw>
<kw name="Verify Name of Board" library="UpperHorizontalMenu">
<arg>NewBoard</arg>
<doc>Verifies the name of a board</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${NAME_OF_BOARD}</arg>
<arg>10</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 14:37:31.854" endtime="20220704 14:37:32.363"/>
</kw>
<kw name="Element Text Should Be" library="SeleniumLibrary">
<arg>${NAME_OF_BOARD}</arg>
<arg>${name}</arg>
<doc>Verifies that element ``locator`` contains exact the text ``expected``.</doc>
<msg timestamp="20220704 14:37:32.364" level="INFO">Verifying element 'xpath://h1[contains(@class, 'js-board-editing-target')]' contains exact text 'NewBoard'.</msg>
<status status="PASS" starttime="20220704 14:37:32.364" endtime="20220704 14:37:32.415"/>
</kw>
<status status="PASS" starttime="20220704 14:37:31.854" endtime="20220704 14:37:32.416"/>
</kw>
<kw name="Update Name of Board" library="UpperHorizontalMenu">
<arg>UpdatedName</arg>
<doc>Updates the name of a board
it takes the Length of the boards's name in order to press the delete key
as many times as the name's length</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${NAME_OF_BOARD}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 14:37:32.416" endtime="20220704 14:37:32.463"/>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<var>${response}</var>
<arg>${NAME_OF_BOARD}</arg>
<doc>Returns the text value of the element identified by ``locator``.</doc>
<msg timestamp="20220704 14:37:32.497" level="INFO">${response} = NewBoard</msg>
<status status="PASS" starttime="20220704 14:37:32.463" endtime="20220704 14:37:32.497"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${names_lenght}</var>
<arg>${response}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20220704 14:37:32.497" level="INFO">Length is 8</msg>
<msg timestamp="20220704 14:37:32.497" level="INFO">${names_lenght} = 8</msg>
<status status="PASS" starttime="20220704 14:37:32.497" endtime="20220704 14:37:32.497"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${NAME_OF_BOARD}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 14:37:32.498" level="INFO">Clicking element 'xpath://h1[contains(@class, 'js-board-editing-target')]'.</msg>
<status status="PASS" starttime="20220704 14:37:32.497" endtime="20220704 14:37:32.554"/>
</kw>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>${NAME_OF_BOARD_INPUT}</arg>
<arg>\ue011</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20220704 14:37:32.555" level="INFO">Sending key(s) ('\ue011',) to xpath://input[contains(@class, 'board-name-input')] element.</msg>
<msg timestamp="20220704 14:37:32.891" level="INFO">Sending key </msg>
<status status="PASS" starttime="20220704 14:37:32.554" endtime="20220704 14:37:32.919"/>
</kw>
<kw name="Repeat Keyword" library="BuiltIn">
<arg>${names_lenght}</arg>
<arg>Press Keys</arg>
<arg>${NAME_OF_BOARD_INPUT}</arg>
<arg>\ue017</arg>
<doc>Executes the specified keyword multiple times.</doc>
<msg timestamp="20220704 14:37:32.920" level="INFO">Repeating keyword, round 1/8.</msg>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>${NAME_OF_BOARD_INPUT}</arg>
<arg>\ue017</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20220704 14:37:32.920" level="INFO">Sending key(s) ('\ue017',) to xpath://input[contains(@class, 'board-name-input')] element.</msg>
<msg timestamp="20220704 14:37:33.205" level="INFO">Sending key </msg>
<status status="PASS" starttime="20220704 14:37:32.920" endtime="20220704 14:37:33.222"/>
</kw>
<msg timestamp="20220704 14:37:33.222" level="INFO">Repeating keyword, round 2/8.</msg>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>${NAME_OF_BOARD_INPUT}</arg>
<arg>\ue017</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20220704 14:37:33.223" level="INFO">Sending key(s) ('\ue017',) to xpath://input[contains(@class, 'board-name-input')] element.</msg>
<msg timestamp="20220704 14:37:33.511" level="INFO">Sending key </msg>
<status status="PASS" starttime="20220704 14:37:33.222" endtime="20220704 14:37:33.529"/>
</kw>
<msg timestamp="20220704 14:37:33.529" level="INFO">Repeating keyword, round 3/8.</msg>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>${NAME_OF_BOARD_INPUT}</arg>
<arg>\ue017</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20220704 14:37:33.530" level="INFO">Sending key(s) ('\ue017',) to xpath://input[contains(@class, 'board-name-input')] element.</msg>
<msg timestamp="20220704 14:37:33.808" level="INFO">Sending key </msg>
<status status="PASS" starttime="20220704 14:37:33.529" endtime="20220704 14:37:33.834"/>
</kw>
<msg timestamp="20220704 14:37:33.834" level="INFO">Repeating keyword, round 4/8.</msg>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>${NAME_OF_BOARD_INPUT}</arg>
<arg>\ue017</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20220704 14:37:33.835" level="INFO">Sending key(s) ('\ue017',) to xpath://input[contains(@class, 'board-name-input')] element.</msg>
<msg timestamp="20220704 14:37:34.115" level="INFO">Sending key </msg>
<status status="PASS" starttime="20220704 14:37:33.834" endtime="20220704 14:37:34.135"/>
</kw>
<msg timestamp="20220704 14:37:34.135" level="INFO">Repeating keyword, round 5/8.</msg>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>${NAME_OF_BOARD_INPUT}</arg>
<arg>\ue017</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20220704 14:37:34.136" level="INFO">Sending key(s) ('\ue017',) to xpath://input[contains(@class, 'board-name-input')] element.</msg>
<msg timestamp="20220704 14:37:34.421" level="INFO">Sending key </msg>
<status status="PASS" starttime="20220704 14:37:34.135" endtime="20220704 14:37:34.442"/>
</kw>
<msg timestamp="20220704 14:37:34.442" level="INFO">Repeating keyword, round 6/8.</msg>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>${NAME_OF_BOARD_INPUT}</arg>
<arg>\ue017</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20220704 14:37:34.442" level="INFO">Sending key(s) ('\ue017',) to xpath://input[contains(@class, 'board-name-input')] element.</msg>
<msg timestamp="20220704 14:37:34.738" level="INFO">Sending key </msg>
<status status="PASS" starttime="20220704 14:37:34.442" endtime="20220704 14:37:34.756"/>
</kw>
<msg timestamp="20220704 14:37:34.756" level="INFO">Repeating keyword, round 7/8.</msg>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>${NAME_OF_BOARD_INPUT}</arg>
<arg>\ue017</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20220704 14:37:34.757" level="INFO">Sending key(s) ('\ue017',) to xpath://input[contains(@class, 'board-name-input')] element.</msg>
<msg timestamp="20220704 14:37:35.045" level="INFO">Sending key </msg>
<status status="PASS" starttime="20220704 14:37:34.757" endtime="20220704 14:37:35.063"/>
</kw>
<msg timestamp="20220704 14:37:35.063" level="INFO">Repeating keyword, round 8/8.</msg>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>${NAME_OF_BOARD_INPUT}</arg>
<arg>\ue017</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20220704 14:37:35.064" level="INFO">Sending key(s) ('\ue017',) to xpath://input[contains(@class, 'board-name-input')] element.</msg>
<msg timestamp="20220704 14:37:35.345" level="INFO">Sending key </msg>
<status status="PASS" starttime="20220704 14:37:35.063" endtime="20220704 14:37:35.360"/>
</kw>
<status status="PASS" starttime="20220704 14:37:32.919" endtime="20220704 14:37:35.360"/>
</kw>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>${NAME_OF_BOARD_INPUT}</arg>
<arg>${name}</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20220704 14:37:35.361" level="INFO">Sending key(s) ('UpdatedName',) to xpath://input[contains(@class, 'board-name-input')] element.</msg>
<msg timestamp="20220704 14:37:35.643" level="INFO">Sending keys UpdatedName</msg>
<status status="PASS" starttime="20220704 14:37:35.360" endtime="20220704 14:37:35.702"/>
</kw>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>${NAME_OF_BOARD_INPUT}</arg>
<arg>\ue007</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20220704 14:37:35.703" level="INFO">Sending key(s) ('\ue007',) to xpath://input[contains(@class, 'board-name-input')] element.</msg>
<msg timestamp="20220704 14:37:35.994" level="INFO">Sending key </msg>
<status status="PASS" starttime="20220704 14:37:35.703" endtime="20220704 14:37:36.091"/>
</kw>
<status status="PASS" starttime="20220704 14:37:32.416" endtime="20220704 14:37:36.091"/>
</kw>
<kw name="Verify Name of Board" library="UpperHorizontalMenu">
<arg>UpdatedName</arg>
<doc>Verifies the name of a board</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${NAME_OF_BOARD}</arg>
<arg>10</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 14:37:36.092" endtime="20220704 14:37:36.128"/>
</kw>
<kw name="Element Text Should Be" library="SeleniumLibrary">
<arg>${NAME_OF_BOARD}</arg>
<arg>${name}</arg>
<doc>Verifies that element ``locator`` contains exact the text ``expected``.</doc>
<msg timestamp="20220704 14:37:36.128" level="INFO">Verifying element 'xpath://h1[contains(@class, 'js-board-editing-target')]' contains exact text 'UpdatedName'.</msg>
<status status="PASS" starttime="20220704 14:37:36.128" endtime="20220704 14:37:36.166"/>
</kw>
<status status="PASS" starttime="20220704 14:37:36.091" endtime="20220704 14:37:36.167"/>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Close Browser</arg>
<arg>AND</arg>
<arg>Wait Until Keyword Succeeds</arg>
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20220704 14:37:36.167" endtime="20220704 14:37:36.256"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${BOARD.json()}[id]</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:37:36.259" level="INFO">${url} = boards/62c2fb255fba7355735813f6</msg>
<status status="PASS" starttime="20220704 14:37:36.258" endtime="20220704 14:37:36.259"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 14:37:36.564" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:37:36.259" endtime="20220704 14:37:36.564"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:37:36.564" endtime="20220704 14:37:36.564"/>
</return>
<msg timestamp="20220704 14:37:36.564" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:37:36.258" endtime="20220704 14:37:36.564"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:37:36.564" endtime="20220704 14:37:36.564"/>
</return>
<status status="PASS" starttime="20220704 14:37:36.256" endtime="20220704 14:37:36.564"/>
</kw>
<status status="PASS" starttime="20220704 14:37:36.256" endtime="20220704 14:37:36.565"/>
</kw>
<status status="PASS" starttime="20220704 14:37:36.167" endtime="20220704 14:37:36.565"/>
</kw>
<doc>Verify that a board's name can be updated through GUI</doc>
<tag>board.update.name</tag>
<tag>gui</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220704 14:37:25.106" endtime="20220704 14:37:36.565"/>
</test>
<kw name="Boards Suite Teardown" type="TEARDOWN">
<doc>Deletes the Trello sesion that had been created</doc>
<kw name="Delete All Sessions" library="request_own_library">
<status status="PASS" starttime="20220704 14:37:36.566" endtime="20220704 14:37:36.567"/>
</kw>
<status status="PASS" starttime="20220704 14:37:36.566" endtime="20220704 14:37:36.568"/>
</kw>
<doc>Board Tests</doc>
<status status="PASS" starttime="20220704 14:36:55.871" endtime="20220704 14:37:36.568"/>
</suite>
<suite id="s1-s4-s1-s2" name="Trello Gui Cards" source="/trello/gui/trello_gui_cards.robot">
<kw name="Cards Suite Setup" type="SETUP">
<doc>Creates a new board through API, then Opens a Browser
Login to Trello, and Go to the created board's page.</doc>
<kw name="Create Trello Session" library="TrelloAPI">
<doc>Creates a Trello Session</doc>
<kw name="Create Session" library="request_own_library">
<arg>${API_BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<status status="PASS" starttime="20220704 14:37:36.583" endtime="20220704 14:37:36.584"/>
</kw>
<status status="PASS" starttime="20220704 14:37:36.583" endtime="20220704 14:37:36.584"/>
</kw>
<kw name="Create A Board" library="Board">
<var>${BOARD}</var>
<arg>CardTestBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 14:37:36.585" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 14:37:36.585" endtime="20220704 14:37:36.585"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 14:37:36.585" endtime="20220704 14:37:36.585"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:37:36.586" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220704 14:37:36.585" endtime="20220704 14:37:36.586"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 14:37:36.803" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:37:36.587" endtime="20220704 14:37:36.803"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:37:36.803" endtime="20220704 14:37:36.803"/>
</return>
<msg timestamp="20220704 14:37:36.803" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:37:36.584" endtime="20220704 14:37:36.804"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:37:36.804" endtime="20220704 14:37:36.804"/>
</return>
<msg timestamp="20220704 14:37:36.804" level="INFO">${BOARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:37:36.584" endtime="20220704 14:37:36.804"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_BOARD_ID}</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220704 14:37:36.806" level="INFO">${TEST_SUITE_BOARD_ID} = 62c2fb300584788cda0a0f9d</msg>
<status status="PASS" starttime="20220704 14:37:36.804" endtime="20220704 14:37:36.806"/>
</kw>
<kw name="Open Browser From Environment" library="CommonGUI">
<arg>${LOGIN_URL}</arg>
<doc>This keywords takes REMOTE and BROWSER variables
from the environment automatically and only needs a url</doc>
<if>
<branch type="IF" condition="${is_remote}">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${url}</arg>
<arg>${BROWSER}</arg>
<arg>remote_url=http://selenium-hub:4444</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20220704 14:37:36.807" level="INFO">Opening browser 'chrome' to base url 'https://trello.com/login' through remote server at 'http://selenium-hub:4444'.</msg>
<status status="PASS" starttime="20220704 14:37:36.806" endtime="20220704 14:37:37.879"/>
</kw>
<status status="PASS" starttime="20220704 14:37:36.806" endtime="20220704 14:37:37.880"/>
</branch>
<branch type="ELSE">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${url}</arg>
<arg>${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<status status="NOT RUN" starttime="20220704 14:37:37.880" endtime="20220704 14:37:37.880"/>
</kw>
<status status="NOT RUN" starttime="20220704 14:37:37.880" endtime="20220704 14:37:37.880"/>
</branch>
<status status="PASS" starttime="20220704 14:37:36.806" endtime="20220704 14:37:37.880"/>
</if>
<status status="PASS" starttime="20220704 14:37:36.806" endtime="20220704 14:37:37.880"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20220704 14:37:37.880" endtime="20220704 14:37:37.999"/>
</kw>
<kw name="Login To Trello" library="LoginPage">
<arg>${DEFAULT_EMAIL}</arg>
<arg>${DEFAULT_PASSWORD}</arg>
<doc>High-level keyword for logging in to Trello</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220704 14:37:38.013" level="INFO">${url} = https://trello.com/login</msg>
<status status="PASS" starttime="20220704 14:37:37.999" endtime="20220704 14:37:38.013"/>
</kw>
<if>
<branch type="IF" condition="'${url}' != '${LOGIN_URL}'">
<kw name="Go To" library="SeleniumLibrary">
<arg>${LOGIN_URL}</arg>
<doc>Navigates the current browser window to the provided ``url``.</doc>
<status status="NOT RUN" starttime="20220704 14:37:38.013" endtime="20220704 14:37:38.013"/>
</kw>
<status status="NOT RUN" starttime="20220704 14:37:38.013" endtime="20220704 14:37:38.013"/>
</branch>
<status status="PASS" starttime="20220704 14:37:38.013" endtime="20220704 14:37:38.013"/>
</if>
<kw name="Enter Username" library="LoginPage">
<arg>${username}</arg>
<doc>Take a username as argument and
enters it in the user_input</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${USER_INPUT}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 14:37:38.014" endtime="20220704 14:37:38.055"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${USER_INPUT}</arg>
<arg>${username}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220704 14:37:38.056" level="INFO">Typing text 'bootcamp04@mailinator.com' into text field 'css:input#user'.</msg>
<status status="PASS" starttime="20220704 14:37:38.055" endtime="20220704 14:37:38.168"/>
</kw>
<status status="PASS" starttime="20220704 14:37:38.013" endtime="20220704 14:37:38.169"/>
</kw>
<kw name="Wait Until Element Is Not Visible" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<doc>Waits until the element ``locator`` is not visible.</doc>
<status status="PASS" starttime="20220704 14:37:38.169" endtime="20220704 14:37:38.915"/>
</kw>
<kw name="Click Login Button" library="LoginPage">
<doc>Clicks Trello's login button if in Trello's
login page, else it clicks Atlassian's</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220704 14:37:38.922" level="INFO">${url} = https://trello.com/login</msg>
<status status="PASS" starttime="20220704 14:37:38.915" endtime="20220704 14:37:38.922"/>
</kw>
<if>
<branch type="IF" condition="'${url}' == '${LOGIN_URL}'">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220704 14:37:38.923" endtime="20220704 14:37:38.963"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220704 14:37:38.964" level="INFO">Clicking button 'css:input#login'.</msg>
<status status="PASS" starttime="20220704 14:37:38.963" endtime="20220704 14:37:39.748"/>
</kw>
<status status="PASS" starttime="20220704 14:37:38.923" endtime="20220704 14:37:39.748"/>
</branch>
<branch type="ELSE">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="NOT RUN" starttime="20220704 14:37:39.748" endtime="20220704 14:37:39.748"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<status status="NOT RUN" starttime="20220704 14:37:39.748" endtime="20220704 14:37:39.748"/>
</kw>
<status status="NOT RUN" starttime="20220704 14:37:39.748" endtime="20220704 14:37:39.748"/>
</branch>
<status status="PASS" starttime="20220704 14:37:38.922" endtime="20220704 14:37:39.748"/>
</if>
<status status="PASS" starttime="20220704 14:37:38.915" endtime="20220704 14:37:39.748"/>
</kw>
<kw name="Wait Until Location Is Atlassian's Login" library="LoginPage">
<doc>Waits for the page redirection when logging in.</doc>
<kw name="Wait Until Location Contains" library="SeleniumLibrary">
<arg>atlassian.com</arg>
<doc>Waits until the current URL contains ``expected``.</doc>
<status status="PASS" starttime="20220704 14:37:39.749" endtime="20220704 14:37:39.764"/>
</kw>
<status status="PASS" starttime="20220704 14:37:39.749" endtime="20220704 14:37:39.764"/>
</kw>
<kw name="Enter Password" library="LoginPage">
<arg>${password}</arg>
<doc>Take a password as argument and
enters it in the password_input</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<arg>timeout=10</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 14:37:39.765" endtime="20220704 14:37:39.815"/>
</kw>
<kw name="Input Password" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<arg>${password}</arg>
<doc>Types the given password into the text field identified by ``locator``.</doc>
<msg timestamp="20220704 14:37:39.816" level="INFO">Typing password into text field 'css:input#password'.</msg>
<msg timestamp="20220704 14:37:39.864" level="INFO">Temporally setting log level to: NONE</msg>
<msg timestamp="20220704 14:37:39.924" level="INFO">Log level changed from NONE to INFO.</msg>
<status status="PASS" starttime="20220704 14:37:39.815" endtime="20220704 14:37:39.924"/>
</kw>
<status status="PASS" starttime="20220704 14:37:39.764" endtime="20220704 14:37:39.924"/>
</kw>
<kw name="Click Login Button" library="LoginPage">
<doc>Clicks Trello's login button if in Trello's
login page, else it clicks Atlassian's</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220704 14:37:39.934" level="INFO">${url} = https://id.atlassian.com/login?application=trello&amp;continue=https%3A%2F%2Ftrello.com%2Fauth%2Fatlassian%2Fcallback%3FreturnUrl%3D%252F%26display%3D%26aaOnboarding%3D%26updateEmail%3D%26traceId%3D62c2fb...</msg>
<status status="PASS" starttime="20220704 14:37:39.925" endtime="20220704 14:37:39.934"/>
</kw>
<if>
<branch type="IF" condition="'${url}' == '${LOGIN_URL}'">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="NOT RUN" starttime="20220704 14:37:39.935" endtime="20220704 14:37:39.935"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<status status="NOT RUN" starttime="20220704 14:37:39.935" endtime="20220704 14:37:39.935"/>
</kw>
<status status="NOT RUN" starttime="20220704 14:37:39.935" endtime="20220704 14:37:39.935"/>
</branch>
<branch type="ELSE">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220704 14:37:39.935" endtime="20220704 14:37:39.982"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220704 14:37:39.983" level="INFO">Clicking button 'css:button#login-submit'.</msg>
<status status="PASS" starttime="20220704 14:37:39.983" endtime="20220704 14:37:40.090"/>
</kw>
<status status="PASS" starttime="20220704 14:37:39.935" endtime="20220704 14:37:40.091"/>
</branch>
<status status="PASS" starttime="20220704 14:37:39.934" endtime="20220704 14:37:40.091"/>
</if>
<status status="PASS" starttime="20220704 14:37:39.924" endtime="20220704 14:37:40.091"/>
</kw>
<status status="PASS" starttime="20220704 14:37:37.999" endtime="20220704 14:37:40.091"/>
</kw>
<kw name="Go To Board" library="BoardsPage">
<arg>CardTestBoard</arg>
<doc>Receives the board name and goes to that board's page.</doc>
<kw name="Format String" library="String">
<var>${locator}</var>
<arg>${BOARD_BUTTON}</arg>
<arg>${board_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:37:40.092" level="INFO">${locator} = //div[@title="CardTestBoard"]</msg>
<status status="PASS" starttime="20220704 14:37:40.091" endtime="20220704 14:37:40.092"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 14:37:40.092" endtime="20220704 14:37:42.849"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 14:37:42.850" level="INFO">Clicking element '//div[@title="CardTestBoard"]'.</msg>
<status status="PASS" starttime="20220704 14:37:42.849" endtime="20220704 14:37:43.182"/>
</kw>
<status status="PASS" starttime="20220704 14:37:40.091" endtime="20220704 14:37:43.182"/>
</kw>
<status status="PASS" starttime="20220704 14:37:36.583" endtime="20220704 14:37:43.182"/>
</kw>
<test id="s1-s4-s1-s2-t1" name="Verify A Card Can Be Created" line="12">
<kw name="Set Test Variable" library="BuiltIn">
<arg>\${list}</arg>
<arg>To Do</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220704 14:37:43.184" level="INFO">${list} = To Do</msg>
<status status="PASS" starttime="20220704 14:37:43.184" endtime="20220704 14:37:43.184"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>\${card}</arg>
<arg>Test Card</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220704 14:37:43.184" level="INFO">${card} = Test Card</msg>
<status status="PASS" starttime="20220704 14:37:43.184" endtime="20220704 14:37:43.185"/>
</kw>
<kw name="Create Card In List" library="ListComponent">
<arg>${list}</arg>
<arg>${card}</arg>
<doc>Create a new card in the given list
Required args: list_name, card_name</doc>
<kw name="Format String" library="String">
<var>${add_card_locator}</var>
<arg>${LIST_ADD_CARD}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:37:43.185" level="INFO">${add_card_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Add a card')]</msg>
<status status="PASS" starttime="20220704 14:37:43.185" endtime="20220704 14:37:43.185"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${add_card_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 14:37:43.186" endtime="20220704 14:37:43.650"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${add_card_locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 14:37:43.651" level="INFO">Clicking element '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Add a card')]'.</msg>
<status status="PASS" starttime="20220704 14:37:43.650" endtime="20220704 14:37:43.736"/>
</kw>
<kw name="Format String" library="String">
<var>${textarea_locator}</var>
<arg>${CARD_TITLE_INPUT}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:37:43.737" level="INFO">${textarea_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//textarea[contains(@class, 'list-card-composer-textarea')]</msg>
<status status="PASS" starttime="20220704 14:37:43.736" endtime="20220704 14:37:43.737"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 14:37:43.737" endtime="20220704 14:37:43.811"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 14:37:43.812" level="INFO">Clicking element '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//textarea[contains(@class, 'list-card-composer-textarea')]'.</msg>
<status status="PASS" starttime="20220704 14:37:43.811" endtime="20220704 14:37:43.861"/>
</kw>
<kw name="Clear Element Text" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<doc>Clears the value of the text-input-element identified by ``locator``.</doc>
<status status="PASS" starttime="20220704 14:37:43.861" endtime="20220704 14:37:43.898"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<arg>${card_name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220704 14:37:43.899" level="INFO">Typing text 'Test Card' into text field '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//textarea[contains(@class, 'list-card-composer-textarea')]'.</msg>
<status status="PASS" starttime="20220704 14:37:43.898" endtime="20220704 14:37:44.048"/>
</kw>
<kw name="Format String" library="String">
<var>${confirm_locator}</var>
<arg>${CONFIRM_ADD_CARD}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:37:44.049" level="INFO">${confirm_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//input[@value='Add card']</msg>
<status status="PASS" starttime="20220704 14:37:44.048" endtime="20220704 14:37:44.049"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${confirm_locator}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220704 14:37:44.049" level="INFO">Clicking button '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//input[@value='Add card']'.</msg>
<status status="PASS" starttime="20220704 14:37:44.049" endtime="20220704 14:37:44.171"/>
</kw>
<status status="PASS" starttime="20220704 14:37:43.185" endtime="20220704 14:37:44.171"/>
</kw>
<kw name="Verify Card Exists" library="ListComponent">
<arg>${list}</arg>
<arg>${card}</arg>
<doc>Verify that the card with card_name exists in the given list.</doc>
<kw name="Format String" library="String">
<var>${card_name_locator}</var>
<arg>${LIST_CARD_NAME}</arg>
<arg>list_name=${list_name}</arg>
<arg>card_name=${card_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:37:44.173" level="INFO">${card_name_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Test Card')]</msg>
<status status="PASS" starttime="20220704 14:37:44.172" endtime="20220704 14:37:44.173"/>
</kw>
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<arg>${card_name_locator}</arg>
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<msg timestamp="20220704 14:37:44.265" level="INFO">Element '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Test Card')]' is displayed.</msg>
<status status="PASS" starttime="20220704 14:37:44.173" endtime="20220704 14:37:44.265"/>
</kw>
<status status="PASS" starttime="20220704 14:37:44.172" endtime="20220704 14:37:44.265"/>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Go To Card Modal</arg>
<arg>list_name=${list}</arg>
<arg>card_name=${card}</arg>
<arg>AND</arg>
<arg>Delete Current Card</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Go To Card Modal" library="ListComponent">
<arg>list_name=${list}</arg>
<arg>card_name=${card}</arg>
<doc>It opens the modal for card_name in list_name</doc>
<kw name="Format String" library="String">
<var>${card_name_locator}</var>
<arg>${LIST_CARD_NAME}</arg>
<arg>list_name=${list_name}</arg>
<arg>card_name=${card_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:37:44.267" level="INFO">${card_name_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Test Card')]</msg>
<status status="PASS" starttime="20220704 14:37:44.266" endtime="20220704 14:37:44.267"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${card_name_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 14:37:44.267" endtime="20220704 14:37:44.302"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${card_name_locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 14:37:44.302" level="INFO">Clicking element '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Test Card')]'.</msg>
<status status="PASS" starttime="20220704 14:37:44.302" endtime="20220704 14:37:44.381"/>
</kw>
<status status="PASS" starttime="20220704 14:37:44.266" endtime="20220704 14:37:44.382"/>
</kw>
<kw name="Delete Current Card" library="CardModal">
<doc>The Keyword will first check if the card is archived,
if it's not, it will archive it to be able to delete it.</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${not_archived}</var>
<arg>Element Should Not Be Visible</arg>
<arg>${IS_ARCHIVED_MSG}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Element Should Not Be Visible" library="SeleniumLibrary">
<arg>${IS_ARCHIVED_MSG}</arg>
<doc>Verifies that the element identified by ``locator`` is NOT visible.</doc>
<msg timestamp="20220704 14:37:44.453" level="INFO">Element '//p[text()='This card is archived.']' did not exist.</msg>
<status status="PASS" starttime="20220704 14:37:44.383" endtime="20220704 14:37:44.453"/>
</kw>
<msg timestamp="20220704 14:37:44.454" level="INFO">${not_archived} = True</msg>
<status status="PASS" starttime="20220704 14:37:44.382" endtime="20220704 14:37:44.454"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${not_archived}</arg>
<arg>Archive Current Card</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Archive Current Card" library="CardModal">
<doc>Archives the current card from inside the modal.</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ARCHIVE_BUTTON}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 14:37:44.454" endtime="20220704 14:37:44.939"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${ARCHIVE_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 14:37:44.940" level="INFO">Clicking element '//span[@title='Archive']'.</msg>
<status status="PASS" starttime="20220704 14:37:44.939" endtime="20220704 14:37:45.020"/>
</kw>
<status status="PASS" starttime="20220704 14:37:44.454" endtime="20220704 14:37:45.021"/>
</kw>
<status status="PASS" starttime="20220704 14:37:44.454" endtime="20220704 14:37:45.021"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3</arg>
<arg>0.9</arg>
<arg>Click Element</arg>
<arg>${DELETE_BUTTON}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${DELETE_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 14:37:45.021" level="INFO">Clicking element '//a[@title='Delete']'.</msg>
<status status="PASS" starttime="20220704 14:37:45.021" endtime="20220704 14:37:45.112"/>
</kw>
<status status="PASS" starttime="20220704 14:37:45.021" endtime="20220704 14:37:45.112"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${DELETE_CONFIRM}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 14:37:45.113" level="INFO">Clicking element '//input[@value='Delete']'.</msg>
<status status="PASS" starttime="20220704 14:37:45.112" endtime="20220704 14:37:45.318"/>
</kw>
<status status="PASS" starttime="20220704 14:37:44.382" endtime="20220704 14:37:45.318"/>
</kw>
<status status="PASS" starttime="20220704 14:37:44.265" endtime="20220704 14:37:45.318"/>
</kw>
<doc>Verify that it is possible to create a new
card through Trello's GUI.</doc>
<tag>card.create</tag>
<tag>gui</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220704 14:37:43.183" endtime="20220704 14:37:45.318"/>
</test>
<test id="s1-s4-s1-s2-t2" name="Modify A Card's Name From The Board Page" line="24">
<kw name="Set Test Variable" library="BuiltIn">
<arg>\${list}</arg>
<arg>To Do</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220704 14:37:45.321" level="INFO">${list} = To Do</msg>
<status status="PASS" starttime="20220704 14:37:45.321" endtime="20220704 14:37:45.321"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>\${card}</arg>
<arg>Test Card</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220704 14:37:45.322" level="INFO">${card} = Test Card</msg>
<status status="PASS" starttime="20220704 14:37:45.321" endtime="20220704 14:37:45.322"/>
</kw>
<kw name="Create Card In List" library="ListComponent">
<arg>${list}</arg>
<arg>${card}</arg>
<doc>Create a new card in the given list
Required args: list_name, card_name</doc>
<kw name="Format String" library="String">
<var>${add_card_locator}</var>
<arg>${LIST_ADD_CARD}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:37:45.322" level="INFO">${add_card_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Add a card')]</msg>
<status status="PASS" starttime="20220704 14:37:45.322" endtime="20220704 14:37:45.322"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${add_card_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 14:37:45.323" endtime="20220704 14:37:45.357"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${add_card_locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 14:37:45.358" level="INFO">Clicking element '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Add a card')]'.</msg>
<status status="PASS" starttime="20220704 14:37:45.358" endtime="20220704 14:37:45.435"/>
</kw>
<kw name="Format String" library="String">
<var>${textarea_locator}</var>
<arg>${CARD_TITLE_INPUT}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:37:45.436" level="INFO">${textarea_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//textarea[contains(@class, 'list-card-composer-textarea')]</msg>
<status status="PASS" starttime="20220704 14:37:45.435" endtime="20220704 14:37:45.436"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 14:37:45.436" endtime="20220704 14:37:45.468"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 14:37:45.468" level="INFO">Clicking element '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//textarea[contains(@class, 'list-card-composer-textarea')]'.</msg>
<status status="PASS" starttime="20220704 14:37:45.468" endtime="20220704 14:37:45.514"/>
</kw>
<kw name="Clear Element Text" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<doc>Clears the value of the text-input-element identified by ``locator``.</doc>
<status status="PASS" starttime="20220704 14:37:45.514" endtime="20220704 14:37:45.550"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<arg>${card_name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220704 14:37:45.550" level="INFO">Typing text 'Test Card' into text field '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//textarea[contains(@class, 'list-card-composer-textarea')]'.</msg>
<status status="PASS" starttime="20220704 14:37:45.550" endtime="20220704 14:37:45.627"/>
</kw>
<kw name="Format String" library="String">
<var>${confirm_locator}</var>
<arg>${CONFIRM_ADD_CARD}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:37:45.628" level="INFO">${confirm_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//input[@value='Add card']</msg>
<status status="PASS" starttime="20220704 14:37:45.627" endtime="20220704 14:37:45.628"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${confirm_locator}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220704 14:37:45.628" level="INFO">Clicking button '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//input[@value='Add card']'.</msg>
<status status="PASS" starttime="20220704 14:37:45.628" endtime="20220704 14:37:45.695"/>
</kw>
<status status="PASS" starttime="20220704 14:37:45.322" endtime="20220704 14:37:45.696"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>\${new_name}</arg>
<arg>New Name</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220704 14:37:45.696" level="INFO">${new_name} = New Name</msg>
<status status="PASS" starttime="20220704 14:37:45.696" endtime="20220704 14:37:45.696"/>
</kw>
<kw name="Edit Card Title Using Pencil Icon" library="ListComponent">
<arg>${list}</arg>
<arg>${card}</arg>
<arg>${new_name}</arg>
<doc>Modifies the title of the given card, using the pencil icon
required: list_name, card_name, new_title</doc>
<kw name="Format String" library="String">
<var>${card_element}</var>
<arg>${LIST_CARD_NAME}</arg>
<arg>list_name=${list_name}</arg>
<arg>card_name=${card_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:37:45.697" level="INFO">${card_element} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Test Card')]</msg>
<status status="PASS" starttime="20220704 14:37:45.697" endtime="20220704 14:37:45.697"/>
</kw>
<kw name="Format String" library="String">
<var>${pencil_locator}</var>
<arg>${PENCIL_ICON}</arg>
<arg>list_name=${list_name}</arg>
<arg>card_name=${card_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:37:45.698" level="INFO">${pencil_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Test Card')]//span[contains(@class, 'icon-edit')]</msg>
<status status="PASS" starttime="20220704 14:37:45.698" endtime="20220704 14:37:45.698"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${card_element}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 14:37:45.698" endtime="20220704 14:37:45.740"/>
</kw>
<kw name="Mouse Over" library="SeleniumLibrary">
<arg>${card_element}</arg>
<doc>Simulates hovering the mouse over the element ``locator``.</doc>
<msg timestamp="20220704 14:37:45.741" level="INFO">Simulating Mouse Over on element '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Test Card')]'.</msg>
<status status="PASS" starttime="20220704 14:37:45.741" endtime="20220704 14:37:46.021"/>
</kw>
<kw name="Wait Until Page Contains Element" library="SeleniumLibrary">
<arg>${pencil_locator}</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" starttime="20220704 14:37:46.022" endtime="20220704 14:37:46.045"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${pencil_locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 14:37:46.045" level="INFO">Clicking element '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Test Card')]//span[contains(@class, 'icon-edit')]'.</msg>
<status status="PASS" starttime="20220704 14:37:46.045" endtime="20220704 14:37:46.128"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${CARD_EDIT_TITLE}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 14:37:46.129" endtime="20220704 14:37:46.196"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${CARD_EDIT_TITLE}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 14:37:46.197" level="INFO">Clicking element 'css:textarea.list-card-edit-title'.</msg>
<status status="PASS" starttime="20220704 14:37:46.196" endtime="20220704 14:37:46.249"/>
</kw>
<kw name="Clear Element Text" library="SeleniumLibrary">
<arg>${CARD_EDIT_TITLE}</arg>
<doc>Clears the value of the text-input-element identified by ``locator``.</doc>
<status status="PASS" starttime="20220704 14:37:46.250" endtime="20220704 14:37:46.297"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${CARD_EDIT_TITLE}</arg>
<arg>${new_title}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220704 14:37:46.297" level="INFO">Typing text 'New Name' into text field 'css:textarea.list-card-edit-title'.</msg>
<status status="PASS" starttime="20220704 14:37:46.297" endtime="20220704 14:37:46.399"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${CARD_EDIT_TITLE_SAVE}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 14:37:46.400" level="INFO">Clicking element '//input[@value='Save']'.</msg>
<status status="PASS" starttime="20220704 14:37:46.399" endtime="20220704 14:37:46.483"/>
</kw>
<status status="PASS" starttime="20220704 14:37:45.696" endtime="20220704 14:37:46.484"/>
</kw>
<kw name="Verify Card Exists" library="ListComponent">
<arg>${list}</arg>
<arg>${new_name}</arg>
<doc>Verify that the card with card_name exists in the given list.</doc>
<kw name="Format String" library="String">
<var>${card_name_locator}</var>
<arg>${LIST_CARD_NAME}</arg>
<arg>list_name=${list_name}</arg>
<arg>card_name=${card_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:37:46.485" level="INFO">${card_name_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'New Name')]</msg>
<status status="PASS" starttime="20220704 14:37:46.484" endtime="20220704 14:37:46.485"/>
</kw>
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<arg>${card_name_locator}</arg>
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<msg timestamp="20220704 14:37:46.529" level="INFO">Element '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'New Name')]' is displayed.</msg>
<status status="PASS" starttime="20220704 14:37:46.485" endtime="20220704 14:37:46.529"/>
</kw>
<status status="PASS" starttime="20220704 14:37:46.484" endtime="20220704 14:37:46.529"/>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Go To Card Modal</arg>
<arg>list_name=${list}</arg>
<arg>card_name=${new_name}</arg>
<arg>AND</arg>
<arg>Delete Current Card</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Go To Card Modal" library="ListComponent">
<arg>list_name=${list}</arg>
<arg>card_name=${new_name}</arg>
<doc>It opens the modal for card_name in list_name</doc>
<kw name="Format String" library="String">
<var>${card_name_locator}</var>
<arg>${LIST_CARD_NAME}</arg>
<arg>list_name=${list_name}</arg>
<arg>card_name=${card_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:37:46.531" level="INFO">${card_name_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'New Name')]</msg>
<status status="PASS" starttime="20220704 14:37:46.530" endtime="20220704 14:37:46.531"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${card_name_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 14:37:46.531" endtime="20220704 14:37:46.571"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${card_name_locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 14:37:46.572" level="INFO">Clicking element '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'New Name')]'.</msg>
<status status="PASS" starttime="20220704 14:37:46.572" endtime="20220704 14:37:46.656"/>
</kw>
<status status="PASS" starttime="20220704 14:37:46.530" endtime="20220704 14:37:46.657"/>
</kw>
<kw name="Delete Current Card" library="CardModal">
<doc>The Keyword will first check if the card is archived,
if it's not, it will archive it to be able to delete it.</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${not_archived}</var>
<arg>Element Should Not Be Visible</arg>
<arg>${IS_ARCHIVED_MSG}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Element Should Not Be Visible" library="SeleniumLibrary">
<arg>${IS_ARCHIVED_MSG}</arg>
<doc>Verifies that the element identified by ``locator`` is NOT visible.</doc>
<msg timestamp="20220704 14:37:46.862" level="INFO">Element '//p[text()='This card is archived.']' did not exist.</msg>
<status status="PASS" starttime="20220704 14:37:46.658" endtime="20220704 14:37:46.862"/>
</kw>
<msg timestamp="20220704 14:37:46.863" level="INFO">${not_archived} = True</msg>
<status status="PASS" starttime="20220704 14:37:46.657" endtime="20220704 14:37:46.863"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${not_archived}</arg>
<arg>Archive Current Card</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Archive Current Card" library="CardModal">
<doc>Archives the current card from inside the modal.</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ARCHIVE_BUTTON}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 14:37:46.864" endtime="20220704 14:37:46.912"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${ARCHIVE_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 14:37:46.913" level="INFO">Clicking element '//span[@title='Archive']'.</msg>
<status status="PASS" starttime="20220704 14:37:46.912" endtime="20220704 14:37:47.011"/>
</kw>
<status status="PASS" starttime="20220704 14:37:46.863" endtime="20220704 14:37:47.011"/>
</kw>
<status status="PASS" starttime="20220704 14:37:46.863" endtime="20220704 14:37:47.011"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3</arg>
<arg>0.9</arg>
<arg>Click Element</arg>
<arg>${DELETE_BUTTON}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${DELETE_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 14:37:47.012" level="INFO">Clicking element '//a[@title='Delete']'.</msg>
<status status="PASS" starttime="20220704 14:37:47.012" endtime="20220704 14:37:47.091"/>
</kw>
<status status="PASS" starttime="20220704 14:37:47.011" endtime="20220704 14:37:47.091"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${DELETE_CONFIRM}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 14:37:47.091" level="INFO">Clicking element '//input[@value='Delete']'.</msg>
<status status="PASS" starttime="20220704 14:37:47.091" endtime="20220704 14:37:47.284"/>
</kw>
<status status="PASS" starttime="20220704 14:37:46.657" endtime="20220704 14:37:47.284"/>
</kw>
<status status="PASS" starttime="20220704 14:37:46.529" endtime="20220704 14:37:47.284"/>
</kw>
<doc>Verify that it is possible to edit a card's Name
using the pencil icon in the board page.</doc>
<tag>card.title_board</tag>
<tag>gui</tag>
<tag>regression</tag>
<status status="PASS" starttime="20220704 14:37:45.320" endtime="20220704 14:37:47.284"/>
</test>
<test id="s1-s4-s1-s2-t3" name="Leave A Comment On A Card" line="38">
<kw name="Set Test Variable" library="BuiltIn">
<arg>\${list}</arg>
<arg>To Do</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220704 14:37:47.286" level="INFO">${list} = To Do</msg>
<status status="PASS" starttime="20220704 14:37:47.286" endtime="20220704 14:37:47.286"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>\${card}</arg>
<arg>Test Card</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220704 14:37:47.287" level="INFO">${card} = Test Card</msg>
<status status="PASS" starttime="20220704 14:37:47.286" endtime="20220704 14:37:47.287"/>
</kw>
<kw name="Create Card In List" library="ListComponent">
<arg>${list}</arg>
<arg>${card}</arg>
<doc>Create a new card in the given list
Required args: list_name, card_name</doc>
<kw name="Format String" library="String">
<var>${add_card_locator}</var>
<arg>${LIST_ADD_CARD}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:37:47.288" level="INFO">${add_card_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Add a card')]</msg>
<status status="PASS" starttime="20220704 14:37:47.287" endtime="20220704 14:37:47.288"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${add_card_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 14:37:47.288" endtime="20220704 14:37:47.397"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${add_card_locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 14:37:47.397" level="INFO">Clicking element '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Add a card')]'.</msg>
<status status="PASS" starttime="20220704 14:37:47.397" endtime="20220704 14:37:47.512"/>
</kw>
<kw name="Format String" library="String">
<var>${textarea_locator}</var>
<arg>${CARD_TITLE_INPUT}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:37:47.512" level="INFO">${textarea_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//textarea[contains(@class, 'list-card-composer-textarea')]</msg>
<status status="PASS" starttime="20220704 14:37:47.512" endtime="20220704 14:37:47.513"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 14:37:47.513" endtime="20220704 14:37:47.559"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 14:37:47.560" level="INFO">Clicking element '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//textarea[contains(@class, 'list-card-composer-textarea')]'.</msg>
<status status="PASS" starttime="20220704 14:37:47.560" endtime="20220704 14:37:47.612"/>
</kw>
<kw name="Clear Element Text" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<doc>Clears the value of the text-input-element identified by ``locator``.</doc>
<status status="PASS" starttime="20220704 14:37:47.612" endtime="20220704 14:37:47.650"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<arg>${card_name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220704 14:37:47.651" level="INFO">Typing text 'Test Card' into text field '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//textarea[contains(@class, 'list-card-composer-textarea')]'.</msg>
<status status="PASS" starttime="20220704 14:37:47.651" endtime="20220704 14:37:47.747"/>
</kw>
<kw name="Format String" library="String">
<var>${confirm_locator}</var>
<arg>${CONFIRM_ADD_CARD}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:37:47.748" level="INFO">${confirm_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//input[@value='Add card']</msg>
<status status="PASS" starttime="20220704 14:37:47.748" endtime="20220704 14:37:47.748"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${confirm_locator}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220704 14:37:47.749" level="INFO">Clicking button '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//input[@value='Add card']'.</msg>
<status status="PASS" starttime="20220704 14:37:47.748" endtime="20220704 14:37:47.825"/>
</kw>
<status status="PASS" starttime="20220704 14:37:47.287" endtime="20220704 14:37:47.825"/>
</kw>
<kw name="Go To Card Modal" library="ListComponent">
<arg>${list}</arg>
<arg>${card}</arg>
<doc>It opens the modal for card_name in list_name</doc>
<kw name="Format String" library="String">
<var>${card_name_locator}</var>
<arg>${LIST_CARD_NAME}</arg>
<arg>list_name=${list_name}</arg>
<arg>card_name=${card_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:37:47.827" level="INFO">${card_name_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Test Card')]</msg>
<status status="PASS" starttime="20220704 14:37:47.826" endtime="20220704 14:37:47.827"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${card_name_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 14:37:47.827" endtime="20220704 14:37:47.906"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${card_name_locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 14:37:47.907" level="INFO">Clicking element '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Test Card')]'.</msg>
<status status="PASS" starttime="20220704 14:37:47.906" endtime="20220704 14:37:48.163"/>
</kw>
<status status="PASS" starttime="20220704 14:37:47.826" endtime="20220704 14:37:48.163"/>
</kw>
<kw name="Get Number Of Comments" library="CardModal">
<var>${comments_before}</var>
<doc>Return the number of comments present in the modal.</doc>
<kw name="Get Element Count" library="SeleniumLibrary">
<var>${n}</var>
<arg>${COMMENT_DIV}</arg>
<doc>Returns the number of elements matching ``locator``.</doc>
<msg timestamp="20220704 14:37:48.238" level="INFO">${n} = 0</msg>
<status status="PASS" starttime="20220704 14:37:48.164" endtime="20220704 14:37:48.238"/>
</kw>
<return>
<value>${n}</value>
<status status="PASS" starttime="20220704 14:37:48.238" endtime="20220704 14:37:48.238"/>
</return>
<msg timestamp="20220704 14:37:48.238" level="INFO">${comments_before} = 0</msg>
<status status="PASS" starttime="20220704 14:37:48.164" endtime="20220704 14:37:48.238"/>
</kw>
<kw name="Send A Comment" library="CardModal">
<arg>This is a test comment</arg>
<doc>Sends a comment under the "activity" section of the modal
required: comment</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${COMMENT_BOX_INPUT}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 14:37:48.239" endtime="20220704 14:37:48.277"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${COMMENT_BOX_INPUT}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 14:37:48.278" level="INFO">Clicking element '//div[@class='comment-box']/textarea'.</msg>
<status status="PASS" starttime="20220704 14:37:48.278" endtime="20220704 14:37:48.338"/>
</kw>
<kw name="Clear Element Text" library="SeleniumLibrary">
<arg>${COMMENT_BOX_INPUT}</arg>
<doc>Clears the value of the text-input-element identified by ``locator``.</doc>
<status status="PASS" starttime="20220704 14:37:48.338" endtime="20220704 14:37:48.387"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${COMMENT_BOX_INPUT}</arg>
<arg>${comment}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220704 14:37:48.388" level="INFO">Typing text 'This is a test comment' into text field '//div[@class='comment-box']/textarea'.</msg>
<status status="PASS" starttime="20220704 14:37:48.387" endtime="20220704 14:37:48.551"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${SAVE_COMMENT}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 14:37:48.552" level="INFO">Clicking element '//div[contains(@class, 'comment-controls')]//input[@value='Save']'.</msg>
<status status="PASS" starttime="20220704 14:37:48.551" endtime="20220704 14:37:48.699"/>
</kw>
<status status="PASS" starttime="20220704 14:37:48.239" endtime="20220704 14:37:48.699"/>
</kw>
<kw name="Get Number Of Comments" library="CardModal">
<var>${comments_after}</var>
<doc>Return the number of comments present in the modal.</doc>
<kw name="Get Element Count" library="SeleniumLibrary">
<var>${n}</var>
<arg>${COMMENT_DIV}</arg>
<doc>Returns the number of elements matching ``locator``.</doc>
<msg timestamp="20220704 14:37:48.716" level="INFO">${n} = 1</msg>
<status status="PASS" starttime="20220704 14:37:48.699" endtime="20220704 14:37:48.716"/>
</kw>
<return>
<value>${n}</value>
<status status="PASS" starttime="20220704 14:37:48.716" endtime="20220704 14:37:48.716"/>
</return>
<msg timestamp="20220704 14:37:48.716" level="INFO">${comments_after} = 1</msg>
<status status="PASS" starttime="20220704 14:37:48.699" endtime="20220704 14:37:48.716"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${comments_after} == ${comments_before}+${1}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220704 14:37:48.716" endtime="20220704 14:37:48.717"/>
</kw>
<kw name="Delete Current Card" library="CardModal" type="TEARDOWN">
<doc>The Keyword will first check if the card is archived,
if it's not, it will archive it to be able to delete it.</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${not_archived}</var>
<arg>Element Should Not Be Visible</arg>
<arg>${IS_ARCHIVED_MSG}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Element Should Not Be Visible" library="SeleniumLibrary">
<arg>${IS_ARCHIVED_MSG}</arg>
<doc>Verifies that the element identified by ``locator`` is NOT visible.</doc>
<msg timestamp="20220704 14:37:48.731" level="INFO">Element '//p[text()='This card is archived.']' did not exist.</msg>
<status status="PASS" starttime="20220704 14:37:48.718" endtime="20220704 14:37:48.731"/>
</kw>
<msg timestamp="20220704 14:37:48.731" level="INFO">${not_archived} = True</msg>
<status status="PASS" starttime="20220704 14:37:48.718" endtime="20220704 14:37:48.731"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${not_archived}</arg>
<arg>Archive Current Card</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Archive Current Card" library="CardModal">
<doc>Archives the current card from inside the modal.</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ARCHIVE_BUTTON}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 14:37:48.732" endtime="20220704 14:37:48.820"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${ARCHIVE_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 14:37:48.821" level="INFO">Clicking element '//span[@title='Archive']'.</msg>
<status status="PASS" starttime="20220704 14:37:48.821" endtime="20220704 14:37:48.927"/>
</kw>
<status status="PASS" starttime="20220704 14:37:48.731" endtime="20220704 14:37:48.927"/>
</kw>
<status status="PASS" starttime="20220704 14:37:48.731" endtime="20220704 14:37:48.927"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3</arg>
<arg>0.9</arg>
<arg>Click Element</arg>
<arg>${DELETE_BUTTON}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${DELETE_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 14:37:48.928" level="INFO">Clicking element '//a[@title='Delete']'.</msg>
<status status="PASS" starttime="20220704 14:37:48.928" endtime="20220704 14:37:49.012"/>
</kw>
<status status="PASS" starttime="20220704 14:37:48.928" endtime="20220704 14:37:49.012"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${DELETE_CONFIRM}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 14:37:49.013" level="INFO">Clicking element '//input[@value='Delete']'.</msg>
<status status="PASS" starttime="20220704 14:37:49.012" endtime="20220704 14:37:49.190"/>
</kw>
<status status="PASS" starttime="20220704 14:37:48.718" endtime="20220704 14:37:49.190"/>
</kw>
<doc>Verify that it is possible to write a comment
on a card, through the card modal.</doc>
<tag>card.comment</tag>
<tag>gui</tag>
<tag>regression</tag>
<status status="PASS" starttime="20220704 14:37:47.285" endtime="20220704 14:37:49.190"/>
</test>
<test id="s1-s4-s1-s2-t4" name="Verify A Card Can Be Deleted" line="52">
<kw name="Set Test Variable" library="BuiltIn">
<arg>\${list}</arg>
<arg>To Do</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220704 14:37:49.193" level="INFO">${list} = To Do</msg>
<status status="PASS" starttime="20220704 14:37:49.193" endtime="20220704 14:37:49.193"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>\${card}</arg>
<arg>Test Card</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220704 14:37:49.193" level="INFO">${card} = Test Card</msg>
<status status="PASS" starttime="20220704 14:37:49.193" endtime="20220704 14:37:49.193"/>
</kw>
<kw name="Get Number Of Cards In List" library="ListComponent">
<var>${cards_before}</var>
<arg>${list}</arg>
<doc>Return the number of cards present in a given list.
required: list_name</doc>
<kw name="Format String" library="String">
<var>${card_anchor_locator}</var>
<arg>${CARD_ANCHORS}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:37:49.195" level="INFO">${card_anchor_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(@class, 'list-card')]</msg>
<status status="PASS" starttime="20220704 14:37:49.194" endtime="20220704 14:37:49.195"/>
</kw>
<kw name="Get Element Count" library="SeleniumLibrary">
<var>${n}</var>
<arg>${card_anchor_locator}</arg>
<doc>Returns the number of elements matching ``locator``.</doc>
<msg timestamp="20220704 14:37:49.223" level="INFO">${n} = 0</msg>
<status status="PASS" starttime="20220704 14:37:49.195" endtime="20220704 14:37:49.223"/>
</kw>
<return>
<value>${n}</value>
<status status="PASS" starttime="20220704 14:37:49.223" endtime="20220704 14:37:49.224"/>
</return>
<msg timestamp="20220704 14:37:49.224" level="INFO">${cards_before} = 0</msg>
<status status="PASS" starttime="20220704 14:37:49.194" endtime="20220704 14:37:49.224"/>
</kw>
<kw name="Create Card In List" library="ListComponent">
<arg>${list}</arg>
<arg>${card}</arg>
<doc>Create a new card in the given list
Required args: list_name, card_name</doc>
<kw name="Format String" library="String">
<var>${add_card_locator}</var>
<arg>${LIST_ADD_CARD}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:37:49.225" level="INFO">${add_card_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Add a card')]</msg>
<status status="PASS" starttime="20220704 14:37:49.224" endtime="20220704 14:37:49.225"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${add_card_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 14:37:49.225" endtime="20220704 14:37:49.267"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${add_card_locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 14:37:49.268" level="INFO">Clicking element '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Add a card')]'.</msg>
<status status="PASS" starttime="20220704 14:37:49.267" endtime="20220704 14:37:49.348"/>
</kw>
<kw name="Format String" library="String">
<var>${textarea_locator}</var>
<arg>${CARD_TITLE_INPUT}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:37:49.349" level="INFO">${textarea_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//textarea[contains(@class, 'list-card-composer-textarea')]</msg>
<status status="PASS" starttime="20220704 14:37:49.348" endtime="20220704 14:37:49.349"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 14:37:49.349" endtime="20220704 14:37:49.404"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 14:37:49.404" level="INFO">Clicking element '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//textarea[contains(@class, 'list-card-composer-textarea')]'.</msg>
<status status="PASS" starttime="20220704 14:37:49.404" endtime="20220704 14:37:49.476"/>
</kw>
<kw name="Clear Element Text" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<doc>Clears the value of the text-input-element identified by ``locator``.</doc>
<status status="PASS" starttime="20220704 14:37:49.477" endtime="20220704 14:37:49.511"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<arg>${card_name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220704 14:37:49.511" level="INFO">Typing text 'Test Card' into text field '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//textarea[contains(@class, 'list-card-composer-textarea')]'.</msg>
<status status="PASS" starttime="20220704 14:37:49.511" endtime="20220704 14:37:49.613"/>
</kw>
<kw name="Format String" library="String">
<var>${confirm_locator}</var>
<arg>${CONFIRM_ADD_CARD}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:37:49.614" level="INFO">${confirm_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//input[@value='Add card']</msg>
<status status="PASS" starttime="20220704 14:37:49.614" endtime="20220704 14:37:49.614"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${confirm_locator}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220704 14:37:49.615" level="INFO">Clicking button '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//input[@value='Add card']'.</msg>
<status status="PASS" starttime="20220704 14:37:49.614" endtime="20220704 14:37:49.706"/>
</kw>
<status status="PASS" starttime="20220704 14:37:49.224" endtime="20220704 14:37:49.707"/>
</kw>
<kw name="Go To Card Modal" library="ListComponent">
<arg>${list}</arg>
<arg>${card}</arg>
<doc>It opens the modal for card_name in list_name</doc>
<kw name="Format String" library="String">
<var>${card_name_locator}</var>
<arg>${LIST_CARD_NAME}</arg>
<arg>list_name=${list_name}</arg>
<arg>card_name=${card_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:37:49.708" level="INFO">${card_name_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Test Card')]</msg>
<status status="PASS" starttime="20220704 14:37:49.707" endtime="20220704 14:37:49.708"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${card_name_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 14:37:49.708" endtime="20220704 14:37:49.766"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${card_name_locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 14:37:49.766" level="INFO">Clicking element '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Test Card')]'.</msg>
<status status="PASS" starttime="20220704 14:37:49.766" endtime="20220704 14:37:49.826"/>
</kw>
<status status="PASS" starttime="20220704 14:37:49.707" endtime="20220704 14:37:49.826"/>
</kw>
<kw name="Delete Current Card" library="CardModal">
<doc>The Keyword will first check if the card is archived,
if it's not, it will archive it to be able to delete it.</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${not_archived}</var>
<arg>Element Should Not Be Visible</arg>
<arg>${IS_ARCHIVED_MSG}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Element Should Not Be Visible" library="SeleniumLibrary">
<arg>${IS_ARCHIVED_MSG}</arg>
<doc>Verifies that the element identified by ``locator`` is NOT visible.</doc>
<msg timestamp="20220704 14:37:50.174" level="INFO">Element '//p[text()='This card is archived.']' did not exist.</msg>
<status status="PASS" starttime="20220704 14:37:49.827" endtime="20220704 14:37:50.174"/>
</kw>
<msg timestamp="20220704 14:37:50.174" level="INFO">${not_archived} = True</msg>
<status status="PASS" starttime="20220704 14:37:49.826" endtime="20220704 14:37:50.174"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${not_archived}</arg>
<arg>Archive Current Card</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Archive Current Card" library="CardModal">
<doc>Archives the current card from inside the modal.</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ARCHIVE_BUTTON}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 14:37:50.175" endtime="20220704 14:37:50.251"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${ARCHIVE_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 14:37:50.252" level="INFO">Clicking element '//span[@title='Archive']'.</msg>
<status status="PASS" starttime="20220704 14:37:50.251" endtime="20220704 14:37:50.444"/>
</kw>
<status status="PASS" starttime="20220704 14:37:50.174" endtime="20220704 14:37:50.444"/>
</kw>
<status status="PASS" starttime="20220704 14:37:50.174" endtime="20220704 14:37:50.444"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3</arg>
<arg>0.9</arg>
<arg>Click Element</arg>
<arg>${DELETE_BUTTON}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${DELETE_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 14:37:50.445" level="INFO">Clicking element '//a[@title='Delete']'.</msg>
<status status="PASS" starttime="20220704 14:37:50.445" endtime="20220704 14:37:50.591"/>
</kw>
<status status="PASS" starttime="20220704 14:37:50.444" endtime="20220704 14:37:50.592"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${DELETE_CONFIRM}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 14:37:50.592" level="INFO">Clicking element '//input[@value='Delete']'.</msg>
<status status="PASS" starttime="20220704 14:37:50.592" endtime="20220704 14:37:50.871"/>
</kw>
<status status="PASS" starttime="20220704 14:37:49.826" endtime="20220704 14:37:50.871"/>
</kw>
<kw name="Get Number Of Cards In List" library="ListComponent">
<var>${cards_after}</var>
<arg>${list}</arg>
<doc>Return the number of cards present in a given list.
required: list_name</doc>
<kw name="Format String" library="String">
<var>${card_anchor_locator}</var>
<arg>${CARD_ANCHORS}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:37:50.872" level="INFO">${card_anchor_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(@class, 'list-card')]</msg>
<status status="PASS" starttime="20220704 14:37:50.872" endtime="20220704 14:37:50.872"/>
</kw>
<kw name="Get Element Count" library="SeleniumLibrary">
<var>${n}</var>
<arg>${card_anchor_locator}</arg>
<doc>Returns the number of elements matching ``locator``.</doc>
<msg timestamp="20220704 14:37:50.926" level="INFO">${n} = 0</msg>
<status status="PASS" starttime="20220704 14:37:50.872" endtime="20220704 14:37:50.926"/>
</kw>
<return>
<value>${n}</value>
<status status="PASS" starttime="20220704 14:37:50.926" endtime="20220704 14:37:50.926"/>
</return>
<msg timestamp="20220704 14:37:50.927" level="INFO">${cards_after} = 0</msg>
<status status="PASS" starttime="20220704 14:37:50.871" endtime="20220704 14:37:50.927"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${cards_before} == ${cards_after}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220704 14:37:50.927" endtime="20220704 14:37:50.927"/>
</kw>
<doc>Verify that it is possible to delete a card
from inside the card modal.</doc>
<tag>card.delete</tag>
<tag>gui</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220704 14:37:49.192" endtime="20220704 14:37:50.928"/>
</test>
<test id="s1-s4-s1-s2-t5" name="Card Can Be Dragged To Another List" line="65">
<kw name="Set Test Variable" library="BuiltIn">
<arg>\${list}</arg>
<arg>To Do</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220704 14:37:50.930" level="INFO">${list} = To Do</msg>
<status status="PASS" starttime="20220704 14:37:50.930" endtime="20220704 14:37:50.930"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>\${card}</arg>
<arg>Test Card</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220704 14:37:50.931" level="INFO">${card} = Test Card</msg>
<status status="PASS" starttime="20220704 14:37:50.930" endtime="20220704 14:37:50.931"/>
</kw>
<kw name="Create Card In List" library="ListComponent">
<arg>${list}</arg>
<arg>${card}</arg>
<doc>Create a new card in the given list
Required args: list_name, card_name</doc>
<kw name="Format String" library="String">
<var>${add_card_locator}</var>
<arg>${LIST_ADD_CARD}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:37:50.931" level="INFO">${add_card_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Add a card')]</msg>
<status status="PASS" starttime="20220704 14:37:50.931" endtime="20220704 14:37:50.932"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${add_card_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 14:37:50.932" endtime="20220704 14:37:50.973"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${add_card_locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 14:37:50.974" level="INFO">Clicking element '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Add a card')]'.</msg>
<status status="PASS" starttime="20220704 14:37:50.974" endtime="20220704 14:37:51.124"/>
</kw>
<kw name="Format String" library="String">
<var>${textarea_locator}</var>
<arg>${CARD_TITLE_INPUT}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:37:51.124" level="INFO">${textarea_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//textarea[contains(@class, 'list-card-composer-textarea')]</msg>
<status status="PASS" starttime="20220704 14:37:51.124" endtime="20220704 14:37:51.124"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 14:37:51.125" endtime="20220704 14:37:51.235"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 14:37:51.236" level="INFO">Clicking element '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//textarea[contains(@class, 'list-card-composer-textarea')]'.</msg>
<status status="PASS" starttime="20220704 14:37:51.236" endtime="20220704 14:37:51.449"/>
</kw>
<kw name="Clear Element Text" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<doc>Clears the value of the text-input-element identified by ``locator``.</doc>
<status status="PASS" starttime="20220704 14:37:51.449" endtime="20220704 14:37:51.502"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<arg>${card_name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220704 14:37:51.503" level="INFO">Typing text 'Test Card' into text field '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//textarea[contains(@class, 'list-card-composer-textarea')]'.</msg>
<status status="PASS" starttime="20220704 14:37:51.502" endtime="20220704 14:37:51.616"/>
</kw>
<kw name="Format String" library="String">
<var>${confirm_locator}</var>
<arg>${CONFIRM_ADD_CARD}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:37:51.616" level="INFO">${confirm_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//input[@value='Add card']</msg>
<status status="PASS" starttime="20220704 14:37:51.616" endtime="20220704 14:37:51.616"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${confirm_locator}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220704 14:37:51.617" level="INFO">Clicking button '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//input[@value='Add card']'.</msg>
<status status="PASS" starttime="20220704 14:37:51.617" endtime="20220704 14:37:51.729"/>
</kw>
<status status="PASS" starttime="20220704 14:37:50.931" endtime="20220704 14:37:51.730"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>\${list2}</arg>
<arg>Doing</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220704 14:37:51.730" level="INFO">${list2} = Doing</msg>
<status status="PASS" starttime="20220704 14:37:51.730" endtime="20220704 14:37:51.730"/>
</kw>
<kw name="Drag Card From One List To Another" library="ListComponent">
<arg>${card}</arg>
<arg>${list}</arg>
<arg>${list2}</arg>
<doc>required: card_name, source_list_name, target_list_name</doc>
<kw name="Format String" library="String">
<var>${card_locator}</var>
<arg>${LIST_CARD_NAME}</arg>
<arg>list_name=${list1_name}</arg>
<arg>card_name=${card_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:37:51.732" level="INFO">${card_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Test Card')]</msg>
<status status="PASS" starttime="20220704 14:37:51.731" endtime="20220704 14:37:51.732"/>
</kw>
<kw name="Format String" library="String">
<var>${list2_locator}</var>
<arg>${LIST_DIV}</arg>
<arg>list_name=${list2_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:37:51.732" level="INFO">${list2_locator} = //h2[text()='Doing']//ancestor::div[contains(@class, 'list-content')]</msg>
<status status="PASS" starttime="20220704 14:37:51.732" endtime="20220704 14:37:51.732"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${card_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 14:37:51.733" endtime="20220704 14:37:51.879"/>
</kw>
<kw name="Drag And Drop" library="SeleniumLibrary">
<arg>${card_locator}</arg>
<arg>${list2_locator}</arg>
<doc>Drags the element identified by ``locator`` into the ``target`` element.</doc>
<status status="PASS" starttime="20220704 14:37:51.880" endtime="20220704 14:37:52.770"/>
</kw>
<status status="PASS" starttime="20220704 14:37:51.730" endtime="20220704 14:37:52.771"/>
</kw>
<kw name="Card Should Be In List" library="ListComponent">
<arg>${card}</arg>
<arg>${list2}</arg>
<doc>Check that a card is visible and in the given list
required: card_name, list_name</doc>
<kw name="Format String" library="String">
<var>${card_locator}</var>
<arg>${LIST_CARD_NAME}</arg>
<arg>list_name=${list_name}</arg>
<arg>card_name=${card_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:37:52.772" level="INFO">${card_locator} = //h2[text()='Doing']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Test Card')]</msg>
<status status="PASS" starttime="20220704 14:37:52.771" endtime="20220704 14:37:52.772"/>
</kw>
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<arg>${card_locator}</arg>
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<msg timestamp="20220704 14:37:52.899" level="INFO">Element '//h2[text()='Doing']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Test Card')]' is displayed.</msg>
<status status="PASS" starttime="20220704 14:37:52.772" endtime="20220704 14:37:52.899"/>
</kw>
<status status="PASS" starttime="20220704 14:37:52.771" endtime="20220704 14:37:52.900"/>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Go To Card Modal</arg>
<arg>${list2}</arg>
<arg>${card}</arg>
<arg>AND</arg>
<arg>Delete Current Card</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Go To Card Modal" library="ListComponent">
<arg>${list2}</arg>
<arg>${card}</arg>
<doc>It opens the modal for card_name in list_name</doc>
<kw name="Format String" library="String">
<var>${card_name_locator}</var>
<arg>${LIST_CARD_NAME}</arg>
<arg>list_name=${list_name}</arg>
<arg>card_name=${card_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:37:52.901" level="INFO">${card_name_locator} = //h2[text()='Doing']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Test Card')]</msg>
<status status="PASS" starttime="20220704 14:37:52.901" endtime="20220704 14:37:52.901"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${card_name_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 14:37:52.901" endtime="20220704 14:37:52.950"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${card_name_locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 14:37:52.951" level="INFO">Clicking element '//h2[text()='Doing']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Test Card')]'.</msg>
<status status="PASS" starttime="20220704 14:37:52.951" endtime="20220704 14:37:53.115"/>
</kw>
<status status="PASS" starttime="20220704 14:37:52.900" endtime="20220704 14:37:53.115"/>
</kw>
<kw name="Delete Current Card" library="CardModal">
<doc>The Keyword will first check if the card is archived,
if it's not, it will archive it to be able to delete it.</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${not_archived}</var>
<arg>Element Should Not Be Visible</arg>
<arg>${IS_ARCHIVED_MSG}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Element Should Not Be Visible" library="SeleniumLibrary">
<arg>${IS_ARCHIVED_MSG}</arg>
<doc>Verifies that the element identified by ``locator`` is NOT visible.</doc>
<msg timestamp="20220704 14:37:53.433" level="INFO">Element '//p[text()='This card is archived.']' did not exist.</msg>
<status status="PASS" starttime="20220704 14:37:53.116" endtime="20220704 14:37:53.433"/>
</kw>
<msg timestamp="20220704 14:37:53.433" level="INFO">${not_archived} = True</msg>
<status status="PASS" starttime="20220704 14:37:53.116" endtime="20220704 14:37:53.433"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${not_archived}</arg>
<arg>Archive Current Card</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Archive Current Card" library="CardModal">
<doc>Archives the current card from inside the modal.</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ARCHIVE_BUTTON}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 14:37:53.434" endtime="20220704 14:37:53.504"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${ARCHIVE_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 14:37:53.505" level="INFO">Clicking element '//span[@title='Archive']'.</msg>
<status status="PASS" starttime="20220704 14:37:53.504" endtime="20220704 14:37:53.645"/>
</kw>
<status status="PASS" starttime="20220704 14:37:53.434" endtime="20220704 14:37:53.645"/>
</kw>
<status status="PASS" starttime="20220704 14:37:53.434" endtime="20220704 14:37:53.645"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3</arg>
<arg>0.9</arg>
<arg>Click Element</arg>
<arg>${DELETE_BUTTON}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${DELETE_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 14:37:53.646" level="INFO">Clicking element '//a[@title='Delete']'.</msg>
<status status="PASS" starttime="20220704 14:37:53.646" endtime="20220704 14:37:53.747"/>
</kw>
<status status="PASS" starttime="20220704 14:37:53.645" endtime="20220704 14:37:53.747"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${DELETE_CONFIRM}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 14:37:53.748" level="INFO">Clicking element '//input[@value='Delete']'.</msg>
<status status="PASS" starttime="20220704 14:37:53.747" endtime="20220704 14:37:54.038"/>
</kw>
<status status="PASS" starttime="20220704 14:37:53.115" endtime="20220704 14:37:54.038"/>
</kw>
<status status="PASS" starttime="20220704 14:37:52.900" endtime="20220704 14:37:54.038"/>
</kw>
<doc>Verify that a card can be dragged from one list to another.</doc>
<tag>card.drag</tag>
<tag>gui</tag>
<tag>regression</tag>
<status status="PASS" starttime="20220704 14:37:50.929" endtime="20220704 14:37:54.039"/>
</test>
<test id="s1-s4-s1-s2-t6" name="Card Can Be Moved To Another Board" line="79">
<kw name="Create A Board" library="Board">
<var>${board2}</var>
<arg>CardTestBoard2</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 14:37:54.042" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 14:37:54.042" endtime="20220704 14:37:54.042"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 14:37:54.042" endtime="20220704 14:37:54.042"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:37:54.044" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220704 14:37:54.042" endtime="20220704 14:37:54.044"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 14:37:54.240" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:37:54.044" endtime="20220704 14:37:54.240"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:37:54.240" endtime="20220704 14:37:54.240"/>
</return>
<msg timestamp="20220704 14:37:54.241" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:37:54.041" endtime="20220704 14:37:54.241"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:37:54.241" endtime="20220704 14:37:54.241"/>
</return>
<msg timestamp="20220704 14:37:54.241" level="INFO">${board2} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:37:54.041" endtime="20220704 14:37:54.241"/>
</kw>
<kw name="Go Home" library="TrelloUpperMenu">
<doc>it goes to the gome page</doc>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${TRELLO_ICON}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220704 14:37:54.242" endtime="20220704 14:37:54.356"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${TRELLO_ICON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 14:37:54.357" level="INFO">Clicking element 'xpath://a[@aria-label='Back to home']'.</msg>
<status status="PASS" starttime="20220704 14:37:54.356" endtime="20220704 14:37:54.515"/>
</kw>
<status status="PASS" starttime="20220704 14:37:54.241" endtime="20220704 14:37:54.515"/>
</kw>
<kw name="Go To Board" library="BoardsPage">
<arg>CardTestBoard2</arg>
<doc>Receives the board name and goes to that board's page.</doc>
<kw name="Format String" library="String">
<var>${locator}</var>
<arg>${BOARD_BUTTON}</arg>
<arg>${board_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:37:54.516" level="INFO">${locator} = //div[@title="CardTestBoard2"]</msg>
<status status="PASS" starttime="20220704 14:37:54.516" endtime="20220704 14:37:54.516"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 14:37:54.516" endtime="20220704 14:37:54.781"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 14:37:54.782" level="INFO">Clicking element '//div[@title="CardTestBoard2"]'.</msg>
<status status="PASS" starttime="20220704 14:37:54.782" endtime="20220704 14:37:54.943"/>
</kw>
<status status="PASS" starttime="20220704 14:37:54.515" endtime="20220704 14:37:54.943"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>\${list}</arg>
<arg>To Do</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220704 14:37:54.944" level="INFO">${list} = To Do</msg>
<status status="PASS" starttime="20220704 14:37:54.943" endtime="20220704 14:37:54.944"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>\${card}</arg>
<arg>Test Card2</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220704 14:37:54.944" level="INFO">${card} = Test Card2</msg>
<status status="PASS" starttime="20220704 14:37:54.944" endtime="20220704 14:37:54.944"/>
</kw>
<kw name="Create Card In List" library="ListComponent">
<arg>${list}</arg>
<arg>${card}</arg>
<doc>Create a new card in the given list
Required args: list_name, card_name</doc>
<kw name="Format String" library="String">
<var>${add_card_locator}</var>
<arg>${LIST_ADD_CARD}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:37:54.945" level="INFO">${add_card_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Add a card')]</msg>
<status status="PASS" starttime="20220704 14:37:54.945" endtime="20220704 14:37:54.945"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${add_card_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 14:37:54.945" endtime="20220704 14:37:55.422"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${add_card_locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 14:37:55.423" level="INFO">Clicking element '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Add a card')]'.</msg>
<status status="PASS" starttime="20220704 14:37:55.422" endtime="20220704 14:37:55.496"/>
</kw>
<kw name="Format String" library="String">
<var>${textarea_locator}</var>
<arg>${CARD_TITLE_INPUT}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:37:55.497" level="INFO">${textarea_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//textarea[contains(@class, 'list-card-composer-textarea')]</msg>
<status status="PASS" starttime="20220704 14:37:55.496" endtime="20220704 14:37:55.497"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 14:37:55.497" endtime="20220704 14:37:55.540"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 14:37:55.540" level="INFO">Clicking element '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//textarea[contains(@class, 'list-card-composer-textarea')]'.</msg>
<status status="PASS" starttime="20220704 14:37:55.540" endtime="20220704 14:37:55.592"/>
</kw>
<kw name="Clear Element Text" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<doc>Clears the value of the text-input-element identified by ``locator``.</doc>
<status status="PASS" starttime="20220704 14:37:55.592" endtime="20220704 14:37:55.629"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<arg>${card_name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220704 14:37:55.630" level="INFO">Typing text 'Test Card2' into text field '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//textarea[contains(@class, 'list-card-composer-textarea')]'.</msg>
<status status="PASS" starttime="20220704 14:37:55.629" endtime="20220704 14:37:55.750"/>
</kw>
<kw name="Format String" library="String">
<var>${confirm_locator}</var>
<arg>${CONFIRM_ADD_CARD}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:37:55.751" level="INFO">${confirm_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//input[@value='Add card']</msg>
<status status="PASS" starttime="20220704 14:37:55.751" endtime="20220704 14:37:55.751"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${confirm_locator}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220704 14:37:55.751" level="INFO">Clicking button '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//input[@value='Add card']'.</msg>
<status status="PASS" starttime="20220704 14:37:55.751" endtime="20220704 14:37:55.830"/>
</kw>
<status status="PASS" starttime="20220704 14:37:54.944" endtime="20220704 14:37:55.830"/>
</kw>
<kw name="Go To Card Modal" library="ListComponent">
<arg>${list}</arg>
<arg>${card}</arg>
<doc>It opens the modal for card_name in list_name</doc>
<kw name="Format String" library="String">
<var>${card_name_locator}</var>
<arg>${LIST_CARD_NAME}</arg>
<arg>list_name=${list_name}</arg>
<arg>card_name=${card_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:37:55.832" level="INFO">${card_name_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Test Card2')]</msg>
<status status="PASS" starttime="20220704 14:37:55.831" endtime="20220704 14:37:55.832"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${card_name_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 14:37:55.832" endtime="20220704 14:37:55.907"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${card_name_locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 14:37:55.908" level="INFO">Clicking element '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Test Card2')]'.</msg>
<status status="PASS" starttime="20220704 14:37:55.907" endtime="20220704 14:37:55.962"/>
</kw>
<status status="PASS" starttime="20220704 14:37:55.831" endtime="20220704 14:37:55.962"/>
</kw>
<kw name="Move Card To Another Board" library="CardModal">
<arg>CardTestBoard</arg>
<doc>Moves the card using the "name of destination board"
required: name (name of the destination board)</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${MOVE_BUTTON}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 14:37:55.963" endtime="20220704 14:37:56.213"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${MOVE_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 14:37:56.214" level="INFO">Clicking element '//a[@title='Move']'.</msg>
<status status="PASS" starttime="20220704 14:37:56.214" endtime="20220704 14:37:56.282"/>
</kw>
<kw name="Select From List By Label" library="SeleniumLibrary">
<arg>${SELECT_DESTINATION}</arg>
<arg>${name_of_destination_board}</arg>
<doc>Selects options from selection list ``locator`` by ``labels``.</doc>
<msg timestamp="20220704 14:37:56.283" level="INFO">Selecting options from selection list '//select[@data-test-id='move-board-select']' by label CardTestBoard.</msg>
<status status="PASS" starttime="20220704 14:37:56.283" endtime="20220704 14:37:56.409"/>
</kw>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${ACCEPT_MOVE_BUTTON}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220704 14:37:56.409" endtime="20220704 14:37:56.680"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${ACCEPT_MOVE_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 14:37:56.680" level="INFO">Clicking element '//input[@value="Move"]'.</msg>
<status status="PASS" starttime="20220704 14:37:56.680" endtime="20220704 14:37:56.856"/>
</kw>
<kw name="Wait Until Element Is Not Visible" library="SeleniumLibrary">
<arg>${ARCHIVE_BUTTON}</arg>
<doc>Waits until the element ``locator`` is not visible.</doc>
<status status="PASS" starttime="20220704 14:37:56.856" endtime="20220704 14:37:56.869"/>
</kw>
<status status="PASS" starttime="20220704 14:37:55.962" endtime="20220704 14:37:56.869"/>
</kw>
<kw name="Get Number Of Cards In List" library="ListComponent">
<var>${Cards_On_list}</var>
<arg>To Do</arg>
<doc>Return the number of cards present in a given list.
required: list_name</doc>
<kw name="Format String" library="String">
<var>${card_anchor_locator}</var>
<arg>${CARD_ANCHORS}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:37:56.870" level="INFO">${card_anchor_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(@class, 'list-card')]</msg>
<status status="PASS" starttime="20220704 14:37:56.870" endtime="20220704 14:37:56.870"/>
</kw>
<kw name="Get Element Count" library="SeleniumLibrary">
<var>${n}</var>
<arg>${card_anchor_locator}</arg>
<doc>Returns the number of elements matching ``locator``.</doc>
<msg timestamp="20220704 14:37:56.886" level="INFO">${n} = 0</msg>
<status status="PASS" starttime="20220704 14:37:56.870" endtime="20220704 14:37:56.886"/>
</kw>
<return>
<value>${n}</value>
<status status="PASS" starttime="20220704 14:37:56.886" endtime="20220704 14:37:56.886"/>
</return>
<msg timestamp="20220704 14:37:56.886" level="INFO">${Cards_On_list} = 0</msg>
<status status="PASS" starttime="20220704 14:37:56.869" endtime="20220704 14:37:56.886"/>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<var>${0}</var>
<arg>0</arg>
<doc>Converts the given item to an integer number.</doc>
<msg timestamp="20220704 14:37:56.887" level="INFO">${0} = 0</msg>
<status status="PASS" starttime="20220704 14:37:56.886" endtime="20220704 14:37:56.887"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${Cards_On_list}</arg>
<arg>${0}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220704 14:37:56.887" endtime="20220704 14:37:56.887"/>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Close Browser</arg>
<arg>AND</arg>
<arg>Wait Until Keyword Succeeds</arg>
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${board2.json()}[id]</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20220704 14:37:56.888" endtime="20220704 14:37:56.977"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${board2.json()}[id]</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${board2.json()}[id]</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:37:56.980" level="INFO">${url} = boards/62c2fb4212624f3a856759b2</msg>
<status status="PASS" starttime="20220704 14:37:56.979" endtime="20220704 14:37:56.980"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 14:37:57.024" level="INFO">${response} = None</msg>
<msg timestamp="20220704 14:37:57.024" level="FAIL">InvalidExpectedStatus: it was expected the status 200 but the status was 429</msg>
<status status="FAIL" starttime="20220704 14:37:56.980" endtime="20220704 14:37:57.024"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:37:57.024" endtime="20220704 14:37:57.024"/>
</return>
<msg timestamp="20220704 14:37:57.025" level="INFO">${response} = None</msg>
<status status="FAIL" starttime="20220704 14:37:56.979" endtime="20220704 14:37:57.025"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:37:57.025" endtime="20220704 14:37:57.025"/>
</return>
<status status="FAIL" starttime="20220704 14:37:56.977" endtime="20220704 14:37:57.025"/>
</kw>
<kw name="Delete A Board" library="Board">
<arg>${board2.json()}[id]</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:37:59.528" level="INFO">${url} = boards/62c2fb4212624f3a856759b2</msg>
<status status="PASS" starttime="20220704 14:37:59.528" endtime="20220704 14:37:59.528"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 14:37:59.850" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:37:59.529" endtime="20220704 14:37:59.850"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:37:59.850" endtime="20220704 14:37:59.850"/>
</return>
<msg timestamp="20220704 14:37:59.850" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:37:59.527" endtime="20220704 14:37:59.850"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:37:59.850" endtime="20220704 14:37:59.850"/>
</return>
<status status="PASS" starttime="20220704 14:37:59.525" endtime="20220704 14:37:59.851"/>
</kw>
<status status="PASS" starttime="20220704 14:37:56.977" endtime="20220704 14:37:59.851"/>
</kw>
<status status="PASS" starttime="20220704 14:37:56.887" endtime="20220704 14:37:59.851"/>
</kw>
<doc>Creates a new board through API, then goes to the
second board, creates a card and moves it to the other board</doc>
<tag>card.move</tag>
<tag>gui</tag>
<tag>regression</tag>
<status status="PASS" starttime="20220704 14:37:54.039" endtime="20220704 14:37:59.851"/>
</test>
<kw name="Cards Suite Teardown" type="TEARDOWN">
<doc>Deletes the created board through API and closes all browsers.</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:37:59.854" level="INFO">${url} = boards/62c2fb300584788cda0a0f9d</msg>
<status status="PASS" starttime="20220704 14:37:59.854" endtime="20220704 14:37:59.854"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 14:38:00.195" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:37:59.855" endtime="20220704 14:38:00.195"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:38:00.195" endtime="20220704 14:38:00.195"/>
</return>
<msg timestamp="20220704 14:38:00.195" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:37:59.854" endtime="20220704 14:38:00.195"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:38:00.195" endtime="20220704 14:38:00.195"/>
</return>
<status status="PASS" starttime="20220704 14:37:59.853" endtime="20220704 14:38:00.196"/>
</kw>
<status status="PASS" starttime="20220704 14:37:59.852" endtime="20220704 14:38:00.196"/>
</kw>
<kw name="Delete All Sessions" library="request_own_library">
<status status="PASS" starttime="20220704 14:38:00.196" endtime="20220704 14:38:00.197"/>
</kw>
<kw name="Close All Browsers" library="SeleniumLibrary">
<doc>Closes all open browsers and resets the browser cache.</doc>
<status status="PASS" starttime="20220704 14:38:00.197" endtime="20220704 14:38:00.197"/>
</kw>
<status status="PASS" starttime="20220704 14:37:59.852" endtime="20220704 14:38:00.198"/>
</kw>
<doc>Test Cases for Cards Feature</doc>
<status status="PASS" starttime="20220704 14:37:36.569" endtime="20220704 14:38:00.198"/>
</suite>
<suite id="s1-s4-s1-s3" name="Trello Gui Labels" source="/trello/gui/trello_gui_labels.robot">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Create Trello Session</arg>
<arg>Setup Board</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Create Trello Session" library="TrelloAPI">
<doc>Creates a Trello Session</doc>
<kw name="Create Session" library="request_own_library">
<arg>${API_BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<status status="PASS" starttime="20220704 14:38:00.217" endtime="20220704 14:38:00.217"/>
</kw>
<status status="PASS" starttime="20220704 14:38:00.217" endtime="20220704 14:38:00.217"/>
</kw>
<kw name="Setup Board">
<doc>Creates a board and saves its ID</doc>
<kw name="Create A Board" library="Board">
<var>${BOARD}</var>
<arg>TestBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 14:38:00.218" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 14:38:00.218" endtime="20220704 14:38:00.218"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 14:38:00.218" endtime="20220704 14:38:00.219"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:38:00.220" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220704 14:38:00.219" endtime="20220704 14:38:00.220"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 14:38:00.413" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:38:00.220" endtime="20220704 14:38:00.414"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:38:00.414" endtime="20220704 14:38:00.414"/>
</return>
<msg timestamp="20220704 14:38:00.414" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:38:00.218" endtime="20220704 14:38:00.414"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:38:00.414" endtime="20220704 14:38:00.414"/>
</return>
<msg timestamp="20220704 14:38:00.414" level="INFO">${BOARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:38:00.218" endtime="20220704 14:38:00.414"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_BOARD_ID}</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220704 14:38:00.416" level="INFO">${TEST_SUITE_BOARD_ID} = 62c2fb48db0b6a1ae58c3792</msg>
<status status="PASS" starttime="20220704 14:38:00.415" endtime="20220704 14:38:00.416"/>
</kw>
<status status="PASS" starttime="20220704 14:38:00.217" endtime="20220704 14:38:00.416"/>
</kw>
<status status="PASS" starttime="20220704 14:38:00.216" endtime="20220704 14:38:00.416"/>
</kw>
<test id="s1-s4-s1-s3-t1" name="filter label" line="21">
<kw name="Open Browser From Environment" library="CommonGUI">
<arg>${LOGIN_URL}</arg>
<doc>This keywords takes REMOTE and BROWSER variables
from the environment automatically and only needs a url</doc>
<if>
<branch type="IF" condition="${is_remote}">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${url}</arg>
<arg>${BROWSER}</arg>
<arg>remote_url=http://selenium-hub:4444</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20220704 14:38:00.418" level="INFO">Opening browser 'chrome' to base url 'https://trello.com/login' through remote server at 'http://selenium-hub:4444'.</msg>
<status status="PASS" starttime="20220704 14:38:00.418" endtime="20220704 14:38:01.443"/>
</kw>
<status status="PASS" starttime="20220704 14:38:00.418" endtime="20220704 14:38:01.443"/>
</branch>
<branch type="ELSE">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${url}</arg>
<arg>${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<status status="NOT RUN" starttime="20220704 14:38:01.443" endtime="20220704 14:38:01.443"/>
</kw>
<status status="NOT RUN" starttime="20220704 14:38:01.443" endtime="20220704 14:38:01.443"/>
</branch>
<status status="PASS" starttime="20220704 14:38:00.418" endtime="20220704 14:38:01.443"/>
</if>
<status status="PASS" starttime="20220704 14:38:00.417" endtime="20220704 14:38:01.443"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20220704 14:38:01.444" endtime="20220704 14:38:01.553"/>
</kw>
<kw name="Login To Trello" library="LoginPage">
<arg>${DEFAULT_EMAIL}</arg>
<arg>${DEFAULT_PASSWORD}</arg>
<doc>High-level keyword for logging in to Trello</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220704 14:38:01.568" level="INFO">${url} = https://trello.com/login</msg>
<status status="PASS" starttime="20220704 14:38:01.554" endtime="20220704 14:38:01.568"/>
</kw>
<if>
<branch type="IF" condition="'${url}' != '${LOGIN_URL}'">
<kw name="Go To" library="SeleniumLibrary">
<arg>${LOGIN_URL}</arg>
<doc>Navigates the current browser window to the provided ``url``.</doc>
<status status="NOT RUN" starttime="20220704 14:38:01.569" endtime="20220704 14:38:01.569"/>
</kw>
<status status="NOT RUN" starttime="20220704 14:38:01.569" endtime="20220704 14:38:01.569"/>
</branch>
<status status="PASS" starttime="20220704 14:38:01.569" endtime="20220704 14:38:01.569"/>
</if>
<kw name="Enter Username" library="LoginPage">
<arg>${username}</arg>
<doc>Take a username as argument and
enters it in the user_input</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${USER_INPUT}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 14:38:01.569" endtime="20220704 14:38:01.602"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${USER_INPUT}</arg>
<arg>${username}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220704 14:38:01.602" level="INFO">Typing text 'bootcamp04@mailinator.com' into text field 'css:input#user'.</msg>
<status status="PASS" starttime="20220704 14:38:01.602" endtime="20220704 14:38:01.708"/>
</kw>
<status status="PASS" starttime="20220704 14:38:01.569" endtime="20220704 14:38:01.709"/>
</kw>
<kw name="Wait Until Element Is Not Visible" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<doc>Waits until the element ``locator`` is not visible.</doc>
<status status="PASS" starttime="20220704 14:38:01.709" endtime="20220704 14:38:02.435"/>
</kw>
<kw name="Click Login Button" library="LoginPage">
<doc>Clicks Trello's login button if in Trello's
login page, else it clicks Atlassian's</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220704 14:38:02.443" level="INFO">${url} = https://trello.com/login</msg>
<status status="PASS" starttime="20220704 14:38:02.436" endtime="20220704 14:38:02.443"/>
</kw>
<if>
<branch type="IF" condition="'${url}' == '${LOGIN_URL}'">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220704 14:38:02.443" endtime="20220704 14:38:02.485"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220704 14:38:02.486" level="INFO">Clicking button 'css:input#login'.</msg>
<status status="PASS" starttime="20220704 14:38:02.486" endtime="20220704 14:38:03.295"/>
</kw>
<status status="PASS" starttime="20220704 14:38:02.443" endtime="20220704 14:38:03.295"/>
</branch>
<branch type="ELSE">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="NOT RUN" starttime="20220704 14:38:03.295" endtime="20220704 14:38:03.295"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<status status="NOT RUN" starttime="20220704 14:38:03.295" endtime="20220704 14:38:03.296"/>
</kw>
<status status="NOT RUN" starttime="20220704 14:38:03.295" endtime="20220704 14:38:03.296"/>
</branch>
<status status="PASS" starttime="20220704 14:38:02.443" endtime="20220704 14:38:03.296"/>
</if>
<status status="PASS" starttime="20220704 14:38:02.436" endtime="20220704 14:38:03.296"/>
</kw>
<kw name="Wait Until Location Is Atlassian's Login" library="LoginPage">
<doc>Waits for the page redirection when logging in.</doc>
<kw name="Wait Until Location Contains" library="SeleniumLibrary">
<arg>atlassian.com</arg>
<doc>Waits until the current URL contains ``expected``.</doc>
<status status="PASS" starttime="20220704 14:38:03.296" endtime="20220704 14:38:03.313"/>
</kw>
<status status="PASS" starttime="20220704 14:38:03.296" endtime="20220704 14:38:03.313"/>
</kw>
<kw name="Enter Password" library="LoginPage">
<arg>${password}</arg>
<doc>Take a password as argument and
enters it in the password_input</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<arg>timeout=10</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 14:38:03.314" endtime="20220704 14:38:03.629"/>
</kw>
<kw name="Input Password" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<arg>${password}</arg>
<doc>Types the given password into the text field identified by ``locator``.</doc>
<msg timestamp="20220704 14:38:03.630" level="INFO">Typing password into text field 'css:input#password'.</msg>
<msg timestamp="20220704 14:38:03.703" level="INFO">Temporally setting log level to: NONE</msg>
<msg timestamp="20220704 14:38:03.772" level="INFO">Log level changed from NONE to INFO.</msg>
<status status="PASS" starttime="20220704 14:38:03.630" endtime="20220704 14:38:03.772"/>
</kw>
<status status="PASS" starttime="20220704 14:38:03.313" endtime="20220704 14:38:03.772"/>
</kw>
<kw name="Click Login Button" library="LoginPage">
<doc>Clicks Trello's login button if in Trello's
login page, else it clicks Atlassian's</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220704 14:38:03.788" level="INFO">${url} = https://id.atlassian.com/login?application=trello&amp;continue=https%3A%2F%2Ftrello.com%2Fauth%2Fatlassian%2Fcallback%3FreturnUrl%3D%252F%26display%3D%26aaOnboarding%3D%26updateEmail%3D%26traceId%3D62c2fb...</msg>
<status status="PASS" starttime="20220704 14:38:03.773" endtime="20220704 14:38:03.788"/>
</kw>
<if>
<branch type="IF" condition="'${url}' == '${LOGIN_URL}'">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="NOT RUN" starttime="20220704 14:38:03.788" endtime="20220704 14:38:03.788"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<status status="NOT RUN" starttime="20220704 14:38:03.788" endtime="20220704 14:38:03.788"/>
</kw>
<status status="NOT RUN" starttime="20220704 14:38:03.788" endtime="20220704 14:38:03.788"/>
</branch>
<branch type="ELSE">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220704 14:38:03.789" endtime="20220704 14:38:03.838"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220704 14:38:03.839" level="INFO">Clicking button 'css:button#login-submit'.</msg>
<status status="PASS" starttime="20220704 14:38:03.839" endtime="20220704 14:38:03.928"/>
</kw>
<status status="PASS" starttime="20220704 14:38:03.788" endtime="20220704 14:38:03.928"/>
</branch>
<status status="PASS" starttime="20220704 14:38:03.788" endtime="20220704 14:38:03.928"/>
</if>
<status status="PASS" starttime="20220704 14:38:03.773" endtime="20220704 14:38:03.928"/>
</kw>
<status status="PASS" starttime="20220704 14:38:01.553" endtime="20220704 14:38:03.928"/>
</kw>
<kw name="Go To Board" library="BoardsPage">
<arg>TestBoard</arg>
<doc>Receives the board name and goes to that board's page.</doc>
<kw name="Format String" library="String">
<var>${locator}</var>
<arg>${BOARD_BUTTON}</arg>
<arg>${board_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:38:03.929" level="INFO">${locator} = //div[@title="TestBoard"]</msg>
<status status="PASS" starttime="20220704 14:38:03.929" endtime="20220704 14:38:03.929"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 14:38:03.930" endtime="20220704 14:38:06.904"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 14:38:06.905" level="INFO">Clicking element '//div[@title="TestBoard"]'.</msg>
<status status="PASS" starttime="20220704 14:38:06.904" endtime="20220704 14:38:07.240"/>
</kw>
<status status="PASS" starttime="20220704 14:38:03.929" endtime="20220704 14:38:07.241"/>
</kw>
<kw name="Create Card In List" library="ListComponent">
<arg>To Do</arg>
<arg>card1</arg>
<doc>Create a new card in the given list
Required args: list_name, card_name</doc>
<kw name="Format String" library="String">
<var>${add_card_locator}</var>
<arg>${LIST_ADD_CARD}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:38:07.242" level="INFO">${add_card_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Add a card')]</msg>
<status status="PASS" starttime="20220704 14:38:07.241" endtime="20220704 14:38:07.242"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${add_card_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 14:38:07.242" endtime="20220704 14:38:07.768"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${add_card_locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 14:38:07.768" level="INFO">Clicking element '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Add a card')]'.</msg>
<status status="PASS" starttime="20220704 14:38:07.768" endtime="20220704 14:38:07.832"/>
</kw>
<kw name="Format String" library="String">
<var>${textarea_locator}</var>
<arg>${CARD_TITLE_INPUT}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:38:07.833" level="INFO">${textarea_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//textarea[contains(@class, 'list-card-composer-textarea')]</msg>
<status status="PASS" starttime="20220704 14:38:07.833" endtime="20220704 14:38:07.833"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 14:38:07.833" endtime="20220704 14:38:07.897"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 14:38:07.898" level="INFO">Clicking element '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//textarea[contains(@class, 'list-card-composer-textarea')]'.</msg>
<status status="PASS" starttime="20220704 14:38:07.897" endtime="20220704 14:38:07.965"/>
</kw>
<kw name="Clear Element Text" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<doc>Clears the value of the text-input-element identified by ``locator``.</doc>
<status status="PASS" starttime="20220704 14:38:07.965" endtime="20220704 14:38:08.010"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<arg>${card_name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220704 14:38:08.010" level="INFO">Typing text 'card1' into text field '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//textarea[contains(@class, 'list-card-composer-textarea')]'.</msg>
<status status="PASS" starttime="20220704 14:38:08.010" endtime="20220704 14:38:08.099"/>
</kw>
<kw name="Format String" library="String">
<var>${confirm_locator}</var>
<arg>${CONFIRM_ADD_CARD}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:38:08.100" level="INFO">${confirm_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//input[@value='Add card']</msg>
<status status="PASS" starttime="20220704 14:38:08.100" endtime="20220704 14:38:08.100"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${confirm_locator}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220704 14:38:08.101" level="INFO">Clicking button '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//input[@value='Add card']'.</msg>
<status status="PASS" starttime="20220704 14:38:08.100" endtime="20220704 14:38:08.180"/>
</kw>
<status status="PASS" starttime="20220704 14:38:07.241" endtime="20220704 14:38:08.181"/>
</kw>
<kw name="Click pencil menu" library="ListComponent">
<arg>To Do</arg>
<arg>card1</arg>
<doc>Adds a label to an specific card</doc>
<kw name="Format String" library="String">
<var>${card_element}</var>
<arg>${LIST_CARD_NAME}</arg>
<arg>list_name=${list_name}</arg>
<arg>card_name=${card_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:38:08.182" level="INFO">${card_element} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'card1')]</msg>
<status status="PASS" starttime="20220704 14:38:08.181" endtime="20220704 14:38:08.182"/>
</kw>
<kw name="Format String" library="String">
<var>${pencil_locator}</var>
<arg>${PENCIL_ICON}</arg>
<arg>list_name=${list_name}</arg>
<arg>card_name=${card_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:38:08.182" level="INFO">${pencil_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'card1')]//span[contains(@class, 'icon-edit')]</msg>
<status status="PASS" starttime="20220704 14:38:08.182" endtime="20220704 14:38:08.182"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${card_element}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 14:38:08.182" endtime="20220704 14:38:08.235"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20220704 14:38:13.236" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20220704 14:38:08.236" endtime="20220704 14:38:13.236"/>
</kw>
<kw name="Mouse Over" library="SeleniumLibrary">
<arg>${card_element}</arg>
<doc>Simulates hovering the mouse over the element ``locator``.</doc>
<msg timestamp="20220704 14:38:13.237" level="INFO">Simulating Mouse Over on element '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'card1')]'.</msg>
<status status="PASS" starttime="20220704 14:38:13.236" endtime="20220704 14:38:13.534"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20220704 14:38:18.534" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20220704 14:38:13.534" endtime="20220704 14:38:18.534"/>
</kw>
<kw name="Wait Until Page Contains Element" library="SeleniumLibrary">
<arg>${pencil_locator}</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" starttime="20220704 14:38:18.535" endtime="20220704 14:38:18.551"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${pencil_locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 14:38:18.552" level="INFO">Clicking element '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'card1')]//span[contains(@class, 'icon-edit')]'.</msg>
<status status="PASS" starttime="20220704 14:38:18.551" endtime="20220704 14:38:18.640"/>
</kw>
<status status="PASS" starttime="20220704 14:38:08.181" endtime="20220704 14:38:18.641"/>
</kw>
<kw name="Add Color Label In Card" library="CardModal">
<arg>yellow</arg>
<doc>add label of a given color to a list</doc>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${EDIT_LABEL}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220704 14:38:18.641" endtime="20220704 14:38:18.698"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${EDIT_LABEL}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 14:38:18.699" level="INFO">Clicking element '//a[contains(@class,'js-edit-labels')]'.</msg>
<status status="PASS" starttime="20220704 14:38:18.698" endtime="20220704 14:38:18.778"/>
</kw>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LABEL_INPUT}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220704 14:38:18.778" endtime="20220704 14:38:18.830"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${LABEL_INPUT}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 14:38:18.830" level="INFO">Clicking element '//input[contains(@class,"js-autofocus")]'.</msg>
<status status="PASS" starttime="20220704 14:38:18.830" endtime="20220704 14:38:18.894"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${LABEL_INPUT}</arg>
<arg>${color}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220704 14:38:18.895" level="INFO">Typing text 'yellow' into text field '//input[contains(@class,"js-autofocus")]'.</msg>
<status status="PASS" starttime="20220704 14:38:18.894" endtime="20220704 14:38:19.004"/>
</kw>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LABEL_INPUT}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220704 14:38:19.004" endtime="20220704 14:38:19.044"/>
</kw>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>${LABEL_INPUT}</arg>
<arg>RETURN</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20220704 14:38:19.045" level="INFO">Sending key(s) ('RETURN',) to //input[contains(@class,"js-autofocus")] element.</msg>
<msg timestamp="20220704 14:38:19.332" level="INFO">Pressing special key RETURN to element.</msg>
<msg timestamp="20220704 14:38:19.332" level="INFO">Releasing special key RETURN.</msg>
<status status="PASS" starttime="20220704 14:38:19.044" endtime="20220704 14:38:19.378"/>
</kw>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>None</arg>
<arg>ESCAPE</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20220704 14:38:19.379" level="INFO">Sending key(s) ('ESCAPE',) to page.</msg>
<msg timestamp="20220704 14:38:19.379" level="INFO">Pressing special key ESCAPE to browser.</msg>
<msg timestamp="20220704 14:38:19.379" level="INFO">Releasing special key ESCAPE.</msg>
<status status="PASS" starttime="20220704 14:38:19.378" endtime="20220704 14:38:19.404"/>
</kw>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>None</arg>
<arg>ESCAPE</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20220704 14:38:19.404" level="INFO">Sending key(s) ('ESCAPE',) to page.</msg>
<msg timestamp="20220704 14:38:19.405" level="INFO">Pressing special key ESCAPE to browser.</msg>
<msg timestamp="20220704 14:38:19.405" level="INFO">Releasing special key ESCAPE.</msg>
<status status="PASS" starttime="20220704 14:38:19.404" endtime="20220704 14:38:19.425"/>
</kw>
<status status="PASS" starttime="20220704 14:38:18.641" endtime="20220704 14:38:19.426"/>
</kw>
<kw name="Create Card In List" library="ListComponent">
<arg>Doing</arg>
<arg>card2</arg>
<doc>Create a new card in the given list
Required args: list_name, card_name</doc>
<kw name="Format String" library="String">
<var>${add_card_locator}</var>
<arg>${LIST_ADD_CARD}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:38:19.427" level="INFO">${add_card_locator} = //h2[text()='Doing']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Add a card')]</msg>
<status status="PASS" starttime="20220704 14:38:19.426" endtime="20220704 14:38:19.427"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${add_card_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 14:38:19.427" endtime="20220704 14:38:19.472"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${add_card_locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 14:38:19.473" level="INFO">Clicking element '//h2[text()='Doing']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Add a card')]'.</msg>
<status status="PASS" starttime="20220704 14:38:19.472" endtime="20220704 14:38:19.537"/>
</kw>
<kw name="Format String" library="String">
<var>${textarea_locator}</var>
<arg>${CARD_TITLE_INPUT}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:38:19.538" level="INFO">${textarea_locator} = //h2[text()='Doing']//ancestor::div[contains(@class, 'list-content')]//textarea[contains(@class, 'list-card-composer-textarea')]</msg>
<status status="PASS" starttime="20220704 14:38:19.538" endtime="20220704 14:38:19.538"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 14:38:19.538" endtime="20220704 14:38:19.580"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 14:38:19.580" level="INFO">Clicking element '//h2[text()='Doing']//ancestor::div[contains(@class, 'list-content')]//textarea[contains(@class, 'list-card-composer-textarea')]'.</msg>
<status status="PASS" starttime="20220704 14:38:19.580" endtime="20220704 14:38:19.631"/>
</kw>
<kw name="Clear Element Text" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<doc>Clears the value of the text-input-element identified by ``locator``.</doc>
<status status="PASS" starttime="20220704 14:38:19.631" endtime="20220704 14:38:19.665"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<arg>${card_name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220704 14:38:19.665" level="INFO">Typing text 'card2' into text field '//h2[text()='Doing']//ancestor::div[contains(@class, 'list-content')]//textarea[contains(@class, 'list-card-composer-textarea')]'.</msg>
<status status="PASS" starttime="20220704 14:38:19.665" endtime="20220704 14:38:19.734"/>
</kw>
<kw name="Format String" library="String">
<var>${confirm_locator}</var>
<arg>${CONFIRM_ADD_CARD}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:38:19.735" level="INFO">${confirm_locator} = //h2[text()='Doing']//ancestor::div[contains(@class, 'list-content')]//input[@value='Add card']</msg>
<status status="PASS" starttime="20220704 14:38:19.734" endtime="20220704 14:38:19.735"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${confirm_locator}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220704 14:38:19.735" level="INFO">Clicking button '//h2[text()='Doing']//ancestor::div[contains(@class, 'list-content')]//input[@value='Add card']'.</msg>
<status status="PASS" starttime="20220704 14:38:19.735" endtime="20220704 14:38:19.804"/>
</kw>
<status status="PASS" starttime="20220704 14:38:19.426" endtime="20220704 14:38:19.804"/>
</kw>
<kw name="Create Card In List" library="ListComponent">
<arg>Done</arg>
<arg>card3</arg>
<doc>Create a new card in the given list
Required args: list_name, card_name</doc>
<kw name="Format String" library="String">
<var>${add_card_locator}</var>
<arg>${LIST_ADD_CARD}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:38:19.805" level="INFO">${add_card_locator} = //h2[text()='Done']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Add a card')]</msg>
<status status="PASS" starttime="20220704 14:38:19.805" endtime="20220704 14:38:19.805"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${add_card_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 14:38:19.805" endtime="20220704 14:38:19.857"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${add_card_locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 14:38:19.858" level="INFO">Clicking element '//h2[text()='Done']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Add a card')]'.</msg>
<status status="PASS" starttime="20220704 14:38:19.857" endtime="20220704 14:38:19.930"/>
</kw>
<kw name="Format String" library="String">
<var>${textarea_locator}</var>
<arg>${CARD_TITLE_INPUT}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:38:19.931" level="INFO">${textarea_locator} = //h2[text()='Done']//ancestor::div[contains(@class, 'list-content')]//textarea[contains(@class, 'list-card-composer-textarea')]</msg>
<status status="PASS" starttime="20220704 14:38:19.931" endtime="20220704 14:38:19.931"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 14:38:19.931" endtime="20220704 14:38:19.963"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 14:38:19.964" level="INFO">Clicking element '//h2[text()='Done']//ancestor::div[contains(@class, 'list-content')]//textarea[contains(@class, 'list-card-composer-textarea')]'.</msg>
<status status="PASS" starttime="20220704 14:38:19.963" endtime="20220704 14:38:20.044"/>
</kw>
<kw name="Clear Element Text" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<doc>Clears the value of the text-input-element identified by ``locator``.</doc>
<status status="PASS" starttime="20220704 14:38:20.044" endtime="20220704 14:38:20.088"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<arg>${card_name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220704 14:38:20.089" level="INFO">Typing text 'card3' into text field '//h2[text()='Done']//ancestor::div[contains(@class, 'list-content')]//textarea[contains(@class, 'list-card-composer-textarea')]'.</msg>
<status status="PASS" starttime="20220704 14:38:20.088" endtime="20220704 14:38:20.186"/>
</kw>
<kw name="Format String" library="String">
<var>${confirm_locator}</var>
<arg>${CONFIRM_ADD_CARD}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:38:20.186" level="INFO">${confirm_locator} = //h2[text()='Done']//ancestor::div[contains(@class, 'list-content')]//input[@value='Add card']</msg>
<status status="PASS" starttime="20220704 14:38:20.186" endtime="20220704 14:38:20.186"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${confirm_locator}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220704 14:38:20.187" level="INFO">Clicking button '//h2[text()='Done']//ancestor::div[contains(@class, 'list-content')]//input[@value='Add card']'.</msg>
<status status="PASS" starttime="20220704 14:38:20.187" endtime="20220704 14:38:20.268"/>
</kw>
<status status="PASS" starttime="20220704 14:38:19.804" endtime="20220704 14:38:20.269"/>
</kw>
<kw name="Enter To Filter Menu" library="TopBar">
<doc>accesing to the filter menu</doc>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${FILTER_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 14:38:20.269" level="INFO">Clicking element 'xpath://button[@data-test-id='filter-popover-button']'.</msg>
<status status="PASS" starttime="20220704 14:38:20.269" endtime="20220704 14:38:20.380"/>
</kw>
<status status="PASS" starttime="20220704 14:38:20.269" endtime="20220704 14:38:20.380"/>
</kw>
<kw name="Click no labels filter" library="FilterModal">
<doc>filters all cards with labes</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${NO_LABELS_FILTER}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 14:38:20.381" endtime="20220704 14:38:20.521"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${NO_LABELS_FILTER}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 14:38:20.521" level="INFO">Clicking element '//span[@aria-label='LabelIcon']'.</msg>
<status status="PASS" starttime="20220704 14:38:20.521" endtime="20220704 14:38:20.720"/>
</kw>
<status status="PASS" starttime="20220704 14:38:20.380" endtime="20220704 14:38:20.720"/>
</kw>
<kw name="Card Should Not Be In List" library="ListComponent">
<arg>card1</arg>
<arg>To Do</arg>
<doc>Check that a card is visible and in the given list
required: card_name, list_name</doc>
<kw name="Format String" library="String">
<var>${card_locator}</var>
<arg>${LIST_CARD_NAME}</arg>
<arg>list_name=${list_name}</arg>
<arg>card_name=${card_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:38:20.721" level="INFO">${card_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'card1')]</msg>
<status status="PASS" starttime="20220704 14:38:20.721" endtime="20220704 14:38:20.721"/>
</kw>
<kw name="Element Should Not Be Visible" library="SeleniumLibrary">
<arg>${card_locator}</arg>
<doc>Verifies that the element identified by ``locator`` is NOT visible.</doc>
<msg timestamp="20220704 14:38:20.766" level="INFO">Element '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'card1')]' exists but is not displayed.</msg>
<status status="PASS" starttime="20220704 14:38:20.722" endtime="20220704 14:38:20.766"/>
</kw>
<status status="PASS" starttime="20220704 14:38:20.720" endtime="20220704 14:38:20.767"/>
</kw>
<kw name="Click no labels filter" library="FilterModal">
<doc>filters all cards with labes</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${NO_LABELS_FILTER}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 14:38:20.767" endtime="20220704 14:38:20.809"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${NO_LABELS_FILTER}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 14:38:20.809" level="INFO">Clicking element '//span[@aria-label='LabelIcon']'.</msg>
<status status="PASS" starttime="20220704 14:38:20.809" endtime="20220704 14:38:20.934"/>
</kw>
<status status="PASS" starttime="20220704 14:38:20.767" endtime="20220704 14:38:20.934"/>
</kw>
<kw name="Card Should Be In List" library="ListComponent">
<arg>card1</arg>
<arg>To Do</arg>
<doc>Check that a card is visible and in the given list
required: card_name, list_name</doc>
<kw name="Format String" library="String">
<var>${card_locator}</var>
<arg>${LIST_CARD_NAME}</arg>
<arg>list_name=${list_name}</arg>
<arg>card_name=${card_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:38:20.935" level="INFO">${card_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'card1')]</msg>
<status status="PASS" starttime="20220704 14:38:20.935" endtime="20220704 14:38:20.935"/>
</kw>
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<arg>${card_locator}</arg>
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<msg timestamp="20220704 14:38:20.969" level="INFO">Element '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'card1')]' is displayed.</msg>
<status status="PASS" starttime="20220704 14:38:20.935" endtime="20220704 14:38:20.970"/>
</kw>
<status status="PASS" starttime="20220704 14:38:20.934" endtime="20220704 14:38:20.970"/>
</kw>
<kw name="Close Browser" library="SeleniumLibrary" type="TEARDOWN">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20220704 14:38:20.970" endtime="20220704 14:38:21.113"/>
</kw>
<doc>check filter card by label function</doc>
<tag>gui</tag>
<tag>list.create</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220704 14:38:00.417" endtime="20220704 14:38:21.113"/>
</test>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Teardown Board</arg>
<arg>Delete All Sessions</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Teardown Board">
<doc>Deletes used board for teardown</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:38:21.115" level="INFO">${url} = boards/62c2fb48db0b6a1ae58c3792</msg>
<status status="PASS" starttime="20220704 14:38:21.115" endtime="20220704 14:38:21.115"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 14:38:21.491" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:38:21.115" endtime="20220704 14:38:21.491"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:38:21.491" endtime="20220704 14:38:21.491"/>
</return>
<msg timestamp="20220704 14:38:21.491" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:38:21.115" endtime="20220704 14:38:21.491"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:38:21.491" endtime="20220704 14:38:21.491"/>
</return>
<status status="PASS" starttime="20220704 14:38:21.114" endtime="20220704 14:38:21.492"/>
</kw>
<status status="PASS" starttime="20220704 14:38:21.114" endtime="20220704 14:38:21.492"/>
</kw>
<status status="PASS" starttime="20220704 14:38:21.114" endtime="20220704 14:38:21.492"/>
</kw>
<kw name="Delete All Sessions" library="request_own_library">
<status status="PASS" starttime="20220704 14:38:21.492" endtime="20220704 14:38:21.493"/>
</kw>
<status status="PASS" starttime="20220704 14:38:21.113" endtime="20220704 14:38:21.493"/>
</kw>
<doc>Label Tests</doc>
<status status="PASS" starttime="20220704 14:38:00.200" endtime="20220704 14:38:21.494"/>
</suite>
<suite id="s1-s4-s1-s4" name="Trello Gui Lists" source="/trello/gui/trello_gui_lists.robot">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Create Trello Session</arg>
<arg>Setup Board</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Create Trello Session" library="TrelloAPI">
<doc>Creates a Trello Session</doc>
<kw name="Create Session" library="request_own_library">
<arg>${API_BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<status status="PASS" starttime="20220704 14:38:21.507" endtime="20220704 14:38:21.507"/>
</kw>
<status status="PASS" starttime="20220704 14:38:21.507" endtime="20220704 14:38:21.508"/>
</kw>
<kw name="Setup Board">
<doc>Creates a board and saves its ID</doc>
<kw name="Create A Board" library="Board">
<var>${BOARD}</var>
<arg>TestBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 14:38:21.509" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 14:38:21.508" endtime="20220704 14:38:21.509"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 14:38:21.509" endtime="20220704 14:38:21.509"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:38:21.510" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220704 14:38:21.509" endtime="20220704 14:38:21.510"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 14:38:21.693" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:38:21.510" endtime="20220704 14:38:21.693"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:38:21.693" endtime="20220704 14:38:21.694"/>
</return>
<msg timestamp="20220704 14:38:21.694" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:38:21.508" endtime="20220704 14:38:21.694"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:38:21.694" endtime="20220704 14:38:21.694"/>
</return>
<msg timestamp="20220704 14:38:21.694" level="INFO">${BOARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:38:21.508" endtime="20220704 14:38:21.694"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_BOARD_ID}</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220704 14:38:21.696" level="INFO">${TEST_SUITE_BOARD_ID} = 62c2fb5dbacb2e80403ebda5</msg>
<status status="PASS" starttime="20220704 14:38:21.694" endtime="20220704 14:38:21.696"/>
</kw>
<status status="PASS" starttime="20220704 14:38:21.508" endtime="20220704 14:38:21.696"/>
</kw>
<status status="PASS" starttime="20220704 14:38:21.507" endtime="20220704 14:38:21.696"/>
</kw>
<test id="s1-s4-s1-s4-t1" name="create list" line="18">
<kw name="Open Browser From Environment" library="CommonGUI">
<arg>${LOGIN_URL}</arg>
<doc>This keywords takes REMOTE and BROWSER variables
from the environment automatically and only needs a url</doc>
<if>
<branch type="IF" condition="${is_remote}">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${url}</arg>
<arg>${BROWSER}</arg>
<arg>remote_url=http://selenium-hub:4444</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20220704 14:38:21.698" level="INFO">Opening browser 'chrome' to base url 'https://trello.com/login' through remote server at 'http://selenium-hub:4444'.</msg>
<status status="PASS" starttime="20220704 14:38:21.698" endtime="20220704 14:38:22.716"/>
</kw>
<status status="PASS" starttime="20220704 14:38:21.697" endtime="20220704 14:38:22.716"/>
</branch>
<branch type="ELSE">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${url}</arg>
<arg>${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<status status="NOT RUN" starttime="20220704 14:38:22.716" endtime="20220704 14:38:22.716"/>
</kw>
<status status="NOT RUN" starttime="20220704 14:38:22.716" endtime="20220704 14:38:22.716"/>
</branch>
<status status="PASS" starttime="20220704 14:38:21.697" endtime="20220704 14:38:22.716"/>
</if>
<status status="PASS" starttime="20220704 14:38:21.697" endtime="20220704 14:38:22.716"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20220704 14:38:22.716" endtime="20220704 14:38:22.825"/>
</kw>
<kw name="Login To Trello" library="LoginPage">
<arg>${DEFAULT_EMAIL}</arg>
<arg>${DEFAULT_PASSWORD}</arg>
<doc>High-level keyword for logging in to Trello</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220704 14:38:22.835" level="INFO">${url} = https://trello.com/login</msg>
<status status="PASS" starttime="20220704 14:38:22.826" endtime="20220704 14:38:22.835"/>
</kw>
<if>
<branch type="IF" condition="'${url}' != '${LOGIN_URL}'">
<kw name="Go To" library="SeleniumLibrary">
<arg>${LOGIN_URL}</arg>
<doc>Navigates the current browser window to the provided ``url``.</doc>
<status status="NOT RUN" starttime="20220704 14:38:22.836" endtime="20220704 14:38:22.836"/>
</kw>
<status status="NOT RUN" starttime="20220704 14:38:22.835" endtime="20220704 14:38:22.836"/>
</branch>
<status status="PASS" starttime="20220704 14:38:22.835" endtime="20220704 14:38:22.836"/>
</if>
<kw name="Enter Username" library="LoginPage">
<arg>${username}</arg>
<doc>Take a username as argument and
enters it in the user_input</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${USER_INPUT}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 14:38:22.836" endtime="20220704 14:38:22.875"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${USER_INPUT}</arg>
<arg>${username}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220704 14:38:22.876" level="INFO">Typing text 'bootcamp04@mailinator.com' into text field 'css:input#user'.</msg>
<status status="PASS" starttime="20220704 14:38:22.876" endtime="20220704 14:38:22.983"/>
</kw>
<status status="PASS" starttime="20220704 14:38:22.836" endtime="20220704 14:38:22.983"/>
</kw>
<kw name="Wait Until Element Is Not Visible" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<doc>Waits until the element ``locator`` is not visible.</doc>
<status status="PASS" starttime="20220704 14:38:22.984" endtime="20220704 14:38:23.717"/>
</kw>
<kw name="Click Login Button" library="LoginPage">
<doc>Clicks Trello's login button if in Trello's
login page, else it clicks Atlassian's</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220704 14:38:23.728" level="INFO">${url} = https://trello.com/login</msg>
<status status="PASS" starttime="20220704 14:38:23.718" endtime="20220704 14:38:23.728"/>
</kw>
<if>
<branch type="IF" condition="'${url}' == '${LOGIN_URL}'">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220704 14:38:23.728" endtime="20220704 14:38:23.771"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220704 14:38:23.772" level="INFO">Clicking button 'css:input#login'.</msg>
<status status="PASS" starttime="20220704 14:38:23.772" endtime="20220704 14:38:24.593"/>
</kw>
<status status="PASS" starttime="20220704 14:38:23.728" endtime="20220704 14:38:24.593"/>
</branch>
<branch type="ELSE">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="NOT RUN" starttime="20220704 14:38:24.594" endtime="20220704 14:38:24.594"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<status status="NOT RUN" starttime="20220704 14:38:24.594" endtime="20220704 14:38:24.594"/>
</kw>
<status status="NOT RUN" starttime="20220704 14:38:24.593" endtime="20220704 14:38:24.594"/>
</branch>
<status status="PASS" starttime="20220704 14:38:23.728" endtime="20220704 14:38:24.594"/>
</if>
<status status="PASS" starttime="20220704 14:38:23.718" endtime="20220704 14:38:24.594"/>
</kw>
<kw name="Wait Until Location Is Atlassian's Login" library="LoginPage">
<doc>Waits for the page redirection when logging in.</doc>
<kw name="Wait Until Location Contains" library="SeleniumLibrary">
<arg>atlassian.com</arg>
<doc>Waits until the current URL contains ``expected``.</doc>
<status status="PASS" starttime="20220704 14:38:24.594" endtime="20220704 14:38:24.609"/>
</kw>
<status status="PASS" starttime="20220704 14:38:24.594" endtime="20220704 14:38:24.609"/>
</kw>
<kw name="Enter Password" library="LoginPage">
<arg>${password}</arg>
<doc>Take a password as argument and
enters it in the password_input</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<arg>timeout=10</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 14:38:24.610" endtime="20220704 14:38:24.677"/>
</kw>
<kw name="Input Password" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<arg>${password}</arg>
<doc>Types the given password into the text field identified by ``locator``.</doc>
<msg timestamp="20220704 14:38:24.678" level="INFO">Typing password into text field 'css:input#password'.</msg>
<msg timestamp="20220704 14:38:24.730" level="INFO">Temporally setting log level to: NONE</msg>
<msg timestamp="20220704 14:38:24.822" level="INFO">Log level changed from NONE to INFO.</msg>
<status status="PASS" starttime="20220704 14:38:24.677" endtime="20220704 14:38:24.822"/>
</kw>
<status status="PASS" starttime="20220704 14:38:24.609" endtime="20220704 14:38:24.822"/>
</kw>
<kw name="Click Login Button" library="LoginPage">
<doc>Clicks Trello's login button if in Trello's
login page, else it clicks Atlassian's</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220704 14:38:24.831" level="INFO">${url} = https://id.atlassian.com/login?application=trello&amp;continue=https%3A%2F%2Ftrello.com%2Fauth%2Fatlassian%2Fcallback%3FreturnUrl%3D%252F%26display%3D%26aaOnboarding%3D%26updateEmail%3D%26traceId%3D62c2fb...</msg>
<status status="PASS" starttime="20220704 14:38:24.823" endtime="20220704 14:38:24.831"/>
</kw>
<if>
<branch type="IF" condition="'${url}' == '${LOGIN_URL}'">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="NOT RUN" starttime="20220704 14:38:24.831" endtime="20220704 14:38:24.831"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<status status="NOT RUN" starttime="20220704 14:38:24.831" endtime="20220704 14:38:24.831"/>
</kw>
<status status="NOT RUN" starttime="20220704 14:38:24.831" endtime="20220704 14:38:24.831"/>
</branch>
<branch type="ELSE">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220704 14:38:24.832" endtime="20220704 14:38:24.882"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220704 14:38:24.883" level="INFO">Clicking button 'css:button#login-submit'.</msg>
<status status="PASS" starttime="20220704 14:38:24.883" endtime="20220704 14:38:24.975"/>
</kw>
<status status="PASS" starttime="20220704 14:38:24.832" endtime="20220704 14:38:24.975"/>
</branch>
<status status="PASS" starttime="20220704 14:38:24.831" endtime="20220704 14:38:24.975"/>
</if>
<status status="PASS" starttime="20220704 14:38:24.823" endtime="20220704 14:38:24.975"/>
</kw>
<status status="PASS" starttime="20220704 14:38:22.826" endtime="20220704 14:38:24.975"/>
</kw>
<kw name="Go To Board" library="BoardsPage">
<arg>TestBoard</arg>
<doc>Receives the board name and goes to that board's page.</doc>
<kw name="Format String" library="String">
<var>${locator}</var>
<arg>${BOARD_BUTTON}</arg>
<arg>${board_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:38:24.976" level="INFO">${locator} = //div[@title="TestBoard"]</msg>
<status status="PASS" starttime="20220704 14:38:24.976" endtime="20220704 14:38:24.976"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 14:38:24.977" endtime="20220704 14:38:27.785"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 14:38:27.785" level="INFO">Clicking element '//div[@title="TestBoard"]'.</msg>
<status status="PASS" starttime="20220704 14:38:27.785" endtime="20220704 14:38:28.137"/>
</kw>
<status status="PASS" starttime="20220704 14:38:24.976" endtime="20220704 14:38:28.138"/>
</kw>
<kw name="Create new list with the name" library="ListComponent">
<arg>NEW_TEST_LIST</arg>
<doc>Create a new list with the given name</doc>
<kw name="Wait Until Page Contains Element" library="SeleniumLibrary">
<arg>${ADD_LIST_BUTTON}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" starttime="20220704 14:38:28.138" endtime="20220704 14:38:28.563"/>
</kw>
<kw name="Click Link" library="SeleniumLibrary">
<arg>${ADD_LIST_BUTTON}</arg>
<doc>Clicks a link identified by ``locator``.</doc>
<msg timestamp="20220704 14:38:28.563" level="INFO">Clicking link 'xpath://a[contains(@Class, 'open-add-list')]'.</msg>
<status status="PASS" starttime="20220704 14:38:28.563" endtime="20220704 14:38:28.724"/>
</kw>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LIST_NAME_INPUT}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220704 14:38:28.725" endtime="20220704 14:38:28.804"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${LIST_NAME_INPUT}</arg>
<arg>${list_name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220704 14:38:28.805" level="INFO">Typing text 'NEW_TEST_LIST' into text field 'xpath://input[@class="list-name-input"]'.</msg>
<status status="PASS" starttime="20220704 14:38:28.805" endtime="20220704 14:38:28.936"/>
</kw>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>${LIST_NAME_INPUT}</arg>
<arg>RETURN</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20220704 14:38:28.937" level="INFO">Sending key(s) ('RETURN',) to xpath://input[@class="list-name-input"] element.</msg>
<msg timestamp="20220704 14:38:29.280" level="INFO">Pressing special key RETURN to element.</msg>
<msg timestamp="20220704 14:38:29.280" level="INFO">Releasing special key RETURN.</msg>
<status status="PASS" starttime="20220704 14:38:28.936" endtime="20220704 14:38:29.314"/>
</kw>
<status status="PASS" starttime="20220704 14:38:28.138" endtime="20220704 14:38:29.314"/>
</kw>
<kw name="Verify That The List Exists" library="ListComponent">
<arg>NEW_TEST_LIST</arg>
<doc>Verify that a given header of a list matches</doc>
<kw name="Format String" library="String">
<var>${list_name_locator}</var>
<arg>${LIST_DIV}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:38:29.315" level="INFO">${list_name_locator} = //h2[text()='NEW_TEST_LIST']//ancestor::div[contains(@class, 'list-content')]</msg>
<status status="PASS" starttime="20220704 14:38:29.315" endtime="20220704 14:38:29.315"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${list_name_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 14:38:29.315" endtime="20220704 14:38:29.359"/>
</kw>
<kw name="Page Should Contain Element" library="SeleniumLibrary">
<arg>${list_name_locator}</arg>
<doc>Verifies that element ``locator`` is found on the current page.</doc>
<msg timestamp="20220704 14:38:29.379" level="INFO">Current page contains element '//h2[text()='NEW_TEST_LIST']//ancestor::div[contains(@class, 'list-content')]'.</msg>
<status status="PASS" starttime="20220704 14:38:29.360" endtime="20220704 14:38:29.379"/>
</kw>
<status status="PASS" starttime="20220704 14:38:29.314" endtime="20220704 14:38:29.379"/>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Close a list</arg>
<arg>Close Browser</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Close a list" library="ListComponent">
<doc>archives a list</doc>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LIST_ACTIONS_BUTTON}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220704 14:38:29.380" endtime="20220704 14:38:29.466"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Click Link</arg>
<arg>${LIST_ACTIONS_BUTTON}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Click Link" library="SeleniumLibrary">
<arg>${LIST_ACTIONS_BUTTON}</arg>
<doc>Clicks a link identified by ``locator``.</doc>
<msg timestamp="20220704 14:38:29.467" level="INFO">Clicking link 'xpath://div[@class='js-list list-wrapper'][last()]//a[@aria-label="List actions"]'.</msg>
<status status="PASS" starttime="20220704 14:38:29.467" endtime="20220704 14:38:29.562"/>
</kw>
<status status="PASS" starttime="20220704 14:38:29.467" endtime="20220704 14:38:29.562"/>
</kw>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${CLOSE_LIST_BUTTON}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220704 14:38:29.563" endtime="20220704 14:38:29.646"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Click Link</arg>
<arg>${CLOSE_LIST_BUTTON}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Click Link" library="SeleniumLibrary">
<arg>${CLOSE_LIST_BUTTON}</arg>
<doc>Clicks a link identified by ``locator``.</doc>
<msg timestamp="20220704 14:38:29.647" level="INFO">Clicking link 'xpath://li//a[@class='js-close-list']'.</msg>
<status status="PASS" starttime="20220704 14:38:29.646" endtime="20220704 14:38:29.734"/>
</kw>
<status status="PASS" starttime="20220704 14:38:29.646" endtime="20220704 14:38:29.734"/>
</kw>
<status status="PASS" starttime="20220704 14:38:29.380" endtime="20220704 14:38:29.735"/>
</kw>
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20220704 14:38:29.735" endtime="20220704 14:38:29.819"/>
</kw>
<status status="PASS" starttime="20220704 14:38:29.379" endtime="20220704 14:38:29.819"/>
</kw>
<doc>verify that a list can be created in GUI</doc>
<tag>gui</tag>
<tag>list.create</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220704 14:38:21.696" endtime="20220704 14:38:29.819"/>
</test>
<test id="s1-s4-s1-s4-t2" name="modify name of a list" line="31">
<kw name="Open Browser From Environment" library="CommonGUI">
<arg>${LOGIN_URL}</arg>
<doc>This keywords takes REMOTE and BROWSER variables
from the environment automatically and only needs a url</doc>
<if>
<branch type="IF" condition="${is_remote}">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${url}</arg>
<arg>${BROWSER}</arg>
<arg>remote_url=http://selenium-hub:4444</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20220704 14:38:29.823" level="INFO">Opening browser 'chrome' to base url 'https://trello.com/login' through remote server at 'http://selenium-hub:4444'.</msg>
<status status="PASS" starttime="20220704 14:38:29.823" endtime="20220704 14:38:30.852"/>
</kw>
<status status="PASS" starttime="20220704 14:38:29.822" endtime="20220704 14:38:30.852"/>
</branch>
<branch type="ELSE">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${url}</arg>
<arg>${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<status status="NOT RUN" starttime="20220704 14:38:30.852" endtime="20220704 14:38:30.852"/>
</kw>
<status status="NOT RUN" starttime="20220704 14:38:30.852" endtime="20220704 14:38:30.852"/>
</branch>
<status status="PASS" starttime="20220704 14:38:29.822" endtime="20220704 14:38:30.852"/>
</if>
<status status="PASS" starttime="20220704 14:38:29.822" endtime="20220704 14:38:30.852"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20220704 14:38:30.852" endtime="20220704 14:38:30.966"/>
</kw>
<kw name="Login To Trello" library="LoginPage">
<arg>${DEFAULT_EMAIL}</arg>
<arg>${DEFAULT_PASSWORD}</arg>
<doc>High-level keyword for logging in to Trello</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220704 14:38:30.975" level="INFO">${url} = https://trello.com/login</msg>
<status status="PASS" starttime="20220704 14:38:30.967" endtime="20220704 14:38:30.975"/>
</kw>
<if>
<branch type="IF" condition="'${url}' != '${LOGIN_URL}'">
<kw name="Go To" library="SeleniumLibrary">
<arg>${LOGIN_URL}</arg>
<doc>Navigates the current browser window to the provided ``url``.</doc>
<status status="NOT RUN" starttime="20220704 14:38:30.976" endtime="20220704 14:38:30.976"/>
</kw>
<status status="NOT RUN" starttime="20220704 14:38:30.976" endtime="20220704 14:38:30.976"/>
</branch>
<status status="PASS" starttime="20220704 14:38:30.976" endtime="20220704 14:38:30.976"/>
</if>
<kw name="Enter Username" library="LoginPage">
<arg>${username}</arg>
<doc>Take a username as argument and
enters it in the user_input</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${USER_INPUT}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 14:38:30.976" endtime="20220704 14:38:31.011"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${USER_INPUT}</arg>
<arg>${username}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220704 14:38:31.012" level="INFO">Typing text 'bootcamp04@mailinator.com' into text field 'css:input#user'.</msg>
<status status="PASS" starttime="20220704 14:38:31.011" endtime="20220704 14:38:31.111"/>
</kw>
<status status="PASS" starttime="20220704 14:38:30.976" endtime="20220704 14:38:31.112"/>
</kw>
<kw name="Wait Until Element Is Not Visible" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<doc>Waits until the element ``locator`` is not visible.</doc>
<status status="PASS" starttime="20220704 14:38:31.112" endtime="20220704 14:38:31.848"/>
</kw>
<kw name="Click Login Button" library="LoginPage">
<doc>Clicks Trello's login button if in Trello's
login page, else it clicks Atlassian's</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220704 14:38:31.859" level="INFO">${url} = https://trello.com/login</msg>
<status status="PASS" starttime="20220704 14:38:31.849" endtime="20220704 14:38:31.859"/>
</kw>
<if>
<branch type="IF" condition="'${url}' == '${LOGIN_URL}'">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220704 14:38:31.860" endtime="20220704 14:38:31.911"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220704 14:38:31.912" level="INFO">Clicking button 'css:input#login'.</msg>
<status status="PASS" starttime="20220704 14:38:31.912" endtime="20220704 14:38:32.710"/>
</kw>
<status status="PASS" starttime="20220704 14:38:31.860" endtime="20220704 14:38:32.710"/>
</branch>
<branch type="ELSE">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="NOT RUN" starttime="20220704 14:38:32.710" endtime="20220704 14:38:32.710"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<status status="NOT RUN" starttime="20220704 14:38:32.710" endtime="20220704 14:38:32.710"/>
</kw>
<status status="NOT RUN" starttime="20220704 14:38:32.710" endtime="20220704 14:38:32.710"/>
</branch>
<status status="PASS" starttime="20220704 14:38:31.860" endtime="20220704 14:38:32.710"/>
</if>
<status status="PASS" starttime="20220704 14:38:31.848" endtime="20220704 14:38:32.710"/>
</kw>
<kw name="Wait Until Location Is Atlassian's Login" library="LoginPage">
<doc>Waits for the page redirection when logging in.</doc>
<kw name="Wait Until Location Contains" library="SeleniumLibrary">
<arg>atlassian.com</arg>
<doc>Waits until the current URL contains ``expected``.</doc>
<status status="PASS" starttime="20220704 14:38:32.711" endtime="20220704 14:38:32.729"/>
</kw>
<status status="PASS" starttime="20220704 14:38:32.710" endtime="20220704 14:38:32.729"/>
</kw>
<kw name="Enter Password" library="LoginPage">
<arg>${password}</arg>
<doc>Take a password as argument and
enters it in the password_input</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<arg>timeout=10</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 14:38:32.730" endtime="20220704 14:38:32.799"/>
</kw>
<kw name="Input Password" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<arg>${password}</arg>
<doc>Types the given password into the text field identified by ``locator``.</doc>
<msg timestamp="20220704 14:38:32.800" level="INFO">Typing password into text field 'css:input#password'.</msg>
<msg timestamp="20220704 14:38:32.864" level="INFO">Temporally setting log level to: NONE</msg>
<msg timestamp="20220704 14:38:32.948" level="INFO">Log level changed from NONE to INFO.</msg>
<status status="PASS" starttime="20220704 14:38:32.799" endtime="20220704 14:38:32.949"/>
</kw>
<status status="PASS" starttime="20220704 14:38:32.729" endtime="20220704 14:38:32.949"/>
</kw>
<kw name="Click Login Button" library="LoginPage">
<doc>Clicks Trello's login button if in Trello's
login page, else it clicks Atlassian's</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220704 14:38:32.963" level="INFO">${url} = https://id.atlassian.com/login?application=trello&amp;continue=https%3A%2F%2Ftrello.com%2Fauth%2Fatlassian%2Fcallback%3FreturnUrl%3D%252F%26display%3D%26aaOnboarding%3D%26updateEmail%3D%26traceId%3D62c2fb...</msg>
<status status="PASS" starttime="20220704 14:38:32.949" endtime="20220704 14:38:32.963"/>
</kw>
<if>
<branch type="IF" condition="'${url}' == '${LOGIN_URL}'">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="NOT RUN" starttime="20220704 14:38:32.964" endtime="20220704 14:38:32.964"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<status status="NOT RUN" starttime="20220704 14:38:32.964" endtime="20220704 14:38:32.964"/>
</kw>
<status status="NOT RUN" starttime="20220704 14:38:32.964" endtime="20220704 14:38:32.964"/>
</branch>
<branch type="ELSE">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220704 14:38:32.964" endtime="20220704 14:38:33.021"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220704 14:38:33.022" level="INFO">Clicking button 'css:button#login-submit'.</msg>
<status status="PASS" starttime="20220704 14:38:33.022" endtime="20220704 14:38:33.111"/>
</kw>
<status status="PASS" starttime="20220704 14:38:32.964" endtime="20220704 14:38:33.111"/>
</branch>
<status status="PASS" starttime="20220704 14:38:32.963" endtime="20220704 14:38:33.111"/>
</if>
<status status="PASS" starttime="20220704 14:38:32.949" endtime="20220704 14:38:33.112"/>
</kw>
<status status="PASS" starttime="20220704 14:38:30.967" endtime="20220704 14:38:33.112"/>
</kw>
<kw name="Go To Board" library="BoardsPage">
<arg>TestBoard</arg>
<doc>Receives the board name and goes to that board's page.</doc>
<kw name="Format String" library="String">
<var>${locator}</var>
<arg>${BOARD_BUTTON}</arg>
<arg>${board_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:38:33.113" level="INFO">${locator} = //div[@title="TestBoard"]</msg>
<status status="PASS" starttime="20220704 14:38:33.112" endtime="20220704 14:38:33.113"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 14:38:33.113" endtime="20220704 14:38:35.956"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 14:38:35.956" level="INFO">Clicking element '//div[@title="TestBoard"]'.</msg>
<status status="PASS" starttime="20220704 14:38:35.956" endtime="20220704 14:38:36.263"/>
</kw>
<status status="PASS" starttime="20220704 14:38:33.112" endtime="20220704 14:38:36.263"/>
</kw>
<kw name="Create new list with the name" library="ListComponent">
<arg>TO_MODIFY</arg>
<doc>Create a new list with the given name</doc>
<kw name="Wait Until Page Contains Element" library="SeleniumLibrary">
<arg>${ADD_LIST_BUTTON}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" starttime="20220704 14:38:36.264" endtime="20220704 14:38:36.671"/>
</kw>
<kw name="Click Link" library="SeleniumLibrary">
<arg>${ADD_LIST_BUTTON}</arg>
<doc>Clicks a link identified by ``locator``.</doc>
<msg timestamp="20220704 14:38:36.671" level="INFO">Clicking link 'xpath://a[contains(@Class, 'open-add-list')]'.</msg>
<status status="PASS" starttime="20220704 14:38:36.671" endtime="20220704 14:38:36.816"/>
</kw>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LIST_NAME_INPUT}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220704 14:38:36.816" endtime="20220704 14:38:36.896"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${LIST_NAME_INPUT}</arg>
<arg>${list_name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220704 14:38:36.897" level="INFO">Typing text 'TO_MODIFY' into text field 'xpath://input[@class="list-name-input"]'.</msg>
<status status="PASS" starttime="20220704 14:38:36.896" endtime="20220704 14:38:37.005"/>
</kw>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>${LIST_NAME_INPUT}</arg>
<arg>RETURN</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20220704 14:38:37.006" level="INFO">Sending key(s) ('RETURN',) to xpath://input[@class="list-name-input"] element.</msg>
<msg timestamp="20220704 14:38:37.333" level="INFO">Pressing special key RETURN to element.</msg>
<msg timestamp="20220704 14:38:37.333" level="INFO">Releasing special key RETURN.</msg>
<status status="PASS" starttime="20220704 14:38:37.006" endtime="20220704 14:38:37.362"/>
</kw>
<status status="PASS" starttime="20220704 14:38:36.263" endtime="20220704 14:38:37.362"/>
</kw>
<kw name="Modify the name of a list with" library="ListComponent">
<arg>TO_MODIFY</arg>
<arg>MODIFIED_LIST</arg>
<doc>Modify the name of an existent list</doc>
<kw name="Format String" library="String">
<var>${name_header_instance}</var>
<arg>${LIST_NAME_HEADER}</arg>
<arg>old_name=${old_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:38:37.363" level="INFO">${name_header_instance} = xpath://div[@class='list-header js-list-header u-clearfix is-menu-shown' and contains(.,'TO_MODIFY')]</msg>
<status status="PASS" starttime="20220704 14:38:37.363" endtime="20220704 14:38:37.363"/>
</kw>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${name_header_instance}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220704 14:38:37.364" endtime="20220704 14:38:37.417"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${name_header_instance}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 14:38:37.418" level="INFO">Clicking element 'xpath://div[@class='list-header js-list-header u-clearfix is-menu-shown' and contains(.,'TO_MODIFY')]'.</msg>
<status status="PASS" starttime="20220704 14:38:37.417" endtime="20220704 14:38:37.478"/>
</kw>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LIST_NAME_INPUT}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220704 14:38:37.478" endtime="20220704 14:38:37.532"/>
</kw>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>${LIST_NAME_INPUT}</arg>
<arg>BACKSPACE</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20220704 14:38:37.533" level="INFO">Sending key(s) ('BACKSPACE',) to xpath://input[@class="list-name-input"] element.</msg>
<msg timestamp="20220704 14:38:37.822" level="INFO">Pressing special key BACKSPACE to element.</msg>
<msg timestamp="20220704 14:38:37.822" level="INFO">Releasing special key BACKSPACE.</msg>
<status status="PASS" starttime="20220704 14:38:37.532" endtime="20220704 14:38:37.840"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${LIST_TEXT_AREA_NAME}</arg>
<arg>${new_name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220704 14:38:37.841" level="INFO">Typing text 'MODIFIED_LIST' into text field 'xpath://div[@class='js-list list-wrapper'][last()]//textarea'.</msg>
<status status="PASS" starttime="20220704 14:38:37.840" endtime="20220704 14:38:37.955"/>
</kw>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>None</arg>
<arg>RETURN</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20220704 14:38:37.956" level="INFO">Sending key(s) ('RETURN',) to page.</msg>
<msg timestamp="20220704 14:38:37.956" level="INFO">Pressing special key RETURN to browser.</msg>
<msg timestamp="20220704 14:38:37.956" level="INFO">Releasing special key RETURN.</msg>
<status status="PASS" starttime="20220704 14:38:37.956" endtime="20220704 14:38:37.976"/>
</kw>
<status status="PASS" starttime="20220704 14:38:37.363" endtime="20220704 14:38:37.976"/>
</kw>
<kw name="Verify That The List Exists" library="ListComponent">
<arg>MODIFIED_LIST</arg>
<doc>Verify that a given header of a list matches</doc>
<kw name="Format String" library="String">
<var>${list_name_locator}</var>
<arg>${LIST_DIV}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:38:37.977" level="INFO">${list_name_locator} = //h2[text()='MODIFIED_LIST']//ancestor::div[contains(@class, 'list-content')]</msg>
<status status="PASS" starttime="20220704 14:38:37.977" endtime="20220704 14:38:37.977"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${list_name_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 14:38:37.977" endtime="20220704 14:38:38.016"/>
</kw>
<kw name="Page Should Contain Element" library="SeleniumLibrary">
<arg>${list_name_locator}</arg>
<doc>Verifies that element ``locator`` is found on the current page.</doc>
<msg timestamp="20220704 14:38:38.033" level="INFO">Current page contains element '//h2[text()='MODIFIED_LIST']//ancestor::div[contains(@class, 'list-content')]'.</msg>
<status status="PASS" starttime="20220704 14:38:38.017" endtime="20220704 14:38:38.033"/>
</kw>
<status status="PASS" starttime="20220704 14:38:37.976" endtime="20220704 14:38:38.033"/>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Close a list</arg>
<arg>Close Browser</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Close a list" library="ListComponent">
<doc>archives a list</doc>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LIST_ACTIONS_BUTTON}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220704 14:38:38.034" endtime="20220704 14:38:38.080"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Click Link</arg>
<arg>${LIST_ACTIONS_BUTTON}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Click Link" library="SeleniumLibrary">
<arg>${LIST_ACTIONS_BUTTON}</arg>
<doc>Clicks a link identified by ``locator``.</doc>
<msg timestamp="20220704 14:38:38.081" level="INFO">Clicking link 'xpath://div[@class='js-list list-wrapper'][last()]//a[@aria-label="List actions"]'.</msg>
<status status="PASS" starttime="20220704 14:38:38.080" endtime="20220704 14:38:38.166"/>
</kw>
<status status="PASS" starttime="20220704 14:38:38.080" endtime="20220704 14:38:38.166"/>
</kw>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${CLOSE_LIST_BUTTON}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220704 14:38:38.167" endtime="20220704 14:38:38.248"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Click Link</arg>
<arg>${CLOSE_LIST_BUTTON}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Click Link" library="SeleniumLibrary">
<arg>${CLOSE_LIST_BUTTON}</arg>
<doc>Clicks a link identified by ``locator``.</doc>
<msg timestamp="20220704 14:38:38.249" level="INFO">Clicking link 'xpath://li//a[@class='js-close-list']'.</msg>
<status status="PASS" starttime="20220704 14:38:38.249" endtime="20220704 14:38:38.363"/>
</kw>
<status status="PASS" starttime="20220704 14:38:38.248" endtime="20220704 14:38:38.363"/>
</kw>
<status status="PASS" starttime="20220704 14:38:38.034" endtime="20220704 14:38:38.363"/>
</kw>
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20220704 14:38:38.363" endtime="20220704 14:38:38.446"/>
</kw>
<status status="PASS" starttime="20220704 14:38:38.033" endtime="20220704 14:38:38.446"/>
</kw>
<doc>verify that a list name can be modified in GUI</doc>
<tag>gui</tag>
<tag>list.update</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220704 14:38:29.820" endtime="20220704 14:38:38.446"/>
</test>
<test id="s1-s4-s1-s4-t3" name="archive a list" line="45">
<kw name="Open Browser From Environment" library="CommonGUI">
<arg>${LOGIN_URL}</arg>
<doc>This keywords takes REMOTE and BROWSER variables
from the environment automatically and only needs a url</doc>
<if>
<branch type="IF" condition="${is_remote}">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${url}</arg>
<arg>${BROWSER}</arg>
<arg>remote_url=http://selenium-hub:4444</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20220704 14:38:38.450" level="INFO">Opening browser 'chrome' to base url 'https://trello.com/login' through remote server at 'http://selenium-hub:4444'.</msg>
<status status="PASS" starttime="20220704 14:38:38.449" endtime="20220704 14:38:39.377"/>
</kw>
<status status="PASS" starttime="20220704 14:38:38.449" endtime="20220704 14:38:39.377"/>
</branch>
<branch type="ELSE">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${url}</arg>
<arg>${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<status status="NOT RUN" starttime="20220704 14:38:39.377" endtime="20220704 14:38:39.377"/>
</kw>
<status status="NOT RUN" starttime="20220704 14:38:39.377" endtime="20220704 14:38:39.377"/>
</branch>
<status status="PASS" starttime="20220704 14:38:38.449" endtime="20220704 14:38:39.377"/>
</if>
<status status="PASS" starttime="20220704 14:38:38.448" endtime="20220704 14:38:39.377"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20220704 14:38:39.378" endtime="20220704 14:38:39.499"/>
</kw>
<kw name="Login To Trello" library="LoginPage">
<arg>${DEFAULT_EMAIL}</arg>
<arg>${DEFAULT_PASSWORD}</arg>
<doc>High-level keyword for logging in to Trello</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220704 14:38:39.507" level="INFO">${url} = https://trello.com/login</msg>
<status status="PASS" starttime="20220704 14:38:39.500" endtime="20220704 14:38:39.507"/>
</kw>
<if>
<branch type="IF" condition="'${url}' != '${LOGIN_URL}'">
<kw name="Go To" library="SeleniumLibrary">
<arg>${LOGIN_URL}</arg>
<doc>Navigates the current browser window to the provided ``url``.</doc>
<status status="NOT RUN" starttime="20220704 14:38:39.508" endtime="20220704 14:38:39.508"/>
</kw>
<status status="NOT RUN" starttime="20220704 14:38:39.508" endtime="20220704 14:38:39.508"/>
</branch>
<status status="PASS" starttime="20220704 14:38:39.507" endtime="20220704 14:38:39.508"/>
</if>
<kw name="Enter Username" library="LoginPage">
<arg>${username}</arg>
<doc>Take a username as argument and
enters it in the user_input</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${USER_INPUT}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 14:38:39.508" endtime="20220704 14:38:39.541"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${USER_INPUT}</arg>
<arg>${username}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220704 14:38:39.542" level="INFO">Typing text 'bootcamp04@mailinator.com' into text field 'css:input#user'.</msg>
<status status="PASS" starttime="20220704 14:38:39.542" endtime="20220704 14:38:39.640"/>
</kw>
<status status="PASS" starttime="20220704 14:38:39.508" endtime="20220704 14:38:39.640"/>
</kw>
<kw name="Wait Until Element Is Not Visible" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<doc>Waits until the element ``locator`` is not visible.</doc>
<status status="PASS" starttime="20220704 14:38:39.640" endtime="20220704 14:38:40.366"/>
</kw>
<kw name="Click Login Button" library="LoginPage">
<doc>Clicks Trello's login button if in Trello's
login page, else it clicks Atlassian's</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220704 14:38:40.373" level="INFO">${url} = https://trello.com/login</msg>
<status status="PASS" starttime="20220704 14:38:40.366" endtime="20220704 14:38:40.373"/>
</kw>
<if>
<branch type="IF" condition="'${url}' == '${LOGIN_URL}'">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220704 14:38:40.373" endtime="20220704 14:38:40.441"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220704 14:38:40.441" level="INFO">Clicking button 'css:input#login'.</msg>
<status status="PASS" starttime="20220704 14:38:40.441" endtime="20220704 14:38:41.246"/>
</kw>
<status status="PASS" starttime="20220704 14:38:40.373" endtime="20220704 14:38:41.246"/>
</branch>
<branch type="ELSE">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="NOT RUN" starttime="20220704 14:38:41.246" endtime="20220704 14:38:41.246"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<status status="NOT RUN" starttime="20220704 14:38:41.246" endtime="20220704 14:38:41.246"/>
</kw>
<status status="NOT RUN" starttime="20220704 14:38:41.246" endtime="20220704 14:38:41.246"/>
</branch>
<status status="PASS" starttime="20220704 14:38:40.373" endtime="20220704 14:38:41.246"/>
</if>
<status status="PASS" starttime="20220704 14:38:40.366" endtime="20220704 14:38:41.247"/>
</kw>
<kw name="Wait Until Location Is Atlassian's Login" library="LoginPage">
<doc>Waits for the page redirection when logging in.</doc>
<kw name="Wait Until Location Contains" library="SeleniumLibrary">
<arg>atlassian.com</arg>
<doc>Waits until the current URL contains ``expected``.</doc>
<status status="PASS" starttime="20220704 14:38:41.247" endtime="20220704 14:38:41.288"/>
</kw>
<status status="PASS" starttime="20220704 14:38:41.247" endtime="20220704 14:38:41.288"/>
</kw>
<kw name="Enter Password" library="LoginPage">
<arg>${password}</arg>
<doc>Take a password as argument and
enters it in the password_input</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<arg>timeout=10</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 14:38:41.289" endtime="20220704 14:38:41.344"/>
</kw>
<kw name="Input Password" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<arg>${password}</arg>
<doc>Types the given password into the text field identified by ``locator``.</doc>
<msg timestamp="20220704 14:38:41.345" level="INFO">Typing password into text field 'css:input#password'.</msg>
<msg timestamp="20220704 14:38:41.410" level="INFO">Temporally setting log level to: NONE</msg>
<msg timestamp="20220704 14:38:41.509" level="INFO">Log level changed from NONE to INFO.</msg>
<status status="PASS" starttime="20220704 14:38:41.344" endtime="20220704 14:38:41.509"/>
</kw>
<status status="PASS" starttime="20220704 14:38:41.289" endtime="20220704 14:38:41.509"/>
</kw>
<kw name="Click Login Button" library="LoginPage">
<doc>Clicks Trello's login button if in Trello's
login page, else it clicks Atlassian's</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220704 14:38:41.519" level="INFO">${url} = https://id.atlassian.com/login?application=trello&amp;continue=https%3A%2F%2Ftrello.com%2Fauth%2Fatlassian%2Fcallback%3FreturnUrl%3D%252F%26display%3D%26aaOnboarding%3D%26updateEmail%3D%26traceId%3D62c2fb...</msg>
<status status="PASS" starttime="20220704 14:38:41.510" endtime="20220704 14:38:41.519"/>
</kw>
<if>
<branch type="IF" condition="'${url}' == '${LOGIN_URL}'">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="NOT RUN" starttime="20220704 14:38:41.519" endtime="20220704 14:38:41.519"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<status status="NOT RUN" starttime="20220704 14:38:41.519" endtime="20220704 14:38:41.519"/>
</kw>
<status status="NOT RUN" starttime="20220704 14:38:41.519" endtime="20220704 14:38:41.520"/>
</branch>
<branch type="ELSE">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220704 14:38:41.520" endtime="20220704 14:38:41.561"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220704 14:38:41.562" level="INFO">Clicking button 'css:button#login-submit'.</msg>
<status status="PASS" starttime="20220704 14:38:41.561" endtime="20220704 14:38:41.649"/>
</kw>
<status status="PASS" starttime="20220704 14:38:41.520" endtime="20220704 14:38:41.649"/>
</branch>
<status status="PASS" starttime="20220704 14:38:41.519" endtime="20220704 14:38:41.649"/>
</if>
<status status="PASS" starttime="20220704 14:38:41.510" endtime="20220704 14:38:41.649"/>
</kw>
<status status="PASS" starttime="20220704 14:38:39.499" endtime="20220704 14:38:41.649"/>
</kw>
<kw name="Go To Board" library="BoardsPage">
<arg>TestBoard</arg>
<doc>Receives the board name and goes to that board's page.</doc>
<kw name="Format String" library="String">
<var>${locator}</var>
<arg>${BOARD_BUTTON}</arg>
<arg>${board_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:38:41.650" level="INFO">${locator} = //div[@title="TestBoard"]</msg>
<status status="PASS" starttime="20220704 14:38:41.650" endtime="20220704 14:38:41.650"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 14:38:41.650" endtime="20220704 14:38:44.448"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 14:38:44.449" level="INFO">Clicking element '//div[@title="TestBoard"]'.</msg>
<status status="PASS" starttime="20220704 14:38:44.449" endtime="20220704 14:38:44.783"/>
</kw>
<status status="PASS" starttime="20220704 14:38:41.649" endtime="20220704 14:38:44.784"/>
</kw>
<kw name="Create new list with the name" library="ListComponent">
<arg>TO_ARCHIVE</arg>
<doc>Create a new list with the given name</doc>
<kw name="Wait Until Page Contains Element" library="SeleniumLibrary">
<arg>${ADD_LIST_BUTTON}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" starttime="20220704 14:38:44.784" endtime="20220704 14:38:45.440"/>
</kw>
<kw name="Click Link" library="SeleniumLibrary">
<arg>${ADD_LIST_BUTTON}</arg>
<doc>Clicks a link identified by ``locator``.</doc>
<msg timestamp="20220704 14:38:45.441" level="INFO">Clicking link 'xpath://a[contains(@Class, 'open-add-list')]'.</msg>
<status status="PASS" starttime="20220704 14:38:45.440" endtime="20220704 14:38:45.525"/>
</kw>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LIST_NAME_INPUT}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220704 14:38:45.526" endtime="20220704 14:38:45.606"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${LIST_NAME_INPUT}</arg>
<arg>${list_name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220704 14:38:45.607" level="INFO">Typing text 'TO_ARCHIVE' into text field 'xpath://input[@class="list-name-input"]'.</msg>
<status status="PASS" starttime="20220704 14:38:45.606" endtime="20220704 14:38:45.868"/>
</kw>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>${LIST_NAME_INPUT}</arg>
<arg>RETURN</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20220704 14:38:45.869" level="INFO">Sending key(s) ('RETURN',) to xpath://input[@class="list-name-input"] element.</msg>
<msg timestamp="20220704 14:38:46.157" level="INFO">Pressing special key RETURN to element.</msg>
<msg timestamp="20220704 14:38:46.157" level="INFO">Releasing special key RETURN.</msg>
<status status="PASS" starttime="20220704 14:38:45.868" endtime="20220704 14:38:46.189"/>
</kw>
<status status="PASS" starttime="20220704 14:38:44.784" endtime="20220704 14:38:46.189"/>
</kw>
<kw name="Close a list" library="ListComponent">
<doc>archives a list</doc>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LIST_ACTIONS_BUTTON}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220704 14:38:46.190" endtime="20220704 14:38:46.251"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Click Link</arg>
<arg>${LIST_ACTIONS_BUTTON}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Click Link" library="SeleniumLibrary">
<arg>${LIST_ACTIONS_BUTTON}</arg>
<doc>Clicks a link identified by ``locator``.</doc>
<msg timestamp="20220704 14:38:46.251" level="INFO">Clicking link 'xpath://div[@class='js-list list-wrapper'][last()]//a[@aria-label="List actions"]'.</msg>
<status status="PASS" starttime="20220704 14:38:46.251" endtime="20220704 14:38:46.343"/>
</kw>
<status status="PASS" starttime="20220704 14:38:46.251" endtime="20220704 14:38:46.343"/>
</kw>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${CLOSE_LIST_BUTTON}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220704 14:38:46.343" endtime="20220704 14:38:46.422"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Click Link</arg>
<arg>${CLOSE_LIST_BUTTON}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Click Link" library="SeleniumLibrary">
<arg>${CLOSE_LIST_BUTTON}</arg>
<doc>Clicks a link identified by ``locator``.</doc>
<msg timestamp="20220704 14:38:46.423" level="INFO">Clicking link 'xpath://li//a[@class='js-close-list']'.</msg>
<status status="PASS" starttime="20220704 14:38:46.423" endtime="20220704 14:38:46.494"/>
</kw>
<status status="PASS" starttime="20220704 14:38:46.422" endtime="20220704 14:38:46.494"/>
</kw>
<status status="PASS" starttime="20220704 14:38:46.189" endtime="20220704 14:38:46.494"/>
</kw>
<kw name="Enter to the side menu" library="TopBar">
<doc>accesing to the archive menu in the sidebar</doc>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${SHOW_MENU_BUTTON}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220704 14:38:46.495" endtime="20220704 14:38:46.557"/>
</kw>
<kw name="Click Link" library="SeleniumLibrary">
<arg>${SHOW_MENU_BUTTON}</arg>
<doc>Clicks a link identified by ``locator``.</doc>
<msg timestamp="20220704 14:38:46.558" level="INFO">Clicking link 'xpath://div[contains(@class, 'board-header')]//a[contains(., 'Show menu')]'.</msg>
<status status="PASS" starttime="20220704 14:38:46.557" endtime="20220704 14:38:46.668"/>
</kw>
<status status="PASS" starttime="20220704 14:38:46.494" endtime="20220704 14:38:46.668"/>
</kw>
<kw name="Enter to the list archive" library="ShownMenu">
<doc>accesing to the archive menu in the sidebar</doc>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${MORE_OPTIONS_SIDEBAR}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220704 14:38:46.669" endtime="20220704 14:38:46.746"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Click Link</arg>
<arg>${MORE_OPTIONS_SIDEBAR}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Click Link" library="SeleniumLibrary">
<arg>${MORE_OPTIONS_SIDEBAR}</arg>
<doc>Clicks a link identified by ``locator``.</doc>
<msg timestamp="20220704 14:38:46.747" level="INFO">Clicking link 'xpath://a[contains(@class,'board-menu-navigation-item-link') and contains(.,'More')]'.</msg>
<status status="PASS" starttime="20220704 14:38:46.747" endtime="20220704 14:38:46.881"/>
</kw>
<status status="PASS" starttime="20220704 14:38:46.746" endtime="20220704 14:38:46.881"/>
</kw>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${ARCHIVED_ITEMS_BUTTON}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220704 14:38:46.882" endtime="20220704 14:38:46.951"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Click Link</arg>
<arg>${ARCHIVED_ITEMS_BUTTON}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Click Link" library="SeleniumLibrary">
<arg>${ARCHIVED_ITEMS_BUTTON}</arg>
<doc>Clicks a link identified by ``locator``.</doc>
<msg timestamp="20220704 14:38:46.952" level="INFO">Clicking link 'xpath://a[contains(@class, 'js-open-archive')]'.</msg>
<status status="PASS" starttime="20220704 14:38:46.952" endtime="20220704 14:38:47.044"/>
</kw>
<status status="PASS" starttime="20220704 14:38:46.952" endtime="20220704 14:38:47.044"/>
</kw>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${SWITCH_TO_LIST_BUTTON}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220704 14:38:47.044" endtime="20220704 14:38:47.095"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Click Link</arg>
<arg>${SWITCH_TO_LIST_BUTTON}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Click Link" library="SeleniumLibrary">
<arg>${SWITCH_TO_LIST_BUTTON}</arg>
<doc>Clicks a link identified by ``locator``.</doc>
<msg timestamp="20220704 14:38:47.096" level="INFO">Clicking link 'xpath://div[@class='archive-controls']/a[contains(.,'Switch to lists')]'.</msg>
<status status="PASS" starttime="20220704 14:38:47.095" endtime="20220704 14:38:47.155"/>
</kw>
<status status="PASS" starttime="20220704 14:38:47.095" endtime="20220704 14:38:47.155"/>
</kw>
<status status="PASS" starttime="20220704 14:38:46.669" endtime="20220704 14:38:47.155"/>
</kw>
<kw name="Verify That A List Is In The Archive" library="ShownMenu">
<arg>TO_ARCHIVE</arg>
<doc>Verify that a given header of a list matches</doc>
<kw name="Format String" library="String">
<var>${list_name_locator_archive}</var>
<arg>${ARCHIVED_LIST_NAME_FIELD}</arg>
<arg>archived_list_title=${archived_list_title}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:38:47.156" level="INFO">${list_name_locator_archive} = xpath://div[@class='item-name']/span[.='TO_ARCHIVE']</msg>
<status status="PASS" starttime="20220704 14:38:47.156" endtime="20220704 14:38:47.156"/>
</kw>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${list_name_locator_archive}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220704 14:38:47.156" endtime="20220704 14:38:47.421"/>
</kw>
<kw name="Page Should Contain Element" library="SeleniumLibrary">
<arg>${list_name_locator_archive}</arg>
<doc>Verifies that element ``locator`` is found on the current page.</doc>
<msg timestamp="20220704 14:38:47.434" level="INFO">Current page contains element 'xpath://div[@class='item-name']/span[.='TO_ARCHIVE']'.</msg>
<status status="PASS" starttime="20220704 14:38:47.421" endtime="20220704 14:38:47.434"/>
</kw>
<status status="PASS" starttime="20220704 14:38:47.155" endtime="20220704 14:38:47.434"/>
</kw>
<kw name="Close archive tab" library="ShownMenu">
<doc>close sidebar tab</doc>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${CLOSE_SHOW_MENU}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220704 14:38:47.435" endtime="20220704 14:38:47.496"/>
</kw>
<kw name="Click Link" library="SeleniumLibrary">
<arg>${CLOSE_SHOW_MENU}</arg>
<doc>Clicks a link identified by ``locator``.</doc>
<msg timestamp="20220704 14:38:47.497" level="INFO">Clicking link 'xpath://a[@title="Close the board menu."]'.</msg>
<status status="PASS" starttime="20220704 14:38:47.496" endtime="20220704 14:38:47.598"/>
</kw>
<status status="PASS" starttime="20220704 14:38:47.435" endtime="20220704 14:38:47.599"/>
</kw>
<kw name="Close Browser" library="SeleniumLibrary" type="TEARDOWN">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20220704 14:38:47.599" endtime="20220704 14:38:47.698"/>
</kw>
<doc>verify that a list can be archived in GUI</doc>
<tag>gui</tag>
<tag>list.archive</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220704 14:38:38.447" endtime="20220704 14:38:47.699"/>
</test>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Teardown Board</arg>
<arg>Delete All Sessions</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Teardown Board">
<doc>Deletes used board for teardown</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:38:47.702" level="INFO">${url} = boards/62c2fb5dbacb2e80403ebda5</msg>
<status status="PASS" starttime="20220704 14:38:47.702" endtime="20220704 14:38:47.702"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 14:38:48.039" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:38:47.702" endtime="20220704 14:38:48.039"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:38:48.039" endtime="20220704 14:38:48.039"/>
</return>
<msg timestamp="20220704 14:38:48.039" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:38:47.702" endtime="20220704 14:38:48.039"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:38:48.039" endtime="20220704 14:38:48.039"/>
</return>
<status status="PASS" starttime="20220704 14:38:47.701" endtime="20220704 14:38:48.040"/>
</kw>
<status status="PASS" starttime="20220704 14:38:47.701" endtime="20220704 14:38:48.040"/>
</kw>
<status status="PASS" starttime="20220704 14:38:47.701" endtime="20220704 14:38:48.040"/>
</kw>
<kw name="Delete All Sessions" library="request_own_library">
<status status="PASS" starttime="20220704 14:38:48.040" endtime="20220704 14:38:48.041"/>
</kw>
<status status="PASS" starttime="20220704 14:38:47.700" endtime="20220704 14:38:48.041"/>
</kw>
<doc>List Tests</doc>
<status status="PASS" starttime="20220704 14:38:21.495" endtime="20220704 14:38:48.041"/>
</suite>
<suite id="s1-s4-s1-s5" name="Trello Gui Login" source="/trello/gui/trello_gui_login.robot">
<test id="s1-s4-s1-s5-t1" name="Login With A Valid User and Password" line="7">
<kw name="Open Browser From Environment" library="CommonGUI">
<arg>${LOGIN_URL}</arg>
<doc>This keywords takes REMOTE and BROWSER variables
from the environment automatically and only needs a url</doc>
<if>
<branch type="IF" condition="${is_remote}">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${url}</arg>
<arg>${BROWSER}</arg>
<arg>remote_url=http://selenium-hub:4444</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20220704 14:38:48.051" level="INFO">Opening browser 'chrome' to base url 'https://trello.com/login' through remote server at 'http://selenium-hub:4444'.</msg>
<status status="PASS" starttime="20220704 14:38:48.051" endtime="20220704 14:38:49.081"/>
</kw>
<status status="PASS" starttime="20220704 14:38:48.051" endtime="20220704 14:38:49.081"/>
</branch>
<branch type="ELSE">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${url}</arg>
<arg>${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<status status="NOT RUN" starttime="20220704 14:38:49.081" endtime="20220704 14:38:49.081"/>
</kw>
<status status="NOT RUN" starttime="20220704 14:38:49.081" endtime="20220704 14:38:49.081"/>
</branch>
<status status="PASS" starttime="20220704 14:38:48.050" endtime="20220704 14:38:49.081"/>
</if>
<status status="PASS" starttime="20220704 14:38:48.050" endtime="20220704 14:38:49.081"/>
</kw>
<kw name="Enter Username" library="LoginPage">
<arg>${DEFAULT_EMAIL}</arg>
<doc>Take a username as argument and
enters it in the user_input</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${USER_INPUT}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 14:38:49.082" endtime="20220704 14:38:49.122"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${USER_INPUT}</arg>
<arg>${username}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220704 14:38:49.123" level="INFO">Typing text 'bootcamp04@mailinator.com' into text field 'css:input#user'.</msg>
<status status="PASS" starttime="20220704 14:38:49.123" endtime="20220704 14:38:49.224"/>
</kw>
<status status="PASS" starttime="20220704 14:38:49.081" endtime="20220704 14:38:49.224"/>
</kw>
<kw name="Wait Until Element Is Not Visible" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<doc>Waits until the element ``locator`` is not visible.</doc>
<status status="PASS" starttime="20220704 14:38:49.224" endtime="20220704 14:38:49.967"/>
</kw>
<kw name="Click Login Button" library="LoginPage">
<doc>Clicks Trello's login button if in Trello's
login page, else it clicks Atlassian's</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220704 14:38:49.974" level="INFO">${url} = https://trello.com/login</msg>
<status status="PASS" starttime="20220704 14:38:49.968" endtime="20220704 14:38:49.974"/>
</kw>
<if>
<branch type="IF" condition="'${url}' == '${LOGIN_URL}'">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220704 14:38:49.975" endtime="20220704 14:38:50.016"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220704 14:38:50.016" level="INFO">Clicking button 'css:input#login'.</msg>
<status status="PASS" starttime="20220704 14:38:50.016" endtime="20220704 14:38:50.776"/>
</kw>
<status status="PASS" starttime="20220704 14:38:49.975" endtime="20220704 14:38:50.776"/>
</branch>
<branch type="ELSE">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="NOT RUN" starttime="20220704 14:38:50.776" endtime="20220704 14:38:50.777"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<status status="NOT RUN" starttime="20220704 14:38:50.777" endtime="20220704 14:38:50.777"/>
</kw>
<status status="NOT RUN" starttime="20220704 14:38:50.776" endtime="20220704 14:38:50.777"/>
</branch>
<status status="PASS" starttime="20220704 14:38:49.975" endtime="20220704 14:38:50.777"/>
</if>
<status status="PASS" starttime="20220704 14:38:49.967" endtime="20220704 14:38:50.777"/>
</kw>
<kw name="Wait Until Location Is Atlassian's Login" library="LoginPage">
<doc>Waits for the page redirection when logging in.</doc>
<kw name="Wait Until Location Contains" library="SeleniumLibrary">
<arg>atlassian.com</arg>
<doc>Waits until the current URL contains ``expected``.</doc>
<status status="PASS" starttime="20220704 14:38:50.777" endtime="20220704 14:38:50.792"/>
</kw>
<status status="PASS" starttime="20220704 14:38:50.777" endtime="20220704 14:38:50.792"/>
</kw>
<kw name="Enter Password" library="LoginPage">
<arg>${DEFAULT_PASSWORD}</arg>
<doc>Take a password as argument and
enters it in the password_input</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<arg>timeout=10</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 14:38:50.793" endtime="20220704 14:38:50.847"/>
</kw>
<kw name="Input Password" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<arg>${password}</arg>
<doc>Types the given password into the text field identified by ``locator``.</doc>
<msg timestamp="20220704 14:38:50.847" level="INFO">Typing password into text field 'css:input#password'.</msg>
<msg timestamp="20220704 14:38:50.893" level="INFO">Temporally setting log level to: NONE</msg>
<msg timestamp="20220704 14:38:50.962" level="INFO">Log level changed from NONE to INFO.</msg>
<status status="PASS" starttime="20220704 14:38:50.847" endtime="20220704 14:38:50.962"/>
</kw>
<status status="PASS" starttime="20220704 14:38:50.792" endtime="20220704 14:38:50.962"/>
</kw>
<kw name="Click Login Button" library="LoginPage">
<doc>Clicks Trello's login button if in Trello's
login page, else it clicks Atlassian's</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220704 14:38:50.979" level="INFO">${url} = https://id.atlassian.com/login?application=trello&amp;continue=https%3A%2F%2Ftrello.com%2Fauth%2Fatlassian%2Fcallback%3FreturnUrl%3D%252F%26display%3D%26aaOnboarding%3D%26updateEmail%3D%26traceId%3D62c2fb...</msg>
<status status="PASS" starttime="20220704 14:38:50.963" endtime="20220704 14:38:50.979"/>
</kw>
<if>
<branch type="IF" condition="'${url}' == '${LOGIN_URL}'">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="NOT RUN" starttime="20220704 14:38:50.980" endtime="20220704 14:38:50.980"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<status status="NOT RUN" starttime="20220704 14:38:50.980" endtime="20220704 14:38:50.980"/>
</kw>
<status status="NOT RUN" starttime="20220704 14:38:50.980" endtime="20220704 14:38:50.980"/>
</branch>
<branch type="ELSE">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220704 14:38:50.980" endtime="20220704 14:38:51.044"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220704 14:38:51.044" level="INFO">Clicking button 'css:button#login-submit'.</msg>
<status status="PASS" starttime="20220704 14:38:51.044" endtime="20220704 14:38:51.128"/>
</kw>
<status status="PASS" starttime="20220704 14:38:50.980" endtime="20220704 14:38:51.128"/>
</branch>
<status status="PASS" starttime="20220704 14:38:50.980" endtime="20220704 14:38:51.128"/>
</if>
<status status="PASS" starttime="20220704 14:38:50.963" endtime="20220704 14:38:51.128"/>
</kw>
<kw name="Verify Current Page Is Boards Page" library="BoardsPage">
<doc>Assert that the browser is showing the boards page.</doc>
<kw name="Wait Until Location Contains" library="SeleniumLibrary">
<arg>${BOARDS_PATH}</arg>
<doc>Waits until the current URL contains ``expected``.</doc>
<status status="PASS" starttime="20220704 14:38:51.128" endtime="20220704 14:38:53.994"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${YOUR_WORKSPACES}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 14:38:53.994" endtime="20220704 14:38:54.034"/>
</kw>
<kw name="Element Text Should Be" library="SeleniumLibrary">
<arg>${YOUR_WORKSPACES}</arg>
<arg>YOUR WORKSPACES</arg>
<doc>Verifies that element ``locator`` contains exact the text ``expected``.</doc>
<msg timestamp="20220704 14:38:54.035" level="INFO">Verifying element 'css:h3.boards-page-section-header-name' contains exact text 'YOUR WORKSPACES'.</msg>
<status status="PASS" starttime="20220704 14:38:54.034" endtime="20220704 14:38:54.060"/>
</kw>
<status status="PASS" starttime="20220704 14:38:51.128" endtime="20220704 14:38:54.060"/>
</kw>
<kw name="Close Browser" library="SeleniumLibrary" type="TEARDOWN">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20220704 14:38:54.060" endtime="20220704 14:38:54.144"/>
</kw>
<doc>Verify that it is possible to login through
Trello's GUI using a valid email and password.</doc>
<tag>gui</tag>
<tag>login</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220704 14:38:48.049" endtime="20220704 14:38:54.145"/>
</test>
<doc>Example Trello Login Test</doc>
<status status="PASS" starttime="20220704 14:38:48.043" endtime="20220704 14:38:54.146"/>
</suite>
<status status="PASS" starttime="20220704 14:36:55.869" endtime="20220704 14:38:54.148"/>
</suite>
<status status="PASS" starttime="20220704 14:36:55.852" endtime="20220704 14:38:54.151"/>
</suite>
<suite id="s1-s5" name="Trello" source="/trello">
<suite id="s1-s5-s1" name="Api" source="/trello/api">
<suite id="s1-s5-s1-s1" name="Trello Api Boards Tests" source="/trello/api/trello_api_boards_tests.robot">
<kw name="Create Trello Session" library="TrelloAPI" type="SETUP">
<doc>Creates a Trello Session</doc>
<kw name="Create Session" library="request_own_library">
<arg>${API_BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<status status="PASS" starttime="20220704 14:53:55.801" endtime="20220704 14:53:55.801"/>
</kw>
<status status="PASS" starttime="20220704 14:53:55.800" endtime="20220704 14:53:55.802"/>
</kw>
<test id="s1-s5-s1-s1-t1" name="CREATE a board" line="9">
<kw name="Create A Board" library="Board">
<var>${response}</var>
<arg>NewBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 14:53:55.804" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 14:53:55.803" endtime="20220704 14:53:55.804"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 14:53:55.804" endtime="20220704 14:53:55.804"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:53:55.805" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220704 14:53:55.804" endtime="20220704 14:53:55.805"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 14:53:56.052" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:53:55.805" endtime="20220704 14:53:56.052"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:53:56.052" endtime="20220704 14:53:56.052"/>
</return>
<msg timestamp="20220704 14:53:56.053" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:53:55.803" endtime="20220704 14:53:56.053"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:53:56.053" endtime="20220704 14:53:56.053"/>
</return>
<msg timestamp="20220704 14:53:56.053" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:53:55.803" endtime="20220704 14:53:56.053"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>board</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220704 14:53:56.054" endtime="20220704 14:53:56.058"/>
</kw>
<status status="PASS" starttime="20220704 14:53:56.053" endtime="20220704 14:53:56.058"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${response.json()}[id]</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${response.json()}[id]</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:53:56.061" level="INFO">${url} = boards/62c2ff03359ceb44f2baa6a1</msg>
<status status="PASS" starttime="20220704 14:53:56.060" endtime="20220704 14:53:56.061"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 14:53:56.495" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:53:56.061" endtime="20220704 14:53:56.495"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:53:56.495" endtime="20220704 14:53:56.495"/>
</return>
<msg timestamp="20220704 14:53:56.495" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:53:56.060" endtime="20220704 14:53:56.495"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:53:56.495" endtime="20220704 14:53:56.495"/>
</return>
<status status="PASS" starttime="20220704 14:53:56.059" endtime="20220704 14:53:56.495"/>
</kw>
<status status="PASS" starttime="20220704 14:53:56.059" endtime="20220704 14:53:56.495"/>
</kw>
<doc>Verify that a board can be create through API</doc>
<tag>api</tag>
<tag>board.create</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220704 14:53:55.802" endtime="20220704 14:53:56.496"/>
</test>
<test id="s1-s5-s1-s1-t2" name="UPDATE a Board's name" line="16">
<kw name="Create A Board" library="Board">
<var>${response}</var>
<arg>NewBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 14:53:56.499" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 14:53:56.499" endtime="20220704 14:53:56.499"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 14:53:56.499" endtime="20220704 14:53:56.499"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:53:56.500" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220704 14:53:56.499" endtime="20220704 14:53:56.500"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 14:53:56.665" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:53:56.500" endtime="20220704 14:53:56.666"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:53:56.666" endtime="20220704 14:53:56.666"/>
</return>
<msg timestamp="20220704 14:53:56.666" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:53:56.498" endtime="20220704 14:53:56.666"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:53:56.666" endtime="20220704 14:53:56.666"/>
</return>
<msg timestamp="20220704 14:53:56.666" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:53:56.497" endtime="20220704 14:53:56.666"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>board</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220704 14:53:56.667" endtime="20220704 14:53:56.672"/>
</kw>
<status status="PASS" starttime="20220704 14:53:56.667" endtime="20220704 14:53:56.672"/>
</kw>
<kw name="Update A Board" library="Board">
<arg>${response.json()}[id]</arg>
<arg>name</arg>
<arg>NewName</arg>
<doc>Updates the board with the given ID
optional_args: name, desc, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 14:53:56.673" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 14:53:56.673" endtime="20220704 14:53:56.674"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 14:53:56.674" endtime="20220704 14:53:56.674"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:53:56.674" level="INFO">${url} = boards/62c2ff04a4a0851c197a73eb</msg>
<status status="PASS" starttime="20220704 14:53:56.674" endtime="20220704 14:53:56.674"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 14:53:56.768" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:53:56.674" endtime="20220704 14:53:56.768"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:53:56.768" endtime="20220704 14:53:56.768"/>
</return>
<msg timestamp="20220704 14:53:56.768" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:53:56.673" endtime="20220704 14:53:56.768"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:53:56.768" endtime="20220704 14:53:56.768"/>
</return>
<status status="PASS" starttime="20220704 14:53:56.672" endtime="20220704 14:53:56.769"/>
</kw>
<kw name="Get A Board" library="Board">
<var>${new_response}</var>
<arg>${response.json()}[id]</arg>
<doc>Gets the Board with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:53:56.771" level="INFO">${url} = boards/62c2ff04a4a0851c197a73eb</msg>
<status status="PASS" starttime="20220704 14:53:56.770" endtime="20220704 14:53:56.771"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 14:53:56.818" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:53:56.771" endtime="20220704 14:53:56.819"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:53:56.819" endtime="20220704 14:53:56.819"/>
</return>
<msg timestamp="20220704 14:53:56.819" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:53:56.770" endtime="20220704 14:53:56.819"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:53:56.819" endtime="20220704 14:53:56.819"/>
</return>
<msg timestamp="20220704 14:53:56.819" level="INFO">${new_response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:53:56.769" endtime="20220704 14:53:56.819"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${new_response}</arg>
<arg>board</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220704 14:53:56.820" endtime="20220704 14:53:56.824"/>
</kw>
<status status="PASS" starttime="20220704 14:53:56.819" endtime="20220704 14:53:56.824"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${new_response.json()}[name]</arg>
<arg>NewName</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220704 14:53:56.824" endtime="20220704 14:53:56.825"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${response.json()}[id]</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${response.json()}[id]</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:53:56.827" level="INFO">${url} = boards/62c2ff04a4a0851c197a73eb</msg>
<status status="PASS" starttime="20220704 14:53:56.826" endtime="20220704 14:53:56.827"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 14:53:57.163" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:53:56.827" endtime="20220704 14:53:57.163"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:53:57.163" endtime="20220704 14:53:57.163"/>
</return>
<msg timestamp="20220704 14:53:57.163" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:53:56.826" endtime="20220704 14:53:57.163"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:53:57.163" endtime="20220704 14:53:57.163"/>
</return>
<status status="PASS" starttime="20220704 14:53:56.825" endtime="20220704 14:53:57.164"/>
</kw>
<status status="PASS" starttime="20220704 14:53:56.825" endtime="20220704 14:53:57.164"/>
</kw>
<doc>Verify that a board's name can be updated through API</doc>
<tag>api</tag>
<tag>board.update</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220704 14:53:56.496" endtime="20220704 14:53:57.164"/>
</test>
<test id="s1-s5-s1-s1-t3" name="DELETE A Board" line="27">
<kw name="Create A Board" library="Board">
<var>${response}</var>
<arg>NewBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 14:53:57.166" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 14:53:57.166" endtime="20220704 14:53:57.167"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 14:53:57.167" endtime="20220704 14:53:57.167"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:53:57.168" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220704 14:53:57.167" endtime="20220704 14:53:57.168"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 14:53:57.337" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:53:57.168" endtime="20220704 14:53:57.337"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:53:57.337" endtime="20220704 14:53:57.337"/>
</return>
<msg timestamp="20220704 14:53:57.338" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:53:57.166" endtime="20220704 14:53:57.338"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:53:57.338" endtime="20220704 14:53:57.338"/>
</return>
<msg timestamp="20220704 14:53:57.338" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:53:57.165" endtime="20220704 14:53:57.338"/>
</kw>
<kw name="Delete A Board" library="Board">
<arg>${response.json()}[id]</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:53:57.340" level="INFO">${url} = boards/62c2ff05b2a5c643c4fc9c4c</msg>
<status status="PASS" starttime="20220704 14:53:57.340" endtime="20220704 14:53:57.340"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 14:53:57.650" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:53:57.340" endtime="20220704 14:53:57.651"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:53:57.651" endtime="20220704 14:53:57.651"/>
</return>
<msg timestamp="20220704 14:53:57.651" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:53:57.339" endtime="20220704 14:53:57.651"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:53:57.651" endtime="20220704 14:53:57.651"/>
</return>
<status status="PASS" starttime="20220704 14:53:57.338" endtime="20220704 14:53:57.651"/>
</kw>
<kw name="Get A Board" library="Board">
<arg>${response.json()}[id]</arg>
<arg>status_code=404</arg>
<doc>Gets the Board with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:53:57.654" level="INFO">${url} = boards/62c2ff05b2a5c643c4fc9c4c</msg>
<status status="PASS" starttime="20220704 14:53:57.653" endtime="20220704 14:53:57.654"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 14:53:57.693" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220704 14:53:57.654" endtime="20220704 14:53:57.693"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:53:57.693" endtime="20220704 14:53:57.693"/>
</return>
<msg timestamp="20220704 14:53:57.693" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220704 14:53:57.653" endtime="20220704 14:53:57.693"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:53:57.694" endtime="20220704 14:53:57.694"/>
</return>
<status status="PASS" starttime="20220704 14:53:57.652" endtime="20220704 14:53:57.694"/>
</kw>
<doc>Verify that a board can be deleted through API</doc>
<tag>api</tag>
<tag>board.delete</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220704 14:53:57.164" endtime="20220704 14:53:57.694"/>
</test>
<test id="s1-s5-s1-s1-t4" name="GET Information of A Board" line="34">
<kw name="Create A Board" library="Board">
<var>${response}</var>
<arg>BoardTest</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 14:53:57.696" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 14:53:57.696" endtime="20220704 14:53:57.696"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 14:53:57.696" endtime="20220704 14:53:57.697"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:53:57.697" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220704 14:53:57.697" endtime="20220704 14:53:57.697"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 14:53:57.937" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:53:57.697" endtime="20220704 14:53:57.937"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:53:57.938" endtime="20220704 14:53:57.938"/>
</return>
<msg timestamp="20220704 14:53:57.938" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:53:57.696" endtime="20220704 14:53:57.938"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:53:57.938" endtime="20220704 14:53:57.938"/>
</return>
<msg timestamp="20220704 14:53:57.938" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:53:57.695" endtime="20220704 14:53:57.938"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>board</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220704 14:53:57.939" endtime="20220704 14:53:57.943"/>
</kw>
<status status="PASS" starttime="20220704 14:53:57.939" endtime="20220704 14:53:57.943"/>
</kw>
<kw name="Get A Board" library="Board">
<var>${response2}</var>
<arg>${response.json()}[id]</arg>
<doc>Gets the Board with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:53:57.945" level="INFO">${url} = boards/62c2ff0541124d14af9a9241</msg>
<status status="PASS" starttime="20220704 14:53:57.945" endtime="20220704 14:53:57.945"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 14:53:57.994" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:53:57.945" endtime="20220704 14:53:57.994"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:53:57.994" endtime="20220704 14:53:57.994"/>
</return>
<msg timestamp="20220704 14:53:57.994" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:53:57.944" endtime="20220704 14:53:57.994"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:53:57.994" endtime="20220704 14:53:57.995"/>
</return>
<msg timestamp="20220704 14:53:57.995" level="INFO">${response2} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:53:57.943" endtime="20220704 14:53:57.995"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response2}</arg>
<arg>board</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220704 14:53:57.995" endtime="20220704 14:53:58.000"/>
</kw>
<status status="PASS" starttime="20220704 14:53:57.995" endtime="20220704 14:53:58.000"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${response2.json()}[name]</arg>
<arg>BoardTest</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220704 14:53:58.000" endtime="20220704 14:53:58.001"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${response.json()}[id]</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${response.json()}[id]</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:53:58.003" level="INFO">${url} = boards/62c2ff0541124d14af9a9241</msg>
<status status="PASS" starttime="20220704 14:53:58.002" endtime="20220704 14:53:58.003"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 14:53:58.335" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:53:58.003" endtime="20220704 14:53:58.335"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:53:58.335" endtime="20220704 14:53:58.335"/>
</return>
<msg timestamp="20220704 14:53:58.335" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:53:58.002" endtime="20220704 14:53:58.335"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:53:58.335" endtime="20220704 14:53:58.335"/>
</return>
<status status="PASS" starttime="20220704 14:53:58.001" endtime="20220704 14:53:58.336"/>
</kw>
<status status="PASS" starttime="20220704 14:53:58.001" endtime="20220704 14:53:58.336"/>
</kw>
<doc>Verify that a board's information can be accesed through API</doc>
<tag>api</tag>
<tag>board.get</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220704 14:53:57.695" endtime="20220704 14:53:58.336"/>
</test>
<test id="s1-s5-s1-s1-t5" name="UPDATE a Board's description" line="45">
<kw name="Create A Board" library="Board">
<var>${response}</var>
<arg>NewBoardForTest</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 14:53:58.338" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 14:53:58.338" endtime="20220704 14:53:58.338"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 14:53:58.338" endtime="20220704 14:53:58.339"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:53:58.339" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220704 14:53:58.339" endtime="20220704 14:53:58.339"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 14:53:58.563" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:53:58.339" endtime="20220704 14:53:58.563"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:53:58.563" endtime="20220704 14:53:58.563"/>
</return>
<msg timestamp="20220704 14:53:58.563" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:53:58.337" endtime="20220704 14:53:58.563"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:53:58.563" endtime="20220704 14:53:58.563"/>
</return>
<msg timestamp="20220704 14:53:58.564" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:53:58.337" endtime="20220704 14:53:58.564"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>board</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220704 14:53:58.564" endtime="20220704 14:53:58.569"/>
</kw>
<status status="PASS" starttime="20220704 14:53:58.564" endtime="20220704 14:53:58.569"/>
</kw>
<kw name="Update A Board" library="Board">
<arg>${response.json()}[id]</arg>
<arg>desc</arg>
<arg>sampleDescription</arg>
<doc>Updates the board with the given ID
optional_args: name, desc, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 14:53:58.571" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 14:53:58.571" endtime="20220704 14:53:58.571"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 14:53:58.571" endtime="20220704 14:53:58.571"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:53:58.572" level="INFO">${url} = boards/62c2ff06cc096583a1855599</msg>
<status status="PASS" starttime="20220704 14:53:58.571" endtime="20220704 14:53:58.572"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 14:53:58.668" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:53:58.572" endtime="20220704 14:53:58.668"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:53:58.668" endtime="20220704 14:53:58.668"/>
</return>
<msg timestamp="20220704 14:53:58.668" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:53:58.570" endtime="20220704 14:53:58.668"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:53:58.668" endtime="20220704 14:53:58.668"/>
</return>
<status status="PASS" starttime="20220704 14:53:58.569" endtime="20220704 14:53:58.669"/>
</kw>
<kw name="Get A Board" library="Board">
<var>${new_response}</var>
<arg>${response.json()}[id]</arg>
<doc>Gets the Board with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:53:58.671" level="INFO">${url} = boards/62c2ff06cc096583a1855599</msg>
<status status="PASS" starttime="20220704 14:53:58.671" endtime="20220704 14:53:58.671"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 14:53:58.725" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:53:58.671" endtime="20220704 14:53:58.725"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:53:58.725" endtime="20220704 14:53:58.725"/>
</return>
<msg timestamp="20220704 14:53:58.726" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:53:58.670" endtime="20220704 14:53:58.726"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:53:58.726" endtime="20220704 14:53:58.726"/>
</return>
<msg timestamp="20220704 14:53:58.726" level="INFO">${new_response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:53:58.669" endtime="20220704 14:53:58.726"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${new_response.json()}[desc]</arg>
<arg>sampleDescription</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220704 14:53:58.726" endtime="20220704 14:53:58.727"/>
</kw>
<kw name="Update A Board" library="Board">
<arg>${response.json()}[id]</arg>
<arg>desc</arg>
<arg>updatedDescription</arg>
<doc>Updates the board with the given ID
optional_args: name, desc, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 14:53:58.729" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 14:53:58.729" endtime="20220704 14:53:58.729"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 14:53:58.729" endtime="20220704 14:53:58.729"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:53:58.730" level="INFO">${url} = boards/62c2ff06cc096583a1855599</msg>
<status status="PASS" starttime="20220704 14:53:58.730" endtime="20220704 14:53:58.730"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 14:53:58.830" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:53:58.730" endtime="20220704 14:53:58.830"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:53:58.830" endtime="20220704 14:53:58.830"/>
</return>
<msg timestamp="20220704 14:53:58.831" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:53:58.728" endtime="20220704 14:53:58.831"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:53:58.831" endtime="20220704 14:53:58.831"/>
</return>
<status status="PASS" starttime="20220704 14:53:58.727" endtime="20220704 14:53:58.831"/>
</kw>
<kw name="Get A Board" library="Board">
<var>${new_response2}</var>
<arg>${response.json()}[id]</arg>
<doc>Gets the Board with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:53:58.833" level="INFO">${url} = boards/62c2ff06cc096583a1855599</msg>
<status status="PASS" starttime="20220704 14:53:58.833" endtime="20220704 14:53:58.833"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 14:53:58.894" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:53:58.833" endtime="20220704 14:53:58.894"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:53:58.894" endtime="20220704 14:53:58.894"/>
</return>
<msg timestamp="20220704 14:53:58.894" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:53:58.832" endtime="20220704 14:53:58.894"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:53:58.894" endtime="20220704 14:53:58.894"/>
</return>
<msg timestamp="20220704 14:53:58.894" level="INFO">${new_response2} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:53:58.831" endtime="20220704 14:53:58.894"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${new_response2.json()}[desc]</arg>
<arg>updatedDescription</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220704 14:53:58.895" endtime="20220704 14:53:58.896"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${response.json()}[id]</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${response.json()}[id]</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:53:58.898" level="INFO">${url} = boards/62c2ff06cc096583a1855599</msg>
<status status="PASS" starttime="20220704 14:53:58.898" endtime="20220704 14:53:58.898"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 14:53:59.243" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:53:58.898" endtime="20220704 14:53:59.243"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:53:59.243" endtime="20220704 14:53:59.243"/>
</return>
<msg timestamp="20220704 14:53:59.244" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:53:58.897" endtime="20220704 14:53:59.244"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:53:59.244" endtime="20220704 14:53:59.244"/>
</return>
<status status="PASS" starttime="20220704 14:53:58.896" endtime="20220704 14:53:59.244"/>
</kw>
<status status="PASS" starttime="20220704 14:53:58.896" endtime="20220704 14:53:59.244"/>
</kw>
<doc>Verify that a board's description can be updated through API</doc>
<tag>api</tag>
<tag>board.update</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220704 14:53:58.336" endtime="20220704 14:53:59.244"/>
</test>
<kw name="Delete All Sessions" library="request_own_library" type="TEARDOWN">
<status status="PASS" starttime="20220704 14:53:59.245" endtime="20220704 14:53:59.246"/>
</kw>
<doc>Example Test with Trello API Boards</doc>
<status status="PASS" starttime="20220704 14:53:55.691" endtime="20220704 14:53:59.247"/>
</suite>
<suite id="s1-s5-s1-s2" name="Trello Api Cards Tests" source="/trello/api/trello_api_cards_tests.robot">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Create Trello Session</arg>
<arg>Setup Board And List</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Create Trello Session" library="TrelloAPI">
<doc>Creates a Trello Session</doc>
<kw name="Create Session" library="request_own_library">
<arg>${API_BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<status status="PASS" starttime="20220704 14:53:59.259" endtime="20220704 14:53:59.259"/>
</kw>
<status status="PASS" starttime="20220704 14:53:59.259" endtime="20220704 14:53:59.259"/>
</kw>
<kw name="Setup Board And List">
<doc>Create a board and save its ID and its first list's ID</doc>
<kw name="Create A Board" library="Board">
<var>${BOARD}</var>
<arg>TestBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 14:53:59.260" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 14:53:59.260" endtime="20220704 14:53:59.260"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 14:53:59.260" endtime="20220704 14:53:59.261"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:53:59.261" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220704 14:53:59.261" endtime="20220704 14:53:59.261"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 14:53:59.494" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:53:59.261" endtime="20220704 14:53:59.494"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:53:59.494" endtime="20220704 14:53:59.495"/>
</return>
<msg timestamp="20220704 14:53:59.495" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:53:59.260" endtime="20220704 14:53:59.495"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:53:59.495" endtime="20220704 14:53:59.495"/>
</return>
<msg timestamp="20220704 14:53:59.495" level="INFO">${BOARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:53:59.260" endtime="20220704 14:53:59.495"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_BOARD_ID}</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220704 14:53:59.496" level="INFO">${TEST_SUITE_BOARD_ID} = 62c2ff07c4c092092ccdc775</msg>
<status status="PASS" starttime="20220704 14:53:59.496" endtime="20220704 14:53:59.497"/>
</kw>
<kw name="Get Lists On A Board" library="Board">
<var>${LISTS}</var>
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Get all the lists in a board</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>lists_on_board</arg>
<arg>${id}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:53:59.498" level="INFO">${url} = boards/62c2ff07c4c092092ccdc775/lists/</msg>
<status status="PASS" starttime="20220704 14:53:59.497" endtime="20220704 14:53:59.498"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 14:53:59.546" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:53:59.498" endtime="20220704 14:53:59.547"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:53:59.547" endtime="20220704 14:53:59.547"/>
</return>
<msg timestamp="20220704 14:53:59.547" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:53:59.497" endtime="20220704 14:53:59.547"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:53:59.547" endtime="20220704 14:53:59.547"/>
</return>
<msg timestamp="20220704 14:53:59.547" level="INFO">${LISTS} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:53:59.497" endtime="20220704 14:53:59.547"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_LIST_ID}</arg>
<arg>${LISTS.json()}[0][id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220704 14:53:59.548" level="INFO">${TEST_SUITE_LIST_ID} = 62c2ff07c4c092092ccdc77c</msg>
<status status="PASS" starttime="20220704 14:53:59.547" endtime="20220704 14:53:59.548"/>
</kw>
<status status="PASS" starttime="20220704 14:53:59.259" endtime="20220704 14:53:59.549"/>
</kw>
<status status="PASS" starttime="20220704 14:53:59.258" endtime="20220704 14:53:59.549"/>
</kw>
<test id="s1-s5-s1-s2-t1" name="Verify A Card Can Be Created" line="13">
<kw name="Create A Card" library="Card">
<var>${response}</var>
<arg>name</arg>
<arg>RFCard2</arg>
<doc>Creates a new card in the given list.
required_args: listId
optional_args: name, desc, pos, idCardSource, idLabels, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>@{optional_args}</arg>
<arg>idList</arg>
<arg>${idList}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 14:53:59.551" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 14:53:59.550" endtime="20220704 14:53:59.551"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 14:53:59.551" endtime="20220704 14:53:59.551"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:53:59.552" level="INFO">${url} = cards/</msg>
<status status="PASS" starttime="20220704 14:53:59.551" endtime="20220704 14:53:59.552"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 14:53:59.708" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:53:59.552" endtime="20220704 14:53:59.708"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:53:59.708" endtime="20220704 14:53:59.709"/>
</return>
<msg timestamp="20220704 14:53:59.709" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:53:59.550" endtime="20220704 14:53:59.709"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:53:59.709" endtime="20220704 14:53:59.709"/>
</return>
<msg timestamp="20220704 14:53:59.709" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:53:59.549" endtime="20220704 14:53:59.709"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>card</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220704 14:53:59.710" endtime="20220704 14:53:59.715"/>
</kw>
<status status="PASS" starttime="20220704 14:53:59.709" endtime="20220704 14:53:59.715"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 14:53:59.716" endtime="20220704 14:53:59.716"/>
</return>
<msg timestamp="20220704 14:53:59.716" level="INFO">${CARD_ID} = 62c2ff077d068321ce8dd78e</msg>
<status status="PASS" starttime="20220704 14:53:59.715" endtime="20220704 14:53:59.716"/>
</kw>
<kw name="Get A Card" library="Card">
<var>${response}</var>
<arg>${CARD_ID}</arg>
<doc>Gets the card with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:53:59.717" level="INFO">${url} = cards/62c2ff077d068321ce8dd78e</msg>
<status status="PASS" starttime="20220704 14:53:59.717" endtime="20220704 14:53:59.717"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 14:53:59.782" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:53:59.718" endtime="20220704 14:53:59.782"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:53:59.782" endtime="20220704 14:53:59.782"/>
</return>
<msg timestamp="20220704 14:53:59.782" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:53:59.717" endtime="20220704 14:53:59.782"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:53:59.782" endtime="20220704 14:53:59.782"/>
</return>
<msg timestamp="20220704 14:53:59.782" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:53:59.716" endtime="20220704 14:53:59.783"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_NAME}</var>
<arg>${response}</arg>
<arg>name</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 14:53:59.783" endtime="20220704 14:53:59.783"/>
</return>
<msg timestamp="20220704 14:53:59.784" level="INFO">${CARD_NAME} = RFCard2</msg>
<status status="PASS" starttime="20220704 14:53:59.783" endtime="20220704 14:53:59.784"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${CARD_NAME}</arg>
<arg>RFCard2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220704 14:53:59.784" endtime="20220704 14:53:59.784"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Card</arg>
<arg>${CARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Card" library="Card">
<arg>${CARD_ID}</arg>
<doc>Deletes the card with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:53:59.786" level="INFO">${url} = cards/62c2ff077d068321ce8dd78e</msg>
<status status="PASS" starttime="20220704 14:53:59.786" endtime="20220704 14:53:59.786"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 14:53:59.951" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:53:59.786" endtime="20220704 14:53:59.951"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:53:59.951" endtime="20220704 14:53:59.951"/>
</return>
<msg timestamp="20220704 14:53:59.951" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:53:59.785" endtime="20220704 14:53:59.951"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:53:59.951" endtime="20220704 14:53:59.951"/>
</return>
<status status="PASS" starttime="20220704 14:53:59.785" endtime="20220704 14:53:59.952"/>
</kw>
<status status="PASS" starttime="20220704 14:53:59.784" endtime="20220704 14:53:59.952"/>
</kw>
<doc>Verify that a card can be created through API</doc>
<tag>api</tag>
<tag>card.create</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220704 14:53:59.549" endtime="20220704 14:53:59.952"/>
</test>
<test id="s1-s5-s1-s2-t2" name="Verify A Card Can Be Closed" line="24">
<kw name="Create A Card" library="Card">
<var>${response}</var>
<doc>Creates a new card in the given list.
required_args: listId
optional_args: name, desc, pos, idCardSource, idLabels, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>@{optional_args}</arg>
<arg>idList</arg>
<arg>${idList}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 14:53:59.955" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 14:53:59.955" endtime="20220704 14:53:59.955"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 14:53:59.956" endtime="20220704 14:53:59.956"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:53:59.957" level="INFO">${url} = cards/</msg>
<status status="PASS" starttime="20220704 14:53:59.956" endtime="20220704 14:53:59.957"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 14:54:00.160" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:53:59.957" endtime="20220704 14:54:00.160"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:54:00.160" endtime="20220704 14:54:00.160"/>
</return>
<msg timestamp="20220704 14:54:00.160" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:53:59.954" endtime="20220704 14:54:00.160"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:54:00.160" endtime="20220704 14:54:00.160"/>
</return>
<msg timestamp="20220704 14:54:00.161" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:53:59.954" endtime="20220704 14:54:00.161"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 14:54:00.161" endtime="20220704 14:54:00.161"/>
</return>
<msg timestamp="20220704 14:54:00.162" level="INFO">${CARD_ID} = 62c2ff089b4b31454b7631ec</msg>
<status status="PASS" starttime="20220704 14:54:00.161" endtime="20220704 14:54:00.162"/>
</kw>
<kw name="Archive A Card" library="Card">
<arg>${CARD_ID}</arg>
<doc>Modifies the card status to closed.</doc>
<kw name="Update A Card" library="Card">
<var>${response}</var>
<arg>${id}</arg>
<arg>closed</arg>
<arg>true</arg>
<arg>status_code=${status_code}</arg>
<doc>Updates the card with the given ID
optional_args: name, desc, closed, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<arg>status_code=${status_code}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 14:54:00.164" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 14:54:00.164" endtime="20220704 14:54:00.164"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 14:54:00.164" endtime="20220704 14:54:00.165"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:54:00.165" level="INFO">${url} = cards/62c2ff089b4b31454b7631ec</msg>
<status status="PASS" starttime="20220704 14:54:00.165" endtime="20220704 14:54:00.165"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 14:54:00.297" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:54:00.165" endtime="20220704 14:54:00.298"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:54:00.298" endtime="20220704 14:54:00.298"/>
</return>
<msg timestamp="20220704 14:54:00.298" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:54:00.163" endtime="20220704 14:54:00.298"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:54:00.298" endtime="20220704 14:54:00.298"/>
</return>
<msg timestamp="20220704 14:54:00.298" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:54:00.163" endtime="20220704 14:54:00.298"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:54:00.298" endtime="20220704 14:54:00.299"/>
</return>
<status status="PASS" starttime="20220704 14:54:00.162" endtime="20220704 14:54:00.299"/>
</kw>
<kw name="Get A Card" library="Card">
<var>${response}</var>
<arg>${CARD_ID}</arg>
<doc>Gets the card with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:54:00.300" level="INFO">${url} = cards/62c2ff089b4b31454b7631ec</msg>
<status status="PASS" starttime="20220704 14:54:00.300" endtime="20220704 14:54:00.300"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 14:54:00.357" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:54:00.300" endtime="20220704 14:54:00.357"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:54:00.357" endtime="20220704 14:54:00.357"/>
</return>
<msg timestamp="20220704 14:54:00.357" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:54:00.299" endtime="20220704 14:54:00.357"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:54:00.357" endtime="20220704 14:54:00.357"/>
</return>
<msg timestamp="20220704 14:54:00.358" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:54:00.299" endtime="20220704 14:54:00.358"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_CLOSED}</var>
<arg>${response}</arg>
<arg>closed</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 14:54:00.358" endtime="20220704 14:54:00.358"/>
</return>
<msg timestamp="20220704 14:54:00.359" level="INFO">${CARD_CLOSED} = True</msg>
<status status="PASS" starttime="20220704 14:54:00.358" endtime="20220704 14:54:00.359"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${CARD_CLOSED}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220704 14:54:00.360" endtime="20220704 14:54:00.360"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Card</arg>
<arg>${CARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Card" library="Card">
<arg>${CARD_ID}</arg>
<doc>Deletes the card with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:54:00.362" level="INFO">${url} = cards/62c2ff089b4b31454b7631ec</msg>
<status status="PASS" starttime="20220704 14:54:00.361" endtime="20220704 14:54:00.362"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 14:54:00.519" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:54:00.362" endtime="20220704 14:54:00.519"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:54:00.519" endtime="20220704 14:54:00.520"/>
</return>
<msg timestamp="20220704 14:54:00.520" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:54:00.361" endtime="20220704 14:54:00.520"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:54:00.520" endtime="20220704 14:54:00.520"/>
</return>
<status status="PASS" starttime="20220704 14:54:00.360" endtime="20220704 14:54:00.520"/>
</kw>
<status status="PASS" starttime="20220704 14:54:00.360" endtime="20220704 14:54:00.520"/>
</kw>
<doc>Verify that a card can be closed through API</doc>
<tag>api</tag>
<tag>card.close</tag>
<tag>regression</tag>
<status status="PASS" starttime="20220704 14:53:59.952" endtime="20220704 14:54:00.520"/>
</test>
<test id="s1-s5-s1-s2-t3" name="Verify A Card Can Be Deleted" line="35">
<kw name="Create A Card" library="Card">
<var>${response}</var>
<doc>Creates a new card in the given list.
required_args: listId
optional_args: name, desc, pos, idCardSource, idLabels, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>@{optional_args}</arg>
<arg>idList</arg>
<arg>${idList}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 14:54:00.524" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 14:54:00.524" endtime="20220704 14:54:00.524"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 14:54:00.524" endtime="20220704 14:54:00.525"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:54:00.525" level="INFO">${url} = cards/</msg>
<status status="PASS" starttime="20220704 14:54:00.525" endtime="20220704 14:54:00.525"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 14:54:00.681" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:54:00.526" endtime="20220704 14:54:00.681"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:54:00.681" endtime="20220704 14:54:00.681"/>
</return>
<msg timestamp="20220704 14:54:00.681" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:54:00.523" endtime="20220704 14:54:00.681"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:54:00.681" endtime="20220704 14:54:00.682"/>
</return>
<msg timestamp="20220704 14:54:00.682" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:54:00.522" endtime="20220704 14:54:00.682"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 14:54:00.682" endtime="20220704 14:54:00.682"/>
</return>
<msg timestamp="20220704 14:54:00.683" level="INFO">${CARD_ID} = 62c2ff08f00c3979292c2b0f</msg>
<status status="PASS" starttime="20220704 14:54:00.682" endtime="20220704 14:54:00.683"/>
</kw>
<kw name="Delete A Card" library="Card">
<var>${response}</var>
<arg>${CARD_ID}</arg>
<doc>Deletes the card with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:54:00.685" level="INFO">${url} = cards/62c2ff08f00c3979292c2b0f</msg>
<status status="PASS" starttime="20220704 14:54:00.684" endtime="20220704 14:54:00.685"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 14:54:00.862" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:54:00.685" endtime="20220704 14:54:00.862"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:54:00.862" endtime="20220704 14:54:00.862"/>
</return>
<msg timestamp="20220704 14:54:00.863" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:54:00.684" endtime="20220704 14:54:00.863"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:54:00.863" endtime="20220704 14:54:00.863"/>
</return>
<msg timestamp="20220704 14:54:00.864" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:54:00.683" endtime="20220704 14:54:00.864"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>delete</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220704 14:54:00.865" endtime="20220704 14:54:00.867"/>
</kw>
<status status="PASS" starttime="20220704 14:54:00.864" endtime="20220704 14:54:00.867"/>
</kw>
<kw name="Get A Card" library="Card">
<arg>${CARD_ID}</arg>
<arg>status_code=404</arg>
<doc>Gets the card with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:54:00.868" level="INFO">${url} = cards/62c2ff08f00c3979292c2b0f</msg>
<status status="PASS" starttime="20220704 14:54:00.868" endtime="20220704 14:54:00.868"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 14:54:00.910" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220704 14:54:00.868" endtime="20220704 14:54:00.910"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:54:00.910" endtime="20220704 14:54:00.910"/>
</return>
<msg timestamp="20220704 14:54:00.911" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220704 14:54:00.867" endtime="20220704 14:54:00.911"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:54:00.911" endtime="20220704 14:54:00.911"/>
</return>
<status status="PASS" starttime="20220704 14:54:00.867" endtime="20220704 14:54:00.911"/>
</kw>
<doc>Verify that a card can be deleted through API</doc>
<tag>api</tag>
<tag>card.delete</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220704 14:54:00.521" endtime="20220704 14:54:00.911"/>
</test>
<test id="s1-s5-s1-s2-t4" name="Verify A Card Can Be Updated" line="44">
<kw name="Create A Card" library="Card">
<var>${response}</var>
<arg>name</arg>
<arg>RFCard4</arg>
<doc>Creates a new card in the given list.
required_args: listId
optional_args: name, desc, pos, idCardSource, idLabels, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>@{optional_args}</arg>
<arg>idList</arg>
<arg>${idList}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 14:54:00.914" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 14:54:00.914" endtime="20220704 14:54:00.914"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 14:54:00.914" endtime="20220704 14:54:00.915"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:54:00.915" level="INFO">${url} = cards/</msg>
<status status="PASS" starttime="20220704 14:54:00.915" endtime="20220704 14:54:00.915"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 14:54:01.088" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:54:00.916" endtime="20220704 14:54:01.088"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:54:01.088" endtime="20220704 14:54:01.088"/>
</return>
<msg timestamp="20220704 14:54:01.088" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:54:00.913" endtime="20220704 14:54:01.088"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:54:01.088" endtime="20220704 14:54:01.088"/>
</return>
<msg timestamp="20220704 14:54:01.088" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:54:00.913" endtime="20220704 14:54:01.089"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 14:54:01.089" endtime="20220704 14:54:01.089"/>
</return>
<msg timestamp="20220704 14:54:01.090" level="INFO">${CARD_ID} = 62c2ff08c25b677b0bba612c</msg>
<status status="PASS" starttime="20220704 14:54:01.089" endtime="20220704 14:54:01.090"/>
</kw>
<kw name="Update A Card" library="Card">
<var>${response}</var>
<arg>${CARD_ID}</arg>
<arg>name</arg>
<arg>RFCard5</arg>
<arg>desc</arg>
<arg>Description</arg>
<doc>Updates the card with the given ID
optional_args: name, desc, closed, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<arg>status_code=${status_code}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 14:54:01.092" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 14:54:01.092" endtime="20220704 14:54:01.092"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 14:54:01.092" endtime="20220704 14:54:01.093"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:54:01.093" level="INFO">${url} = cards/62c2ff08c25b677b0bba612c</msg>
<status status="PASS" starttime="20220704 14:54:01.093" endtime="20220704 14:54:01.093"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 14:54:01.241" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:54:01.093" endtime="20220704 14:54:01.241"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:54:01.241" endtime="20220704 14:54:01.241"/>
</return>
<msg timestamp="20220704 14:54:01.241" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:54:01.091" endtime="20220704 14:54:01.241"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:54:01.241" endtime="20220704 14:54:01.242"/>
</return>
<msg timestamp="20220704 14:54:01.242" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:54:01.090" endtime="20220704 14:54:01.242"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>card</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220704 14:54:01.242" endtime="20220704 14:54:01.250"/>
</kw>
<status status="PASS" starttime="20220704 14:54:01.242" endtime="20220704 14:54:01.250"/>
</kw>
<kw name="Get A Card" library="Card">
<var>${response}</var>
<arg>${CARD_ID}</arg>
<doc>Gets the card with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:54:01.253" level="INFO">${url} = cards/62c2ff08c25b677b0bba612c</msg>
<status status="PASS" starttime="20220704 14:54:01.252" endtime="20220704 14:54:01.253"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 14:54:01.325" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:54:01.253" endtime="20220704 14:54:01.325"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:54:01.325" endtime="20220704 14:54:01.325"/>
</return>
<msg timestamp="20220704 14:54:01.325" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:54:01.251" endtime="20220704 14:54:01.325"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:54:01.325" endtime="20220704 14:54:01.325"/>
</return>
<msg timestamp="20220704 14:54:01.326" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:54:01.250" endtime="20220704 14:54:01.326"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_NAME}</var>
<arg>${response}</arg>
<arg>name</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 14:54:01.326" endtime="20220704 14:54:01.326"/>
</return>
<msg timestamp="20220704 14:54:01.327" level="INFO">${CARD_NAME} = RFCard5</msg>
<status status="PASS" starttime="20220704 14:54:01.326" endtime="20220704 14:54:01.327"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_DESC}</var>
<arg>${response}</arg>
<arg>desc</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 14:54:01.328" endtime="20220704 14:54:01.328"/>
</return>
<msg timestamp="20220704 14:54:01.329" level="INFO">${CARD_DESC} = Description</msg>
<status status="PASS" starttime="20220704 14:54:01.327" endtime="20220704 14:54:01.329"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${CARD_NAME}</arg>
<arg>RFCard5</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220704 14:54:01.329" endtime="20220704 14:54:01.329"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${CARD_DESC}</arg>
<arg>Description</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220704 14:54:01.329" endtime="20220704 14:54:01.329"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Card</arg>
<arg>${CARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Card" library="Card">
<arg>${CARD_ID}</arg>
<doc>Deletes the card with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:54:01.331" level="INFO">${url} = cards/62c2ff08c25b677b0bba612c</msg>
<status status="PASS" starttime="20220704 14:54:01.331" endtime="20220704 14:54:01.331"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 14:54:01.487" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:54:01.331" endtime="20220704 14:54:01.488"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:54:01.488" endtime="20220704 14:54:01.488"/>
</return>
<msg timestamp="20220704 14:54:01.488" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:54:01.330" endtime="20220704 14:54:01.488"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:54:01.488" endtime="20220704 14:54:01.488"/>
</return>
<status status="PASS" starttime="20220704 14:54:01.330" endtime="20220704 14:54:01.488"/>
</kw>
<status status="PASS" starttime="20220704 14:54:01.330" endtime="20220704 14:54:01.488"/>
</kw>
<doc>Verify that a card's name and Description can be updated through API</doc>
<tag>api</tag>
<tag>card.update</tag>
<tag>regression</tag>
<status status="PASS" starttime="20220704 14:54:00.912" endtime="20220704 14:54:01.488"/>
</test>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Teardown Board</arg>
<arg>Delete All Sessions</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Teardown Board">
<doc>Delete the board created for this suite</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:54:01.493" level="INFO">${url} = boards/62c2ff07c4c092092ccdc775</msg>
<status status="PASS" starttime="20220704 14:54:01.492" endtime="20220704 14:54:01.493"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 14:54:01.866" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:54:01.493" endtime="20220704 14:54:01.866"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:54:01.866" endtime="20220704 14:54:01.866"/>
</return>
<msg timestamp="20220704 14:54:01.866" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:54:01.492" endtime="20220704 14:54:01.866"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:54:01.866" endtime="20220704 14:54:01.866"/>
</return>
<status status="PASS" starttime="20220704 14:54:01.491" endtime="20220704 14:54:01.867"/>
</kw>
<status status="PASS" starttime="20220704 14:54:01.491" endtime="20220704 14:54:01.867"/>
</kw>
<status status="PASS" starttime="20220704 14:54:01.490" endtime="20220704 14:54:01.867"/>
</kw>
<kw name="Delete All Sessions" library="request_own_library">
<status status="PASS" starttime="20220704 14:54:01.867" endtime="20220704 14:54:01.868"/>
</kw>
<status status="PASS" starttime="20220704 14:54:01.490" endtime="20220704 14:54:01.868"/>
</kw>
<doc>Example Test with Trello API Cards</doc>
<status status="PASS" starttime="20220704 14:53:59.248" endtime="20220704 14:54:01.868"/>
</suite>
<suite id="s1-s5-s1-s3" name="Trello Api Checklists Tests" source="/trello/api/trello_api_checklists_tests.robot">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Create Trello Session</arg>
<arg>Setup Board, List And Card</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Create Trello Session" library="TrelloAPI">
<doc>Creates a Trello Session</doc>
<kw name="Create Session" library="request_own_library">
<arg>${API_BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<status status="PASS" starttime="20220704 14:54:01.882" endtime="20220704 14:54:01.883"/>
</kw>
<status status="PASS" starttime="20220704 14:54:01.881" endtime="20220704 14:54:01.883"/>
</kw>
<kw name="Setup Board, List And Card">
<doc>Create a board and save its ID and its first list's ID</doc>
<kw name="Create A Board" library="Board">
<var>${BOARD}</var>
<arg>TestBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 14:54:01.884" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 14:54:01.884" endtime="20220704 14:54:01.884"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 14:54:01.884" endtime="20220704 14:54:01.884"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:54:01.885" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220704 14:54:01.884" endtime="20220704 14:54:01.885"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 14:54:02.092" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:54:01.885" endtime="20220704 14:54:02.092"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:54:02.092" endtime="20220704 14:54:02.092"/>
</return>
<msg timestamp="20220704 14:54:02.092" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:54:01.883" endtime="20220704 14:54:02.092"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:54:02.092" endtime="20220704 14:54:02.093"/>
</return>
<msg timestamp="20220704 14:54:02.093" level="INFO">${BOARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:54:01.883" endtime="20220704 14:54:02.093"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_BOARD_ID}</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220704 14:54:02.094" level="INFO">${TEST_SUITE_BOARD_ID} = 62c2ff09272cfd6a808d2a0d</msg>
<status status="PASS" starttime="20220704 14:54:02.093" endtime="20220704 14:54:02.094"/>
</kw>
<kw name="Get Lists On A Board" library="Board">
<var>${LISTS}</var>
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Get all the lists in a board</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>lists_on_board</arg>
<arg>${id}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:54:02.095" level="INFO">${url} = boards/62c2ff09272cfd6a808d2a0d/lists/</msg>
<status status="PASS" starttime="20220704 14:54:02.095" endtime="20220704 14:54:02.095"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 14:54:02.153" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:54:02.095" endtime="20220704 14:54:02.153"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:54:02.153" endtime="20220704 14:54:02.153"/>
</return>
<msg timestamp="20220704 14:54:02.154" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:54:02.095" endtime="20220704 14:54:02.154"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:54:02.154" endtime="20220704 14:54:02.154"/>
</return>
<msg timestamp="20220704 14:54:02.154" level="INFO">${LISTS} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:54:02.094" endtime="20220704 14:54:02.154"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_LIST_ID}</arg>
<arg>${LISTS.json()}[0][id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220704 14:54:02.155" level="INFO">${TEST_SUITE_LIST_ID} = 62c2ff09272cfd6a808d2a14</msg>
<status status="PASS" starttime="20220704 14:54:02.154" endtime="20220704 14:54:02.155"/>
</kw>
<kw name="Create A Card" library="Card">
<var>${CARD}</var>
<arg>name</arg>
<arg>TestCard</arg>
<doc>Creates a new card in the given list.
required_args: listId
optional_args: name, desc, pos, idCardSource, idLabels, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>@{optional_args}</arg>
<arg>idList</arg>
<arg>${idList}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 14:54:02.157" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 14:54:02.157" endtime="20220704 14:54:02.157"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 14:54:02.157" endtime="20220704 14:54:02.157"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:54:02.158" level="INFO">${url} = cards/</msg>
<status status="PASS" starttime="20220704 14:54:02.157" endtime="20220704 14:54:02.158"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 14:54:02.327" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:54:02.158" endtime="20220704 14:54:02.327"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:54:02.328" endtime="20220704 14:54:02.328"/>
</return>
<msg timestamp="20220704 14:54:02.328" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:54:02.156" endtime="20220704 14:54:02.328"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:54:02.328" endtime="20220704 14:54:02.328"/>
</return>
<msg timestamp="20220704 14:54:02.328" level="INFO">${CARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:54:02.155" endtime="20220704 14:54:02.328"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_CARD_ID}</arg>
<arg>${CARD.json()}[id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220704 14:54:02.329" level="INFO">${TEST_SUITE_CARD_ID} = 62c2ff0a4bb6d07f0b792ab9</msg>
<status status="PASS" starttime="20220704 14:54:02.328" endtime="20220704 14:54:02.329"/>
</kw>
<status status="PASS" starttime="20220704 14:54:01.883" endtime="20220704 14:54:02.329"/>
</kw>
<status status="PASS" starttime="20220704 14:54:01.881" endtime="20220704 14:54:02.330"/>
</kw>
<test id="s1-s5-s1-s3-t1" name="Verify A Checklist Can Be Created" line="14">
<kw name="Create A Checklist" library="Checklist">
<var>${response}</var>
<arg>name</arg>
<arg>TestChecklist</arg>
<arg>idCard=${TEST_SUITE_CARD_ID}</arg>
<doc>Creates a new checklist in the given card.
required_args: idCard
optional_args: name, pos, idChecklistSource
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>@{optional_args}</arg>
<arg>idCard</arg>
<arg>${idCard}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 14:54:02.332" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 14:54:02.332" endtime="20220704 14:54:02.332"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 14:54:02.332" endtime="20220704 14:54:02.332"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:54:02.333" level="INFO">${url} = checklists/</msg>
<status status="PASS" starttime="20220704 14:54:02.332" endtime="20220704 14:54:02.333"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 14:54:02.440" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:54:02.333" endtime="20220704 14:54:02.440"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:54:02.440" endtime="20220704 14:54:02.440"/>
</return>
<msg timestamp="20220704 14:54:02.440" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:54:02.331" endtime="20220704 14:54:02.440"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:54:02.440" endtime="20220704 14:54:02.440"/>
</return>
<msg timestamp="20220704 14:54:02.440" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:54:02.330" endtime="20220704 14:54:02.441"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${checklist_id}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 14:54:02.441" endtime="20220704 14:54:02.441"/>
</return>
<msg timestamp="20220704 14:54:02.442" level="INFO">${checklist_id} = 62c2ff0a3b5c26340a311abe</msg>
<status status="PASS" starttime="20220704 14:54:02.441" endtime="20220704 14:54:02.442"/>
</kw>
<kw name="Get A Checklist" library="Checklist">
<var>${response}</var>
<arg>${checklist_id}</arg>
<doc>Gets the checklist with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:54:02.443" level="INFO">${url} = checklists/62c2ff0a3b5c26340a311abe</msg>
<status status="PASS" starttime="20220704 14:54:02.443" endtime="20220704 14:54:02.443"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 14:54:02.503" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:54:02.443" endtime="20220704 14:54:02.503"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:54:02.503" endtime="20220704 14:54:02.503"/>
</return>
<msg timestamp="20220704 14:54:02.504" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:54:02.442" endtime="20220704 14:54:02.504"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:54:02.504" endtime="20220704 14:54:02.504"/>
</return>
<msg timestamp="20220704 14:54:02.504" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:54:02.442" endtime="20220704 14:54:02.504"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${checklist_name}</var>
<arg>${response}</arg>
<arg>name</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 14:54:02.505" endtime="20220704 14:54:02.505"/>
</return>
<msg timestamp="20220704 14:54:02.505" level="INFO">${checklist_name} = TestChecklist</msg>
<status status="PASS" starttime="20220704 14:54:02.504" endtime="20220704 14:54:02.505"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${checklist_name}</arg>
<arg>TestChecklist</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220704 14:54:02.506" endtime="20220704 14:54:02.506"/>
</kw>
<kw name="Delete A Checklist" library="Checklist" type="TEARDOWN">
<arg>${checklist_id}</arg>
<doc>Deletes the checklist with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:54:02.507" level="INFO">${url} = checklists/62c2ff0a3b5c26340a311abe</msg>
<status status="PASS" starttime="20220704 14:54:02.507" endtime="20220704 14:54:02.507"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 14:54:02.626" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:54:02.508" endtime="20220704 14:54:02.626"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:54:02.626" endtime="20220704 14:54:02.626"/>
</return>
<msg timestamp="20220704 14:54:02.626" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:54:02.507" endtime="20220704 14:54:02.626"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:54:02.626" endtime="20220704 14:54:02.626"/>
</return>
<status status="PASS" starttime="20220704 14:54:02.506" endtime="20220704 14:54:02.627"/>
</kw>
<doc>Verify that a checklist can be created through API</doc>
<tag>api</tag>
<tag>checklist.create</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220704 14:54:02.330" endtime="20220704 14:54:02.627"/>
</test>
<test id="s1-s5-s1-s3-t2" name="Verify A Checklist Can Be Deleted" line="24">
<kw name="Create A Checklist" library="Checklist">
<var>${response}</var>
<arg>name</arg>
<arg>TestChecklist</arg>
<arg>idCard=${TEST_SUITE_CARD_ID}</arg>
<doc>Creates a new checklist in the given card.
required_args: idCard
optional_args: name, pos, idChecklistSource
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>@{optional_args}</arg>
<arg>idCard</arg>
<arg>${idCard}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 14:54:02.629" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 14:54:02.629" endtime="20220704 14:54:02.629"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 14:54:02.629" endtime="20220704 14:54:02.630"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:54:02.631" level="INFO">${url} = checklists/</msg>
<status status="PASS" starttime="20220704 14:54:02.630" endtime="20220704 14:54:02.631"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 14:54:02.739" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:54:02.631" endtime="20220704 14:54:02.739"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:54:02.739" endtime="20220704 14:54:02.739"/>
</return>
<msg timestamp="20220704 14:54:02.739" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:54:02.628" endtime="20220704 14:54:02.739"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:54:02.739" endtime="20220704 14:54:02.739"/>
</return>
<msg timestamp="20220704 14:54:02.740" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:54:02.628" endtime="20220704 14:54:02.740"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${checklist_id}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 14:54:02.740" endtime="20220704 14:54:02.740"/>
</return>
<msg timestamp="20220704 14:54:02.742" level="INFO">${checklist_id} = 62c2ff0ac5fa8d6d4b0504f6</msg>
<status status="PASS" starttime="20220704 14:54:02.740" endtime="20220704 14:54:02.742"/>
</kw>
<kw name="Delete A Checklist" library="Checklist">
<var>${response}</var>
<arg>${checklist_id}</arg>
<doc>Deletes the checklist with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:54:02.743" level="INFO">${url} = checklists/62c2ff0ac5fa8d6d4b0504f6</msg>
<status status="PASS" starttime="20220704 14:54:02.743" endtime="20220704 14:54:02.743"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 14:54:02.861" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:54:02.743" endtime="20220704 14:54:02.861"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:54:02.861" endtime="20220704 14:54:02.861"/>
</return>
<msg timestamp="20220704 14:54:02.861" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:54:02.742" endtime="20220704 14:54:02.861"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:54:02.861" endtime="20220704 14:54:02.861"/>
</return>
<msg timestamp="20220704 14:54:02.862" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:54:02.742" endtime="20220704 14:54:02.862"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>delete</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220704 14:54:02.862" endtime="20220704 14:54:02.865"/>
</kw>
<status status="PASS" starttime="20220704 14:54:02.862" endtime="20220704 14:54:02.865"/>
</kw>
<kw name="Get A Checklist" library="Checklist">
<arg>${checklist_id}</arg>
<arg>status_code=404</arg>
<doc>Gets the checklist with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:54:02.866" level="INFO">${url} = checklists/62c2ff0ac5fa8d6d4b0504f6</msg>
<status status="PASS" starttime="20220704 14:54:02.866" endtime="20220704 14:54:02.866"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 14:54:02.908" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220704 14:54:02.866" endtime="20220704 14:54:02.908"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:54:02.908" endtime="20220704 14:54:02.908"/>
</return>
<msg timestamp="20220704 14:54:02.909" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220704 14:54:02.865" endtime="20220704 14:54:02.909"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:54:02.909" endtime="20220704 14:54:02.909"/>
</return>
<status status="PASS" starttime="20220704 14:54:02.865" endtime="20220704 14:54:02.909"/>
</kw>
<doc>Verify that a checklist can be deleted through API</doc>
<tag>api</tag>
<tag>checklist.delete</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220704 14:54:02.627" endtime="20220704 14:54:02.909"/>
</test>
<test id="s1-s5-s1-s3-t3" name="Verify A Checklist Can Be Updated" line="33">
<kw name="Create A Checklist" library="Checklist">
<var>${response}</var>
<arg>name</arg>
<arg>TestChecklist</arg>
<arg>idCard=${TEST_SUITE_CARD_ID}</arg>
<doc>Creates a new checklist in the given card.
required_args: idCard
optional_args: name, pos, idChecklistSource
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>@{optional_args}</arg>
<arg>idCard</arg>
<arg>${idCard}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 14:54:02.914" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 14:54:02.912" endtime="20220704 14:54:02.914"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 14:54:02.914" endtime="20220704 14:54:02.914"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:54:02.915" level="INFO">${url} = checklists/</msg>
<status status="PASS" starttime="20220704 14:54:02.914" endtime="20220704 14:54:02.915"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 14:54:03.024" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:54:02.915" endtime="20220704 14:54:03.024"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:54:03.024" endtime="20220704 14:54:03.024"/>
</return>
<msg timestamp="20220704 14:54:03.024" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:54:02.911" endtime="20220704 14:54:03.025"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:54:03.025" endtime="20220704 14:54:03.025"/>
</return>
<msg timestamp="20220704 14:54:03.025" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:54:02.910" endtime="20220704 14:54:03.025"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${checklist_id}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 14:54:03.025" endtime="20220704 14:54:03.025"/>
</return>
<msg timestamp="20220704 14:54:03.026" level="INFO">${checklist_id} = 62c2ff0aa51849576aed1ec6</msg>
<status status="PASS" starttime="20220704 14:54:03.025" endtime="20220704 14:54:03.026"/>
</kw>
<kw name="Update A Checklist" library="Checklist">
<var>${response}</var>
<arg>${checklist_id}</arg>
<arg>name</arg>
<arg>TestChecklist2</arg>
<doc>Updates the checklist with the given ID
optional_args: name, pos
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<arg>status_code=${status_code}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 14:54:03.028" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 14:54:03.028" endtime="20220704 14:54:03.028"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 14:54:03.028" endtime="20220704 14:54:03.028"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:54:03.029" level="INFO">${url} = checklists/62c2ff0aa51849576aed1ec6</msg>
<status status="PASS" starttime="20220704 14:54:03.028" endtime="20220704 14:54:03.029"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 14:54:03.124" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:54:03.029" endtime="20220704 14:54:03.124"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:54:03.124" endtime="20220704 14:54:03.124"/>
</return>
<msg timestamp="20220704 14:54:03.124" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:54:03.027" endtime="20220704 14:54:03.124"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:54:03.124" endtime="20220704 14:54:03.124"/>
</return>
<msg timestamp="20220704 14:54:03.125" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:54:03.027" endtime="20220704 14:54:03.125"/>
</kw>
<kw name="Get A Checklist" library="Checklist">
<var>${response}</var>
<arg>${checklist_id}</arg>
<doc>Gets the checklist with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:54:03.126" level="INFO">${url} = checklists/62c2ff0aa51849576aed1ec6</msg>
<status status="PASS" starttime="20220704 14:54:03.126" endtime="20220704 14:54:03.126"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 14:54:03.186" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:54:03.126" endtime="20220704 14:54:03.186"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:54:03.186" endtime="20220704 14:54:03.186"/>
</return>
<msg timestamp="20220704 14:54:03.187" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:54:03.125" endtime="20220704 14:54:03.187"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:54:03.187" endtime="20220704 14:54:03.187"/>
</return>
<msg timestamp="20220704 14:54:03.187" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:54:03.125" endtime="20220704 14:54:03.187"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${checklist_name}</var>
<arg>${response}</arg>
<arg>name</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 14:54:03.188" endtime="20220704 14:54:03.188"/>
</return>
<msg timestamp="20220704 14:54:03.189" level="INFO">${checklist_name} = TestChecklist2</msg>
<status status="PASS" starttime="20220704 14:54:03.187" endtime="20220704 14:54:03.189"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${checklist_name}</arg>
<arg>TestChecklist2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220704 14:54:03.189" endtime="20220704 14:54:03.189"/>
</kw>
<kw name="Delete A Checklist" library="Checklist" type="TEARDOWN">
<arg>${checklist_id}</arg>
<doc>Deletes the checklist with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:54:03.206" level="INFO">${url} = checklists/62c2ff0aa51849576aed1ec6</msg>
<status status="PASS" starttime="20220704 14:54:03.206" endtime="20220704 14:54:03.206"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 14:54:03.342" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:54:03.206" endtime="20220704 14:54:03.342"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:54:03.342" endtime="20220704 14:54:03.342"/>
</return>
<msg timestamp="20220704 14:54:03.343" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:54:03.206" endtime="20220704 14:54:03.343"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:54:03.343" endtime="20220704 14:54:03.343"/>
</return>
<status status="PASS" starttime="20220704 14:54:03.189" endtime="20220704 14:54:03.343"/>
</kw>
<doc>Verify that a checklist's name can be updated through API</doc>
<tag>api</tag>
<tag>checklist.update</tag>
<tag>regression</tag>
<status status="PASS" starttime="20220704 14:54:02.910" endtime="20220704 14:54:03.343"/>
</test>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Teardown Board</arg>
<arg>Delete All Sessions</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Teardown Board">
<doc>Delete the board created for this suite</doc>
<kw name="Delete A Board" library="Board">
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:54:03.345" level="INFO">${url} = boards/62c2ff09272cfd6a808d2a0d</msg>
<status status="PASS" starttime="20220704 14:54:03.345" endtime="20220704 14:54:03.346"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 14:54:03.765" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:54:03.346" endtime="20220704 14:54:03.765"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:54:03.765" endtime="20220704 14:54:03.765"/>
</return>
<msg timestamp="20220704 14:54:03.765" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:54:03.345" endtime="20220704 14:54:03.766"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:54:03.766" endtime="20220704 14:54:03.766"/>
</return>
<status status="PASS" starttime="20220704 14:54:03.344" endtime="20220704 14:54:03.766"/>
</kw>
<status status="PASS" starttime="20220704 14:54:03.344" endtime="20220704 14:54:03.766"/>
</kw>
<kw name="Delete All Sessions" library="request_own_library">
<status status="PASS" starttime="20220704 14:54:03.766" endtime="20220704 14:54:03.768"/>
</kw>
<status status="PASS" starttime="20220704 14:54:03.344" endtime="20220704 14:54:03.768"/>
</kw>
<doc>Example Test with Trello API Checklists</doc>
<status status="PASS" starttime="20220704 14:54:01.870" endtime="20220704 14:54:03.768"/>
</suite>
<suite id="s1-s5-s1-s4" name="Trello Api Labels Tests" source="/trello/api/trello_api_labels_tests.robot">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Create Trello Session</arg>
<arg>Setup Board And List</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Create Trello Session" library="TrelloAPI">
<doc>Creates a Trello Session</doc>
<kw name="Create Session" library="request_own_library">
<arg>${API_BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<status status="PASS" starttime="20220704 14:54:03.779" endtime="20220704 14:54:03.779"/>
</kw>
<status status="PASS" starttime="20220704 14:54:03.779" endtime="20220704 14:54:03.779"/>
</kw>
<kw name="Setup Board And List">
<doc>Create a board and save its ID and its first list's ID</doc>
<kw name="Create A Board" library="Board">
<var>${BOARD}</var>
<arg>TestBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 14:54:03.780" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 14:54:03.780" endtime="20220704 14:54:03.780"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 14:54:03.781" endtime="20220704 14:54:03.781"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:54:03.781" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220704 14:54:03.781" endtime="20220704 14:54:03.781"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 14:54:03.990" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:54:03.782" endtime="20220704 14:54:03.990"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:54:03.990" endtime="20220704 14:54:03.990"/>
</return>
<msg timestamp="20220704 14:54:03.991" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:54:03.780" endtime="20220704 14:54:03.991"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:54:03.991" endtime="20220704 14:54:03.991"/>
</return>
<msg timestamp="20220704 14:54:03.991" level="INFO">${BOARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:54:03.780" endtime="20220704 14:54:03.991"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_BOARD_ID}</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220704 14:54:03.992" level="INFO">${TEST_SUITE_BOARD_ID} = 62c2ff0bd1fb373e1da0edbb</msg>
<status status="PASS" starttime="20220704 14:54:03.991" endtime="20220704 14:54:03.992"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${LISTS}</var>
<arg>boards/${TEST_SUITE_BOARD_ID}/lists</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 14:54:04.043" level="INFO">${LISTS} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:54:03.993" endtime="20220704 14:54:04.043"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_LIST_ID}</arg>
<arg>${LISTS.json()}[0][id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220704 14:54:04.044" level="INFO">${TEST_SUITE_LIST_ID} = 62c2ff0bd1fb373e1da0edc2</msg>
<status status="PASS" starttime="20220704 14:54:04.043" endtime="20220704 14:54:04.044"/>
</kw>
<status status="PASS" starttime="20220704 14:54:03.779" endtime="20220704 14:54:04.045"/>
</kw>
<status status="PASS" starttime="20220704 14:54:03.779" endtime="20220704 14:54:04.045"/>
</kw>
<test id="s1-s5-s1-s4-t1" name="Create and get label on board" line="14">
<kw name="Create A Label" library="Label">
<var>${response}</var>
<arg>name</arg>
<arg>label2</arg>
<arg>color</arg>
<arg>yellow</arg>
<doc>Creates a new label in the given board.
required_args: idBoard
optional_args: name, color
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>idBoard</arg>
<arg>${idBoard}</arg>
<arg>@{optional_args}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 14:54:04.047" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 14:54:04.047" endtime="20220704 14:54:04.047"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 14:54:04.047" endtime="20220704 14:54:04.047"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:54:04.048" level="INFO">${url} = labels/</msg>
<status status="PASS" starttime="20220704 14:54:04.047" endtime="20220704 14:54:04.048"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 14:54:04.150" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:54:04.048" endtime="20220704 14:54:04.150"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:54:04.150" endtime="20220704 14:54:04.150"/>
</return>
<msg timestamp="20220704 14:54:04.151" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:54:04.046" endtime="20220704 14:54:04.151"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:54:04.151" endtime="20220704 14:54:04.151"/>
</return>
<msg timestamp="20220704 14:54:04.151" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:54:04.046" endtime="20220704 14:54:04.151"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>label</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220704 14:54:04.152" endtime="20220704 14:54:04.154"/>
</kw>
<status status="PASS" starttime="20220704 14:54:04.151" endtime="20220704 14:54:04.154"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${LABEL_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 14:54:04.155" endtime="20220704 14:54:04.155"/>
</return>
<msg timestamp="20220704 14:54:04.156" level="INFO">${LABEL_ID} = 62c2ff0ce42c6130aa56df22</msg>
<status status="PASS" starttime="20220704 14:54:04.154" endtime="20220704 14:54:04.156"/>
</kw>
<kw name="Get A Label" library="Label">
<var>${response}</var>
<arg>${LABEL_ID}</arg>
<doc>Gets the label with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:54:04.157" level="INFO">${url} = labels/62c2ff0ce42c6130aa56df22</msg>
<status status="PASS" starttime="20220704 14:54:04.157" endtime="20220704 14:54:04.157"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 14:54:04.219" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:54:04.157" endtime="20220704 14:54:04.219"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:54:04.219" endtime="20220704 14:54:04.219"/>
</return>
<msg timestamp="20220704 14:54:04.220" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:54:04.156" endtime="20220704 14:54:04.220"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:54:04.220" endtime="20220704 14:54:04.220"/>
</return>
<msg timestamp="20220704 14:54:04.220" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:54:04.156" endtime="20220704 14:54:04.220"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${LABEL_COLOR}</var>
<arg>${response}</arg>
<arg>color</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 14:54:04.221" endtime="20220704 14:54:04.221"/>
</return>
<msg timestamp="20220704 14:54:04.221" level="INFO">${LABEL_COLOR} = yellow</msg>
<status status="PASS" starttime="20220704 14:54:04.220" endtime="20220704 14:54:04.221"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${LABEL_NAME}</var>
<arg>${response}</arg>
<arg>name</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 14:54:04.222" endtime="20220704 14:54:04.222"/>
</return>
<msg timestamp="20220704 14:54:04.222" level="INFO">${LABEL_NAME} = label2</msg>
<status status="PASS" starttime="20220704 14:54:04.221" endtime="20220704 14:54:04.223"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${LABEL_COLOR}</arg>
<arg>yellow</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220704 14:54:04.223" endtime="20220704 14:54:04.223"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${LABEL_NAME}</arg>
<arg>label2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220704 14:54:04.223" endtime="20220704 14:54:04.223"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Label</arg>
<arg>${LABEL_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Label" library="Label">
<arg>${LABEL_ID}</arg>
<doc>Deletes the label with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:54:04.225" level="INFO">${url} = labels/62c2ff0ce42c6130aa56df22</msg>
<status status="PASS" starttime="20220704 14:54:04.224" endtime="20220704 14:54:04.225"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 14:54:04.340" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:54:04.225" endtime="20220704 14:54:04.340"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:54:04.340" endtime="20220704 14:54:04.340"/>
</return>
<msg timestamp="20220704 14:54:04.341" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:54:04.224" endtime="20220704 14:54:04.341"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:54:04.341" endtime="20220704 14:54:04.341"/>
</return>
<status status="PASS" starttime="20220704 14:54:04.224" endtime="20220704 14:54:04.341"/>
</kw>
<status status="PASS" starttime="20220704 14:54:04.223" endtime="20220704 14:54:04.341"/>
</kw>
<doc>Verify that a label can be created through API</doc>
<tag>api</tag>
<tag>label.create</tag>
<tag>label.get</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220704 14:54:04.045" endtime="20220704 14:54:04.341"/>
</test>
<test id="s1-s5-s1-s4-t2" name="Update label on board" line="28">
<kw name="Create A Label" library="Label">
<var>${response}</var>
<arg>name</arg>
<arg>label2</arg>
<arg>color</arg>
<arg>yellow</arg>
<doc>Creates a new label in the given board.
required_args: idBoard
optional_args: name, color
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>idBoard</arg>
<arg>${idBoard}</arg>
<arg>@{optional_args}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 14:54:04.344" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 14:54:04.343" endtime="20220704 14:54:04.344"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 14:54:04.344" endtime="20220704 14:54:04.344"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:54:04.345" level="INFO">${url} = labels/</msg>
<status status="PASS" starttime="20220704 14:54:04.344" endtime="20220704 14:54:04.345"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 14:54:04.455" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:54:04.345" endtime="20220704 14:54:04.456"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:54:04.456" endtime="20220704 14:54:04.456"/>
</return>
<msg timestamp="20220704 14:54:04.456" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:54:04.343" endtime="20220704 14:54:04.456"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:54:04.456" endtime="20220704 14:54:04.456"/>
</return>
<msg timestamp="20220704 14:54:04.456" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:54:04.342" endtime="20220704 14:54:04.456"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>label</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220704 14:54:04.457" endtime="20220704 14:54:04.459"/>
</kw>
<status status="PASS" starttime="20220704 14:54:04.457" endtime="20220704 14:54:04.459"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${LABEL_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 14:54:04.460" endtime="20220704 14:54:04.460"/>
</return>
<msg timestamp="20220704 14:54:04.461" level="INFO">${LABEL_ID} = 62c2ff0cc4c092092ccdc98f</msg>
<status status="PASS" starttime="20220704 14:54:04.460" endtime="20220704 14:54:04.461"/>
</kw>
<kw name="Update A Label" library="Label">
<var>${new_response}</var>
<arg>${LABEL_ID}</arg>
<arg>name</arg>
<arg>label3</arg>
<arg>color</arg>
<arg>orange</arg>
<doc>Updates the label with the given ID
optional_args: name, color
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 14:54:04.462" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 14:54:04.462" endtime="20220704 14:54:04.462"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 14:54:04.462" endtime="20220704 14:54:04.462"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:54:04.463" level="INFO">${url} = labels/62c2ff0cc4c092092ccdc98f</msg>
<status status="PASS" starttime="20220704 14:54:04.462" endtime="20220704 14:54:04.463"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 14:54:04.565" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:54:04.463" endtime="20220704 14:54:04.565"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:54:04.565" endtime="20220704 14:54:04.565"/>
</return>
<msg timestamp="20220704 14:54:04.565" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:54:04.461" endtime="20220704 14:54:04.565"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:54:04.565" endtime="20220704 14:54:04.565"/>
</return>
<msg timestamp="20220704 14:54:04.565" level="INFO">${new_response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:54:04.461" endtime="20220704 14:54:04.566"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${NEW_LABEL_COLOR}</var>
<arg>${new_response}</arg>
<arg>color</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 14:54:04.566" endtime="20220704 14:54:04.566"/>
</return>
<msg timestamp="20220704 14:54:04.567" level="INFO">${NEW_LABEL_COLOR} = orange</msg>
<status status="PASS" starttime="20220704 14:54:04.566" endtime="20220704 14:54:04.567"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${NEW_LABEL_NAME}</var>
<arg>${new_response}</arg>
<arg>name</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 14:54:04.567" endtime="20220704 14:54:04.567"/>
</return>
<msg timestamp="20220704 14:54:04.568" level="INFO">${NEW_LABEL_NAME} = label3</msg>
<status status="PASS" starttime="20220704 14:54:04.567" endtime="20220704 14:54:04.568"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${NEW_LABEL_COLOR}</arg>
<arg>orange</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220704 14:54:04.568" endtime="20220704 14:54:04.568"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${NEW_LABEL_NAME}</arg>
<arg>label3</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220704 14:54:04.569" endtime="20220704 14:54:04.569"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Label</arg>
<arg>${LABEL_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Label" library="Label">
<arg>${LABEL_ID}</arg>
<doc>Deletes the label with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:54:04.571" level="INFO">${url} = labels/62c2ff0cc4c092092ccdc98f</msg>
<status status="PASS" starttime="20220704 14:54:04.570" endtime="20220704 14:54:04.571"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 14:54:04.667" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:54:04.571" endtime="20220704 14:54:04.668"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:54:04.668" endtime="20220704 14:54:04.668"/>
</return>
<msg timestamp="20220704 14:54:04.668" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:54:04.570" endtime="20220704 14:54:04.668"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:54:04.668" endtime="20220704 14:54:04.668"/>
</return>
<status status="PASS" starttime="20220704 14:54:04.569" endtime="20220704 14:54:04.668"/>
</kw>
<status status="PASS" starttime="20220704 14:54:04.569" endtime="20220704 14:54:04.668"/>
</kw>
<doc>Verify that a label's name and color can be updated through API</doc>
<tag>api</tag>
<tag>label.update</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220704 14:54:04.342" endtime="20220704 14:54:04.668"/>
</test>
<test id="s1-s5-s1-s4-t3" name="Delete label on board" line="41">
<kw name="Create A Label" library="Label">
<var>${response}</var>
<arg>name</arg>
<arg>label2</arg>
<arg>color</arg>
<arg>yellow</arg>
<doc>Creates a new label in the given board.
required_args: idBoard
optional_args: name, color
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>idBoard</arg>
<arg>${idBoard}</arg>
<arg>@{optional_args}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 14:54:04.671" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 14:54:04.671" endtime="20220704 14:54:04.671"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 14:54:04.671" endtime="20220704 14:54:04.671"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:54:04.672" level="INFO">${url} = labels/</msg>
<status status="PASS" starttime="20220704 14:54:04.671" endtime="20220704 14:54:04.672"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 14:54:04.767" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:54:04.672" endtime="20220704 14:54:04.768"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:54:04.768" endtime="20220704 14:54:04.768"/>
</return>
<msg timestamp="20220704 14:54:04.768" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:54:04.670" endtime="20220704 14:54:04.768"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:54:04.768" endtime="20220704 14:54:04.768"/>
</return>
<msg timestamp="20220704 14:54:04.768" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:54:04.670" endtime="20220704 14:54:04.768"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${LABEL_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 14:54:04.769" endtime="20220704 14:54:04.769"/>
</return>
<msg timestamp="20220704 14:54:04.770" level="INFO">${LABEL_ID} = 62c2ff0cb2059440a06dfe37</msg>
<status status="PASS" starttime="20220704 14:54:04.769" endtime="20220704 14:54:04.770"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Label</arg>
<arg>${LABEL_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Label" library="Label">
<arg>${LABEL_ID}</arg>
<doc>Deletes the label with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:54:04.772" level="INFO">${url} = labels/62c2ff0cb2059440a06dfe37</msg>
<status status="PASS" starttime="20220704 14:54:04.772" endtime="20220704 14:54:04.772"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 14:54:04.893" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:54:04.772" endtime="20220704 14:54:04.893"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:54:04.893" endtime="20220704 14:54:04.893"/>
</return>
<msg timestamp="20220704 14:54:04.894" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:54:04.771" endtime="20220704 14:54:04.894"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:54:04.894" endtime="20220704 14:54:04.894"/>
</return>
<status status="PASS" starttime="20220704 14:54:04.770" endtime="20220704 14:54:04.894"/>
</kw>
<status status="PASS" starttime="20220704 14:54:04.770" endtime="20220704 14:54:04.894"/>
</kw>
<kw name="Get A Label" library="Label">
<arg>${LABEL_ID}</arg>
<arg>status_code=404</arg>
<doc>Gets the label with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:54:04.896" level="INFO">${url} = labels/62c2ff0cb2059440a06dfe37</msg>
<status status="PASS" starttime="20220704 14:54:04.895" endtime="20220704 14:54:04.896"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 14:54:04.942" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220704 14:54:04.896" endtime="20220704 14:54:04.943"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:54:04.943" endtime="20220704 14:54:04.943"/>
</return>
<msg timestamp="20220704 14:54:04.943" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220704 14:54:04.895" endtime="20220704 14:54:04.943"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:54:04.943" endtime="20220704 14:54:04.943"/>
</return>
<status status="PASS" starttime="20220704 14:54:04.894" endtime="20220704 14:54:04.943"/>
</kw>
<doc>Verify that a label can be deleted through API</doc>
<tag>api</tag>
<tag>label.delete</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220704 14:54:04.669" endtime="20220704 14:54:04.943"/>
</test>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Teardown Board</arg>
<arg>Delete All Sessions</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Teardown Board">
<doc>Delete the board created for this session.</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:54:04.946" level="INFO">${url} = boards/62c2ff0bd1fb373e1da0edbb</msg>
<status status="PASS" starttime="20220704 14:54:04.946" endtime="20220704 14:54:04.946"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 14:54:05.236" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:54:04.947" endtime="20220704 14:54:05.237"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:54:05.237" endtime="20220704 14:54:05.237"/>
</return>
<msg timestamp="20220704 14:54:05.237" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:54:04.945" endtime="20220704 14:54:05.237"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:54:05.237" endtime="20220704 14:54:05.237"/>
</return>
<status status="PASS" starttime="20220704 14:54:04.945" endtime="20220704 14:54:05.237"/>
</kw>
<status status="PASS" starttime="20220704 14:54:04.945" endtime="20220704 14:54:05.237"/>
</kw>
<status status="PASS" starttime="20220704 14:54:04.944" endtime="20220704 14:54:05.237"/>
</kw>
<kw name="Delete All Sessions" library="request_own_library">
<status status="PASS" starttime="20220704 14:54:05.238" endtime="20220704 14:54:05.239"/>
</kw>
<status status="PASS" starttime="20220704 14:54:04.944" endtime="20220704 14:54:05.239"/>
</kw>
<doc>Example Test with Trello API Cards</doc>
<status status="PASS" starttime="20220704 14:54:03.770" endtime="20220704 14:54:05.239"/>
</suite>
<suite id="s1-s5-s1-s5" name="Trello Api Lists Tests" source="/trello/api/trello_api_lists_tests.robot">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Create Trello Session</arg>
<arg>Setup Board</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Create Trello Session" library="TrelloAPI">
<doc>Creates a Trello Session</doc>
<kw name="Create Session" library="request_own_library">
<arg>${API_BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<status status="PASS" starttime="20220704 14:54:05.251" endtime="20220704 14:54:05.251"/>
</kw>
<status status="PASS" starttime="20220704 14:54:05.250" endtime="20220704 14:54:05.251"/>
</kw>
<kw name="Setup Board">
<doc>Create a board and save it's id for the suite</doc>
<kw name="Create A Board" library="Board">
<var>${BOARD}</var>
<arg>TestBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 14:54:05.252" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 14:54:05.252" endtime="20220704 14:54:05.252"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 14:54:05.252" endtime="20220704 14:54:05.253"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:54:05.253" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220704 14:54:05.253" endtime="20220704 14:54:05.253"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 14:54:05.453" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:54:05.253" endtime="20220704 14:54:05.453"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:54:05.453" endtime="20220704 14:54:05.453"/>
</return>
<msg timestamp="20220704 14:54:05.454" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:54:05.252" endtime="20220704 14:54:05.454"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:54:05.454" endtime="20220704 14:54:05.454"/>
</return>
<msg timestamp="20220704 14:54:05.454" level="INFO">${BOARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:54:05.251" endtime="20220704 14:54:05.454"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Set Suite Variable</arg>
<arg>\${TEST_SUITE_BOARD_ID}</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_BOARD_ID}</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220704 14:54:05.456" level="INFO">${TEST_SUITE_BOARD_ID} = 62c2ff0da92da889463ea7c7</msg>
<status status="PASS" starttime="20220704 14:54:05.455" endtime="20220704 14:54:05.456"/>
</kw>
<status status="PASS" starttime="20220704 14:54:05.454" endtime="20220704 14:54:05.456"/>
</kw>
<status status="PASS" starttime="20220704 14:54:05.251" endtime="20220704 14:54:05.456"/>
</kw>
<status status="PASS" starttime="20220704 14:54:05.250" endtime="20220704 14:54:05.456"/>
</kw>
<test id="s1-s5-s1-s5-t1" name="CREATE a list" line="13">
<kw name="Create A List" library="List">
<var>${response}</var>
<arg>NewList</arg>
<doc>Creates a new List
board id
name the list will have
optional_args: idListSource, pos, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>list</arg>
<arg>name</arg>
<arg>${name}</arg>
<arg>idBoard</arg>
<arg>${idBoard}</arg>
<arg>@{optional_args}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 14:54:05.458" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 14:54:05.458" endtime="20220704 14:54:05.458"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 14:54:05.458" endtime="20220704 14:54:05.459"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:54:05.460" level="INFO">${url} = lists/</msg>
<status status="PASS" starttime="20220704 14:54:05.459" endtime="20220704 14:54:05.460"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 14:54:05.569" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:54:05.460" endtime="20220704 14:54:05.569"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:54:05.569" endtime="20220704 14:54:05.569"/>
</return>
<msg timestamp="20220704 14:54:05.570" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:54:05.457" endtime="20220704 14:54:05.570"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:54:05.570" endtime="20220704 14:54:05.570"/>
</return>
<msg timestamp="20220704 14:54:05.570" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:54:05.457" endtime="20220704 14:54:05.570"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>list</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220704 14:54:05.571" endtime="20220704 14:54:05.573"/>
</kw>
<status status="PASS" starttime="20220704 14:54:05.570" endtime="20220704 14:54:05.573"/>
</kw>
<doc>Verify that a list can be created through API</doc>
<tag>api</tag>
<tag>list.create</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220704 14:54:05.456" endtime="20220704 14:54:05.573"/>
</test>
<test id="s1-s5-s1-s5-t2" name="UPDATE a list" line="19">
<kw name="Create A List" library="List">
<var>${response}</var>
<arg>NewList</arg>
<doc>Creates a new List
board id
name the list will have
optional_args: idListSource, pos, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>list</arg>
<arg>name</arg>
<arg>${name}</arg>
<arg>idBoard</arg>
<arg>${idBoard}</arg>
<arg>@{optional_args}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 14:54:05.575" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 14:54:05.575" endtime="20220704 14:54:05.575"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 14:54:05.575" endtime="20220704 14:54:05.576"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:54:05.576" level="INFO">${url} = lists/</msg>
<status status="PASS" starttime="20220704 14:54:05.576" endtime="20220704 14:54:05.576"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 14:54:05.686" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:54:05.576" endtime="20220704 14:54:05.686"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:54:05.686" endtime="20220704 14:54:05.686"/>
</return>
<msg timestamp="20220704 14:54:05.686" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:54:05.575" endtime="20220704 14:54:05.686"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:54:05.686" endtime="20220704 14:54:05.687"/>
</return>
<msg timestamp="20220704 14:54:05.687" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:54:05.574" endtime="20220704 14:54:05.687"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>list</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220704 14:54:05.687" endtime="20220704 14:54:05.689"/>
</kw>
<status status="PASS" starttime="20220704 14:54:05.687" endtime="20220704 14:54:05.690"/>
</kw>
<kw name="Update A List" library="List">
<arg>${response.json()}[id]</arg>
<arg>name</arg>
<arg>NewName</arg>
<doc>Updates the board with the given ID
optional_args: name, idListSource, pos, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>list</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 14:54:05.692" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 14:54:05.691" endtime="20220704 14:54:05.692"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 14:54:05.692" endtime="20220704 14:54:05.692"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:54:05.693" level="INFO">${url} = lists/62c2ff0d4b75916427c614f6</msg>
<status status="PASS" starttime="20220704 14:54:05.692" endtime="20220704 14:54:05.693"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 14:54:05.766" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:54:05.693" endtime="20220704 14:54:05.766"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:54:05.766" endtime="20220704 14:54:05.766"/>
</return>
<msg timestamp="20220704 14:54:05.767" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:54:05.691" endtime="20220704 14:54:05.767"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:54:05.767" endtime="20220704 14:54:05.767"/>
</return>
<status status="PASS" starttime="20220704 14:54:05.690" endtime="20220704 14:54:05.767"/>
</kw>
<kw name="Get A List" library="List">
<var>${new_response}</var>
<arg>${response.json()}[id]</arg>
<doc>Gets the List with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>list</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:54:05.769" level="INFO">${url} = lists/62c2ff0d4b75916427c614f6</msg>
<status status="PASS" starttime="20220704 14:54:05.769" endtime="20220704 14:54:05.769"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 14:54:05.814" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:54:05.769" endtime="20220704 14:54:05.814"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:54:05.814" endtime="20220704 14:54:05.814"/>
</return>
<msg timestamp="20220704 14:54:05.814" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:54:05.768" endtime="20220704 14:54:05.814"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:54:05.814" endtime="20220704 14:54:05.814"/>
</return>
<msg timestamp="20220704 14:54:05.815" level="INFO">${new_response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:54:05.767" endtime="20220704 14:54:05.815"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${new_response}</arg>
<arg>list</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220704 14:54:05.815" endtime="20220704 14:54:05.817"/>
</kw>
<status status="PASS" starttime="20220704 14:54:05.815" endtime="20220704 14:54:05.817"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${new_response.json()}[name]</arg>
<arg>NewName</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220704 14:54:05.817" endtime="20220704 14:54:05.818"/>
</kw>
<doc>Verify that a lists name can be updated through API</doc>
<tag>api</tag>
<tag>list.update</tag>
<tag>regression</tag>
<status status="PASS" starttime="20220704 14:54:05.574" endtime="20220704 14:54:05.818"/>
</test>
<test id="s1-s5-s1-s5-t3" name="ARCHIVE A list" line="29">
<kw name="Create A List" library="List">
<var>${response}</var>
<arg>NewList</arg>
<doc>Creates a new List
board id
name the list will have
optional_args: idListSource, pos, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>list</arg>
<arg>name</arg>
<arg>${name}</arg>
<arg>idBoard</arg>
<arg>${idBoard}</arg>
<arg>@{optional_args}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 14:54:05.823" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 14:54:05.822" endtime="20220704 14:54:05.823"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 14:54:05.823" endtime="20220704 14:54:05.823"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:54:05.824" level="INFO">${url} = lists/</msg>
<status status="PASS" starttime="20220704 14:54:05.823" endtime="20220704 14:54:05.824"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 14:54:05.918" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:54:05.824" endtime="20220704 14:54:05.918"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:54:05.918" endtime="20220704 14:54:05.918"/>
</return>
<msg timestamp="20220704 14:54:05.919" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:54:05.822" endtime="20220704 14:54:05.919"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:54:05.919" endtime="20220704 14:54:05.919"/>
</return>
<msg timestamp="20220704 14:54:05.919" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:54:05.819" endtime="20220704 14:54:05.919"/>
</kw>
<kw name="Archive A List" library="List">
<arg>${response.json()}[id]</arg>
<doc>Deletes the list with the given ID</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>archive_list</arg>
<arg>${id}</arg>
<arg>value</arg>
<arg>true</arg>
<arg>status_code=${status_code}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 14:54:05.921" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 14:54:05.921" endtime="20220704 14:54:05.921"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 14:54:05.921" endtime="20220704 14:54:05.922"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:54:05.922" level="INFO">${url} = lists/62c2ff0dff08847f81d6d3bb/closed</msg>
<status status="PASS" starttime="20220704 14:54:05.922" endtime="20220704 14:54:05.922"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 14:54:06.021" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:54:05.922" endtime="20220704 14:54:06.021"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:54:06.022" endtime="20220704 14:54:06.022"/>
</return>
<msg timestamp="20220704 14:54:06.022" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:54:05.920" endtime="20220704 14:54:06.022"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:54:06.022" endtime="20220704 14:54:06.022"/>
</return>
<status status="PASS" starttime="20220704 14:54:05.919" endtime="20220704 14:54:06.022"/>
</kw>
<kw name="Get A List" library="List">
<var>${new_response}</var>
<arg>${response.json()}[id]</arg>
<doc>Gets the List with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>list</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:54:06.024" level="INFO">${url} = lists/62c2ff0dff08847f81d6d3bb</msg>
<status status="PASS" starttime="20220704 14:54:06.024" endtime="20220704 14:54:06.024"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 14:54:06.077" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:54:06.024" endtime="20220704 14:54:06.077"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:54:06.077" endtime="20220704 14:54:06.077"/>
</return>
<msg timestamp="20220704 14:54:06.078" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:54:06.024" endtime="20220704 14:54:06.078"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:54:06.078" endtime="20220704 14:54:06.078"/>
</return>
<msg timestamp="20220704 14:54:06.078" level="INFO">${new_response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:54:06.022" endtime="20220704 14:54:06.078"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${new_response.json()}[closed]</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220704 14:54:06.078" endtime="20220704 14:54:06.079"/>
</kw>
<doc>Verify that a list can be archived through API</doc>
<tag>api</tag>
<tag>list.archive</tag>
<tag>regression</tag>
<status status="PASS" starttime="20220704 14:54:05.819" endtime="20220704 14:54:06.079"/>
</test>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Teardown Board</arg>
<arg>Delete All Sessions</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Teardown Board">
<doc>Delete the board created for this suite.</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:54:06.082" level="INFO">${url} = boards/62c2ff0da92da889463ea7c7</msg>
<status status="PASS" starttime="20220704 14:54:06.082" endtime="20220704 14:54:06.082"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 14:54:06.446" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:54:06.083" endtime="20220704 14:54:06.446"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:54:06.446" endtime="20220704 14:54:06.446"/>
</return>
<msg timestamp="20220704 14:54:06.446" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:54:06.082" endtime="20220704 14:54:06.447"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:54:06.447" endtime="20220704 14:54:06.447"/>
</return>
<status status="PASS" starttime="20220704 14:54:06.081" endtime="20220704 14:54:06.447"/>
</kw>
<status status="PASS" starttime="20220704 14:54:06.081" endtime="20220704 14:54:06.447"/>
</kw>
<status status="PASS" starttime="20220704 14:54:06.080" endtime="20220704 14:54:06.447"/>
</kw>
<kw name="Delete All Sessions" library="request_own_library">
<status status="PASS" starttime="20220704 14:54:06.447" endtime="20220704 14:54:06.449"/>
</kw>
<status status="PASS" starttime="20220704 14:54:06.080" endtime="20220704 14:54:06.449"/>
</kw>
<doc>Example Test with Trello API lists</doc>
<status status="PASS" starttime="20220704 14:54:05.241" endtime="20220704 14:54:06.449"/>
</suite>
<status status="PASS" starttime="20220704 14:53:55.689" endtime="20220704 14:54:06.451"/>
</suite>
<status status="PASS" starttime="20220704 14:53:55.671" endtime="20220704 14:54:06.454"/>
</suite>
<suite id="s1-s6" name="Trello" source="/trello">
<suite id="s1-s6-s1" name="Gui" source="/trello/gui">
<suite id="s1-s6-s1-s1" name="Trello Gui Board" source="/trello/gui/trello_gui_board.robot">
<kw name="Boards Suite Setup" type="SETUP">
<doc>Creates a Trello Sesion in order to use api's keywords.</doc>
<kw name="Create Trello Session" library="TrelloAPI">
<doc>Creates a Trello Session</doc>
<kw name="Create Session" library="request_own_library">
<arg>${API_BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<status status="PASS" starttime="20220704 14:54:48.093" endtime="20220704 14:54:48.093"/>
</kw>
<status status="PASS" starttime="20220704 14:54:48.093" endtime="20220704 14:54:48.093"/>
</kw>
<status status="PASS" starttime="20220704 14:54:48.092" endtime="20220704 14:54:48.093"/>
</kw>
<test id="s1-s6-s1-s1-t1" name="create a board" line="12">
<kw name="Open Browser From Environment" library="CommonGUI">
<arg>${LOGIN_URL}</arg>
<doc>This keywords takes REMOTE and BROWSER variables
from the environment automatically and only needs a url</doc>
<if>
<branch type="IF" condition="${is_remote}">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${url}</arg>
<arg>${BROWSER}</arg>
<arg>remote_url=http://selenium-hub:4444</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20220704 14:54:48.096" level="INFO">Opening browser 'chrome' to base url 'https://trello.com/login' through remote server at 'http://selenium-hub:4444'.</msg>
<status status="PASS" starttime="20220704 14:54:48.095" endtime="20220704 14:54:50.224"/>
</kw>
<status status="PASS" starttime="20220704 14:54:48.095" endtime="20220704 14:54:50.225"/>
</branch>
<branch type="ELSE">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${url}</arg>
<arg>${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<status status="NOT RUN" starttime="20220704 14:54:50.225" endtime="20220704 14:54:50.225"/>
</kw>
<status status="NOT RUN" starttime="20220704 14:54:50.225" endtime="20220704 14:54:50.225"/>
</branch>
<status status="PASS" starttime="20220704 14:54:48.095" endtime="20220704 14:54:50.225"/>
</if>
<status status="PASS" starttime="20220704 14:54:48.095" endtime="20220704 14:54:50.225"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20220704 14:54:50.225" endtime="20220704 14:54:50.366"/>
</kw>
<kw name="Login To Trello" library="LoginPage">
<arg>${DEFAULT_EMAIL}</arg>
<arg>${DEFAULT_PASSWORD}</arg>
<doc>High-level keyword for logging in to Trello</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220704 14:54:50.394" level="INFO">${url} = https://trello.com/login</msg>
<status status="PASS" starttime="20220704 14:54:50.367" endtime="20220704 14:54:50.394"/>
</kw>
<if>
<branch type="IF" condition="'${url}' != '${LOGIN_URL}'">
<kw name="Go To" library="SeleniumLibrary">
<arg>${LOGIN_URL}</arg>
<doc>Navigates the current browser window to the provided ``url``.</doc>
<status status="NOT RUN" starttime="20220704 14:54:50.395" endtime="20220704 14:54:50.395"/>
</kw>
<status status="NOT RUN" starttime="20220704 14:54:50.394" endtime="20220704 14:54:50.395"/>
</branch>
<status status="PASS" starttime="20220704 14:54:50.394" endtime="20220704 14:54:50.395"/>
</if>
<kw name="Enter Username" library="LoginPage">
<arg>${username}</arg>
<doc>Take a username as argument and
enters it in the user_input</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${USER_INPUT}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 14:54:50.395" endtime="20220704 14:54:50.467"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${USER_INPUT}</arg>
<arg>${username}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220704 14:54:50.467" level="INFO">Typing text 'bootcamp04@mailinator.com' into text field 'css:input#user'.</msg>
<status status="PASS" starttime="20220704 14:54:50.467" endtime="20220704 14:54:50.618"/>
</kw>
<status status="PASS" starttime="20220704 14:54:50.395" endtime="20220704 14:54:50.618"/>
</kw>
<kw name="Wait Until Element Is Not Visible" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<doc>Waits until the element ``locator`` is not visible.</doc>
<status status="PASS" starttime="20220704 14:54:50.619" endtime="20220704 14:54:51.212"/>
</kw>
<kw name="Click Login Button" library="LoginPage">
<doc>Clicks Trello's login button if in Trello's
login page, else it clicks Atlassian's</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220704 14:54:51.232" level="INFO">${url} = https://trello.com/login</msg>
<status status="PASS" starttime="20220704 14:54:51.212" endtime="20220704 14:54:51.232"/>
</kw>
<if>
<branch type="IF" condition="'${url}' == '${LOGIN_URL}'">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220704 14:54:51.233" endtime="20220704 14:54:51.345"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220704 14:54:51.345" level="INFO">Clicking button 'css:input#login'.</msg>
<status status="PASS" starttime="20220704 14:54:51.345" endtime="20220704 14:54:52.274"/>
</kw>
<status status="PASS" starttime="20220704 14:54:51.233" endtime="20220704 14:54:52.274"/>
</branch>
<branch type="ELSE">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="NOT RUN" starttime="20220704 14:54:52.274" endtime="20220704 14:54:52.274"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<status status="NOT RUN" starttime="20220704 14:54:52.275" endtime="20220704 14:54:52.275"/>
</kw>
<status status="NOT RUN" starttime="20220704 14:54:52.274" endtime="20220704 14:54:52.275"/>
</branch>
<status status="PASS" starttime="20220704 14:54:51.233" endtime="20220704 14:54:52.275"/>
</if>
<status status="PASS" starttime="20220704 14:54:51.212" endtime="20220704 14:54:52.275"/>
</kw>
<kw name="Wait Until Location Is Atlassian's Login" library="LoginPage">
<doc>Waits for the page redirection when logging in.</doc>
<kw name="Wait Until Location Contains" library="SeleniumLibrary">
<arg>atlassian.com</arg>
<doc>Waits until the current URL contains ``expected``.</doc>
<status status="PASS" starttime="20220704 14:54:52.275" endtime="20220704 14:54:52.325"/>
</kw>
<status status="PASS" starttime="20220704 14:54:52.275" endtime="20220704 14:54:52.325"/>
</kw>
<kw name="Enter Password" library="LoginPage">
<arg>${password}</arg>
<doc>Take a password as argument and
enters it in the password_input</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<arg>timeout=10</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 14:54:52.326" endtime="20220704 14:54:52.421"/>
</kw>
<kw name="Input Password" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<arg>${password}</arg>
<doc>Types the given password into the text field identified by ``locator``.</doc>
<msg timestamp="20220704 14:54:52.422" level="INFO">Typing password into text field 'css:input#password'.</msg>
<msg timestamp="20220704 14:54:52.499" level="INFO">Temporally setting log level to: NONE</msg>
<msg timestamp="20220704 14:54:52.588" level="INFO">Log level changed from NONE to INFO.</msg>
<status status="PASS" starttime="20220704 14:54:52.421" endtime="20220704 14:54:52.588"/>
</kw>
<status status="PASS" starttime="20220704 14:54:52.326" endtime="20220704 14:54:52.589"/>
</kw>
<kw name="Click Login Button" library="LoginPage">
<doc>Clicks Trello's login button if in Trello's
login page, else it clicks Atlassian's</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220704 14:54:52.616" level="INFO">${url} = https://id.atlassian.com/login?application=trello&amp;continue=https%3A%2F%2Ftrello.com%2Fauth%2Fatlassian%2Fcallback%3FreturnUrl%3D%252F%26display%3D%26aaOnboarding%3D%26updateEmail%3D%26traceId%3D62c2ff...</msg>
<status status="PASS" starttime="20220704 14:54:52.589" endtime="20220704 14:54:52.616"/>
</kw>
<if>
<branch type="IF" condition="'${url}' == '${LOGIN_URL}'">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="NOT RUN" starttime="20220704 14:54:52.617" endtime="20220704 14:54:52.617"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<status status="NOT RUN" starttime="20220704 14:54:52.617" endtime="20220704 14:54:52.617"/>
</kw>
<status status="NOT RUN" starttime="20220704 14:54:52.616" endtime="20220704 14:54:52.617"/>
</branch>
<branch type="ELSE">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220704 14:54:52.617" endtime="20220704 14:54:52.686"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220704 14:54:52.687" level="INFO">Clicking button 'css:button#login-submit'.</msg>
<status status="PASS" starttime="20220704 14:54:52.687" endtime="20220704 14:54:52.821"/>
</kw>
<status status="PASS" starttime="20220704 14:54:52.617" endtime="20220704 14:54:52.821"/>
</branch>
<status status="PASS" starttime="20220704 14:54:52.616" endtime="20220704 14:54:52.821"/>
</if>
<status status="PASS" starttime="20220704 14:54:52.589" endtime="20220704 14:54:52.821"/>
</kw>
<status status="PASS" starttime="20220704 14:54:50.367" endtime="20220704 14:54:52.821"/>
</kw>
<kw name="Click New Board Button" library="BoardsPage">
<doc>Clicks the button that creates a new board.</doc>
<kw name="Wait Until Location Contains" library="SeleniumLibrary">
<arg>${BOARDS_PATH}</arg>
<doc>Waits until the current URL contains ``expected``.</doc>
<status status="PASS" starttime="20220704 14:54:52.822" endtime="20220704 14:54:56.299"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Click Element</arg>
<arg>${CREATE_NEW_BOARD_BUTTON}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${CREATE_NEW_BOARD_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 14:54:56.300" level="INFO">Clicking element 'xpath://div[@class="boards-page-board-section mod-no-sidebar"]//div[@class="board-tile mod-add"]'.</msg>
<status status="PASS" starttime="20220704 14:54:56.300" endtime="20220704 14:54:56.496"/>
</kw>
<status status="PASS" starttime="20220704 14:54:56.299" endtime="20220704 14:54:56.496"/>
</kw>
<status status="PASS" starttime="20220704 14:54:52.821" endtime="20220704 14:54:56.496"/>
</kw>
<kw name="Set Name to Board" library="BoardsPage">
<arg>NewName</arg>
<doc>Set the name of the board and press the create button</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${BOARD_NAME_INPUT}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 14:54:56.497" endtime="20220704 14:54:56.917"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${BOARD_NAME_INPUT}</arg>
<arg>${name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220704 14:54:56.918" level="INFO">Typing text 'NewName' into text field 'xpath://div[@title='Create board']/ancestor::section//input[@type="text"]'.</msg>
<status status="PASS" starttime="20220704 14:54:56.918" endtime="20220704 14:54:57.184"/>
</kw>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${CREATE_BUTTON}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220704 14:54:57.184" endtime="20220704 14:54:57.307"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${CREATE_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 14:54:57.308" level="INFO">Clicking element 'xpath://div[@title='Create board']/ancestor::section//button[text()='Create']'.</msg>
<status status="PASS" starttime="20220704 14:54:57.307" endtime="20220704 14:54:57.463"/>
</kw>
<status status="PASS" starttime="20220704 14:54:56.497" endtime="20220704 14:54:57.463"/>
</kw>
<kw name="Verify Name of Board" library="UpperHorizontalMenu">
<arg>NewName</arg>
<doc>Verifies the name of a board</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${NAME_OF_BOARD}</arg>
<arg>10</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 14:54:57.464" endtime="20220704 14:54:58.793"/>
</kw>
<kw name="Element Text Should Be" library="SeleniumLibrary">
<arg>${NAME_OF_BOARD}</arg>
<arg>${name}</arg>
<doc>Verifies that element ``locator`` contains exact the text ``expected``.</doc>
<msg timestamp="20220704 14:54:58.793" level="INFO">Verifying element 'xpath://h1[contains(@class, 'js-board-editing-target')]' contains exact text 'NewName'.</msg>
<status status="PASS" starttime="20220704 14:54:58.793" endtime="20220704 14:54:58.909"/>
</kw>
<status status="PASS" starttime="20220704 14:54:57.464" endtime="20220704 14:54:58.909"/>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Open Show Menu</arg>
<arg>Delete Current Board</arg>
<arg>Close Browser</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Open Show Menu" library="UpperHorizontalMenu">
<doc>Open the Show Menu in the right side of the board page where multiple options are available</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${SHOW_MENU_BUTTON}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 14:54:58.910" endtime="20220704 14:54:58.990"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${SHOW_MENU_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 14:54:58.990" level="INFO">Clicking element 'xpath://div[contains(@class, 'board-header')]//a[contains(., 'Show menu')]'.</msg>
<status status="PASS" starttime="20220704 14:54:58.990" endtime="20220704 14:54:59.217"/>
</kw>
<status status="PASS" starttime="20220704 14:54:58.910" endtime="20220704 14:54:59.217"/>
</kw>
<kw name="Delete Current Board" library="ShownMenu">
<doc>Deletes the current board</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${MORE_BUTTON}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 14:54:59.218" endtime="20220704 14:54:59.293"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${MORE_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 14:54:59.294" level="INFO">Clicking element 'xpath://div[contains(@class, 'board-menu-content')]//a[contains(text(), 'More')]'.</msg>
<status status="PASS" starttime="20220704 14:54:59.294" endtime="20220704 14:54:59.464"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${CLOSE_BOARD_BUTTON}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 14:54:59.465" endtime="20220704 14:54:59.543"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${CLOSE_BOARD_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 14:54:59.544" level="INFO">Clicking element 'xpath://div[@class= 'board-menu-content-frame']//a[contains(text(), 'Close board')]'.</msg>
<status status="PASS" starttime="20220704 14:54:59.544" endtime="20220704 14:54:59.639"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${CLOSE_BUTTON}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 14:54:59.639" endtime="20220704 14:54:59.713"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${CLOSE_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 14:54:59.714" level="INFO">Clicking element 'xpath://div[@class= 'no-back']//input'.</msg>
<status status="PASS" starttime="20220704 14:54:59.713" endtime="20220704 14:54:59.863"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${PERMANENTLY_DELETE_BUTTON}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 14:54:59.863" endtime="20220704 14:55:00.162"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${PERMANENTLY_DELETE_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 14:55:00.163" level="INFO">Clicking element 'xpath://button[text()= 'Permanently delete board']'.</msg>
<status status="PASS" starttime="20220704 14:55:00.163" endtime="20220704 14:55:00.249"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${CONFIRM_DELETE_BUTTON}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 14:55:00.249" endtime="20220704 14:55:00.311"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${CONFIRM_DELETE_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 14:55:00.312" level="INFO">Clicking element 'xpath://section//button[text()= 'Delete']'.</msg>
<status status="PASS" starttime="20220704 14:55:00.311" endtime="20220704 14:55:00.398"/>
</kw>
<status status="PASS" starttime="20220704 14:54:59.217" endtime="20220704 14:55:00.399"/>
</kw>
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20220704 14:55:00.399" endtime="20220704 14:55:00.547"/>
</kw>
<status status="PASS" starttime="20220704 14:54:58.909" endtime="20220704 14:55:00.547"/>
</kw>
<doc>Verify that a board can be created through GUI</doc>
<tag>board.create</tag>
<tag>gui</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220704 14:54:48.094" endtime="20220704 14:55:00.547"/>
</test>
<test id="s1-s6-s1-s1-t2" name="delete a board" line="26">
<kw name="Create A Board" library="Board">
<var>${BOARD}</var>
<arg>NewName</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 14:55:00.550" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 14:55:00.550" endtime="20220704 14:55:00.550"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 14:55:00.551" endtime="20220704 14:55:00.551"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:55:00.552" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220704 14:55:00.551" endtime="20220704 14:55:00.552"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 14:55:00.817" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:55:00.552" endtime="20220704 14:55:00.817"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:55:00.817" endtime="20220704 14:55:00.817"/>
</return>
<msg timestamp="20220704 14:55:00.818" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:55:00.550" endtime="20220704 14:55:00.818"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:55:00.818" endtime="20220704 14:55:00.818"/>
</return>
<msg timestamp="20220704 14:55:00.818" level="INFO">${BOARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:55:00.549" endtime="20220704 14:55:00.818"/>
</kw>
<kw name="Open Browser From Environment" library="CommonGUI">
<arg>${LOGIN_URL}</arg>
<doc>This keywords takes REMOTE and BROWSER variables
from the environment automatically and only needs a url</doc>
<if>
<branch type="IF" condition="${is_remote}">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${url}</arg>
<arg>${BROWSER}</arg>
<arg>remote_url=http://selenium-hub:4444</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20220704 14:55:00.820" level="INFO">Opening browser 'chrome' to base url 'https://trello.com/login' through remote server at 'http://selenium-hub:4444'.</msg>
<status status="PASS" starttime="20220704 14:55:00.819" endtime="20220704 14:55:02.011"/>
</kw>
<status status="PASS" starttime="20220704 14:55:00.819" endtime="20220704 14:55:02.011"/>
</branch>
<branch type="ELSE">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${url}</arg>
<arg>${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<status status="NOT RUN" starttime="20220704 14:55:02.011" endtime="20220704 14:55:02.012"/>
</kw>
<status status="NOT RUN" starttime="20220704 14:55:02.011" endtime="20220704 14:55:02.012"/>
</branch>
<status status="PASS" starttime="20220704 14:55:00.819" endtime="20220704 14:55:02.012"/>
</if>
<status status="PASS" starttime="20220704 14:55:00.818" endtime="20220704 14:55:02.012"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20220704 14:55:02.012" endtime="20220704 14:55:02.150"/>
</kw>
<kw name="Login To Trello" library="LoginPage">
<arg>${DEFAULT_EMAIL}</arg>
<arg>${DEFAULT_PASSWORD}</arg>
<doc>High-level keyword for logging in to Trello</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220704 14:55:02.171" level="INFO">${url} = https://trello.com/login</msg>
<status status="PASS" starttime="20220704 14:55:02.151" endtime="20220704 14:55:02.171"/>
</kw>
<if>
<branch type="IF" condition="'${url}' != '${LOGIN_URL}'">
<kw name="Go To" library="SeleniumLibrary">
<arg>${LOGIN_URL}</arg>
<doc>Navigates the current browser window to the provided ``url``.</doc>
<status status="NOT RUN" starttime="20220704 14:55:02.172" endtime="20220704 14:55:02.172"/>
</kw>
<status status="NOT RUN" starttime="20220704 14:55:02.172" endtime="20220704 14:55:02.172"/>
</branch>
<status status="PASS" starttime="20220704 14:55:02.171" endtime="20220704 14:55:02.172"/>
</if>
<kw name="Enter Username" library="LoginPage">
<arg>${username}</arg>
<doc>Take a username as argument and
enters it in the user_input</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${USER_INPUT}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 14:55:02.173" endtime="20220704 14:55:02.235"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${USER_INPUT}</arg>
<arg>${username}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220704 14:55:02.236" level="INFO">Typing text 'bootcamp04@mailinator.com' into text field 'css:input#user'.</msg>
<status status="PASS" starttime="20220704 14:55:02.235" endtime="20220704 14:55:02.392"/>
</kw>
<status status="PASS" starttime="20220704 14:55:02.172" endtime="20220704 14:55:02.392"/>
</kw>
<kw name="Wait Until Element Is Not Visible" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<doc>Waits until the element ``locator`` is not visible.</doc>
<status status="PASS" starttime="20220704 14:55:02.392" endtime="20220704 14:55:02.957"/>
</kw>
<kw name="Click Login Button" library="LoginPage">
<doc>Clicks Trello's login button if in Trello's
login page, else it clicks Atlassian's</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220704 14:55:02.973" level="INFO">${url} = https://trello.com/login</msg>
<status status="PASS" starttime="20220704 14:55:02.957" endtime="20220704 14:55:02.973"/>
</kw>
<if>
<branch type="IF" condition="'${url}' == '${LOGIN_URL}'">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220704 14:55:02.974" endtime="20220704 14:55:03.041"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220704 14:55:03.041" level="INFO">Clicking button 'css:input#login'.</msg>
<status status="PASS" starttime="20220704 14:55:03.041" endtime="20220704 14:55:03.995"/>
</kw>
<status status="PASS" starttime="20220704 14:55:02.974" endtime="20220704 14:55:03.995"/>
</branch>
<branch type="ELSE">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="NOT RUN" starttime="20220704 14:55:03.996" endtime="20220704 14:55:03.996"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<status status="NOT RUN" starttime="20220704 14:55:03.996" endtime="20220704 14:55:03.996"/>
</kw>
<status status="NOT RUN" starttime="20220704 14:55:03.996" endtime="20220704 14:55:03.996"/>
</branch>
<status status="PASS" starttime="20220704 14:55:02.973" endtime="20220704 14:55:03.996"/>
</if>
<status status="PASS" starttime="20220704 14:55:02.957" endtime="20220704 14:55:03.996"/>
</kw>
<kw name="Wait Until Location Is Atlassian's Login" library="LoginPage">
<doc>Waits for the page redirection when logging in.</doc>
<kw name="Wait Until Location Contains" library="SeleniumLibrary">
<arg>atlassian.com</arg>
<doc>Waits until the current URL contains ``expected``.</doc>
<status status="PASS" starttime="20220704 14:55:03.997" endtime="20220704 14:55:04.030"/>
</kw>
<status status="PASS" starttime="20220704 14:55:03.996" endtime="20220704 14:55:04.031"/>
</kw>
<kw name="Enter Password" library="LoginPage">
<arg>${password}</arg>
<doc>Take a password as argument and
enters it in the password_input</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<arg>timeout=10</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 14:55:04.031" endtime="20220704 14:55:04.121"/>
</kw>
<kw name="Input Password" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<arg>${password}</arg>
<doc>Types the given password into the text field identified by ``locator``.</doc>
<msg timestamp="20220704 14:55:04.122" level="INFO">Typing password into text field 'css:input#password'.</msg>
<msg timestamp="20220704 14:55:04.192" level="INFO">Temporally setting log level to: NONE</msg>
<msg timestamp="20220704 14:55:04.278" level="INFO">Log level changed from NONE to INFO.</msg>
<status status="PASS" starttime="20220704 14:55:04.121" endtime="20220704 14:55:04.278"/>
</kw>
<status status="PASS" starttime="20220704 14:55:04.031" endtime="20220704 14:55:04.279"/>
</kw>
<kw name="Click Login Button" library="LoginPage">
<doc>Clicks Trello's login button if in Trello's
login page, else it clicks Atlassian's</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220704 14:55:04.296" level="INFO">${url} = https://id.atlassian.com/login?application=trello&amp;continue=https%3A%2F%2Ftrello.com%2Fauth%2Fatlassian%2Fcallback%3FreturnUrl%3D%252F%26display%3D%26aaOnboarding%3D%26updateEmail%3D%26traceId%3D62c2ff...</msg>
<status status="PASS" starttime="20220704 14:55:04.279" endtime="20220704 14:55:04.296"/>
</kw>
<if>
<branch type="IF" condition="'${url}' == '${LOGIN_URL}'">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="NOT RUN" starttime="20220704 14:55:04.296" endtime="20220704 14:55:04.297"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<status status="NOT RUN" starttime="20220704 14:55:04.297" endtime="20220704 14:55:04.297"/>
</kw>
<status status="NOT RUN" starttime="20220704 14:55:04.296" endtime="20220704 14:55:04.297"/>
</branch>
<branch type="ELSE">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220704 14:55:04.297" endtime="20220704 14:55:04.374"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220704 14:55:04.375" level="INFO">Clicking button 'css:button#login-submit'.</msg>
<status status="PASS" starttime="20220704 14:55:04.375" endtime="20220704 14:55:04.507"/>
</kw>
<status status="PASS" starttime="20220704 14:55:04.297" endtime="20220704 14:55:04.507"/>
</branch>
<status status="PASS" starttime="20220704 14:55:04.296" endtime="20220704 14:55:04.507"/>
</if>
<status status="PASS" starttime="20220704 14:55:04.279" endtime="20220704 14:55:04.508"/>
</kw>
<status status="PASS" starttime="20220704 14:55:02.151" endtime="20220704 14:55:04.508"/>
</kw>
<kw name="Go To Board" library="BoardsPage">
<arg>NewName</arg>
<doc>Receives the board name and goes to that board's page.</doc>
<kw name="Format String" library="String">
<var>${locator}</var>
<arg>${BOARD_BUTTON}</arg>
<arg>${board_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:55:04.509" level="INFO">${locator} = //div[@title="NewName"]</msg>
<status status="PASS" starttime="20220704 14:55:04.509" endtime="20220704 14:55:04.509"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 14:55:04.509" endtime="20220704 14:55:08.070"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 14:55:08.071" level="INFO">Clicking element '//div[@title="NewName"]'.</msg>
<status status="PASS" starttime="20220704 14:55:08.070" endtime="20220704 14:55:08.454"/>
</kw>
<status status="PASS" starttime="20220704 14:55:04.508" endtime="20220704 14:55:08.454"/>
</kw>
<kw name="Verify Name of Board" library="UpperHorizontalMenu">
<arg>NewName</arg>
<doc>Verifies the name of a board</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${NAME_OF_BOARD}</arg>
<arg>10</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 14:55:08.455" endtime="20220704 14:55:09.206"/>
</kw>
<kw name="Element Text Should Be" library="SeleniumLibrary">
<arg>${NAME_OF_BOARD}</arg>
<arg>${name}</arg>
<doc>Verifies that element ``locator`` contains exact the text ``expected``.</doc>
<msg timestamp="20220704 14:55:09.207" level="INFO">Verifying element 'xpath://h1[contains(@class, 'js-board-editing-target')]' contains exact text 'NewName'.</msg>
<status status="PASS" starttime="20220704 14:55:09.207" endtime="20220704 14:55:09.287"/>
</kw>
<status status="PASS" starttime="20220704 14:55:08.455" endtime="20220704 14:55:09.287"/>
</kw>
<kw name="Open Show Menu" library="UpperHorizontalMenu">
<doc>Open the Show Menu in the right side of the board page where multiple options are available</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${SHOW_MENU_BUTTON}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 14:55:09.288" endtime="20220704 14:55:09.610"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${SHOW_MENU_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 14:55:09.610" level="INFO">Clicking element 'xpath://div[contains(@class, 'board-header')]//a[contains(., 'Show menu')]'.</msg>
<status status="PASS" starttime="20220704 14:55:09.610" endtime="20220704 14:55:09.791"/>
</kw>
<status status="PASS" starttime="20220704 14:55:09.288" endtime="20220704 14:55:09.791"/>
</kw>
<kw name="Delete Current Board" library="ShownMenu">
<doc>Deletes the current board</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${MORE_BUTTON}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 14:55:09.792" endtime="20220704 14:55:09.969"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${MORE_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 14:55:09.970" level="INFO">Clicking element 'xpath://div[contains(@class, 'board-menu-content')]//a[contains(text(), 'More')]'.</msg>
<status status="PASS" starttime="20220704 14:55:09.970" endtime="20220704 14:55:10.318"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${CLOSE_BOARD_BUTTON}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 14:55:10.319" endtime="20220704 14:55:10.611"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${CLOSE_BOARD_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 14:55:10.612" level="INFO">Clicking element 'xpath://div[@class= 'board-menu-content-frame']//a[contains(text(), 'Close board')]'.</msg>
<status status="PASS" starttime="20220704 14:55:10.612" endtime="20220704 14:55:10.687"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${CLOSE_BUTTON}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 14:55:10.687" endtime="20220704 14:55:10.755"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${CLOSE_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 14:55:10.756" level="INFO">Clicking element 'xpath://div[@class= 'no-back']//input'.</msg>
<status status="PASS" starttime="20220704 14:55:10.755" endtime="20220704 14:55:10.904"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${PERMANENTLY_DELETE_BUTTON}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 14:55:10.904" endtime="20220704 14:55:11.218"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${PERMANENTLY_DELETE_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 14:55:11.219" level="INFO">Clicking element 'xpath://button[text()= 'Permanently delete board']'.</msg>
<status status="PASS" starttime="20220704 14:55:11.218" endtime="20220704 14:55:11.309"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${CONFIRM_DELETE_BUTTON}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 14:55:11.310" endtime="20220704 14:55:11.369"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${CONFIRM_DELETE_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 14:55:11.370" level="INFO">Clicking element 'xpath://section//button[text()= 'Delete']'.</msg>
<status status="PASS" starttime="20220704 14:55:11.370" endtime="20220704 14:55:11.439"/>
</kw>
<status status="PASS" starttime="20220704 14:55:09.791" endtime="20220704 14:55:11.439"/>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Close Browser</arg>
<arg>AND</arg>
<arg>Run Keyword If Test Failed</arg>
<arg>Wait Until Keyword Succeeds</arg>
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20220704 14:55:11.440" endtime="20220704 14:55:11.560"/>
</kw>
<kw name="Run Keyword If Test Failed" library="BuiltIn">
<arg>Wait Until Keyword Succeeds</arg>
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Runs the given keyword with the given arguments, if the test failed.</doc>
<status status="PASS" starttime="20220704 14:55:11.560" endtime="20220704 14:55:11.560"/>
</kw>
<status status="PASS" starttime="20220704 14:55:11.439" endtime="20220704 14:55:11.561"/>
</kw>
<doc>Verify that a board can be deleted through GUI</doc>
<tag>board.delete</tag>
<tag>gui</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220704 14:55:00.548" endtime="20220704 14:55:11.561"/>
</test>
<test id="s1-s6-s1-s1-t3" name="Update a board's description" line="41">
<kw name="Create A Board" library="Board">
<var>${BOARD}</var>
<arg>BoardNew</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 14:55:11.564" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 14:55:11.564" endtime="20220704 14:55:11.564"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 14:55:11.564" endtime="20220704 14:55:11.565"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:55:11.568" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220704 14:55:11.565" endtime="20220704 14:55:11.568"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 14:55:11.733" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:55:11.568" endtime="20220704 14:55:11.733"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:55:11.733" endtime="20220704 14:55:11.733"/>
</return>
<msg timestamp="20220704 14:55:11.734" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:55:11.563" endtime="20220704 14:55:11.734"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:55:11.734" endtime="20220704 14:55:11.734"/>
</return>
<msg timestamp="20220704 14:55:11.734" level="INFO">${BOARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:55:11.563" endtime="20220704 14:55:11.734"/>
</kw>
<kw name="Open Browser From Environment" library="CommonGUI">
<arg>${LOGIN_URL}</arg>
<doc>This keywords takes REMOTE and BROWSER variables
from the environment automatically and only needs a url</doc>
<if>
<branch type="IF" condition="${is_remote}">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${url}</arg>
<arg>${BROWSER}</arg>
<arg>remote_url=http://selenium-hub:4444</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20220704 14:55:11.736" level="INFO">Opening browser 'chrome' to base url 'https://trello.com/login' through remote server at 'http://selenium-hub:4444'.</msg>
<status status="PASS" starttime="20220704 14:55:11.735" endtime="20220704 14:55:13.012"/>
</kw>
<status status="PASS" starttime="20220704 14:55:11.735" endtime="20220704 14:55:13.012"/>
</branch>
<branch type="ELSE">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${url}</arg>
<arg>${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<status status="NOT RUN" starttime="20220704 14:55:13.012" endtime="20220704 14:55:13.012"/>
</kw>
<status status="NOT RUN" starttime="20220704 14:55:13.012" endtime="20220704 14:55:13.012"/>
</branch>
<status status="PASS" starttime="20220704 14:55:11.735" endtime="20220704 14:55:13.012"/>
</if>
<status status="PASS" starttime="20220704 14:55:11.734" endtime="20220704 14:55:13.012"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20220704 14:55:13.013" endtime="20220704 14:55:13.132"/>
</kw>
<kw name="Login To Trello" library="LoginPage">
<arg>${DEFAULT_EMAIL}</arg>
<arg>${DEFAULT_PASSWORD}</arg>
<doc>High-level keyword for logging in to Trello</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220704 14:55:13.152" level="INFO">${url} = https://trello.com/login</msg>
<status status="PASS" starttime="20220704 14:55:13.133" endtime="20220704 14:55:13.152"/>
</kw>
<if>
<branch type="IF" condition="'${url}' != '${LOGIN_URL}'">
<kw name="Go To" library="SeleniumLibrary">
<arg>${LOGIN_URL}</arg>
<doc>Navigates the current browser window to the provided ``url``.</doc>
<status status="NOT RUN" starttime="20220704 14:55:13.152" endtime="20220704 14:55:13.152"/>
</kw>
<status status="NOT RUN" starttime="20220704 14:55:13.152" endtime="20220704 14:55:13.152"/>
</branch>
<status status="PASS" starttime="20220704 14:55:13.152" endtime="20220704 14:55:13.152"/>
</if>
<kw name="Enter Username" library="LoginPage">
<arg>${username}</arg>
<doc>Take a username as argument and
enters it in the user_input</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${USER_INPUT}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 14:55:13.153" endtime="20220704 14:55:13.223"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${USER_INPUT}</arg>
<arg>${username}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220704 14:55:13.223" level="INFO">Typing text 'bootcamp04@mailinator.com' into text field 'css:input#user'.</msg>
<status status="PASS" starttime="20220704 14:55:13.223" endtime="20220704 14:55:13.387"/>
</kw>
<status status="PASS" starttime="20220704 14:55:13.153" endtime="20220704 14:55:13.387"/>
</kw>
<kw name="Wait Until Element Is Not Visible" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<doc>Waits until the element ``locator`` is not visible.</doc>
<status status="PASS" starttime="20220704 14:55:13.388" endtime="20220704 14:55:14.177"/>
</kw>
<kw name="Click Login Button" library="LoginPage">
<doc>Clicks Trello's login button if in Trello's
login page, else it clicks Atlassian's</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220704 14:55:14.193" level="INFO">${url} = https://trello.com/login</msg>
<status status="PASS" starttime="20220704 14:55:14.178" endtime="20220704 14:55:14.193"/>
</kw>
<if>
<branch type="IF" condition="'${url}' == '${LOGIN_URL}'">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220704 14:55:14.193" endtime="20220704 14:55:14.256"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220704 14:55:14.257" level="INFO">Clicking button 'css:input#login'.</msg>
<status status="PASS" starttime="20220704 14:55:14.256" endtime="20220704 14:55:15.173"/>
</kw>
<status status="PASS" starttime="20220704 14:55:14.193" endtime="20220704 14:55:15.173"/>
</branch>
<branch type="ELSE">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="NOT RUN" starttime="20220704 14:55:15.174" endtime="20220704 14:55:15.174"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<status status="NOT RUN" starttime="20220704 14:55:15.174" endtime="20220704 14:55:15.174"/>
</kw>
<status status="NOT RUN" starttime="20220704 14:55:15.173" endtime="20220704 14:55:15.174"/>
</branch>
<status status="PASS" starttime="20220704 14:55:14.193" endtime="20220704 14:55:15.174"/>
</if>
<status status="PASS" starttime="20220704 14:55:14.178" endtime="20220704 14:55:15.174"/>
</kw>
<kw name="Wait Until Location Is Atlassian's Login" library="LoginPage">
<doc>Waits for the page redirection when logging in.</doc>
<kw name="Wait Until Location Contains" library="SeleniumLibrary">
<arg>atlassian.com</arg>
<doc>Waits until the current URL contains ``expected``.</doc>
<status status="PASS" starttime="20220704 14:55:15.175" endtime="20220704 14:55:15.216"/>
</kw>
<status status="PASS" starttime="20220704 14:55:15.175" endtime="20220704 14:55:15.216"/>
</kw>
<kw name="Enter Password" library="LoginPage">
<arg>${password}</arg>
<doc>Take a password as argument and
enters it in the password_input</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<arg>timeout=10</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 14:55:15.217" endtime="20220704 14:55:15.292"/>
</kw>
<kw name="Input Password" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<arg>${password}</arg>
<doc>Types the given password into the text field identified by ``locator``.</doc>
<msg timestamp="20220704 14:55:15.293" level="INFO">Typing password into text field 'css:input#password'.</msg>
<msg timestamp="20220704 14:55:15.390" level="INFO">Temporally setting log level to: NONE</msg>
<msg timestamp="20220704 14:55:15.482" level="INFO">Log level changed from NONE to INFO.</msg>
<status status="PASS" starttime="20220704 14:55:15.292" endtime="20220704 14:55:15.482"/>
</kw>
<status status="PASS" starttime="20220704 14:55:15.216" endtime="20220704 14:55:15.482"/>
</kw>
<kw name="Click Login Button" library="LoginPage">
<doc>Clicks Trello's login button if in Trello's
login page, else it clicks Atlassian's</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220704 14:55:15.503" level="INFO">${url} = https://id.atlassian.com/login?application=trello&amp;continue=https%3A%2F%2Ftrello.com%2Fauth%2Fatlassian%2Fcallback%3FreturnUrl%3D%252F%26display%3D%26aaOnboarding%3D%26updateEmail%3D%26traceId%3D62c2ff...</msg>
<status status="PASS" starttime="20220704 14:55:15.483" endtime="20220704 14:55:15.503"/>
</kw>
<if>
<branch type="IF" condition="'${url}' == '${LOGIN_URL}'">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="NOT RUN" starttime="20220704 14:55:15.503" endtime="20220704 14:55:15.504"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<status status="NOT RUN" starttime="20220704 14:55:15.504" endtime="20220704 14:55:15.504"/>
</kw>
<status status="NOT RUN" starttime="20220704 14:55:15.503" endtime="20220704 14:55:15.504"/>
</branch>
<branch type="ELSE">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220704 14:55:15.504" endtime="20220704 14:55:15.569"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220704 14:55:15.570" level="INFO">Clicking button 'css:button#login-submit'.</msg>
<status status="PASS" starttime="20220704 14:55:15.570" endtime="20220704 14:55:15.710"/>
</kw>
<status status="PASS" starttime="20220704 14:55:15.504" endtime="20220704 14:55:15.710"/>
</branch>
<status status="PASS" starttime="20220704 14:55:15.503" endtime="20220704 14:55:15.710"/>
</if>
<status status="PASS" starttime="20220704 14:55:15.482" endtime="20220704 14:55:15.710"/>
</kw>
<status status="PASS" starttime="20220704 14:55:13.132" endtime="20220704 14:55:15.710"/>
</kw>
<kw name="Go To Board" library="BoardsPage">
<arg>BoardNew</arg>
<doc>Receives the board name and goes to that board's page.</doc>
<kw name="Format String" library="String">
<var>${locator}</var>
<arg>${BOARD_BUTTON}</arg>
<arg>${board_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:55:15.711" level="INFO">${locator} = //div[@title="BoardNew"]</msg>
<status status="PASS" starttime="20220704 14:55:15.711" endtime="20220704 14:55:15.711"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 14:55:15.711" endtime="20220704 14:55:19.038"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 14:55:19.039" level="INFO">Clicking element '//div[@title="BoardNew"]'.</msg>
<status status="PASS" starttime="20220704 14:55:19.038" endtime="20220704 14:55:19.416"/>
</kw>
<status status="PASS" starttime="20220704 14:55:15.710" endtime="20220704 14:55:19.416"/>
</kw>
<kw name="Verify Name of Board" library="UpperHorizontalMenu">
<arg>BoardNew</arg>
<doc>Verifies the name of a board</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${NAME_OF_BOARD}</arg>
<arg>10</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 14:55:19.417" endtime="20220704 14:55:19.991"/>
</kw>
<kw name="Element Text Should Be" library="SeleniumLibrary">
<arg>${NAME_OF_BOARD}</arg>
<arg>${name}</arg>
<doc>Verifies that element ``locator`` contains exact the text ``expected``.</doc>
<msg timestamp="20220704 14:55:19.992" level="INFO">Verifying element 'xpath://h1[contains(@class, 'js-board-editing-target')]' contains exact text 'BoardNew'.</msg>
<status status="PASS" starttime="20220704 14:55:19.991" endtime="20220704 14:55:20.102"/>
</kw>
<status status="PASS" starttime="20220704 14:55:19.417" endtime="20220704 14:55:20.102"/>
</kw>
<kw name="Open Show Menu" library="UpperHorizontalMenu">
<doc>Open the Show Menu in the right side of the board page where multiple options are available</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${SHOW_MENU_BUTTON}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 14:55:20.103" endtime="20220704 14:55:20.160"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${SHOW_MENU_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 14:55:20.161" level="INFO">Clicking element 'xpath://div[contains(@class, 'board-header')]//a[contains(., 'Show menu')]'.</msg>
<status status="PASS" starttime="20220704 14:55:20.160" endtime="20220704 14:55:20.243"/>
</kw>
<status status="PASS" starttime="20220704 14:55:20.103" endtime="20220704 14:55:20.244"/>
</kw>
<kw name="Update Description of Board" library="ShownMenu">
<arg>UpdatedDescription</arg>
<doc>Updates the description of a board</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ABOUT_THIS_BOARD}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 14:55:20.244" endtime="20220704 14:55:20.380"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${ABOUT_THIS_BOARD}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 14:55:20.381" level="INFO">Clicking element 'xpath://div[contains(@class, 'board-menu-content')]//a[contains(text(), 'About')]'.</msg>
<status status="PASS" starttime="20220704 14:55:20.380" endtime="20220704 14:55:20.561"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DESCRIPTION}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 14:55:20.562" endtime="20220704 14:55:20.626"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${DESCRIPTION}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 14:55:20.627" level="INFO">Clicking element 'xpath://a[contains(@class, 'description-fake-text-area')]'.</msg>
<status status="PASS" starttime="20220704 14:55:20.626" endtime="20220704 14:55:20.748"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${DESC_TEXT_AREA}</arg>
<arg>${desc}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220704 14:55:20.749" level="INFO">Typing text 'UpdatedDescription' into text field 'xpath://div[contains(@class, 'board-menu-content')]//textarea'.</msg>
<status status="PASS" starttime="20220704 14:55:20.749" endtime="20220704 14:55:20.968"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${SAVE_DESC_BUTTON}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 14:55:20.969" endtime="20220704 14:55:21.015"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${SAVE_DESC_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 14:55:21.015" level="INFO">Clicking element 'xpath://div[contains(@class, 'board-menu-content')]//input[@value="Save"]'.</msg>
<status status="PASS" starttime="20220704 14:55:21.015" endtime="20220704 14:55:21.151"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${GO_BACK_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 14:55:21.152" level="INFO">Clicking element 'xpath://a[@title="Go back."]'.</msg>
<status status="PASS" starttime="20220704 14:55:21.151" endtime="20220704 14:55:21.260"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${CLOSE_SHOW_MENU}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 14:55:21.261" level="INFO">Clicking element 'xpath://a[@title="Close the board menu."]'.</msg>
<status status="PASS" starttime="20220704 14:55:21.260" endtime="20220704 14:55:21.374"/>
</kw>
<status status="PASS" starttime="20220704 14:55:20.244" endtime="20220704 14:55:21.374"/>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Close Browser</arg>
<arg>AND</arg>
<arg>Wait Until Keyword Succeeds</arg>
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20220704 14:55:21.375" endtime="20220704 14:55:21.483"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${BOARD.json()}[id]</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:55:21.486" level="INFO">${url} = boards/62c2ff4fd074f571bf0a9c54</msg>
<status status="PASS" starttime="20220704 14:55:21.486" endtime="20220704 14:55:21.486"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 14:55:21.845" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:55:21.486" endtime="20220704 14:55:21.845"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:55:21.846" endtime="20220704 14:55:21.846"/>
</return>
<msg timestamp="20220704 14:55:21.846" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:55:21.485" endtime="20220704 14:55:21.846"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:55:21.846" endtime="20220704 14:55:21.846"/>
</return>
<status status="PASS" starttime="20220704 14:55:21.483" endtime="20220704 14:55:21.846"/>
</kw>
<status status="PASS" starttime="20220704 14:55:21.483" endtime="20220704 14:55:21.846"/>
</kw>
<status status="PASS" starttime="20220704 14:55:21.375" endtime="20220704 14:55:21.846"/>
</kw>
<doc>Verify that a board's description can be updated through GUI</doc>
<tag>board.update.description</tag>
<tag>gui</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220704 14:55:11.562" endtime="20220704 14:55:21.846"/>
</test>
<test id="s1-s6-s1-s1-t4" name="Update a board's name" line="56">
<kw name="Create A Board" library="Board">
<var>${BOARD}</var>
<arg>NewBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 14:55:21.849" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 14:55:21.849" endtime="20220704 14:55:21.849"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 14:55:21.849" endtime="20220704 14:55:21.850"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:55:21.851" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220704 14:55:21.850" endtime="20220704 14:55:21.851"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 14:55:22.024" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:55:21.851" endtime="20220704 14:55:22.024"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:55:22.024" endtime="20220704 14:55:22.024"/>
</return>
<msg timestamp="20220704 14:55:22.025" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:55:21.848" endtime="20220704 14:55:22.025"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:55:22.025" endtime="20220704 14:55:22.025"/>
</return>
<msg timestamp="20220704 14:55:22.025" level="INFO">${BOARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:55:21.848" endtime="20220704 14:55:22.025"/>
</kw>
<kw name="Open Browser From Environment" library="CommonGUI">
<arg>${LOGIN_URL}</arg>
<doc>This keywords takes REMOTE and BROWSER variables
from the environment automatically and only needs a url</doc>
<if>
<branch type="IF" condition="${is_remote}">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${url}</arg>
<arg>${BROWSER}</arg>
<arg>remote_url=http://selenium-hub:4444</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20220704 14:55:22.027" level="INFO">Opening browser 'chrome' to base url 'https://trello.com/login' through remote server at 'http://selenium-hub:4444'.</msg>
<status status="PASS" starttime="20220704 14:55:22.026" endtime="20220704 14:55:23.243"/>
</kw>
<status status="PASS" starttime="20220704 14:55:22.026" endtime="20220704 14:55:23.243"/>
</branch>
<branch type="ELSE">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${url}</arg>
<arg>${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<status status="NOT RUN" starttime="20220704 14:55:23.244" endtime="20220704 14:55:23.244"/>
</kw>
<status status="NOT RUN" starttime="20220704 14:55:23.243" endtime="20220704 14:55:23.244"/>
</branch>
<status status="PASS" starttime="20220704 14:55:22.026" endtime="20220704 14:55:23.244"/>
</if>
<status status="PASS" starttime="20220704 14:55:22.025" endtime="20220704 14:55:23.244"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20220704 14:55:23.244" endtime="20220704 14:55:23.372"/>
</kw>
<kw name="Login To Trello" library="LoginPage">
<arg>${DEFAULT_EMAIL}</arg>
<arg>${DEFAULT_PASSWORD}</arg>
<doc>High-level keyword for logging in to Trello</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220704 14:55:23.388" level="INFO">${url} = https://trello.com/login</msg>
<status status="PASS" starttime="20220704 14:55:23.373" endtime="20220704 14:55:23.388"/>
</kw>
<if>
<branch type="IF" condition="'${url}' != '${LOGIN_URL}'">
<kw name="Go To" library="SeleniumLibrary">
<arg>${LOGIN_URL}</arg>
<doc>Navigates the current browser window to the provided ``url``.</doc>
<status status="NOT RUN" starttime="20220704 14:55:23.389" endtime="20220704 14:55:23.389"/>
</kw>
<status status="NOT RUN" starttime="20220704 14:55:23.388" endtime="20220704 14:55:23.389"/>
</branch>
<status status="PASS" starttime="20220704 14:55:23.388" endtime="20220704 14:55:23.389"/>
</if>
<kw name="Enter Username" library="LoginPage">
<arg>${username}</arg>
<doc>Take a username as argument and
enters it in the user_input</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${USER_INPUT}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 14:55:23.389" endtime="20220704 14:55:23.457"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${USER_INPUT}</arg>
<arg>${username}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220704 14:55:23.458" level="INFO">Typing text 'bootcamp04@mailinator.com' into text field 'css:input#user'.</msg>
<status status="PASS" starttime="20220704 14:55:23.458" endtime="20220704 14:55:23.571"/>
</kw>
<status status="PASS" starttime="20220704 14:55:23.389" endtime="20220704 14:55:23.571"/>
</kw>
<kw name="Wait Until Element Is Not Visible" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<doc>Waits until the element ``locator`` is not visible.</doc>
<status status="PASS" starttime="20220704 14:55:23.571" endtime="20220704 14:55:24.350"/>
</kw>
<kw name="Click Login Button" library="LoginPage">
<doc>Clicks Trello's login button if in Trello's
login page, else it clicks Atlassian's</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220704 14:55:24.365" level="INFO">${url} = https://trello.com/login</msg>
<status status="PASS" starttime="20220704 14:55:24.351" endtime="20220704 14:55:24.365"/>
</kw>
<if>
<branch type="IF" condition="'${url}' == '${LOGIN_URL}'">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220704 14:55:24.365" endtime="20220704 14:55:24.424"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220704 14:55:24.425" level="INFO">Clicking button 'css:input#login'.</msg>
<status status="PASS" starttime="20220704 14:55:24.425" endtime="20220704 14:55:25.244"/>
</kw>
<status status="PASS" starttime="20220704 14:55:24.365" endtime="20220704 14:55:25.244"/>
</branch>
<branch type="ELSE">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="NOT RUN" starttime="20220704 14:55:25.245" endtime="20220704 14:55:25.245"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<status status="NOT RUN" starttime="20220704 14:55:25.245" endtime="20220704 14:55:25.245"/>
</kw>
<status status="NOT RUN" starttime="20220704 14:55:25.244" endtime="20220704 14:55:25.245"/>
</branch>
<status status="PASS" starttime="20220704 14:55:24.365" endtime="20220704 14:55:25.245"/>
</if>
<status status="PASS" starttime="20220704 14:55:24.350" endtime="20220704 14:55:25.245"/>
</kw>
<kw name="Wait Until Location Is Atlassian's Login" library="LoginPage">
<doc>Waits for the page redirection when logging in.</doc>
<kw name="Wait Until Location Contains" library="SeleniumLibrary">
<arg>atlassian.com</arg>
<doc>Waits until the current URL contains ``expected``.</doc>
<status status="PASS" starttime="20220704 14:55:25.246" endtime="20220704 14:55:25.270"/>
</kw>
<status status="PASS" starttime="20220704 14:55:25.245" endtime="20220704 14:55:25.270"/>
</kw>
<kw name="Enter Password" library="LoginPage">
<arg>${password}</arg>
<doc>Take a password as argument and
enters it in the password_input</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<arg>timeout=10</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 14:55:25.271" endtime="20220704 14:55:25.566"/>
</kw>
<kw name="Input Password" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<arg>${password}</arg>
<doc>Types the given password into the text field identified by ``locator``.</doc>
<msg timestamp="20220704 14:55:25.567" level="INFO">Typing password into text field 'css:input#password'.</msg>
<msg timestamp="20220704 14:55:25.619" level="INFO">Temporally setting log level to: NONE</msg>
<msg timestamp="20220704 14:55:25.686" level="INFO">Log level changed from NONE to INFO.</msg>
<status status="PASS" starttime="20220704 14:55:25.566" endtime="20220704 14:55:25.686"/>
</kw>
<status status="PASS" starttime="20220704 14:55:25.270" endtime="20220704 14:55:25.686"/>
</kw>
<kw name="Click Login Button" library="LoginPage">
<doc>Clicks Trello's login button if in Trello's
login page, else it clicks Atlassian's</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220704 14:55:25.699" level="INFO">${url} = https://id.atlassian.com/login?application=trello&amp;continue=https%3A%2F%2Ftrello.com%2Fauth%2Fatlassian%2Fcallback%3FreturnUrl%3D%252F%26display%3D%26aaOnboarding%3D%26updateEmail%3D%26traceId%3D62c2ff...</msg>
<status status="PASS" starttime="20220704 14:55:25.687" endtime="20220704 14:55:25.699"/>
</kw>
<if>
<branch type="IF" condition="'${url}' == '${LOGIN_URL}'">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="NOT RUN" starttime="20220704 14:55:25.700" endtime="20220704 14:55:25.700"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<status status="NOT RUN" starttime="20220704 14:55:25.700" endtime="20220704 14:55:25.700"/>
</kw>
<status status="NOT RUN" starttime="20220704 14:55:25.700" endtime="20220704 14:55:25.700"/>
</branch>
<branch type="ELSE">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220704 14:55:25.700" endtime="20220704 14:55:25.783"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220704 14:55:25.783" level="INFO">Clicking button 'css:button#login-submit'.</msg>
<status status="PASS" starttime="20220704 14:55:25.783" endtime="20220704 14:55:25.911"/>
</kw>
<status status="PASS" starttime="20220704 14:55:25.700" endtime="20220704 14:55:25.912"/>
</branch>
<status status="PASS" starttime="20220704 14:55:25.699" endtime="20220704 14:55:25.912"/>
</if>
<status status="PASS" starttime="20220704 14:55:25.687" endtime="20220704 14:55:25.912"/>
</kw>
<status status="PASS" starttime="20220704 14:55:23.373" endtime="20220704 14:55:25.912"/>
</kw>
<kw name="Go To Board" library="BoardsPage">
<arg>NewBoard</arg>
<doc>Receives the board name and goes to that board's page.</doc>
<kw name="Format String" library="String">
<var>${locator}</var>
<arg>${BOARD_BUTTON}</arg>
<arg>${board_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:55:25.913" level="INFO">${locator} = //div[@title="NewBoard"]</msg>
<status status="PASS" starttime="20220704 14:55:25.913" endtime="20220704 14:55:25.913"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 14:55:25.913" endtime="20220704 14:55:29.084"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 14:55:29.085" level="INFO">Clicking element '//div[@title="NewBoard"]'.</msg>
<status status="PASS" starttime="20220704 14:55:29.084" endtime="20220704 14:55:29.464"/>
</kw>
<status status="PASS" starttime="20220704 14:55:25.912" endtime="20220704 14:55:29.464"/>
</kw>
<kw name="Verify Name of Board" library="UpperHorizontalMenu">
<arg>NewBoard</arg>
<doc>Verifies the name of a board</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${NAME_OF_BOARD}</arg>
<arg>10</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 14:55:29.465" endtime="20220704 14:55:30.005"/>
</kw>
<kw name="Element Text Should Be" library="SeleniumLibrary">
<arg>${NAME_OF_BOARD}</arg>
<arg>${name}</arg>
<doc>Verifies that element ``locator`` contains exact the text ``expected``.</doc>
<msg timestamp="20220704 14:55:30.006" level="INFO">Verifying element 'xpath://h1[contains(@class, 'js-board-editing-target')]' contains exact text 'NewBoard'.</msg>
<status status="PASS" starttime="20220704 14:55:30.005" endtime="20220704 14:55:30.071"/>
</kw>
<status status="PASS" starttime="20220704 14:55:29.465" endtime="20220704 14:55:30.071"/>
</kw>
<kw name="Update Name of Board" library="UpperHorizontalMenu">
<arg>UpdatedName</arg>
<doc>Updates the name of a board
it takes the Length of the boards's name in order to press the delete key
as many times as the name's length</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${NAME_OF_BOARD}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 14:55:30.072" endtime="20220704 14:55:30.124"/>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<var>${response}</var>
<arg>${NAME_OF_BOARD}</arg>
<doc>Returns the text value of the element identified by ``locator``.</doc>
<msg timestamp="20220704 14:55:30.198" level="INFO">${response} = NewBoard</msg>
<status status="PASS" starttime="20220704 14:55:30.125" endtime="20220704 14:55:30.198"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${names_lenght}</var>
<arg>${response}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20220704 14:55:30.198" level="INFO">Length is 8</msg>
<msg timestamp="20220704 14:55:30.198" level="INFO">${names_lenght} = 8</msg>
<status status="PASS" starttime="20220704 14:55:30.198" endtime="20220704 14:55:30.198"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${NAME_OF_BOARD}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 14:55:30.199" level="INFO">Clicking element 'xpath://h1[contains(@class, 'js-board-editing-target')]'.</msg>
<status status="PASS" starttime="20220704 14:55:30.199" endtime="20220704 14:55:30.324"/>
</kw>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>${NAME_OF_BOARD_INPUT}</arg>
<arg>\ue011</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20220704 14:55:30.325" level="INFO">Sending key(s) ('\ue011',) to xpath://input[contains(@class, 'board-name-input')] element.</msg>
<msg timestamp="20220704 14:55:30.659" level="INFO">Sending key </msg>
<status status="PASS" starttime="20220704 14:55:30.324" endtime="20220704 14:55:30.676"/>
</kw>
<kw name="Repeat Keyword" library="BuiltIn">
<arg>${names_lenght}</arg>
<arg>Press Keys</arg>
<arg>${NAME_OF_BOARD_INPUT}</arg>
<arg>\ue017</arg>
<doc>Executes the specified keyword multiple times.</doc>
<msg timestamp="20220704 14:55:30.677" level="INFO">Repeating keyword, round 1/8.</msg>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>${NAME_OF_BOARD_INPUT}</arg>
<arg>\ue017</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20220704 14:55:30.678" level="INFO">Sending key(s) ('\ue017',) to xpath://input[contains(@class, 'board-name-input')] element.</msg>
<msg timestamp="20220704 14:55:30.977" level="INFO">Sending key </msg>
<status status="PASS" starttime="20220704 14:55:30.677" endtime="20220704 14:55:31.008"/>
</kw>
<msg timestamp="20220704 14:55:31.009" level="INFO">Repeating keyword, round 2/8.</msg>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>${NAME_OF_BOARD_INPUT}</arg>
<arg>\ue017</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20220704 14:55:31.010" level="INFO">Sending key(s) ('\ue017',) to xpath://input[contains(@class, 'board-name-input')] element.</msg>
<msg timestamp="20220704 14:55:31.318" level="INFO">Sending key </msg>
<status status="PASS" starttime="20220704 14:55:31.009" endtime="20220704 14:55:31.336"/>
</kw>
<msg timestamp="20220704 14:55:31.336" level="INFO">Repeating keyword, round 3/8.</msg>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>${NAME_OF_BOARD_INPUT}</arg>
<arg>\ue017</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20220704 14:55:31.337" level="INFO">Sending key(s) ('\ue017',) to xpath://input[contains(@class, 'board-name-input')] element.</msg>
<msg timestamp="20220704 14:55:31.630" level="INFO">Sending key </msg>
<status status="PASS" starttime="20220704 14:55:31.336" endtime="20220704 14:55:31.654"/>
</kw>
<msg timestamp="20220704 14:55:31.654" level="INFO">Repeating keyword, round 4/8.</msg>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>${NAME_OF_BOARD_INPUT}</arg>
<arg>\ue017</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20220704 14:55:31.655" level="INFO">Sending key(s) ('\ue017',) to xpath://input[contains(@class, 'board-name-input')] element.</msg>
<msg timestamp="20220704 14:55:31.954" level="INFO">Sending key </msg>
<status status="PASS" starttime="20220704 14:55:31.655" endtime="20220704 14:55:31.970"/>
</kw>
<msg timestamp="20220704 14:55:31.970" level="INFO">Repeating keyword, round 5/8.</msg>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>${NAME_OF_BOARD_INPUT}</arg>
<arg>\ue017</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20220704 14:55:31.971" level="INFO">Sending key(s) ('\ue017',) to xpath://input[contains(@class, 'board-name-input')] element.</msg>
<msg timestamp="20220704 14:55:32.259" level="INFO">Sending key </msg>
<status status="PASS" starttime="20220704 14:55:31.970" endtime="20220704 14:55:32.283"/>
</kw>
<msg timestamp="20220704 14:55:32.283" level="INFO">Repeating keyword, round 6/8.</msg>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>${NAME_OF_BOARD_INPUT}</arg>
<arg>\ue017</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20220704 14:55:32.284" level="INFO">Sending key(s) ('\ue017',) to xpath://input[contains(@class, 'board-name-input')] element.</msg>
<msg timestamp="20220704 14:55:32.586" level="INFO">Sending key </msg>
<status status="PASS" starttime="20220704 14:55:32.283" endtime="20220704 14:55:32.603"/>
</kw>
<msg timestamp="20220704 14:55:32.603" level="INFO">Repeating keyword, round 7/8.</msg>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>${NAME_OF_BOARD_INPUT}</arg>
<arg>\ue017</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20220704 14:55:32.604" level="INFO">Sending key(s) ('\ue017',) to xpath://input[contains(@class, 'board-name-input')] element.</msg>
<msg timestamp="20220704 14:55:32.934" level="INFO">Sending key </msg>
<status status="PASS" starttime="20220704 14:55:32.604" endtime="20220704 14:55:32.953"/>
</kw>
<msg timestamp="20220704 14:55:32.953" level="INFO">Repeating keyword, round 8/8.</msg>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>${NAME_OF_BOARD_INPUT}</arg>
<arg>\ue017</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20220704 14:55:32.954" level="INFO">Sending key(s) ('\ue017',) to xpath://input[contains(@class, 'board-name-input')] element.</msg>
<msg timestamp="20220704 14:55:33.241" level="INFO">Sending key </msg>
<status status="PASS" starttime="20220704 14:55:32.953" endtime="20220704 14:55:33.267"/>
</kw>
<status status="PASS" starttime="20220704 14:55:30.677" endtime="20220704 14:55:33.267"/>
</kw>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>${NAME_OF_BOARD_INPUT}</arg>
<arg>${name}</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20220704 14:55:33.268" level="INFO">Sending key(s) ('UpdatedName',) to xpath://input[contains(@class, 'board-name-input')] element.</msg>
<msg timestamp="20220704 14:55:33.553" level="INFO">Sending keys UpdatedName</msg>
<status status="PASS" starttime="20220704 14:55:33.267" endtime="20220704 14:55:33.622"/>
</kw>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>${NAME_OF_BOARD_INPUT}</arg>
<arg>\ue007</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20220704 14:55:33.623" level="INFO">Sending key(s) ('\ue007',) to xpath://input[contains(@class, 'board-name-input')] element.</msg>
<msg timestamp="20220704 14:55:33.920" level="INFO">Sending key </msg>
<status status="PASS" starttime="20220704 14:55:33.622" endtime="20220704 14:55:34.004"/>
</kw>
<status status="PASS" starttime="20220704 14:55:30.072" endtime="20220704 14:55:34.004"/>
</kw>
<kw name="Verify Name of Board" library="UpperHorizontalMenu">
<arg>UpdatedName</arg>
<doc>Verifies the name of a board</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${NAME_OF_BOARD}</arg>
<arg>10</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 14:55:34.005" endtime="20220704 14:55:34.043"/>
</kw>
<kw name="Element Text Should Be" library="SeleniumLibrary">
<arg>${NAME_OF_BOARD}</arg>
<arg>${name}</arg>
<doc>Verifies that element ``locator`` contains exact the text ``expected``.</doc>
<msg timestamp="20220704 14:55:34.044" level="INFO">Verifying element 'xpath://h1[contains(@class, 'js-board-editing-target')]' contains exact text 'UpdatedName'.</msg>
<status status="PASS" starttime="20220704 14:55:34.043" endtime="20220704 14:55:34.119"/>
</kw>
<status status="PASS" starttime="20220704 14:55:34.005" endtime="20220704 14:55:34.119"/>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Close Browser</arg>
<arg>AND</arg>
<arg>Wait Until Keyword Succeeds</arg>
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20220704 14:55:34.120" endtime="20220704 14:55:34.282"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${BOARD.json()}[id]</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:55:34.285" level="INFO">${url} = boards/62c2ff5958662362d1e79d53</msg>
<status status="PASS" starttime="20220704 14:55:34.285" endtime="20220704 14:55:34.285"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 14:55:34.631" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:55:34.286" endtime="20220704 14:55:34.631"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:55:34.631" endtime="20220704 14:55:34.631"/>
</return>
<msg timestamp="20220704 14:55:34.631" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:55:34.285" endtime="20220704 14:55:34.631"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:55:34.631" endtime="20220704 14:55:34.632"/>
</return>
<status status="PASS" starttime="20220704 14:55:34.283" endtime="20220704 14:55:34.632"/>
</kw>
<status status="PASS" starttime="20220704 14:55:34.282" endtime="20220704 14:55:34.632"/>
</kw>
<status status="PASS" starttime="20220704 14:55:34.120" endtime="20220704 14:55:34.632"/>
</kw>
<doc>Verify that a board's name can be updated through GUI</doc>
<tag>board.update.name</tag>
<tag>gui</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220704 14:55:21.847" endtime="20220704 14:55:34.632"/>
</test>
<kw name="Boards Suite Teardown" type="TEARDOWN">
<doc>Deletes the Trello sesion that had been created</doc>
<kw name="Delete All Sessions" library="request_own_library">
<status status="PASS" starttime="20220704 14:55:34.634" endtime="20220704 14:55:34.635"/>
</kw>
<status status="PASS" starttime="20220704 14:55:34.633" endtime="20220704 14:55:34.635"/>
</kw>
<doc>Board Tests</doc>
<status status="PASS" starttime="20220704 14:54:47.846" endtime="20220704 14:55:34.635"/>
</suite>
<suite id="s1-s6-s1-s2" name="Trello Gui Cards" source="/trello/gui/trello_gui_cards.robot">
<kw name="Cards Suite Setup" type="SETUP">
<doc>Creates a new board through API, then Opens a Browser
Login to Trello, and Go to the created board's page.</doc>
<kw name="Create Trello Session" library="TrelloAPI">
<doc>Creates a Trello Session</doc>
<kw name="Create Session" library="request_own_library">
<arg>${API_BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<status status="PASS" starttime="20220704 14:55:34.653" endtime="20220704 14:55:34.653"/>
</kw>
<status status="PASS" starttime="20220704 14:55:34.652" endtime="20220704 14:55:34.653"/>
</kw>
<kw name="Create A Board" library="Board">
<var>${BOARD}</var>
<arg>CardTestBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 14:55:34.654" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 14:55:34.654" endtime="20220704 14:55:34.654"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 14:55:34.654" endtime="20220704 14:55:34.654"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:55:34.656" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220704 14:55:34.654" endtime="20220704 14:55:34.656"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 14:55:34.924" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:55:34.656" endtime="20220704 14:55:34.924"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:55:34.924" endtime="20220704 14:55:34.924"/>
</return>
<msg timestamp="20220704 14:55:34.924" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:55:34.653" endtime="20220704 14:55:34.924"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:55:34.924" endtime="20220704 14:55:34.924"/>
</return>
<msg timestamp="20220704 14:55:34.925" level="INFO">${BOARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:55:34.653" endtime="20220704 14:55:34.925"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_BOARD_ID}</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220704 14:55:34.927" level="INFO">${TEST_SUITE_BOARD_ID} = 62c2ff6610587d01e72669a6</msg>
<status status="PASS" starttime="20220704 14:55:34.925" endtime="20220704 14:55:34.927"/>
</kw>
<kw name="Open Browser From Environment" library="CommonGUI">
<arg>${LOGIN_URL}</arg>
<doc>This keywords takes REMOTE and BROWSER variables
from the environment automatically and only needs a url</doc>
<if>
<branch type="IF" condition="${is_remote}">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${url}</arg>
<arg>${BROWSER}</arg>
<arg>remote_url=http://selenium-hub:4444</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20220704 14:55:34.928" level="INFO">Opening browser 'chrome' to base url 'https://trello.com/login' through remote server at 'http://selenium-hub:4444'.</msg>
<status status="PASS" starttime="20220704 14:55:34.928" endtime="20220704 14:55:36.196"/>
</kw>
<status status="PASS" starttime="20220704 14:55:34.927" endtime="20220704 14:55:36.196"/>
</branch>
<branch type="ELSE">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${url}</arg>
<arg>${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<status status="NOT RUN" starttime="20220704 14:55:36.197" endtime="20220704 14:55:36.197"/>
</kw>
<status status="NOT RUN" starttime="20220704 14:55:36.196" endtime="20220704 14:55:36.197"/>
</branch>
<status status="PASS" starttime="20220704 14:55:34.927" endtime="20220704 14:55:36.197"/>
</if>
<status status="PASS" starttime="20220704 14:55:34.927" endtime="20220704 14:55:36.197"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20220704 14:55:36.197" endtime="20220704 14:55:36.312"/>
</kw>
<kw name="Login To Trello" library="LoginPage">
<arg>${DEFAULT_EMAIL}</arg>
<arg>${DEFAULT_PASSWORD}</arg>
<doc>High-level keyword for logging in to Trello</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220704 14:55:36.323" level="INFO">${url} = https://trello.com/login</msg>
<status status="PASS" starttime="20220704 14:55:36.313" endtime="20220704 14:55:36.324"/>
</kw>
<if>
<branch type="IF" condition="'${url}' != '${LOGIN_URL}'">
<kw name="Go To" library="SeleniumLibrary">
<arg>${LOGIN_URL}</arg>
<doc>Navigates the current browser window to the provided ``url``.</doc>
<status status="NOT RUN" starttime="20220704 14:55:36.324" endtime="20220704 14:55:36.324"/>
</kw>
<status status="NOT RUN" starttime="20220704 14:55:36.324" endtime="20220704 14:55:36.324"/>
</branch>
<status status="PASS" starttime="20220704 14:55:36.324" endtime="20220704 14:55:36.324"/>
</if>
<kw name="Enter Username" library="LoginPage">
<arg>${username}</arg>
<doc>Take a username as argument and
enters it in the user_input</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${USER_INPUT}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 14:55:36.325" endtime="20220704 14:55:36.369"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${USER_INPUT}</arg>
<arg>${username}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220704 14:55:36.370" level="INFO">Typing text 'bootcamp04@mailinator.com' into text field 'css:input#user'.</msg>
<status status="PASS" starttime="20220704 14:55:36.370" endtime="20220704 14:55:36.492"/>
</kw>
<status status="PASS" starttime="20220704 14:55:36.324" endtime="20220704 14:55:36.492"/>
</kw>
<kw name="Wait Until Element Is Not Visible" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<doc>Waits until the element ``locator`` is not visible.</doc>
<status status="PASS" starttime="20220704 14:55:36.493" endtime="20220704 14:55:37.246"/>
</kw>
<kw name="Click Login Button" library="LoginPage">
<doc>Clicks Trello's login button if in Trello's
login page, else it clicks Atlassian's</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220704 14:55:37.266" level="INFO">${url} = https://trello.com/login</msg>
<status status="PASS" starttime="20220704 14:55:37.247" endtime="20220704 14:55:37.266"/>
</kw>
<if>
<branch type="IF" condition="'${url}' == '${LOGIN_URL}'">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220704 14:55:37.267" endtime="20220704 14:55:37.373"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220704 14:55:37.374" level="INFO">Clicking button 'css:input#login'.</msg>
<status status="PASS" starttime="20220704 14:55:37.373" endtime="20220704 14:55:38.242"/>
</kw>
<status status="PASS" starttime="20220704 14:55:37.266" endtime="20220704 14:55:38.243"/>
</branch>
<branch type="ELSE">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="NOT RUN" starttime="20220704 14:55:38.243" endtime="20220704 14:55:38.243"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<status status="NOT RUN" starttime="20220704 14:55:38.243" endtime="20220704 14:55:38.243"/>
</kw>
<status status="NOT RUN" starttime="20220704 14:55:38.243" endtime="20220704 14:55:38.243"/>
</branch>
<status status="PASS" starttime="20220704 14:55:37.266" endtime="20220704 14:55:38.243"/>
</if>
<status status="PASS" starttime="20220704 14:55:37.247" endtime="20220704 14:55:38.243"/>
</kw>
<kw name="Wait Until Location Is Atlassian's Login" library="LoginPage">
<doc>Waits for the page redirection when logging in.</doc>
<kw name="Wait Until Location Contains" library="SeleniumLibrary">
<arg>atlassian.com</arg>
<doc>Waits until the current URL contains ``expected``.</doc>
<status status="PASS" starttime="20220704 14:55:38.244" endtime="20220704 14:55:38.264"/>
</kw>
<status status="PASS" starttime="20220704 14:55:38.243" endtime="20220704 14:55:38.264"/>
</kw>
<kw name="Enter Password" library="LoginPage">
<arg>${password}</arg>
<doc>Take a password as argument and
enters it in the password_input</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<arg>timeout=10</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 14:55:38.265" endtime="20220704 14:55:38.560"/>
</kw>
<kw name="Input Password" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<arg>${password}</arg>
<doc>Types the given password into the text field identified by ``locator``.</doc>
<msg timestamp="20220704 14:55:38.561" level="INFO">Typing password into text field 'css:input#password'.</msg>
<msg timestamp="20220704 14:55:38.615" level="INFO">Temporally setting log level to: NONE</msg>
<msg timestamp="20220704 14:55:38.693" level="INFO">Log level changed from NONE to INFO.</msg>
<status status="PASS" starttime="20220704 14:55:38.560" endtime="20220704 14:55:38.694"/>
</kw>
<status status="PASS" starttime="20220704 14:55:38.264" endtime="20220704 14:55:38.694"/>
</kw>
<kw name="Click Login Button" library="LoginPage">
<doc>Clicks Trello's login button if in Trello's
login page, else it clicks Atlassian's</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220704 14:55:38.704" level="INFO">${url} = https://id.atlassian.com/login?application=trello&amp;continue=https%3A%2F%2Ftrello.com%2Fauth%2Fatlassian%2Fcallback%3FreturnUrl%3D%252F%26display%3D%26aaOnboarding%3D%26updateEmail%3D%26traceId%3D62c2ff...</msg>
<status status="PASS" starttime="20220704 14:55:38.694" endtime="20220704 14:55:38.704"/>
</kw>
<if>
<branch type="IF" condition="'${url}' == '${LOGIN_URL}'">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="NOT RUN" starttime="20220704 14:55:38.705" endtime="20220704 14:55:38.705"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<status status="NOT RUN" starttime="20220704 14:55:38.705" endtime="20220704 14:55:38.705"/>
</kw>
<status status="NOT RUN" starttime="20220704 14:55:38.704" endtime="20220704 14:55:38.705"/>
</branch>
<branch type="ELSE">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220704 14:55:38.705" endtime="20220704 14:55:38.756"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220704 14:55:38.756" level="INFO">Clicking button 'css:button#login-submit'.</msg>
<status status="PASS" starttime="20220704 14:55:38.756" endtime="20220704 14:55:38.880"/>
</kw>
<status status="PASS" starttime="20220704 14:55:38.705" endtime="20220704 14:55:38.880"/>
</branch>
<status status="PASS" starttime="20220704 14:55:38.704" endtime="20220704 14:55:38.880"/>
</if>
<status status="PASS" starttime="20220704 14:55:38.694" endtime="20220704 14:55:38.880"/>
</kw>
<status status="PASS" starttime="20220704 14:55:36.313" endtime="20220704 14:55:38.881"/>
</kw>
<kw name="Go To Board" library="BoardsPage">
<arg>CardTestBoard</arg>
<doc>Receives the board name and goes to that board's page.</doc>
<kw name="Format String" library="String">
<var>${locator}</var>
<arg>${BOARD_BUTTON}</arg>
<arg>${board_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:55:38.882" level="INFO">${locator} = //div[@title="CardTestBoard"]</msg>
<status status="PASS" starttime="20220704 14:55:38.881" endtime="20220704 14:55:38.882"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 14:55:38.882" endtime="20220704 14:55:42.256"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 14:55:42.257" level="INFO">Clicking element '//div[@title="CardTestBoard"]'.</msg>
<status status="PASS" starttime="20220704 14:55:42.256" endtime="20220704 14:55:42.633"/>
</kw>
<status status="PASS" starttime="20220704 14:55:38.881" endtime="20220704 14:55:42.633"/>
</kw>
<status status="PASS" starttime="20220704 14:55:34.652" endtime="20220704 14:55:42.633"/>
</kw>
<test id="s1-s6-s1-s2-t1" name="Verify A Card Can Be Created" line="12">
<kw name="Set Test Variable" library="BuiltIn">
<arg>\${list}</arg>
<arg>To Do</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220704 14:55:42.635" level="INFO">${list} = To Do</msg>
<status status="PASS" starttime="20220704 14:55:42.635" endtime="20220704 14:55:42.635"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>\${card}</arg>
<arg>Test Card</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220704 14:55:42.635" level="INFO">${card} = Test Card</msg>
<status status="PASS" starttime="20220704 14:55:42.635" endtime="20220704 14:55:42.635"/>
</kw>
<kw name="Create Card In List" library="ListComponent">
<arg>${list}</arg>
<arg>${card}</arg>
<doc>Create a new card in the given list
Required args: list_name, card_name</doc>
<kw name="Format String" library="String">
<var>${add_card_locator}</var>
<arg>${LIST_ADD_CARD}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:55:42.636" level="INFO">${add_card_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Add a card')]</msg>
<status status="PASS" starttime="20220704 14:55:42.636" endtime="20220704 14:55:42.636"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${add_card_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 14:55:42.637" endtime="20220704 14:55:43.202"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${add_card_locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 14:55:43.202" level="INFO">Clicking element '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Add a card')]'.</msg>
<status status="PASS" starttime="20220704 14:55:43.202" endtime="20220704 14:55:43.298"/>
</kw>
<kw name="Format String" library="String">
<var>${textarea_locator}</var>
<arg>${CARD_TITLE_INPUT}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:55:43.299" level="INFO">${textarea_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//textarea[contains(@class, 'list-card-composer-textarea')]</msg>
<status status="PASS" starttime="20220704 14:55:43.298" endtime="20220704 14:55:43.299"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 14:55:43.299" endtime="20220704 14:55:43.371"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 14:55:43.372" level="INFO">Clicking element '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//textarea[contains(@class, 'list-card-composer-textarea')]'.</msg>
<status status="PASS" starttime="20220704 14:55:43.372" endtime="20220704 14:55:43.440"/>
</kw>
<kw name="Clear Element Text" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<doc>Clears the value of the text-input-element identified by ``locator``.</doc>
<status status="PASS" starttime="20220704 14:55:43.440" endtime="20220704 14:55:43.510"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<arg>${card_name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220704 14:55:43.511" level="INFO">Typing text 'Test Card' into text field '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//textarea[contains(@class, 'list-card-composer-textarea')]'.</msg>
<status status="PASS" starttime="20220704 14:55:43.510" endtime="20220704 14:55:43.701"/>
</kw>
<kw name="Format String" library="String">
<var>${confirm_locator}</var>
<arg>${CONFIRM_ADD_CARD}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:55:43.702" level="INFO">${confirm_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//input[@value='Add card']</msg>
<status status="PASS" starttime="20220704 14:55:43.701" endtime="20220704 14:55:43.702"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${confirm_locator}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220704 14:55:43.703" level="INFO">Clicking button '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//input[@value='Add card']'.</msg>
<status status="PASS" starttime="20220704 14:55:43.702" endtime="20220704 14:55:43.793"/>
</kw>
<status status="PASS" starttime="20220704 14:55:42.635" endtime="20220704 14:55:43.793"/>
</kw>
<kw name="Verify Card Exists" library="ListComponent">
<arg>${list}</arg>
<arg>${card}</arg>
<doc>Verify that the card with card_name exists in the given list.</doc>
<kw name="Format String" library="String">
<var>${card_name_locator}</var>
<arg>${LIST_CARD_NAME}</arg>
<arg>list_name=${list_name}</arg>
<arg>card_name=${card_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:55:43.795" level="INFO">${card_name_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Test Card')]</msg>
<status status="PASS" starttime="20220704 14:55:43.794" endtime="20220704 14:55:43.795"/>
</kw>
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<arg>${card_name_locator}</arg>
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<msg timestamp="20220704 14:55:43.866" level="INFO">Element '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Test Card')]' is displayed.</msg>
<status status="PASS" starttime="20220704 14:55:43.795" endtime="20220704 14:55:43.866"/>
</kw>
<status status="PASS" starttime="20220704 14:55:43.793" endtime="20220704 14:55:43.866"/>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Go To Card Modal</arg>
<arg>list_name=${list}</arg>
<arg>card_name=${card}</arg>
<arg>AND</arg>
<arg>Delete Current Card</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Go To Card Modal" library="ListComponent">
<arg>list_name=${list}</arg>
<arg>card_name=${card}</arg>
<doc>It opens the modal for card_name in list_name</doc>
<kw name="Format String" library="String">
<var>${card_name_locator}</var>
<arg>${LIST_CARD_NAME}</arg>
<arg>list_name=${list_name}</arg>
<arg>card_name=${card_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:55:43.868" level="INFO">${card_name_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Test Card')]</msg>
<status status="PASS" starttime="20220704 14:55:43.868" endtime="20220704 14:55:43.868"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${card_name_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 14:55:43.869" endtime="20220704 14:55:43.896"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${card_name_locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 14:55:43.897" level="INFO">Clicking element '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Test Card')]'.</msg>
<status status="PASS" starttime="20220704 14:55:43.896" endtime="20220704 14:55:44.042"/>
</kw>
<status status="PASS" starttime="20220704 14:55:43.867" endtime="20220704 14:55:44.042"/>
</kw>
<kw name="Delete Current Card" library="CardModal">
<doc>The Keyword will first check if the card is archived,
if it's not, it will archive it to be able to delete it.</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${not_archived}</var>
<arg>Element Should Not Be Visible</arg>
<arg>${IS_ARCHIVED_MSG}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Element Should Not Be Visible" library="SeleniumLibrary">
<arg>${IS_ARCHIVED_MSG}</arg>
<doc>Verifies that the element identified by ``locator`` is NOT visible.</doc>
<msg timestamp="20220704 14:55:44.101" level="INFO">Element '//p[text()='This card is archived.']' did not exist.</msg>
<status status="PASS" starttime="20220704 14:55:44.043" endtime="20220704 14:55:44.101"/>
</kw>
<msg timestamp="20220704 14:55:44.102" level="INFO">${not_archived} = True</msg>
<status status="PASS" starttime="20220704 14:55:44.043" endtime="20220704 14:55:44.102"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${not_archived}</arg>
<arg>Archive Current Card</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Archive Current Card" library="CardModal">
<doc>Archives the current card from inside the modal.</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ARCHIVE_BUTTON}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 14:55:44.103" endtime="20220704 14:55:44.510"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${ARCHIVE_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 14:55:44.510" level="INFO">Clicking element '//span[@title='Archive']'.</msg>
<status status="PASS" starttime="20220704 14:55:44.510" endtime="20220704 14:55:44.650"/>
</kw>
<status status="PASS" starttime="20220704 14:55:44.102" endtime="20220704 14:55:44.651"/>
</kw>
<status status="PASS" starttime="20220704 14:55:44.102" endtime="20220704 14:55:44.651"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3</arg>
<arg>0.9</arg>
<arg>Click Element</arg>
<arg>${DELETE_BUTTON}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${DELETE_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 14:55:44.652" level="INFO">Clicking element '//a[@title='Delete']'.</msg>
<status status="PASS" starttime="20220704 14:55:44.651" endtime="20220704 14:55:44.734"/>
</kw>
<status status="PASS" starttime="20220704 14:55:44.651" endtime="20220704 14:55:44.735"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${DELETE_CONFIRM}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 14:55:44.735" level="INFO">Clicking element '//input[@value='Delete']'.</msg>
<status status="PASS" starttime="20220704 14:55:44.735" endtime="20220704 14:55:44.959"/>
</kw>
<status status="PASS" starttime="20220704 14:55:44.042" endtime="20220704 14:55:44.959"/>
</kw>
<status status="PASS" starttime="20220704 14:55:43.867" endtime="20220704 14:55:44.959"/>
</kw>
<doc>Verify that it is possible to create a new
card through Trello's GUI.</doc>
<tag>card.create</tag>
<tag>gui</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220704 14:55:42.633" endtime="20220704 14:55:44.960"/>
</test>
<test id="s1-s6-s1-s2-t2" name="Modify A Card's Name From The Board Page" line="24">
<kw name="Set Test Variable" library="BuiltIn">
<arg>\${list}</arg>
<arg>To Do</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220704 14:55:44.963" level="INFO">${list} = To Do</msg>
<status status="PASS" starttime="20220704 14:55:44.962" endtime="20220704 14:55:44.963"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>\${card}</arg>
<arg>Test Card</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220704 14:55:44.963" level="INFO">${card} = Test Card</msg>
<status status="PASS" starttime="20220704 14:55:44.963" endtime="20220704 14:55:44.963"/>
</kw>
<kw name="Create Card In List" library="ListComponent">
<arg>${list}</arg>
<arg>${card}</arg>
<doc>Create a new card in the given list
Required args: list_name, card_name</doc>
<kw name="Format String" library="String">
<var>${add_card_locator}</var>
<arg>${LIST_ADD_CARD}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:55:44.964" level="INFO">${add_card_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Add a card')]</msg>
<status status="PASS" starttime="20220704 14:55:44.964" endtime="20220704 14:55:44.964"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${add_card_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 14:55:44.964" endtime="20220704 14:55:45.030"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${add_card_locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 14:55:45.031" level="INFO">Clicking element '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Add a card')]'.</msg>
<status status="PASS" starttime="20220704 14:55:45.031" endtime="20220704 14:55:45.125"/>
</kw>
<kw name="Format String" library="String">
<var>${textarea_locator}</var>
<arg>${CARD_TITLE_INPUT}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:55:45.126" level="INFO">${textarea_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//textarea[contains(@class, 'list-card-composer-textarea')]</msg>
<status status="PASS" starttime="20220704 14:55:45.125" endtime="20220704 14:55:45.126"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 14:55:45.126" endtime="20220704 14:55:45.162"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 14:55:45.163" level="INFO">Clicking element '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//textarea[contains(@class, 'list-card-composer-textarea')]'.</msg>
<status status="PASS" starttime="20220704 14:55:45.162" endtime="20220704 14:55:45.221"/>
</kw>
<kw name="Clear Element Text" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<doc>Clears the value of the text-input-element identified by ``locator``.</doc>
<status status="PASS" starttime="20220704 14:55:45.221" endtime="20220704 14:55:45.260"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<arg>${card_name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220704 14:55:45.261" level="INFO">Typing text 'Test Card' into text field '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//textarea[contains(@class, 'list-card-composer-textarea')]'.</msg>
<status status="PASS" starttime="20220704 14:55:45.261" endtime="20220704 14:55:45.355"/>
</kw>
<kw name="Format String" library="String">
<var>${confirm_locator}</var>
<arg>${CONFIRM_ADD_CARD}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:55:45.356" level="INFO">${confirm_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//input[@value='Add card']</msg>
<status status="PASS" starttime="20220704 14:55:45.355" endtime="20220704 14:55:45.356"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${confirm_locator}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220704 14:55:45.356" level="INFO">Clicking button '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//input[@value='Add card']'.</msg>
<status status="PASS" starttime="20220704 14:55:45.356" endtime="20220704 14:55:45.457"/>
</kw>
<status status="PASS" starttime="20220704 14:55:44.963" endtime="20220704 14:55:45.457"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>\${new_name}</arg>
<arg>New Name</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220704 14:55:45.458" level="INFO">${new_name} = New Name</msg>
<status status="PASS" starttime="20220704 14:55:45.458" endtime="20220704 14:55:45.458"/>
</kw>
<kw name="Edit Card Title Using Pencil Icon" library="ListComponent">
<arg>${list}</arg>
<arg>${card}</arg>
<arg>${new_name}</arg>
<doc>Modifies the title of the given card, using the pencil icon
required: list_name, card_name, new_title</doc>
<kw name="Format String" library="String">
<var>${card_element}</var>
<arg>${LIST_CARD_NAME}</arg>
<arg>list_name=${list_name}</arg>
<arg>card_name=${card_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:55:45.460" level="INFO">${card_element} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Test Card')]</msg>
<status status="PASS" starttime="20220704 14:55:45.459" endtime="20220704 14:55:45.460"/>
</kw>
<kw name="Format String" library="String">
<var>${pencil_locator}</var>
<arg>${PENCIL_ICON}</arg>
<arg>list_name=${list_name}</arg>
<arg>card_name=${card_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:55:45.460" level="INFO">${pencil_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Test Card')]//span[contains(@class, 'icon-edit')]</msg>
<status status="PASS" starttime="20220704 14:55:45.460" endtime="20220704 14:55:45.460"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${card_element}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 14:55:45.460" endtime="20220704 14:55:45.517"/>
</kw>
<kw name="Mouse Over" library="SeleniumLibrary">
<arg>${card_element}</arg>
<doc>Simulates hovering the mouse over the element ``locator``.</doc>
<msg timestamp="20220704 14:55:45.518" level="INFO">Simulating Mouse Over on element '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Test Card')]'.</msg>
<status status="PASS" starttime="20220704 14:55:45.517" endtime="20220704 14:55:45.806"/>
</kw>
<kw name="Wait Until Page Contains Element" library="SeleniumLibrary">
<arg>${pencil_locator}</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" starttime="20220704 14:55:45.806" endtime="20220704 14:55:45.866"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${pencil_locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 14:55:45.867" level="INFO">Clicking element '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Test Card')]//span[contains(@class, 'icon-edit')]'.</msg>
<status status="PASS" starttime="20220704 14:55:45.866" endtime="20220704 14:55:45.960"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${CARD_EDIT_TITLE}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 14:55:45.961" endtime="20220704 14:55:46.028"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${CARD_EDIT_TITLE}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 14:55:46.029" level="INFO">Clicking element 'css:textarea.list-card-edit-title'.</msg>
<status status="PASS" starttime="20220704 14:55:46.028" endtime="20220704 14:55:46.117"/>
</kw>
<kw name="Clear Element Text" library="SeleniumLibrary">
<arg>${CARD_EDIT_TITLE}</arg>
<doc>Clears the value of the text-input-element identified by ``locator``.</doc>
<status status="PASS" starttime="20220704 14:55:46.117" endtime="20220704 14:55:46.156"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${CARD_EDIT_TITLE}</arg>
<arg>${new_title}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220704 14:55:46.157" level="INFO">Typing text 'New Name' into text field 'css:textarea.list-card-edit-title'.</msg>
<status status="PASS" starttime="20220704 14:55:46.157" endtime="20220704 14:55:46.261"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${CARD_EDIT_TITLE_SAVE}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 14:55:46.262" level="INFO">Clicking element '//input[@value='Save']'.</msg>
<status status="PASS" starttime="20220704 14:55:46.261" endtime="20220704 14:55:46.343"/>
</kw>
<status status="PASS" starttime="20220704 14:55:45.458" endtime="20220704 14:55:46.343"/>
</kw>
<kw name="Verify Card Exists" library="ListComponent">
<arg>${list}</arg>
<arg>${new_name}</arg>
<doc>Verify that the card with card_name exists in the given list.</doc>
<kw name="Format String" library="String">
<var>${card_name_locator}</var>
<arg>${LIST_CARD_NAME}</arg>
<arg>list_name=${list_name}</arg>
<arg>card_name=${card_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:55:46.345" level="INFO">${card_name_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'New Name')]</msg>
<status status="PASS" starttime="20220704 14:55:46.344" endtime="20220704 14:55:46.345"/>
</kw>
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<arg>${card_name_locator}</arg>
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<msg timestamp="20220704 14:55:46.387" level="INFO">Element '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'New Name')]' is displayed.</msg>
<status status="PASS" starttime="20220704 14:55:46.345" endtime="20220704 14:55:46.387"/>
</kw>
<status status="PASS" starttime="20220704 14:55:46.344" endtime="20220704 14:55:46.387"/>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Go To Card Modal</arg>
<arg>list_name=${list}</arg>
<arg>card_name=${new_name}</arg>
<arg>AND</arg>
<arg>Delete Current Card</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Go To Card Modal" library="ListComponent">
<arg>list_name=${list}</arg>
<arg>card_name=${new_name}</arg>
<doc>It opens the modal for card_name in list_name</doc>
<kw name="Format String" library="String">
<var>${card_name_locator}</var>
<arg>${LIST_CARD_NAME}</arg>
<arg>list_name=${list_name}</arg>
<arg>card_name=${card_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:55:46.389" level="INFO">${card_name_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'New Name')]</msg>
<status status="PASS" starttime="20220704 14:55:46.389" endtime="20220704 14:55:46.389"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${card_name_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 14:55:46.389" endtime="20220704 14:55:46.448"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${card_name_locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 14:55:46.449" level="INFO">Clicking element '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'New Name')]'.</msg>
<status status="PASS" starttime="20220704 14:55:46.448" endtime="20220704 14:55:46.554"/>
</kw>
<status status="PASS" starttime="20220704 14:55:46.388" endtime="20220704 14:55:46.554"/>
</kw>
<kw name="Delete Current Card" library="CardModal">
<doc>The Keyword will first check if the card is archived,
if it's not, it will archive it to be able to delete it.</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${not_archived}</var>
<arg>Element Should Not Be Visible</arg>
<arg>${IS_ARCHIVED_MSG}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Element Should Not Be Visible" library="SeleniumLibrary">
<arg>${IS_ARCHIVED_MSG}</arg>
<doc>Verifies that the element identified by ``locator`` is NOT visible.</doc>
<msg timestamp="20220704 14:55:46.800" level="INFO">Element '//p[text()='This card is archived.']' did not exist.</msg>
<status status="PASS" starttime="20220704 14:55:46.556" endtime="20220704 14:55:46.800"/>
</kw>
<msg timestamp="20220704 14:55:46.800" level="INFO">${not_archived} = True</msg>
<status status="PASS" starttime="20220704 14:55:46.555" endtime="20220704 14:55:46.800"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${not_archived}</arg>
<arg>Archive Current Card</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Archive Current Card" library="CardModal">
<doc>Archives the current card from inside the modal.</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ARCHIVE_BUTTON}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 14:55:46.801" endtime="20220704 14:55:46.866"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${ARCHIVE_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 14:55:46.867" level="INFO">Clicking element '//span[@title='Archive']'.</msg>
<status status="PASS" starttime="20220704 14:55:46.867" endtime="20220704 14:55:46.940"/>
</kw>
<status status="PASS" starttime="20220704 14:55:46.801" endtime="20220704 14:55:46.941"/>
</kw>
<status status="PASS" starttime="20220704 14:55:46.800" endtime="20220704 14:55:46.941"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3</arg>
<arg>0.9</arg>
<arg>Click Element</arg>
<arg>${DELETE_BUTTON}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${DELETE_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 14:55:46.942" level="INFO">Clicking element '//a[@title='Delete']'.</msg>
<status status="PASS" starttime="20220704 14:55:46.941" endtime="20220704 14:55:47.038"/>
</kw>
<status status="PASS" starttime="20220704 14:55:46.941" endtime="20220704 14:55:47.039"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${DELETE_CONFIRM}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 14:55:47.039" level="INFO">Clicking element '//input[@value='Delete']'.</msg>
<status status="PASS" starttime="20220704 14:55:47.039" endtime="20220704 14:55:47.245"/>
</kw>
<status status="PASS" starttime="20220704 14:55:46.555" endtime="20220704 14:55:47.245"/>
</kw>
<status status="PASS" starttime="20220704 14:55:46.388" endtime="20220704 14:55:47.245"/>
</kw>
<doc>Verify that it is possible to edit a card's Name
using the pencil icon in the board page.</doc>
<tag>card.title_board</tag>
<tag>gui</tag>
<tag>regression</tag>
<status status="PASS" starttime="20220704 14:55:44.960" endtime="20220704 14:55:47.245"/>
</test>
<test id="s1-s6-s1-s2-t3" name="Leave A Comment On A Card" line="38">
<kw name="Set Test Variable" library="BuiltIn">
<arg>\${list}</arg>
<arg>To Do</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220704 14:55:47.250" level="INFO">${list} = To Do</msg>
<status status="PASS" starttime="20220704 14:55:47.249" endtime="20220704 14:55:47.250"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>\${card}</arg>
<arg>Test Card</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220704 14:55:47.250" level="INFO">${card} = Test Card</msg>
<status status="PASS" starttime="20220704 14:55:47.250" endtime="20220704 14:55:47.250"/>
</kw>
<kw name="Create Card In List" library="ListComponent">
<arg>${list}</arg>
<arg>${card}</arg>
<doc>Create a new card in the given list
Required args: list_name, card_name</doc>
<kw name="Format String" library="String">
<var>${add_card_locator}</var>
<arg>${LIST_ADD_CARD}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:55:47.251" level="INFO">${add_card_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Add a card')]</msg>
<status status="PASS" starttime="20220704 14:55:47.251" endtime="20220704 14:55:47.251"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${add_card_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 14:55:47.251" endtime="20220704 14:55:47.289"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${add_card_locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 14:55:47.289" level="INFO">Clicking element '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Add a card')]'.</msg>
<status status="PASS" starttime="20220704 14:55:47.289" endtime="20220704 14:55:47.360"/>
</kw>
<kw name="Format String" library="String">
<var>${textarea_locator}</var>
<arg>${CARD_TITLE_INPUT}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:55:47.361" level="INFO">${textarea_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//textarea[contains(@class, 'list-card-composer-textarea')]</msg>
<status status="PASS" starttime="20220704 14:55:47.360" endtime="20220704 14:55:47.361"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 14:55:47.361" endtime="20220704 14:55:47.407"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 14:55:47.408" level="INFO">Clicking element '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//textarea[contains(@class, 'list-card-composer-textarea')]'.</msg>
<status status="PASS" starttime="20220704 14:55:47.408" endtime="20220704 14:55:47.467"/>
</kw>
<kw name="Clear Element Text" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<doc>Clears the value of the text-input-element identified by ``locator``.</doc>
<status status="PASS" starttime="20220704 14:55:47.468" endtime="20220704 14:55:47.503"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<arg>${card_name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220704 14:55:47.504" level="INFO">Typing text 'Test Card' into text field '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//textarea[contains(@class, 'list-card-composer-textarea')]'.</msg>
<status status="PASS" starttime="20220704 14:55:47.503" endtime="20220704 14:55:47.650"/>
</kw>
<kw name="Format String" library="String">
<var>${confirm_locator}</var>
<arg>${CONFIRM_ADD_CARD}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:55:47.651" level="INFO">${confirm_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//input[@value='Add card']</msg>
<status status="PASS" starttime="20220704 14:55:47.650" endtime="20220704 14:55:47.651"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${confirm_locator}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220704 14:55:47.652" level="INFO">Clicking button '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//input[@value='Add card']'.</msg>
<status status="PASS" starttime="20220704 14:55:47.651" endtime="20220704 14:55:47.732"/>
</kw>
<status status="PASS" starttime="20220704 14:55:47.250" endtime="20220704 14:55:47.733"/>
</kw>
<kw name="Go To Card Modal" library="ListComponent">
<arg>${list}</arg>
<arg>${card}</arg>
<doc>It opens the modal for card_name in list_name</doc>
<kw name="Format String" library="String">
<var>${card_name_locator}</var>
<arg>${LIST_CARD_NAME}</arg>
<arg>list_name=${list_name}</arg>
<arg>card_name=${card_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:55:47.734" level="INFO">${card_name_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Test Card')]</msg>
<status status="PASS" starttime="20220704 14:55:47.734" endtime="20220704 14:55:47.734"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${card_name_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 14:55:47.734" endtime="20220704 14:55:47.802"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${card_name_locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 14:55:47.803" level="INFO">Clicking element '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Test Card')]'.</msg>
<status status="PASS" starttime="20220704 14:55:47.802" endtime="20220704 14:55:47.926"/>
</kw>
<status status="PASS" starttime="20220704 14:55:47.733" endtime="20220704 14:55:47.926"/>
</kw>
<kw name="Get Number Of Comments" library="CardModal">
<var>${comments_before}</var>
<doc>Return the number of comments present in the modal.</doc>
<kw name="Get Element Count" library="SeleniumLibrary">
<var>${n}</var>
<arg>${COMMENT_DIV}</arg>
<doc>Returns the number of elements matching ``locator``.</doc>
<msg timestamp="20220704 14:55:48.147" level="INFO">${n} = 0</msg>
<status status="PASS" starttime="20220704 14:55:47.927" endtime="20220704 14:55:48.147"/>
</kw>
<return>
<value>${n}</value>
<status status="PASS" starttime="20220704 14:55:48.147" endtime="20220704 14:55:48.147"/>
</return>
<msg timestamp="20220704 14:55:48.147" level="INFO">${comments_before} = 0</msg>
<status status="PASS" starttime="20220704 14:55:47.926" endtime="20220704 14:55:48.147"/>
</kw>
<kw name="Send A Comment" library="CardModal">
<arg>This is a test comment</arg>
<doc>Sends a comment under the "activity" section of the modal
required: comment</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${COMMENT_BOX_INPUT}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 14:55:48.148" endtime="20220704 14:55:48.212"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${COMMENT_BOX_INPUT}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 14:55:48.213" level="INFO">Clicking element '//div[@class='comment-box']/textarea'.</msg>
<status status="PASS" starttime="20220704 14:55:48.212" endtime="20220704 14:55:48.281"/>
</kw>
<kw name="Clear Element Text" library="SeleniumLibrary">
<arg>${COMMENT_BOX_INPUT}</arg>
<doc>Clears the value of the text-input-element identified by ``locator``.</doc>
<status status="PASS" starttime="20220704 14:55:48.282" endtime="20220704 14:55:48.330"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${COMMENT_BOX_INPUT}</arg>
<arg>${comment}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220704 14:55:48.331" level="INFO">Typing text 'This is a test comment' into text field '//div[@class='comment-box']/textarea'.</msg>
<status status="PASS" starttime="20220704 14:55:48.331" endtime="20220704 14:55:48.525"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${SAVE_COMMENT}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 14:55:48.526" level="INFO">Clicking element '//div[contains(@class, 'comment-controls')]//input[@value='Save']'.</msg>
<status status="PASS" starttime="20220704 14:55:48.525" endtime="20220704 14:55:48.686"/>
</kw>
<status status="PASS" starttime="20220704 14:55:48.148" endtime="20220704 14:55:48.687"/>
</kw>
<kw name="Get Number Of Comments" library="CardModal">
<var>${comments_after}</var>
<doc>Return the number of comments present in the modal.</doc>
<kw name="Get Element Count" library="SeleniumLibrary">
<var>${n}</var>
<arg>${COMMENT_DIV}</arg>
<doc>Returns the number of elements matching ``locator``.</doc>
<msg timestamp="20220704 14:55:48.746" level="INFO">${n} = 1</msg>
<status status="PASS" starttime="20220704 14:55:48.687" endtime="20220704 14:55:48.746"/>
</kw>
<return>
<value>${n}</value>
<status status="PASS" starttime="20220704 14:55:48.746" endtime="20220704 14:55:48.746"/>
</return>
<msg timestamp="20220704 14:55:48.747" level="INFO">${comments_after} = 1</msg>
<status status="PASS" starttime="20220704 14:55:48.687" endtime="20220704 14:55:48.747"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${comments_after} == ${comments_before}+${1}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220704 14:55:48.747" endtime="20220704 14:55:48.748"/>
</kw>
<kw name="Delete Current Card" library="CardModal" type="TEARDOWN">
<doc>The Keyword will first check if the card is archived,
if it's not, it will archive it to be able to delete it.</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${not_archived}</var>
<arg>Element Should Not Be Visible</arg>
<arg>${IS_ARCHIVED_MSG}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Element Should Not Be Visible" library="SeleniumLibrary">
<arg>${IS_ARCHIVED_MSG}</arg>
<doc>Verifies that the element identified by ``locator`` is NOT visible.</doc>
<msg timestamp="20220704 14:55:48.765" level="INFO">Element '//p[text()='This card is archived.']' did not exist.</msg>
<status status="PASS" starttime="20220704 14:55:48.749" endtime="20220704 14:55:48.765"/>
</kw>
<msg timestamp="20220704 14:55:48.765" level="INFO">${not_archived} = True</msg>
<status status="PASS" starttime="20220704 14:55:48.749" endtime="20220704 14:55:48.765"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${not_archived}</arg>
<arg>Archive Current Card</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Archive Current Card" library="CardModal">
<doc>Archives the current card from inside the modal.</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ARCHIVE_BUTTON}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 14:55:48.766" endtime="20220704 14:55:48.848"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${ARCHIVE_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 14:55:48.849" level="INFO">Clicking element '//span[@title='Archive']'.</msg>
<status status="PASS" starttime="20220704 14:55:48.848" endtime="20220704 14:55:48.976"/>
</kw>
<status status="PASS" starttime="20220704 14:55:48.766" endtime="20220704 14:55:48.976"/>
</kw>
<status status="PASS" starttime="20220704 14:55:48.765" endtime="20220704 14:55:48.976"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3</arg>
<arg>0.9</arg>
<arg>Click Element</arg>
<arg>${DELETE_BUTTON}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${DELETE_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 14:55:48.977" level="INFO">Clicking element '//a[@title='Delete']'.</msg>
<status status="PASS" starttime="20220704 14:55:48.977" endtime="20220704 14:55:49.134"/>
</kw>
<status status="PASS" starttime="20220704 14:55:48.977" endtime="20220704 14:55:49.134"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${DELETE_CONFIRM}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 14:55:49.135" level="INFO">Clicking element '//input[@value='Delete']'.</msg>
<status status="PASS" starttime="20220704 14:55:49.134" endtime="20220704 14:55:49.427"/>
</kw>
<status status="PASS" starttime="20220704 14:55:48.749" endtime="20220704 14:55:49.427"/>
</kw>
<doc>Verify that it is possible to write a comment
on a card, through the card modal.</doc>
<tag>card.comment</tag>
<tag>gui</tag>
<tag>regression</tag>
<status status="PASS" starttime="20220704 14:55:47.248" endtime="20220704 14:55:49.427"/>
</test>
<test id="s1-s6-s1-s2-t4" name="Verify A Card Can Be Deleted" line="52">
<kw name="Set Test Variable" library="BuiltIn">
<arg>\${list}</arg>
<arg>To Do</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220704 14:55:49.431" level="INFO">${list} = To Do</msg>
<status status="PASS" starttime="20220704 14:55:49.431" endtime="20220704 14:55:49.431"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>\${card}</arg>
<arg>Test Card</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220704 14:55:49.432" level="INFO">${card} = Test Card</msg>
<status status="PASS" starttime="20220704 14:55:49.431" endtime="20220704 14:55:49.432"/>
</kw>
<kw name="Get Number Of Cards In List" library="ListComponent">
<var>${cards_before}</var>
<arg>${list}</arg>
<doc>Return the number of cards present in a given list.
required: list_name</doc>
<kw name="Format String" library="String">
<var>${card_anchor_locator}</var>
<arg>${CARD_ANCHORS}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:55:49.433" level="INFO">${card_anchor_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(@class, 'list-card')]</msg>
<status status="PASS" starttime="20220704 14:55:49.432" endtime="20220704 14:55:49.433"/>
</kw>
<kw name="Get Element Count" library="SeleniumLibrary">
<var>${n}</var>
<arg>${card_anchor_locator}</arg>
<doc>Returns the number of elements matching ``locator``.</doc>
<msg timestamp="20220704 14:55:49.488" level="INFO">${n} = 0</msg>
<status status="PASS" starttime="20220704 14:55:49.433" endtime="20220704 14:55:49.488"/>
</kw>
<return>
<value>${n}</value>
<status status="PASS" starttime="20220704 14:55:49.488" endtime="20220704 14:55:49.488"/>
</return>
<msg timestamp="20220704 14:55:49.488" level="INFO">${cards_before} = 0</msg>
<status status="PASS" starttime="20220704 14:55:49.432" endtime="20220704 14:55:49.488"/>
</kw>
<kw name="Create Card In List" library="ListComponent">
<arg>${list}</arg>
<arg>${card}</arg>
<doc>Create a new card in the given list
Required args: list_name, card_name</doc>
<kw name="Format String" library="String">
<var>${add_card_locator}</var>
<arg>${LIST_ADD_CARD}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:55:49.489" level="INFO">${add_card_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Add a card')]</msg>
<status status="PASS" starttime="20220704 14:55:49.489" endtime="20220704 14:55:49.490"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${add_card_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 14:55:49.490" endtime="20220704 14:55:49.554"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${add_card_locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 14:55:49.555" level="INFO">Clicking element '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Add a card')]'.</msg>
<status status="PASS" starttime="20220704 14:55:49.555" endtime="20220704 14:55:49.660"/>
</kw>
<kw name="Format String" library="String">
<var>${textarea_locator}</var>
<arg>${CARD_TITLE_INPUT}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:55:49.661" level="INFO">${textarea_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//textarea[contains(@class, 'list-card-composer-textarea')]</msg>
<status status="PASS" starttime="20220704 14:55:49.660" endtime="20220704 14:55:49.661"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 14:55:49.661" endtime="20220704 14:55:49.701"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 14:55:49.702" level="INFO">Clicking element '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//textarea[contains(@class, 'list-card-composer-textarea')]'.</msg>
<status status="PASS" starttime="20220704 14:55:49.702" endtime="20220704 14:55:49.758"/>
</kw>
<kw name="Clear Element Text" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<doc>Clears the value of the text-input-element identified by ``locator``.</doc>
<status status="PASS" starttime="20220704 14:55:49.758" endtime="20220704 14:55:49.834"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<arg>${card_name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220704 14:55:49.835" level="INFO">Typing text 'Test Card' into text field '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//textarea[contains(@class, 'list-card-composer-textarea')]'.</msg>
<status status="PASS" starttime="20220704 14:55:49.835" endtime="20220704 14:55:49.950"/>
</kw>
<kw name="Format String" library="String">
<var>${confirm_locator}</var>
<arg>${CONFIRM_ADD_CARD}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:55:49.951" level="INFO">${confirm_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//input[@value='Add card']</msg>
<status status="PASS" starttime="20220704 14:55:49.950" endtime="20220704 14:55:49.951"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${confirm_locator}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220704 14:55:49.951" level="INFO">Clicking button '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//input[@value='Add card']'.</msg>
<status status="PASS" starttime="20220704 14:55:49.951" endtime="20220704 14:55:50.043"/>
</kw>
<status status="PASS" starttime="20220704 14:55:49.488" endtime="20220704 14:55:50.043"/>
</kw>
<kw name="Go To Card Modal" library="ListComponent">
<arg>${list}</arg>
<arg>${card}</arg>
<doc>It opens the modal for card_name in list_name</doc>
<kw name="Format String" library="String">
<var>${card_name_locator}</var>
<arg>${LIST_CARD_NAME}</arg>
<arg>list_name=${list_name}</arg>
<arg>card_name=${card_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:55:50.044" level="INFO">${card_name_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Test Card')]</msg>
<status status="PASS" starttime="20220704 14:55:50.044" endtime="20220704 14:55:50.044"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${card_name_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 14:55:50.045" endtime="20220704 14:55:50.137"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${card_name_locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 14:55:50.138" level="INFO">Clicking element '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Test Card')]'.</msg>
<status status="PASS" starttime="20220704 14:55:50.138" endtime="20220704 14:55:50.232"/>
</kw>
<status status="PASS" starttime="20220704 14:55:50.043" endtime="20220704 14:55:50.232"/>
</kw>
<kw name="Delete Current Card" library="CardModal">
<doc>The Keyword will first check if the card is archived,
if it's not, it will archive it to be able to delete it.</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${not_archived}</var>
<arg>Element Should Not Be Visible</arg>
<arg>${IS_ARCHIVED_MSG}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Element Should Not Be Visible" library="SeleniumLibrary">
<arg>${IS_ARCHIVED_MSG}</arg>
<doc>Verifies that the element identified by ``locator`` is NOT visible.</doc>
<msg timestamp="20220704 14:55:50.612" level="INFO">Element '//p[text()='This card is archived.']' did not exist.</msg>
<status status="PASS" starttime="20220704 14:55:50.234" endtime="20220704 14:55:50.612"/>
</kw>
<msg timestamp="20220704 14:55:50.612" level="INFO">${not_archived} = True</msg>
<status status="PASS" starttime="20220704 14:55:50.233" endtime="20220704 14:55:50.612"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${not_archived}</arg>
<arg>Archive Current Card</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Archive Current Card" library="CardModal">
<doc>Archives the current card from inside the modal.</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ARCHIVE_BUTTON}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 14:55:50.613" endtime="20220704 14:55:50.670"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${ARCHIVE_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 14:55:50.671" level="INFO">Clicking element '//span[@title='Archive']'.</msg>
<status status="PASS" starttime="20220704 14:55:50.670" endtime="20220704 14:55:50.813"/>
</kw>
<status status="PASS" starttime="20220704 14:55:50.613" endtime="20220704 14:55:50.813"/>
</kw>
<status status="PASS" starttime="20220704 14:55:50.612" endtime="20220704 14:55:50.813"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3</arg>
<arg>0.9</arg>
<arg>Click Element</arg>
<arg>${DELETE_BUTTON}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${DELETE_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 14:55:50.814" level="INFO">Clicking element '//a[@title='Delete']'.</msg>
<status status="PASS" starttime="20220704 14:55:50.814" endtime="20220704 14:55:50.970"/>
</kw>
<status status="PASS" starttime="20220704 14:55:50.813" endtime="20220704 14:55:50.970"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${DELETE_CONFIRM}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 14:55:50.971" level="INFO">Clicking element '//input[@value='Delete']'.</msg>
<status status="PASS" starttime="20220704 14:55:50.970" endtime="20220704 14:55:51.354"/>
</kw>
<status status="PASS" starttime="20220704 14:55:50.233" endtime="20220704 14:55:51.354"/>
</kw>
<kw name="Get Number Of Cards In List" library="ListComponent">
<var>${cards_after}</var>
<arg>${list}</arg>
<doc>Return the number of cards present in a given list.
required: list_name</doc>
<kw name="Format String" library="String">
<var>${card_anchor_locator}</var>
<arg>${CARD_ANCHORS}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:55:51.355" level="INFO">${card_anchor_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(@class, 'list-card')]</msg>
<status status="PASS" starttime="20220704 14:55:51.355" endtime="20220704 14:55:51.355"/>
</kw>
<kw name="Get Element Count" library="SeleniumLibrary">
<var>${n}</var>
<arg>${card_anchor_locator}</arg>
<doc>Returns the number of elements matching ``locator``.</doc>
<msg timestamp="20220704 14:55:51.395" level="INFO">${n} = 0</msg>
<status status="PASS" starttime="20220704 14:55:51.356" endtime="20220704 14:55:51.395"/>
</kw>
<return>
<value>${n}</value>
<status status="PASS" starttime="20220704 14:55:51.395" endtime="20220704 14:55:51.395"/>
</return>
<msg timestamp="20220704 14:55:51.395" level="INFO">${cards_after} = 0</msg>
<status status="PASS" starttime="20220704 14:55:51.354" endtime="20220704 14:55:51.395"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${cards_before} == ${cards_after}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220704 14:55:51.396" endtime="20220704 14:55:51.396"/>
</kw>
<doc>Verify that it is possible to delete a card
from inside the card modal.</doc>
<tag>card.delete</tag>
<tag>gui</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220704 14:55:49.430" endtime="20220704 14:55:51.396"/>
</test>
<test id="s1-s6-s1-s2-t5" name="Card Can Be Dragged To Another List" line="65">
<kw name="Set Test Variable" library="BuiltIn">
<arg>\${list}</arg>
<arg>To Do</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220704 14:55:51.399" level="INFO">${list} = To Do</msg>
<status status="PASS" starttime="20220704 14:55:51.399" endtime="20220704 14:55:51.400"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>\${card}</arg>
<arg>Test Card</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220704 14:55:51.400" level="INFO">${card} = Test Card</msg>
<status status="PASS" starttime="20220704 14:55:51.400" endtime="20220704 14:55:51.400"/>
</kw>
<kw name="Create Card In List" library="ListComponent">
<arg>${list}</arg>
<arg>${card}</arg>
<doc>Create a new card in the given list
Required args: list_name, card_name</doc>
<kw name="Format String" library="String">
<var>${add_card_locator}</var>
<arg>${LIST_ADD_CARD}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:55:51.401" level="INFO">${add_card_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Add a card')]</msg>
<status status="PASS" starttime="20220704 14:55:51.400" endtime="20220704 14:55:51.401"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${add_card_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 14:55:51.401" endtime="20220704 14:55:51.430"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${add_card_locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 14:55:51.431" level="INFO">Clicking element '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Add a card')]'.</msg>
<status status="PASS" starttime="20220704 14:55:51.431" endtime="20220704 14:55:51.507"/>
</kw>
<kw name="Format String" library="String">
<var>${textarea_locator}</var>
<arg>${CARD_TITLE_INPUT}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:55:51.508" level="INFO">${textarea_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//textarea[contains(@class, 'list-card-composer-textarea')]</msg>
<status status="PASS" starttime="20220704 14:55:51.508" endtime="20220704 14:55:51.508"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 14:55:51.508" endtime="20220704 14:55:51.552"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 14:55:51.552" level="INFO">Clicking element '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//textarea[contains(@class, 'list-card-composer-textarea')]'.</msg>
<status status="PASS" starttime="20220704 14:55:51.552" endtime="20220704 14:55:51.625"/>
</kw>
<kw name="Clear Element Text" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<doc>Clears the value of the text-input-element identified by ``locator``.</doc>
<status status="PASS" starttime="20220704 14:55:51.626" endtime="20220704 14:55:51.675"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<arg>${card_name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220704 14:55:51.675" level="INFO">Typing text 'Test Card' into text field '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//textarea[contains(@class, 'list-card-composer-textarea')]'.</msg>
<status status="PASS" starttime="20220704 14:55:51.675" endtime="20220704 14:55:52.059"/>
</kw>
<kw name="Format String" library="String">
<var>${confirm_locator}</var>
<arg>${CONFIRM_ADD_CARD}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:55:52.060" level="INFO">${confirm_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//input[@value='Add card']</msg>
<status status="PASS" starttime="20220704 14:55:52.059" endtime="20220704 14:55:52.060"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${confirm_locator}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220704 14:55:52.060" level="INFO">Clicking button '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//input[@value='Add card']'.</msg>
<status status="PASS" starttime="20220704 14:55:52.060" endtime="20220704 14:55:52.323"/>
</kw>
<status status="PASS" starttime="20220704 14:55:51.400" endtime="20220704 14:55:52.324"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>\${list2}</arg>
<arg>Doing</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220704 14:55:52.324" level="INFO">${list2} = Doing</msg>
<status status="PASS" starttime="20220704 14:55:52.324" endtime="20220704 14:55:52.324"/>
</kw>
<kw name="Drag Card From One List To Another" library="ListComponent">
<arg>${card}</arg>
<arg>${list}</arg>
<arg>${list2}</arg>
<doc>required: card_name, source_list_name, target_list_name</doc>
<kw name="Format String" library="String">
<var>${card_locator}</var>
<arg>${LIST_CARD_NAME}</arg>
<arg>list_name=${list1_name}</arg>
<arg>card_name=${card_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:55:52.326" level="INFO">${card_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Test Card')]</msg>
<status status="PASS" starttime="20220704 14:55:52.325" endtime="20220704 14:55:52.326"/>
</kw>
<kw name="Format String" library="String">
<var>${list2_locator}</var>
<arg>${LIST_DIV}</arg>
<arg>list_name=${list2_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:55:52.326" level="INFO">${list2_locator} = //h2[text()='Doing']//ancestor::div[contains(@class, 'list-content')]</msg>
<status status="PASS" starttime="20220704 14:55:52.326" endtime="20220704 14:55:52.326"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${card_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 14:55:52.327" endtime="20220704 14:55:52.520"/>
</kw>
<kw name="Drag And Drop" library="SeleniumLibrary">
<arg>${card_locator}</arg>
<arg>${list2_locator}</arg>
<doc>Drags the element identified by ``locator`` into the ``target`` element.</doc>
<status status="PASS" starttime="20220704 14:55:52.521" endtime="20220704 14:55:53.386"/>
</kw>
<status status="PASS" starttime="20220704 14:55:52.325" endtime="20220704 14:55:53.387"/>
</kw>
<kw name="Card Should Be In List" library="ListComponent">
<arg>${card}</arg>
<arg>${list2}</arg>
<doc>Check that a card is visible and in the given list
required: card_name, list_name</doc>
<kw name="Format String" library="String">
<var>${card_locator}</var>
<arg>${LIST_CARD_NAME}</arg>
<arg>list_name=${list_name}</arg>
<arg>card_name=${card_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:55:53.388" level="INFO">${card_locator} = //h2[text()='Doing']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Test Card')]</msg>
<status status="PASS" starttime="20220704 14:55:53.388" endtime="20220704 14:55:53.388"/>
</kw>
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<arg>${card_locator}</arg>
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<msg timestamp="20220704 14:55:53.499" level="INFO">Element '//h2[text()='Doing']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Test Card')]' is displayed.</msg>
<status status="PASS" starttime="20220704 14:55:53.388" endtime="20220704 14:55:53.500"/>
</kw>
<status status="PASS" starttime="20220704 14:55:53.387" endtime="20220704 14:55:53.500"/>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Go To Card Modal</arg>
<arg>${list2}</arg>
<arg>${card}</arg>
<arg>AND</arg>
<arg>Delete Current Card</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Go To Card Modal" library="ListComponent">
<arg>${list2}</arg>
<arg>${card}</arg>
<doc>It opens the modal for card_name in list_name</doc>
<kw name="Format String" library="String">
<var>${card_name_locator}</var>
<arg>${LIST_CARD_NAME}</arg>
<arg>list_name=${list_name}</arg>
<arg>card_name=${card_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:55:53.502" level="INFO">${card_name_locator} = //h2[text()='Doing']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Test Card')]</msg>
<status status="PASS" starttime="20220704 14:55:53.501" endtime="20220704 14:55:53.502"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${card_name_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 14:55:53.502" endtime="20220704 14:55:53.583"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${card_name_locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 14:55:53.584" level="INFO">Clicking element '//h2[text()='Doing']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Test Card')]'.</msg>
<status status="PASS" starttime="20220704 14:55:53.584" endtime="20220704 14:55:53.707"/>
</kw>
<status status="PASS" starttime="20220704 14:55:53.501" endtime="20220704 14:55:53.707"/>
</kw>
<kw name="Delete Current Card" library="CardModal">
<doc>The Keyword will first check if the card is archived,
if it's not, it will archive it to be able to delete it.</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${not_archived}</var>
<arg>Element Should Not Be Visible</arg>
<arg>${IS_ARCHIVED_MSG}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Element Should Not Be Visible" library="SeleniumLibrary">
<arg>${IS_ARCHIVED_MSG}</arg>
<doc>Verifies that the element identified by ``locator`` is NOT visible.</doc>
<msg timestamp="20220704 14:55:54.029" level="INFO">Element '//p[text()='This card is archived.']' did not exist.</msg>
<status status="PASS" starttime="20220704 14:55:53.708" endtime="20220704 14:55:54.029"/>
</kw>
<msg timestamp="20220704 14:55:54.029" level="INFO">${not_archived} = True</msg>
<status status="PASS" starttime="20220704 14:55:53.708" endtime="20220704 14:55:54.029"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${not_archived}</arg>
<arg>Archive Current Card</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Archive Current Card" library="CardModal">
<doc>Archives the current card from inside the modal.</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ARCHIVE_BUTTON}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 14:55:54.031" endtime="20220704 14:55:54.068"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${ARCHIVE_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 14:55:54.069" level="INFO">Clicking element '//span[@title='Archive']'.</msg>
<status status="PASS" starttime="20220704 14:55:54.069" endtime="20220704 14:55:54.165"/>
</kw>
<status status="PASS" starttime="20220704 14:55:54.030" endtime="20220704 14:55:54.165"/>
</kw>
<status status="PASS" starttime="20220704 14:55:54.030" endtime="20220704 14:55:54.166"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3</arg>
<arg>0.9</arg>
<arg>Click Element</arg>
<arg>${DELETE_BUTTON}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${DELETE_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 14:55:54.167" level="INFO">Clicking element '//a[@title='Delete']'.</msg>
<status status="PASS" starttime="20220704 14:55:54.166" endtime="20220704 14:55:54.270"/>
</kw>
<status status="PASS" starttime="20220704 14:55:54.166" endtime="20220704 14:55:54.270"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${DELETE_CONFIRM}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 14:55:54.271" level="INFO">Clicking element '//input[@value='Delete']'.</msg>
<status status="PASS" starttime="20220704 14:55:54.270" endtime="20220704 14:55:54.474"/>
</kw>
<status status="PASS" starttime="20220704 14:55:53.707" endtime="20220704 14:55:54.474"/>
</kw>
<status status="PASS" starttime="20220704 14:55:53.500" endtime="20220704 14:55:54.474"/>
</kw>
<doc>Verify that a card can be dragged from one list to another.</doc>
<tag>card.drag</tag>
<tag>gui</tag>
<tag>regression</tag>
<status status="PASS" starttime="20220704 14:55:51.398" endtime="20220704 14:55:54.475"/>
</test>
<test id="s1-s6-s1-s2-t6" name="Card Can Be Moved To Another Board" line="79">
<kw name="Create A Board" library="Board">
<var>${board2}</var>
<arg>CardTestBoard2</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 14:55:54.478" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 14:55:54.478" endtime="20220704 14:55:54.478"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 14:55:54.478" endtime="20220704 14:55:54.478"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:55:54.480" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220704 14:55:54.479" endtime="20220704 14:55:54.480"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 14:55:54.644" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:55:54.480" endtime="20220704 14:55:54.644"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:55:54.644" endtime="20220704 14:55:54.644"/>
</return>
<msg timestamp="20220704 14:55:54.645" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:55:54.477" endtime="20220704 14:55:54.645"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:55:54.645" endtime="20220704 14:55:54.645"/>
</return>
<msg timestamp="20220704 14:55:54.645" level="INFO">${board2} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:55:54.477" endtime="20220704 14:55:54.645"/>
</kw>
<kw name="Go Home" library="TrelloUpperMenu">
<doc>it goes to the gome page</doc>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${TRELLO_ICON}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220704 14:55:54.646" endtime="20220704 14:55:54.753"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${TRELLO_ICON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 14:55:54.754" level="INFO">Clicking element 'xpath://a[@aria-label='Back to home']'.</msg>
<status status="PASS" starttime="20220704 14:55:54.754" endtime="20220704 14:55:54.935"/>
</kw>
<status status="PASS" starttime="20220704 14:55:54.645" endtime="20220704 14:55:54.935"/>
</kw>
<kw name="Go To Board" library="BoardsPage">
<arg>CardTestBoard2</arg>
<doc>Receives the board name and goes to that board's page.</doc>
<kw name="Format String" library="String">
<var>${locator}</var>
<arg>${BOARD_BUTTON}</arg>
<arg>${board_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:55:54.936" level="INFO">${locator} = //div[@title="CardTestBoard2"]</msg>
<status status="PASS" starttime="20220704 14:55:54.936" endtime="20220704 14:55:54.936"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 14:55:54.936" endtime="20220704 14:55:55.270"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 14:55:55.271" level="INFO">Clicking element '//div[@title="CardTestBoard2"]'.</msg>
<status status="PASS" starttime="20220704 14:55:55.270" endtime="20220704 14:55:55.440"/>
</kw>
<status status="PASS" starttime="20220704 14:55:54.935" endtime="20220704 14:55:55.441"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>\${list}</arg>
<arg>To Do</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220704 14:55:55.441" level="INFO">${list} = To Do</msg>
<status status="PASS" starttime="20220704 14:55:55.441" endtime="20220704 14:55:55.441"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>\${card}</arg>
<arg>Test Card2</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220704 14:55:55.442" level="INFO">${card} = Test Card2</msg>
<status status="PASS" starttime="20220704 14:55:55.442" endtime="20220704 14:55:55.442"/>
</kw>
<kw name="Create Card In List" library="ListComponent">
<arg>${list}</arg>
<arg>${card}</arg>
<doc>Create a new card in the given list
Required args: list_name, card_name</doc>
<kw name="Format String" library="String">
<var>${add_card_locator}</var>
<arg>${LIST_ADD_CARD}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:55:55.443" level="INFO">${add_card_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Add a card')]</msg>
<status status="PASS" starttime="20220704 14:55:55.442" endtime="20220704 14:55:55.443"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${add_card_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 14:55:55.443" endtime="20220704 14:55:55.965"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${add_card_locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 14:55:55.966" level="INFO">Clicking element '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Add a card')]'.</msg>
<status status="PASS" starttime="20220704 14:55:55.965" endtime="20220704 14:55:56.054"/>
</kw>
<kw name="Format String" library="String">
<var>${textarea_locator}</var>
<arg>${CARD_TITLE_INPUT}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:55:56.055" level="INFO">${textarea_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//textarea[contains(@class, 'list-card-composer-textarea')]</msg>
<status status="PASS" starttime="20220704 14:55:56.054" endtime="20220704 14:55:56.055"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 14:55:56.055" endtime="20220704 14:55:56.112"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 14:55:56.113" level="INFO">Clicking element '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//textarea[contains(@class, 'list-card-composer-textarea')]'.</msg>
<status status="PASS" starttime="20220704 14:55:56.113" endtime="20220704 14:55:56.169"/>
</kw>
<kw name="Clear Element Text" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<doc>Clears the value of the text-input-element identified by ``locator``.</doc>
<status status="PASS" starttime="20220704 14:55:56.169" endtime="20220704 14:55:56.209"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<arg>${card_name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220704 14:55:56.210" level="INFO">Typing text 'Test Card2' into text field '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//textarea[contains(@class, 'list-card-composer-textarea')]'.</msg>
<status status="PASS" starttime="20220704 14:55:56.209" endtime="20220704 14:55:56.338"/>
</kw>
<kw name="Format String" library="String">
<var>${confirm_locator}</var>
<arg>${CONFIRM_ADD_CARD}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:55:56.339" level="INFO">${confirm_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//input[@value='Add card']</msg>
<status status="PASS" starttime="20220704 14:55:56.338" endtime="20220704 14:55:56.339"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${confirm_locator}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220704 14:55:56.339" level="INFO">Clicking button '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//input[@value='Add card']'.</msg>
<status status="PASS" starttime="20220704 14:55:56.339" endtime="20220704 14:55:56.451"/>
</kw>
<status status="PASS" starttime="20220704 14:55:55.442" endtime="20220704 14:55:56.452"/>
</kw>
<kw name="Go To Card Modal" library="ListComponent">
<arg>${list}</arg>
<arg>${card}</arg>
<doc>It opens the modal for card_name in list_name</doc>
<kw name="Format String" library="String">
<var>${card_name_locator}</var>
<arg>${LIST_CARD_NAME}</arg>
<arg>list_name=${list_name}</arg>
<arg>card_name=${card_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:55:56.453" level="INFO">${card_name_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Test Card2')]</msg>
<status status="PASS" starttime="20220704 14:55:56.453" endtime="20220704 14:55:56.453"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${card_name_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 14:55:56.453" endtime="20220704 14:55:56.512"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${card_name_locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 14:55:56.513" level="INFO">Clicking element '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Test Card2')]'.</msg>
<status status="PASS" starttime="20220704 14:55:56.513" endtime="20220704 14:55:56.567"/>
</kw>
<status status="PASS" starttime="20220704 14:55:56.452" endtime="20220704 14:55:56.567"/>
</kw>
<kw name="Move Card To Another Board" library="CardModal">
<arg>CardTestBoard</arg>
<doc>Moves the card using the "name of destination board"
required: name (name of the destination board)</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${MOVE_BUTTON}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 14:55:56.568" endtime="20220704 14:55:56.880"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${MOVE_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 14:55:56.881" level="INFO">Clicking element '//a[@title='Move']'.</msg>
<status status="PASS" starttime="20220704 14:55:56.881" endtime="20220704 14:55:56.972"/>
</kw>
<kw name="Select From List By Label" library="SeleniumLibrary">
<arg>${SELECT_DESTINATION}</arg>
<arg>${name_of_destination_board}</arg>
<doc>Selects options from selection list ``locator`` by ``labels``.</doc>
<msg timestamp="20220704 14:55:56.973" level="INFO">Selecting options from selection list '//select[@data-test-id='move-board-select']' by label CardTestBoard.</msg>
<status status="PASS" starttime="20220704 14:55:56.972" endtime="20220704 14:55:57.140"/>
</kw>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${ACCEPT_MOVE_BUTTON}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220704 14:55:57.140" endtime="20220704 14:55:57.454"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${ACCEPT_MOVE_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 14:55:57.455" level="INFO">Clicking element '//input[@value="Move"]'.</msg>
<status status="PASS" starttime="20220704 14:55:57.454" endtime="20220704 14:55:57.634"/>
</kw>
<kw name="Wait Until Element Is Not Visible" library="SeleniumLibrary">
<arg>${ARCHIVE_BUTTON}</arg>
<doc>Waits until the element ``locator`` is not visible.</doc>
<status status="PASS" starttime="20220704 14:55:57.635" endtime="20220704 14:55:57.656"/>
</kw>
<status status="PASS" starttime="20220704 14:55:56.567" endtime="20220704 14:55:57.656"/>
</kw>
<kw name="Get Number Of Cards In List" library="ListComponent">
<var>${Cards_On_list}</var>
<arg>To Do</arg>
<doc>Return the number of cards present in a given list.
required: list_name</doc>
<kw name="Format String" library="String">
<var>${card_anchor_locator}</var>
<arg>${CARD_ANCHORS}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:55:57.658" level="INFO">${card_anchor_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(@class, 'list-card')]</msg>
<status status="PASS" starttime="20220704 14:55:57.657" endtime="20220704 14:55:57.658"/>
</kw>
<kw name="Get Element Count" library="SeleniumLibrary">
<var>${n}</var>
<arg>${card_anchor_locator}</arg>
<doc>Returns the number of elements matching ``locator``.</doc>
<msg timestamp="20220704 14:55:57.672" level="INFO">${n} = 0</msg>
<status status="PASS" starttime="20220704 14:55:57.658" endtime="20220704 14:55:57.672"/>
</kw>
<return>
<value>${n}</value>
<status status="PASS" starttime="20220704 14:55:57.672" endtime="20220704 14:55:57.672"/>
</return>
<msg timestamp="20220704 14:55:57.672" level="INFO">${Cards_On_list} = 0</msg>
<status status="PASS" starttime="20220704 14:55:57.657" endtime="20220704 14:55:57.672"/>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<var>${0}</var>
<arg>0</arg>
<doc>Converts the given item to an integer number.</doc>
<msg timestamp="20220704 14:55:57.673" level="INFO">${0} = 0</msg>
<status status="PASS" starttime="20220704 14:55:57.673" endtime="20220704 14:55:57.673"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${Cards_On_list}</arg>
<arg>${0}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220704 14:55:57.673" endtime="20220704 14:55:57.673"/>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Close Browser</arg>
<arg>AND</arg>
<arg>Wait Until Keyword Succeeds</arg>
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${board2.json()}[id]</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20220704 14:55:57.674" endtime="20220704 14:55:57.759"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${board2.json()}[id]</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${board2.json()}[id]</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:55:57.763" level="INFO">${url} = boards/62c2ff7af6455949fec36b6c</msg>
<status status="PASS" starttime="20220704 14:55:57.762" endtime="20220704 14:55:57.763"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 14:55:57.811" level="INFO">${response} = None</msg>
<msg timestamp="20220704 14:55:57.811" level="FAIL">InvalidExpectedStatus: it was expected the status 200 but the status was 429</msg>
<status status="FAIL" starttime="20220704 14:55:57.763" endtime="20220704 14:55:57.812"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:55:57.812" endtime="20220704 14:55:57.812"/>
</return>
<msg timestamp="20220704 14:55:57.812" level="INFO">${response} = None</msg>
<status status="FAIL" starttime="20220704 14:55:57.762" endtime="20220704 14:55:57.812"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:55:57.812" endtime="20220704 14:55:57.812"/>
</return>
<status status="FAIL" starttime="20220704 14:55:57.760" endtime="20220704 14:55:57.813"/>
</kw>
<kw name="Delete A Board" library="Board">
<arg>${board2.json()}[id]</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:56:00.317" level="INFO">${url} = boards/62c2ff7af6455949fec36b6c</msg>
<status status="PASS" starttime="20220704 14:56:00.316" endtime="20220704 14:56:00.317"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 14:56:00.672" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:56:00.317" endtime="20220704 14:56:00.672"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:56:00.672" endtime="20220704 14:56:00.672"/>
</return>
<msg timestamp="20220704 14:56:00.673" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:56:00.316" endtime="20220704 14:56:00.673"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:56:00.673" endtime="20220704 14:56:00.673"/>
</return>
<status status="PASS" starttime="20220704 14:56:00.313" endtime="20220704 14:56:00.673"/>
</kw>
<status status="PASS" starttime="20220704 14:55:57.759" endtime="20220704 14:56:00.673"/>
</kw>
<status status="PASS" starttime="20220704 14:55:57.673" endtime="20220704 14:56:00.673"/>
</kw>
<doc>Creates a new board through API, then goes to the
second board, creates a card and moves it to the other board</doc>
<tag>card.move</tag>
<tag>gui</tag>
<tag>regression</tag>
<status status="PASS" starttime="20220704 14:55:54.475" endtime="20220704 14:56:00.673"/>
</test>
<kw name="Cards Suite Teardown" type="TEARDOWN">
<doc>Deletes the created board through API and closes all browsers.</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:56:00.678" level="INFO">${url} = boards/62c2ff6610587d01e72669a6</msg>
<status status="PASS" starttime="20220704 14:56:00.678" endtime="20220704 14:56:00.678"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 14:56:01.038" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:56:00.678" endtime="20220704 14:56:01.038"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:56:01.038" endtime="20220704 14:56:01.038"/>
</return>
<msg timestamp="20220704 14:56:01.038" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:56:00.677" endtime="20220704 14:56:01.038"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:56:01.038" endtime="20220704 14:56:01.038"/>
</return>
<status status="PASS" starttime="20220704 14:56:00.676" endtime="20220704 14:56:01.039"/>
</kw>
<status status="PASS" starttime="20220704 14:56:00.675" endtime="20220704 14:56:01.039"/>
</kw>
<kw name="Delete All Sessions" library="request_own_library">
<status status="PASS" starttime="20220704 14:56:01.039" endtime="20220704 14:56:01.040"/>
</kw>
<kw name="Close All Browsers" library="SeleniumLibrary">
<doc>Closes all open browsers and resets the browser cache.</doc>
<status status="PASS" starttime="20220704 14:56:01.041" endtime="20220704 14:56:01.041"/>
</kw>
<status status="PASS" starttime="20220704 14:56:00.675" endtime="20220704 14:56:01.041"/>
</kw>
<doc>Test Cases for Cards Feature</doc>
<status status="PASS" starttime="20220704 14:55:34.637" endtime="20220704 14:56:01.041"/>
</suite>
<suite id="s1-s6-s1-s3" name="Trello Gui Labels" source="/trello/gui/trello_gui_labels.robot">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Create Trello Session</arg>
<arg>Setup Board</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Create Trello Session" library="TrelloAPI">
<doc>Creates a Trello Session</doc>
<kw name="Create Session" library="request_own_library">
<arg>${API_BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<status status="PASS" starttime="20220704 14:56:01.064" endtime="20220704 14:56:01.065"/>
</kw>
<status status="PASS" starttime="20220704 14:56:01.064" endtime="20220704 14:56:01.065"/>
</kw>
<kw name="Setup Board">
<doc>Creates a board and saves its ID</doc>
<kw name="Create A Board" library="Board">
<var>${BOARD}</var>
<arg>TestBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 14:56:01.066" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 14:56:01.066" endtime="20220704 14:56:01.066"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 14:56:01.066" endtime="20220704 14:56:01.066"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:56:01.068" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220704 14:56:01.067" endtime="20220704 14:56:01.068"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 14:56:01.291" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:56:01.068" endtime="20220704 14:56:01.291"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:56:01.291" endtime="20220704 14:56:01.291"/>
</return>
<msg timestamp="20220704 14:56:01.291" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:56:01.065" endtime="20220704 14:56:01.291"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:56:01.291" endtime="20220704 14:56:01.291"/>
</return>
<msg timestamp="20220704 14:56:01.292" level="INFO">${BOARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:56:01.065" endtime="20220704 14:56:01.292"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_BOARD_ID}</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220704 14:56:01.293" level="INFO">${TEST_SUITE_BOARD_ID} = 62c2ff812b644313ee00dae3</msg>
<status status="PASS" starttime="20220704 14:56:01.292" endtime="20220704 14:56:01.294"/>
</kw>
<status status="PASS" starttime="20220704 14:56:01.065" endtime="20220704 14:56:01.294"/>
</kw>
<status status="PASS" starttime="20220704 14:56:01.063" endtime="20220704 14:56:01.294"/>
</kw>
<test id="s1-s6-s1-s3-t1" name="filter label" line="21">
<kw name="Open Browser From Environment" library="CommonGUI">
<arg>${LOGIN_URL}</arg>
<doc>This keywords takes REMOTE and BROWSER variables
from the environment automatically and only needs a url</doc>
<if>
<branch type="IF" condition="${is_remote}">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${url}</arg>
<arg>${BROWSER}</arg>
<arg>remote_url=http://selenium-hub:4444</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20220704 14:56:01.296" level="INFO">Opening browser 'chrome' to base url 'https://trello.com/login' through remote server at 'http://selenium-hub:4444'.</msg>
<status status="PASS" starttime="20220704 14:56:01.296" endtime="20220704 14:56:02.637"/>
</kw>
<status status="PASS" starttime="20220704 14:56:01.295" endtime="20220704 14:56:02.637"/>
</branch>
<branch type="ELSE">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${url}</arg>
<arg>${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<status status="NOT RUN" starttime="20220704 14:56:02.638" endtime="20220704 14:56:02.638"/>
</kw>
<status status="NOT RUN" starttime="20220704 14:56:02.637" endtime="20220704 14:56:02.638"/>
</branch>
<status status="PASS" starttime="20220704 14:56:01.295" endtime="20220704 14:56:02.638"/>
</if>
<status status="PASS" starttime="20220704 14:56:01.295" endtime="20220704 14:56:02.638"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20220704 14:56:02.638" endtime="20220704 14:56:02.763"/>
</kw>
<kw name="Login To Trello" library="LoginPage">
<arg>${DEFAULT_EMAIL}</arg>
<arg>${DEFAULT_PASSWORD}</arg>
<doc>High-level keyword for logging in to Trello</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220704 14:56:02.794" level="INFO">${url} = https://trello.com/login</msg>
<status status="PASS" starttime="20220704 14:56:02.765" endtime="20220704 14:56:02.794"/>
</kw>
<if>
<branch type="IF" condition="'${url}' != '${LOGIN_URL}'">
<kw name="Go To" library="SeleniumLibrary">
<arg>${LOGIN_URL}</arg>
<doc>Navigates the current browser window to the provided ``url``.</doc>
<status status="NOT RUN" starttime="20220704 14:56:02.795" endtime="20220704 14:56:02.795"/>
</kw>
<status status="NOT RUN" starttime="20220704 14:56:02.795" endtime="20220704 14:56:02.795"/>
</branch>
<status status="PASS" starttime="20220704 14:56:02.794" endtime="20220704 14:56:02.795"/>
</if>
<kw name="Enter Username" library="LoginPage">
<arg>${username}</arg>
<doc>Take a username as argument and
enters it in the user_input</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${USER_INPUT}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 14:56:02.796" endtime="20220704 14:56:02.848"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${USER_INPUT}</arg>
<arg>${username}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220704 14:56:02.848" level="INFO">Typing text 'bootcamp04@mailinator.com' into text field 'css:input#user'.</msg>
<status status="PASS" starttime="20220704 14:56:02.848" endtime="20220704 14:56:02.976"/>
</kw>
<status status="PASS" starttime="20220704 14:56:02.795" endtime="20220704 14:56:02.976"/>
</kw>
<kw name="Wait Until Element Is Not Visible" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<doc>Waits until the element ``locator`` is not visible.</doc>
<status status="PASS" starttime="20220704 14:56:02.977" endtime="20220704 14:56:03.535"/>
</kw>
<kw name="Click Login Button" library="LoginPage">
<doc>Clicks Trello's login button if in Trello's
login page, else it clicks Atlassian's</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220704 14:56:03.545" level="INFO">${url} = https://trello.com/login</msg>
<status status="PASS" starttime="20220704 14:56:03.536" endtime="20220704 14:56:03.545"/>
</kw>
<if>
<branch type="IF" condition="'${url}' == '${LOGIN_URL}'">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220704 14:56:03.546" endtime="20220704 14:56:03.597"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220704 14:56:03.598" level="INFO">Clicking button 'css:input#login'.</msg>
<status status="PASS" starttime="20220704 14:56:03.597" endtime="20220704 14:56:04.570"/>
</kw>
<status status="PASS" starttime="20220704 14:56:03.546" endtime="20220704 14:56:04.570"/>
</branch>
<branch type="ELSE">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="NOT RUN" starttime="20220704 14:56:04.571" endtime="20220704 14:56:04.571"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<status status="NOT RUN" starttime="20220704 14:56:04.571" endtime="20220704 14:56:04.571"/>
</kw>
<status status="NOT RUN" starttime="20220704 14:56:04.570" endtime="20220704 14:56:04.571"/>
</branch>
<status status="PASS" starttime="20220704 14:56:03.545" endtime="20220704 14:56:04.571"/>
</if>
<status status="PASS" starttime="20220704 14:56:03.536" endtime="20220704 14:56:04.571"/>
</kw>
<kw name="Wait Until Location Is Atlassian's Login" library="LoginPage">
<doc>Waits for the page redirection when logging in.</doc>
<kw name="Wait Until Location Contains" library="SeleniumLibrary">
<arg>atlassian.com</arg>
<doc>Waits until the current URL contains ``expected``.</doc>
<status status="PASS" starttime="20220704 14:56:04.572" endtime="20220704 14:56:04.588"/>
</kw>
<status status="PASS" starttime="20220704 14:56:04.571" endtime="20220704 14:56:04.588"/>
</kw>
<kw name="Enter Password" library="LoginPage">
<arg>${password}</arg>
<doc>Take a password as argument and
enters it in the password_input</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<arg>timeout=10</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 14:56:04.589" endtime="20220704 14:56:04.665"/>
</kw>
<kw name="Input Password" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<arg>${password}</arg>
<doc>Types the given password into the text field identified by ``locator``.</doc>
<msg timestamp="20220704 14:56:04.666" level="INFO">Typing password into text field 'css:input#password'.</msg>
<msg timestamp="20220704 14:56:04.726" level="INFO">Temporally setting log level to: NONE</msg>
<msg timestamp="20220704 14:56:04.802" level="INFO">Log level changed from NONE to INFO.</msg>
<status status="PASS" starttime="20220704 14:56:04.665" endtime="20220704 14:56:04.802"/>
</kw>
<status status="PASS" starttime="20220704 14:56:04.588" endtime="20220704 14:56:04.803"/>
</kw>
<kw name="Click Login Button" library="LoginPage">
<doc>Clicks Trello's login button if in Trello's
login page, else it clicks Atlassian's</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220704 14:56:04.824" level="INFO">${url} = https://id.atlassian.com/login?application=trello&amp;continue=https%3A%2F%2Ftrello.com%2Fauth%2Fatlassian%2Fcallback%3FreturnUrl%3D%252F%26display%3D%26aaOnboarding%3D%26updateEmail%3D%26traceId%3D62c2ff...</msg>
<status status="PASS" starttime="20220704 14:56:04.803" endtime="20220704 14:56:04.824"/>
</kw>
<if>
<branch type="IF" condition="'${url}' == '${LOGIN_URL}'">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="NOT RUN" starttime="20220704 14:56:04.825" endtime="20220704 14:56:04.825"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<status status="NOT RUN" starttime="20220704 14:56:04.825" endtime="20220704 14:56:04.825"/>
</kw>
<status status="NOT RUN" starttime="20220704 14:56:04.824" endtime="20220704 14:56:04.825"/>
</branch>
<branch type="ELSE">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220704 14:56:04.825" endtime="20220704 14:56:04.900"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220704 14:56:04.900" level="INFO">Clicking button 'css:button#login-submit'.</msg>
<status status="PASS" starttime="20220704 14:56:04.900" endtime="20220704 14:56:05.030"/>
</kw>
<status status="PASS" starttime="20220704 14:56:04.825" endtime="20220704 14:56:05.030"/>
</branch>
<status status="PASS" starttime="20220704 14:56:04.824" endtime="20220704 14:56:05.030"/>
</if>
<status status="PASS" starttime="20220704 14:56:04.803" endtime="20220704 14:56:05.030"/>
</kw>
<status status="PASS" starttime="20220704 14:56:02.764" endtime="20220704 14:56:05.030"/>
</kw>
<kw name="Go To Board" library="BoardsPage">
<arg>TestBoard</arg>
<doc>Receives the board name and goes to that board's page.</doc>
<kw name="Format String" library="String">
<var>${locator}</var>
<arg>${BOARD_BUTTON}</arg>
<arg>${board_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:56:05.031" level="INFO">${locator} = //div[@title="TestBoard"]</msg>
<status status="PASS" starttime="20220704 14:56:05.031" endtime="20220704 14:56:05.031"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 14:56:05.031" endtime="20220704 14:56:08.501"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 14:56:08.502" level="INFO">Clicking element '//div[@title="TestBoard"]'.</msg>
<status status="PASS" starttime="20220704 14:56:08.501" endtime="20220704 14:56:09.248"/>
</kw>
<status status="PASS" starttime="20220704 14:56:05.030" endtime="20220704 14:56:09.248"/>
</kw>
<kw name="Create Card In List" library="ListComponent">
<arg>To Do</arg>
<arg>card1</arg>
<doc>Create a new card in the given list
Required args: list_name, card_name</doc>
<kw name="Format String" library="String">
<var>${add_card_locator}</var>
<arg>${LIST_ADD_CARD}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:56:09.249" level="INFO">${add_card_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Add a card')]</msg>
<status status="PASS" starttime="20220704 14:56:09.249" endtime="20220704 14:56:09.249"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${add_card_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 14:56:09.250" endtime="20220704 14:56:10.035"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${add_card_locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 14:56:10.036" level="INFO">Clicking element '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Add a card')]'.</msg>
<status status="PASS" starttime="20220704 14:56:10.036" endtime="20220704 14:56:10.162"/>
</kw>
<kw name="Format String" library="String">
<var>${textarea_locator}</var>
<arg>${CARD_TITLE_INPUT}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:56:10.163" level="INFO">${textarea_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//textarea[contains(@class, 'list-card-composer-textarea')]</msg>
<status status="PASS" starttime="20220704 14:56:10.163" endtime="20220704 14:56:10.163"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 14:56:10.164" endtime="20220704 14:56:10.214"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 14:56:10.215" level="INFO">Clicking element '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//textarea[contains(@class, 'list-card-composer-textarea')]'.</msg>
<status status="PASS" starttime="20220704 14:56:10.214" endtime="20220704 14:56:10.332"/>
</kw>
<kw name="Clear Element Text" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<doc>Clears the value of the text-input-element identified by ``locator``.</doc>
<status status="PASS" starttime="20220704 14:56:10.332" endtime="20220704 14:56:10.423"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<arg>${card_name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220704 14:56:10.424" level="INFO">Typing text 'card1' into text field '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//textarea[contains(@class, 'list-card-composer-textarea')]'.</msg>
<status status="PASS" starttime="20220704 14:56:10.423" endtime="20220704 14:56:10.544"/>
</kw>
<kw name="Format String" library="String">
<var>${confirm_locator}</var>
<arg>${CONFIRM_ADD_CARD}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:56:10.545" level="INFO">${confirm_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//input[@value='Add card']</msg>
<status status="PASS" starttime="20220704 14:56:10.545" endtime="20220704 14:56:10.545"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${confirm_locator}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220704 14:56:10.546" level="INFO">Clicking button '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//input[@value='Add card']'.</msg>
<status status="PASS" starttime="20220704 14:56:10.545" endtime="20220704 14:56:10.675"/>
</kw>
<status status="PASS" starttime="20220704 14:56:09.248" endtime="20220704 14:56:10.675"/>
</kw>
<kw name="Click pencil menu" library="ListComponent">
<arg>To Do</arg>
<arg>card1</arg>
<doc>Adds a label to an specific card</doc>
<kw name="Format String" library="String">
<var>${card_element}</var>
<arg>${LIST_CARD_NAME}</arg>
<arg>list_name=${list_name}</arg>
<arg>card_name=${card_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:56:10.676" level="INFO">${card_element} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'card1')]</msg>
<status status="PASS" starttime="20220704 14:56:10.676" endtime="20220704 14:56:10.676"/>
</kw>
<kw name="Format String" library="String">
<var>${pencil_locator}</var>
<arg>${PENCIL_ICON}</arg>
<arg>list_name=${list_name}</arg>
<arg>card_name=${card_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:56:10.677" level="INFO">${pencil_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'card1')]//span[contains(@class, 'icon-edit')]</msg>
<status status="PASS" starttime="20220704 14:56:10.677" endtime="20220704 14:56:10.677"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${card_element}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 14:56:10.677" endtime="20220704 14:56:10.741"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20220704 14:56:15.742" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20220704 14:56:10.742" endtime="20220704 14:56:15.743"/>
</kw>
<kw name="Mouse Over" library="SeleniumLibrary">
<arg>${card_element}</arg>
<doc>Simulates hovering the mouse over the element ``locator``.</doc>
<msg timestamp="20220704 14:56:15.743" level="INFO">Simulating Mouse Over on element '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'card1')]'.</msg>
<status status="PASS" starttime="20220704 14:56:15.743" endtime="20220704 14:56:16.045"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20220704 14:56:21.046" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20220704 14:56:16.046" endtime="20220704 14:56:21.047"/>
</kw>
<kw name="Wait Until Page Contains Element" library="SeleniumLibrary">
<arg>${pencil_locator}</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" starttime="20220704 14:56:21.047" endtime="20220704 14:56:21.068"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${pencil_locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 14:56:21.069" level="INFO">Clicking element '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'card1')]//span[contains(@class, 'icon-edit')]'.</msg>
<status status="PASS" starttime="20220704 14:56:21.068" endtime="20220704 14:56:21.176"/>
</kw>
<status status="PASS" starttime="20220704 14:56:10.675" endtime="20220704 14:56:21.176"/>
</kw>
<kw name="Add Color Label In Card" library="CardModal">
<arg>yellow</arg>
<doc>add label of a given color to a list</doc>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${EDIT_LABEL}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220704 14:56:21.177" endtime="20220704 14:56:21.242"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${EDIT_LABEL}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 14:56:21.243" level="INFO">Clicking element '//a[contains(@class,'js-edit-labels')]'.</msg>
<status status="PASS" starttime="20220704 14:56:21.242" endtime="20220704 14:56:21.341"/>
</kw>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LABEL_INPUT}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220704 14:56:21.342" endtime="20220704 14:56:21.392"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${LABEL_INPUT}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 14:56:21.393" level="INFO">Clicking element '//input[contains(@class,"js-autofocus")]'.</msg>
<status status="PASS" starttime="20220704 14:56:21.393" endtime="20220704 14:56:21.453"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${LABEL_INPUT}</arg>
<arg>${color}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220704 14:56:21.454" level="INFO">Typing text 'yellow' into text field '//input[contains(@class,"js-autofocus")]'.</msg>
<status status="PASS" starttime="20220704 14:56:21.454" endtime="20220704 14:56:21.548"/>
</kw>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LABEL_INPUT}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220704 14:56:21.548" endtime="20220704 14:56:21.628"/>
</kw>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>${LABEL_INPUT}</arg>
<arg>RETURN</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20220704 14:56:21.630" level="INFO">Sending key(s) ('RETURN',) to //input[contains(@class,"js-autofocus")] element.</msg>
<msg timestamp="20220704 14:56:21.913" level="INFO">Pressing special key RETURN to element.</msg>
<msg timestamp="20220704 14:56:21.914" level="INFO">Releasing special key RETURN.</msg>
<status status="PASS" starttime="20220704 14:56:21.629" endtime="20220704 14:56:21.953"/>
</kw>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>None</arg>
<arg>ESCAPE</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20220704 14:56:21.954" level="INFO">Sending key(s) ('ESCAPE',) to page.</msg>
<msg timestamp="20220704 14:56:21.954" level="INFO">Pressing special key ESCAPE to browser.</msg>
<msg timestamp="20220704 14:56:21.954" level="INFO">Releasing special key ESCAPE.</msg>
<status status="PASS" starttime="20220704 14:56:21.953" endtime="20220704 14:56:21.991"/>
</kw>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>None</arg>
<arg>ESCAPE</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20220704 14:56:21.992" level="INFO">Sending key(s) ('ESCAPE',) to page.</msg>
<msg timestamp="20220704 14:56:21.993" level="INFO">Pressing special key ESCAPE to browser.</msg>
<msg timestamp="20220704 14:56:21.993" level="INFO">Releasing special key ESCAPE.</msg>
<status status="PASS" starttime="20220704 14:56:21.992" endtime="20220704 14:56:22.013"/>
</kw>
<status status="PASS" starttime="20220704 14:56:21.177" endtime="20220704 14:56:22.014"/>
</kw>
<kw name="Create Card In List" library="ListComponent">
<arg>Doing</arg>
<arg>card2</arg>
<doc>Create a new card in the given list
Required args: list_name, card_name</doc>
<kw name="Format String" library="String">
<var>${add_card_locator}</var>
<arg>${LIST_ADD_CARD}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:56:22.015" level="INFO">${add_card_locator} = //h2[text()='Doing']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Add a card')]</msg>
<status status="PASS" starttime="20220704 14:56:22.015" endtime="20220704 14:56:22.015"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${add_card_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 14:56:22.016" endtime="20220704 14:56:22.048"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${add_card_locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 14:56:22.049" level="INFO">Clicking element '//h2[text()='Doing']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Add a card')]'.</msg>
<status status="PASS" starttime="20220704 14:56:22.049" endtime="20220704 14:56:22.133"/>
</kw>
<kw name="Format String" library="String">
<var>${textarea_locator}</var>
<arg>${CARD_TITLE_INPUT}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:56:22.134" level="INFO">${textarea_locator} = //h2[text()='Doing']//ancestor::div[contains(@class, 'list-content')]//textarea[contains(@class, 'list-card-composer-textarea')]</msg>
<status status="PASS" starttime="20220704 14:56:22.133" endtime="20220704 14:56:22.134"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 14:56:22.134" endtime="20220704 14:56:22.180"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 14:56:22.181" level="INFO">Clicking element '//h2[text()='Doing']//ancestor::div[contains(@class, 'list-content')]//textarea[contains(@class, 'list-card-composer-textarea')]'.</msg>
<status status="PASS" starttime="20220704 14:56:22.180" endtime="20220704 14:56:22.242"/>
</kw>
<kw name="Clear Element Text" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<doc>Clears the value of the text-input-element identified by ``locator``.</doc>
<status status="PASS" starttime="20220704 14:56:22.243" endtime="20220704 14:56:22.282"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<arg>${card_name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220704 14:56:22.283" level="INFO">Typing text 'card2' into text field '//h2[text()='Doing']//ancestor::div[contains(@class, 'list-content')]//textarea[contains(@class, 'list-card-composer-textarea')]'.</msg>
<status status="PASS" starttime="20220704 14:56:22.283" endtime="20220704 14:56:22.360"/>
</kw>
<kw name="Format String" library="String">
<var>${confirm_locator}</var>
<arg>${CONFIRM_ADD_CARD}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:56:22.361" level="INFO">${confirm_locator} = //h2[text()='Doing']//ancestor::div[contains(@class, 'list-content')]//input[@value='Add card']</msg>
<status status="PASS" starttime="20220704 14:56:22.361" endtime="20220704 14:56:22.361"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${confirm_locator}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220704 14:56:22.362" level="INFO">Clicking button '//h2[text()='Doing']//ancestor::div[contains(@class, 'list-content')]//input[@value='Add card']'.</msg>
<status status="PASS" starttime="20220704 14:56:22.361" endtime="20220704 14:56:22.428"/>
</kw>
<status status="PASS" starttime="20220704 14:56:22.014" endtime="20220704 14:56:22.428"/>
</kw>
<kw name="Create Card In List" library="ListComponent">
<arg>Done</arg>
<arg>card3</arg>
<doc>Create a new card in the given list
Required args: list_name, card_name</doc>
<kw name="Format String" library="String">
<var>${add_card_locator}</var>
<arg>${LIST_ADD_CARD}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:56:22.429" level="INFO">${add_card_locator} = //h2[text()='Done']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Add a card')]</msg>
<status status="PASS" starttime="20220704 14:56:22.429" endtime="20220704 14:56:22.429"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${add_card_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 14:56:22.429" endtime="20220704 14:56:22.492"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${add_card_locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 14:56:22.493" level="INFO">Clicking element '//h2[text()='Done']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Add a card')]'.</msg>
<status status="PASS" starttime="20220704 14:56:22.493" endtime="20220704 14:56:22.588"/>
</kw>
<kw name="Format String" library="String">
<var>${textarea_locator}</var>
<arg>${CARD_TITLE_INPUT}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:56:22.589" level="INFO">${textarea_locator} = //h2[text()='Done']//ancestor::div[contains(@class, 'list-content')]//textarea[contains(@class, 'list-card-composer-textarea')]</msg>
<status status="PASS" starttime="20220704 14:56:22.588" endtime="20220704 14:56:22.589"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 14:56:22.589" endtime="20220704 14:56:22.676"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 14:56:22.677" level="INFO">Clicking element '//h2[text()='Done']//ancestor::div[contains(@class, 'list-content')]//textarea[contains(@class, 'list-card-composer-textarea')]'.</msg>
<status status="PASS" starttime="20220704 14:56:22.676" endtime="20220704 14:56:22.731"/>
</kw>
<kw name="Clear Element Text" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<doc>Clears the value of the text-input-element identified by ``locator``.</doc>
<status status="PASS" starttime="20220704 14:56:22.731" endtime="20220704 14:56:22.769"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<arg>${card_name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220704 14:56:22.769" level="INFO">Typing text 'card3' into text field '//h2[text()='Done']//ancestor::div[contains(@class, 'list-content')]//textarea[contains(@class, 'list-card-composer-textarea')]'.</msg>
<status status="PASS" starttime="20220704 14:56:22.769" endtime="20220704 14:56:22.852"/>
</kw>
<kw name="Format String" library="String">
<var>${confirm_locator}</var>
<arg>${CONFIRM_ADD_CARD}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:56:22.853" level="INFO">${confirm_locator} = //h2[text()='Done']//ancestor::div[contains(@class, 'list-content')]//input[@value='Add card']</msg>
<status status="PASS" starttime="20220704 14:56:22.852" endtime="20220704 14:56:22.853"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${confirm_locator}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220704 14:56:22.853" level="INFO">Clicking button '//h2[text()='Done']//ancestor::div[contains(@class, 'list-content')]//input[@value='Add card']'.</msg>
<status status="PASS" starttime="20220704 14:56:22.853" endtime="20220704 14:56:22.956"/>
</kw>
<status status="PASS" starttime="20220704 14:56:22.428" endtime="20220704 14:56:22.956"/>
</kw>
<kw name="Enter To Filter Menu" library="TopBar">
<doc>accesing to the filter menu</doc>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${FILTER_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 14:56:22.958" level="INFO">Clicking element 'xpath://button[@data-test-id='filter-popover-button']'.</msg>
<status status="PASS" starttime="20220704 14:56:22.958" endtime="20220704 14:56:23.205"/>
</kw>
<status status="PASS" starttime="20220704 14:56:22.957" endtime="20220704 14:56:23.205"/>
</kw>
<kw name="Click no labels filter" library="FilterModal">
<doc>filters all cards with labes</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${NO_LABELS_FILTER}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 14:56:23.207" endtime="20220704 14:56:23.649"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${NO_LABELS_FILTER}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 14:56:23.650" level="INFO">Clicking element '//span[@aria-label='LabelIcon']'.</msg>
<status status="PASS" starttime="20220704 14:56:23.650" endtime="20220704 14:56:23.945"/>
</kw>
<status status="PASS" starttime="20220704 14:56:23.206" endtime="20220704 14:56:23.946"/>
</kw>
<kw name="Card Should Not Be In List" library="ListComponent">
<arg>card1</arg>
<arg>To Do</arg>
<doc>Check that a card is visible and in the given list
required: card_name, list_name</doc>
<kw name="Format String" library="String">
<var>${card_locator}</var>
<arg>${LIST_CARD_NAME}</arg>
<arg>list_name=${list_name}</arg>
<arg>card_name=${card_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:56:23.947" level="INFO">${card_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'card1')]</msg>
<status status="PASS" starttime="20220704 14:56:23.947" endtime="20220704 14:56:23.947"/>
</kw>
<kw name="Element Should Not Be Visible" library="SeleniumLibrary">
<arg>${card_locator}</arg>
<doc>Verifies that the element identified by ``locator`` is NOT visible.</doc>
<msg timestamp="20220704 14:56:24.039" level="INFO">Element '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'card1')]' exists but is not displayed.</msg>
<status status="PASS" starttime="20220704 14:56:23.947" endtime="20220704 14:56:24.039"/>
</kw>
<status status="PASS" starttime="20220704 14:56:23.946" endtime="20220704 14:56:24.040"/>
</kw>
<kw name="Click no labels filter" library="FilterModal">
<doc>filters all cards with labes</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${NO_LABELS_FILTER}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 14:56:24.040" endtime="20220704 14:56:24.107"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${NO_LABELS_FILTER}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 14:56:24.108" level="INFO">Clicking element '//span[@aria-label='LabelIcon']'.</msg>
<status status="PASS" starttime="20220704 14:56:24.107" endtime="20220704 14:56:24.386"/>
</kw>
<status status="PASS" starttime="20220704 14:56:24.040" endtime="20220704 14:56:24.387"/>
</kw>
<kw name="Card Should Be In List" library="ListComponent">
<arg>card1</arg>
<arg>To Do</arg>
<doc>Check that a card is visible and in the given list
required: card_name, list_name</doc>
<kw name="Format String" library="String">
<var>${card_locator}</var>
<arg>${LIST_CARD_NAME}</arg>
<arg>list_name=${list_name}</arg>
<arg>card_name=${card_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:56:24.389" level="INFO">${card_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'card1')]</msg>
<status status="PASS" starttime="20220704 14:56:24.388" endtime="20220704 14:56:24.389"/>
</kw>
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<arg>${card_locator}</arg>
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<msg timestamp="20220704 14:56:24.438" level="INFO">Element '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'card1')]' is displayed.</msg>
<status status="PASS" starttime="20220704 14:56:24.390" endtime="20220704 14:56:24.438"/>
</kw>
<status status="PASS" starttime="20220704 14:56:24.387" endtime="20220704 14:56:24.438"/>
</kw>
<kw name="Close Browser" library="SeleniumLibrary" type="TEARDOWN">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20220704 14:56:24.439" endtime="20220704 14:56:24.589"/>
</kw>
<doc>check filter card by label function</doc>
<tag>gui</tag>
<tag>list.create</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220704 14:56:01.294" endtime="20220704 14:56:24.590"/>
</test>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Teardown Board</arg>
<arg>Delete All Sessions</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Teardown Board">
<doc>Deletes used board for teardown</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:56:24.593" level="INFO">${url} = boards/62c2ff812b644313ee00dae3</msg>
<status status="PASS" starttime="20220704 14:56:24.593" endtime="20220704 14:56:24.593"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 14:56:25.023" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:56:24.593" endtime="20220704 14:56:25.023"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:56:25.023" endtime="20220704 14:56:25.023"/>
</return>
<msg timestamp="20220704 14:56:25.023" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:56:24.592" endtime="20220704 14:56:25.023"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:56:25.023" endtime="20220704 14:56:25.023"/>
</return>
<status status="PASS" starttime="20220704 14:56:24.592" endtime="20220704 14:56:25.023"/>
</kw>
<status status="PASS" starttime="20220704 14:56:24.592" endtime="20220704 14:56:25.024"/>
</kw>
<status status="PASS" starttime="20220704 14:56:24.591" endtime="20220704 14:56:25.024"/>
</kw>
<kw name="Delete All Sessions" library="request_own_library">
<status status="PASS" starttime="20220704 14:56:25.024" endtime="20220704 14:56:25.026"/>
</kw>
<status status="PASS" starttime="20220704 14:56:24.591" endtime="20220704 14:56:25.026"/>
</kw>
<doc>Label Tests</doc>
<status status="PASS" starttime="20220704 14:56:01.044" endtime="20220704 14:56:25.026"/>
</suite>
<suite id="s1-s6-s1-s4" name="Trello Gui Lists" source="/trello/gui/trello_gui_lists.robot">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Create Trello Session</arg>
<arg>Setup Board</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Create Trello Session" library="TrelloAPI">
<doc>Creates a Trello Session</doc>
<kw name="Create Session" library="request_own_library">
<arg>${API_BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<status status="PASS" starttime="20220704 14:56:25.040" endtime="20220704 14:56:25.041"/>
</kw>
<status status="PASS" starttime="20220704 14:56:25.040" endtime="20220704 14:56:25.041"/>
</kw>
<kw name="Setup Board">
<doc>Creates a board and saves its ID</doc>
<kw name="Create A Board" library="Board">
<var>${BOARD}</var>
<arg>TestBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 14:56:25.042" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 14:56:25.042" endtime="20220704 14:56:25.042"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 14:56:25.042" endtime="20220704 14:56:25.042"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:56:25.043" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220704 14:56:25.043" endtime="20220704 14:56:25.043"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 14:56:25.235" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:56:25.044" endtime="20220704 14:56:25.236"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:56:25.236" endtime="20220704 14:56:25.236"/>
</return>
<msg timestamp="20220704 14:56:25.236" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:56:25.041" endtime="20220704 14:56:25.236"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:56:25.236" endtime="20220704 14:56:25.236"/>
</return>
<msg timestamp="20220704 14:56:25.236" level="INFO">${BOARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:56:25.041" endtime="20220704 14:56:25.237"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_BOARD_ID}</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220704 14:56:25.238" level="INFO">${TEST_SUITE_BOARD_ID} = 62c2ff99cb85670eff3ee188</msg>
<status status="PASS" starttime="20220704 14:56:25.237" endtime="20220704 14:56:25.238"/>
</kw>
<status status="PASS" starttime="20220704 14:56:25.041" endtime="20220704 14:56:25.238"/>
</kw>
<status status="PASS" starttime="20220704 14:56:25.040" endtime="20220704 14:56:25.239"/>
</kw>
<test id="s1-s6-s1-s4-t1" name="create list" line="18">
<kw name="Open Browser From Environment" library="CommonGUI">
<arg>${LOGIN_URL}</arg>
<doc>This keywords takes REMOTE and BROWSER variables
from the environment automatically and only needs a url</doc>
<if>
<branch type="IF" condition="${is_remote}">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${url}</arg>
<arg>${BROWSER}</arg>
<arg>remote_url=http://selenium-hub:4444</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20220704 14:56:25.241" level="INFO">Opening browser 'chrome' to base url 'https://trello.com/login' through remote server at 'http://selenium-hub:4444'.</msg>
<status status="PASS" starttime="20220704 14:56:25.240" endtime="20220704 14:56:26.469"/>
</kw>
<status status="PASS" starttime="20220704 14:56:25.240" endtime="20220704 14:56:26.469"/>
</branch>
<branch type="ELSE">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${url}</arg>
<arg>${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<status status="NOT RUN" starttime="20220704 14:56:26.470" endtime="20220704 14:56:26.470"/>
</kw>
<status status="NOT RUN" starttime="20220704 14:56:26.469" endtime="20220704 14:56:26.470"/>
</branch>
<status status="PASS" starttime="20220704 14:56:25.240" endtime="20220704 14:56:26.470"/>
</if>
<status status="PASS" starttime="20220704 14:56:25.240" endtime="20220704 14:56:26.470"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20220704 14:56:26.470" endtime="20220704 14:56:26.589"/>
</kw>
<kw name="Login To Trello" library="LoginPage">
<arg>${DEFAULT_EMAIL}</arg>
<arg>${DEFAULT_PASSWORD}</arg>
<doc>High-level keyword for logging in to Trello</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220704 14:56:26.599" level="INFO">${url} = https://trello.com/login</msg>
<status status="PASS" starttime="20220704 14:56:26.590" endtime="20220704 14:56:26.599"/>
</kw>
<if>
<branch type="IF" condition="'${url}' != '${LOGIN_URL}'">
<kw name="Go To" library="SeleniumLibrary">
<arg>${LOGIN_URL}</arg>
<doc>Navigates the current browser window to the provided ``url``.</doc>
<status status="NOT RUN" starttime="20220704 14:56:26.600" endtime="20220704 14:56:26.600"/>
</kw>
<status status="NOT RUN" starttime="20220704 14:56:26.599" endtime="20220704 14:56:26.600"/>
</branch>
<status status="PASS" starttime="20220704 14:56:26.599" endtime="20220704 14:56:26.600"/>
</if>
<kw name="Enter Username" library="LoginPage">
<arg>${username}</arg>
<doc>Take a username as argument and
enters it in the user_input</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${USER_INPUT}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 14:56:26.600" endtime="20220704 14:56:26.640"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${USER_INPUT}</arg>
<arg>${username}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220704 14:56:26.641" level="INFO">Typing text 'bootcamp04@mailinator.com' into text field 'css:input#user'.</msg>
<status status="PASS" starttime="20220704 14:56:26.641" endtime="20220704 14:56:26.780"/>
</kw>
<status status="PASS" starttime="20220704 14:56:26.600" endtime="20220704 14:56:26.780"/>
</kw>
<kw name="Wait Until Element Is Not Visible" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<doc>Waits until the element ``locator`` is not visible.</doc>
<status status="PASS" starttime="20220704 14:56:26.780" endtime="20220704 14:56:27.535"/>
</kw>
<kw name="Click Login Button" library="LoginPage">
<doc>Clicks Trello's login button if in Trello's
login page, else it clicks Atlassian's</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220704 14:56:27.544" level="INFO">${url} = https://trello.com/login</msg>
<status status="PASS" starttime="20220704 14:56:27.536" endtime="20220704 14:56:27.544"/>
</kw>
<if>
<branch type="IF" condition="'${url}' == '${LOGIN_URL}'">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220704 14:56:27.545" endtime="20220704 14:56:27.611"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220704 14:56:27.611" level="INFO">Clicking button 'css:input#login'.</msg>
<status status="PASS" starttime="20220704 14:56:27.611" endtime="20220704 14:56:28.529"/>
</kw>
<status status="PASS" starttime="20220704 14:56:27.545" endtime="20220704 14:56:28.530"/>
</branch>
<branch type="ELSE">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="NOT RUN" starttime="20220704 14:56:28.530" endtime="20220704 14:56:28.530"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<status status="NOT RUN" starttime="20220704 14:56:28.530" endtime="20220704 14:56:28.530"/>
</kw>
<status status="NOT RUN" starttime="20220704 14:56:28.530" endtime="20220704 14:56:28.530"/>
</branch>
<status status="PASS" starttime="20220704 14:56:27.545" endtime="20220704 14:56:28.530"/>
</if>
<status status="PASS" starttime="20220704 14:56:27.536" endtime="20220704 14:56:28.530"/>
</kw>
<kw name="Wait Until Location Is Atlassian's Login" library="LoginPage">
<doc>Waits for the page redirection when logging in.</doc>
<kw name="Wait Until Location Contains" library="SeleniumLibrary">
<arg>atlassian.com</arg>
<doc>Waits until the current URL contains ``expected``.</doc>
<status status="PASS" starttime="20220704 14:56:28.531" endtime="20220704 14:56:28.545"/>
</kw>
<status status="PASS" starttime="20220704 14:56:28.531" endtime="20220704 14:56:28.546"/>
</kw>
<kw name="Enter Password" library="LoginPage">
<arg>${password}</arg>
<doc>Take a password as argument and
enters it in the password_input</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<arg>timeout=10</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 14:56:28.546" endtime="20220704 14:56:28.845"/>
</kw>
<kw name="Input Password" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<arg>${password}</arg>
<doc>Types the given password into the text field identified by ``locator``.</doc>
<msg timestamp="20220704 14:56:28.846" level="INFO">Typing password into text field 'css:input#password'.</msg>
<msg timestamp="20220704 14:56:28.900" level="INFO">Temporally setting log level to: NONE</msg>
<msg timestamp="20220704 14:56:28.973" level="INFO">Log level changed from NONE to INFO.</msg>
<status status="PASS" starttime="20220704 14:56:28.845" endtime="20220704 14:56:28.973"/>
</kw>
<status status="PASS" starttime="20220704 14:56:28.546" endtime="20220704 14:56:28.973"/>
</kw>
<kw name="Click Login Button" library="LoginPage">
<doc>Clicks Trello's login button if in Trello's
login page, else it clicks Atlassian's</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220704 14:56:28.986" level="INFO">${url} = https://id.atlassian.com/login?application=trello&amp;continue=https%3A%2F%2Ftrello.com%2Fauth%2Fatlassian%2Fcallback%3FreturnUrl%3D%252F%26display%3D%26aaOnboarding%3D%26updateEmail%3D%26traceId%3D62c2ff...</msg>
<status status="PASS" starttime="20220704 14:56:28.974" endtime="20220704 14:56:28.986"/>
</kw>
<if>
<branch type="IF" condition="'${url}' == '${LOGIN_URL}'">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="NOT RUN" starttime="20220704 14:56:28.987" endtime="20220704 14:56:28.987"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<status status="NOT RUN" starttime="20220704 14:56:28.987" endtime="20220704 14:56:28.987"/>
</kw>
<status status="NOT RUN" starttime="20220704 14:56:28.986" endtime="20220704 14:56:28.987"/>
</branch>
<branch type="ELSE">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220704 14:56:28.987" endtime="20220704 14:56:29.037"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220704 14:56:29.038" level="INFO">Clicking button 'css:button#login-submit'.</msg>
<status status="PASS" starttime="20220704 14:56:29.038" endtime="20220704 14:56:29.135"/>
</kw>
<status status="PASS" starttime="20220704 14:56:28.987" endtime="20220704 14:56:29.135"/>
</branch>
<status status="PASS" starttime="20220704 14:56:28.986" endtime="20220704 14:56:29.135"/>
</if>
<status status="PASS" starttime="20220704 14:56:28.973" endtime="20220704 14:56:29.135"/>
</kw>
<status status="PASS" starttime="20220704 14:56:26.589" endtime="20220704 14:56:29.136"/>
</kw>
<kw name="Go To Board" library="BoardsPage">
<arg>TestBoard</arg>
<doc>Receives the board name and goes to that board's page.</doc>
<kw name="Format String" library="String">
<var>${locator}</var>
<arg>${BOARD_BUTTON}</arg>
<arg>${board_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:56:29.137" level="INFO">${locator} = //div[@title="TestBoard"]</msg>
<status status="PASS" starttime="20220704 14:56:29.136" endtime="20220704 14:56:29.137"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 14:56:29.137" endtime="20220704 14:56:32.461"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 14:56:32.462" level="INFO">Clicking element '//div[@title="TestBoard"]'.</msg>
<status status="PASS" starttime="20220704 14:56:32.462" endtime="20220704 14:56:32.848"/>
</kw>
<status status="PASS" starttime="20220704 14:56:29.136" endtime="20220704 14:56:32.848"/>
</kw>
<kw name="Create new list with the name" library="ListComponent">
<arg>NEW_TEST_LIST</arg>
<doc>Create a new list with the given name</doc>
<kw name="Wait Until Page Contains Element" library="SeleniumLibrary">
<arg>${ADD_LIST_BUTTON}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" starttime="20220704 14:56:32.849" endtime="20220704 14:56:33.288"/>
</kw>
<kw name="Click Link" library="SeleniumLibrary">
<arg>${ADD_LIST_BUTTON}</arg>
<doc>Clicks a link identified by ``locator``.</doc>
<msg timestamp="20220704 14:56:33.289" level="INFO">Clicking link 'xpath://a[contains(@Class, 'open-add-list')]'.</msg>
<status status="PASS" starttime="20220704 14:56:33.289" endtime="20220704 14:56:33.470"/>
</kw>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LIST_NAME_INPUT}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220704 14:56:33.470" endtime="20220704 14:56:33.547"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${LIST_NAME_INPUT}</arg>
<arg>${list_name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220704 14:56:33.548" level="INFO">Typing text 'NEW_TEST_LIST' into text field 'xpath://input[@class="list-name-input"]'.</msg>
<status status="PASS" starttime="20220704 14:56:33.547" endtime="20220704 14:56:33.673"/>
</kw>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>${LIST_NAME_INPUT}</arg>
<arg>RETURN</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20220704 14:56:33.674" level="INFO">Sending key(s) ('RETURN',) to xpath://input[@class="list-name-input"] element.</msg>
<msg timestamp="20220704 14:56:34.006" level="INFO">Pressing special key RETURN to element.</msg>
<msg timestamp="20220704 14:56:34.007" level="INFO">Releasing special key RETURN.</msg>
<status status="PASS" starttime="20220704 14:56:33.674" endtime="20220704 14:56:34.053"/>
</kw>
<status status="PASS" starttime="20220704 14:56:32.848" endtime="20220704 14:56:34.053"/>
</kw>
<kw name="Verify That The List Exists" library="ListComponent">
<arg>NEW_TEST_LIST</arg>
<doc>Verify that a given header of a list matches</doc>
<kw name="Format String" library="String">
<var>${list_name_locator}</var>
<arg>${LIST_DIV}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:56:34.054" level="INFO">${list_name_locator} = //h2[text()='NEW_TEST_LIST']//ancestor::div[contains(@class, 'list-content')]</msg>
<status status="PASS" starttime="20220704 14:56:34.054" endtime="20220704 14:56:34.054"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${list_name_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 14:56:34.055" endtime="20220704 14:56:34.099"/>
</kw>
<kw name="Page Should Contain Element" library="SeleniumLibrary">
<arg>${list_name_locator}</arg>
<doc>Verifies that element ``locator`` is found on the current page.</doc>
<msg timestamp="20220704 14:56:34.112" level="INFO">Current page contains element '//h2[text()='NEW_TEST_LIST']//ancestor::div[contains(@class, 'list-content')]'.</msg>
<status status="PASS" starttime="20220704 14:56:34.099" endtime="20220704 14:56:34.112"/>
</kw>
<status status="PASS" starttime="20220704 14:56:34.053" endtime="20220704 14:56:34.112"/>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Close a list</arg>
<arg>Close Browser</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Close a list" library="ListComponent">
<doc>archives a list</doc>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LIST_ACTIONS_BUTTON}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220704 14:56:34.113" endtime="20220704 14:56:34.207"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Click Link</arg>
<arg>${LIST_ACTIONS_BUTTON}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Click Link" library="SeleniumLibrary">
<arg>${LIST_ACTIONS_BUTTON}</arg>
<doc>Clicks a link identified by ``locator``.</doc>
<msg timestamp="20220704 14:56:34.208" level="INFO">Clicking link 'xpath://div[@class='js-list list-wrapper'][last()]//a[@aria-label="List actions"]'.</msg>
<status status="PASS" starttime="20220704 14:56:34.208" endtime="20220704 14:56:34.339"/>
</kw>
<status status="PASS" starttime="20220704 14:56:34.207" endtime="20220704 14:56:34.339"/>
</kw>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${CLOSE_LIST_BUTTON}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220704 14:56:34.339" endtime="20220704 14:56:34.410"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Click Link</arg>
<arg>${CLOSE_LIST_BUTTON}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Click Link" library="SeleniumLibrary">
<arg>${CLOSE_LIST_BUTTON}</arg>
<doc>Clicks a link identified by ``locator``.</doc>
<msg timestamp="20220704 14:56:34.411" level="INFO">Clicking link 'xpath://li//a[@class='js-close-list']'.</msg>
<status status="PASS" starttime="20220704 14:56:34.411" endtime="20220704 14:56:34.500"/>
</kw>
<status status="PASS" starttime="20220704 14:56:34.411" endtime="20220704 14:56:34.500"/>
</kw>
<status status="PASS" starttime="20220704 14:56:34.113" endtime="20220704 14:56:34.500"/>
</kw>
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20220704 14:56:34.501" endtime="20220704 14:56:34.619"/>
</kw>
<status status="PASS" starttime="20220704 14:56:34.113" endtime="20220704 14:56:34.619"/>
</kw>
<doc>verify that a list can be created in GUI</doc>
<tag>gui</tag>
<tag>list.create</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220704 14:56:25.239" endtime="20220704 14:56:34.619"/>
</test>
<test id="s1-s6-s1-s4-t2" name="modify name of a list" line="31">
<kw name="Open Browser From Environment" library="CommonGUI">
<arg>${LOGIN_URL}</arg>
<doc>This keywords takes REMOTE and BROWSER variables
from the environment automatically and only needs a url</doc>
<if>
<branch type="IF" condition="${is_remote}">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${url}</arg>
<arg>${BROWSER}</arg>
<arg>remote_url=http://selenium-hub:4444</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20220704 14:56:34.623" level="INFO">Opening browser 'chrome' to base url 'https://trello.com/login' through remote server at 'http://selenium-hub:4444'.</msg>
<status status="PASS" starttime="20220704 14:56:34.622" endtime="20220704 14:56:35.817"/>
</kw>
<status status="PASS" starttime="20220704 14:56:34.622" endtime="20220704 14:56:35.818"/>
</branch>
<branch type="ELSE">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${url}</arg>
<arg>${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<status status="NOT RUN" starttime="20220704 14:56:35.818" endtime="20220704 14:56:35.818"/>
</kw>
<status status="NOT RUN" starttime="20220704 14:56:35.818" endtime="20220704 14:56:35.818"/>
</branch>
<status status="PASS" starttime="20220704 14:56:34.622" endtime="20220704 14:56:35.818"/>
</if>
<status status="PASS" starttime="20220704 14:56:34.621" endtime="20220704 14:56:35.818"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20220704 14:56:35.819" endtime="20220704 14:56:35.939"/>
</kw>
<kw name="Login To Trello" library="LoginPage">
<arg>${DEFAULT_EMAIL}</arg>
<arg>${DEFAULT_PASSWORD}</arg>
<doc>High-level keyword for logging in to Trello</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220704 14:56:35.950" level="INFO">${url} = https://trello.com/login</msg>
<status status="PASS" starttime="20220704 14:56:35.940" endtime="20220704 14:56:35.950"/>
</kw>
<if>
<branch type="IF" condition="'${url}' != '${LOGIN_URL}'">
<kw name="Go To" library="SeleniumLibrary">
<arg>${LOGIN_URL}</arg>
<doc>Navigates the current browser window to the provided ``url``.</doc>
<status status="NOT RUN" starttime="20220704 14:56:35.950" endtime="20220704 14:56:35.950"/>
</kw>
<status status="NOT RUN" starttime="20220704 14:56:35.950" endtime="20220704 14:56:35.950"/>
</branch>
<status status="PASS" starttime="20220704 14:56:35.950" endtime="20220704 14:56:35.950"/>
</if>
<kw name="Enter Username" library="LoginPage">
<arg>${username}</arg>
<doc>Take a username as argument and
enters it in the user_input</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${USER_INPUT}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 14:56:35.951" endtime="20220704 14:56:35.985"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${USER_INPUT}</arg>
<arg>${username}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220704 14:56:35.986" level="INFO">Typing text 'bootcamp04@mailinator.com' into text field 'css:input#user'.</msg>
<status status="PASS" starttime="20220704 14:56:35.986" endtime="20220704 14:56:36.112"/>
</kw>
<status status="PASS" starttime="20220704 14:56:35.950" endtime="20220704 14:56:36.112"/>
</kw>
<kw name="Wait Until Element Is Not Visible" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<doc>Waits until the element ``locator`` is not visible.</doc>
<status status="PASS" starttime="20220704 14:56:36.113" endtime="20220704 14:56:36.869"/>
</kw>
<kw name="Click Login Button" library="LoginPage">
<doc>Clicks Trello's login button if in Trello's
login page, else it clicks Atlassian's</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220704 14:56:36.882" level="INFO">${url} = https://trello.com/login</msg>
<status status="PASS" starttime="20220704 14:56:36.870" endtime="20220704 14:56:36.882"/>
</kw>
<if>
<branch type="IF" condition="'${url}' == '${LOGIN_URL}'">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220704 14:56:36.882" endtime="20220704 14:56:36.927"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220704 14:56:36.928" level="INFO">Clicking button 'css:input#login'.</msg>
<status status="PASS" starttime="20220704 14:56:36.927" endtime="20220704 14:56:38.082"/>
</kw>
<status status="PASS" starttime="20220704 14:56:36.882" endtime="20220704 14:56:38.082"/>
</branch>
<branch type="ELSE">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="NOT RUN" starttime="20220704 14:56:38.082" endtime="20220704 14:56:38.082"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<status status="NOT RUN" starttime="20220704 14:56:38.083" endtime="20220704 14:56:38.083"/>
</kw>
<status status="NOT RUN" starttime="20220704 14:56:38.082" endtime="20220704 14:56:38.083"/>
</branch>
<status status="PASS" starttime="20220704 14:56:36.882" endtime="20220704 14:56:38.083"/>
</if>
<status status="PASS" starttime="20220704 14:56:36.869" endtime="20220704 14:56:38.083"/>
</kw>
<kw name="Wait Until Location Is Atlassian's Login" library="LoginPage">
<doc>Waits for the page redirection when logging in.</doc>
<kw name="Wait Until Location Contains" library="SeleniumLibrary">
<arg>atlassian.com</arg>
<doc>Waits until the current URL contains ``expected``.</doc>
<status status="PASS" starttime="20220704 14:56:38.083" endtime="20220704 14:56:38.127"/>
</kw>
<status status="PASS" starttime="20220704 14:56:38.083" endtime="20220704 14:56:38.127"/>
</kw>
<kw name="Enter Password" library="LoginPage">
<arg>${password}</arg>
<doc>Take a password as argument and
enters it in the password_input</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<arg>timeout=10</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 14:56:38.128" endtime="20220704 14:56:38.210"/>
</kw>
<kw name="Input Password" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<arg>${password}</arg>
<doc>Types the given password into the text field identified by ``locator``.</doc>
<msg timestamp="20220704 14:56:38.211" level="INFO">Typing password into text field 'css:input#password'.</msg>
<msg timestamp="20220704 14:56:38.297" level="INFO">Temporally setting log level to: NONE</msg>
<msg timestamp="20220704 14:56:38.394" level="INFO">Log level changed from NONE to INFO.</msg>
<status status="PASS" starttime="20220704 14:56:38.211" endtime="20220704 14:56:38.394"/>
</kw>
<status status="PASS" starttime="20220704 14:56:38.128" endtime="20220704 14:56:38.394"/>
</kw>
<kw name="Click Login Button" library="LoginPage">
<doc>Clicks Trello's login button if in Trello's
login page, else it clicks Atlassian's</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220704 14:56:38.405" level="INFO">${url} = https://id.atlassian.com/login?application=trello&amp;continue=https%3A%2F%2Ftrello.com%2Fauth%2Fatlassian%2Fcallback%3FreturnUrl%3D%252F%26display%3D%26aaOnboarding%3D%26updateEmail%3D%26traceId%3D62c2ff...</msg>
<status status="PASS" starttime="20220704 14:56:38.395" endtime="20220704 14:56:38.405"/>
</kw>
<if>
<branch type="IF" condition="'${url}' == '${LOGIN_URL}'">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="NOT RUN" starttime="20220704 14:56:38.406" endtime="20220704 14:56:38.406"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<status status="NOT RUN" starttime="20220704 14:56:38.406" endtime="20220704 14:56:38.406"/>
</kw>
<status status="NOT RUN" starttime="20220704 14:56:38.406" endtime="20220704 14:56:38.406"/>
</branch>
<branch type="ELSE">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220704 14:56:38.406" endtime="20220704 14:56:38.456"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220704 14:56:38.457" level="INFO">Clicking button 'css:button#login-submit'.</msg>
<status status="PASS" starttime="20220704 14:56:38.456" endtime="20220704 14:56:38.572"/>
</kw>
<status status="PASS" starttime="20220704 14:56:38.406" endtime="20220704 14:56:38.572"/>
</branch>
<status status="PASS" starttime="20220704 14:56:38.405" endtime="20220704 14:56:38.572"/>
</if>
<status status="PASS" starttime="20220704 14:56:38.395" endtime="20220704 14:56:38.572"/>
</kw>
<status status="PASS" starttime="20220704 14:56:35.940" endtime="20220704 14:56:38.572"/>
</kw>
<kw name="Go To Board" library="BoardsPage">
<arg>TestBoard</arg>
<doc>Receives the board name and goes to that board's page.</doc>
<kw name="Format String" library="String">
<var>${locator}</var>
<arg>${BOARD_BUTTON}</arg>
<arg>${board_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:56:38.574" level="INFO">${locator} = //div[@title="TestBoard"]</msg>
<status status="PASS" starttime="20220704 14:56:38.573" endtime="20220704 14:56:38.574"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 14:56:38.574" endtime="20220704 14:56:41.745"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 14:56:41.745" level="INFO">Clicking element '//div[@title="TestBoard"]'.</msg>
<status status="PASS" starttime="20220704 14:56:41.745" endtime="20220704 14:56:42.114"/>
</kw>
<status status="PASS" starttime="20220704 14:56:38.573" endtime="20220704 14:56:42.114"/>
</kw>
<kw name="Create new list with the name" library="ListComponent">
<arg>TO_MODIFY</arg>
<doc>Create a new list with the given name</doc>
<kw name="Wait Until Page Contains Element" library="SeleniumLibrary">
<arg>${ADD_LIST_BUTTON}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" starttime="20220704 14:56:42.115" endtime="20220704 14:56:42.569"/>
</kw>
<kw name="Click Link" library="SeleniumLibrary">
<arg>${ADD_LIST_BUTTON}</arg>
<doc>Clicks a link identified by ``locator``.</doc>
<msg timestamp="20220704 14:56:42.570" level="INFO">Clicking link 'xpath://a[contains(@Class, 'open-add-list')]'.</msg>
<status status="PASS" starttime="20220704 14:56:42.569" endtime="20220704 14:56:42.758"/>
</kw>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LIST_NAME_INPUT}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220704 14:56:42.759" endtime="20220704 14:56:42.845"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${LIST_NAME_INPUT}</arg>
<arg>${list_name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220704 14:56:42.846" level="INFO">Typing text 'TO_MODIFY' into text field 'xpath://input[@class="list-name-input"]'.</msg>
<status status="PASS" starttime="20220704 14:56:42.846" endtime="20220704 14:56:43.028"/>
</kw>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>${LIST_NAME_INPUT}</arg>
<arg>RETURN</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20220704 14:56:43.029" level="INFO">Sending key(s) ('RETURN',) to xpath://input[@class="list-name-input"] element.</msg>
<msg timestamp="20220704 14:56:43.318" level="INFO">Pressing special key RETURN to element.</msg>
<msg timestamp="20220704 14:56:43.318" level="INFO">Releasing special key RETURN.</msg>
<status status="PASS" starttime="20220704 14:56:43.029" endtime="20220704 14:56:43.370"/>
</kw>
<status status="PASS" starttime="20220704 14:56:42.115" endtime="20220704 14:56:43.370"/>
</kw>
<kw name="Modify the name of a list with" library="ListComponent">
<arg>TO_MODIFY</arg>
<arg>MODIFIED_LIST</arg>
<doc>Modify the name of an existent list</doc>
<kw name="Format String" library="String">
<var>${name_header_instance}</var>
<arg>${LIST_NAME_HEADER}</arg>
<arg>old_name=${old_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:56:43.372" level="INFO">${name_header_instance} = xpath://div[@class='list-header js-list-header u-clearfix is-menu-shown' and contains(.,'TO_MODIFY')]</msg>
<status status="PASS" starttime="20220704 14:56:43.371" endtime="20220704 14:56:43.372"/>
</kw>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${name_header_instance}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220704 14:56:43.372" endtime="20220704 14:56:43.425"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${name_header_instance}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 14:56:43.426" level="INFO">Clicking element 'xpath://div[@class='list-header js-list-header u-clearfix is-menu-shown' and contains(.,'TO_MODIFY')]'.</msg>
<status status="PASS" starttime="20220704 14:56:43.425" endtime="20220704 14:56:43.520"/>
</kw>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LIST_NAME_INPUT}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220704 14:56:43.521" endtime="20220704 14:56:43.581"/>
</kw>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>${LIST_NAME_INPUT}</arg>
<arg>BACKSPACE</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20220704 14:56:43.582" level="INFO">Sending key(s) ('BACKSPACE',) to xpath://input[@class="list-name-input"] element.</msg>
<msg timestamp="20220704 14:56:43.905" level="INFO">Pressing special key BACKSPACE to element.</msg>
<msg timestamp="20220704 14:56:43.905" level="INFO">Releasing special key BACKSPACE.</msg>
<status status="PASS" starttime="20220704 14:56:43.581" endtime="20220704 14:56:43.917"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${LIST_TEXT_AREA_NAME}</arg>
<arg>${new_name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220704 14:56:43.918" level="INFO">Typing text 'MODIFIED_LIST' into text field 'xpath://div[@class='js-list list-wrapper'][last()]//textarea'.</msg>
<status status="PASS" starttime="20220704 14:56:43.918" endtime="20220704 14:56:44.043"/>
</kw>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>None</arg>
<arg>RETURN</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20220704 14:56:44.044" level="INFO">Sending key(s) ('RETURN',) to page.</msg>
<msg timestamp="20220704 14:56:44.044" level="INFO">Pressing special key RETURN to browser.</msg>
<msg timestamp="20220704 14:56:44.044" level="INFO">Releasing special key RETURN.</msg>
<status status="PASS" starttime="20220704 14:56:44.044" endtime="20220704 14:56:44.063"/>
</kw>
<status status="PASS" starttime="20220704 14:56:43.371" endtime="20220704 14:56:44.063"/>
</kw>
<kw name="Verify That The List Exists" library="ListComponent">
<arg>MODIFIED_LIST</arg>
<doc>Verify that a given header of a list matches</doc>
<kw name="Format String" library="String">
<var>${list_name_locator}</var>
<arg>${LIST_DIV}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:56:44.065" level="INFO">${list_name_locator} = //h2[text()='MODIFIED_LIST']//ancestor::div[contains(@class, 'list-content')]</msg>
<status status="PASS" starttime="20220704 14:56:44.064" endtime="20220704 14:56:44.065"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${list_name_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 14:56:44.065" endtime="20220704 14:56:44.112"/>
</kw>
<kw name="Page Should Contain Element" library="SeleniumLibrary">
<arg>${list_name_locator}</arg>
<doc>Verifies that element ``locator`` is found on the current page.</doc>
<msg timestamp="20220704 14:56:44.123" level="INFO">Current page contains element '//h2[text()='MODIFIED_LIST']//ancestor::div[contains(@class, 'list-content')]'.</msg>
<status status="PASS" starttime="20220704 14:56:44.112" endtime="20220704 14:56:44.123"/>
</kw>
<status status="PASS" starttime="20220704 14:56:44.064" endtime="20220704 14:56:44.123"/>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Close a list</arg>
<arg>Close Browser</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Close a list" library="ListComponent">
<doc>archives a list</doc>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LIST_ACTIONS_BUTTON}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220704 14:56:44.124" endtime="20220704 14:56:44.187"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Click Link</arg>
<arg>${LIST_ACTIONS_BUTTON}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Click Link" library="SeleniumLibrary">
<arg>${LIST_ACTIONS_BUTTON}</arg>
<doc>Clicks a link identified by ``locator``.</doc>
<msg timestamp="20220704 14:56:44.188" level="INFO">Clicking link 'xpath://div[@class='js-list list-wrapper'][last()]//a[@aria-label="List actions"]'.</msg>
<status status="PASS" starttime="20220704 14:56:44.188" endtime="20220704 14:56:44.264"/>
</kw>
<status status="PASS" starttime="20220704 14:56:44.187" endtime="20220704 14:56:44.264"/>
</kw>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${CLOSE_LIST_BUTTON}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220704 14:56:44.264" endtime="20220704 14:56:44.355"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Click Link</arg>
<arg>${CLOSE_LIST_BUTTON}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Click Link" library="SeleniumLibrary">
<arg>${CLOSE_LIST_BUTTON}</arg>
<doc>Clicks a link identified by ``locator``.</doc>
<msg timestamp="20220704 14:56:44.357" level="INFO">Clicking link 'xpath://li//a[@class='js-close-list']'.</msg>
<status status="PASS" starttime="20220704 14:56:44.356" endtime="20220704 14:56:44.471"/>
</kw>
<status status="PASS" starttime="20220704 14:56:44.356" endtime="20220704 14:56:44.471"/>
</kw>
<status status="PASS" starttime="20220704 14:56:44.124" endtime="20220704 14:56:44.472"/>
</kw>
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20220704 14:56:44.472" endtime="20220704 14:56:44.596"/>
</kw>
<status status="PASS" starttime="20220704 14:56:44.123" endtime="20220704 14:56:44.596"/>
</kw>
<doc>verify that a list name can be modified in GUI</doc>
<tag>gui</tag>
<tag>list.update</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220704 14:56:34.621" endtime="20220704 14:56:44.597"/>
</test>
<test id="s1-s6-s1-s4-t3" name="archive a list" line="45">
<kw name="Open Browser From Environment" library="CommonGUI">
<arg>${LOGIN_URL}</arg>
<doc>This keywords takes REMOTE and BROWSER variables
from the environment automatically and only needs a url</doc>
<if>
<branch type="IF" condition="${is_remote}">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${url}</arg>
<arg>${BROWSER}</arg>
<arg>remote_url=http://selenium-hub:4444</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20220704 14:56:44.600" level="INFO">Opening browser 'chrome' to base url 'https://trello.com/login' through remote server at 'http://selenium-hub:4444'.</msg>
<status status="PASS" starttime="20220704 14:56:44.600" endtime="20220704 14:56:45.647"/>
</kw>
<status status="PASS" starttime="20220704 14:56:44.600" endtime="20220704 14:56:45.647"/>
</branch>
<branch type="ELSE">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${url}</arg>
<arg>${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<status status="NOT RUN" starttime="20220704 14:56:45.648" endtime="20220704 14:56:45.648"/>
</kw>
<status status="NOT RUN" starttime="20220704 14:56:45.647" endtime="20220704 14:56:45.648"/>
</branch>
<status status="PASS" starttime="20220704 14:56:44.599" endtime="20220704 14:56:45.648"/>
</if>
<status status="PASS" starttime="20220704 14:56:44.599" endtime="20220704 14:56:45.648"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20220704 14:56:45.648" endtime="20220704 14:56:45.758"/>
</kw>
<kw name="Login To Trello" library="LoginPage">
<arg>${DEFAULT_EMAIL}</arg>
<arg>${DEFAULT_PASSWORD}</arg>
<doc>High-level keyword for logging in to Trello</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220704 14:56:45.769" level="INFO">${url} = https://trello.com/login</msg>
<status status="PASS" starttime="20220704 14:56:45.759" endtime="20220704 14:56:45.769"/>
</kw>
<if>
<branch type="IF" condition="'${url}' != '${LOGIN_URL}'">
<kw name="Go To" library="SeleniumLibrary">
<arg>${LOGIN_URL}</arg>
<doc>Navigates the current browser window to the provided ``url``.</doc>
<status status="NOT RUN" starttime="20220704 14:56:45.769" endtime="20220704 14:56:45.769"/>
</kw>
<status status="NOT RUN" starttime="20220704 14:56:45.769" endtime="20220704 14:56:45.769"/>
</branch>
<status status="PASS" starttime="20220704 14:56:45.769" endtime="20220704 14:56:45.770"/>
</if>
<kw name="Enter Username" library="LoginPage">
<arg>${username}</arg>
<doc>Take a username as argument and
enters it in the user_input</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${USER_INPUT}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 14:56:45.770" endtime="20220704 14:56:45.820"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${USER_INPUT}</arg>
<arg>${username}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220704 14:56:45.820" level="INFO">Typing text 'bootcamp04@mailinator.com' into text field 'css:input#user'.</msg>
<status status="PASS" starttime="20220704 14:56:45.820" endtime="20220704 14:56:45.925"/>
</kw>
<status status="PASS" starttime="20220704 14:56:45.770" endtime="20220704 14:56:45.926"/>
</kw>
<kw name="Wait Until Element Is Not Visible" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<doc>Waits until the element ``locator`` is not visible.</doc>
<status status="PASS" starttime="20220704 14:56:45.926" endtime="20220704 14:56:46.655"/>
</kw>
<kw name="Click Login Button" library="LoginPage">
<doc>Clicks Trello's login button if in Trello's
login page, else it clicks Atlassian's</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220704 14:56:46.667" level="INFO">${url} = https://trello.com/login</msg>
<status status="PASS" starttime="20220704 14:56:46.656" endtime="20220704 14:56:46.667"/>
</kw>
<if>
<branch type="IF" condition="'${url}' == '${LOGIN_URL}'">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220704 14:56:46.668" endtime="20220704 14:56:46.711"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220704 14:56:46.711" level="INFO">Clicking button 'css:input#login'.</msg>
<status status="PASS" starttime="20220704 14:56:46.711" endtime="20220704 14:56:47.616"/>
</kw>
<status status="PASS" starttime="20220704 14:56:46.667" endtime="20220704 14:56:47.616"/>
</branch>
<branch type="ELSE">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="NOT RUN" starttime="20220704 14:56:47.616" endtime="20220704 14:56:47.616"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<status status="NOT RUN" starttime="20220704 14:56:47.617" endtime="20220704 14:56:47.617"/>
</kw>
<status status="NOT RUN" starttime="20220704 14:56:47.616" endtime="20220704 14:56:47.617"/>
</branch>
<status status="PASS" starttime="20220704 14:56:46.667" endtime="20220704 14:56:47.617"/>
</if>
<status status="PASS" starttime="20220704 14:56:46.655" endtime="20220704 14:56:47.617"/>
</kw>
<kw name="Wait Until Location Is Atlassian's Login" library="LoginPage">
<doc>Waits for the page redirection when logging in.</doc>
<kw name="Wait Until Location Contains" library="SeleniumLibrary">
<arg>atlassian.com</arg>
<doc>Waits until the current URL contains ``expected``.</doc>
<status status="PASS" starttime="20220704 14:56:47.617" endtime="20220704 14:56:47.639"/>
</kw>
<status status="PASS" starttime="20220704 14:56:47.617" endtime="20220704 14:56:47.639"/>
</kw>
<kw name="Enter Password" library="LoginPage">
<arg>${password}</arg>
<doc>Take a password as argument and
enters it in the password_input</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<arg>timeout=10</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 14:56:47.640" endtime="20220704 14:56:47.706"/>
</kw>
<kw name="Input Password" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<arg>${password}</arg>
<doc>Types the given password into the text field identified by ``locator``.</doc>
<msg timestamp="20220704 14:56:47.707" level="INFO">Typing password into text field 'css:input#password'.</msg>
<msg timestamp="20220704 14:56:47.767" level="INFO">Temporally setting log level to: NONE</msg>
<msg timestamp="20220704 14:56:47.840" level="INFO">Log level changed from NONE to INFO.</msg>
<status status="PASS" starttime="20220704 14:56:47.706" endtime="20220704 14:56:47.840"/>
</kw>
<status status="PASS" starttime="20220704 14:56:47.640" endtime="20220704 14:56:47.840"/>
</kw>
<kw name="Click Login Button" library="LoginPage">
<doc>Clicks Trello's login button if in Trello's
login page, else it clicks Atlassian's</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220704 14:56:47.850" level="INFO">${url} = https://id.atlassian.com/login?application=trello&amp;continue=https%3A%2F%2Ftrello.com%2Fauth%2Fatlassian%2Fcallback%3FreturnUrl%3D%252F%26display%3D%26aaOnboarding%3D%26updateEmail%3D%26traceId%3D62c2ff...</msg>
<status status="PASS" starttime="20220704 14:56:47.841" endtime="20220704 14:56:47.850"/>
</kw>
<if>
<branch type="IF" condition="'${url}' == '${LOGIN_URL}'">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="NOT RUN" starttime="20220704 14:56:47.850" endtime="20220704 14:56:47.851"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<status status="NOT RUN" starttime="20220704 14:56:47.851" endtime="20220704 14:56:47.851"/>
</kw>
<status status="NOT RUN" starttime="20220704 14:56:47.850" endtime="20220704 14:56:47.851"/>
</branch>
<branch type="ELSE">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220704 14:56:47.851" endtime="20220704 14:56:47.906"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220704 14:56:47.907" level="INFO">Clicking button 'css:button#login-submit'.</msg>
<status status="PASS" starttime="20220704 14:56:47.907" endtime="20220704 14:56:48.022"/>
</kw>
<status status="PASS" starttime="20220704 14:56:47.851" endtime="20220704 14:56:48.022"/>
</branch>
<status status="PASS" starttime="20220704 14:56:47.850" endtime="20220704 14:56:48.022"/>
</if>
<status status="PASS" starttime="20220704 14:56:47.841" endtime="20220704 14:56:48.023"/>
</kw>
<status status="PASS" starttime="20220704 14:56:45.758" endtime="20220704 14:56:48.023"/>
</kw>
<kw name="Go To Board" library="BoardsPage">
<arg>TestBoard</arg>
<doc>Receives the board name and goes to that board's page.</doc>
<kw name="Format String" library="String">
<var>${locator}</var>
<arg>${BOARD_BUTTON}</arg>
<arg>${board_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:56:48.024" level="INFO">${locator} = //div[@title="TestBoard"]</msg>
<status status="PASS" starttime="20220704 14:56:48.024" endtime="20220704 14:56:48.024"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 14:56:48.024" endtime="20220704 14:56:51.451"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 14:56:51.451" level="INFO">Clicking element '//div[@title="TestBoard"]'.</msg>
<status status="PASS" starttime="20220704 14:56:51.451" endtime="20220704 14:56:51.967"/>
</kw>
<status status="PASS" starttime="20220704 14:56:48.023" endtime="20220704 14:56:51.967"/>
</kw>
<kw name="Create new list with the name" library="ListComponent">
<arg>TO_ARCHIVE</arg>
<doc>Create a new list with the given name</doc>
<kw name="Wait Until Page Contains Element" library="SeleniumLibrary">
<arg>${ADD_LIST_BUTTON}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" starttime="20220704 14:56:51.968" endtime="20220704 14:56:52.448"/>
</kw>
<kw name="Click Link" library="SeleniumLibrary">
<arg>${ADD_LIST_BUTTON}</arg>
<doc>Clicks a link identified by ``locator``.</doc>
<msg timestamp="20220704 14:56:52.449" level="INFO">Clicking link 'xpath://a[contains(@Class, 'open-add-list')]'.</msg>
<status status="PASS" starttime="20220704 14:56:52.449" endtime="20220704 14:56:52.658"/>
</kw>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LIST_NAME_INPUT}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220704 14:56:52.658" endtime="20220704 14:56:52.734"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${LIST_NAME_INPUT}</arg>
<arg>${list_name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220704 14:56:52.735" level="INFO">Typing text 'TO_ARCHIVE' into text field 'xpath://input[@class="list-name-input"]'.</msg>
<status status="PASS" starttime="20220704 14:56:52.734" endtime="20220704 14:56:53.000"/>
</kw>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>${LIST_NAME_INPUT}</arg>
<arg>RETURN</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20220704 14:56:53.002" level="INFO">Sending key(s) ('RETURN',) to xpath://input[@class="list-name-input"] element.</msg>
<msg timestamp="20220704 14:56:53.299" level="INFO">Pressing special key RETURN to element.</msg>
<msg timestamp="20220704 14:56:53.299" level="INFO">Releasing special key RETURN.</msg>
<status status="PASS" starttime="20220704 14:56:53.001" endtime="20220704 14:56:53.331"/>
</kw>
<status status="PASS" starttime="20220704 14:56:51.967" endtime="20220704 14:56:53.331"/>
</kw>
<kw name="Close a list" library="ListComponent">
<doc>archives a list</doc>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LIST_ACTIONS_BUTTON}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220704 14:56:53.332" endtime="20220704 14:56:53.414"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Click Link</arg>
<arg>${LIST_ACTIONS_BUTTON}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Click Link" library="SeleniumLibrary">
<arg>${LIST_ACTIONS_BUTTON}</arg>
<doc>Clicks a link identified by ``locator``.</doc>
<msg timestamp="20220704 14:56:53.415" level="INFO">Clicking link 'xpath://div[@class='js-list list-wrapper'][last()]//a[@aria-label="List actions"]'.</msg>
<status status="PASS" starttime="20220704 14:56:53.415" endtime="20220704 14:56:53.519"/>
</kw>
<status status="PASS" starttime="20220704 14:56:53.414" endtime="20220704 14:56:53.519"/>
</kw>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${CLOSE_LIST_BUTTON}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220704 14:56:53.519" endtime="20220704 14:56:53.591"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Click Link</arg>
<arg>${CLOSE_LIST_BUTTON}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Click Link" library="SeleniumLibrary">
<arg>${CLOSE_LIST_BUTTON}</arg>
<doc>Clicks a link identified by ``locator``.</doc>
<msg timestamp="20220704 14:56:53.592" level="INFO">Clicking link 'xpath://li//a[@class='js-close-list']'.</msg>
<status status="PASS" starttime="20220704 14:56:53.592" endtime="20220704 14:56:53.691"/>
</kw>
<status status="PASS" starttime="20220704 14:56:53.591" endtime="20220704 14:56:53.692"/>
</kw>
<status status="PASS" starttime="20220704 14:56:53.331" endtime="20220704 14:56:53.692"/>
</kw>
<kw name="Enter to the side menu" library="TopBar">
<doc>accesing to the archive menu in the sidebar</doc>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${SHOW_MENU_BUTTON}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220704 14:56:53.693" endtime="20220704 14:56:53.748"/>
</kw>
<kw name="Click Link" library="SeleniumLibrary">
<arg>${SHOW_MENU_BUTTON}</arg>
<doc>Clicks a link identified by ``locator``.</doc>
<msg timestamp="20220704 14:56:53.749" level="INFO">Clicking link 'xpath://div[contains(@class, 'board-header')]//a[contains(., 'Show menu')]'.</msg>
<status status="PASS" starttime="20220704 14:56:53.748" endtime="20220704 14:56:53.870"/>
</kw>
<status status="PASS" starttime="20220704 14:56:53.692" endtime="20220704 14:56:53.870"/>
</kw>
<kw name="Enter to the list archive" library="ShownMenu">
<doc>accesing to the archive menu in the sidebar</doc>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${MORE_OPTIONS_SIDEBAR}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220704 14:56:53.871" endtime="20220704 14:56:53.933"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Click Link</arg>
<arg>${MORE_OPTIONS_SIDEBAR}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Click Link" library="SeleniumLibrary">
<arg>${MORE_OPTIONS_SIDEBAR}</arg>
<doc>Clicks a link identified by ``locator``.</doc>
<msg timestamp="20220704 14:56:53.934" level="INFO">Clicking link 'xpath://a[contains(@class,'board-menu-navigation-item-link') and contains(.,'More')]'.</msg>
<status status="PASS" starttime="20220704 14:56:53.933" endtime="20220704 14:56:54.082"/>
</kw>
<status status="PASS" starttime="20220704 14:56:53.933" endtime="20220704 14:56:54.083"/>
</kw>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${ARCHIVED_ITEMS_BUTTON}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220704 14:56:54.083" endtime="20220704 14:56:54.139"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Click Link</arg>
<arg>${ARCHIVED_ITEMS_BUTTON}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Click Link" library="SeleniumLibrary">
<arg>${ARCHIVED_ITEMS_BUTTON}</arg>
<doc>Clicks a link identified by ``locator``.</doc>
<msg timestamp="20220704 14:56:54.140" level="INFO">Clicking link 'xpath://a[contains(@class, 'js-open-archive')]'.</msg>
<status status="PASS" starttime="20220704 14:56:54.140" endtime="20220704 14:56:54.232"/>
</kw>
<status status="PASS" starttime="20220704 14:56:54.139" endtime="20220704 14:56:54.232"/>
</kw>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${SWITCH_TO_LIST_BUTTON}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220704 14:56:54.232" endtime="20220704 14:56:54.284"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Click Link</arg>
<arg>${SWITCH_TO_LIST_BUTTON}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Click Link" library="SeleniumLibrary">
<arg>${SWITCH_TO_LIST_BUTTON}</arg>
<doc>Clicks a link identified by ``locator``.</doc>
<msg timestamp="20220704 14:56:54.285" level="INFO">Clicking link 'xpath://div[@class='archive-controls']/a[contains(.,'Switch to lists')]'.</msg>
<status status="PASS" starttime="20220704 14:56:54.285" endtime="20220704 14:56:54.390"/>
</kw>
<status status="PASS" starttime="20220704 14:56:54.285" endtime="20220704 14:56:54.390"/>
</kw>
<status status="PASS" starttime="20220704 14:56:53.870" endtime="20220704 14:56:54.390"/>
</kw>
<kw name="Verify That A List Is In The Archive" library="ShownMenu">
<arg>TO_ARCHIVE</arg>
<doc>Verify that a given header of a list matches</doc>
<kw name="Format String" library="String">
<var>${list_name_locator_archive}</var>
<arg>${ARCHIVED_LIST_NAME_FIELD}</arg>
<arg>archived_list_title=${archived_list_title}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:56:54.391" level="INFO">${list_name_locator_archive} = xpath://div[@class='item-name']/span[.='TO_ARCHIVE']</msg>
<status status="PASS" starttime="20220704 14:56:54.391" endtime="20220704 14:56:54.391"/>
</kw>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${list_name_locator_archive}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220704 14:56:54.391" endtime="20220704 14:56:54.676"/>
</kw>
<kw name="Page Should Contain Element" library="SeleniumLibrary">
<arg>${list_name_locator_archive}</arg>
<doc>Verifies that element ``locator`` is found on the current page.</doc>
<msg timestamp="20220704 14:56:54.689" level="INFO">Current page contains element 'xpath://div[@class='item-name']/span[.='TO_ARCHIVE']'.</msg>
<status status="PASS" starttime="20220704 14:56:54.677" endtime="20220704 14:56:54.689"/>
</kw>
<status status="PASS" starttime="20220704 14:56:54.390" endtime="20220704 14:56:54.689"/>
</kw>
<kw name="Close archive tab" library="ShownMenu">
<doc>close sidebar tab</doc>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${CLOSE_SHOW_MENU}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220704 14:56:54.690" endtime="20220704 14:56:54.733"/>
</kw>
<kw name="Click Link" library="SeleniumLibrary">
<arg>${CLOSE_SHOW_MENU}</arg>
<doc>Clicks a link identified by ``locator``.</doc>
<msg timestamp="20220704 14:56:54.734" level="INFO">Clicking link 'xpath://a[@title="Close the board menu."]'.</msg>
<status status="PASS" starttime="20220704 14:56:54.734" endtime="20220704 14:56:54.799"/>
</kw>
<status status="PASS" starttime="20220704 14:56:54.690" endtime="20220704 14:56:54.799"/>
</kw>
<kw name="Close Browser" library="SeleniumLibrary" type="TEARDOWN">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20220704 14:56:54.800" endtime="20220704 14:56:54.940"/>
</kw>
<doc>verify that a list can be archived in GUI</doc>
<tag>gui</tag>
<tag>list.archive</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220704 14:56:44.597" endtime="20220704 14:56:54.940"/>
</test>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Teardown Board</arg>
<arg>Delete All Sessions</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Teardown Board">
<doc>Deletes used board for teardown</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 14:56:54.944" level="INFO">${url} = boards/62c2ff99cb85670eff3ee188</msg>
<status status="PASS" starttime="20220704 14:56:54.944" endtime="20220704 14:56:54.944"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 14:56:55.333" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:56:54.945" endtime="20220704 14:56:55.334"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:56:55.334" endtime="20220704 14:56:55.334"/>
</return>
<msg timestamp="20220704 14:56:55.334" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 14:56:54.944" endtime="20220704 14:56:55.334"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 14:56:55.334" endtime="20220704 14:56:55.334"/>
</return>
<status status="PASS" starttime="20220704 14:56:54.943" endtime="20220704 14:56:55.334"/>
</kw>
<status status="PASS" starttime="20220704 14:56:54.943" endtime="20220704 14:56:55.334"/>
</kw>
<status status="PASS" starttime="20220704 14:56:54.943" endtime="20220704 14:56:55.335"/>
</kw>
<kw name="Delete All Sessions" library="request_own_library">
<status status="PASS" starttime="20220704 14:56:55.335" endtime="20220704 14:56:55.336"/>
</kw>
<status status="PASS" starttime="20220704 14:56:54.942" endtime="20220704 14:56:55.337"/>
</kw>
<doc>List Tests</doc>
<status status="PASS" starttime="20220704 14:56:25.028" endtime="20220704 14:56:55.337"/>
</suite>
<suite id="s1-s6-s1-s5" name="Trello Gui Login" source="/trello/gui/trello_gui_login.robot">
<test id="s1-s6-s1-s5-t1" name="Login With A Valid User and Password" line="7">
<kw name="Open Browser From Environment" library="CommonGUI">
<arg>${LOGIN_URL}</arg>
<doc>This keywords takes REMOTE and BROWSER variables
from the environment automatically and only needs a url</doc>
<if>
<branch type="IF" condition="${is_remote}">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${url}</arg>
<arg>${BROWSER}</arg>
<arg>remote_url=http://selenium-hub:4444</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20220704 14:56:55.348" level="INFO">Opening browser 'chrome' to base url 'https://trello.com/login' through remote server at 'http://selenium-hub:4444'.</msg>
<status status="PASS" starttime="20220704 14:56:55.347" endtime="20220704 14:56:56.466"/>
</kw>
<status status="PASS" starttime="20220704 14:56:55.347" endtime="20220704 14:56:56.466"/>
</branch>
<branch type="ELSE">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${url}</arg>
<arg>${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<status status="NOT RUN" starttime="20220704 14:56:56.466" endtime="20220704 14:56:56.466"/>
</kw>
<status status="NOT RUN" starttime="20220704 14:56:56.466" endtime="20220704 14:56:56.466"/>
</branch>
<status status="PASS" starttime="20220704 14:56:55.347" endtime="20220704 14:56:56.466"/>
</if>
<status status="PASS" starttime="20220704 14:56:55.346" endtime="20220704 14:56:56.466"/>
</kw>
<kw name="Enter Username" library="LoginPage">
<arg>${DEFAULT_EMAIL}</arg>
<doc>Take a username as argument and
enters it in the user_input</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${USER_INPUT}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 14:56:56.467" endtime="20220704 14:56:56.527"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${USER_INPUT}</arg>
<arg>${username}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220704 14:56:56.528" level="INFO">Typing text 'bootcamp04@mailinator.com' into text field 'css:input#user'.</msg>
<status status="PASS" starttime="20220704 14:56:56.527" endtime="20220704 14:56:56.659"/>
</kw>
<status status="PASS" starttime="20220704 14:56:56.467" endtime="20220704 14:56:56.660"/>
</kw>
<kw name="Wait Until Element Is Not Visible" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<doc>Waits until the element ``locator`` is not visible.</doc>
<status status="PASS" starttime="20220704 14:56:56.660" endtime="20220704 14:56:57.396"/>
</kw>
<kw name="Click Login Button" library="LoginPage">
<doc>Clicks Trello's login button if in Trello's
login page, else it clicks Atlassian's</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220704 14:56:57.408" level="INFO">${url} = https://trello.com/login</msg>
<status status="PASS" starttime="20220704 14:56:57.397" endtime="20220704 14:56:57.408"/>
</kw>
<if>
<branch type="IF" condition="'${url}' == '${LOGIN_URL}'">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220704 14:56:57.408" endtime="20220704 14:56:57.454"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220704 14:56:57.455" level="INFO">Clicking button 'css:input#login'.</msg>
<status status="PASS" starttime="20220704 14:56:57.455" endtime="20220704 14:56:58.301"/>
</kw>
<status status="PASS" starttime="20220704 14:56:57.408" endtime="20220704 14:56:58.302"/>
</branch>
<branch type="ELSE">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="NOT RUN" starttime="20220704 14:56:58.302" endtime="20220704 14:56:58.302"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<status status="NOT RUN" starttime="20220704 14:56:58.302" endtime="20220704 14:56:58.302"/>
</kw>
<status status="NOT RUN" starttime="20220704 14:56:58.302" endtime="20220704 14:56:58.302"/>
</branch>
<status status="PASS" starttime="20220704 14:56:57.408" endtime="20220704 14:56:58.302"/>
</if>
<status status="PASS" starttime="20220704 14:56:57.396" endtime="20220704 14:56:58.303"/>
</kw>
<kw name="Wait Until Location Is Atlassian's Login" library="LoginPage">
<doc>Waits for the page redirection when logging in.</doc>
<kw name="Wait Until Location Contains" library="SeleniumLibrary">
<arg>atlassian.com</arg>
<doc>Waits until the current URL contains ``expected``.</doc>
<status status="PASS" starttime="20220704 14:56:58.303" endtime="20220704 14:56:58.330"/>
</kw>
<status status="PASS" starttime="20220704 14:56:58.303" endtime="20220704 14:56:58.331"/>
</kw>
<kw name="Enter Password" library="LoginPage">
<arg>${DEFAULT_PASSWORD}</arg>
<doc>Take a password as argument and
enters it in the password_input</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<arg>timeout=10</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 14:56:58.332" endtime="20220704 14:56:58.384"/>
</kw>
<kw name="Input Password" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<arg>${password}</arg>
<doc>Types the given password into the text field identified by ``locator``.</doc>
<msg timestamp="20220704 14:56:58.385" level="INFO">Typing password into text field 'css:input#password'.</msg>
<msg timestamp="20220704 14:56:58.472" level="INFO">Temporally setting log level to: NONE</msg>
<msg timestamp="20220704 14:56:58.566" level="INFO">Log level changed from NONE to INFO.</msg>
<status status="PASS" starttime="20220704 14:56:58.385" endtime="20220704 14:56:58.566"/>
</kw>
<status status="PASS" starttime="20220704 14:56:58.331" endtime="20220704 14:56:58.566"/>
</kw>
<kw name="Click Login Button" library="LoginPage">
<doc>Clicks Trello's login button if in Trello's
login page, else it clicks Atlassian's</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220704 14:56:58.599" level="INFO">${url} = https://id.atlassian.com/login?application=trello&amp;continue=https%3A%2F%2Ftrello.com%2Fauth%2Fatlassian%2Fcallback%3FreturnUrl%3D%252F%26display%3D%26aaOnboarding%3D%26updateEmail%3D%26traceId%3D62c2ff...</msg>
<status status="PASS" starttime="20220704 14:56:58.567" endtime="20220704 14:56:58.599"/>
</kw>
<if>
<branch type="IF" condition="'${url}' == '${LOGIN_URL}'">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="NOT RUN" starttime="20220704 14:56:58.599" endtime="20220704 14:56:58.599"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<status status="NOT RUN" starttime="20220704 14:56:58.599" endtime="20220704 14:56:58.599"/>
</kw>
<status status="NOT RUN" starttime="20220704 14:56:58.599" endtime="20220704 14:56:58.600"/>
</branch>
<branch type="ELSE">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220704 14:56:58.600" endtime="20220704 14:56:58.654"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220704 14:56:58.654" level="INFO">Clicking button 'css:button#login-submit'.</msg>
<status status="PASS" starttime="20220704 14:56:58.654" endtime="20220704 14:56:58.761"/>
</kw>
<status status="PASS" starttime="20220704 14:56:58.600" endtime="20220704 14:56:58.761"/>
</branch>
<status status="PASS" starttime="20220704 14:56:58.599" endtime="20220704 14:56:58.761"/>
</if>
<status status="PASS" starttime="20220704 14:56:58.567" endtime="20220704 14:56:58.761"/>
</kw>
<kw name="Verify Current Page Is Boards Page" library="BoardsPage">
<doc>Assert that the browser is showing the boards page.</doc>
<kw name="Wait Until Location Contains" library="SeleniumLibrary">
<arg>${BOARDS_PATH}</arg>
<doc>Waits until the current URL contains ``expected``.</doc>
<status status="PASS" starttime="20220704 14:56:58.762" endtime="20220704 14:57:02.069"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${YOUR_WORKSPACES}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 14:57:02.070" endtime="20220704 14:57:02.115"/>
</kw>
<kw name="Element Text Should Be" library="SeleniumLibrary">
<arg>${YOUR_WORKSPACES}</arg>
<arg>YOUR WORKSPACES</arg>
<doc>Verifies that element ``locator`` contains exact the text ``expected``.</doc>
<msg timestamp="20220704 14:57:02.116" level="INFO">Verifying element 'css:h3.boards-page-section-header-name' contains exact text 'YOUR WORKSPACES'.</msg>
<status status="PASS" starttime="20220704 14:57:02.115" endtime="20220704 14:57:02.147"/>
</kw>
<status status="PASS" starttime="20220704 14:56:58.761" endtime="20220704 14:57:02.147"/>
</kw>
<kw name="Close Browser" library="SeleniumLibrary" type="TEARDOWN">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20220704 14:57:02.148" endtime="20220704 14:57:02.259"/>
</kw>
<doc>Verify that it is possible to login through
Trello's GUI using a valid email and password.</doc>
<tag>gui</tag>
<tag>login</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220704 14:56:55.346" endtime="20220704 14:57:02.259"/>
</test>
<doc>Example Trello Login Test</doc>
<status status="PASS" starttime="20220704 14:56:55.339" endtime="20220704 14:57:02.260"/>
</suite>
<status status="PASS" starttime="20220704 14:54:47.844" endtime="20220704 14:57:02.264"/>
</suite>
<status status="PASS" starttime="20220704 14:54:47.826" endtime="20220704 14:57:02.268"/>
</suite>
<suite id="s1-s7" name="Trello" source="/trello">
<suite id="s1-s7-s1" name="Api" source="/trello/api">
<suite id="s1-s7-s1-s1" name="Trello Api Boards Tests" source="/trello/api/trello_api_boards_tests.robot">
<kw name="Create Trello Session" library="TrelloAPI" type="SETUP">
<doc>Creates a Trello Session</doc>
<kw name="Create Session" library="request_own_library">
<arg>${API_BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<status status="PASS" starttime="20220704 15:25:51.720" endtime="20220704 15:25:51.721"/>
</kw>
<status status="PASS" starttime="20220704 15:25:51.719" endtime="20220704 15:25:51.721"/>
</kw>
<test id="s1-s7-s1-s1-t1" name="CREATE a board" line="9">
<kw name="Create A Board" library="Board">
<var>${response}</var>
<arg>NewBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 15:25:51.723" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 15:25:51.722" endtime="20220704 15:25:51.723"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 15:25:51.723" endtime="20220704 15:25:51.723"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 15:25:51.724" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220704 15:25:51.723" endtime="20220704 15:25:51.724"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 15:25:51.986" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:25:51.724" endtime="20220704 15:25:51.986"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:25:51.986" endtime="20220704 15:25:51.986"/>
</return>
<msg timestamp="20220704 15:25:51.986" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:25:51.722" endtime="20220704 15:25:51.986"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:25:51.986" endtime="20220704 15:25:51.986"/>
</return>
<msg timestamp="20220704 15:25:51.986" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:25:51.722" endtime="20220704 15:25:51.986"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>board</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220704 15:25:51.987" endtime="20220704 15:25:51.991"/>
</kw>
<status status="PASS" starttime="20220704 15:25:51.986" endtime="20220704 15:25:51.991"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${response.json()}[id]</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${response.json()}[id]</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 15:25:51.993" level="INFO">${url} = boards/62c3067f5a465c8abb7d5e87</msg>
<status status="PASS" starttime="20220704 15:25:51.993" endtime="20220704 15:25:51.993"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 15:25:52.333" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:25:51.993" endtime="20220704 15:25:52.333"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:25:52.333" endtime="20220704 15:25:52.333"/>
</return>
<msg timestamp="20220704 15:25:52.333" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:25:51.992" endtime="20220704 15:25:52.333"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:25:52.333" endtime="20220704 15:25:52.333"/>
</return>
<status status="PASS" starttime="20220704 15:25:51.992" endtime="20220704 15:25:52.333"/>
</kw>
<status status="PASS" starttime="20220704 15:25:51.991" endtime="20220704 15:25:52.333"/>
</kw>
<doc>Verify that a board can be create through API</doc>
<tag>api</tag>
<tag>board.create</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220704 15:25:51.721" endtime="20220704 15:25:52.333"/>
</test>
<test id="s1-s7-s1-s1-t2" name="UPDATE a Board's name" line="16">
<kw name="Create A Board" library="Board">
<var>${response}</var>
<arg>NewBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 15:25:52.336" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 15:25:52.336" endtime="20220704 15:25:52.337"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 15:25:52.337" endtime="20220704 15:25:52.337"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 15:25:52.338" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220704 15:25:52.337" endtime="20220704 15:25:52.338"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 15:25:52.546" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:25:52.338" endtime="20220704 15:25:52.546"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:25:52.547" endtime="20220704 15:25:52.547"/>
</return>
<msg timestamp="20220704 15:25:52.547" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:25:52.336" endtime="20220704 15:25:52.547"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:25:52.547" endtime="20220704 15:25:52.547"/>
</return>
<msg timestamp="20220704 15:25:52.547" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:25:52.335" endtime="20220704 15:25:52.547"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>board</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220704 15:25:52.548" endtime="20220704 15:25:52.551"/>
</kw>
<status status="PASS" starttime="20220704 15:25:52.547" endtime="20220704 15:25:52.551"/>
</kw>
<kw name="Update A Board" library="Board">
<arg>${response.json()}[id]</arg>
<arg>name</arg>
<arg>NewName</arg>
<doc>Updates the board with the given ID
optional_args: name, desc, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 15:25:52.553" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 15:25:52.553" endtime="20220704 15:25:52.553"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 15:25:52.553" endtime="20220704 15:25:52.553"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 15:25:52.554" level="INFO">${url} = boards/62c306805dbbac26de834185</msg>
<status status="PASS" starttime="20220704 15:25:52.553" endtime="20220704 15:25:52.554"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 15:25:52.642" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:25:52.554" endtime="20220704 15:25:52.642"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:25:52.642" endtime="20220704 15:25:52.642"/>
</return>
<msg timestamp="20220704 15:25:52.642" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:25:52.552" endtime="20220704 15:25:52.642"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:25:52.642" endtime="20220704 15:25:52.642"/>
</return>
<status status="PASS" starttime="20220704 15:25:52.552" endtime="20220704 15:25:52.642"/>
</kw>
<kw name="Get A Board" library="Board">
<var>${new_response}</var>
<arg>${response.json()}[id]</arg>
<doc>Gets the Board with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 15:25:52.644" level="INFO">${url} = boards/62c306805dbbac26de834185</msg>
<status status="PASS" starttime="20220704 15:25:52.644" endtime="20220704 15:25:52.644"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 15:25:52.690" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:25:52.644" endtime="20220704 15:25:52.690"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:25:52.691" endtime="20220704 15:25:52.691"/>
</return>
<msg timestamp="20220704 15:25:52.691" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:25:52.643" endtime="20220704 15:25:52.691"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:25:52.691" endtime="20220704 15:25:52.691"/>
</return>
<msg timestamp="20220704 15:25:52.691" level="INFO">${new_response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:25:52.643" endtime="20220704 15:25:52.691"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${new_response}</arg>
<arg>board</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220704 15:25:52.692" endtime="20220704 15:25:52.695"/>
</kw>
<status status="PASS" starttime="20220704 15:25:52.691" endtime="20220704 15:25:52.695"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${new_response.json()}[name]</arg>
<arg>NewName</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220704 15:25:52.696" endtime="20220704 15:25:52.696"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${response.json()}[id]</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${response.json()}[id]</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 15:25:52.698" level="INFO">${url} = boards/62c306805dbbac26de834185</msg>
<status status="PASS" starttime="20220704 15:25:52.698" endtime="20220704 15:25:52.698"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 15:25:53.024" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:25:52.698" endtime="20220704 15:25:53.024"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:25:53.024" endtime="20220704 15:25:53.024"/>
</return>
<msg timestamp="20220704 15:25:53.024" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:25:52.697" endtime="20220704 15:25:53.024"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:25:53.024" endtime="20220704 15:25:53.024"/>
</return>
<status status="PASS" starttime="20220704 15:25:52.697" endtime="20220704 15:25:53.024"/>
</kw>
<status status="PASS" starttime="20220704 15:25:52.696" endtime="20220704 15:25:53.024"/>
</kw>
<doc>Verify that a board's name can be updated through API</doc>
<tag>api</tag>
<tag>board.update</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220704 15:25:52.335" endtime="20220704 15:25:53.024"/>
</test>
<test id="s1-s7-s1-s1-t3" name="DELETE A Board" line="27">
<kw name="Create A Board" library="Board">
<var>${response}</var>
<arg>NewBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 15:25:53.027" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 15:25:53.027" endtime="20220704 15:25:53.027"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 15:25:53.027" endtime="20220704 15:25:53.027"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 15:25:53.028" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220704 15:25:53.027" endtime="20220704 15:25:53.028"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 15:25:53.282" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:25:53.028" endtime="20220704 15:25:53.282"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:25:53.282" endtime="20220704 15:25:53.282"/>
</return>
<msg timestamp="20220704 15:25:53.282" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:25:53.026" endtime="20220704 15:25:53.282"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:25:53.282" endtime="20220704 15:25:53.282"/>
</return>
<msg timestamp="20220704 15:25:53.282" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:25:53.026" endtime="20220704 15:25:53.282"/>
</kw>
<kw name="Delete A Board" library="Board">
<arg>${response.json()}[id]</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 15:25:53.284" level="INFO">${url} = boards/62c306817b9fca55f688b192</msg>
<status status="PASS" starttime="20220704 15:25:53.284" endtime="20220704 15:25:53.284"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 15:25:53.581" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:25:53.284" endtime="20220704 15:25:53.581"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:25:53.581" endtime="20220704 15:25:53.581"/>
</return>
<msg timestamp="20220704 15:25:53.582" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:25:53.283" endtime="20220704 15:25:53.582"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:25:53.582" endtime="20220704 15:25:53.582"/>
</return>
<status status="PASS" starttime="20220704 15:25:53.282" endtime="20220704 15:25:53.582"/>
</kw>
<kw name="Get A Board" library="Board">
<arg>${response.json()}[id]</arg>
<arg>status_code=404</arg>
<doc>Gets the Board with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 15:25:53.584" level="INFO">${url} = boards/62c306817b9fca55f688b192</msg>
<status status="PASS" starttime="20220704 15:25:53.583" endtime="20220704 15:25:53.584"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 15:25:53.627" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220704 15:25:53.584" endtime="20220704 15:25:53.627"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:25:53.627" endtime="20220704 15:25:53.627"/>
</return>
<msg timestamp="20220704 15:25:53.627" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220704 15:25:53.583" endtime="20220704 15:25:53.627"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:25:53.627" endtime="20220704 15:25:53.627"/>
</return>
<status status="PASS" starttime="20220704 15:25:53.582" endtime="20220704 15:25:53.627"/>
</kw>
<doc>Verify that a board can be deleted through API</doc>
<tag>api</tag>
<tag>board.delete</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220704 15:25:53.025" endtime="20220704 15:25:53.627"/>
</test>
<test id="s1-s7-s1-s1-t4" name="GET Information of A Board" line="34">
<kw name="Create A Board" library="Board">
<var>${response}</var>
<arg>BoardTest</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 15:25:53.630" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 15:25:53.630" endtime="20220704 15:25:53.630"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 15:25:53.630" endtime="20220704 15:25:53.630"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 15:25:53.631" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220704 15:25:53.630" endtime="20220704 15:25:53.631"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 15:25:53.852" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:25:53.631" endtime="20220704 15:25:53.852"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:25:53.852" endtime="20220704 15:25:53.852"/>
</return>
<msg timestamp="20220704 15:25:53.853" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:25:53.629" endtime="20220704 15:25:53.853"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:25:53.853" endtime="20220704 15:25:53.853"/>
</return>
<msg timestamp="20220704 15:25:53.853" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:25:53.629" endtime="20220704 15:25:53.853"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>board</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220704 15:25:53.853" endtime="20220704 15:25:53.857"/>
</kw>
<status status="PASS" starttime="20220704 15:25:53.853" endtime="20220704 15:25:53.857"/>
</kw>
<kw name="Get A Board" library="Board">
<var>${response2}</var>
<arg>${response.json()}[id]</arg>
<doc>Gets the Board with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 15:25:53.859" level="INFO">${url} = boards/62c306812f26fd3bc14f522d</msg>
<status status="PASS" starttime="20220704 15:25:53.859" endtime="20220704 15:25:53.859"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 15:25:53.913" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:25:53.859" endtime="20220704 15:25:53.913"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:25:53.913" endtime="20220704 15:25:53.913"/>
</return>
<msg timestamp="20220704 15:25:53.914" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:25:53.858" endtime="20220704 15:25:53.914"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:25:53.914" endtime="20220704 15:25:53.914"/>
</return>
<msg timestamp="20220704 15:25:53.914" level="INFO">${response2} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:25:53.857" endtime="20220704 15:25:53.914"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response2}</arg>
<arg>board</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220704 15:25:53.914" endtime="20220704 15:25:53.918"/>
</kw>
<status status="PASS" starttime="20220704 15:25:53.914" endtime="20220704 15:25:53.918"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${response2.json()}[name]</arg>
<arg>BoardTest</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220704 15:25:53.918" endtime="20220704 15:25:53.919"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${response.json()}[id]</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${response.json()}[id]</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 15:25:53.921" level="INFO">${url} = boards/62c306812f26fd3bc14f522d</msg>
<status status="PASS" starttime="20220704 15:25:53.920" endtime="20220704 15:25:53.921"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 15:25:54.297" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:25:53.921" endtime="20220704 15:25:54.297"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:25:54.297" endtime="20220704 15:25:54.297"/>
</return>
<msg timestamp="20220704 15:25:54.297" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:25:53.920" endtime="20220704 15:25:54.297"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:25:54.297" endtime="20220704 15:25:54.297"/>
</return>
<status status="PASS" starttime="20220704 15:25:53.919" endtime="20220704 15:25:54.298"/>
</kw>
<status status="PASS" starttime="20220704 15:25:53.919" endtime="20220704 15:25:54.298"/>
</kw>
<doc>Verify that a board's information can be accesed through API</doc>
<tag>api</tag>
<tag>board.get</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220704 15:25:53.628" endtime="20220704 15:25:54.298"/>
</test>
<test id="s1-s7-s1-s1-t5" name="UPDATE a Board's description" line="45">
<kw name="Create A Board" library="Board">
<var>${response}</var>
<arg>NewBoardForTest</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 15:25:54.300" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 15:25:54.299" endtime="20220704 15:25:54.300"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 15:25:54.300" endtime="20220704 15:25:54.300"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 15:25:54.301" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220704 15:25:54.300" endtime="20220704 15:25:54.301"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 15:25:54.465" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:25:54.301" endtime="20220704 15:25:54.465"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:25:54.465" endtime="20220704 15:25:54.465"/>
</return>
<msg timestamp="20220704 15:25:54.466" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:25:54.299" endtime="20220704 15:25:54.466"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:25:54.466" endtime="20220704 15:25:54.466"/>
</return>
<msg timestamp="20220704 15:25:54.466" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:25:54.299" endtime="20220704 15:25:54.466"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>board</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220704 15:25:54.466" endtime="20220704 15:25:54.470"/>
</kw>
<status status="PASS" starttime="20220704 15:25:54.466" endtime="20220704 15:25:54.471"/>
</kw>
<kw name="Update A Board" library="Board">
<arg>${response.json()}[id]</arg>
<arg>desc</arg>
<arg>sampleDescription</arg>
<doc>Updates the board with the given ID
optional_args: name, desc, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 15:25:54.472" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 15:25:54.472" endtime="20220704 15:25:54.472"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 15:25:54.472" endtime="20220704 15:25:54.472"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 15:25:54.473" level="INFO">${url} = boards/62c3068230ed988d649977ac</msg>
<status status="PASS" starttime="20220704 15:25:54.472" endtime="20220704 15:25:54.473"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 15:25:54.591" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:25:54.473" endtime="20220704 15:25:54.591"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:25:54.591" endtime="20220704 15:25:54.591"/>
</return>
<msg timestamp="20220704 15:25:54.591" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:25:54.471" endtime="20220704 15:25:54.591"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:25:54.591" endtime="20220704 15:25:54.591"/>
</return>
<status status="PASS" starttime="20220704 15:25:54.471" endtime="20220704 15:25:54.591"/>
</kw>
<kw name="Get A Board" library="Board">
<var>${new_response}</var>
<arg>${response.json()}[id]</arg>
<doc>Gets the Board with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 15:25:54.593" level="INFO">${url} = boards/62c3068230ed988d649977ac</msg>
<status status="PASS" starttime="20220704 15:25:54.593" endtime="20220704 15:25:54.593"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 15:25:54.645" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:25:54.593" endtime="20220704 15:25:54.645"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:25:54.645" endtime="20220704 15:25:54.645"/>
</return>
<msg timestamp="20220704 15:25:54.645" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:25:54.592" endtime="20220704 15:25:54.645"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:25:54.645" endtime="20220704 15:25:54.645"/>
</return>
<msg timestamp="20220704 15:25:54.645" level="INFO">${new_response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:25:54.592" endtime="20220704 15:25:54.645"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${new_response.json()}[desc]</arg>
<arg>sampleDescription</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220704 15:25:54.645" endtime="20220704 15:25:54.646"/>
</kw>
<kw name="Update A Board" library="Board">
<arg>${response.json()}[id]</arg>
<arg>desc</arg>
<arg>updatedDescription</arg>
<doc>Updates the board with the given ID
optional_args: name, desc, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 15:25:54.648" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 15:25:54.648" endtime="20220704 15:25:54.648"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 15:25:54.648" endtime="20220704 15:25:54.648"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 15:25:54.648" level="INFO">${url} = boards/62c3068230ed988d649977ac</msg>
<status status="PASS" starttime="20220704 15:25:54.648" endtime="20220704 15:25:54.649"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 15:25:54.737" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:25:54.649" endtime="20220704 15:25:54.737"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:25:54.737" endtime="20220704 15:25:54.737"/>
</return>
<msg timestamp="20220704 15:25:54.737" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:25:54.647" endtime="20220704 15:25:54.737"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:25:54.737" endtime="20220704 15:25:54.738"/>
</return>
<status status="PASS" starttime="20220704 15:25:54.646" endtime="20220704 15:25:54.738"/>
</kw>
<kw name="Get A Board" library="Board">
<var>${new_response2}</var>
<arg>${response.json()}[id]</arg>
<doc>Gets the Board with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 15:25:54.739" level="INFO">${url} = boards/62c3068230ed988d649977ac</msg>
<status status="PASS" starttime="20220704 15:25:54.739" endtime="20220704 15:25:54.739"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 15:25:54.788" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:25:54.739" endtime="20220704 15:25:54.788"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:25:54.788" endtime="20220704 15:25:54.788"/>
</return>
<msg timestamp="20220704 15:25:54.788" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:25:54.739" endtime="20220704 15:25:54.788"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:25:54.788" endtime="20220704 15:25:54.788"/>
</return>
<msg timestamp="20220704 15:25:54.789" level="INFO">${new_response2} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:25:54.738" endtime="20220704 15:25:54.789"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${new_response2.json()}[desc]</arg>
<arg>updatedDescription</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220704 15:25:54.789" endtime="20220704 15:25:54.789"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${response.json()}[id]</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${response.json()}[id]</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 15:25:54.791" level="INFO">${url} = boards/62c3068230ed988d649977ac</msg>
<status status="PASS" starttime="20220704 15:25:54.791" endtime="20220704 15:25:54.791"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 15:25:55.099" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:25:54.791" endtime="20220704 15:25:55.099"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:25:55.099" endtime="20220704 15:25:55.099"/>
</return>
<msg timestamp="20220704 15:25:55.099" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:25:54.791" endtime="20220704 15:25:55.099"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:25:55.099" endtime="20220704 15:25:55.099"/>
</return>
<status status="PASS" starttime="20220704 15:25:54.790" endtime="20220704 15:25:55.100"/>
</kw>
<status status="PASS" starttime="20220704 15:25:54.790" endtime="20220704 15:25:55.100"/>
</kw>
<doc>Verify that a board's description can be updated through API</doc>
<tag>api</tag>
<tag>board.update</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220704 15:25:54.298" endtime="20220704 15:25:55.100"/>
</test>
<kw name="Delete All Sessions" library="request_own_library" type="TEARDOWN">
<status status="PASS" starttime="20220704 15:25:55.101" endtime="20220704 15:25:55.102"/>
</kw>
<doc>Example Test with Trello API Boards</doc>
<status status="PASS" starttime="20220704 15:25:51.617" endtime="20220704 15:25:55.102"/>
</suite>
<suite id="s1-s7-s1-s2" name="Trello Api Cards Tests" source="/trello/api/trello_api_cards_tests.robot">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Create Trello Session</arg>
<arg>Setup Board And List</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Create Trello Session" library="TrelloAPI">
<doc>Creates a Trello Session</doc>
<kw name="Create Session" library="request_own_library">
<arg>${API_BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<status status="PASS" starttime="20220704 15:25:55.113" endtime="20220704 15:25:55.113"/>
</kw>
<status status="PASS" starttime="20220704 15:25:55.113" endtime="20220704 15:25:55.113"/>
</kw>
<kw name="Setup Board And List">
<doc>Create a board and save its ID and its first list's ID</doc>
<kw name="Create A Board" library="Board">
<var>${BOARD}</var>
<arg>TestBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 15:25:55.114" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 15:25:55.114" endtime="20220704 15:25:55.114"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 15:25:55.114" endtime="20220704 15:25:55.114"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 15:25:55.115" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220704 15:25:55.114" endtime="20220704 15:25:55.115"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 15:25:55.310" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:25:55.115" endtime="20220704 15:25:55.310"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:25:55.310" endtime="20220704 15:25:55.310"/>
</return>
<msg timestamp="20220704 15:25:55.310" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:25:55.114" endtime="20220704 15:25:55.310"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:25:55.310" endtime="20220704 15:25:55.310"/>
</return>
<msg timestamp="20220704 15:25:55.310" level="INFO">${BOARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:25:55.113" endtime="20220704 15:25:55.310"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_BOARD_ID}</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220704 15:25:55.311" level="INFO">${TEST_SUITE_BOARD_ID} = 62c30683f31e817593048ca1</msg>
<status status="PASS" starttime="20220704 15:25:55.310" endtime="20220704 15:25:55.311"/>
</kw>
<kw name="Get Lists On A Board" library="Board">
<var>${LISTS}</var>
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Get all the lists in a board</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>lists_on_board</arg>
<arg>${id}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 15:25:55.312" level="INFO">${url} = boards/62c30683f31e817593048ca1/lists/</msg>
<status status="PASS" starttime="20220704 15:25:55.312" endtime="20220704 15:25:55.312"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 15:25:55.360" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:25:55.312" endtime="20220704 15:25:55.360"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:25:55.360" endtime="20220704 15:25:55.360"/>
</return>
<msg timestamp="20220704 15:25:55.360" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:25:55.312" endtime="20220704 15:25:55.360"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:25:55.360" endtime="20220704 15:25:55.360"/>
</return>
<msg timestamp="20220704 15:25:55.361" level="INFO">${LISTS} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:25:55.311" endtime="20220704 15:25:55.361"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_LIST_ID}</arg>
<arg>${LISTS.json()}[0][id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220704 15:25:55.361" level="INFO">${TEST_SUITE_LIST_ID} = 62c30683f31e817593048ca8</msg>
<status status="PASS" starttime="20220704 15:25:55.361" endtime="20220704 15:25:55.361"/>
</kw>
<status status="PASS" starttime="20220704 15:25:55.113" endtime="20220704 15:25:55.361"/>
</kw>
<status status="PASS" starttime="20220704 15:25:55.112" endtime="20220704 15:25:55.362"/>
</kw>
<test id="s1-s7-s1-s2-t1" name="Verify A Card Can Be Created" line="13">
<kw name="Create A Card" library="Card">
<var>${response}</var>
<arg>name</arg>
<arg>RFCard2</arg>
<doc>Creates a new card in the given list.
required_args: listId
optional_args: name, desc, pos, idCardSource, idLabels, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>@{optional_args}</arg>
<arg>idList</arg>
<arg>${idList}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 15:25:55.363" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 15:25:55.363" endtime="20220704 15:25:55.363"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 15:25:55.363" endtime="20220704 15:25:55.364"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 15:25:55.364" level="INFO">${url} = cards/</msg>
<status status="PASS" starttime="20220704 15:25:55.364" endtime="20220704 15:25:55.364"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 15:25:55.552" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:25:55.364" endtime="20220704 15:25:55.552"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:25:55.552" endtime="20220704 15:25:55.552"/>
</return>
<msg timestamp="20220704 15:25:55.552" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:25:55.363" endtime="20220704 15:25:55.552"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:25:55.552" endtime="20220704 15:25:55.552"/>
</return>
<msg timestamp="20220704 15:25:55.552" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:25:55.362" endtime="20220704 15:25:55.553"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>card</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220704 15:25:55.553" endtime="20220704 15:25:55.558"/>
</kw>
<status status="PASS" starttime="20220704 15:25:55.553" endtime="20220704 15:25:55.558"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 15:25:55.558" endtime="20220704 15:25:55.558"/>
</return>
<msg timestamp="20220704 15:25:55.559" level="INFO">${CARD_ID} = 62c306834955fd7fbd0fee80</msg>
<status status="PASS" starttime="20220704 15:25:55.558" endtime="20220704 15:25:55.559"/>
</kw>
<kw name="Get A Card" library="Card">
<var>${response}</var>
<arg>${CARD_ID}</arg>
<doc>Gets the card with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 15:25:55.560" level="INFO">${url} = cards/62c306834955fd7fbd0fee80</msg>
<status status="PASS" starttime="20220704 15:25:55.560" endtime="20220704 15:25:55.560"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 15:25:55.617" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:25:55.560" endtime="20220704 15:25:55.617"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:25:55.617" endtime="20220704 15:25:55.617"/>
</return>
<msg timestamp="20220704 15:25:55.617" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:25:55.559" endtime="20220704 15:25:55.617"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:25:55.618" endtime="20220704 15:25:55.618"/>
</return>
<msg timestamp="20220704 15:25:55.618" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:25:55.559" endtime="20220704 15:25:55.618"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_NAME}</var>
<arg>${response}</arg>
<arg>name</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 15:25:55.618" endtime="20220704 15:25:55.618"/>
</return>
<msg timestamp="20220704 15:25:55.619" level="INFO">${CARD_NAME} = RFCard2</msg>
<status status="PASS" starttime="20220704 15:25:55.618" endtime="20220704 15:25:55.619"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${CARD_NAME}</arg>
<arg>RFCard2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220704 15:25:55.619" endtime="20220704 15:25:55.619"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Card</arg>
<arg>${CARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Card" library="Card">
<arg>${CARD_ID}</arg>
<doc>Deletes the card with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 15:25:55.621" level="INFO">${url} = cards/62c306834955fd7fbd0fee80</msg>
<status status="PASS" starttime="20220704 15:25:55.620" endtime="20220704 15:25:55.621"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 15:25:55.799" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:25:55.621" endtime="20220704 15:25:55.799"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:25:55.799" endtime="20220704 15:25:55.799"/>
</return>
<msg timestamp="20220704 15:25:55.799" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:25:55.620" endtime="20220704 15:25:55.799"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:25:55.799" endtime="20220704 15:25:55.799"/>
</return>
<status status="PASS" starttime="20220704 15:25:55.620" endtime="20220704 15:25:55.799"/>
</kw>
<status status="PASS" starttime="20220704 15:25:55.619" endtime="20220704 15:25:55.799"/>
</kw>
<doc>Verify that a card can be created through API</doc>
<tag>api</tag>
<tag>card.create</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220704 15:25:55.362" endtime="20220704 15:25:55.799"/>
</test>
<test id="s1-s7-s1-s2-t2" name="Verify A Card Can Be Closed" line="24">
<kw name="Create A Card" library="Card">
<var>${response}</var>
<doc>Creates a new card in the given list.
required_args: listId
optional_args: name, desc, pos, idCardSource, idLabels, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>@{optional_args}</arg>
<arg>idList</arg>
<arg>${idList}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 15:25:55.801" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 15:25:55.801" endtime="20220704 15:25:55.801"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 15:25:55.802" endtime="20220704 15:25:55.802"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 15:25:55.802" level="INFO">${url} = cards/</msg>
<status status="PASS" starttime="20220704 15:25:55.802" endtime="20220704 15:25:55.802"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 15:25:56.131" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:25:55.803" endtime="20220704 15:25:56.131"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:25:56.131" endtime="20220704 15:25:56.131"/>
</return>
<msg timestamp="20220704 15:25:56.131" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:25:55.801" endtime="20220704 15:25:56.131"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:25:56.131" endtime="20220704 15:25:56.131"/>
</return>
<msg timestamp="20220704 15:25:56.132" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:25:55.800" endtime="20220704 15:25:56.132"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 15:25:56.132" endtime="20220704 15:25:56.132"/>
</return>
<msg timestamp="20220704 15:25:56.133" level="INFO">${CARD_ID} = 62c306844f34b45a0966c09b</msg>
<status status="PASS" starttime="20220704 15:25:56.132" endtime="20220704 15:25:56.133"/>
</kw>
<kw name="Archive A Card" library="Card">
<arg>${CARD_ID}</arg>
<doc>Modifies the card status to closed.</doc>
<kw name="Update A Card" library="Card">
<var>${response}</var>
<arg>${id}</arg>
<arg>closed</arg>
<arg>true</arg>
<arg>status_code=${status_code}</arg>
<doc>Updates the card with the given ID
optional_args: name, desc, closed, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<arg>status_code=${status_code}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 15:25:56.135" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 15:25:56.134" endtime="20220704 15:25:56.135"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 15:25:56.135" endtime="20220704 15:25:56.135"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 15:25:56.135" level="INFO">${url} = cards/62c306844f34b45a0966c09b</msg>
<status status="PASS" starttime="20220704 15:25:56.135" endtime="20220704 15:25:56.135"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 15:25:56.263" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:25:56.135" endtime="20220704 15:25:56.263"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:25:56.263" endtime="20220704 15:25:56.263"/>
</return>
<msg timestamp="20220704 15:25:56.263" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:25:56.134" endtime="20220704 15:25:56.263"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:25:56.263" endtime="20220704 15:25:56.263"/>
</return>
<msg timestamp="20220704 15:25:56.264" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:25:56.133" endtime="20220704 15:25:56.264"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:25:56.264" endtime="20220704 15:25:56.264"/>
</return>
<status status="PASS" starttime="20220704 15:25:56.133" endtime="20220704 15:25:56.264"/>
</kw>
<kw name="Get A Card" library="Card">
<var>${response}</var>
<arg>${CARD_ID}</arg>
<doc>Gets the card with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 15:25:56.265" level="INFO">${url} = cards/62c306844f34b45a0966c09b</msg>
<status status="PASS" starttime="20220704 15:25:56.265" endtime="20220704 15:25:56.265"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 15:25:56.318" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:25:56.265" endtime="20220704 15:25:56.318"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:25:56.318" endtime="20220704 15:25:56.318"/>
</return>
<msg timestamp="20220704 15:25:56.318" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:25:56.264" endtime="20220704 15:25:56.318"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:25:56.318" endtime="20220704 15:25:56.318"/>
</return>
<msg timestamp="20220704 15:25:56.319" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:25:56.264" endtime="20220704 15:25:56.319"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_CLOSED}</var>
<arg>${response}</arg>
<arg>closed</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 15:25:56.319" endtime="20220704 15:25:56.319"/>
</return>
<msg timestamp="20220704 15:25:56.320" level="INFO">${CARD_CLOSED} = True</msg>
<status status="PASS" starttime="20220704 15:25:56.319" endtime="20220704 15:25:56.320"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${CARD_CLOSED}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220704 15:25:56.320" endtime="20220704 15:25:56.320"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Card</arg>
<arg>${CARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Card" library="Card">
<arg>${CARD_ID}</arg>
<doc>Deletes the card with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 15:25:56.322" level="INFO">${url} = cards/62c306844f34b45a0966c09b</msg>
<status status="PASS" starttime="20220704 15:25:56.321" endtime="20220704 15:25:56.322"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 15:25:56.470" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:25:56.322" endtime="20220704 15:25:56.470"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:25:56.470" endtime="20220704 15:25:56.470"/>
</return>
<msg timestamp="20220704 15:25:56.471" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:25:56.321" endtime="20220704 15:25:56.471"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:25:56.471" endtime="20220704 15:25:56.471"/>
</return>
<status status="PASS" starttime="20220704 15:25:56.321" endtime="20220704 15:25:56.471"/>
</kw>
<status status="PASS" starttime="20220704 15:25:56.320" endtime="20220704 15:25:56.471"/>
</kw>
<doc>Verify that a card can be closed through API</doc>
<tag>api</tag>
<tag>card.close</tag>
<tag>regression</tag>
<status status="PASS" starttime="20220704 15:25:55.800" endtime="20220704 15:25:56.471"/>
</test>
<test id="s1-s7-s1-s2-t3" name="Verify A Card Can Be Deleted" line="35">
<kw name="Create A Card" library="Card">
<var>${response}</var>
<doc>Creates a new card in the given list.
required_args: listId
optional_args: name, desc, pos, idCardSource, idLabels, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>@{optional_args}</arg>
<arg>idList</arg>
<arg>${idList}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 15:25:56.473" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 15:25:56.473" endtime="20220704 15:25:56.473"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 15:25:56.473" endtime="20220704 15:25:56.474"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 15:25:56.474" level="INFO">${url} = cards/</msg>
<status status="PASS" starttime="20220704 15:25:56.474" endtime="20220704 15:25:56.474"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 15:25:56.643" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:25:56.474" endtime="20220704 15:25:56.643"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:25:56.644" endtime="20220704 15:25:56.644"/>
</return>
<msg timestamp="20220704 15:25:56.644" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:25:56.472" endtime="20220704 15:25:56.644"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:25:56.644" endtime="20220704 15:25:56.644"/>
</return>
<msg timestamp="20220704 15:25:56.644" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:25:56.472" endtime="20220704 15:25:56.644"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 15:25:56.645" endtime="20220704 15:25:56.645"/>
</return>
<msg timestamp="20220704 15:25:56.645" level="INFO">${CARD_ID} = 62c30684d1350c4480908634</msg>
<status status="PASS" starttime="20220704 15:25:56.644" endtime="20220704 15:25:56.645"/>
</kw>
<kw name="Delete A Card" library="Card">
<var>${response}</var>
<arg>${CARD_ID}</arg>
<doc>Deletes the card with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 15:25:56.646" level="INFO">${url} = cards/62c30684d1350c4480908634</msg>
<status status="PASS" starttime="20220704 15:25:56.646" endtime="20220704 15:25:56.646"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 15:25:57.041" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:25:56.647" endtime="20220704 15:25:57.041"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:25:57.041" endtime="20220704 15:25:57.041"/>
</return>
<msg timestamp="20220704 15:25:57.042" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:25:56.646" endtime="20220704 15:25:57.042"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:25:57.042" endtime="20220704 15:25:57.042"/>
</return>
<msg timestamp="20220704 15:25:57.042" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:25:56.645" endtime="20220704 15:25:57.042"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>delete</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220704 15:25:57.042" endtime="20220704 15:25:57.044"/>
</kw>
<status status="PASS" starttime="20220704 15:25:57.042" endtime="20220704 15:25:57.044"/>
</kw>
<kw name="Get A Card" library="Card">
<arg>${CARD_ID}</arg>
<arg>status_code=404</arg>
<doc>Gets the card with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 15:25:57.046" level="INFO">${url} = cards/62c30684d1350c4480908634</msg>
<status status="PASS" starttime="20220704 15:25:57.045" endtime="20220704 15:25:57.046"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 15:25:57.087" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220704 15:25:57.046" endtime="20220704 15:25:57.087"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:25:57.087" endtime="20220704 15:25:57.087"/>
</return>
<msg timestamp="20220704 15:25:57.088" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220704 15:25:57.045" endtime="20220704 15:25:57.088"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:25:57.088" endtime="20220704 15:25:57.088"/>
</return>
<status status="PASS" starttime="20220704 15:25:57.044" endtime="20220704 15:25:57.088"/>
</kw>
<doc>Verify that a card can be deleted through API</doc>
<tag>api</tag>
<tag>card.delete</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220704 15:25:56.471" endtime="20220704 15:25:57.088"/>
</test>
<test id="s1-s7-s1-s2-t4" name="Verify A Card Can Be Updated" line="44">
<kw name="Create A Card" library="Card">
<var>${response}</var>
<arg>name</arg>
<arg>RFCard4</arg>
<doc>Creates a new card in the given list.
required_args: listId
optional_args: name, desc, pos, idCardSource, idLabels, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>@{optional_args}</arg>
<arg>idList</arg>
<arg>${idList}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 15:25:57.090" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 15:25:57.090" endtime="20220704 15:25:57.090"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 15:25:57.090" endtime="20220704 15:25:57.090"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 15:25:57.091" level="INFO">${url} = cards/</msg>
<status status="PASS" starttime="20220704 15:25:57.090" endtime="20220704 15:25:57.091"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 15:25:57.253" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:25:57.091" endtime="20220704 15:25:57.253"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:25:57.253" endtime="20220704 15:25:57.253"/>
</return>
<msg timestamp="20220704 15:25:57.253" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:25:57.089" endtime="20220704 15:25:57.253"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:25:57.253" endtime="20220704 15:25:57.254"/>
</return>
<msg timestamp="20220704 15:25:57.254" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:25:57.089" endtime="20220704 15:25:57.254"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 15:25:57.254" endtime="20220704 15:25:57.254"/>
</return>
<msg timestamp="20220704 15:25:57.255" level="INFO">${CARD_ID} = 62c3068516f3745a12ac5f67</msg>
<status status="PASS" starttime="20220704 15:25:57.254" endtime="20220704 15:25:57.255"/>
</kw>
<kw name="Update A Card" library="Card">
<var>${response}</var>
<arg>${CARD_ID}</arg>
<arg>name</arg>
<arg>RFCard5</arg>
<arg>desc</arg>
<arg>Description</arg>
<doc>Updates the card with the given ID
optional_args: name, desc, closed, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<arg>status_code=${status_code}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 15:25:57.256" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 15:25:57.256" endtime="20220704 15:25:57.256"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 15:25:57.256" endtime="20220704 15:25:57.256"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 15:25:57.257" level="INFO">${url} = cards/62c3068516f3745a12ac5f67</msg>
<status status="PASS" starttime="20220704 15:25:57.257" endtime="20220704 15:25:57.257"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 15:25:57.393" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:25:57.257" endtime="20220704 15:25:57.393"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:25:57.393" endtime="20220704 15:25:57.393"/>
</return>
<msg timestamp="20220704 15:25:57.393" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:25:57.255" endtime="20220704 15:25:57.393"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:25:57.393" endtime="20220704 15:25:57.393"/>
</return>
<msg timestamp="20220704 15:25:57.393" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:25:57.255" endtime="20220704 15:25:57.394"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>card</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220704 15:25:57.394" endtime="20220704 15:25:57.399"/>
</kw>
<status status="PASS" starttime="20220704 15:25:57.394" endtime="20220704 15:25:57.399"/>
</kw>
<kw name="Get A Card" library="Card">
<var>${response}</var>
<arg>${CARD_ID}</arg>
<doc>Gets the card with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 15:25:57.400" level="INFO">${url} = cards/62c3068516f3745a12ac5f67</msg>
<status status="PASS" starttime="20220704 15:25:57.400" endtime="20220704 15:25:57.400"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 15:25:57.453" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:25:57.400" endtime="20220704 15:25:57.453"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:25:57.453" endtime="20220704 15:25:57.453"/>
</return>
<msg timestamp="20220704 15:25:57.453" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:25:57.400" endtime="20220704 15:25:57.453"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:25:57.453" endtime="20220704 15:25:57.453"/>
</return>
<msg timestamp="20220704 15:25:57.454" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:25:57.399" endtime="20220704 15:25:57.454"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_NAME}</var>
<arg>${response}</arg>
<arg>name</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 15:25:57.454" endtime="20220704 15:25:57.454"/>
</return>
<msg timestamp="20220704 15:25:57.455" level="INFO">${CARD_NAME} = RFCard5</msg>
<status status="PASS" starttime="20220704 15:25:57.454" endtime="20220704 15:25:57.455"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_DESC}</var>
<arg>${response}</arg>
<arg>desc</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 15:25:57.455" endtime="20220704 15:25:57.455"/>
</return>
<msg timestamp="20220704 15:25:57.456" level="INFO">${CARD_DESC} = Description</msg>
<status status="PASS" starttime="20220704 15:25:57.455" endtime="20220704 15:25:57.456"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${CARD_NAME}</arg>
<arg>RFCard5</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220704 15:25:57.456" endtime="20220704 15:25:57.456"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${CARD_DESC}</arg>
<arg>Description</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220704 15:25:57.456" endtime="20220704 15:25:57.457"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Card</arg>
<arg>${CARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Card" library="Card">
<arg>${CARD_ID}</arg>
<doc>Deletes the card with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 15:25:57.458" level="INFO">${url} = cards/62c3068516f3745a12ac5f67</msg>
<status status="PASS" starttime="20220704 15:25:57.458" endtime="20220704 15:25:57.458"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 15:25:57.606" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:25:57.458" endtime="20220704 15:25:57.606"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:25:57.606" endtime="20220704 15:25:57.606"/>
</return>
<msg timestamp="20220704 15:25:57.606" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:25:57.457" endtime="20220704 15:25:57.606"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:25:57.606" endtime="20220704 15:25:57.606"/>
</return>
<status status="PASS" starttime="20220704 15:25:57.457" endtime="20220704 15:25:57.606"/>
</kw>
<status status="PASS" starttime="20220704 15:25:57.457" endtime="20220704 15:25:57.606"/>
</kw>
<doc>Verify that a card's name and Description can be updated through API</doc>
<tag>api</tag>
<tag>card.update</tag>
<tag>regression</tag>
<status status="PASS" starttime="20220704 15:25:57.088" endtime="20220704 15:25:57.607"/>
</test>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Teardown Board</arg>
<arg>Delete All Sessions</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Teardown Board">
<doc>Delete the board created for this suite</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 15:25:57.609" level="INFO">${url} = boards/62c30683f31e817593048ca1</msg>
<status status="PASS" starttime="20220704 15:25:57.609" endtime="20220704 15:25:57.609"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 15:25:57.993" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:25:57.609" endtime="20220704 15:25:57.993"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:25:57.993" endtime="20220704 15:25:57.994"/>
</return>
<msg timestamp="20220704 15:25:57.994" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:25:57.608" endtime="20220704 15:25:57.994"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:25:57.994" endtime="20220704 15:25:57.994"/>
</return>
<status status="PASS" starttime="20220704 15:25:57.608" endtime="20220704 15:25:57.994"/>
</kw>
<status status="PASS" starttime="20220704 15:25:57.608" endtime="20220704 15:25:57.994"/>
</kw>
<status status="PASS" starttime="20220704 15:25:57.607" endtime="20220704 15:25:57.994"/>
</kw>
<kw name="Delete All Sessions" library="request_own_library">
<status status="PASS" starttime="20220704 15:25:57.994" endtime="20220704 15:25:57.995"/>
</kw>
<status status="PASS" starttime="20220704 15:25:57.607" endtime="20220704 15:25:57.995"/>
</kw>
<doc>Example Test with Trello API Cards</doc>
<status status="PASS" starttime="20220704 15:25:55.103" endtime="20220704 15:25:57.995"/>
</suite>
<suite id="s1-s7-s1-s3" name="Trello Api Checklists Tests" source="/trello/api/trello_api_checklists_tests.robot">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Create Trello Session</arg>
<arg>Setup Board, List And Card</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Create Trello Session" library="TrelloAPI">
<doc>Creates a Trello Session</doc>
<kw name="Create Session" library="request_own_library">
<arg>${API_BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<status status="PASS" starttime="20220704 15:25:58.005" endtime="20220704 15:25:58.005"/>
</kw>
<status status="PASS" starttime="20220704 15:25:58.005" endtime="20220704 15:25:58.005"/>
</kw>
<kw name="Setup Board, List And Card">
<doc>Create a board and save its ID and its first list's ID</doc>
<kw name="Create A Board" library="Board">
<var>${BOARD}</var>
<arg>TestBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 15:25:58.006" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 15:25:58.006" endtime="20220704 15:25:58.006"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 15:25:58.007" endtime="20220704 15:25:58.007"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 15:25:58.007" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220704 15:25:58.007" endtime="20220704 15:25:58.007"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 15:25:58.207" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:25:58.008" endtime="20220704 15:25:58.207"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:25:58.207" endtime="20220704 15:25:58.207"/>
</return>
<msg timestamp="20220704 15:25:58.207" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:25:58.006" endtime="20220704 15:25:58.207"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:25:58.207" endtime="20220704 15:25:58.207"/>
</return>
<msg timestamp="20220704 15:25:58.207" level="INFO">${BOARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:25:58.006" endtime="20220704 15:25:58.207"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_BOARD_ID}</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220704 15:25:58.208" level="INFO">${TEST_SUITE_BOARD_ID} = 62c30686eaf0e1105af42ba5</msg>
<status status="PASS" starttime="20220704 15:25:58.208" endtime="20220704 15:25:58.208"/>
</kw>
<kw name="Get Lists On A Board" library="Board">
<var>${LISTS}</var>
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Get all the lists in a board</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>lists_on_board</arg>
<arg>${id}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 15:25:58.209" level="INFO">${url} = boards/62c30686eaf0e1105af42ba5/lists/</msg>
<status status="PASS" starttime="20220704 15:25:58.209" endtime="20220704 15:25:58.209"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 15:25:58.266" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:25:58.209" endtime="20220704 15:25:58.266"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:25:58.266" endtime="20220704 15:25:58.267"/>
</return>
<msg timestamp="20220704 15:25:58.267" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:25:58.209" endtime="20220704 15:25:58.267"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:25:58.267" endtime="20220704 15:25:58.267"/>
</return>
<msg timestamp="20220704 15:25:58.267" level="INFO">${LISTS} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:25:58.208" endtime="20220704 15:25:58.267"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_LIST_ID}</arg>
<arg>${LISTS.json()}[0][id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220704 15:25:58.268" level="INFO">${TEST_SUITE_LIST_ID} = 62c30686eaf0e1105af42bac</msg>
<status status="PASS" starttime="20220704 15:25:58.267" endtime="20220704 15:25:58.268"/>
</kw>
<kw name="Create A Card" library="Card">
<var>${CARD}</var>
<arg>name</arg>
<arg>TestCard</arg>
<doc>Creates a new card in the given list.
required_args: listId
optional_args: name, desc, pos, idCardSource, idLabels, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>@{optional_args}</arg>
<arg>idList</arg>
<arg>${idList}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 15:25:58.269" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 15:25:58.269" endtime="20220704 15:25:58.269"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 15:25:58.269" endtime="20220704 15:25:58.270"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 15:25:58.270" level="INFO">${url} = cards/</msg>
<status status="PASS" starttime="20220704 15:25:58.270" endtime="20220704 15:25:58.270"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 15:25:58.512" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:25:58.270" endtime="20220704 15:25:58.512"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:25:58.512" endtime="20220704 15:25:58.512"/>
</return>
<msg timestamp="20220704 15:25:58.512" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:25:58.269" endtime="20220704 15:25:58.512"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:25:58.513" endtime="20220704 15:25:58.513"/>
</return>
<msg timestamp="20220704 15:25:58.513" level="INFO">${CARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:25:58.268" endtime="20220704 15:25:58.513"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_CARD_ID}</arg>
<arg>${CARD.json()}[id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220704 15:25:58.514" level="INFO">${TEST_SUITE_CARD_ID} = 62c30686f0f2b752bf4da26e</msg>
<status status="PASS" starttime="20220704 15:25:58.513" endtime="20220704 15:25:58.514"/>
</kw>
<status status="PASS" starttime="20220704 15:25:58.005" endtime="20220704 15:25:58.514"/>
</kw>
<status status="PASS" starttime="20220704 15:25:58.005" endtime="20220704 15:25:58.514"/>
</kw>
<test id="s1-s7-s1-s3-t1" name="Verify A Checklist Can Be Created" line="14">
<kw name="Create A Checklist" library="Checklist">
<var>${response}</var>
<arg>name</arg>
<arg>TestChecklist</arg>
<arg>idCard=${TEST_SUITE_CARD_ID}</arg>
<doc>Creates a new checklist in the given card.
required_args: idCard
optional_args: name, pos, idChecklistSource
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>@{optional_args}</arg>
<arg>idCard</arg>
<arg>${idCard}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 15:25:58.516" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 15:25:58.516" endtime="20220704 15:25:58.516"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 15:25:58.516" endtime="20220704 15:25:58.516"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 15:25:58.517" level="INFO">${url} = checklists/</msg>
<status status="PASS" starttime="20220704 15:25:58.516" endtime="20220704 15:25:58.517"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 15:25:58.623" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:25:58.517" endtime="20220704 15:25:58.623"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:25:58.623" endtime="20220704 15:25:58.623"/>
</return>
<msg timestamp="20220704 15:25:58.623" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:25:58.515" endtime="20220704 15:25:58.623"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:25:58.623" endtime="20220704 15:25:58.623"/>
</return>
<msg timestamp="20220704 15:25:58.623" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:25:58.515" endtime="20220704 15:25:58.623"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${checklist_id}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 15:25:58.624" endtime="20220704 15:25:58.624"/>
</return>
<msg timestamp="20220704 15:25:58.624" level="INFO">${checklist_id} = 62c30686fd8d5b185adb01a6</msg>
<status status="PASS" starttime="20220704 15:25:58.623" endtime="20220704 15:25:58.624"/>
</kw>
<kw name="Get A Checklist" library="Checklist">
<var>${response}</var>
<arg>${checklist_id}</arg>
<doc>Gets the checklist with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 15:25:58.626" level="INFO">${url} = checklists/62c30686fd8d5b185adb01a6</msg>
<status status="PASS" starttime="20220704 15:25:58.625" endtime="20220704 15:25:58.626"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 15:25:58.682" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:25:58.626" endtime="20220704 15:25:58.682"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:25:58.682" endtime="20220704 15:25:58.682"/>
</return>
<msg timestamp="20220704 15:25:58.682" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:25:58.625" endtime="20220704 15:25:58.682"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:25:58.682" endtime="20220704 15:25:58.682"/>
</return>
<msg timestamp="20220704 15:25:58.682" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:25:58.625" endtime="20220704 15:25:58.682"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${checklist_name}</var>
<arg>${response}</arg>
<arg>name</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 15:25:58.683" endtime="20220704 15:25:58.683"/>
</return>
<msg timestamp="20220704 15:25:58.684" level="INFO">${checklist_name} = TestChecklist</msg>
<status status="PASS" starttime="20220704 15:25:58.682" endtime="20220704 15:25:58.684"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${checklist_name}</arg>
<arg>TestChecklist</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220704 15:25:58.684" endtime="20220704 15:25:58.684"/>
</kw>
<kw name="Delete A Checklist" library="Checklist" type="TEARDOWN">
<arg>${checklist_id}</arg>
<doc>Deletes the checklist with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 15:25:58.685" level="INFO">${url} = checklists/62c30686fd8d5b185adb01a6</msg>
<status status="PASS" starttime="20220704 15:25:58.685" endtime="20220704 15:25:58.685"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 15:25:58.787" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:25:58.685" endtime="20220704 15:25:58.787"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:25:58.787" endtime="20220704 15:25:58.787"/>
</return>
<msg timestamp="20220704 15:25:58.787" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:25:58.684" endtime="20220704 15:25:58.787"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:25:58.788" endtime="20220704 15:25:58.788"/>
</return>
<status status="PASS" starttime="20220704 15:25:58.684" endtime="20220704 15:25:58.788"/>
</kw>
<doc>Verify that a checklist can be created through API</doc>
<tag>api</tag>
<tag>checklist.create</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220704 15:25:58.514" endtime="20220704 15:25:58.788"/>
</test>
<test id="s1-s7-s1-s3-t2" name="Verify A Checklist Can Be Deleted" line="24">
<kw name="Create A Checklist" library="Checklist">
<var>${response}</var>
<arg>name</arg>
<arg>TestChecklist</arg>
<arg>idCard=${TEST_SUITE_CARD_ID}</arg>
<doc>Creates a new checklist in the given card.
required_args: idCard
optional_args: name, pos, idChecklistSource
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>@{optional_args}</arg>
<arg>idCard</arg>
<arg>${idCard}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 15:25:58.790" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 15:25:58.790" endtime="20220704 15:25:58.790"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 15:25:58.790" endtime="20220704 15:25:58.790"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 15:25:58.791" level="INFO">${url} = checklists/</msg>
<status status="PASS" starttime="20220704 15:25:58.791" endtime="20220704 15:25:58.791"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 15:25:58.924" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:25:58.791" endtime="20220704 15:25:58.924"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:25:58.924" endtime="20220704 15:25:58.924"/>
</return>
<msg timestamp="20220704 15:25:58.924" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:25:58.789" endtime="20220704 15:25:58.924"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:25:58.924" endtime="20220704 15:25:58.924"/>
</return>
<msg timestamp="20220704 15:25:58.925" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:25:58.789" endtime="20220704 15:25:58.925"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${checklist_id}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 15:25:58.925" endtime="20220704 15:25:58.925"/>
</return>
<msg timestamp="20220704 15:25:58.926" level="INFO">${checklist_id} = 62c306862be8c584df1b8b2d</msg>
<status status="PASS" starttime="20220704 15:25:58.925" endtime="20220704 15:25:58.926"/>
</kw>
<kw name="Delete A Checklist" library="Checklist">
<var>${response}</var>
<arg>${checklist_id}</arg>
<doc>Deletes the checklist with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 15:25:58.927" level="INFO">${url} = checklists/62c306862be8c584df1b8b2d</msg>
<status status="PASS" starttime="20220704 15:25:58.927" endtime="20220704 15:25:58.927"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 15:25:59.040" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:25:58.927" endtime="20220704 15:25:59.041"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:25:59.041" endtime="20220704 15:25:59.041"/>
</return>
<msg timestamp="20220704 15:25:59.041" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:25:58.927" endtime="20220704 15:25:59.041"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:25:59.041" endtime="20220704 15:25:59.041"/>
</return>
<msg timestamp="20220704 15:25:59.041" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:25:58.926" endtime="20220704 15:25:59.041"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>delete</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220704 15:25:59.042" endtime="20220704 15:25:59.043"/>
</kw>
<status status="PASS" starttime="20220704 15:25:59.041" endtime="20220704 15:25:59.043"/>
</kw>
<kw name="Get A Checklist" library="Checklist">
<arg>${checklist_id}</arg>
<arg>status_code=404</arg>
<doc>Gets the checklist with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 15:25:59.045" level="INFO">${url} = checklists/62c306862be8c584df1b8b2d</msg>
<status status="PASS" starttime="20220704 15:25:59.044" endtime="20220704 15:25:59.045"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 15:25:59.084" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220704 15:25:59.045" endtime="20220704 15:25:59.084"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:25:59.084" endtime="20220704 15:25:59.084"/>
</return>
<msg timestamp="20220704 15:25:59.085" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220704 15:25:59.044" endtime="20220704 15:25:59.085"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:25:59.085" endtime="20220704 15:25:59.085"/>
</return>
<status status="PASS" starttime="20220704 15:25:59.044" endtime="20220704 15:25:59.085"/>
</kw>
<doc>Verify that a checklist can be deleted through API</doc>
<tag>api</tag>
<tag>checklist.delete</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220704 15:25:58.788" endtime="20220704 15:25:59.085"/>
</test>
<test id="s1-s7-s1-s3-t3" name="Verify A Checklist Can Be Updated" line="33">
<kw name="Create A Checklist" library="Checklist">
<var>${response}</var>
<arg>name</arg>
<arg>TestChecklist</arg>
<arg>idCard=${TEST_SUITE_CARD_ID}</arg>
<doc>Creates a new checklist in the given card.
required_args: idCard
optional_args: name, pos, idChecklistSource
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>@{optional_args}</arg>
<arg>idCard</arg>
<arg>${idCard}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 15:25:59.088" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 15:25:59.087" endtime="20220704 15:25:59.088"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 15:25:59.088" endtime="20220704 15:25:59.089"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 15:25:59.089" level="INFO">${url} = checklists/</msg>
<status status="PASS" starttime="20220704 15:25:59.089" endtime="20220704 15:25:59.089"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 15:25:59.195" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:25:59.090" endtime="20220704 15:25:59.195"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:25:59.195" endtime="20220704 15:25:59.195"/>
</return>
<msg timestamp="20220704 15:25:59.195" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:25:59.086" endtime="20220704 15:25:59.195"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:25:59.195" endtime="20220704 15:25:59.195"/>
</return>
<msg timestamp="20220704 15:25:59.195" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:25:59.086" endtime="20220704 15:25:59.195"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${checklist_id}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 15:25:59.196" endtime="20220704 15:25:59.196"/>
</return>
<msg timestamp="20220704 15:25:59.197" level="INFO">${checklist_id} = 62c306872ed01313e3e32407</msg>
<status status="PASS" starttime="20220704 15:25:59.196" endtime="20220704 15:25:59.197"/>
</kw>
<kw name="Update A Checklist" library="Checklist">
<var>${response}</var>
<arg>${checklist_id}</arg>
<arg>name</arg>
<arg>TestChecklist2</arg>
<doc>Updates the checklist with the given ID
optional_args: name, pos
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<arg>status_code=${status_code}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 15:25:59.198" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 15:25:59.198" endtime="20220704 15:25:59.198"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 15:25:59.198" endtime="20220704 15:25:59.198"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 15:25:59.198" level="INFO">${url} = checklists/62c306872ed01313e3e32407</msg>
<status status="PASS" starttime="20220704 15:25:59.198" endtime="20220704 15:25:59.198"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 15:25:59.284" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:25:59.199" endtime="20220704 15:25:59.284"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:25:59.284" endtime="20220704 15:25:59.284"/>
</return>
<msg timestamp="20220704 15:25:59.284" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:25:59.197" endtime="20220704 15:25:59.284"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:25:59.284" endtime="20220704 15:25:59.284"/>
</return>
<msg timestamp="20220704 15:25:59.284" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:25:59.197" endtime="20220704 15:25:59.284"/>
</kw>
<kw name="Get A Checklist" library="Checklist">
<var>${response}</var>
<arg>${checklist_id}</arg>
<doc>Gets the checklist with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 15:25:59.285" level="INFO">${url} = checklists/62c306872ed01313e3e32407</msg>
<status status="PASS" starttime="20220704 15:25:59.285" endtime="20220704 15:25:59.285"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 15:25:59.342" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:25:59.286" endtime="20220704 15:25:59.342"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:25:59.342" endtime="20220704 15:25:59.342"/>
</return>
<msg timestamp="20220704 15:25:59.343" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:25:59.285" endtime="20220704 15:25:59.343"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:25:59.343" endtime="20220704 15:25:59.343"/>
</return>
<msg timestamp="20220704 15:25:59.343" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:25:59.284" endtime="20220704 15:25:59.343"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${checklist_name}</var>
<arg>${response}</arg>
<arg>name</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 15:25:59.343" endtime="20220704 15:25:59.343"/>
</return>
<msg timestamp="20220704 15:25:59.344" level="INFO">${checklist_name} = TestChecklist2</msg>
<status status="PASS" starttime="20220704 15:25:59.343" endtime="20220704 15:25:59.344"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${checklist_name}</arg>
<arg>TestChecklist2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220704 15:25:59.344" endtime="20220704 15:25:59.344"/>
</kw>
<kw name="Delete A Checklist" library="Checklist" type="TEARDOWN">
<arg>${checklist_id}</arg>
<doc>Deletes the checklist with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 15:25:59.355" level="INFO">${url} = checklists/62c306872ed01313e3e32407</msg>
<status status="PASS" starttime="20220704 15:25:59.354" endtime="20220704 15:25:59.355"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 15:25:59.459" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:25:59.355" endtime="20220704 15:25:59.459"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:25:59.459" endtime="20220704 15:25:59.459"/>
</return>
<msg timestamp="20220704 15:25:59.459" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:25:59.354" endtime="20220704 15:25:59.459"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:25:59.459" endtime="20220704 15:25:59.459"/>
</return>
<status status="PASS" starttime="20220704 15:25:59.345" endtime="20220704 15:25:59.459"/>
</kw>
<doc>Verify that a checklist's name can be updated through API</doc>
<tag>api</tag>
<tag>checklist.update</tag>
<tag>regression</tag>
<status status="PASS" starttime="20220704 15:25:59.085" endtime="20220704 15:25:59.459"/>
</test>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Teardown Board</arg>
<arg>Delete All Sessions</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Teardown Board">
<doc>Delete the board created for this suite</doc>
<kw name="Delete A Board" library="Board">
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 15:25:59.462" level="INFO">${url} = boards/62c30686eaf0e1105af42ba5</msg>
<status status="PASS" starttime="20220704 15:25:59.461" endtime="20220704 15:25:59.462"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 15:25:59.811" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:25:59.462" endtime="20220704 15:25:59.811"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:25:59.811" endtime="20220704 15:25:59.811"/>
</return>
<msg timestamp="20220704 15:25:59.811" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:25:59.461" endtime="20220704 15:25:59.811"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:25:59.811" endtime="20220704 15:25:59.811"/>
</return>
<status status="PASS" starttime="20220704 15:25:59.461" endtime="20220704 15:25:59.811"/>
</kw>
<status status="PASS" starttime="20220704 15:25:59.460" endtime="20220704 15:25:59.811"/>
</kw>
<kw name="Delete All Sessions" library="request_own_library">
<status status="PASS" starttime="20220704 15:25:59.811" endtime="20220704 15:25:59.812"/>
</kw>
<status status="PASS" starttime="20220704 15:25:59.460" endtime="20220704 15:25:59.812"/>
</kw>
<doc>Example Test with Trello API Checklists</doc>
<status status="PASS" starttime="20220704 15:25:57.996" endtime="20220704 15:25:59.812"/>
</suite>
<suite id="s1-s7-s1-s4" name="Trello Api Labels Tests" source="/trello/api/trello_api_labels_tests.robot">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Create Trello Session</arg>
<arg>Setup Board And List</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Create Trello Session" library="TrelloAPI">
<doc>Creates a Trello Session</doc>
<kw name="Create Session" library="request_own_library">
<arg>${API_BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<status status="PASS" starttime="20220704 15:25:59.822" endtime="20220704 15:25:59.822"/>
</kw>
<status status="PASS" starttime="20220704 15:25:59.822" endtime="20220704 15:25:59.822"/>
</kw>
<kw name="Setup Board And List">
<doc>Create a board and save its ID and its first list's ID</doc>
<kw name="Create A Board" library="Board">
<var>${BOARD}</var>
<arg>TestBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 15:25:59.823" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 15:25:59.823" endtime="20220704 15:25:59.823"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 15:25:59.823" endtime="20220704 15:25:59.824"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 15:25:59.824" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220704 15:25:59.824" endtime="20220704 15:25:59.824"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 15:26:00.037" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:25:59.824" endtime="20220704 15:26:00.037"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:26:00.037" endtime="20220704 15:26:00.038"/>
</return>
<msg timestamp="20220704 15:26:00.038" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:25:59.823" endtime="20220704 15:26:00.038"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:26:00.038" endtime="20220704 15:26:00.038"/>
</return>
<msg timestamp="20220704 15:26:00.038" level="INFO">${BOARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:25:59.823" endtime="20220704 15:26:00.038"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_BOARD_ID}</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220704 15:26:00.039" level="INFO">${TEST_SUITE_BOARD_ID} = 62c306877b335a58e0de3c25</msg>
<status status="PASS" starttime="20220704 15:26:00.038" endtime="20220704 15:26:00.039"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${LISTS}</var>
<arg>boards/${TEST_SUITE_BOARD_ID}/lists</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 15:26:00.088" level="INFO">${LISTS} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:26:00.039" endtime="20220704 15:26:00.088"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_LIST_ID}</arg>
<arg>${LISTS.json()}[0][id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220704 15:26:00.090" level="INFO">${TEST_SUITE_LIST_ID} = 62c306877b335a58e0de3c2c</msg>
<status status="PASS" starttime="20220704 15:26:00.089" endtime="20220704 15:26:00.090"/>
</kw>
<status status="PASS" starttime="20220704 15:25:59.822" endtime="20220704 15:26:00.090"/>
</kw>
<status status="PASS" starttime="20220704 15:25:59.822" endtime="20220704 15:26:00.090"/>
</kw>
<test id="s1-s7-s1-s4-t1" name="Create and get label on board" line="14">
<kw name="Create A Label" library="Label">
<var>${response}</var>
<arg>name</arg>
<arg>label2</arg>
<arg>color</arg>
<arg>yellow</arg>
<doc>Creates a new label in the given board.
required_args: idBoard
optional_args: name, color
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>idBoard</arg>
<arg>${idBoard}</arg>
<arg>@{optional_args}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 15:26:00.092" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 15:26:00.091" endtime="20220704 15:26:00.092"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 15:26:00.092" endtime="20220704 15:26:00.092"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 15:26:00.093" level="INFO">${url} = labels/</msg>
<status status="PASS" starttime="20220704 15:26:00.092" endtime="20220704 15:26:00.093"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 15:26:00.179" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:26:00.093" endtime="20220704 15:26:00.179"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:26:00.179" endtime="20220704 15:26:00.179"/>
</return>
<msg timestamp="20220704 15:26:00.179" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:26:00.091" endtime="20220704 15:26:00.179"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:26:00.179" endtime="20220704 15:26:00.179"/>
</return>
<msg timestamp="20220704 15:26:00.179" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:26:00.090" endtime="20220704 15:26:00.180"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>label</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220704 15:26:00.180" endtime="20220704 15:26:00.182"/>
</kw>
<status status="PASS" starttime="20220704 15:26:00.180" endtime="20220704 15:26:00.182"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${LABEL_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 15:26:00.182" endtime="20220704 15:26:00.182"/>
</return>
<msg timestamp="20220704 15:26:00.183" level="INFO">${LABEL_ID} = 62c30688e837735f3a7e6ce2</msg>
<status status="PASS" starttime="20220704 15:26:00.182" endtime="20220704 15:26:00.183"/>
</kw>
<kw name="Get A Label" library="Label">
<var>${response}</var>
<arg>${LABEL_ID}</arg>
<doc>Gets the label with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 15:26:00.184" level="INFO">${url} = labels/62c30688e837735f3a7e6ce2</msg>
<status status="PASS" starttime="20220704 15:26:00.184" endtime="20220704 15:26:00.184"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 15:26:00.232" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:26:00.184" endtime="20220704 15:26:00.233"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:26:00.233" endtime="20220704 15:26:00.233"/>
</return>
<msg timestamp="20220704 15:26:00.233" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:26:00.183" endtime="20220704 15:26:00.233"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:26:00.233" endtime="20220704 15:26:00.233"/>
</return>
<msg timestamp="20220704 15:26:00.233" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:26:00.183" endtime="20220704 15:26:00.233"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${LABEL_COLOR}</var>
<arg>${response}</arg>
<arg>color</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 15:26:00.234" endtime="20220704 15:26:00.234"/>
</return>
<msg timestamp="20220704 15:26:00.234" level="INFO">${LABEL_COLOR} = yellow</msg>
<status status="PASS" starttime="20220704 15:26:00.233" endtime="20220704 15:26:00.234"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${LABEL_NAME}</var>
<arg>${response}</arg>
<arg>name</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 15:26:00.235" endtime="20220704 15:26:00.235"/>
</return>
<msg timestamp="20220704 15:26:00.235" level="INFO">${LABEL_NAME} = label2</msg>
<status status="PASS" starttime="20220704 15:26:00.234" endtime="20220704 15:26:00.235"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${LABEL_COLOR}</arg>
<arg>yellow</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220704 15:26:00.236" endtime="20220704 15:26:00.236"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${LABEL_NAME}</arg>
<arg>label2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220704 15:26:00.236" endtime="20220704 15:26:00.236"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Label</arg>
<arg>${LABEL_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Label" library="Label">
<arg>${LABEL_ID}</arg>
<doc>Deletes the label with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 15:26:00.237" level="INFO">${url} = labels/62c30688e837735f3a7e6ce2</msg>
<status status="PASS" starttime="20220704 15:26:00.237" endtime="20220704 15:26:00.237"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 15:26:00.347" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:26:00.238" endtime="20220704 15:26:00.347"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:26:00.347" endtime="20220704 15:26:00.347"/>
</return>
<msg timestamp="20220704 15:26:00.347" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:26:00.237" endtime="20220704 15:26:00.347"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:26:00.347" endtime="20220704 15:26:00.347"/>
</return>
<status status="PASS" starttime="20220704 15:26:00.236" endtime="20220704 15:26:00.347"/>
</kw>
<status status="PASS" starttime="20220704 15:26:00.236" endtime="20220704 15:26:00.347"/>
</kw>
<doc>Verify that a label can be created through API</doc>
<tag>api</tag>
<tag>label.create</tag>
<tag>label.get</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220704 15:26:00.090" endtime="20220704 15:26:00.347"/>
</test>
<test id="s1-s7-s1-s4-t2" name="Update label on board" line="28">
<kw name="Create A Label" library="Label">
<var>${response}</var>
<arg>name</arg>
<arg>label2</arg>
<arg>color</arg>
<arg>yellow</arg>
<doc>Creates a new label in the given board.
required_args: idBoard
optional_args: name, color
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>idBoard</arg>
<arg>${idBoard}</arg>
<arg>@{optional_args}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 15:26:00.350" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 15:26:00.349" endtime="20220704 15:26:00.350"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 15:26:00.350" endtime="20220704 15:26:00.350"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 15:26:00.351" level="INFO">${url} = labels/</msg>
<status status="PASS" starttime="20220704 15:26:00.350" endtime="20220704 15:26:00.351"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 15:26:00.457" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:26:00.351" endtime="20220704 15:26:00.457"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:26:00.457" endtime="20220704 15:26:00.457"/>
</return>
<msg timestamp="20220704 15:26:00.458" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:26:00.349" endtime="20220704 15:26:00.458"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:26:00.458" endtime="20220704 15:26:00.458"/>
</return>
<msg timestamp="20220704 15:26:00.458" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:26:00.349" endtime="20220704 15:26:00.458"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>label</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220704 15:26:00.458" endtime="20220704 15:26:00.460"/>
</kw>
<status status="PASS" starttime="20220704 15:26:00.458" endtime="20220704 15:26:00.460"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${LABEL_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 15:26:00.461" endtime="20220704 15:26:00.461"/>
</return>
<msg timestamp="20220704 15:26:00.461" level="INFO">${LABEL_ID} = 62c306883792bc609839122d</msg>
<status status="PASS" starttime="20220704 15:26:00.460" endtime="20220704 15:26:00.461"/>
</kw>
<kw name="Update A Label" library="Label">
<var>${new_response}</var>
<arg>${LABEL_ID}</arg>
<arg>name</arg>
<arg>label3</arg>
<arg>color</arg>
<arg>orange</arg>
<doc>Updates the label with the given ID
optional_args: name, color
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 15:26:00.462" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 15:26:00.462" endtime="20220704 15:26:00.462"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 15:26:00.462" endtime="20220704 15:26:00.463"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 15:26:00.463" level="INFO">${url} = labels/62c306883792bc609839122d</msg>
<status status="PASS" starttime="20220704 15:26:00.463" endtime="20220704 15:26:00.463"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 15:26:00.573" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:26:00.463" endtime="20220704 15:26:00.573"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:26:00.573" endtime="20220704 15:26:00.573"/>
</return>
<msg timestamp="20220704 15:26:00.573" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:26:00.462" endtime="20220704 15:26:00.573"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:26:00.573" endtime="20220704 15:26:00.573"/>
</return>
<msg timestamp="20220704 15:26:00.573" level="INFO">${new_response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:26:00.461" endtime="20220704 15:26:00.573"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${NEW_LABEL_COLOR}</var>
<arg>${new_response}</arg>
<arg>color</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 15:26:00.574" endtime="20220704 15:26:00.574"/>
</return>
<msg timestamp="20220704 15:26:00.574" level="INFO">${NEW_LABEL_COLOR} = orange</msg>
<status status="PASS" starttime="20220704 15:26:00.573" endtime="20220704 15:26:00.574"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${NEW_LABEL_NAME}</var>
<arg>${new_response}</arg>
<arg>name</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 15:26:00.575" endtime="20220704 15:26:00.575"/>
</return>
<msg timestamp="20220704 15:26:00.576" level="INFO">${NEW_LABEL_NAME} = label3</msg>
<status status="PASS" starttime="20220704 15:26:00.575" endtime="20220704 15:26:00.576"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${NEW_LABEL_COLOR}</arg>
<arg>orange</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220704 15:26:00.576" endtime="20220704 15:26:00.576"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${NEW_LABEL_NAME}</arg>
<arg>label3</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220704 15:26:00.576" endtime="20220704 15:26:00.576"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Label</arg>
<arg>${LABEL_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Label" library="Label">
<arg>${LABEL_ID}</arg>
<doc>Deletes the label with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 15:26:00.578" level="INFO">${url} = labels/62c306883792bc609839122d</msg>
<status status="PASS" starttime="20220704 15:26:00.578" endtime="20220704 15:26:00.578"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 15:26:00.690" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:26:00.578" endtime="20220704 15:26:00.690"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:26:00.690" endtime="20220704 15:26:00.690"/>
</return>
<msg timestamp="20220704 15:26:00.691" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:26:00.577" endtime="20220704 15:26:00.691"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:26:00.691" endtime="20220704 15:26:00.691"/>
</return>
<status status="PASS" starttime="20220704 15:26:00.577" endtime="20220704 15:26:00.691"/>
</kw>
<status status="PASS" starttime="20220704 15:26:00.576" endtime="20220704 15:26:00.691"/>
</kw>
<doc>Verify that a label's name and color can be updated through API</doc>
<tag>api</tag>
<tag>label.update</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220704 15:26:00.348" endtime="20220704 15:26:00.691"/>
</test>
<test id="s1-s7-s1-s4-t3" name="Delete label on board" line="41">
<kw name="Create A Label" library="Label">
<var>${response}</var>
<arg>name</arg>
<arg>label2</arg>
<arg>color</arg>
<arg>yellow</arg>
<doc>Creates a new label in the given board.
required_args: idBoard
optional_args: name, color
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>idBoard</arg>
<arg>${idBoard}</arg>
<arg>@{optional_args}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 15:26:00.693" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 15:26:00.693" endtime="20220704 15:26:00.693"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 15:26:00.693" endtime="20220704 15:26:00.693"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 15:26:00.694" level="INFO">${url} = labels/</msg>
<status status="PASS" starttime="20220704 15:26:00.693" endtime="20220704 15:26:00.694"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 15:26:00.801" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:26:00.694" endtime="20220704 15:26:00.801"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:26:00.801" endtime="20220704 15:26:00.802"/>
</return>
<msg timestamp="20220704 15:26:00.802" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:26:00.692" endtime="20220704 15:26:00.802"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:26:00.802" endtime="20220704 15:26:00.802"/>
</return>
<msg timestamp="20220704 15:26:00.802" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:26:00.692" endtime="20220704 15:26:00.802"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${LABEL_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 15:26:00.802" endtime="20220704 15:26:00.803"/>
</return>
<msg timestamp="20220704 15:26:00.803" level="INFO">${LABEL_ID} = 62c30688f2614858ab778a5d</msg>
<status status="PASS" starttime="20220704 15:26:00.802" endtime="20220704 15:26:00.803"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Label</arg>
<arg>${LABEL_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Label" library="Label">
<arg>${LABEL_ID}</arg>
<doc>Deletes the label with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 15:26:00.805" level="INFO">${url} = labels/62c30688f2614858ab778a5d</msg>
<status status="PASS" starttime="20220704 15:26:00.805" endtime="20220704 15:26:00.805"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 15:26:00.912" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:26:00.805" endtime="20220704 15:26:00.912"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:26:00.912" endtime="20220704 15:26:00.912"/>
</return>
<msg timestamp="20220704 15:26:00.912" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:26:00.804" endtime="20220704 15:26:00.912"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:26:00.912" endtime="20220704 15:26:00.912"/>
</return>
<status status="PASS" starttime="20220704 15:26:00.804" endtime="20220704 15:26:00.912"/>
</kw>
<status status="PASS" starttime="20220704 15:26:00.803" endtime="20220704 15:26:00.912"/>
</kw>
<kw name="Get A Label" library="Label">
<arg>${LABEL_ID}</arg>
<arg>status_code=404</arg>
<doc>Gets the label with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 15:26:00.913" level="INFO">${url} = labels/62c30688f2614858ab778a5d</msg>
<status status="PASS" starttime="20220704 15:26:00.913" endtime="20220704 15:26:00.914"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 15:26:00.958" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220704 15:26:00.914" endtime="20220704 15:26:00.958"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:26:00.958" endtime="20220704 15:26:00.958"/>
</return>
<msg timestamp="20220704 15:26:00.958" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220704 15:26:00.913" endtime="20220704 15:26:00.958"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:26:00.958" endtime="20220704 15:26:00.958"/>
</return>
<status status="PASS" starttime="20220704 15:26:00.912" endtime="20220704 15:26:00.958"/>
</kw>
<doc>Verify that a label can be deleted through API</doc>
<tag>api</tag>
<tag>label.delete</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220704 15:26:00.691" endtime="20220704 15:26:00.959"/>
</test>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Teardown Board</arg>
<arg>Delete All Sessions</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Teardown Board">
<doc>Delete the board created for this session.</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 15:26:00.961" level="INFO">${url} = boards/62c306877b335a58e0de3c25</msg>
<status status="PASS" starttime="20220704 15:26:00.961" endtime="20220704 15:26:00.961"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 15:26:01.297" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:26:00.961" endtime="20220704 15:26:01.297"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:26:01.297" endtime="20220704 15:26:01.297"/>
</return>
<msg timestamp="20220704 15:26:01.298" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:26:00.960" endtime="20220704 15:26:01.298"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:26:01.298" endtime="20220704 15:26:01.298"/>
</return>
<status status="PASS" starttime="20220704 15:26:00.960" endtime="20220704 15:26:01.298"/>
</kw>
<status status="PASS" starttime="20220704 15:26:00.960" endtime="20220704 15:26:01.298"/>
</kw>
<status status="PASS" starttime="20220704 15:26:00.959" endtime="20220704 15:26:01.298"/>
</kw>
<kw name="Delete All Sessions" library="request_own_library">
<status status="PASS" starttime="20220704 15:26:01.298" endtime="20220704 15:26:01.299"/>
</kw>
<status status="PASS" starttime="20220704 15:26:00.959" endtime="20220704 15:26:01.299"/>
</kw>
<doc>Example Test with Trello API Cards</doc>
<status status="PASS" starttime="20220704 15:25:59.814" endtime="20220704 15:26:01.299"/>
</suite>
<suite id="s1-s7-s1-s5" name="Trello Api Lists Tests" source="/trello/api/trello_api_lists_tests.robot">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Create Trello Session</arg>
<arg>Setup Board</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Create Trello Session" library="TrelloAPI">
<doc>Creates a Trello Session</doc>
<kw name="Create Session" library="request_own_library">
<arg>${API_BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<status status="PASS" starttime="20220704 15:26:01.309" endtime="20220704 15:26:01.309"/>
</kw>
<status status="PASS" starttime="20220704 15:26:01.308" endtime="20220704 15:26:01.309"/>
</kw>
<kw name="Setup Board">
<doc>Create a board and save it's id for the suite</doc>
<kw name="Create A Board" library="Board">
<var>${BOARD}</var>
<arg>TestBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 15:26:01.310" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 15:26:01.310" endtime="20220704 15:26:01.310"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 15:26:01.310" endtime="20220704 15:26:01.310"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 15:26:01.311" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220704 15:26:01.310" endtime="20220704 15:26:01.311"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 15:26:01.511" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:26:01.311" endtime="20220704 15:26:01.511"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:26:01.511" endtime="20220704 15:26:01.511"/>
</return>
<msg timestamp="20220704 15:26:01.511" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:26:01.309" endtime="20220704 15:26:01.511"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:26:01.511" endtime="20220704 15:26:01.511"/>
</return>
<msg timestamp="20220704 15:26:01.512" level="INFO">${BOARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:26:01.309" endtime="20220704 15:26:01.512"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Set Suite Variable</arg>
<arg>\${TEST_SUITE_BOARD_ID}</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_BOARD_ID}</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220704 15:26:01.513" level="INFO">${TEST_SUITE_BOARD_ID} = 62c306894af7fa5790753a0d</msg>
<status status="PASS" starttime="20220704 15:26:01.512" endtime="20220704 15:26:01.513"/>
</kw>
<status status="PASS" starttime="20220704 15:26:01.512" endtime="20220704 15:26:01.513"/>
</kw>
<status status="PASS" starttime="20220704 15:26:01.309" endtime="20220704 15:26:01.513"/>
</kw>
<status status="PASS" starttime="20220704 15:26:01.308" endtime="20220704 15:26:01.513"/>
</kw>
<test id="s1-s7-s1-s5-t1" name="CREATE a list" line="13">
<kw name="Create A List" library="List">
<var>${response}</var>
<arg>NewList</arg>
<doc>Creates a new List
board id
name the list will have
optional_args: idListSource, pos, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>list</arg>
<arg>name</arg>
<arg>${name}</arg>
<arg>idBoard</arg>
<arg>${idBoard}</arg>
<arg>@{optional_args}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 15:26:01.515" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 15:26:01.514" endtime="20220704 15:26:01.515"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 15:26:01.515" endtime="20220704 15:26:01.515"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 15:26:01.516" level="INFO">${url} = lists/</msg>
<status status="PASS" starttime="20220704 15:26:01.515" endtime="20220704 15:26:01.516"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 15:26:01.609" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:26:01.516" endtime="20220704 15:26:01.609"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:26:01.609" endtime="20220704 15:26:01.609"/>
</return>
<msg timestamp="20220704 15:26:01.609" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:26:01.514" endtime="20220704 15:26:01.609"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:26:01.609" endtime="20220704 15:26:01.609"/>
</return>
<msg timestamp="20220704 15:26:01.609" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:26:01.514" endtime="20220704 15:26:01.609"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>list</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220704 15:26:01.610" endtime="20220704 15:26:01.611"/>
</kw>
<status status="PASS" starttime="20220704 15:26:01.609" endtime="20220704 15:26:01.611"/>
</kw>
<doc>Verify that a list can be created through API</doc>
<tag>api</tag>
<tag>list.create</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220704 15:26:01.513" endtime="20220704 15:26:01.612"/>
</test>
<test id="s1-s7-s1-s5-t2" name="UPDATE a list" line="19">
<kw name="Create A List" library="List">
<var>${response}</var>
<arg>NewList</arg>
<doc>Creates a new List
board id
name the list will have
optional_args: idListSource, pos, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>list</arg>
<arg>name</arg>
<arg>${name}</arg>
<arg>idBoard</arg>
<arg>${idBoard}</arg>
<arg>@{optional_args}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 15:26:01.614" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 15:26:01.613" endtime="20220704 15:26:01.614"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 15:26:01.614" endtime="20220704 15:26:01.614"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 15:26:01.615" level="INFO">${url} = lists/</msg>
<status status="PASS" starttime="20220704 15:26:01.614" endtime="20220704 15:26:01.615"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 15:26:01.709" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:26:01.615" endtime="20220704 15:26:01.709"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:26:01.709" endtime="20220704 15:26:01.709"/>
</return>
<msg timestamp="20220704 15:26:01.710" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:26:01.613" endtime="20220704 15:26:01.710"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:26:01.710" endtime="20220704 15:26:01.710"/>
</return>
<msg timestamp="20220704 15:26:01.710" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:26:01.613" endtime="20220704 15:26:01.710"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>list</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220704 15:26:01.710" endtime="20220704 15:26:01.712"/>
</kw>
<status status="PASS" starttime="20220704 15:26:01.710" endtime="20220704 15:26:01.712"/>
</kw>
<kw name="Update A List" library="List">
<arg>${response.json()}[id]</arg>
<arg>name</arg>
<arg>NewName</arg>
<doc>Updates the board with the given ID
optional_args: name, idListSource, pos, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>list</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 15:26:01.714" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 15:26:01.714" endtime="20220704 15:26:01.714"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 15:26:01.714" endtime="20220704 15:26:01.714"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 15:26:01.714" level="INFO">${url} = lists/62c30689b08a053a978a8348</msg>
<status status="PASS" starttime="20220704 15:26:01.714" endtime="20220704 15:26:01.714"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 15:26:01.795" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:26:01.715" endtime="20220704 15:26:01.795"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:26:01.795" endtime="20220704 15:26:01.795"/>
</return>
<msg timestamp="20220704 15:26:01.795" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:26:01.713" endtime="20220704 15:26:01.795"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:26:01.795" endtime="20220704 15:26:01.795"/>
</return>
<status status="PASS" starttime="20220704 15:26:01.712" endtime="20220704 15:26:01.795"/>
</kw>
<kw name="Get A List" library="List">
<var>${new_response}</var>
<arg>${response.json()}[id]</arg>
<doc>Gets the List with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>list</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 15:26:01.797" level="INFO">${url} = lists/62c30689b08a053a978a8348</msg>
<status status="PASS" starttime="20220704 15:26:01.797" endtime="20220704 15:26:01.797"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 15:26:01.849" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:26:01.797" endtime="20220704 15:26:01.849"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:26:01.849" endtime="20220704 15:26:01.849"/>
</return>
<msg timestamp="20220704 15:26:01.849" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:26:01.796" endtime="20220704 15:26:01.849"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:26:01.849" endtime="20220704 15:26:01.849"/>
</return>
<msg timestamp="20220704 15:26:01.849" level="INFO">${new_response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:26:01.796" endtime="20220704 15:26:01.850"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${new_response}</arg>
<arg>list</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220704 15:26:01.850" endtime="20220704 15:26:01.851"/>
</kw>
<status status="PASS" starttime="20220704 15:26:01.850" endtime="20220704 15:26:01.852"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${new_response.json()}[name]</arg>
<arg>NewName</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220704 15:26:01.852" endtime="20220704 15:26:01.852"/>
</kw>
<doc>Verify that a lists name can be updated through API</doc>
<tag>api</tag>
<tag>list.update</tag>
<tag>regression</tag>
<status status="PASS" starttime="20220704 15:26:01.612" endtime="20220704 15:26:01.852"/>
</test>
<test id="s1-s7-s1-s5-t3" name="ARCHIVE A list" line="29">
<kw name="Create A List" library="List">
<var>${response}</var>
<arg>NewList</arg>
<doc>Creates a new List
board id
name the list will have
optional_args: idListSource, pos, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>list</arg>
<arg>name</arg>
<arg>${name}</arg>
<arg>idBoard</arg>
<arg>${idBoard}</arg>
<arg>@{optional_args}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 15:26:01.855" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 15:26:01.855" endtime="20220704 15:26:01.855"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 15:26:01.855" endtime="20220704 15:26:01.856"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 15:26:01.856" level="INFO">${url} = lists/</msg>
<status status="PASS" starttime="20220704 15:26:01.856" endtime="20220704 15:26:01.856"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 15:26:01.964" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:26:01.857" endtime="20220704 15:26:01.964"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:26:01.964" endtime="20220704 15:26:01.964"/>
</return>
<msg timestamp="20220704 15:26:01.964" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:26:01.855" endtime="20220704 15:26:01.964"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:26:01.964" endtime="20220704 15:26:01.964"/>
</return>
<msg timestamp="20220704 15:26:01.965" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:26:01.853" endtime="20220704 15:26:01.965"/>
</kw>
<kw name="Archive A List" library="List">
<arg>${response.json()}[id]</arg>
<doc>Deletes the list with the given ID</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>archive_list</arg>
<arg>${id}</arg>
<arg>value</arg>
<arg>true</arg>
<arg>status_code=${status_code}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 15:26:01.966" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 15:26:01.966" endtime="20220704 15:26:01.966"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 15:26:01.967" endtime="20220704 15:26:01.967"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 15:26:01.967" level="INFO">${url} = lists/62c30689fa3b92576a399a62/closed</msg>
<status status="PASS" starttime="20220704 15:26:01.967" endtime="20220704 15:26:01.967"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 15:26:02.070" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:26:01.967" endtime="20220704 15:26:02.070"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:26:02.070" endtime="20220704 15:26:02.070"/>
</return>
<msg timestamp="20220704 15:26:02.071" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:26:01.966" endtime="20220704 15:26:02.071"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:26:02.071" endtime="20220704 15:26:02.071"/>
</return>
<status status="PASS" starttime="20220704 15:26:01.965" endtime="20220704 15:26:02.071"/>
</kw>
<kw name="Get A List" library="List">
<var>${new_response}</var>
<arg>${response.json()}[id]</arg>
<doc>Gets the List with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>list</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 15:26:02.073" level="INFO">${url} = lists/62c30689fa3b92576a399a62</msg>
<status status="PASS" starttime="20220704 15:26:02.072" endtime="20220704 15:26:02.073"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 15:26:02.121" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:26:02.073" endtime="20220704 15:26:02.121"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:26:02.121" endtime="20220704 15:26:02.121"/>
</return>
<msg timestamp="20220704 15:26:02.121" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:26:02.072" endtime="20220704 15:26:02.121"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:26:02.121" endtime="20220704 15:26:02.121"/>
</return>
<msg timestamp="20220704 15:26:02.121" level="INFO">${new_response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:26:02.071" endtime="20220704 15:26:02.121"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${new_response.json()}[closed]</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220704 15:26:02.121" endtime="20220704 15:26:02.122"/>
</kw>
<doc>Verify that a list can be archived through API</doc>
<tag>api</tag>
<tag>list.archive</tag>
<tag>regression</tag>
<status status="PASS" starttime="20220704 15:26:01.853" endtime="20220704 15:26:02.122"/>
</test>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Teardown Board</arg>
<arg>Delete All Sessions</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Teardown Board">
<doc>Delete the board created for this suite.</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 15:26:02.124" level="INFO">${url} = boards/62c306894af7fa5790753a0d</msg>
<status status="PASS" starttime="20220704 15:26:02.124" endtime="20220704 15:26:02.124"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 15:26:02.488" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:26:02.125" endtime="20220704 15:26:02.488"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:26:02.488" endtime="20220704 15:26:02.488"/>
</return>
<msg timestamp="20220704 15:26:02.488" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:26:02.124" endtime="20220704 15:26:02.488"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:26:02.488" endtime="20220704 15:26:02.488"/>
</return>
<status status="PASS" starttime="20220704 15:26:02.124" endtime="20220704 15:26:02.488"/>
</kw>
<status status="PASS" starttime="20220704 15:26:02.123" endtime="20220704 15:26:02.488"/>
</kw>
<status status="PASS" starttime="20220704 15:26:02.123" endtime="20220704 15:26:02.488"/>
</kw>
<kw name="Delete All Sessions" library="request_own_library">
<status status="PASS" starttime="20220704 15:26:02.488" endtime="20220704 15:26:02.489"/>
</kw>
<status status="PASS" starttime="20220704 15:26:02.123" endtime="20220704 15:26:02.489"/>
</kw>
<doc>Example Test with Trello API lists</doc>
<status status="PASS" starttime="20220704 15:26:01.300" endtime="20220704 15:26:02.489"/>
</suite>
<status status="PASS" starttime="20220704 15:25:51.615" endtime="20220704 15:26:02.491"/>
</suite>
<status status="PASS" starttime="20220704 15:25:51.598" endtime="20220704 15:26:02.493"/>
</suite>
<suite id="s1-s8" name="Trello" source="/trello">
<suite id="s1-s8-s1" name="Gui" source="/trello/gui">
<suite id="s1-s8-s1-s1" name="Trello Gui Board" source="/trello/gui/trello_gui_board.robot">
<kw name="Boards Suite Setup" type="SETUP">
<doc>Creates a Trello Sesion in order to use api's keywords.</doc>
<kw name="Create Trello Session" library="TrelloAPI">
<doc>Creates a Trello Session</doc>
<kw name="Create Session" library="request_own_library">
<arg>${API_BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<status status="PASS" starttime="20220704 15:26:41.801" endtime="20220704 15:26:41.802"/>
</kw>
<status status="PASS" starttime="20220704 15:26:41.801" endtime="20220704 15:26:41.802"/>
</kw>
<status status="PASS" starttime="20220704 15:26:41.801" endtime="20220704 15:26:41.802"/>
</kw>
<test id="s1-s8-s1-s1-t1" name="create a board" line="12">
<kw name="Open Browser From Environment" library="CommonGUI">
<arg>${LOGIN_URL}</arg>
<doc>This keywords takes REMOTE and BROWSER variables
from the environment automatically and only needs a url</doc>
<if>
<branch type="IF" condition="${is_remote}">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${url}</arg>
<arg>${BROWSER}</arg>
<arg>remote_url=http://selenium-hub:4444</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20220704 15:26:41.804" level="INFO">Opening browser 'chrome' to base url 'https://trello.com/login' through remote server at 'http://selenium-hub:4444'.</msg>
<status status="PASS" starttime="20220704 15:26:41.803" endtime="20220704 15:26:43.648"/>
</kw>
<status status="PASS" starttime="20220704 15:26:41.803" endtime="20220704 15:26:43.648"/>
</branch>
<branch type="ELSE">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${url}</arg>
<arg>${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<status status="NOT RUN" starttime="20220704 15:26:43.648" endtime="20220704 15:26:43.648"/>
</kw>
<status status="NOT RUN" starttime="20220704 15:26:43.648" endtime="20220704 15:26:43.648"/>
</branch>
<status status="PASS" starttime="20220704 15:26:41.803" endtime="20220704 15:26:43.648"/>
</if>
<status status="PASS" starttime="20220704 15:26:41.803" endtime="20220704 15:26:43.648"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20220704 15:26:43.649" endtime="20220704 15:26:43.779"/>
</kw>
<kw name="Login To Trello" library="LoginPage">
<arg>${DEFAULT_EMAIL}</arg>
<arg>${DEFAULT_PASSWORD}</arg>
<doc>High-level keyword for logging in to Trello</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220704 15:26:43.797" level="INFO">${url} = https://trello.com/login</msg>
<status status="PASS" starttime="20220704 15:26:43.780" endtime="20220704 15:26:43.797"/>
</kw>
<if>
<branch type="IF" condition="'${url}' != '${LOGIN_URL}'">
<kw name="Go To" library="SeleniumLibrary">
<arg>${LOGIN_URL}</arg>
<doc>Navigates the current browser window to the provided ``url``.</doc>
<status status="NOT RUN" starttime="20220704 15:26:43.797" endtime="20220704 15:26:43.797"/>
</kw>
<status status="NOT RUN" starttime="20220704 15:26:43.797" endtime="20220704 15:26:43.797"/>
</branch>
<status status="PASS" starttime="20220704 15:26:43.797" endtime="20220704 15:26:43.797"/>
</if>
<kw name="Enter Username" library="LoginPage">
<arg>${username}</arg>
<doc>Take a username as argument and
enters it in the user_input</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${USER_INPUT}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 15:26:43.798" endtime="20220704 15:26:43.859"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${USER_INPUT}</arg>
<arg>${username}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220704 15:26:43.860" level="INFO">Typing text 'bootcamp04@mailinator.com' into text field 'css:input#user'.</msg>
<status status="PASS" starttime="20220704 15:26:43.859" endtime="20220704 15:26:43.987"/>
</kw>
<status status="PASS" starttime="20220704 15:26:43.797" endtime="20220704 15:26:43.987"/>
</kw>
<kw name="Wait Until Element Is Not Visible" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<doc>Waits until the element ``locator`` is not visible.</doc>
<status status="PASS" starttime="20220704 15:26:43.987" endtime="20220704 15:26:44.767"/>
</kw>
<kw name="Click Login Button" library="LoginPage">
<doc>Clicks Trello's login button if in Trello's
login page, else it clicks Atlassian's</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220704 15:26:44.789" level="INFO">${url} = https://trello.com/login</msg>
<status status="PASS" starttime="20220704 15:26:44.767" endtime="20220704 15:26:44.789"/>
</kw>
<if>
<branch type="IF" condition="'${url}' == '${LOGIN_URL}'">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220704 15:26:44.789" endtime="20220704 15:26:44.855"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220704 15:26:44.855" level="INFO">Clicking button 'css:input#login'.</msg>
<status status="PASS" starttime="20220704 15:26:44.855" endtime="20220704 15:26:45.726"/>
</kw>
<status status="PASS" starttime="20220704 15:26:44.789" endtime="20220704 15:26:45.727"/>
</branch>
<branch type="ELSE">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="NOT RUN" starttime="20220704 15:26:45.727" endtime="20220704 15:26:45.727"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<status status="NOT RUN" starttime="20220704 15:26:45.727" endtime="20220704 15:26:45.727"/>
</kw>
<status status="NOT RUN" starttime="20220704 15:26:45.727" endtime="20220704 15:26:45.727"/>
</branch>
<status status="PASS" starttime="20220704 15:26:44.789" endtime="20220704 15:26:45.727"/>
</if>
<status status="PASS" starttime="20220704 15:26:44.767" endtime="20220704 15:26:45.727"/>
</kw>
<kw name="Wait Until Location Is Atlassian's Login" library="LoginPage">
<doc>Waits for the page redirection when logging in.</doc>
<kw name="Wait Until Location Contains" library="SeleniumLibrary">
<arg>atlassian.com</arg>
<doc>Waits until the current URL contains ``expected``.</doc>
<status status="PASS" starttime="20220704 15:26:45.728" endtime="20220704 15:26:45.756"/>
</kw>
<status status="PASS" starttime="20220704 15:26:45.727" endtime="20220704 15:26:45.756"/>
</kw>
<kw name="Enter Password" library="LoginPage">
<arg>${password}</arg>
<doc>Take a password as argument and
enters it in the password_input</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<arg>timeout=10</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 15:26:45.757" endtime="20220704 15:26:45.815"/>
</kw>
<kw name="Input Password" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<arg>${password}</arg>
<doc>Types the given password into the text field identified by ``locator``.</doc>
<msg timestamp="20220704 15:26:45.815" level="INFO">Typing password into text field 'css:input#password'.</msg>
<msg timestamp="20220704 15:26:45.885" level="INFO">Temporally setting log level to: NONE</msg>
<msg timestamp="20220704 15:26:45.953" level="INFO">Log level changed from NONE to INFO.</msg>
<status status="PASS" starttime="20220704 15:26:45.815" endtime="20220704 15:26:45.953"/>
</kw>
<status status="PASS" starttime="20220704 15:26:45.756" endtime="20220704 15:26:45.953"/>
</kw>
<kw name="Click Login Button" library="LoginPage">
<doc>Clicks Trello's login button if in Trello's
login page, else it clicks Atlassian's</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220704 15:26:45.965" level="INFO">${url} = https://id.atlassian.com/login?application=trello&amp;continue=https%3A%2F%2Ftrello.com%2Fauth%2Fatlassian%2Fcallback%3FreturnUrl%3D%252F%26display%3D%26aaOnboarding%3D%26updateEmail%3D%26traceId%3D62c306...</msg>
<status status="PASS" starttime="20220704 15:26:45.953" endtime="20220704 15:26:45.965"/>
</kw>
<if>
<branch type="IF" condition="'${url}' == '${LOGIN_URL}'">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="NOT RUN" starttime="20220704 15:26:45.965" endtime="20220704 15:26:45.965"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<status status="NOT RUN" starttime="20220704 15:26:45.965" endtime="20220704 15:26:45.966"/>
</kw>
<status status="NOT RUN" starttime="20220704 15:26:45.965" endtime="20220704 15:26:45.966"/>
</branch>
<branch type="ELSE">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220704 15:26:45.966" endtime="20220704 15:26:46.024"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220704 15:26:46.025" level="INFO">Clicking button 'css:button#login-submit'.</msg>
<status status="PASS" starttime="20220704 15:26:46.024" endtime="20220704 15:26:46.141"/>
</kw>
<status status="PASS" starttime="20220704 15:26:45.966" endtime="20220704 15:26:46.141"/>
</branch>
<status status="PASS" starttime="20220704 15:26:45.965" endtime="20220704 15:26:46.141"/>
</if>
<status status="PASS" starttime="20220704 15:26:45.953" endtime="20220704 15:26:46.142"/>
</kw>
<status status="PASS" starttime="20220704 15:26:43.780" endtime="20220704 15:26:46.142"/>
</kw>
<kw name="Click New Board Button" library="BoardsPage">
<doc>Clicks the button that creates a new board.</doc>
<kw name="Wait Until Location Contains" library="SeleniumLibrary">
<arg>${BOARDS_PATH}</arg>
<doc>Waits until the current URL contains ``expected``.</doc>
<status status="PASS" starttime="20220704 15:26:46.142" endtime="20220704 15:26:49.518"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Click Element</arg>
<arg>${CREATE_NEW_BOARD_BUTTON}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${CREATE_NEW_BOARD_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 15:26:49.519" level="INFO">Clicking element 'xpath://div[@class="boards-page-board-section mod-no-sidebar"]//div[@class="board-tile mod-add"]'.</msg>
<status status="PASS" starttime="20220704 15:26:49.518" endtime="20220704 15:26:49.668"/>
</kw>
<status status="PASS" starttime="20220704 15:26:49.518" endtime="20220704 15:26:49.668"/>
</kw>
<status status="PASS" starttime="20220704 15:26:46.142" endtime="20220704 15:26:49.668"/>
</kw>
<kw name="Set Name to Board" library="BoardsPage">
<arg>NewName</arg>
<doc>Set the name of the board and press the create button</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${BOARD_NAME_INPUT}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 15:26:49.669" endtime="20220704 15:26:49.979"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${BOARD_NAME_INPUT}</arg>
<arg>${name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220704 15:26:49.979" level="INFO">Typing text 'NewName' into text field 'xpath://div[@title='Create board']/ancestor::section//input[@type="text"]'.</msg>
<status status="PASS" starttime="20220704 15:26:49.979" endtime="20220704 15:26:50.143"/>
</kw>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${CREATE_BUTTON}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220704 15:26:50.143" endtime="20220704 15:26:50.200"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${CREATE_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 15:26:50.201" level="INFO">Clicking element 'xpath://div[@title='Create board']/ancestor::section//button[text()='Create']'.</msg>
<status status="PASS" starttime="20220704 15:26:50.201" endtime="20220704 15:26:50.317"/>
</kw>
<status status="PASS" starttime="20220704 15:26:49.669" endtime="20220704 15:26:50.317"/>
</kw>
<kw name="Verify Name of Board" library="UpperHorizontalMenu">
<arg>NewName</arg>
<doc>Verifies the name of a board</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${NAME_OF_BOARD}</arg>
<arg>10</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 15:26:50.317" endtime="20220704 15:26:51.438"/>
</kw>
<kw name="Element Text Should Be" library="SeleniumLibrary">
<arg>${NAME_OF_BOARD}</arg>
<arg>${name}</arg>
<doc>Verifies that element ``locator`` contains exact the text ``expected``.</doc>
<msg timestamp="20220704 15:26:51.438" level="INFO">Verifying element 'xpath://h1[contains(@class, 'js-board-editing-target')]' contains exact text 'NewName'.</msg>
<status status="PASS" starttime="20220704 15:26:51.438" endtime="20220704 15:26:51.492"/>
</kw>
<status status="PASS" starttime="20220704 15:26:50.317" endtime="20220704 15:26:51.492"/>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Open Show Menu</arg>
<arg>Delete Current Board</arg>
<arg>Close Browser</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Open Show Menu" library="UpperHorizontalMenu">
<doc>Open the Show Menu in the right side of the board page where multiple options are available</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${SHOW_MENU_BUTTON}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 15:26:51.493" endtime="20220704 15:26:51.533"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${SHOW_MENU_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 15:26:51.534" level="INFO">Clicking element 'xpath://div[contains(@class, 'board-header')]//a[contains(., 'Show menu')]'.</msg>
<status status="PASS" starttime="20220704 15:26:51.534" endtime="20220704 15:26:51.629"/>
</kw>
<status status="PASS" starttime="20220704 15:26:51.492" endtime="20220704 15:26:51.629"/>
</kw>
<kw name="Delete Current Board" library="ShownMenu">
<doc>Deletes the current board</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${MORE_BUTTON}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 15:26:51.630" endtime="20220704 15:26:51.686"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${MORE_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 15:26:51.687" level="INFO">Clicking element 'xpath://div[contains(@class, 'board-menu-content')]//a[contains(text(), 'More')]'.</msg>
<status status="PASS" starttime="20220704 15:26:51.686" endtime="20220704 15:26:51.833"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${CLOSE_BOARD_BUTTON}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 15:26:51.833" endtime="20220704 15:26:51.911"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${CLOSE_BOARD_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 15:26:51.912" level="INFO">Clicking element 'xpath://div[@class= 'board-menu-content-frame']//a[contains(text(), 'Close board')]'.</msg>
<status status="PASS" starttime="20220704 15:26:51.911" endtime="20220704 15:26:52.019"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${CLOSE_BUTTON}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 15:26:52.019" endtime="20220704 15:26:52.072"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${CLOSE_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 15:26:52.073" level="INFO">Clicking element 'xpath://div[@class= 'no-back']//input'.</msg>
<status status="PASS" starttime="20220704 15:26:52.073" endtime="20220704 15:26:52.201"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${PERMANENTLY_DELETE_BUTTON}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 15:26:52.201" endtime="20220704 15:26:52.470"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${PERMANENTLY_DELETE_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 15:26:52.471" level="INFO">Clicking element 'xpath://button[text()= 'Permanently delete board']'.</msg>
<status status="PASS" starttime="20220704 15:26:52.470" endtime="20220704 15:26:52.541"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${CONFIRM_DELETE_BUTTON}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 15:26:52.541" endtime="20220704 15:26:52.590"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${CONFIRM_DELETE_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 15:26:52.591" level="INFO">Clicking element 'xpath://section//button[text()= 'Delete']'.</msg>
<status status="PASS" starttime="20220704 15:26:52.590" endtime="20220704 15:26:52.660"/>
</kw>
<status status="PASS" starttime="20220704 15:26:51.630" endtime="20220704 15:26:52.660"/>
</kw>
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20220704 15:26:52.660" endtime="20220704 15:26:52.770"/>
</kw>
<status status="PASS" starttime="20220704 15:26:51.492" endtime="20220704 15:26:52.770"/>
</kw>
<doc>Verify that a board can be created through GUI</doc>
<tag>board.create</tag>
<tag>gui</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220704 15:26:41.802" endtime="20220704 15:26:52.770"/>
</test>
<test id="s1-s8-s1-s1-t2" name="delete a board" line="26">
<kw name="Create A Board" library="Board">
<var>${BOARD}</var>
<arg>NewName</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 15:26:52.773" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 15:26:52.773" endtime="20220704 15:26:52.773"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 15:26:52.773" endtime="20220704 15:26:52.773"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 15:26:52.774" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220704 15:26:52.773" endtime="20220704 15:26:52.774"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 15:26:53.014" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:26:52.774" endtime="20220704 15:26:53.014"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:26:53.014" endtime="20220704 15:26:53.014"/>
</return>
<msg timestamp="20220704 15:26:53.014" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:26:52.772" endtime="20220704 15:26:53.014"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:26:53.015" endtime="20220704 15:26:53.015"/>
</return>
<msg timestamp="20220704 15:26:53.015" level="INFO">${BOARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:26:52.772" endtime="20220704 15:26:53.015"/>
</kw>
<kw name="Open Browser From Environment" library="CommonGUI">
<arg>${LOGIN_URL}</arg>
<doc>This keywords takes REMOTE and BROWSER variables
from the environment automatically and only needs a url</doc>
<if>
<branch type="IF" condition="${is_remote}">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${url}</arg>
<arg>${BROWSER}</arg>
<arg>remote_url=http://selenium-hub:4444</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20220704 15:26:53.016" level="INFO">Opening browser 'chrome' to base url 'https://trello.com/login' through remote server at 'http://selenium-hub:4444'.</msg>
<status status="PASS" starttime="20220704 15:26:53.016" endtime="20220704 15:26:53.967"/>
</kw>
<status status="PASS" starttime="20220704 15:26:53.015" endtime="20220704 15:26:53.967"/>
</branch>
<branch type="ELSE">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${url}</arg>
<arg>${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<status status="NOT RUN" starttime="20220704 15:26:53.967" endtime="20220704 15:26:53.967"/>
</kw>
<status status="NOT RUN" starttime="20220704 15:26:53.967" endtime="20220704 15:26:53.967"/>
</branch>
<status status="PASS" starttime="20220704 15:26:53.015" endtime="20220704 15:26:53.967"/>
</if>
<status status="PASS" starttime="20220704 15:26:53.015" endtime="20220704 15:26:53.967"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20220704 15:26:53.968" endtime="20220704 15:26:54.115"/>
</kw>
<kw name="Login To Trello" library="LoginPage">
<arg>${DEFAULT_EMAIL}</arg>
<arg>${DEFAULT_PASSWORD}</arg>
<doc>High-level keyword for logging in to Trello</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220704 15:26:54.133" level="INFO">${url} = https://trello.com/login</msg>
<status status="PASS" starttime="20220704 15:26:54.116" endtime="20220704 15:26:54.133"/>
</kw>
<if>
<branch type="IF" condition="'${url}' != '${LOGIN_URL}'">
<kw name="Go To" library="SeleniumLibrary">
<arg>${LOGIN_URL}</arg>
<doc>Navigates the current browser window to the provided ``url``.</doc>
<status status="NOT RUN" starttime="20220704 15:26:54.134" endtime="20220704 15:26:54.134"/>
</kw>
<status status="NOT RUN" starttime="20220704 15:26:54.133" endtime="20220704 15:26:54.134"/>
</branch>
<status status="PASS" starttime="20220704 15:26:54.133" endtime="20220704 15:26:54.134"/>
</if>
<kw name="Enter Username" library="LoginPage">
<arg>${username}</arg>
<doc>Take a username as argument and
enters it in the user_input</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${USER_INPUT}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 15:26:54.134" endtime="20220704 15:26:54.175"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${USER_INPUT}</arg>
<arg>${username}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220704 15:26:54.176" level="INFO">Typing text 'bootcamp04@mailinator.com' into text field 'css:input#user'.</msg>
<status status="PASS" starttime="20220704 15:26:54.175" endtime="20220704 15:26:54.273"/>
</kw>
<status status="PASS" starttime="20220704 15:26:54.134" endtime="20220704 15:26:54.273"/>
</kw>
<kw name="Wait Until Element Is Not Visible" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<doc>Waits until the element ``locator`` is not visible.</doc>
<status status="PASS" starttime="20220704 15:26:54.273" endtime="20220704 15:26:55.025"/>
</kw>
<kw name="Click Login Button" library="LoginPage">
<doc>Clicks Trello's login button if in Trello's
login page, else it clicks Atlassian's</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220704 15:26:55.040" level="INFO">${url} = https://trello.com/login</msg>
<status status="PASS" starttime="20220704 15:26:55.026" endtime="20220704 15:26:55.040"/>
</kw>
<if>
<branch type="IF" condition="'${url}' == '${LOGIN_URL}'">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220704 15:26:55.040" endtime="20220704 15:26:55.107"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220704 15:26:55.107" level="INFO">Clicking button 'css:input#login'.</msg>
<status status="PASS" starttime="20220704 15:26:55.107" endtime="20220704 15:26:55.852"/>
</kw>
<status status="PASS" starttime="20220704 15:26:55.040" endtime="20220704 15:26:55.852"/>
</branch>
<branch type="ELSE">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="NOT RUN" starttime="20220704 15:26:55.853" endtime="20220704 15:26:55.853"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<status status="NOT RUN" starttime="20220704 15:26:55.853" endtime="20220704 15:26:55.853"/>
</kw>
<status status="NOT RUN" starttime="20220704 15:26:55.852" endtime="20220704 15:26:55.853"/>
</branch>
<status status="PASS" starttime="20220704 15:26:55.040" endtime="20220704 15:26:55.853"/>
</if>
<status status="PASS" starttime="20220704 15:26:55.026" endtime="20220704 15:26:55.853"/>
</kw>
<kw name="Wait Until Location Is Atlassian's Login" library="LoginPage">
<doc>Waits for the page redirection when logging in.</doc>
<kw name="Wait Until Location Contains" library="SeleniumLibrary">
<arg>atlassian.com</arg>
<doc>Waits until the current URL contains ``expected``.</doc>
<status status="PASS" starttime="20220704 15:26:55.853" endtime="20220704 15:26:55.874"/>
</kw>
<status status="PASS" starttime="20220704 15:26:55.853" endtime="20220704 15:26:55.874"/>
</kw>
<kw name="Enter Password" library="LoginPage">
<arg>${password}</arg>
<doc>Take a password as argument and
enters it in the password_input</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<arg>timeout=10</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 15:26:55.875" endtime="20220704 15:26:55.931"/>
</kw>
<kw name="Input Password" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<arg>${password}</arg>
<doc>Types the given password into the text field identified by ``locator``.</doc>
<msg timestamp="20220704 15:26:55.931" level="INFO">Typing password into text field 'css:input#password'.</msg>
<msg timestamp="20220704 15:26:55.985" level="INFO">Temporally setting log level to: NONE</msg>
<msg timestamp="20220704 15:26:56.066" level="INFO">Log level changed from NONE to INFO.</msg>
<status status="PASS" starttime="20220704 15:26:55.931" endtime="20220704 15:26:56.066"/>
</kw>
<status status="PASS" starttime="20220704 15:26:55.874" endtime="20220704 15:26:56.066"/>
</kw>
<kw name="Click Login Button" library="LoginPage">
<doc>Clicks Trello's login button if in Trello's
login page, else it clicks Atlassian's</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220704 15:26:56.079" level="INFO">${url} = https://id.atlassian.com/login?application=trello&amp;continue=https%3A%2F%2Ftrello.com%2Fauth%2Fatlassian%2Fcallback%3FreturnUrl%3D%252F%26display%3D%26aaOnboarding%3D%26updateEmail%3D%26traceId%3D62c306...</msg>
<status status="PASS" starttime="20220704 15:26:56.067" endtime="20220704 15:26:56.079"/>
</kw>
<if>
<branch type="IF" condition="'${url}' == '${LOGIN_URL}'">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="NOT RUN" starttime="20220704 15:26:56.080" endtime="20220704 15:26:56.080"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<status status="NOT RUN" starttime="20220704 15:26:56.080" endtime="20220704 15:26:56.080"/>
</kw>
<status status="NOT RUN" starttime="20220704 15:26:56.080" endtime="20220704 15:26:56.080"/>
</branch>
<branch type="ELSE">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220704 15:26:56.080" endtime="20220704 15:26:56.140"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220704 15:26:56.140" level="INFO">Clicking button 'css:button#login-submit'.</msg>
<status status="PASS" starttime="20220704 15:26:56.140" endtime="20220704 15:26:56.248"/>
</kw>
<status status="PASS" starttime="20220704 15:26:56.080" endtime="20220704 15:26:56.248"/>
</branch>
<status status="PASS" starttime="20220704 15:26:56.080" endtime="20220704 15:26:56.248"/>
</if>
<status status="PASS" starttime="20220704 15:26:56.066" endtime="20220704 15:26:56.248"/>
</kw>
<status status="PASS" starttime="20220704 15:26:54.115" endtime="20220704 15:26:56.248"/>
</kw>
<kw name="Go To Board" library="BoardsPage">
<arg>NewName</arg>
<doc>Receives the board name and goes to that board's page.</doc>
<kw name="Format String" library="String">
<var>${locator}</var>
<arg>${BOARD_BUTTON}</arg>
<arg>${board_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 15:26:56.249" level="INFO">${locator} = //div[@title="NewName"]</msg>
<status status="PASS" starttime="20220704 15:26:56.249" endtime="20220704 15:26:56.249"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 15:26:56.249" endtime="20220704 15:26:59.107"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 15:26:59.107" level="INFO">Clicking element '//div[@title="NewName"]'.</msg>
<status status="PASS" starttime="20220704 15:26:59.107" endtime="20220704 15:26:59.446"/>
</kw>
<status status="PASS" starttime="20220704 15:26:56.249" endtime="20220704 15:26:59.447"/>
</kw>
<kw name="Verify Name of Board" library="UpperHorizontalMenu">
<arg>NewName</arg>
<doc>Verifies the name of a board</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${NAME_OF_BOARD}</arg>
<arg>10</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 15:26:59.447" endtime="20220704 15:27:00.018"/>
</kw>
<kw name="Element Text Should Be" library="SeleniumLibrary">
<arg>${NAME_OF_BOARD}</arg>
<arg>${name}</arg>
<doc>Verifies that element ``locator`` contains exact the text ``expected``.</doc>
<msg timestamp="20220704 15:27:00.018" level="INFO">Verifying element 'xpath://h1[contains(@class, 'js-board-editing-target')]' contains exact text 'NewName'.</msg>
<status status="PASS" starttime="20220704 15:27:00.018" endtime="20220704 15:27:00.067"/>
</kw>
<status status="PASS" starttime="20220704 15:26:59.447" endtime="20220704 15:27:00.067"/>
</kw>
<kw name="Open Show Menu" library="UpperHorizontalMenu">
<doc>Open the Show Menu in the right side of the board page where multiple options are available</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${SHOW_MENU_BUTTON}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 15:27:00.068" endtime="20220704 15:27:00.111"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${SHOW_MENU_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 15:27:00.112" level="INFO">Clicking element 'xpath://div[contains(@class, 'board-header')]//a[contains(., 'Show menu')]'.</msg>
<status status="PASS" starttime="20220704 15:27:00.111" endtime="20220704 15:27:00.202"/>
</kw>
<status status="PASS" starttime="20220704 15:27:00.067" endtime="20220704 15:27:00.202"/>
</kw>
<kw name="Delete Current Board" library="ShownMenu">
<doc>Deletes the current board</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${MORE_BUTTON}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 15:27:00.203" endtime="20220704 15:27:00.280"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${MORE_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 15:27:00.280" level="INFO">Clicking element 'xpath://div[contains(@class, 'board-menu-content')]//a[contains(text(), 'More')]'.</msg>
<status status="PASS" starttime="20220704 15:27:00.280" endtime="20220704 15:27:00.414"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${CLOSE_BOARD_BUTTON}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 15:27:00.414" endtime="20220704 15:27:00.476"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${CLOSE_BOARD_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 15:27:00.476" level="INFO">Clicking element 'xpath://div[@class= 'board-menu-content-frame']//a[contains(text(), 'Close board')]'.</msg>
<status status="PASS" starttime="20220704 15:27:00.476" endtime="20220704 15:27:00.578"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${CLOSE_BUTTON}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 15:27:00.578" endtime="20220704 15:27:00.627"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${CLOSE_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 15:27:00.627" level="INFO">Clicking element 'xpath://div[@class= 'no-back']//input'.</msg>
<status status="PASS" starttime="20220704 15:27:00.627" endtime="20220704 15:27:00.728"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${PERMANENTLY_DELETE_BUTTON}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 15:27:00.729" endtime="20220704 15:27:01.000"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${PERMANENTLY_DELETE_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 15:27:01.001" level="INFO">Clicking element 'xpath://button[text()= 'Permanently delete board']'.</msg>
<status status="PASS" starttime="20220704 15:27:01.000" endtime="20220704 15:27:01.063"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${CONFIRM_DELETE_BUTTON}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 15:27:01.063" endtime="20220704 15:27:01.097"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${CONFIRM_DELETE_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 15:27:01.097" level="INFO">Clicking element 'xpath://section//button[text()= 'Delete']'.</msg>
<status status="PASS" starttime="20220704 15:27:01.097" endtime="20220704 15:27:01.163"/>
</kw>
<status status="PASS" starttime="20220704 15:27:00.202" endtime="20220704 15:27:01.163"/>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Close Browser</arg>
<arg>AND</arg>
<arg>Run Keyword If Test Failed</arg>
<arg>Wait Until Keyword Succeeds</arg>
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20220704 15:27:01.164" endtime="20220704 15:27:01.277"/>
</kw>
<kw name="Run Keyword If Test Failed" library="BuiltIn">
<arg>Wait Until Keyword Succeeds</arg>
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Runs the given keyword with the given arguments, if the test failed.</doc>
<status status="PASS" starttime="20220704 15:27:01.278" endtime="20220704 15:27:01.278"/>
</kw>
<status status="PASS" starttime="20220704 15:27:01.163" endtime="20220704 15:27:01.278"/>
</kw>
<doc>Verify that a board can be deleted through GUI</doc>
<tag>board.delete</tag>
<tag>gui</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220704 15:26:52.771" endtime="20220704 15:27:01.278"/>
</test>
<test id="s1-s8-s1-s1-t3" name="Update a board's description" line="41">
<kw name="Create A Board" library="Board">
<var>${BOARD}</var>
<arg>BoardNew</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 15:27:01.282" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 15:27:01.282" endtime="20220704 15:27:01.282"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 15:27:01.282" endtime="20220704 15:27:01.283"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 15:27:01.284" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220704 15:27:01.283" endtime="20220704 15:27:01.284"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 15:27:01.427" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:27:01.284" endtime="20220704 15:27:01.427"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:27:01.427" endtime="20220704 15:27:01.427"/>
</return>
<msg timestamp="20220704 15:27:01.427" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:27:01.282" endtime="20220704 15:27:01.427"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:27:01.427" endtime="20220704 15:27:01.427"/>
</return>
<msg timestamp="20220704 15:27:01.427" level="INFO">${BOARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:27:01.281" endtime="20220704 15:27:01.427"/>
</kw>
<kw name="Open Browser From Environment" library="CommonGUI">
<arg>${LOGIN_URL}</arg>
<doc>This keywords takes REMOTE and BROWSER variables
from the environment automatically and only needs a url</doc>
<if>
<branch type="IF" condition="${is_remote}">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${url}</arg>
<arg>${BROWSER}</arg>
<arg>remote_url=http://selenium-hub:4444</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20220704 15:27:01.429" level="INFO">Opening browser 'chrome' to base url 'https://trello.com/login' through remote server at 'http://selenium-hub:4444'.</msg>
<status status="PASS" starttime="20220704 15:27:01.428" endtime="20220704 15:27:02.471"/>
</kw>
<status status="PASS" starttime="20220704 15:27:01.428" endtime="20220704 15:27:02.471"/>
</branch>
<branch type="ELSE">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${url}</arg>
<arg>${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<status status="NOT RUN" starttime="20220704 15:27:02.472" endtime="20220704 15:27:02.472"/>
</kw>
<status status="NOT RUN" starttime="20220704 15:27:02.471" endtime="20220704 15:27:02.472"/>
</branch>
<status status="PASS" starttime="20220704 15:27:01.428" endtime="20220704 15:27:02.472"/>
</if>
<status status="PASS" starttime="20220704 15:27:01.428" endtime="20220704 15:27:02.472"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20220704 15:27:02.472" endtime="20220704 15:27:02.586"/>
</kw>
<kw name="Login To Trello" library="LoginPage">
<arg>${DEFAULT_EMAIL}</arg>
<arg>${DEFAULT_PASSWORD}</arg>
<doc>High-level keyword for logging in to Trello</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220704 15:27:02.600" level="INFO">${url} = https://trello.com/login</msg>
<status status="PASS" starttime="20220704 15:27:02.587" endtime="20220704 15:27:02.600"/>
</kw>
<if>
<branch type="IF" condition="'${url}' != '${LOGIN_URL}'">
<kw name="Go To" library="SeleniumLibrary">
<arg>${LOGIN_URL}</arg>
<doc>Navigates the current browser window to the provided ``url``.</doc>
<status status="NOT RUN" starttime="20220704 15:27:02.600" endtime="20220704 15:27:02.600"/>
</kw>
<status status="NOT RUN" starttime="20220704 15:27:02.600" endtime="20220704 15:27:02.600"/>
</branch>
<status status="PASS" starttime="20220704 15:27:02.600" endtime="20220704 15:27:02.600"/>
</if>
<kw name="Enter Username" library="LoginPage">
<arg>${username}</arg>
<doc>Take a username as argument and
enters it in the user_input</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${USER_INPUT}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 15:27:02.601" endtime="20220704 15:27:02.670"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${USER_INPUT}</arg>
<arg>${username}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220704 15:27:02.671" level="INFO">Typing text 'bootcamp04@mailinator.com' into text field 'css:input#user'.</msg>
<status status="PASS" starttime="20220704 15:27:02.671" endtime="20220704 15:27:02.778"/>
</kw>
<status status="PASS" starttime="20220704 15:27:02.601" endtime="20220704 15:27:02.778"/>
</kw>
<kw name="Wait Until Element Is Not Visible" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<doc>Waits until the element ``locator`` is not visible.</doc>
<status status="PASS" starttime="20220704 15:27:02.778" endtime="20220704 15:27:03.511"/>
</kw>
<kw name="Click Login Button" library="LoginPage">
<doc>Clicks Trello's login button if in Trello's
login page, else it clicks Atlassian's</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220704 15:27:03.521" level="INFO">${url} = https://trello.com/login</msg>
<status status="PASS" starttime="20220704 15:27:03.512" endtime="20220704 15:27:03.521"/>
</kw>
<if>
<branch type="IF" condition="'${url}' == '${LOGIN_URL}'">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220704 15:27:03.522" endtime="20220704 15:27:03.575"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220704 15:27:03.575" level="INFO">Clicking button 'css:input#login'.</msg>
<status status="PASS" starttime="20220704 15:27:03.575" endtime="20220704 15:27:04.380"/>
</kw>
<status status="PASS" starttime="20220704 15:27:03.522" endtime="20220704 15:27:04.381"/>
</branch>
<branch type="ELSE">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="NOT RUN" starttime="20220704 15:27:04.381" endtime="20220704 15:27:04.381"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<status status="NOT RUN" starttime="20220704 15:27:04.381" endtime="20220704 15:27:04.381"/>
</kw>
<status status="NOT RUN" starttime="20220704 15:27:04.381" endtime="20220704 15:27:04.381"/>
</branch>
<status status="PASS" starttime="20220704 15:27:03.522" endtime="20220704 15:27:04.381"/>
</if>
<status status="PASS" starttime="20220704 15:27:03.511" endtime="20220704 15:27:04.381"/>
</kw>
<kw name="Wait Until Location Is Atlassian's Login" library="LoginPage">
<doc>Waits for the page redirection when logging in.</doc>
<kw name="Wait Until Location Contains" library="SeleniumLibrary">
<arg>atlassian.com</arg>
<doc>Waits until the current URL contains ``expected``.</doc>
<status status="PASS" starttime="20220704 15:27:04.382" endtime="20220704 15:27:04.403"/>
</kw>
<status status="PASS" starttime="20220704 15:27:04.381" endtime="20220704 15:27:04.403"/>
</kw>
<kw name="Enter Password" library="LoginPage">
<arg>${password}</arg>
<doc>Take a password as argument and
enters it in the password_input</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<arg>timeout=10</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 15:27:04.404" endtime="20220704 15:27:04.449"/>
</kw>
<kw name="Input Password" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<arg>${password}</arg>
<doc>Types the given password into the text field identified by ``locator``.</doc>
<msg timestamp="20220704 15:27:04.450" level="INFO">Typing password into text field 'css:input#password'.</msg>
<msg timestamp="20220704 15:27:04.496" level="INFO">Temporally setting log level to: NONE</msg>
<msg timestamp="20220704 15:27:04.561" level="INFO">Log level changed from NONE to INFO.</msg>
<status status="PASS" starttime="20220704 15:27:04.449" endtime="20220704 15:27:04.561"/>
</kw>
<status status="PASS" starttime="20220704 15:27:04.403" endtime="20220704 15:27:04.561"/>
</kw>
<kw name="Click Login Button" library="LoginPage">
<doc>Clicks Trello's login button if in Trello's
login page, else it clicks Atlassian's</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220704 15:27:04.576" level="INFO">${url} = https://id.atlassian.com/login?application=trello&amp;continue=https%3A%2F%2Ftrello.com%2Fauth%2Fatlassian%2Fcallback%3FreturnUrl%3D%252F%26display%3D%26aaOnboarding%3D%26updateEmail%3D%26traceId%3D62c306...</msg>
<status status="PASS" starttime="20220704 15:27:04.561" endtime="20220704 15:27:04.576"/>
</kw>
<if>
<branch type="IF" condition="'${url}' == '${LOGIN_URL}'">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="NOT RUN" starttime="20220704 15:27:04.576" endtime="20220704 15:27:04.576"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<status status="NOT RUN" starttime="20220704 15:27:04.576" endtime="20220704 15:27:04.576"/>
</kw>
<status status="NOT RUN" starttime="20220704 15:27:04.576" endtime="20220704 15:27:04.576"/>
</branch>
<branch type="ELSE">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220704 15:27:04.576" endtime="20220704 15:27:04.641"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220704 15:27:04.642" level="INFO">Clicking button 'css:button#login-submit'.</msg>
<status status="PASS" starttime="20220704 15:27:04.642" endtime="20220704 15:27:04.763"/>
</kw>
<status status="PASS" starttime="20220704 15:27:04.576" endtime="20220704 15:27:04.763"/>
</branch>
<status status="PASS" starttime="20220704 15:27:04.576" endtime="20220704 15:27:04.763"/>
</if>
<status status="PASS" starttime="20220704 15:27:04.561" endtime="20220704 15:27:04.763"/>
</kw>
<status status="PASS" starttime="20220704 15:27:02.586" endtime="20220704 15:27:04.764"/>
</kw>
<kw name="Go To Board" library="BoardsPage">
<arg>BoardNew</arg>
<doc>Receives the board name and goes to that board's page.</doc>
<kw name="Format String" library="String">
<var>${locator}</var>
<arg>${BOARD_BUTTON}</arg>
<arg>${board_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 15:27:04.764" level="INFO">${locator} = //div[@title="BoardNew"]</msg>
<status status="PASS" starttime="20220704 15:27:04.764" endtime="20220704 15:27:04.764"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 15:27:04.764" endtime="20220704 15:27:07.632"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 15:27:07.633" level="INFO">Clicking element '//div[@title="BoardNew"]'.</msg>
<status status="PASS" starttime="20220704 15:27:07.632" endtime="20220704 15:27:07.939"/>
</kw>
<status status="PASS" starttime="20220704 15:27:04.764" endtime="20220704 15:27:07.939"/>
</kw>
<kw name="Verify Name of Board" library="UpperHorizontalMenu">
<arg>BoardNew</arg>
<doc>Verifies the name of a board</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${NAME_OF_BOARD}</arg>
<arg>10</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 15:27:07.940" endtime="20220704 15:27:08.396"/>
</kw>
<kw name="Element Text Should Be" library="SeleniumLibrary">
<arg>${NAME_OF_BOARD}</arg>
<arg>${name}</arg>
<doc>Verifies that element ``locator`` contains exact the text ``expected``.</doc>
<msg timestamp="20220704 15:27:08.396" level="INFO">Verifying element 'xpath://h1[contains(@class, 'js-board-editing-target')]' contains exact text 'BoardNew'.</msg>
<status status="PASS" starttime="20220704 15:27:08.396" endtime="20220704 15:27:08.470"/>
</kw>
<status status="PASS" starttime="20220704 15:27:07.940" endtime="20220704 15:27:08.470"/>
</kw>
<kw name="Open Show Menu" library="UpperHorizontalMenu">
<doc>Open the Show Menu in the right side of the board page where multiple options are available</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${SHOW_MENU_BUTTON}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 15:27:08.471" endtime="20220704 15:27:08.522"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${SHOW_MENU_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 15:27:08.522" level="INFO">Clicking element 'xpath://div[contains(@class, 'board-header')]//a[contains(., 'Show menu')]'.</msg>
<status status="PASS" starttime="20220704 15:27:08.522" endtime="20220704 15:27:08.588"/>
</kw>
<status status="PASS" starttime="20220704 15:27:08.470" endtime="20220704 15:27:08.588"/>
</kw>
<kw name="Update Description of Board" library="ShownMenu">
<arg>UpdatedDescription</arg>
<doc>Updates the description of a board</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ABOUT_THIS_BOARD}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 15:27:08.588" endtime="20220704 15:27:08.640"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${ABOUT_THIS_BOARD}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 15:27:08.640" level="INFO">Clicking element 'xpath://div[contains(@class, 'board-menu-content')]//a[contains(text(), 'About')]'.</msg>
<status status="PASS" starttime="20220704 15:27:08.640" endtime="20220704 15:27:08.799"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DESCRIPTION}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 15:27:08.799" endtime="20220704 15:27:09.086"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${DESCRIPTION}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 15:27:09.086" level="INFO">Clicking element 'xpath://a[contains(@class, 'description-fake-text-area')]'.</msg>
<status status="PASS" starttime="20220704 15:27:09.086" endtime="20220704 15:27:09.154"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${DESC_TEXT_AREA}</arg>
<arg>${desc}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220704 15:27:09.155" level="INFO">Typing text 'UpdatedDescription' into text field 'xpath://div[contains(@class, 'board-menu-content')]//textarea'.</msg>
<status status="PASS" starttime="20220704 15:27:09.154" endtime="20220704 15:27:09.280"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${SAVE_DESC_BUTTON}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 15:27:09.281" endtime="20220704 15:27:09.320"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${SAVE_DESC_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 15:27:09.321" level="INFO">Clicking element 'xpath://div[contains(@class, 'board-menu-content')]//input[@value="Save"]'.</msg>
<status status="PASS" starttime="20220704 15:27:09.321" endtime="20220704 15:27:09.409"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${GO_BACK_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 15:27:09.410" level="INFO">Clicking element 'xpath://a[@title="Go back."]'.</msg>
<status status="PASS" starttime="20220704 15:27:09.410" endtime="20220704 15:27:09.497"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${CLOSE_SHOW_MENU}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 15:27:09.498" level="INFO">Clicking element 'xpath://a[@title="Close the board menu."]'.</msg>
<status status="PASS" starttime="20220704 15:27:09.497" endtime="20220704 15:27:09.586"/>
</kw>
<status status="PASS" starttime="20220704 15:27:08.588" endtime="20220704 15:27:09.587"/>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Close Browser</arg>
<arg>AND</arg>
<arg>Wait Until Keyword Succeeds</arg>
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20220704 15:27:09.587" endtime="20220704 15:27:09.687"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${BOARD.json()}[id]</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 15:27:09.690" level="INFO">${url} = boards/62c306c5428b6356aefdf89f</msg>
<status status="PASS" starttime="20220704 15:27:09.690" endtime="20220704 15:27:09.690"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 15:27:09.997" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:27:09.690" endtime="20220704 15:27:09.997"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:27:09.997" endtime="20220704 15:27:09.997"/>
</return>
<msg timestamp="20220704 15:27:09.998" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:27:09.689" endtime="20220704 15:27:09.998"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:27:09.998" endtime="20220704 15:27:09.998"/>
</return>
<status status="PASS" starttime="20220704 15:27:09.688" endtime="20220704 15:27:09.998"/>
</kw>
<status status="PASS" starttime="20220704 15:27:09.687" endtime="20220704 15:27:09.998"/>
</kw>
<status status="PASS" starttime="20220704 15:27:09.587" endtime="20220704 15:27:09.998"/>
</kw>
<doc>Verify that a board's description can be updated through GUI</doc>
<tag>board.update.description</tag>
<tag>gui</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220704 15:27:01.280" endtime="20220704 15:27:09.998"/>
</test>
<test id="s1-s8-s1-s1-t4" name="Update a board's name" line="56">
<kw name="Create A Board" library="Board">
<var>${BOARD}</var>
<arg>NewBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 15:27:10.000" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 15:27:10.000" endtime="20220704 15:27:10.000"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 15:27:10.000" endtime="20220704 15:27:10.000"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 15:27:10.002" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220704 15:27:10.001" endtime="20220704 15:27:10.002"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 15:27:10.172" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:27:10.002" endtime="20220704 15:27:10.172"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:27:10.172" endtime="20220704 15:27:10.172"/>
</return>
<msg timestamp="20220704 15:27:10.172" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:27:09.999" endtime="20220704 15:27:10.172"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:27:10.172" endtime="20220704 15:27:10.172"/>
</return>
<msg timestamp="20220704 15:27:10.172" level="INFO">${BOARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:27:09.999" endtime="20220704 15:27:10.172"/>
</kw>
<kw name="Open Browser From Environment" library="CommonGUI">
<arg>${LOGIN_URL}</arg>
<doc>This keywords takes REMOTE and BROWSER variables
from the environment automatically and only needs a url</doc>
<if>
<branch type="IF" condition="${is_remote}">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${url}</arg>
<arg>${BROWSER}</arg>
<arg>remote_url=http://selenium-hub:4444</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20220704 15:27:10.173" level="INFO">Opening browser 'chrome' to base url 'https://trello.com/login' through remote server at 'http://selenium-hub:4444'.</msg>
<status status="PASS" starttime="20220704 15:27:10.173" endtime="20220704 15:27:11.173"/>
</kw>
<status status="PASS" starttime="20220704 15:27:10.173" endtime="20220704 15:27:11.173"/>
</branch>
<branch type="ELSE">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${url}</arg>
<arg>${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<status status="NOT RUN" starttime="20220704 15:27:11.173" endtime="20220704 15:27:11.174"/>
</kw>
<status status="NOT RUN" starttime="20220704 15:27:11.173" endtime="20220704 15:27:11.174"/>
</branch>
<status status="PASS" starttime="20220704 15:27:10.173" endtime="20220704 15:27:11.174"/>
</if>
<status status="PASS" starttime="20220704 15:27:10.172" endtime="20220704 15:27:11.174"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20220704 15:27:11.174" endtime="20220704 15:27:11.292"/>
</kw>
<kw name="Login To Trello" library="LoginPage">
<arg>${DEFAULT_EMAIL}</arg>
<arg>${DEFAULT_PASSWORD}</arg>
<doc>High-level keyword for logging in to Trello</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220704 15:27:11.303" level="INFO">${url} = https://trello.com/login</msg>
<status status="PASS" starttime="20220704 15:27:11.292" endtime="20220704 15:27:11.303"/>
</kw>
<if>
<branch type="IF" condition="'${url}' != '${LOGIN_URL}'">
<kw name="Go To" library="SeleniumLibrary">
<arg>${LOGIN_URL}</arg>
<doc>Navigates the current browser window to the provided ``url``.</doc>
<status status="NOT RUN" starttime="20220704 15:27:11.304" endtime="20220704 15:27:11.304"/>
</kw>
<status status="NOT RUN" starttime="20220704 15:27:11.303" endtime="20220704 15:27:11.304"/>
</branch>
<status status="PASS" starttime="20220704 15:27:11.303" endtime="20220704 15:27:11.304"/>
</if>
<kw name="Enter Username" library="LoginPage">
<arg>${username}</arg>
<doc>Take a username as argument and
enters it in the user_input</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${USER_INPUT}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 15:27:11.304" endtime="20220704 15:27:11.361"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${USER_INPUT}</arg>
<arg>${username}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220704 15:27:11.361" level="INFO">Typing text 'bootcamp04@mailinator.com' into text field 'css:input#user'.</msg>
<status status="PASS" starttime="20220704 15:27:11.361" endtime="20220704 15:27:11.487"/>
</kw>
<status status="PASS" starttime="20220704 15:27:11.304" endtime="20220704 15:27:11.487"/>
</kw>
<kw name="Wait Until Element Is Not Visible" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<doc>Waits until the element ``locator`` is not visible.</doc>
<status status="PASS" starttime="20220704 15:27:11.487" endtime="20220704 15:27:12.202"/>
</kw>
<kw name="Click Login Button" library="LoginPage">
<doc>Clicks Trello's login button if in Trello's
login page, else it clicks Atlassian's</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220704 15:27:12.209" level="INFO">${url} = https://trello.com/login</msg>
<status status="PASS" starttime="20220704 15:27:12.203" endtime="20220704 15:27:12.209"/>
</kw>
<if>
<branch type="IF" condition="'${url}' == '${LOGIN_URL}'">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220704 15:27:12.209" endtime="20220704 15:27:12.270"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220704 15:27:12.270" level="INFO">Clicking button 'css:input#login'.</msg>
<status status="PASS" starttime="20220704 15:27:12.270" endtime="20220704 15:27:12.994"/>
</kw>
<status status="PASS" starttime="20220704 15:27:12.209" endtime="20220704 15:27:12.994"/>
</branch>
<branch type="ELSE">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="NOT RUN" starttime="20220704 15:27:12.994" endtime="20220704 15:27:12.994"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<status status="NOT RUN" starttime="20220704 15:27:12.995" endtime="20220704 15:27:12.995"/>
</kw>
<status status="NOT RUN" starttime="20220704 15:27:12.994" endtime="20220704 15:27:12.995"/>
</branch>
<status status="PASS" starttime="20220704 15:27:12.209" endtime="20220704 15:27:12.995"/>
</if>
<status status="PASS" starttime="20220704 15:27:12.202" endtime="20220704 15:27:12.995"/>
</kw>
<kw name="Wait Until Location Is Atlassian's Login" library="LoginPage">
<doc>Waits for the page redirection when logging in.</doc>
<kw name="Wait Until Location Contains" library="SeleniumLibrary">
<arg>atlassian.com</arg>
<doc>Waits until the current URL contains ``expected``.</doc>
<status status="PASS" starttime="20220704 15:27:12.995" endtime="20220704 15:27:13.020"/>
</kw>
<status status="PASS" starttime="20220704 15:27:12.995" endtime="20220704 15:27:13.020"/>
</kw>
<kw name="Enter Password" library="LoginPage">
<arg>${password}</arg>
<doc>Take a password as argument and
enters it in the password_input</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<arg>timeout=10</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 15:27:13.021" endtime="20220704 15:27:13.069"/>
</kw>
<kw name="Input Password" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<arg>${password}</arg>
<doc>Types the given password into the text field identified by ``locator``.</doc>
<msg timestamp="20220704 15:27:13.070" level="INFO">Typing password into text field 'css:input#password'.</msg>
<msg timestamp="20220704 15:27:13.116" level="INFO">Temporally setting log level to: NONE</msg>
<msg timestamp="20220704 15:27:13.186" level="INFO">Log level changed from NONE to INFO.</msg>
<status status="PASS" starttime="20220704 15:27:13.070" endtime="20220704 15:27:13.186"/>
</kw>
<status status="PASS" starttime="20220704 15:27:13.021" endtime="20220704 15:27:13.186"/>
</kw>
<kw name="Click Login Button" library="LoginPage">
<doc>Clicks Trello's login button if in Trello's
login page, else it clicks Atlassian's</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220704 15:27:13.197" level="INFO">${url} = https://id.atlassian.com/login?application=trello&amp;continue=https%3A%2F%2Ftrello.com%2Fauth%2Fatlassian%2Fcallback%3FreturnUrl%3D%252F%26display%3D%26aaOnboarding%3D%26updateEmail%3D%26traceId%3D62c306...</msg>
<status status="PASS" starttime="20220704 15:27:13.186" endtime="20220704 15:27:13.197"/>
</kw>
<if>
<branch type="IF" condition="'${url}' == '${LOGIN_URL}'">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="NOT RUN" starttime="20220704 15:27:13.198" endtime="20220704 15:27:13.198"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<status status="NOT RUN" starttime="20220704 15:27:13.198" endtime="20220704 15:27:13.198"/>
</kw>
<status status="NOT RUN" starttime="20220704 15:27:13.198" endtime="20220704 15:27:13.198"/>
</branch>
<branch type="ELSE">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220704 15:27:13.198" endtime="20220704 15:27:13.270"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220704 15:27:13.271" level="INFO">Clicking button 'css:button#login-submit'.</msg>
<status status="PASS" starttime="20220704 15:27:13.270" endtime="20220704 15:27:13.357"/>
</kw>
<status status="PASS" starttime="20220704 15:27:13.198" endtime="20220704 15:27:13.357"/>
</branch>
<status status="PASS" starttime="20220704 15:27:13.197" endtime="20220704 15:27:13.357"/>
</if>
<status status="PASS" starttime="20220704 15:27:13.186" endtime="20220704 15:27:13.357"/>
</kw>
<status status="PASS" starttime="20220704 15:27:11.292" endtime="20220704 15:27:13.357"/>
</kw>
<kw name="Go To Board" library="BoardsPage">
<arg>NewBoard</arg>
<doc>Receives the board name and goes to that board's page.</doc>
<kw name="Format String" library="String">
<var>${locator}</var>
<arg>${BOARD_BUTTON}</arg>
<arg>${board_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 15:27:13.358" level="INFO">${locator} = //div[@title="NewBoard"]</msg>
<status status="PASS" starttime="20220704 15:27:13.358" endtime="20220704 15:27:13.358"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 15:27:13.358" endtime="20220704 15:27:16.285"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 15:27:16.286" level="INFO">Clicking element '//div[@title="NewBoard"]'.</msg>
<status status="PASS" starttime="20220704 15:27:16.285" endtime="20220704 15:27:16.631"/>
</kw>
<status status="PASS" starttime="20220704 15:27:13.357" endtime="20220704 15:27:16.631"/>
</kw>
<kw name="Verify Name of Board" library="UpperHorizontalMenu">
<arg>NewBoard</arg>
<doc>Verifies the name of a board</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${NAME_OF_BOARD}</arg>
<arg>10</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 15:27:16.632" endtime="20220704 15:27:17.081"/>
</kw>
<kw name="Element Text Should Be" library="SeleniumLibrary">
<arg>${NAME_OF_BOARD}</arg>
<arg>${name}</arg>
<doc>Verifies that element ``locator`` contains exact the text ``expected``.</doc>
<msg timestamp="20220704 15:27:17.081" level="INFO">Verifying element 'xpath://h1[contains(@class, 'js-board-editing-target')]' contains exact text 'NewBoard'.</msg>
<status status="PASS" starttime="20220704 15:27:17.081" endtime="20220704 15:27:17.145"/>
</kw>
<status status="PASS" starttime="20220704 15:27:16.631" endtime="20220704 15:27:17.145"/>
</kw>
<kw name="Update Name of Board" library="UpperHorizontalMenu">
<arg>UpdatedName</arg>
<doc>Updates the name of a board
it takes the Length of the boards's name in order to press the delete key
as many times as the name's length</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${NAME_OF_BOARD}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 15:27:17.146" endtime="20220704 15:27:17.170"/>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<var>${response}</var>
<arg>${NAME_OF_BOARD}</arg>
<doc>Returns the text value of the element identified by ``locator``.</doc>
<msg timestamp="20220704 15:27:17.200" level="INFO">${response} = NewBoard</msg>
<status status="PASS" starttime="20220704 15:27:17.171" endtime="20220704 15:27:17.200"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${names_lenght}</var>
<arg>${response}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20220704 15:27:17.200" level="INFO">Length is 8</msg>
<msg timestamp="20220704 15:27:17.200" level="INFO">${names_lenght} = 8</msg>
<status status="PASS" starttime="20220704 15:27:17.200" endtime="20220704 15:27:17.200"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${NAME_OF_BOARD}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 15:27:17.201" level="INFO">Clicking element 'xpath://h1[contains(@class, 'js-board-editing-target')]'.</msg>
<status status="PASS" starttime="20220704 15:27:17.201" endtime="20220704 15:27:17.262"/>
</kw>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>${NAME_OF_BOARD_INPUT}</arg>
<arg>\ue011</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20220704 15:27:17.263" level="INFO">Sending key(s) ('\ue011',) to xpath://input[contains(@class, 'board-name-input')] element.</msg>
<msg timestamp="20220704 15:27:17.602" level="INFO">Sending key </msg>
<status status="PASS" starttime="20220704 15:27:17.262" endtime="20220704 15:27:17.632"/>
</kw>
<kw name="Repeat Keyword" library="BuiltIn">
<arg>${names_lenght}</arg>
<arg>Press Keys</arg>
<arg>${NAME_OF_BOARD_INPUT}</arg>
<arg>\ue017</arg>
<doc>Executes the specified keyword multiple times.</doc>
<msg timestamp="20220704 15:27:17.632" level="INFO">Repeating keyword, round 1/8.</msg>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>${NAME_OF_BOARD_INPUT}</arg>
<arg>\ue017</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20220704 15:27:17.633" level="INFO">Sending key(s) ('\ue017',) to xpath://input[contains(@class, 'board-name-input')] element.</msg>
<msg timestamp="20220704 15:27:17.931" level="INFO">Sending key </msg>
<status status="PASS" starttime="20220704 15:27:17.632" endtime="20220704 15:27:17.944"/>
</kw>
<msg timestamp="20220704 15:27:17.944" level="INFO">Repeating keyword, round 2/8.</msg>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>${NAME_OF_BOARD_INPUT}</arg>
<arg>\ue017</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20220704 15:27:17.944" level="INFO">Sending key(s) ('\ue017',) to xpath://input[contains(@class, 'board-name-input')] element.</msg>
<msg timestamp="20220704 15:27:18.226" level="INFO">Sending key </msg>
<status status="PASS" starttime="20220704 15:27:17.944" endtime="20220704 15:27:18.250"/>
</kw>
<msg timestamp="20220704 15:27:18.250" level="INFO">Repeating keyword, round 3/8.</msg>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>${NAME_OF_BOARD_INPUT}</arg>
<arg>\ue017</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20220704 15:27:18.251" level="INFO">Sending key(s) ('\ue017',) to xpath://input[contains(@class, 'board-name-input')] element.</msg>
<msg timestamp="20220704 15:27:18.537" level="INFO">Sending key </msg>
<status status="PASS" starttime="20220704 15:27:18.250" endtime="20220704 15:27:18.548"/>
</kw>
<msg timestamp="20220704 15:27:18.548" level="INFO">Repeating keyword, round 4/8.</msg>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>${NAME_OF_BOARD_INPUT}</arg>
<arg>\ue017</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20220704 15:27:18.549" level="INFO">Sending key(s) ('\ue017',) to xpath://input[contains(@class, 'board-name-input')] element.</msg>
<msg timestamp="20220704 15:27:18.830" level="INFO">Sending key </msg>
<status status="PASS" starttime="20220704 15:27:18.549" endtime="20220704 15:27:18.844"/>
</kw>
<msg timestamp="20220704 15:27:18.844" level="INFO">Repeating keyword, round 5/8.</msg>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>${NAME_OF_BOARD_INPUT}</arg>
<arg>\ue017</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20220704 15:27:18.845" level="INFO">Sending key(s) ('\ue017',) to xpath://input[contains(@class, 'board-name-input')] element.</msg>
<msg timestamp="20220704 15:27:19.122" level="INFO">Sending key </msg>
<status status="PASS" starttime="20220704 15:27:18.844" endtime="20220704 15:27:19.133"/>
</kw>
<msg timestamp="20220704 15:27:19.133" level="INFO">Repeating keyword, round 6/8.</msg>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>${NAME_OF_BOARD_INPUT}</arg>
<arg>\ue017</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20220704 15:27:19.134" level="INFO">Sending key(s) ('\ue017',) to xpath://input[contains(@class, 'board-name-input')] element.</msg>
<msg timestamp="20220704 15:27:19.421" level="INFO">Sending key </msg>
<status status="PASS" starttime="20220704 15:27:19.133" endtime="20220704 15:27:19.432"/>
</kw>
<msg timestamp="20220704 15:27:19.432" level="INFO">Repeating keyword, round 7/8.</msg>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>${NAME_OF_BOARD_INPUT}</arg>
<arg>\ue017</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20220704 15:27:19.432" level="INFO">Sending key(s) ('\ue017',) to xpath://input[contains(@class, 'board-name-input')] element.</msg>
<msg timestamp="20220704 15:27:19.721" level="INFO">Sending key </msg>
<status status="PASS" starttime="20220704 15:27:19.432" endtime="20220704 15:27:19.731"/>
</kw>
<msg timestamp="20220704 15:27:19.731" level="INFO">Repeating keyword, round 8/8.</msg>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>${NAME_OF_BOARD_INPUT}</arg>
<arg>\ue017</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20220704 15:27:19.732" level="INFO">Sending key(s) ('\ue017',) to xpath://input[contains(@class, 'board-name-input')] element.</msg>
<msg timestamp="20220704 15:27:20.014" level="INFO">Sending key </msg>
<status status="PASS" starttime="20220704 15:27:19.732" endtime="20220704 15:27:20.027"/>
</kw>
<status status="PASS" starttime="20220704 15:27:17.632" endtime="20220704 15:27:20.028"/>
</kw>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>${NAME_OF_BOARD_INPUT}</arg>
<arg>${name}</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20220704 15:27:20.028" level="INFO">Sending key(s) ('UpdatedName',) to xpath://input[contains(@class, 'board-name-input')] element.</msg>
<msg timestamp="20220704 15:27:20.302" level="INFO">Sending keys UpdatedName</msg>
<status status="PASS" starttime="20220704 15:27:20.028" endtime="20220704 15:27:20.356"/>
</kw>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>${NAME_OF_BOARD_INPUT}</arg>
<arg>\ue007</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20220704 15:27:20.357" level="INFO">Sending key(s) ('\ue007',) to xpath://input[contains(@class, 'board-name-input')] element.</msg>
<msg timestamp="20220704 15:27:20.649" level="INFO">Sending key </msg>
<status status="PASS" starttime="20220704 15:27:20.356" endtime="20220704 15:27:20.746"/>
</kw>
<status status="PASS" starttime="20220704 15:27:17.145" endtime="20220704 15:27:20.746"/>
</kw>
<kw name="Verify Name of Board" library="UpperHorizontalMenu">
<arg>UpdatedName</arg>
<doc>Verifies the name of a board</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${NAME_OF_BOARD}</arg>
<arg>10</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 15:27:20.746" endtime="20220704 15:27:20.778"/>
</kw>
<kw name="Element Text Should Be" library="SeleniumLibrary">
<arg>${NAME_OF_BOARD}</arg>
<arg>${name}</arg>
<doc>Verifies that element ``locator`` contains exact the text ``expected``.</doc>
<msg timestamp="20220704 15:27:20.779" level="INFO">Verifying element 'xpath://h1[contains(@class, 'js-board-editing-target')]' contains exact text 'UpdatedName'.</msg>
<status status="PASS" starttime="20220704 15:27:20.779" endtime="20220704 15:27:20.805"/>
</kw>
<status status="PASS" starttime="20220704 15:27:20.746" endtime="20220704 15:27:20.805"/>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Close Browser</arg>
<arg>AND</arg>
<arg>Wait Until Keyword Succeeds</arg>
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20220704 15:27:20.805" endtime="20220704 15:27:20.896"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${BOARD.json()}[id]</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 15:27:20.899" level="INFO">${url} = boards/62c306cee20ffd3f2f11ce45</msg>
<status status="PASS" starttime="20220704 15:27:20.898" endtime="20220704 15:27:20.899"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 15:27:21.250" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:27:20.899" endtime="20220704 15:27:21.250"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:27:21.250" endtime="20220704 15:27:21.250"/>
</return>
<msg timestamp="20220704 15:27:21.250" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:27:20.898" endtime="20220704 15:27:21.250"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:27:21.250" endtime="20220704 15:27:21.250"/>
</return>
<status status="PASS" starttime="20220704 15:27:20.896" endtime="20220704 15:27:21.251"/>
</kw>
<status status="PASS" starttime="20220704 15:27:20.896" endtime="20220704 15:27:21.251"/>
</kw>
<status status="PASS" starttime="20220704 15:27:20.805" endtime="20220704 15:27:21.251"/>
</kw>
<doc>Verify that a board's name can be updated through GUI</doc>
<tag>board.update.name</tag>
<tag>gui</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220704 15:27:09.998" endtime="20220704 15:27:21.251"/>
</test>
<kw name="Boards Suite Teardown" type="TEARDOWN">
<doc>Deletes the Trello sesion that had been created</doc>
<kw name="Delete All Sessions" library="request_own_library">
<status status="PASS" starttime="20220704 15:27:21.252" endtime="20220704 15:27:21.253"/>
</kw>
<status status="PASS" starttime="20220704 15:27:21.252" endtime="20220704 15:27:21.253"/>
</kw>
<doc>Board Tests</doc>
<status status="PASS" starttime="20220704 15:26:41.560" endtime="20220704 15:27:21.253"/>
</suite>
<suite id="s1-s8-s1-s2" name="Trello Gui Cards" source="/trello/gui/trello_gui_cards.robot">
<kw name="Cards Suite Setup" type="SETUP">
<doc>Creates a new board through API, then Opens a Browser
Login to Trello, and Go to the created board's page.</doc>
<kw name="Create Trello Session" library="TrelloAPI">
<doc>Creates a Trello Session</doc>
<kw name="Create Session" library="request_own_library">
<arg>${API_BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<status status="PASS" starttime="20220704 15:27:21.268" endtime="20220704 15:27:21.268"/>
</kw>
<status status="PASS" starttime="20220704 15:27:21.268" endtime="20220704 15:27:21.268"/>
</kw>
<kw name="Create A Board" library="Board">
<var>${BOARD}</var>
<arg>CardTestBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 15:27:21.269" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 15:27:21.269" endtime="20220704 15:27:21.269"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 15:27:21.269" endtime="20220704 15:27:21.270"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 15:27:21.271" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220704 15:27:21.270" endtime="20220704 15:27:21.271"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 15:27:21.473" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:27:21.271" endtime="20220704 15:27:21.473"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:27:21.473" endtime="20220704 15:27:21.473"/>
</return>
<msg timestamp="20220704 15:27:21.473" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:27:21.269" endtime="20220704 15:27:21.473"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:27:21.473" endtime="20220704 15:27:21.473"/>
</return>
<msg timestamp="20220704 15:27:21.473" level="INFO">${BOARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:27:21.269" endtime="20220704 15:27:21.473"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_BOARD_ID}</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220704 15:27:21.475" level="INFO">${TEST_SUITE_BOARD_ID} = 62c306d935ffb46a478795ab</msg>
<status status="PASS" starttime="20220704 15:27:21.474" endtime="20220704 15:27:21.475"/>
</kw>
<kw name="Open Browser From Environment" library="CommonGUI">
<arg>${LOGIN_URL}</arg>
<doc>This keywords takes REMOTE and BROWSER variables
from the environment automatically and only needs a url</doc>
<if>
<branch type="IF" condition="${is_remote}">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${url}</arg>
<arg>${BROWSER}</arg>
<arg>remote_url=http://selenium-hub:4444</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20220704 15:27:21.476" level="INFO">Opening browser 'chrome' to base url 'https://trello.com/login' through remote server at 'http://selenium-hub:4444'.</msg>
<status status="PASS" starttime="20220704 15:27:21.476" endtime="20220704 15:27:22.412"/>
</kw>
<status status="PASS" starttime="20220704 15:27:21.476" endtime="20220704 15:27:22.412"/>
</branch>
<branch type="ELSE">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${url}</arg>
<arg>${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<status status="NOT RUN" starttime="20220704 15:27:22.412" endtime="20220704 15:27:22.412"/>
</kw>
<status status="NOT RUN" starttime="20220704 15:27:22.412" endtime="20220704 15:27:22.412"/>
</branch>
<status status="PASS" starttime="20220704 15:27:21.475" endtime="20220704 15:27:22.412"/>
</if>
<status status="PASS" starttime="20220704 15:27:21.475" endtime="20220704 15:27:22.413"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20220704 15:27:22.413" endtime="20220704 15:27:22.530"/>
</kw>
<kw name="Login To Trello" library="LoginPage">
<arg>${DEFAULT_EMAIL}</arg>
<arg>${DEFAULT_PASSWORD}</arg>
<doc>High-level keyword for logging in to Trello</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220704 15:27:22.538" level="INFO">${url} = https://trello.com/login</msg>
<status status="PASS" starttime="20220704 15:27:22.530" endtime="20220704 15:27:22.538"/>
</kw>
<if>
<branch type="IF" condition="'${url}' != '${LOGIN_URL}'">
<kw name="Go To" library="SeleniumLibrary">
<arg>${LOGIN_URL}</arg>
<doc>Navigates the current browser window to the provided ``url``.</doc>
<status status="NOT RUN" starttime="20220704 15:27:22.538" endtime="20220704 15:27:22.538"/>
</kw>
<status status="NOT RUN" starttime="20220704 15:27:22.538" endtime="20220704 15:27:22.538"/>
</branch>
<status status="PASS" starttime="20220704 15:27:22.538" endtime="20220704 15:27:22.538"/>
</if>
<kw name="Enter Username" library="LoginPage">
<arg>${username}</arg>
<doc>Take a username as argument and
enters it in the user_input</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${USER_INPUT}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 15:27:22.539" endtime="20220704 15:27:22.569"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${USER_INPUT}</arg>
<arg>${username}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220704 15:27:22.570" level="INFO">Typing text 'bootcamp04@mailinator.com' into text field 'css:input#user'.</msg>
<status status="PASS" starttime="20220704 15:27:22.570" endtime="20220704 15:27:22.681"/>
</kw>
<status status="PASS" starttime="20220704 15:27:22.538" endtime="20220704 15:27:22.681"/>
</kw>
<kw name="Wait Until Element Is Not Visible" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<doc>Waits until the element ``locator`` is not visible.</doc>
<status status="PASS" starttime="20220704 15:27:22.681" endtime="20220704 15:27:23.393"/>
</kw>
<kw name="Click Login Button" library="LoginPage">
<doc>Clicks Trello's login button if in Trello's
login page, else it clicks Atlassian's</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220704 15:27:23.406" level="INFO">${url} = https://trello.com/login</msg>
<status status="PASS" starttime="20220704 15:27:23.394" endtime="20220704 15:27:23.406"/>
</kw>
<if>
<branch type="IF" condition="'${url}' == '${LOGIN_URL}'">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220704 15:27:23.406" endtime="20220704 15:27:23.449"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220704 15:27:23.450" level="INFO">Clicking button 'css:input#login'.</msg>
<status status="PASS" starttime="20220704 15:27:23.450" endtime="20220704 15:27:24.194"/>
</kw>
<status status="PASS" starttime="20220704 15:27:23.406" endtime="20220704 15:27:24.194"/>
</branch>
<branch type="ELSE">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="NOT RUN" starttime="20220704 15:27:24.194" endtime="20220704 15:27:24.194"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<status status="NOT RUN" starttime="20220704 15:27:24.194" endtime="20220704 15:27:24.194"/>
</kw>
<status status="NOT RUN" starttime="20220704 15:27:24.194" endtime="20220704 15:27:24.194"/>
</branch>
<status status="PASS" starttime="20220704 15:27:23.406" endtime="20220704 15:27:24.194"/>
</if>
<status status="PASS" starttime="20220704 15:27:23.393" endtime="20220704 15:27:24.194"/>
</kw>
<kw name="Wait Until Location Is Atlassian's Login" library="LoginPage">
<doc>Waits for the page redirection when logging in.</doc>
<kw name="Wait Until Location Contains" library="SeleniumLibrary">
<arg>atlassian.com</arg>
<doc>Waits until the current URL contains ``expected``.</doc>
<status status="PASS" starttime="20220704 15:27:24.195" endtime="20220704 15:27:24.220"/>
</kw>
<status status="PASS" starttime="20220704 15:27:24.194" endtime="20220704 15:27:24.220"/>
</kw>
<kw name="Enter Password" library="LoginPage">
<arg>${password}</arg>
<doc>Take a password as argument and
enters it in the password_input</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<arg>timeout=10</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 15:27:24.221" endtime="20220704 15:27:24.263"/>
</kw>
<kw name="Input Password" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<arg>${password}</arg>
<doc>Types the given password into the text field identified by ``locator``.</doc>
<msg timestamp="20220704 15:27:24.263" level="INFO">Typing password into text field 'css:input#password'.</msg>
<msg timestamp="20220704 15:27:24.313" level="INFO">Temporally setting log level to: NONE</msg>
<msg timestamp="20220704 15:27:24.397" level="INFO">Log level changed from NONE to INFO.</msg>
<status status="PASS" starttime="20220704 15:27:24.263" endtime="20220704 15:27:24.397"/>
</kw>
<status status="PASS" starttime="20220704 15:27:24.220" endtime="20220704 15:27:24.397"/>
</kw>
<kw name="Click Login Button" library="LoginPage">
<doc>Clicks Trello's login button if in Trello's
login page, else it clicks Atlassian's</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220704 15:27:24.406" level="INFO">${url} = https://id.atlassian.com/login?application=trello&amp;continue=https%3A%2F%2Ftrello.com%2Fauth%2Fatlassian%2Fcallback%3FreturnUrl%3D%252F%26display%3D%26aaOnboarding%3D%26updateEmail%3D%26traceId%3D62c306...</msg>
<status status="PASS" starttime="20220704 15:27:24.398" endtime="20220704 15:27:24.406"/>
</kw>
<if>
<branch type="IF" condition="'${url}' == '${LOGIN_URL}'">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="NOT RUN" starttime="20220704 15:27:24.407" endtime="20220704 15:27:24.407"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<status status="NOT RUN" starttime="20220704 15:27:24.407" endtime="20220704 15:27:24.407"/>
</kw>
<status status="NOT RUN" starttime="20220704 15:27:24.407" endtime="20220704 15:27:24.407"/>
</branch>
<branch type="ELSE">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220704 15:27:24.407" endtime="20220704 15:27:24.461"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220704 15:27:24.462" level="INFO">Clicking button 'css:button#login-submit'.</msg>
<status status="PASS" starttime="20220704 15:27:24.461" endtime="20220704 15:27:24.556"/>
</kw>
<status status="PASS" starttime="20220704 15:27:24.407" endtime="20220704 15:27:24.556"/>
</branch>
<status status="PASS" starttime="20220704 15:27:24.406" endtime="20220704 15:27:24.556"/>
</if>
<status status="PASS" starttime="20220704 15:27:24.397" endtime="20220704 15:27:24.556"/>
</kw>
<status status="PASS" starttime="20220704 15:27:22.530" endtime="20220704 15:27:24.556"/>
</kw>
<kw name="Go To Board" library="BoardsPage">
<arg>CardTestBoard</arg>
<doc>Receives the board name and goes to that board's page.</doc>
<kw name="Format String" library="String">
<var>${locator}</var>
<arg>${BOARD_BUTTON}</arg>
<arg>${board_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 15:27:24.557" level="INFO">${locator} = //div[@title="CardTestBoard"]</msg>
<status status="PASS" starttime="20220704 15:27:24.557" endtime="20220704 15:27:24.557"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 15:27:24.557" endtime="20220704 15:27:27.502"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 15:27:27.503" level="INFO">Clicking element '//div[@title="CardTestBoard"]'.</msg>
<status status="PASS" starttime="20220704 15:27:27.502" endtime="20220704 15:27:27.823"/>
</kw>
<status status="PASS" starttime="20220704 15:27:24.556" endtime="20220704 15:27:27.823"/>
</kw>
<status status="PASS" starttime="20220704 15:27:21.268" endtime="20220704 15:27:27.823"/>
</kw>
<test id="s1-s8-s1-s2-t1" name="Verify A Card Can Be Created" line="12">
<kw name="Set Test Variable" library="BuiltIn">
<arg>\${list}</arg>
<arg>To Do</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220704 15:27:27.825" level="INFO">${list} = To Do</msg>
<status status="PASS" starttime="20220704 15:27:27.825" endtime="20220704 15:27:27.825"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>\${card}</arg>
<arg>Test Card</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220704 15:27:27.825" level="INFO">${card} = Test Card</msg>
<status status="PASS" starttime="20220704 15:27:27.825" endtime="20220704 15:27:27.825"/>
</kw>
<kw name="Create Card In List" library="ListComponent">
<arg>${list}</arg>
<arg>${card}</arg>
<doc>Create a new card in the given list
Required args: list_name, card_name</doc>
<kw name="Format String" library="String">
<var>${add_card_locator}</var>
<arg>${LIST_ADD_CARD}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 15:27:27.826" level="INFO">${add_card_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Add a card')]</msg>
<status status="PASS" starttime="20220704 15:27:27.826" endtime="20220704 15:27:27.826"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${add_card_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 15:27:27.826" endtime="20220704 15:27:28.344"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${add_card_locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 15:27:28.344" level="INFO">Clicking element '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Add a card')]'.</msg>
<status status="PASS" starttime="20220704 15:27:28.344" endtime="20220704 15:27:28.427"/>
</kw>
<kw name="Format String" library="String">
<var>${textarea_locator}</var>
<arg>${CARD_TITLE_INPUT}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 15:27:28.428" level="INFO">${textarea_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//textarea[contains(@class, 'list-card-composer-textarea')]</msg>
<status status="PASS" starttime="20220704 15:27:28.427" endtime="20220704 15:27:28.428"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 15:27:28.428" endtime="20220704 15:27:28.469"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 15:27:28.469" level="INFO">Clicking element '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//textarea[contains(@class, 'list-card-composer-textarea')]'.</msg>
<status status="PASS" starttime="20220704 15:27:28.469" endtime="20220704 15:27:28.518"/>
</kw>
<kw name="Clear Element Text" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<doc>Clears the value of the text-input-element identified by ``locator``.</doc>
<status status="PASS" starttime="20220704 15:27:28.518" endtime="20220704 15:27:28.549"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<arg>${card_name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220704 15:27:28.549" level="INFO">Typing text 'Test Card' into text field '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//textarea[contains(@class, 'list-card-composer-textarea')]'.</msg>
<status status="PASS" starttime="20220704 15:27:28.549" endtime="20220704 15:27:28.633"/>
</kw>
<kw name="Format String" library="String">
<var>${confirm_locator}</var>
<arg>${CONFIRM_ADD_CARD}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 15:27:28.634" level="INFO">${confirm_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//input[@value='Add card']</msg>
<status status="PASS" starttime="20220704 15:27:28.634" endtime="20220704 15:27:28.634"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${confirm_locator}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220704 15:27:28.634" level="INFO">Clicking button '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//input[@value='Add card']'.</msg>
<status status="PASS" starttime="20220704 15:27:28.634" endtime="20220704 15:27:28.746"/>
</kw>
<status status="PASS" starttime="20220704 15:27:27.825" endtime="20220704 15:27:28.746"/>
</kw>
<kw name="Verify Card Exists" library="ListComponent">
<arg>${list}</arg>
<arg>${card}</arg>
<doc>Verify that the card with card_name exists in the given list.</doc>
<kw name="Format String" library="String">
<var>${card_name_locator}</var>
<arg>${LIST_CARD_NAME}</arg>
<arg>list_name=${list_name}</arg>
<arg>card_name=${card_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 15:27:28.747" level="INFO">${card_name_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Test Card')]</msg>
<status status="PASS" starttime="20220704 15:27:28.747" endtime="20220704 15:27:28.747"/>
</kw>
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<arg>${card_name_locator}</arg>
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<msg timestamp="20220704 15:27:28.779" level="INFO">Element '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Test Card')]' is displayed.</msg>
<status status="PASS" starttime="20220704 15:27:28.747" endtime="20220704 15:27:28.779"/>
</kw>
<status status="PASS" starttime="20220704 15:27:28.746" endtime="20220704 15:27:28.779"/>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Go To Card Modal</arg>
<arg>list_name=${list}</arg>
<arg>card_name=${card}</arg>
<arg>AND</arg>
<arg>Delete Current Card</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Go To Card Modal" library="ListComponent">
<arg>list_name=${list}</arg>
<arg>card_name=${card}</arg>
<doc>It opens the modal for card_name in list_name</doc>
<kw name="Format String" library="String">
<var>${card_name_locator}</var>
<arg>${LIST_CARD_NAME}</arg>
<arg>list_name=${list_name}</arg>
<arg>card_name=${card_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 15:27:28.780" level="INFO">${card_name_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Test Card')]</msg>
<status status="PASS" starttime="20220704 15:27:28.780" endtime="20220704 15:27:28.780"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${card_name_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 15:27:28.781" endtime="20220704 15:27:28.821"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${card_name_locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 15:27:28.822" level="INFO">Clicking element '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Test Card')]'.</msg>
<status status="PASS" starttime="20220704 15:27:28.821" endtime="20220704 15:27:28.933"/>
</kw>
<status status="PASS" starttime="20220704 15:27:28.779" endtime="20220704 15:27:28.933"/>
</kw>
<kw name="Delete Current Card" library="CardModal">
<doc>The Keyword will first check if the card is archived,
if it's not, it will archive it to be able to delete it.</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${not_archived}</var>
<arg>Element Should Not Be Visible</arg>
<arg>${IS_ARCHIVED_MSG}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Element Should Not Be Visible" library="SeleniumLibrary">
<arg>${IS_ARCHIVED_MSG}</arg>
<doc>Verifies that the element identified by ``locator`` is NOT visible.</doc>
<msg timestamp="20220704 15:27:29.013" level="INFO">Element '//p[text()='This card is archived.']' did not exist.</msg>
<status status="PASS" starttime="20220704 15:27:28.934" endtime="20220704 15:27:29.013"/>
</kw>
<msg timestamp="20220704 15:27:29.013" level="INFO">${not_archived} = True</msg>
<status status="PASS" starttime="20220704 15:27:28.934" endtime="20220704 15:27:29.013"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${not_archived}</arg>
<arg>Archive Current Card</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Archive Current Card" library="CardModal">
<doc>Archives the current card from inside the modal.</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ARCHIVE_BUTTON}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 15:27:29.014" endtime="20220704 15:27:29.468"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${ARCHIVE_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 15:27:29.469" level="INFO">Clicking element '//span[@title='Archive']'.</msg>
<status status="PASS" starttime="20220704 15:27:29.469" endtime="20220704 15:27:29.554"/>
</kw>
<status status="PASS" starttime="20220704 15:27:29.014" endtime="20220704 15:27:29.554"/>
</kw>
<status status="PASS" starttime="20220704 15:27:29.014" endtime="20220704 15:27:29.554"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3</arg>
<arg>0.9</arg>
<arg>Click Element</arg>
<arg>${DELETE_BUTTON}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${DELETE_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 15:27:29.555" level="INFO">Clicking element '//a[@title='Delete']'.</msg>
<status status="PASS" starttime="20220704 15:27:29.555" endtime="20220704 15:27:29.624"/>
</kw>
<status status="PASS" starttime="20220704 15:27:29.554" endtime="20220704 15:27:29.624"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${DELETE_CONFIRM}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 15:27:29.625" level="INFO">Clicking element '//input[@value='Delete']'.</msg>
<status status="PASS" starttime="20220704 15:27:29.625" endtime="20220704 15:27:29.788"/>
</kw>
<status status="PASS" starttime="20220704 15:27:28.933" endtime="20220704 15:27:29.788"/>
</kw>
<status status="PASS" starttime="20220704 15:27:28.779" endtime="20220704 15:27:29.788"/>
</kw>
<doc>Verify that it is possible to create a new
card through Trello's GUI.</doc>
<tag>card.create</tag>
<tag>gui</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220704 15:27:27.823" endtime="20220704 15:27:29.788"/>
</test>
<test id="s1-s8-s1-s2-t2" name="Modify A Card's Name From The Board Page" line="24">
<kw name="Set Test Variable" library="BuiltIn">
<arg>\${list}</arg>
<arg>To Do</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220704 15:27:29.790" level="INFO">${list} = To Do</msg>
<status status="PASS" starttime="20220704 15:27:29.790" endtime="20220704 15:27:29.790"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>\${card}</arg>
<arg>Test Card</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220704 15:27:29.790" level="INFO">${card} = Test Card</msg>
<status status="PASS" starttime="20220704 15:27:29.790" endtime="20220704 15:27:29.790"/>
</kw>
<kw name="Create Card In List" library="ListComponent">
<arg>${list}</arg>
<arg>${card}</arg>
<doc>Create a new card in the given list
Required args: list_name, card_name</doc>
<kw name="Format String" library="String">
<var>${add_card_locator}</var>
<arg>${LIST_ADD_CARD}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 15:27:29.791" level="INFO">${add_card_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Add a card')]</msg>
<status status="PASS" starttime="20220704 15:27:29.791" endtime="20220704 15:27:29.791"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${add_card_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 15:27:29.791" endtime="20220704 15:27:29.832"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${add_card_locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 15:27:29.833" level="INFO">Clicking element '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Add a card')]'.</msg>
<status status="PASS" starttime="20220704 15:27:29.833" endtime="20220704 15:27:29.907"/>
</kw>
<kw name="Format String" library="String">
<var>${textarea_locator}</var>
<arg>${CARD_TITLE_INPUT}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 15:27:29.908" level="INFO">${textarea_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//textarea[contains(@class, 'list-card-composer-textarea')]</msg>
<status status="PASS" starttime="20220704 15:27:29.907" endtime="20220704 15:27:29.908"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 15:27:29.908" endtime="20220704 15:27:29.939"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 15:27:29.939" level="INFO">Clicking element '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//textarea[contains(@class, 'list-card-composer-textarea')]'.</msg>
<status status="PASS" starttime="20220704 15:27:29.939" endtime="20220704 15:27:29.980"/>
</kw>
<kw name="Clear Element Text" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<doc>Clears the value of the text-input-element identified by ``locator``.</doc>
<status status="PASS" starttime="20220704 15:27:29.981" endtime="20220704 15:27:30.014"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<arg>${card_name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220704 15:27:30.014" level="INFO">Typing text 'Test Card' into text field '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//textarea[contains(@class, 'list-card-composer-textarea')]'.</msg>
<status status="PASS" starttime="20220704 15:27:30.014" endtime="20220704 15:27:30.108"/>
</kw>
<kw name="Format String" library="String">
<var>${confirm_locator}</var>
<arg>${CONFIRM_ADD_CARD}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 15:27:30.109" level="INFO">${confirm_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//input[@value='Add card']</msg>
<status status="PASS" starttime="20220704 15:27:30.108" endtime="20220704 15:27:30.109"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${confirm_locator}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220704 15:27:30.109" level="INFO">Clicking button '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//input[@value='Add card']'.</msg>
<status status="PASS" starttime="20220704 15:27:30.109" endtime="20220704 15:27:30.171"/>
</kw>
<status status="PASS" starttime="20220704 15:27:29.790" endtime="20220704 15:27:30.171"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>\${new_name}</arg>
<arg>New Name</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220704 15:27:30.172" level="INFO">${new_name} = New Name</msg>
<status status="PASS" starttime="20220704 15:27:30.171" endtime="20220704 15:27:30.172"/>
</kw>
<kw name="Edit Card Title Using Pencil Icon" library="ListComponent">
<arg>${list}</arg>
<arg>${card}</arg>
<arg>${new_name}</arg>
<doc>Modifies the title of the given card, using the pencil icon
required: list_name, card_name, new_title</doc>
<kw name="Format String" library="String">
<var>${card_element}</var>
<arg>${LIST_CARD_NAME}</arg>
<arg>list_name=${list_name}</arg>
<arg>card_name=${card_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 15:27:30.173" level="INFO">${card_element} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Test Card')]</msg>
<status status="PASS" starttime="20220704 15:27:30.173" endtime="20220704 15:27:30.173"/>
</kw>
<kw name="Format String" library="String">
<var>${pencil_locator}</var>
<arg>${PENCIL_ICON}</arg>
<arg>list_name=${list_name}</arg>
<arg>card_name=${card_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 15:27:30.175" level="INFO">${pencil_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Test Card')]//span[contains(@class, 'icon-edit')]</msg>
<status status="PASS" starttime="20220704 15:27:30.173" endtime="20220704 15:27:30.175"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${card_element}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 15:27:30.175" endtime="20220704 15:27:30.224"/>
</kw>
<kw name="Mouse Over" library="SeleniumLibrary">
<arg>${card_element}</arg>
<doc>Simulates hovering the mouse over the element ``locator``.</doc>
<msg timestamp="20220704 15:27:30.225" level="INFO">Simulating Mouse Over on element '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Test Card')]'.</msg>
<status status="PASS" starttime="20220704 15:27:30.225" endtime="20220704 15:27:30.544"/>
</kw>
<kw name="Wait Until Page Contains Element" library="SeleniumLibrary">
<arg>${pencil_locator}</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" starttime="20220704 15:27:30.544" endtime="20220704 15:27:30.558"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${pencil_locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 15:27:30.558" level="INFO">Clicking element '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Test Card')]//span[contains(@class, 'icon-edit')]'.</msg>
<status status="PASS" starttime="20220704 15:27:30.558" endtime="20220704 15:27:30.622"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${CARD_EDIT_TITLE}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 15:27:30.622" endtime="20220704 15:27:30.657"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${CARD_EDIT_TITLE}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 15:27:30.658" level="INFO">Clicking element 'css:textarea.list-card-edit-title'.</msg>
<status status="PASS" starttime="20220704 15:27:30.658" endtime="20220704 15:27:30.717"/>
</kw>
<kw name="Clear Element Text" library="SeleniumLibrary">
<arg>${CARD_EDIT_TITLE}</arg>
<doc>Clears the value of the text-input-element identified by ``locator``.</doc>
<status status="PASS" starttime="20220704 15:27:30.717" endtime="20220704 15:27:30.766"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${CARD_EDIT_TITLE}</arg>
<arg>${new_title}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220704 15:27:30.767" level="INFO">Typing text 'New Name' into text field 'css:textarea.list-card-edit-title'.</msg>
<status status="PASS" starttime="20220704 15:27:30.767" endtime="20220704 15:27:30.854"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${CARD_EDIT_TITLE_SAVE}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 15:27:30.855" level="INFO">Clicking element '//input[@value='Save']'.</msg>
<status status="PASS" starttime="20220704 15:27:30.854" endtime="20220704 15:27:30.920"/>
</kw>
<status status="PASS" starttime="20220704 15:27:30.172" endtime="20220704 15:27:30.921"/>
</kw>
<kw name="Verify Card Exists" library="ListComponent">
<arg>${list}</arg>
<arg>${new_name}</arg>
<doc>Verify that the card with card_name exists in the given list.</doc>
<kw name="Format String" library="String">
<var>${card_name_locator}</var>
<arg>${LIST_CARD_NAME}</arg>
<arg>list_name=${list_name}</arg>
<arg>card_name=${card_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 15:27:30.922" level="INFO">${card_name_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'New Name')]</msg>
<status status="PASS" starttime="20220704 15:27:30.921" endtime="20220704 15:27:30.922"/>
</kw>
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<arg>${card_name_locator}</arg>
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<msg timestamp="20220704 15:27:30.962" level="INFO">Element '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'New Name')]' is displayed.</msg>
<status status="PASS" starttime="20220704 15:27:30.922" endtime="20220704 15:27:30.962"/>
</kw>
<status status="PASS" starttime="20220704 15:27:30.921" endtime="20220704 15:27:30.962"/>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Go To Card Modal</arg>
<arg>list_name=${list}</arg>
<arg>card_name=${new_name}</arg>
<arg>AND</arg>
<arg>Delete Current Card</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Go To Card Modal" library="ListComponent">
<arg>list_name=${list}</arg>
<arg>card_name=${new_name}</arg>
<doc>It opens the modal for card_name in list_name</doc>
<kw name="Format String" library="String">
<var>${card_name_locator}</var>
<arg>${LIST_CARD_NAME}</arg>
<arg>list_name=${list_name}</arg>
<arg>card_name=${card_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 15:27:30.964" level="INFO">${card_name_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'New Name')]</msg>
<status status="PASS" starttime="20220704 15:27:30.963" endtime="20220704 15:27:30.964"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${card_name_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 15:27:30.964" endtime="20220704 15:27:30.996"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${card_name_locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 15:27:30.997" level="INFO">Clicking element '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'New Name')]'.</msg>
<status status="PASS" starttime="20220704 15:27:30.996" endtime="20220704 15:27:31.061"/>
</kw>
<status status="PASS" starttime="20220704 15:27:30.963" endtime="20220704 15:27:31.062"/>
</kw>
<kw name="Delete Current Card" library="CardModal">
<doc>The Keyword will first check if the card is archived,
if it's not, it will archive it to be able to delete it.</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${not_archived}</var>
<arg>Element Should Not Be Visible</arg>
<arg>${IS_ARCHIVED_MSG}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Element Should Not Be Visible" library="SeleniumLibrary">
<arg>${IS_ARCHIVED_MSG}</arg>
<doc>Verifies that the element identified by ``locator`` is NOT visible.</doc>
<msg timestamp="20220704 15:27:31.242" level="INFO">Element '//p[text()='This card is archived.']' did not exist.</msg>
<status status="PASS" starttime="20220704 15:27:31.062" endtime="20220704 15:27:31.242"/>
</kw>
<msg timestamp="20220704 15:27:31.242" level="INFO">${not_archived} = True</msg>
<status status="PASS" starttime="20220704 15:27:31.062" endtime="20220704 15:27:31.242"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${not_archived}</arg>
<arg>Archive Current Card</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Archive Current Card" library="CardModal">
<doc>Archives the current card from inside the modal.</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ARCHIVE_BUTTON}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 15:27:31.243" endtime="20220704 15:27:31.271"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${ARCHIVE_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 15:27:31.271" level="INFO">Clicking element '//span[@title='Archive']'.</msg>
<status status="PASS" starttime="20220704 15:27:31.271" endtime="20220704 15:27:31.351"/>
</kw>
<status status="PASS" starttime="20220704 15:27:31.243" endtime="20220704 15:27:31.351"/>
</kw>
<status status="PASS" starttime="20220704 15:27:31.242" endtime="20220704 15:27:31.351"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3</arg>
<arg>0.9</arg>
<arg>Click Element</arg>
<arg>${DELETE_BUTTON}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${DELETE_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 15:27:31.352" level="INFO">Clicking element '//a[@title='Delete']'.</msg>
<status status="PASS" starttime="20220704 15:27:31.352" endtime="20220704 15:27:31.435"/>
</kw>
<status status="PASS" starttime="20220704 15:27:31.351" endtime="20220704 15:27:31.435"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${DELETE_CONFIRM}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 15:27:31.435" level="INFO">Clicking element '//input[@value='Delete']'.</msg>
<status status="PASS" starttime="20220704 15:27:31.435" endtime="20220704 15:27:31.595"/>
</kw>
<status status="PASS" starttime="20220704 15:27:31.062" endtime="20220704 15:27:31.595"/>
</kw>
<status status="PASS" starttime="20220704 15:27:30.962" endtime="20220704 15:27:31.596"/>
</kw>
<doc>Verify that it is possible to edit a card's Name
using the pencil icon in the board page.</doc>
<tag>card.title_board</tag>
<tag>gui</tag>
<tag>regression</tag>
<status status="PASS" starttime="20220704 15:27:29.789" endtime="20220704 15:27:31.596"/>
</test>
<test id="s1-s8-s1-s2-t3" name="Leave A Comment On A Card" line="38">
<kw name="Set Test Variable" library="BuiltIn">
<arg>\${list}</arg>
<arg>To Do</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220704 15:27:31.597" level="INFO">${list} = To Do</msg>
<status status="PASS" starttime="20220704 15:27:31.597" endtime="20220704 15:27:31.598"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>\${card}</arg>
<arg>Test Card</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220704 15:27:31.598" level="INFO">${card} = Test Card</msg>
<status status="PASS" starttime="20220704 15:27:31.598" endtime="20220704 15:27:31.598"/>
</kw>
<kw name="Create Card In List" library="ListComponent">
<arg>${list}</arg>
<arg>${card}</arg>
<doc>Create a new card in the given list
Required args: list_name, card_name</doc>
<kw name="Format String" library="String">
<var>${add_card_locator}</var>
<arg>${LIST_ADD_CARD}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 15:27:31.599" level="INFO">${add_card_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Add a card')]</msg>
<status status="PASS" starttime="20220704 15:27:31.598" endtime="20220704 15:27:31.599"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${add_card_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 15:27:31.599" endtime="20220704 15:27:31.632"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${add_card_locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 15:27:31.632" level="INFO">Clicking element '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Add a card')]'.</msg>
<status status="PASS" starttime="20220704 15:27:31.632" endtime="20220704 15:27:31.678"/>
</kw>
<kw name="Format String" library="String">
<var>${textarea_locator}</var>
<arg>${CARD_TITLE_INPUT}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 15:27:31.679" level="INFO">${textarea_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//textarea[contains(@class, 'list-card-composer-textarea')]</msg>
<status status="PASS" starttime="20220704 15:27:31.678" endtime="20220704 15:27:31.679"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 15:27:31.679" endtime="20220704 15:27:31.704"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 15:27:31.704" level="INFO">Clicking element '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//textarea[contains(@class, 'list-card-composer-textarea')]'.</msg>
<status status="PASS" starttime="20220704 15:27:31.704" endtime="20220704 15:27:31.773"/>
</kw>
<kw name="Clear Element Text" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<doc>Clears the value of the text-input-element identified by ``locator``.</doc>
<status status="PASS" starttime="20220704 15:27:31.773" endtime="20220704 15:27:31.818"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<arg>${card_name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220704 15:27:31.818" level="INFO">Typing text 'Test Card' into text field '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//textarea[contains(@class, 'list-card-composer-textarea')]'.</msg>
<status status="PASS" starttime="20220704 15:27:31.818" endtime="20220704 15:27:31.956"/>
</kw>
<kw name="Format String" library="String">
<var>${confirm_locator}</var>
<arg>${CONFIRM_ADD_CARD}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 15:27:31.957" level="INFO">${confirm_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//input[@value='Add card']</msg>
<status status="PASS" starttime="20220704 15:27:31.957" endtime="20220704 15:27:31.957"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${confirm_locator}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220704 15:27:31.957" level="INFO">Clicking button '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//input[@value='Add card']'.</msg>
<status status="PASS" starttime="20220704 15:27:31.957" endtime="20220704 15:27:32.022"/>
</kw>
<status status="PASS" starttime="20220704 15:27:31.598" endtime="20220704 15:27:32.023"/>
</kw>
<kw name="Go To Card Modal" library="ListComponent">
<arg>${list}</arg>
<arg>${card}</arg>
<doc>It opens the modal for card_name in list_name</doc>
<kw name="Format String" library="String">
<var>${card_name_locator}</var>
<arg>${LIST_CARD_NAME}</arg>
<arg>list_name=${list_name}</arg>
<arg>card_name=${card_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 15:27:32.024" level="INFO">${card_name_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Test Card')]</msg>
<status status="PASS" starttime="20220704 15:27:32.023" endtime="20220704 15:27:32.024"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${card_name_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 15:27:32.024" endtime="20220704 15:27:32.066"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${card_name_locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 15:27:32.067" level="INFO">Clicking element '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Test Card')]'.</msg>
<status status="PASS" starttime="20220704 15:27:32.066" endtime="20220704 15:27:32.111"/>
</kw>
<status status="PASS" starttime="20220704 15:27:32.023" endtime="20220704 15:27:32.111"/>
</kw>
<kw name="Get Number Of Comments" library="CardModal">
<var>${comments_before}</var>
<doc>Return the number of comments present in the modal.</doc>
<kw name="Get Element Count" library="SeleniumLibrary">
<var>${n}</var>
<arg>${COMMENT_DIV}</arg>
<doc>Returns the number of elements matching ``locator``.</doc>
<msg timestamp="20220704 15:27:32.308" level="INFO">${n} = 0</msg>
<status status="PASS" starttime="20220704 15:27:32.112" endtime="20220704 15:27:32.308"/>
</kw>
<return>
<value>${n}</value>
<status status="PASS" starttime="20220704 15:27:32.308" endtime="20220704 15:27:32.309"/>
</return>
<msg timestamp="20220704 15:27:32.309" level="INFO">${comments_before} = 0</msg>
<status status="PASS" starttime="20220704 15:27:32.111" endtime="20220704 15:27:32.309"/>
</kw>
<kw name="Send A Comment" library="CardModal">
<arg>This is a test comment</arg>
<doc>Sends a comment under the "activity" section of the modal
required: comment</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${COMMENT_BOX_INPUT}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 15:27:32.309" endtime="20220704 15:27:32.354"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${COMMENT_BOX_INPUT}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 15:27:32.355" level="INFO">Clicking element '//div[@class='comment-box']/textarea'.</msg>
<status status="PASS" starttime="20220704 15:27:32.354" endtime="20220704 15:27:32.421"/>
</kw>
<kw name="Clear Element Text" library="SeleniumLibrary">
<arg>${COMMENT_BOX_INPUT}</arg>
<doc>Clears the value of the text-input-element identified by ``locator``.</doc>
<status status="PASS" starttime="20220704 15:27:32.421" endtime="20220704 15:27:32.486"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${COMMENT_BOX_INPUT}</arg>
<arg>${comment}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220704 15:27:32.487" level="INFO">Typing text 'This is a test comment' into text field '//div[@class='comment-box']/textarea'.</msg>
<status status="PASS" starttime="20220704 15:27:32.486" endtime="20220704 15:27:32.630"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${SAVE_COMMENT}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 15:27:32.630" level="INFO">Clicking element '//div[contains(@class, 'comment-controls')]//input[@value='Save']'.</msg>
<status status="PASS" starttime="20220704 15:27:32.630" endtime="20220704 15:27:32.757"/>
</kw>
<status status="PASS" starttime="20220704 15:27:32.309" endtime="20220704 15:27:32.757"/>
</kw>
<kw name="Get Number Of Comments" library="CardModal">
<var>${comments_after}</var>
<doc>Return the number of comments present in the modal.</doc>
<kw name="Get Element Count" library="SeleniumLibrary">
<var>${n}</var>
<arg>${COMMENT_DIV}</arg>
<doc>Returns the number of elements matching ``locator``.</doc>
<msg timestamp="20220704 15:27:32.769" level="INFO">${n} = 1</msg>
<status status="PASS" starttime="20220704 15:27:32.757" endtime="20220704 15:27:32.769"/>
</kw>
<return>
<value>${n}</value>
<status status="PASS" starttime="20220704 15:27:32.769" endtime="20220704 15:27:32.770"/>
</return>
<msg timestamp="20220704 15:27:32.770" level="INFO">${comments_after} = 1</msg>
<status status="PASS" starttime="20220704 15:27:32.757" endtime="20220704 15:27:32.770"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${comments_after} == ${comments_before}+${1}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220704 15:27:32.770" endtime="20220704 15:27:32.771"/>
</kw>
<kw name="Delete Current Card" library="CardModal" type="TEARDOWN">
<doc>The Keyword will first check if the card is archived,
if it's not, it will archive it to be able to delete it.</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${not_archived}</var>
<arg>Element Should Not Be Visible</arg>
<arg>${IS_ARCHIVED_MSG}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Element Should Not Be Visible" library="SeleniumLibrary">
<arg>${IS_ARCHIVED_MSG}</arg>
<doc>Verifies that the element identified by ``locator`` is NOT visible.</doc>
<msg timestamp="20220704 15:27:32.786" level="INFO">Element '//p[text()='This card is archived.']' did not exist.</msg>
<status status="PASS" starttime="20220704 15:27:32.772" endtime="20220704 15:27:32.786"/>
</kw>
<msg timestamp="20220704 15:27:32.786" level="INFO">${not_archived} = True</msg>
<status status="PASS" starttime="20220704 15:27:32.772" endtime="20220704 15:27:32.786"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${not_archived}</arg>
<arg>Archive Current Card</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Archive Current Card" library="CardModal">
<doc>Archives the current card from inside the modal.</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ARCHIVE_BUTTON}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 15:27:32.787" endtime="20220704 15:27:32.853"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${ARCHIVE_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 15:27:32.854" level="INFO">Clicking element '//span[@title='Archive']'.</msg>
<status status="PASS" starttime="20220704 15:27:32.853" endtime="20220704 15:27:32.956"/>
</kw>
<status status="PASS" starttime="20220704 15:27:32.786" endtime="20220704 15:27:32.956"/>
</kw>
<status status="PASS" starttime="20220704 15:27:32.786" endtime="20220704 15:27:32.957"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3</arg>
<arg>0.9</arg>
<arg>Click Element</arg>
<arg>${DELETE_BUTTON}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${DELETE_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 15:27:32.957" level="INFO">Clicking element '//a[@title='Delete']'.</msg>
<status status="PASS" starttime="20220704 15:27:32.957" endtime="20220704 15:27:33.015"/>
</kw>
<status status="PASS" starttime="20220704 15:27:32.957" endtime="20220704 15:27:33.015"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${DELETE_CONFIRM}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 15:27:33.016" level="INFO">Clicking element '//input[@value='Delete']'.</msg>
<status status="PASS" starttime="20220704 15:27:33.015" endtime="20220704 15:27:33.172"/>
</kw>
<status status="PASS" starttime="20220704 15:27:32.771" endtime="20220704 15:27:33.172"/>
</kw>
<doc>Verify that it is possible to write a comment
on a card, through the card modal.</doc>
<tag>card.comment</tag>
<tag>gui</tag>
<tag>regression</tag>
<status status="PASS" starttime="20220704 15:27:31.596" endtime="20220704 15:27:33.173"/>
</test>
<test id="s1-s8-s1-s2-t4" name="Verify A Card Can Be Deleted" line="52">
<kw name="Set Test Variable" library="BuiltIn">
<arg>\${list}</arg>
<arg>To Do</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220704 15:27:33.175" level="INFO">${list} = To Do</msg>
<status status="PASS" starttime="20220704 15:27:33.175" endtime="20220704 15:27:33.175"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>\${card}</arg>
<arg>Test Card</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220704 15:27:33.176" level="INFO">${card} = Test Card</msg>
<status status="PASS" starttime="20220704 15:27:33.175" endtime="20220704 15:27:33.176"/>
</kw>
<kw name="Get Number Of Cards In List" library="ListComponent">
<var>${cards_before}</var>
<arg>${list}</arg>
<doc>Return the number of cards present in a given list.
required: list_name</doc>
<kw name="Format String" library="String">
<var>${card_anchor_locator}</var>
<arg>${CARD_ANCHORS}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 15:27:33.177" level="INFO">${card_anchor_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(@class, 'list-card')]</msg>
<status status="PASS" starttime="20220704 15:27:33.176" endtime="20220704 15:27:33.177"/>
</kw>
<kw name="Get Element Count" library="SeleniumLibrary">
<var>${n}</var>
<arg>${card_anchor_locator}</arg>
<doc>Returns the number of elements matching ``locator``.</doc>
<msg timestamp="20220704 15:27:33.197" level="INFO">${n} = 0</msg>
<status status="PASS" starttime="20220704 15:27:33.177" endtime="20220704 15:27:33.197"/>
</kw>
<return>
<value>${n}</value>
<status status="PASS" starttime="20220704 15:27:33.198" endtime="20220704 15:27:33.198"/>
</return>
<msg timestamp="20220704 15:27:33.198" level="INFO">${cards_before} = 0</msg>
<status status="PASS" starttime="20220704 15:27:33.176" endtime="20220704 15:27:33.198"/>
</kw>
<kw name="Create Card In List" library="ListComponent">
<arg>${list}</arg>
<arg>${card}</arg>
<doc>Create a new card in the given list
Required args: list_name, card_name</doc>
<kw name="Format String" library="String">
<var>${add_card_locator}</var>
<arg>${LIST_ADD_CARD}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 15:27:33.199" level="INFO">${add_card_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Add a card')]</msg>
<status status="PASS" starttime="20220704 15:27:33.198" endtime="20220704 15:27:33.199"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${add_card_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 15:27:33.199" endtime="20220704 15:27:33.221"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${add_card_locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 15:27:33.222" level="INFO">Clicking element '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Add a card')]'.</msg>
<status status="PASS" starttime="20220704 15:27:33.221" endtime="20220704 15:27:33.278"/>
</kw>
<kw name="Format String" library="String">
<var>${textarea_locator}</var>
<arg>${CARD_TITLE_INPUT}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 15:27:33.279" level="INFO">${textarea_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//textarea[contains(@class, 'list-card-composer-textarea')]</msg>
<status status="PASS" starttime="20220704 15:27:33.279" endtime="20220704 15:27:33.279"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 15:27:33.279" endtime="20220704 15:27:33.309"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 15:27:33.310" level="INFO">Clicking element '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//textarea[contains(@class, 'list-card-composer-textarea')]'.</msg>
<status status="PASS" starttime="20220704 15:27:33.309" endtime="20220704 15:27:33.355"/>
</kw>
<kw name="Clear Element Text" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<doc>Clears the value of the text-input-element identified by ``locator``.</doc>
<status status="PASS" starttime="20220704 15:27:33.355" endtime="20220704 15:27:33.406"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<arg>${card_name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220704 15:27:33.406" level="INFO">Typing text 'Test Card' into text field '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//textarea[contains(@class, 'list-card-composer-textarea')]'.</msg>
<status status="PASS" starttime="20220704 15:27:33.406" endtime="20220704 15:27:33.480"/>
</kw>
<kw name="Format String" library="String">
<var>${confirm_locator}</var>
<arg>${CONFIRM_ADD_CARD}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 15:27:33.480" level="INFO">${confirm_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//input[@value='Add card']</msg>
<status status="PASS" starttime="20220704 15:27:33.480" endtime="20220704 15:27:33.480"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${confirm_locator}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220704 15:27:33.481" level="INFO">Clicking button '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//input[@value='Add card']'.</msg>
<status status="PASS" starttime="20220704 15:27:33.481" endtime="20220704 15:27:33.534"/>
</kw>
<status status="PASS" starttime="20220704 15:27:33.198" endtime="20220704 15:27:33.534"/>
</kw>
<kw name="Go To Card Modal" library="ListComponent">
<arg>${list}</arg>
<arg>${card}</arg>
<doc>It opens the modal for card_name in list_name</doc>
<kw name="Format String" library="String">
<var>${card_name_locator}</var>
<arg>${LIST_CARD_NAME}</arg>
<arg>list_name=${list_name}</arg>
<arg>card_name=${card_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 15:27:33.535" level="INFO">${card_name_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Test Card')]</msg>
<status status="PASS" starttime="20220704 15:27:33.535" endtime="20220704 15:27:33.535"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${card_name_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 15:27:33.535" endtime="20220704 15:27:33.580"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${card_name_locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 15:27:33.581" level="INFO">Clicking element '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Test Card')]'.</msg>
<status status="PASS" starttime="20220704 15:27:33.580" endtime="20220704 15:27:33.631"/>
</kw>
<status status="PASS" starttime="20220704 15:27:33.534" endtime="20220704 15:27:33.631"/>
</kw>
<kw name="Delete Current Card" library="CardModal">
<doc>The Keyword will first check if the card is archived,
if it's not, it will archive it to be able to delete it.</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${not_archived}</var>
<arg>Element Should Not Be Visible</arg>
<arg>${IS_ARCHIVED_MSG}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Element Should Not Be Visible" library="SeleniumLibrary">
<arg>${IS_ARCHIVED_MSG}</arg>
<doc>Verifies that the element identified by ``locator`` is NOT visible.</doc>
<msg timestamp="20220704 15:27:33.796" level="INFO">Element '//p[text()='This card is archived.']' did not exist.</msg>
<status status="PASS" starttime="20220704 15:27:33.632" endtime="20220704 15:27:33.797"/>
</kw>
<msg timestamp="20220704 15:27:33.797" level="INFO">${not_archived} = True</msg>
<status status="PASS" starttime="20220704 15:27:33.631" endtime="20220704 15:27:33.797"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${not_archived}</arg>
<arg>Archive Current Card</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Archive Current Card" library="CardModal">
<doc>Archives the current card from inside the modal.</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ARCHIVE_BUTTON}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 15:27:33.798" endtime="20220704 15:27:33.845"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${ARCHIVE_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 15:27:33.846" level="INFO">Clicking element '//span[@title='Archive']'.</msg>
<status status="PASS" starttime="20220704 15:27:33.846" endtime="20220704 15:27:33.907"/>
</kw>
<status status="PASS" starttime="20220704 15:27:33.797" endtime="20220704 15:27:33.908"/>
</kw>
<status status="PASS" starttime="20220704 15:27:33.797" endtime="20220704 15:27:33.908"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3</arg>
<arg>0.9</arg>
<arg>Click Element</arg>
<arg>${DELETE_BUTTON}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${DELETE_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 15:27:33.908" level="INFO">Clicking element '//a[@title='Delete']'.</msg>
<status status="PASS" starttime="20220704 15:27:33.908" endtime="20220704 15:27:33.984"/>
</kw>
<status status="PASS" starttime="20220704 15:27:33.908" endtime="20220704 15:27:33.984"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${DELETE_CONFIRM}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 15:27:33.984" level="INFO">Clicking element '//input[@value='Delete']'.</msg>
<status status="PASS" starttime="20220704 15:27:33.984" endtime="20220704 15:27:34.128"/>
</kw>
<status status="PASS" starttime="20220704 15:27:33.631" endtime="20220704 15:27:34.128"/>
</kw>
<kw name="Get Number Of Cards In List" library="ListComponent">
<var>${cards_after}</var>
<arg>${list}</arg>
<doc>Return the number of cards present in a given list.
required: list_name</doc>
<kw name="Format String" library="String">
<var>${card_anchor_locator}</var>
<arg>${CARD_ANCHORS}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 15:27:34.129" level="INFO">${card_anchor_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(@class, 'list-card')]</msg>
<status status="PASS" starttime="20220704 15:27:34.129" endtime="20220704 15:27:34.129"/>
</kw>
<kw name="Get Element Count" library="SeleniumLibrary">
<var>${n}</var>
<arg>${card_anchor_locator}</arg>
<doc>Returns the number of elements matching ``locator``.</doc>
<msg timestamp="20220704 15:27:34.149" level="INFO">${n} = 0</msg>
<status status="PASS" starttime="20220704 15:27:34.129" endtime="20220704 15:27:34.150"/>
</kw>
<return>
<value>${n}</value>
<status status="PASS" starttime="20220704 15:27:34.150" endtime="20220704 15:27:34.150"/>
</return>
<msg timestamp="20220704 15:27:34.150" level="INFO">${cards_after} = 0</msg>
<status status="PASS" starttime="20220704 15:27:34.128" endtime="20220704 15:27:34.150"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${cards_before} == ${cards_after}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220704 15:27:34.150" endtime="20220704 15:27:34.150"/>
</kw>
<doc>Verify that it is possible to delete a card
from inside the card modal.</doc>
<tag>card.delete</tag>
<tag>gui</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220704 15:27:33.174" endtime="20220704 15:27:34.151"/>
</test>
<test id="s1-s8-s1-s2-t5" name="Card Can Be Dragged To Another List" line="65">
<kw name="Set Test Variable" library="BuiltIn">
<arg>\${list}</arg>
<arg>To Do</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220704 15:27:34.152" level="INFO">${list} = To Do</msg>
<status status="PASS" starttime="20220704 15:27:34.152" endtime="20220704 15:27:34.152"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>\${card}</arg>
<arg>Test Card</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220704 15:27:34.152" level="INFO">${card} = Test Card</msg>
<status status="PASS" starttime="20220704 15:27:34.152" endtime="20220704 15:27:34.152"/>
</kw>
<kw name="Create Card In List" library="ListComponent">
<arg>${list}</arg>
<arg>${card}</arg>
<doc>Create a new card in the given list
Required args: list_name, card_name</doc>
<kw name="Format String" library="String">
<var>${add_card_locator}</var>
<arg>${LIST_ADD_CARD}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 15:27:34.153" level="INFO">${add_card_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Add a card')]</msg>
<status status="PASS" starttime="20220704 15:27:34.153" endtime="20220704 15:27:34.153"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${add_card_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 15:27:34.153" endtime="20220704 15:27:34.180"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${add_card_locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 15:27:34.181" level="INFO">Clicking element '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Add a card')]'.</msg>
<status status="PASS" starttime="20220704 15:27:34.180" endtime="20220704 15:27:34.225"/>
</kw>
<kw name="Format String" library="String">
<var>${textarea_locator}</var>
<arg>${CARD_TITLE_INPUT}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 15:27:34.226" level="INFO">${textarea_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//textarea[contains(@class, 'list-card-composer-textarea')]</msg>
<status status="PASS" starttime="20220704 15:27:34.225" endtime="20220704 15:27:34.226"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 15:27:34.226" endtime="20220704 15:27:34.265"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 15:27:34.265" level="INFO">Clicking element '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//textarea[contains(@class, 'list-card-composer-textarea')]'.</msg>
<status status="PASS" starttime="20220704 15:27:34.265" endtime="20220704 15:27:34.329"/>
</kw>
<kw name="Clear Element Text" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<doc>Clears the value of the text-input-element identified by ``locator``.</doc>
<status status="PASS" starttime="20220704 15:27:34.329" endtime="20220704 15:27:34.370"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<arg>${card_name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220704 15:27:34.371" level="INFO">Typing text 'Test Card' into text field '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//textarea[contains(@class, 'list-card-composer-textarea')]'.</msg>
<status status="PASS" starttime="20220704 15:27:34.370" endtime="20220704 15:27:34.486"/>
</kw>
<kw name="Format String" library="String">
<var>${confirm_locator}</var>
<arg>${CONFIRM_ADD_CARD}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 15:27:34.486" level="INFO">${confirm_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//input[@value='Add card']</msg>
<status status="PASS" starttime="20220704 15:27:34.486" endtime="20220704 15:27:34.486"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${confirm_locator}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220704 15:27:34.487" level="INFO">Clicking button '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//input[@value='Add card']'.</msg>
<status status="PASS" starttime="20220704 15:27:34.487" endtime="20220704 15:27:34.578"/>
</kw>
<status status="PASS" starttime="20220704 15:27:34.153" endtime="20220704 15:27:34.579"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>\${list2}</arg>
<arg>Doing</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220704 15:27:34.579" level="INFO">${list2} = Doing</msg>
<status status="PASS" starttime="20220704 15:27:34.579" endtime="20220704 15:27:34.579"/>
</kw>
<kw name="Drag Card From One List To Another" library="ListComponent">
<arg>${card}</arg>
<arg>${list}</arg>
<arg>${list2}</arg>
<doc>required: card_name, source_list_name, target_list_name</doc>
<kw name="Format String" library="String">
<var>${card_locator}</var>
<arg>${LIST_CARD_NAME}</arg>
<arg>list_name=${list1_name}</arg>
<arg>card_name=${card_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 15:27:34.580" level="INFO">${card_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Test Card')]</msg>
<status status="PASS" starttime="20220704 15:27:34.580" endtime="20220704 15:27:34.580"/>
</kw>
<kw name="Format String" library="String">
<var>${list2_locator}</var>
<arg>${LIST_DIV}</arg>
<arg>list_name=${list2_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 15:27:34.581" level="INFO">${list2_locator} = //h2[text()='Doing']//ancestor::div[contains(@class, 'list-content')]</msg>
<status status="PASS" starttime="20220704 15:27:34.580" endtime="20220704 15:27:34.581"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${card_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 15:27:34.581" endtime="20220704 15:27:34.663"/>
</kw>
<kw name="Drag And Drop" library="SeleniumLibrary">
<arg>${card_locator}</arg>
<arg>${list2_locator}</arg>
<doc>Drags the element identified by ``locator`` into the ``target`` element.</doc>
<status status="PASS" starttime="20220704 15:27:34.663" endtime="20220704 15:27:35.238"/>
</kw>
<status status="PASS" starttime="20220704 15:27:34.579" endtime="20220704 15:27:35.239"/>
</kw>
<kw name="Card Should Be In List" library="ListComponent">
<arg>${card}</arg>
<arg>${list2}</arg>
<doc>Check that a card is visible and in the given list
required: card_name, list_name</doc>
<kw name="Format String" library="String">
<var>${card_locator}</var>
<arg>${LIST_CARD_NAME}</arg>
<arg>list_name=${list_name}</arg>
<arg>card_name=${card_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 15:27:35.240" level="INFO">${card_locator} = //h2[text()='Doing']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Test Card')]</msg>
<status status="PASS" starttime="20220704 15:27:35.239" endtime="20220704 15:27:35.240"/>
</kw>
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<arg>${card_locator}</arg>
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<msg timestamp="20220704 15:27:35.407" level="INFO">Element '//h2[text()='Doing']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Test Card')]' is displayed.</msg>
<status status="PASS" starttime="20220704 15:27:35.240" endtime="20220704 15:27:35.407"/>
</kw>
<status status="PASS" starttime="20220704 15:27:35.239" endtime="20220704 15:27:35.407"/>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Go To Card Modal</arg>
<arg>${list2}</arg>
<arg>${card}</arg>
<arg>AND</arg>
<arg>Delete Current Card</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Go To Card Modal" library="ListComponent">
<arg>${list2}</arg>
<arg>${card}</arg>
<doc>It opens the modal for card_name in list_name</doc>
<kw name="Format String" library="String">
<var>${card_name_locator}</var>
<arg>${LIST_CARD_NAME}</arg>
<arg>list_name=${list_name}</arg>
<arg>card_name=${card_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 15:27:35.408" level="INFO">${card_name_locator} = //h2[text()='Doing']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Test Card')]</msg>
<status status="PASS" starttime="20220704 15:27:35.408" endtime="20220704 15:27:35.408"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${card_name_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 15:27:35.409" endtime="20220704 15:27:35.810"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${card_name_locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 15:27:35.811" level="INFO">Clicking element '//h2[text()='Doing']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Test Card')]'.</msg>
<status status="PASS" starttime="20220704 15:27:35.811" endtime="20220704 15:27:35.942"/>
</kw>
<status status="PASS" starttime="20220704 15:27:35.408" endtime="20220704 15:27:35.942"/>
</kw>
<kw name="Delete Current Card" library="CardModal">
<doc>The Keyword will first check if the card is archived,
if it's not, it will archive it to be able to delete it.</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${not_archived}</var>
<arg>Element Should Not Be Visible</arg>
<arg>${IS_ARCHIVED_MSG}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Element Should Not Be Visible" library="SeleniumLibrary">
<arg>${IS_ARCHIVED_MSG}</arg>
<doc>Verifies that the element identified by ``locator`` is NOT visible.</doc>
<msg timestamp="20220704 15:27:36.343" level="INFO">Element '//p[text()='This card is archived.']' did not exist.</msg>
<status status="PASS" starttime="20220704 15:27:35.943" endtime="20220704 15:27:36.343"/>
</kw>
<msg timestamp="20220704 15:27:36.343" level="INFO">${not_archived} = True</msg>
<status status="PASS" starttime="20220704 15:27:35.943" endtime="20220704 15:27:36.343"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${not_archived}</arg>
<arg>Archive Current Card</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Archive Current Card" library="CardModal">
<doc>Archives the current card from inside the modal.</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${ARCHIVE_BUTTON}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 15:27:36.344" endtime="20220704 15:27:36.387"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${ARCHIVE_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 15:27:36.387" level="INFO">Clicking element '//span[@title='Archive']'.</msg>
<status status="PASS" starttime="20220704 15:27:36.387" endtime="20220704 15:27:36.541"/>
</kw>
<status status="PASS" starttime="20220704 15:27:36.343" endtime="20220704 15:27:36.541"/>
</kw>
<status status="PASS" starttime="20220704 15:27:36.343" endtime="20220704 15:27:36.542"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3</arg>
<arg>0.9</arg>
<arg>Click Element</arg>
<arg>${DELETE_BUTTON}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${DELETE_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 15:27:36.542" level="INFO">Clicking element '//a[@title='Delete']'.</msg>
<status status="PASS" starttime="20220704 15:27:36.542" endtime="20220704 15:27:36.704"/>
</kw>
<status status="PASS" starttime="20220704 15:27:36.542" endtime="20220704 15:27:36.704"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${DELETE_CONFIRM}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 15:27:36.704" level="INFO">Clicking element '//input[@value='Delete']'.</msg>
<status status="PASS" starttime="20220704 15:27:36.704" endtime="20220704 15:27:36.973"/>
</kw>
<status status="PASS" starttime="20220704 15:27:35.943" endtime="20220704 15:27:36.973"/>
</kw>
<status status="PASS" starttime="20220704 15:27:35.407" endtime="20220704 15:27:36.973"/>
</kw>
<doc>Verify that a card can be dragged from one list to another.</doc>
<tag>card.drag</tag>
<tag>gui</tag>
<tag>regression</tag>
<status status="PASS" starttime="20220704 15:27:34.151" endtime="20220704 15:27:36.973"/>
</test>
<test id="s1-s8-s1-s2-t6" name="Card Can Be Moved To Another Board" line="79">
<kw name="Create A Board" library="Board">
<var>${board2}</var>
<arg>CardTestBoard2</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 15:27:36.977" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 15:27:36.976" endtime="20220704 15:27:36.977"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 15:27:36.977" endtime="20220704 15:27:36.978"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 15:27:36.979" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220704 15:27:36.978" endtime="20220704 15:27:36.979"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 15:27:37.144" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:27:36.979" endtime="20220704 15:27:37.144"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:27:37.144" endtime="20220704 15:27:37.144"/>
</return>
<msg timestamp="20220704 15:27:37.144" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:27:36.976" endtime="20220704 15:27:37.144"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:27:37.144" endtime="20220704 15:27:37.144"/>
</return>
<msg timestamp="20220704 15:27:37.144" level="INFO">${board2} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:27:36.976" endtime="20220704 15:27:37.144"/>
</kw>
<kw name="Go Home" library="TrelloUpperMenu">
<doc>it goes to the gome page</doc>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${TRELLO_ICON}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220704 15:27:37.145" endtime="20220704 15:27:37.240"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${TRELLO_ICON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 15:27:37.240" level="INFO">Clicking element 'xpath://a[@aria-label='Back to home']'.</msg>
<status status="PASS" starttime="20220704 15:27:37.240" endtime="20220704 15:27:37.437"/>
</kw>
<status status="PASS" starttime="20220704 15:27:37.144" endtime="20220704 15:27:37.437"/>
</kw>
<kw name="Go To Board" library="BoardsPage">
<arg>CardTestBoard2</arg>
<doc>Receives the board name and goes to that board's page.</doc>
<kw name="Format String" library="String">
<var>${locator}</var>
<arg>${BOARD_BUTTON}</arg>
<arg>${board_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 15:27:37.438" level="INFO">${locator} = //div[@title="CardTestBoard2"]</msg>
<status status="PASS" starttime="20220704 15:27:37.438" endtime="20220704 15:27:37.438"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 15:27:37.438" endtime="20220704 15:27:37.771"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 15:27:37.772" level="INFO">Clicking element '//div[@title="CardTestBoard2"]'.</msg>
<status status="PASS" starttime="20220704 15:27:37.771" endtime="20220704 15:27:37.972"/>
</kw>
<status status="PASS" starttime="20220704 15:27:37.437" endtime="20220704 15:27:37.973"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>\${list}</arg>
<arg>To Do</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220704 15:27:37.973" level="INFO">${list} = To Do</msg>
<status status="PASS" starttime="20220704 15:27:37.973" endtime="20220704 15:27:37.973"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>\${card}</arg>
<arg>Test Card2</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220704 15:27:37.973" level="INFO">${card} = Test Card2</msg>
<status status="PASS" starttime="20220704 15:27:37.973" endtime="20220704 15:27:37.973"/>
</kw>
<kw name="Create Card In List" library="ListComponent">
<arg>${list}</arg>
<arg>${card}</arg>
<doc>Create a new card in the given list
Required args: list_name, card_name</doc>
<kw name="Format String" library="String">
<var>${add_card_locator}</var>
<arg>${LIST_ADD_CARD}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 15:27:37.974" level="INFO">${add_card_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Add a card')]</msg>
<status status="PASS" starttime="20220704 15:27:37.974" endtime="20220704 15:27:37.974"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${add_card_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 15:27:37.974" endtime="20220704 15:27:38.538"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${add_card_locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 15:27:38.538" level="INFO">Clicking element '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Add a card')]'.</msg>
<status status="PASS" starttime="20220704 15:27:38.538" endtime="20220704 15:27:38.656"/>
</kw>
<kw name="Format String" library="String">
<var>${textarea_locator}</var>
<arg>${CARD_TITLE_INPUT}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 15:27:38.657" level="INFO">${textarea_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//textarea[contains(@class, 'list-card-composer-textarea')]</msg>
<status status="PASS" starttime="20220704 15:27:38.656" endtime="20220704 15:27:38.657"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 15:27:38.657" endtime="20220704 15:27:38.706"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 15:27:38.706" level="INFO">Clicking element '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//textarea[contains(@class, 'list-card-composer-textarea')]'.</msg>
<status status="PASS" starttime="20220704 15:27:38.706" endtime="20220704 15:27:38.791"/>
</kw>
<kw name="Clear Element Text" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<doc>Clears the value of the text-input-element identified by ``locator``.</doc>
<status status="PASS" starttime="20220704 15:27:38.791" endtime="20220704 15:27:38.845"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<arg>${card_name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220704 15:27:38.846" level="INFO">Typing text 'Test Card2' into text field '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//textarea[contains(@class, 'list-card-composer-textarea')]'.</msg>
<status status="PASS" starttime="20220704 15:27:38.846" endtime="20220704 15:27:38.986"/>
</kw>
<kw name="Format String" library="String">
<var>${confirm_locator}</var>
<arg>${CONFIRM_ADD_CARD}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 15:27:38.987" level="INFO">${confirm_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//input[@value='Add card']</msg>
<status status="PASS" starttime="20220704 15:27:38.986" endtime="20220704 15:27:38.987"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${confirm_locator}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220704 15:27:38.987" level="INFO">Clicking button '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//input[@value='Add card']'.</msg>
<status status="PASS" starttime="20220704 15:27:38.987" endtime="20220704 15:27:39.097"/>
</kw>
<status status="PASS" starttime="20220704 15:27:37.973" endtime="20220704 15:27:39.097"/>
</kw>
<kw name="Go To Card Modal" library="ListComponent">
<arg>${list}</arg>
<arg>${card}</arg>
<doc>It opens the modal for card_name in list_name</doc>
<kw name="Format String" library="String">
<var>${card_name_locator}</var>
<arg>${LIST_CARD_NAME}</arg>
<arg>list_name=${list_name}</arg>
<arg>card_name=${card_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 15:27:39.098" level="INFO">${card_name_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Test Card2')]</msg>
<status status="PASS" starttime="20220704 15:27:39.098" endtime="20220704 15:27:39.098"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${card_name_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 15:27:39.099" endtime="20220704 15:27:39.154"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${card_name_locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 15:27:39.154" level="INFO">Clicking element '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Test Card2')]'.</msg>
<status status="PASS" starttime="20220704 15:27:39.154" endtime="20220704 15:27:39.203"/>
</kw>
<status status="PASS" starttime="20220704 15:27:39.097" endtime="20220704 15:27:39.203"/>
</kw>
<kw name="Move Card To Another Board" library="CardModal">
<arg>CardTestBoard</arg>
<doc>Moves the card using the "name of destination board"
required: name (name of the destination board)</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${MOVE_BUTTON}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 15:27:39.204" endtime="20220704 15:27:39.535"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${MOVE_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 15:27:39.536" level="INFO">Clicking element '//a[@title='Move']'.</msg>
<status status="PASS" starttime="20220704 15:27:39.535" endtime="20220704 15:27:39.668"/>
</kw>
<kw name="Select From List By Label" library="SeleniumLibrary">
<arg>${SELECT_DESTINATION}</arg>
<arg>${name_of_destination_board}</arg>
<doc>Selects options from selection list ``locator`` by ``labels``.</doc>
<msg timestamp="20220704 15:27:39.669" level="INFO">Selecting options from selection list '//select[@data-test-id='move-board-select']' by label CardTestBoard.</msg>
<status status="PASS" starttime="20220704 15:27:39.668" endtime="20220704 15:27:39.806"/>
</kw>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${ACCEPT_MOVE_BUTTON}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220704 15:27:39.806" endtime="20220704 15:27:40.073"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${ACCEPT_MOVE_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 15:27:40.074" level="INFO">Clicking element '//input[@value="Move"]'.</msg>
<status status="PASS" starttime="20220704 15:27:40.074" endtime="20220704 15:27:40.208"/>
</kw>
<kw name="Wait Until Element Is Not Visible" library="SeleniumLibrary">
<arg>${ARCHIVE_BUTTON}</arg>
<doc>Waits until the element ``locator`` is not visible.</doc>
<status status="PASS" starttime="20220704 15:27:40.208" endtime="20220704 15:27:40.219"/>
</kw>
<status status="PASS" starttime="20220704 15:27:39.204" endtime="20220704 15:27:40.219"/>
</kw>
<kw name="Get Number Of Cards In List" library="ListComponent">
<var>${Cards_On_list}</var>
<arg>To Do</arg>
<doc>Return the number of cards present in a given list.
required: list_name</doc>
<kw name="Format String" library="String">
<var>${card_anchor_locator}</var>
<arg>${CARD_ANCHORS}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 15:27:40.220" level="INFO">${card_anchor_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(@class, 'list-card')]</msg>
<status status="PASS" starttime="20220704 15:27:40.219" endtime="20220704 15:27:40.220"/>
</kw>
<kw name="Get Element Count" library="SeleniumLibrary">
<var>${n}</var>
<arg>${card_anchor_locator}</arg>
<doc>Returns the number of elements matching ``locator``.</doc>
<msg timestamp="20220704 15:27:40.231" level="INFO">${n} = 0</msg>
<status status="PASS" starttime="20220704 15:27:40.220" endtime="20220704 15:27:40.231"/>
</kw>
<return>
<value>${n}</value>
<status status="PASS" starttime="20220704 15:27:40.231" endtime="20220704 15:27:40.231"/>
</return>
<msg timestamp="20220704 15:27:40.231" level="INFO">${Cards_On_list} = 0</msg>
<status status="PASS" starttime="20220704 15:27:40.219" endtime="20220704 15:27:40.231"/>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<var>${0}</var>
<arg>0</arg>
<doc>Converts the given item to an integer number.</doc>
<msg timestamp="20220704 15:27:40.232" level="INFO">${0} = 0</msg>
<status status="PASS" starttime="20220704 15:27:40.231" endtime="20220704 15:27:40.232"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${Cards_On_list}</arg>
<arg>${0}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220704 15:27:40.232" endtime="20220704 15:27:40.232"/>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Close Browser</arg>
<arg>AND</arg>
<arg>Wait Until Keyword Succeeds</arg>
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${board2.json()}[id]</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20220704 15:27:40.232" endtime="20220704 15:27:40.328"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${board2.json()}[id]</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${board2.json()}[id]</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 15:27:40.331" level="INFO">${url} = boards/62c306e9cfe3352a15b8f9d1</msg>
<status status="PASS" starttime="20220704 15:27:40.331" endtime="20220704 15:27:40.331"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 15:27:40.385" level="INFO">${response} = None</msg>
<msg timestamp="20220704 15:27:40.385" level="FAIL">InvalidExpectedStatus: it was expected the status 200 but the status was 429</msg>
<status status="FAIL" starttime="20220704 15:27:40.331" endtime="20220704 15:27:40.385"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:27:40.385" endtime="20220704 15:27:40.385"/>
</return>
<msg timestamp="20220704 15:27:40.385" level="INFO">${response} = None</msg>
<status status="FAIL" starttime="20220704 15:27:40.330" endtime="20220704 15:27:40.385"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:27:40.385" endtime="20220704 15:27:40.385"/>
</return>
<status status="FAIL" starttime="20220704 15:27:40.329" endtime="20220704 15:27:40.386"/>
</kw>
<kw name="Delete A Board" library="Board">
<arg>${board2.json()}[id]</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 15:27:42.889" level="INFO">${url} = boards/62c306e9cfe3352a15b8f9d1</msg>
<status status="PASS" starttime="20220704 15:27:42.888" endtime="20220704 15:27:42.889"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 15:27:43.277" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:27:42.889" endtime="20220704 15:27:43.277"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:27:43.277" endtime="20220704 15:27:43.277"/>
</return>
<msg timestamp="20220704 15:27:43.278" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:27:42.888" endtime="20220704 15:27:43.278"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:27:43.278" endtime="20220704 15:27:43.278"/>
</return>
<status status="PASS" starttime="20220704 15:27:42.886" endtime="20220704 15:27:43.278"/>
</kw>
<status status="PASS" starttime="20220704 15:27:40.329" endtime="20220704 15:27:43.278"/>
</kw>
<status status="PASS" starttime="20220704 15:27:40.232" endtime="20220704 15:27:43.278"/>
</kw>
<doc>Creates a new board through API, then goes to the
second board, creates a card and moves it to the other board</doc>
<tag>card.move</tag>
<tag>gui</tag>
<tag>regression</tag>
<status status="PASS" starttime="20220704 15:27:36.975" endtime="20220704 15:27:43.278"/>
</test>
<kw name="Cards Suite Teardown" type="TEARDOWN">
<doc>Deletes the created board through API and closes all browsers.</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 15:27:43.281" level="INFO">${url} = boards/62c306d935ffb46a478795ab</msg>
<status status="PASS" starttime="20220704 15:27:43.280" endtime="20220704 15:27:43.281"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 15:27:43.639" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:27:43.281" endtime="20220704 15:27:43.639"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:27:43.639" endtime="20220704 15:27:43.639"/>
</return>
<msg timestamp="20220704 15:27:43.640" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:27:43.280" endtime="20220704 15:27:43.640"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:27:43.640" endtime="20220704 15:27:43.640"/>
</return>
<status status="PASS" starttime="20220704 15:27:43.279" endtime="20220704 15:27:43.640"/>
</kw>
<status status="PASS" starttime="20220704 15:27:43.279" endtime="20220704 15:27:43.640"/>
</kw>
<kw name="Delete All Sessions" library="request_own_library">
<status status="PASS" starttime="20220704 15:27:43.640" endtime="20220704 15:27:43.641"/>
</kw>
<kw name="Close All Browsers" library="SeleniumLibrary">
<doc>Closes all open browsers and resets the browser cache.</doc>
<status status="PASS" starttime="20220704 15:27:43.641" endtime="20220704 15:27:43.641"/>
</kw>
<status status="PASS" starttime="20220704 15:27:43.279" endtime="20220704 15:27:43.641"/>
</kw>
<doc>Test Cases for Cards Feature</doc>
<status status="PASS" starttime="20220704 15:27:21.255" endtime="20220704 15:27:43.641"/>
</suite>
<suite id="s1-s8-s1-s3" name="Trello Gui Labels" source="/trello/gui/trello_gui_labels.robot">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Create Trello Session</arg>
<arg>Setup Board</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Create Trello Session" library="TrelloAPI">
<doc>Creates a Trello Session</doc>
<kw name="Create Session" library="request_own_library">
<arg>${API_BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<status status="PASS" starttime="20220704 15:27:43.659" endtime="20220704 15:27:43.659"/>
</kw>
<status status="PASS" starttime="20220704 15:27:43.658" endtime="20220704 15:27:43.659"/>
</kw>
<kw name="Setup Board">
<doc>Creates a board and saves its ID</doc>
<kw name="Create A Board" library="Board">
<var>${BOARD}</var>
<arg>TestBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 15:27:43.660" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 15:27:43.660" endtime="20220704 15:27:43.660"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 15:27:43.660" endtime="20220704 15:27:43.660"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 15:27:43.662" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220704 15:27:43.661" endtime="20220704 15:27:43.662"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 15:27:43.863" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:27:43.662" endtime="20220704 15:27:43.863"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:27:43.863" endtime="20220704 15:27:43.863"/>
</return>
<msg timestamp="20220704 15:27:43.863" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:27:43.660" endtime="20220704 15:27:43.863"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:27:43.863" endtime="20220704 15:27:43.863"/>
</return>
<msg timestamp="20220704 15:27:43.863" level="INFO">${BOARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:27:43.659" endtime="20220704 15:27:43.863"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_BOARD_ID}</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220704 15:27:43.865" level="INFO">${TEST_SUITE_BOARD_ID} = 62c306efb3b4626aaa008472</msg>
<status status="PASS" starttime="20220704 15:27:43.863" endtime="20220704 15:27:43.865"/>
</kw>
<status status="PASS" starttime="20220704 15:27:43.659" endtime="20220704 15:27:43.865"/>
</kw>
<status status="PASS" starttime="20220704 15:27:43.658" endtime="20220704 15:27:43.865"/>
</kw>
<test id="s1-s8-s1-s3-t1" name="filter label" line="21">
<kw name="Open Browser From Environment" library="CommonGUI">
<arg>${LOGIN_URL}</arg>
<doc>This keywords takes REMOTE and BROWSER variables
from the environment automatically and only needs a url</doc>
<if>
<branch type="IF" condition="${is_remote}">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${url}</arg>
<arg>${BROWSER}</arg>
<arg>remote_url=http://selenium-hub:4444</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20220704 15:27:43.867" level="INFO">Opening browser 'chrome' to base url 'https://trello.com/login' through remote server at 'http://selenium-hub:4444'.</msg>
<status status="PASS" starttime="20220704 15:27:43.866" endtime="20220704 15:27:44.924"/>
</kw>
<status status="PASS" starttime="20220704 15:27:43.866" endtime="20220704 15:27:44.924"/>
</branch>
<branch type="ELSE">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${url}</arg>
<arg>${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<status status="NOT RUN" starttime="20220704 15:27:44.924" endtime="20220704 15:27:44.924"/>
</kw>
<status status="NOT RUN" starttime="20220704 15:27:44.924" endtime="20220704 15:27:44.924"/>
</branch>
<status status="PASS" starttime="20220704 15:27:43.866" endtime="20220704 15:27:44.924"/>
</if>
<status status="PASS" starttime="20220704 15:27:43.866" endtime="20220704 15:27:44.924"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20220704 15:27:44.924" endtime="20220704 15:27:45.040"/>
</kw>
<kw name="Login To Trello" library="LoginPage">
<arg>${DEFAULT_EMAIL}</arg>
<arg>${DEFAULT_PASSWORD}</arg>
<doc>High-level keyword for logging in to Trello</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220704 15:27:45.049" level="INFO">${url} = https://trello.com/login</msg>
<status status="PASS" starttime="20220704 15:27:45.041" endtime="20220704 15:27:45.049"/>
</kw>
<if>
<branch type="IF" condition="'${url}' != '${LOGIN_URL}'">
<kw name="Go To" library="SeleniumLibrary">
<arg>${LOGIN_URL}</arg>
<doc>Navigates the current browser window to the provided ``url``.</doc>
<status status="NOT RUN" starttime="20220704 15:27:45.049" endtime="20220704 15:27:45.049"/>
</kw>
<status status="NOT RUN" starttime="20220704 15:27:45.049" endtime="20220704 15:27:45.049"/>
</branch>
<status status="PASS" starttime="20220704 15:27:45.049" endtime="20220704 15:27:45.049"/>
</if>
<kw name="Enter Username" library="LoginPage">
<arg>${username}</arg>
<doc>Take a username as argument and
enters it in the user_input</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${USER_INPUT}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 15:27:45.050" endtime="20220704 15:27:45.080"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${USER_INPUT}</arg>
<arg>${username}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220704 15:27:45.081" level="INFO">Typing text 'bootcamp04@mailinator.com' into text field 'css:input#user'.</msg>
<status status="PASS" starttime="20220704 15:27:45.080" endtime="20220704 15:27:45.175"/>
</kw>
<status status="PASS" starttime="20220704 15:27:45.049" endtime="20220704 15:27:45.175"/>
</kw>
<kw name="Wait Until Element Is Not Visible" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<doc>Waits until the element ``locator`` is not visible.</doc>
<status status="PASS" starttime="20220704 15:27:45.175" endtime="20220704 15:27:45.875"/>
</kw>
<kw name="Click Login Button" library="LoginPage">
<doc>Clicks Trello's login button if in Trello's
login page, else it clicks Atlassian's</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220704 15:27:45.892" level="INFO">${url} = https://trello.com/login</msg>
<status status="PASS" starttime="20220704 15:27:45.875" endtime="20220704 15:27:45.892"/>
</kw>
<if>
<branch type="IF" condition="'${url}' == '${LOGIN_URL}'">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220704 15:27:45.892" endtime="20220704 15:27:45.958"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220704 15:27:45.959" level="INFO">Clicking button 'css:input#login'.</msg>
<status status="PASS" starttime="20220704 15:27:45.959" endtime="20220704 15:27:46.749"/>
</kw>
<status status="PASS" starttime="20220704 15:27:45.892" endtime="20220704 15:27:46.749"/>
</branch>
<branch type="ELSE">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="NOT RUN" starttime="20220704 15:27:46.749" endtime="20220704 15:27:46.749"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<status status="NOT RUN" starttime="20220704 15:27:46.749" endtime="20220704 15:27:46.749"/>
</kw>
<status status="NOT RUN" starttime="20220704 15:27:46.749" endtime="20220704 15:27:46.749"/>
</branch>
<status status="PASS" starttime="20220704 15:27:45.892" endtime="20220704 15:27:46.749"/>
</if>
<status status="PASS" starttime="20220704 15:27:45.875" endtime="20220704 15:27:46.749"/>
</kw>
<kw name="Wait Until Location Is Atlassian's Login" library="LoginPage">
<doc>Waits for the page redirection when logging in.</doc>
<kw name="Wait Until Location Contains" library="SeleniumLibrary">
<arg>atlassian.com</arg>
<doc>Waits until the current URL contains ``expected``.</doc>
<status status="PASS" starttime="20220704 15:27:46.750" endtime="20220704 15:27:46.793"/>
</kw>
<status status="PASS" starttime="20220704 15:27:46.750" endtime="20220704 15:27:46.793"/>
</kw>
<kw name="Enter Password" library="LoginPage">
<arg>${password}</arg>
<doc>Take a password as argument and
enters it in the password_input</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<arg>timeout=10</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 15:27:46.794" endtime="20220704 15:27:46.846"/>
</kw>
<kw name="Input Password" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<arg>${password}</arg>
<doc>Types the given password into the text field identified by ``locator``.</doc>
<msg timestamp="20220704 15:27:46.847" level="INFO">Typing password into text field 'css:input#password'.</msg>
<msg timestamp="20220704 15:27:46.897" level="INFO">Temporally setting log level to: NONE</msg>
<msg timestamp="20220704 15:27:46.981" level="INFO">Log level changed from NONE to INFO.</msg>
<status status="PASS" starttime="20220704 15:27:46.846" endtime="20220704 15:27:46.981"/>
</kw>
<status status="PASS" starttime="20220704 15:27:46.793" endtime="20220704 15:27:46.981"/>
</kw>
<kw name="Click Login Button" library="LoginPage">
<doc>Clicks Trello's login button if in Trello's
login page, else it clicks Atlassian's</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220704 15:27:46.988" level="INFO">${url} = https://id.atlassian.com/login?application=trello&amp;continue=https%3A%2F%2Ftrello.com%2Fauth%2Fatlassian%2Fcallback%3FreturnUrl%3D%252F%26display%3D%26aaOnboarding%3D%26updateEmail%3D%26traceId%3D62c306...</msg>
<status status="PASS" starttime="20220704 15:27:46.982" endtime="20220704 15:27:46.988"/>
</kw>
<if>
<branch type="IF" condition="'${url}' == '${LOGIN_URL}'">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="NOT RUN" starttime="20220704 15:27:46.988" endtime="20220704 15:27:46.988"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<status status="NOT RUN" starttime="20220704 15:27:46.989" endtime="20220704 15:27:46.989"/>
</kw>
<status status="NOT RUN" starttime="20220704 15:27:46.988" endtime="20220704 15:27:46.989"/>
</branch>
<branch type="ELSE">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220704 15:27:46.989" endtime="20220704 15:27:47.067"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220704 15:27:47.067" level="INFO">Clicking button 'css:button#login-submit'.</msg>
<status status="PASS" starttime="20220704 15:27:47.067" endtime="20220704 15:27:47.182"/>
</kw>
<status status="PASS" starttime="20220704 15:27:46.989" endtime="20220704 15:27:47.182"/>
</branch>
<status status="PASS" starttime="20220704 15:27:46.988" endtime="20220704 15:27:47.182"/>
</if>
<status status="PASS" starttime="20220704 15:27:46.981" endtime="20220704 15:27:47.182"/>
</kw>
<status status="PASS" starttime="20220704 15:27:45.041" endtime="20220704 15:27:47.182"/>
</kw>
<kw name="Go To Board" library="BoardsPage">
<arg>TestBoard</arg>
<doc>Receives the board name and goes to that board's page.</doc>
<kw name="Format String" library="String">
<var>${locator}</var>
<arg>${BOARD_BUTTON}</arg>
<arg>${board_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 15:27:47.183" level="INFO">${locator} = //div[@title="TestBoard"]</msg>
<status status="PASS" starttime="20220704 15:27:47.183" endtime="20220704 15:27:47.183"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 15:27:47.183" endtime="20220704 15:27:50.235"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 15:27:50.235" level="INFO">Clicking element '//div[@title="TestBoard"]'.</msg>
<status status="PASS" starttime="20220704 15:27:50.235" endtime="20220704 15:27:50.549"/>
</kw>
<status status="PASS" starttime="20220704 15:27:47.182" endtime="20220704 15:27:50.549"/>
</kw>
<kw name="Create Card In List" library="ListComponent">
<arg>To Do</arg>
<arg>card1</arg>
<doc>Create a new card in the given list
Required args: list_name, card_name</doc>
<kw name="Format String" library="String">
<var>${add_card_locator}</var>
<arg>${LIST_ADD_CARD}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 15:27:50.550" level="INFO">${add_card_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Add a card')]</msg>
<status status="PASS" starttime="20220704 15:27:50.550" endtime="20220704 15:27:50.550"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${add_card_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 15:27:50.550" endtime="20220704 15:27:50.968"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${add_card_locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 15:27:50.968" level="INFO">Clicking element '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Add a card')]'.</msg>
<status status="PASS" starttime="20220704 15:27:50.968" endtime="20220704 15:27:51.100"/>
</kw>
<kw name="Format String" library="String">
<var>${textarea_locator}</var>
<arg>${CARD_TITLE_INPUT}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 15:27:51.101" level="INFO">${textarea_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//textarea[contains(@class, 'list-card-composer-textarea')]</msg>
<status status="PASS" starttime="20220704 15:27:51.100" endtime="20220704 15:27:51.101"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 15:27:51.101" endtime="20220704 15:27:51.149"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 15:27:51.150" level="INFO">Clicking element '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//textarea[contains(@class, 'list-card-composer-textarea')]'.</msg>
<status status="PASS" starttime="20220704 15:27:51.149" endtime="20220704 15:27:51.197"/>
</kw>
<kw name="Clear Element Text" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<doc>Clears the value of the text-input-element identified by ``locator``.</doc>
<status status="PASS" starttime="20220704 15:27:51.197" endtime="20220704 15:27:51.247"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<arg>${card_name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220704 15:27:51.247" level="INFO">Typing text 'card1' into text field '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//textarea[contains(@class, 'list-card-composer-textarea')]'.</msg>
<status status="PASS" starttime="20220704 15:27:51.247" endtime="20220704 15:27:51.321"/>
</kw>
<kw name="Format String" library="String">
<var>${confirm_locator}</var>
<arg>${CONFIRM_ADD_CARD}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 15:27:51.322" level="INFO">${confirm_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//input[@value='Add card']</msg>
<status status="PASS" starttime="20220704 15:27:51.321" endtime="20220704 15:27:51.322"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${confirm_locator}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220704 15:27:51.322" level="INFO">Clicking button '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//input[@value='Add card']'.</msg>
<status status="PASS" starttime="20220704 15:27:51.322" endtime="20220704 15:27:51.400"/>
</kw>
<status status="PASS" starttime="20220704 15:27:50.549" endtime="20220704 15:27:51.401"/>
</kw>
<kw name="Click pencil menu" library="ListComponent">
<arg>To Do</arg>
<arg>card1</arg>
<doc>Adds a label to an specific card</doc>
<kw name="Format String" library="String">
<var>${card_element}</var>
<arg>${LIST_CARD_NAME}</arg>
<arg>list_name=${list_name}</arg>
<arg>card_name=${card_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 15:27:51.402" level="INFO">${card_element} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'card1')]</msg>
<status status="PASS" starttime="20220704 15:27:51.401" endtime="20220704 15:27:51.402"/>
</kw>
<kw name="Format String" library="String">
<var>${pencil_locator}</var>
<arg>${PENCIL_ICON}</arg>
<arg>list_name=${list_name}</arg>
<arg>card_name=${card_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 15:27:51.402" level="INFO">${pencil_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'card1')]//span[contains(@class, 'icon-edit')]</msg>
<status status="PASS" starttime="20220704 15:27:51.402" endtime="20220704 15:27:51.402"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${card_element}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 15:27:51.402" endtime="20220704 15:27:51.468"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20220704 15:27:56.468" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20220704 15:27:51.468" endtime="20220704 15:27:56.468"/>
</kw>
<kw name="Mouse Over" library="SeleniumLibrary">
<arg>${card_element}</arg>
<doc>Simulates hovering the mouse over the element ``locator``.</doc>
<msg timestamp="20220704 15:27:56.469" level="INFO">Simulating Mouse Over on element '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'card1')]'.</msg>
<status status="PASS" starttime="20220704 15:27:56.468" endtime="20220704 15:27:56.815"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20220704 15:28:01.815" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20220704 15:27:56.815" endtime="20220704 15:28:01.815"/>
</kw>
<kw name="Wait Until Page Contains Element" library="SeleniumLibrary">
<arg>${pencil_locator}</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" starttime="20220704 15:28:01.816" endtime="20220704 15:28:01.831"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${pencil_locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 15:28:01.832" level="INFO">Clicking element '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'card1')]//span[contains(@class, 'icon-edit')]'.</msg>
<status status="PASS" starttime="20220704 15:28:01.831" endtime="20220704 15:28:01.907"/>
</kw>
<status status="PASS" starttime="20220704 15:27:51.401" endtime="20220704 15:28:01.907"/>
</kw>
<kw name="Add Color Label In Card" library="CardModal">
<arg>yellow</arg>
<doc>add label of a given color to a list</doc>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${EDIT_LABEL}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220704 15:28:01.907" endtime="20220704 15:28:01.957"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${EDIT_LABEL}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 15:28:01.958" level="INFO">Clicking element '//a[contains(@class,'js-edit-labels')]'.</msg>
<status status="PASS" starttime="20220704 15:28:01.957" endtime="20220704 15:28:02.053"/>
</kw>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LABEL_INPUT}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220704 15:28:02.054" endtime="20220704 15:28:02.106"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${LABEL_INPUT}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 15:28:02.106" level="INFO">Clicking element '//input[contains(@class,"js-autofocus")]'.</msg>
<status status="PASS" starttime="20220704 15:28:02.106" endtime="20220704 15:28:02.178"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${LABEL_INPUT}</arg>
<arg>${color}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220704 15:28:02.178" level="INFO">Typing text 'yellow' into text field '//input[contains(@class,"js-autofocus")]'.</msg>
<status status="PASS" starttime="20220704 15:28:02.178" endtime="20220704 15:28:02.256"/>
</kw>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LABEL_INPUT}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220704 15:28:02.256" endtime="20220704 15:28:02.294"/>
</kw>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>${LABEL_INPUT}</arg>
<arg>RETURN</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20220704 15:28:02.295" level="INFO">Sending key(s) ('RETURN',) to //input[contains(@class,"js-autofocus")] element.</msg>
<msg timestamp="20220704 15:28:02.568" level="INFO">Pressing special key RETURN to element.</msg>
<msg timestamp="20220704 15:28:02.568" level="INFO">Releasing special key RETURN.</msg>
<status status="PASS" starttime="20220704 15:28:02.294" endtime="20220704 15:28:02.591"/>
</kw>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>None</arg>
<arg>ESCAPE</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20220704 15:28:02.592" level="INFO">Sending key(s) ('ESCAPE',) to page.</msg>
<msg timestamp="20220704 15:28:02.592" level="INFO">Pressing special key ESCAPE to browser.</msg>
<msg timestamp="20220704 15:28:02.592" level="INFO">Releasing special key ESCAPE.</msg>
<status status="PASS" starttime="20220704 15:28:02.591" endtime="20220704 15:28:02.603"/>
</kw>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>None</arg>
<arg>ESCAPE</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20220704 15:28:02.604" level="INFO">Sending key(s) ('ESCAPE',) to page.</msg>
<msg timestamp="20220704 15:28:02.604" level="INFO">Pressing special key ESCAPE to browser.</msg>
<msg timestamp="20220704 15:28:02.604" level="INFO">Releasing special key ESCAPE.</msg>
<status status="PASS" starttime="20220704 15:28:02.603" endtime="20220704 15:28:02.616"/>
</kw>
<status status="PASS" starttime="20220704 15:28:01.907" endtime="20220704 15:28:02.616"/>
</kw>
<kw name="Create Card In List" library="ListComponent">
<arg>Doing</arg>
<arg>card2</arg>
<doc>Create a new card in the given list
Required args: list_name, card_name</doc>
<kw name="Format String" library="String">
<var>${add_card_locator}</var>
<arg>${LIST_ADD_CARD}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 15:28:02.617" level="INFO">${add_card_locator} = //h2[text()='Doing']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Add a card')]</msg>
<status status="PASS" starttime="20220704 15:28:02.617" endtime="20220704 15:28:02.617"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${add_card_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 15:28:02.617" endtime="20220704 15:28:02.646"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${add_card_locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 15:28:02.646" level="INFO">Clicking element '//h2[text()='Doing']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Add a card')]'.</msg>
<status status="PASS" starttime="20220704 15:28:02.646" endtime="20220704 15:28:02.724"/>
</kw>
<kw name="Format String" library="String">
<var>${textarea_locator}</var>
<arg>${CARD_TITLE_INPUT}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 15:28:02.725" level="INFO">${textarea_locator} = //h2[text()='Doing']//ancestor::div[contains(@class, 'list-content')]//textarea[contains(@class, 'list-card-composer-textarea')]</msg>
<status status="PASS" starttime="20220704 15:28:02.724" endtime="20220704 15:28:02.725"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 15:28:02.725" endtime="20220704 15:28:02.760"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 15:28:02.760" level="INFO">Clicking element '//h2[text()='Doing']//ancestor::div[contains(@class, 'list-content')]//textarea[contains(@class, 'list-card-composer-textarea')]'.</msg>
<status status="PASS" starttime="20220704 15:28:02.760" endtime="20220704 15:28:02.801"/>
</kw>
<kw name="Clear Element Text" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<doc>Clears the value of the text-input-element identified by ``locator``.</doc>
<status status="PASS" starttime="20220704 15:28:02.801" endtime="20220704 15:28:02.836"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<arg>${card_name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220704 15:28:02.837" level="INFO">Typing text 'card2' into text field '//h2[text()='Doing']//ancestor::div[contains(@class, 'list-content')]//textarea[contains(@class, 'list-card-composer-textarea')]'.</msg>
<status status="PASS" starttime="20220704 15:28:02.836" endtime="20220704 15:28:02.892"/>
</kw>
<kw name="Format String" library="String">
<var>${confirm_locator}</var>
<arg>${CONFIRM_ADD_CARD}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 15:28:02.893" level="INFO">${confirm_locator} = //h2[text()='Doing']//ancestor::div[contains(@class, 'list-content')]//input[@value='Add card']</msg>
<status status="PASS" starttime="20220704 15:28:02.892" endtime="20220704 15:28:02.893"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${confirm_locator}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220704 15:28:02.893" level="INFO">Clicking button '//h2[text()='Doing']//ancestor::div[contains(@class, 'list-content')]//input[@value='Add card']'.</msg>
<status status="PASS" starttime="20220704 15:28:02.893" endtime="20220704 15:28:02.967"/>
</kw>
<status status="PASS" starttime="20220704 15:28:02.616" endtime="20220704 15:28:02.967"/>
</kw>
<kw name="Create Card In List" library="ListComponent">
<arg>Done</arg>
<arg>card3</arg>
<doc>Create a new card in the given list
Required args: list_name, card_name</doc>
<kw name="Format String" library="String">
<var>${add_card_locator}</var>
<arg>${LIST_ADD_CARD}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 15:28:02.968" level="INFO">${add_card_locator} = //h2[text()='Done']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Add a card')]</msg>
<status status="PASS" starttime="20220704 15:28:02.968" endtime="20220704 15:28:02.968"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${add_card_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 15:28:02.968" endtime="20220704 15:28:03.010"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${add_card_locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 15:28:03.011" level="INFO">Clicking element '//h2[text()='Done']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'Add a card')]'.</msg>
<status status="PASS" starttime="20220704 15:28:03.011" endtime="20220704 15:28:03.058"/>
</kw>
<kw name="Format String" library="String">
<var>${textarea_locator}</var>
<arg>${CARD_TITLE_INPUT}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 15:28:03.059" level="INFO">${textarea_locator} = //h2[text()='Done']//ancestor::div[contains(@class, 'list-content')]//textarea[contains(@class, 'list-card-composer-textarea')]</msg>
<status status="PASS" starttime="20220704 15:28:03.058" endtime="20220704 15:28:03.059"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 15:28:03.059" endtime="20220704 15:28:03.100"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 15:28:03.100" level="INFO">Clicking element '//h2[text()='Done']//ancestor::div[contains(@class, 'list-content')]//textarea[contains(@class, 'list-card-composer-textarea')]'.</msg>
<status status="PASS" starttime="20220704 15:28:03.100" endtime="20220704 15:28:03.146"/>
</kw>
<kw name="Clear Element Text" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<doc>Clears the value of the text-input-element identified by ``locator``.</doc>
<status status="PASS" starttime="20220704 15:28:03.146" endtime="20220704 15:28:03.174"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${textarea_locator}</arg>
<arg>${card_name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220704 15:28:03.175" level="INFO">Typing text 'card3' into text field '//h2[text()='Done']//ancestor::div[contains(@class, 'list-content')]//textarea[contains(@class, 'list-card-composer-textarea')]'.</msg>
<status status="PASS" starttime="20220704 15:28:03.174" endtime="20220704 15:28:03.273"/>
</kw>
<kw name="Format String" library="String">
<var>${confirm_locator}</var>
<arg>${CONFIRM_ADD_CARD}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 15:28:03.274" level="INFO">${confirm_locator} = //h2[text()='Done']//ancestor::div[contains(@class, 'list-content')]//input[@value='Add card']</msg>
<status status="PASS" starttime="20220704 15:28:03.274" endtime="20220704 15:28:03.274"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${confirm_locator}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220704 15:28:03.275" level="INFO">Clicking button '//h2[text()='Done']//ancestor::div[contains(@class, 'list-content')]//input[@value='Add card']'.</msg>
<status status="PASS" starttime="20220704 15:28:03.274" endtime="20220704 15:28:03.361"/>
</kw>
<status status="PASS" starttime="20220704 15:28:02.967" endtime="20220704 15:28:03.361"/>
</kw>
<kw name="Enter To Filter Menu" library="TopBar">
<doc>accesing to the filter menu</doc>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${FILTER_BUTTON}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 15:28:03.362" level="INFO">Clicking element 'xpath://button[@data-test-id='filter-popover-button']'.</msg>
<status status="PASS" starttime="20220704 15:28:03.362" endtime="20220704 15:28:03.479"/>
</kw>
<status status="PASS" starttime="20220704 15:28:03.361" endtime="20220704 15:28:03.479"/>
</kw>
<kw name="Click no labels filter" library="FilterModal">
<doc>filters all cards with labes</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${NO_LABELS_FILTER}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 15:28:03.479" endtime="20220704 15:28:03.604"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${NO_LABELS_FILTER}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 15:28:03.604" level="INFO">Clicking element '//span[@aria-label='LabelIcon']'.</msg>
<status status="PASS" starttime="20220704 15:28:03.604" endtime="20220704 15:28:03.764"/>
</kw>
<status status="PASS" starttime="20220704 15:28:03.479" endtime="20220704 15:28:03.764"/>
</kw>
<kw name="Card Should Not Be In List" library="ListComponent">
<arg>card1</arg>
<arg>To Do</arg>
<doc>Check that a card is visible and in the given list
required: card_name, list_name</doc>
<kw name="Format String" library="String">
<var>${card_locator}</var>
<arg>${LIST_CARD_NAME}</arg>
<arg>list_name=${list_name}</arg>
<arg>card_name=${card_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 15:28:03.765" level="INFO">${card_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'card1')]</msg>
<status status="PASS" starttime="20220704 15:28:03.764" endtime="20220704 15:28:03.765"/>
</kw>
<kw name="Element Should Not Be Visible" library="SeleniumLibrary">
<arg>${card_locator}</arg>
<doc>Verifies that the element identified by ``locator`` is NOT visible.</doc>
<msg timestamp="20220704 15:28:03.822" level="INFO">Element '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'card1')]' exists but is not displayed.</msg>
<status status="PASS" starttime="20220704 15:28:03.765" endtime="20220704 15:28:03.823"/>
</kw>
<status status="PASS" starttime="20220704 15:28:03.764" endtime="20220704 15:28:03.823"/>
</kw>
<kw name="Click no labels filter" library="FilterModal">
<doc>filters all cards with labes</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${NO_LABELS_FILTER}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 15:28:03.823" endtime="20220704 15:28:03.880"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${NO_LABELS_FILTER}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 15:28:03.881" level="INFO">Clicking element '//span[@aria-label='LabelIcon']'.</msg>
<status status="PASS" starttime="20220704 15:28:03.880" endtime="20220704 15:28:03.983"/>
</kw>
<status status="PASS" starttime="20220704 15:28:03.823" endtime="20220704 15:28:03.983"/>
</kw>
<kw name="Card Should Be In List" library="ListComponent">
<arg>card1</arg>
<arg>To Do</arg>
<doc>Check that a card is visible and in the given list
required: card_name, list_name</doc>
<kw name="Format String" library="String">
<var>${card_locator}</var>
<arg>${LIST_CARD_NAME}</arg>
<arg>list_name=${list_name}</arg>
<arg>card_name=${card_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 15:28:03.984" level="INFO">${card_locator} = //h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'card1')]</msg>
<status status="PASS" starttime="20220704 15:28:03.984" endtime="20220704 15:28:03.984"/>
</kw>
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<arg>${card_locator}</arg>
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<msg timestamp="20220704 15:28:04.034" level="INFO">Element '//h2[text()='To Do']//ancestor::div[contains(@class, 'list-content')]//a[contains(.,'card1')]' is displayed.</msg>
<status status="PASS" starttime="20220704 15:28:03.984" endtime="20220704 15:28:04.034"/>
</kw>
<status status="PASS" starttime="20220704 15:28:03.983" endtime="20220704 15:28:04.034"/>
</kw>
<kw name="Close Browser" library="SeleniumLibrary" type="TEARDOWN">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20220704 15:28:04.034" endtime="20220704 15:28:04.120"/>
</kw>
<doc>check filter card by label function</doc>
<tag>gui</tag>
<tag>list.create</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220704 15:27:43.865" endtime="20220704 15:28:04.121"/>
</test>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Teardown Board</arg>
<arg>Delete All Sessions</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Teardown Board">
<doc>Deletes used board for teardown</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 15:28:04.124" level="INFO">${url} = boards/62c306efb3b4626aaa008472</msg>
<status status="PASS" starttime="20220704 15:28:04.124" endtime="20220704 15:28:04.124"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 15:28:04.477" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:28:04.124" endtime="20220704 15:28:04.477"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:28:04.477" endtime="20220704 15:28:04.477"/>
</return>
<msg timestamp="20220704 15:28:04.478" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:28:04.123" endtime="20220704 15:28:04.478"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:28:04.478" endtime="20220704 15:28:04.478"/>
</return>
<status status="PASS" starttime="20220704 15:28:04.123" endtime="20220704 15:28:04.478"/>
</kw>
<status status="PASS" starttime="20220704 15:28:04.123" endtime="20220704 15:28:04.478"/>
</kw>
<status status="PASS" starttime="20220704 15:28:04.123" endtime="20220704 15:28:04.478"/>
</kw>
<kw name="Delete All Sessions" library="request_own_library">
<status status="PASS" starttime="20220704 15:28:04.478" endtime="20220704 15:28:04.479"/>
</kw>
<status status="PASS" starttime="20220704 15:28:04.122" endtime="20220704 15:28:04.479"/>
</kw>
<doc>Label Tests</doc>
<status status="PASS" starttime="20220704 15:27:43.643" endtime="20220704 15:28:04.480"/>
</suite>
<suite id="s1-s8-s1-s4" name="Trello Gui Lists" source="/trello/gui/trello_gui_lists.robot">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Create Trello Session</arg>
<arg>Setup Board</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Create Trello Session" library="TrelloAPI">
<doc>Creates a Trello Session</doc>
<kw name="Create Session" library="request_own_library">
<arg>${API_BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<status status="PASS" starttime="20220704 15:28:04.493" endtime="20220704 15:28:04.493"/>
</kw>
<status status="PASS" starttime="20220704 15:28:04.492" endtime="20220704 15:28:04.493"/>
</kw>
<kw name="Setup Board">
<doc>Creates a board and saves its ID</doc>
<kw name="Create A Board" library="Board">
<var>${BOARD}</var>
<arg>TestBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 15:28:04.494" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 15:28:04.494" endtime="20220704 15:28:04.494"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 15:28:04.494" endtime="20220704 15:28:04.494"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 15:28:04.495" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220704 15:28:04.494" endtime="20220704 15:28:04.495"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 15:28:04.718" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:28:04.495" endtime="20220704 15:28:04.719"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:28:04.719" endtime="20220704 15:28:04.719"/>
</return>
<msg timestamp="20220704 15:28:04.719" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:28:04.493" endtime="20220704 15:28:04.719"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:28:04.719" endtime="20220704 15:28:04.719"/>
</return>
<msg timestamp="20220704 15:28:04.719" level="INFO">${BOARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:28:04.493" endtime="20220704 15:28:04.719"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_BOARD_ID}</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220704 15:28:04.721" level="INFO">${TEST_SUITE_BOARD_ID} = 62c307040d09570a43a20a69</msg>
<status status="PASS" starttime="20220704 15:28:04.719" endtime="20220704 15:28:04.721"/>
</kw>
<status status="PASS" starttime="20220704 15:28:04.493" endtime="20220704 15:28:04.721"/>
</kw>
<status status="PASS" starttime="20220704 15:28:04.492" endtime="20220704 15:28:04.721"/>
</kw>
<test id="s1-s8-s1-s4-t1" name="create list" line="18">
<kw name="Open Browser From Environment" library="CommonGUI">
<arg>${LOGIN_URL}</arg>
<doc>This keywords takes REMOTE and BROWSER variables
from the environment automatically and only needs a url</doc>
<if>
<branch type="IF" condition="${is_remote}">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${url}</arg>
<arg>${BROWSER}</arg>
<arg>remote_url=http://selenium-hub:4444</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20220704 15:28:04.722" level="INFO">Opening browser 'chrome' to base url 'https://trello.com/login' through remote server at 'http://selenium-hub:4444'.</msg>
<status status="PASS" starttime="20220704 15:28:04.722" endtime="20220704 15:28:05.626"/>
</kw>
<status status="PASS" starttime="20220704 15:28:04.722" endtime="20220704 15:28:05.626"/>
</branch>
<branch type="ELSE">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${url}</arg>
<arg>${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<status status="NOT RUN" starttime="20220704 15:28:05.627" endtime="20220704 15:28:05.627"/>
</kw>
<status status="NOT RUN" starttime="20220704 15:28:05.626" endtime="20220704 15:28:05.627"/>
</branch>
<status status="PASS" starttime="20220704 15:28:04.722" endtime="20220704 15:28:05.627"/>
</if>
<status status="PASS" starttime="20220704 15:28:04.721" endtime="20220704 15:28:05.627"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20220704 15:28:05.627" endtime="20220704 15:28:05.738"/>
</kw>
<kw name="Login To Trello" library="LoginPage">
<arg>${DEFAULT_EMAIL}</arg>
<arg>${DEFAULT_PASSWORD}</arg>
<doc>High-level keyword for logging in to Trello</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220704 15:28:05.746" level="INFO">${url} = https://trello.com/login</msg>
<status status="PASS" starttime="20220704 15:28:05.739" endtime="20220704 15:28:05.746"/>
</kw>
<if>
<branch type="IF" condition="'${url}' != '${LOGIN_URL}'">
<kw name="Go To" library="SeleniumLibrary">
<arg>${LOGIN_URL}</arg>
<doc>Navigates the current browser window to the provided ``url``.</doc>
<status status="NOT RUN" starttime="20220704 15:28:05.747" endtime="20220704 15:28:05.747"/>
</kw>
<status status="NOT RUN" starttime="20220704 15:28:05.747" endtime="20220704 15:28:05.747"/>
</branch>
<status status="PASS" starttime="20220704 15:28:05.746" endtime="20220704 15:28:05.747"/>
</if>
<kw name="Enter Username" library="LoginPage">
<arg>${username}</arg>
<doc>Take a username as argument and
enters it in the user_input</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${USER_INPUT}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 15:28:05.747" endtime="20220704 15:28:05.777"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${USER_INPUT}</arg>
<arg>${username}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220704 15:28:05.778" level="INFO">Typing text 'bootcamp04@mailinator.com' into text field 'css:input#user'.</msg>
<status status="PASS" starttime="20220704 15:28:05.777" endtime="20220704 15:28:05.871"/>
</kw>
<status status="PASS" starttime="20220704 15:28:05.747" endtime="20220704 15:28:05.871"/>
</kw>
<kw name="Wait Until Element Is Not Visible" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<doc>Waits until the element ``locator`` is not visible.</doc>
<status status="PASS" starttime="20220704 15:28:05.872" endtime="20220704 15:28:06.594"/>
</kw>
<kw name="Click Login Button" library="LoginPage">
<doc>Clicks Trello's login button if in Trello's
login page, else it clicks Atlassian's</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220704 15:28:06.600" level="INFO">${url} = https://trello.com/login</msg>
<status status="PASS" starttime="20220704 15:28:06.595" endtime="20220704 15:28:06.600"/>
</kw>
<if>
<branch type="IF" condition="'${url}' == '${LOGIN_URL}'">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220704 15:28:06.600" endtime="20220704 15:28:06.644"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220704 15:28:06.645" level="INFO">Clicking button 'css:input#login'.</msg>
<status status="PASS" starttime="20220704 15:28:06.645" endtime="20220704 15:28:07.374"/>
</kw>
<status status="PASS" starttime="20220704 15:28:06.600" endtime="20220704 15:28:07.374"/>
</branch>
<branch type="ELSE">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="NOT RUN" starttime="20220704 15:28:07.374" endtime="20220704 15:28:07.374"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<status status="NOT RUN" starttime="20220704 15:28:07.374" endtime="20220704 15:28:07.375"/>
</kw>
<status status="NOT RUN" starttime="20220704 15:28:07.374" endtime="20220704 15:28:07.375"/>
</branch>
<status status="PASS" starttime="20220704 15:28:06.600" endtime="20220704 15:28:07.375"/>
</if>
<status status="PASS" starttime="20220704 15:28:06.594" endtime="20220704 15:28:07.375"/>
</kw>
<kw name="Wait Until Location Is Atlassian's Login" library="LoginPage">
<doc>Waits for the page redirection when logging in.</doc>
<kw name="Wait Until Location Contains" library="SeleniumLibrary">
<arg>atlassian.com</arg>
<doc>Waits until the current URL contains ``expected``.</doc>
<status status="PASS" starttime="20220704 15:28:07.375" endtime="20220704 15:28:07.387"/>
</kw>
<status status="PASS" starttime="20220704 15:28:07.375" endtime="20220704 15:28:07.387"/>
</kw>
<kw name="Enter Password" library="LoginPage">
<arg>${password}</arg>
<doc>Take a password as argument and
enters it in the password_input</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<arg>timeout=10</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 15:28:07.388" endtime="20220704 15:28:07.421"/>
</kw>
<kw name="Input Password" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<arg>${password}</arg>
<doc>Types the given password into the text field identified by ``locator``.</doc>
<msg timestamp="20220704 15:28:07.421" level="INFO">Typing password into text field 'css:input#password'.</msg>
<msg timestamp="20220704 15:28:07.466" level="INFO">Temporally setting log level to: NONE</msg>
<msg timestamp="20220704 15:28:07.548" level="INFO">Log level changed from NONE to INFO.</msg>
<status status="PASS" starttime="20220704 15:28:07.421" endtime="20220704 15:28:07.548"/>
</kw>
<status status="PASS" starttime="20220704 15:28:07.387" endtime="20220704 15:28:07.549"/>
</kw>
<kw name="Click Login Button" library="LoginPage">
<doc>Clicks Trello's login button if in Trello's
login page, else it clicks Atlassian's</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220704 15:28:07.554" level="INFO">${url} = https://id.atlassian.com/login?application=trello&amp;continue=https%3A%2F%2Ftrello.com%2Fauth%2Fatlassian%2Fcallback%3FreturnUrl%3D%252F%26display%3D%26aaOnboarding%3D%26updateEmail%3D%26traceId%3D62c307...</msg>
<status status="PASS" starttime="20220704 15:28:07.549" endtime="20220704 15:28:07.554"/>
</kw>
<if>
<branch type="IF" condition="'${url}' == '${LOGIN_URL}'">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="NOT RUN" starttime="20220704 15:28:07.555" endtime="20220704 15:28:07.555"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<status status="NOT RUN" starttime="20220704 15:28:07.555" endtime="20220704 15:28:07.555"/>
</kw>
<status status="NOT RUN" starttime="20220704 15:28:07.555" endtime="20220704 15:28:07.555"/>
</branch>
<branch type="ELSE">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220704 15:28:07.555" endtime="20220704 15:28:07.604"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220704 15:28:07.605" level="INFO">Clicking button 'css:button#login-submit'.</msg>
<status status="PASS" starttime="20220704 15:28:07.604" endtime="20220704 15:28:07.686"/>
</kw>
<status status="PASS" starttime="20220704 15:28:07.555" endtime="20220704 15:28:07.686"/>
</branch>
<status status="PASS" starttime="20220704 15:28:07.555" endtime="20220704 15:28:07.686"/>
</if>
<status status="PASS" starttime="20220704 15:28:07.549" endtime="20220704 15:28:07.686"/>
</kw>
<status status="PASS" starttime="20220704 15:28:05.738" endtime="20220704 15:28:07.686"/>
</kw>
<kw name="Go To Board" library="BoardsPage">
<arg>TestBoard</arg>
<doc>Receives the board name and goes to that board's page.</doc>
<kw name="Format String" library="String">
<var>${locator}</var>
<arg>${BOARD_BUTTON}</arg>
<arg>${board_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 15:28:07.687" level="INFO">${locator} = //div[@title="TestBoard"]</msg>
<status status="PASS" starttime="20220704 15:28:07.687" endtime="20220704 15:28:07.687"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 15:28:07.687" endtime="20220704 15:28:10.548"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 15:28:10.549" level="INFO">Clicking element '//div[@title="TestBoard"]'.</msg>
<status status="PASS" starttime="20220704 15:28:10.549" endtime="20220704 15:28:10.869"/>
</kw>
<status status="PASS" starttime="20220704 15:28:07.686" endtime="20220704 15:28:10.869"/>
</kw>
<kw name="Create new list with the name" library="ListComponent">
<arg>NEW_TEST_LIST</arg>
<doc>Create a new list with the given name</doc>
<kw name="Wait Until Page Contains Element" library="SeleniumLibrary">
<arg>${ADD_LIST_BUTTON}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" starttime="20220704 15:28:10.870" endtime="20220704 15:28:11.242"/>
</kw>
<kw name="Click Link" library="SeleniumLibrary">
<arg>${ADD_LIST_BUTTON}</arg>
<doc>Clicks a link identified by ``locator``.</doc>
<msg timestamp="20220704 15:28:11.242" level="INFO">Clicking link 'xpath://a[contains(@Class, 'open-add-list')]'.</msg>
<status status="PASS" starttime="20220704 15:28:11.242" endtime="20220704 15:28:11.382"/>
</kw>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LIST_NAME_INPUT}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220704 15:28:11.382" endtime="20220704 15:28:11.450"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${LIST_NAME_INPUT}</arg>
<arg>${list_name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220704 15:28:11.450" level="INFO">Typing text 'NEW_TEST_LIST' into text field 'xpath://input[@class="list-name-input"]'.</msg>
<status status="PASS" starttime="20220704 15:28:11.450" endtime="20220704 15:28:11.550"/>
</kw>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>${LIST_NAME_INPUT}</arg>
<arg>RETURN</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20220704 15:28:11.550" level="INFO">Sending key(s) ('RETURN',) to xpath://input[@class="list-name-input"] element.</msg>
<msg timestamp="20220704 15:28:11.928" level="INFO">Pressing special key RETURN to element.</msg>
<msg timestamp="20220704 15:28:11.929" level="INFO">Releasing special key RETURN.</msg>
<status status="PASS" starttime="20220704 15:28:11.550" endtime="20220704 15:28:11.961"/>
</kw>
<status status="PASS" starttime="20220704 15:28:10.869" endtime="20220704 15:28:11.961"/>
</kw>
<kw name="Verify That The List Exists" library="ListComponent">
<arg>NEW_TEST_LIST</arg>
<doc>Verify that a given header of a list matches</doc>
<kw name="Format String" library="String">
<var>${list_name_locator}</var>
<arg>${LIST_DIV}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 15:28:11.962" level="INFO">${list_name_locator} = //h2[text()='NEW_TEST_LIST']//ancestor::div[contains(@class, 'list-content')]</msg>
<status status="PASS" starttime="20220704 15:28:11.962" endtime="20220704 15:28:11.962"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${list_name_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 15:28:11.962" endtime="20220704 15:28:11.994"/>
</kw>
<kw name="Page Should Contain Element" library="SeleniumLibrary">
<arg>${list_name_locator}</arg>
<doc>Verifies that element ``locator`` is found on the current page.</doc>
<msg timestamp="20220704 15:28:12.013" level="INFO">Current page contains element '//h2[text()='NEW_TEST_LIST']//ancestor::div[contains(@class, 'list-content')]'.</msg>
<status status="PASS" starttime="20220704 15:28:11.994" endtime="20220704 15:28:12.013"/>
</kw>
<status status="PASS" starttime="20220704 15:28:11.961" endtime="20220704 15:28:12.013"/>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Close a list</arg>
<arg>Close Browser</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Close a list" library="ListComponent">
<doc>archives a list</doc>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LIST_ACTIONS_BUTTON}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220704 15:28:12.014" endtime="20220704 15:28:12.070"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Click Link</arg>
<arg>${LIST_ACTIONS_BUTTON}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Click Link" library="SeleniumLibrary">
<arg>${LIST_ACTIONS_BUTTON}</arg>
<doc>Clicks a link identified by ``locator``.</doc>
<msg timestamp="20220704 15:28:12.071" level="INFO">Clicking link 'xpath://div[@class='js-list list-wrapper'][last()]//a[@aria-label="List actions"]'.</msg>
<status status="PASS" starttime="20220704 15:28:12.071" endtime="20220704 15:28:12.145"/>
</kw>
<status status="PASS" starttime="20220704 15:28:12.071" endtime="20220704 15:28:12.145"/>
</kw>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${CLOSE_LIST_BUTTON}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220704 15:28:12.145" endtime="20220704 15:28:12.207"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Click Link</arg>
<arg>${CLOSE_LIST_BUTTON}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Click Link" library="SeleniumLibrary">
<arg>${CLOSE_LIST_BUTTON}</arg>
<doc>Clicks a link identified by ``locator``.</doc>
<msg timestamp="20220704 15:28:12.208" level="INFO">Clicking link 'xpath://li//a[@class='js-close-list']'.</msg>
<status status="PASS" starttime="20220704 15:28:12.208" endtime="20220704 15:28:12.279"/>
</kw>
<status status="PASS" starttime="20220704 15:28:12.208" endtime="20220704 15:28:12.279"/>
</kw>
<status status="PASS" starttime="20220704 15:28:12.014" endtime="20220704 15:28:12.279"/>
</kw>
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20220704 15:28:12.280" endtime="20220704 15:28:12.367"/>
</kw>
<status status="PASS" starttime="20220704 15:28:12.014" endtime="20220704 15:28:12.367"/>
</kw>
<doc>verify that a list can be created in GUI</doc>
<tag>gui</tag>
<tag>list.create</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220704 15:28:04.721" endtime="20220704 15:28:12.367"/>
</test>
<test id="s1-s8-s1-s4-t2" name="modify name of a list" line="31">
<kw name="Open Browser From Environment" library="CommonGUI">
<arg>${LOGIN_URL}</arg>
<doc>This keywords takes REMOTE and BROWSER variables
from the environment automatically and only needs a url</doc>
<if>
<branch type="IF" condition="${is_remote}">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${url}</arg>
<arg>${BROWSER}</arg>
<arg>remote_url=http://selenium-hub:4444</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20220704 15:28:12.370" level="INFO">Opening browser 'chrome' to base url 'https://trello.com/login' through remote server at 'http://selenium-hub:4444'.</msg>
<status status="PASS" starttime="20220704 15:28:12.370" endtime="20220704 15:28:13.247"/>
</kw>
<status status="PASS" starttime="20220704 15:28:12.369" endtime="20220704 15:28:13.247"/>
</branch>
<branch type="ELSE">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${url}</arg>
<arg>${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<status status="NOT RUN" starttime="20220704 15:28:13.247" endtime="20220704 15:28:13.247"/>
</kw>
<status status="NOT RUN" starttime="20220704 15:28:13.247" endtime="20220704 15:28:13.247"/>
</branch>
<status status="PASS" starttime="20220704 15:28:12.369" endtime="20220704 15:28:13.247"/>
</if>
<status status="PASS" starttime="20220704 15:28:12.369" endtime="20220704 15:28:13.247"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20220704 15:28:13.248" endtime="20220704 15:28:13.354"/>
</kw>
<kw name="Login To Trello" library="LoginPage">
<arg>${DEFAULT_EMAIL}</arg>
<arg>${DEFAULT_PASSWORD}</arg>
<doc>High-level keyword for logging in to Trello</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220704 15:28:13.361" level="INFO">${url} = https://trello.com/login</msg>
<status status="PASS" starttime="20220704 15:28:13.355" endtime="20220704 15:28:13.361"/>
</kw>
<if>
<branch type="IF" condition="'${url}' != '${LOGIN_URL}'">
<kw name="Go To" library="SeleniumLibrary">
<arg>${LOGIN_URL}</arg>
<doc>Navigates the current browser window to the provided ``url``.</doc>
<status status="NOT RUN" starttime="20220704 15:28:13.361" endtime="20220704 15:28:13.361"/>
</kw>
<status status="NOT RUN" starttime="20220704 15:28:13.361" endtime="20220704 15:28:13.361"/>
</branch>
<status status="PASS" starttime="20220704 15:28:13.361" endtime="20220704 15:28:13.361"/>
</if>
<kw name="Enter Username" library="LoginPage">
<arg>${username}</arg>
<doc>Take a username as argument and
enters it in the user_input</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${USER_INPUT}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 15:28:13.362" endtime="20220704 15:28:13.400"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${USER_INPUT}</arg>
<arg>${username}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220704 15:28:13.400" level="INFO">Typing text 'bootcamp04@mailinator.com' into text field 'css:input#user'.</msg>
<status status="PASS" starttime="20220704 15:28:13.400" endtime="20220704 15:28:13.505"/>
</kw>
<status status="PASS" starttime="20220704 15:28:13.362" endtime="20220704 15:28:13.505"/>
</kw>
<kw name="Wait Until Element Is Not Visible" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<doc>Waits until the element ``locator`` is not visible.</doc>
<status status="PASS" starttime="20220704 15:28:13.505" endtime="20220704 15:28:14.204"/>
</kw>
<kw name="Click Login Button" library="LoginPage">
<doc>Clicks Trello's login button if in Trello's
login page, else it clicks Atlassian's</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220704 15:28:14.211" level="INFO">${url} = https://trello.com/login</msg>
<status status="PASS" starttime="20220704 15:28:14.204" endtime="20220704 15:28:14.211"/>
</kw>
<if>
<branch type="IF" condition="'${url}' == '${LOGIN_URL}'">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220704 15:28:14.212" endtime="20220704 15:28:14.254"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220704 15:28:14.255" level="INFO">Clicking button 'css:input#login'.</msg>
<status status="PASS" starttime="20220704 15:28:14.254" endtime="20220704 15:28:15.040"/>
</kw>
<status status="PASS" starttime="20220704 15:28:14.211" endtime="20220704 15:28:15.040"/>
</branch>
<branch type="ELSE">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="NOT RUN" starttime="20220704 15:28:15.040" endtime="20220704 15:28:15.040"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<status status="NOT RUN" starttime="20220704 15:28:15.041" endtime="20220704 15:28:15.041"/>
</kw>
<status status="NOT RUN" starttime="20220704 15:28:15.040" endtime="20220704 15:28:15.041"/>
</branch>
<status status="PASS" starttime="20220704 15:28:14.211" endtime="20220704 15:28:15.041"/>
</if>
<status status="PASS" starttime="20220704 15:28:14.204" endtime="20220704 15:28:15.041"/>
</kw>
<kw name="Wait Until Location Is Atlassian's Login" library="LoginPage">
<doc>Waits for the page redirection when logging in.</doc>
<kw name="Wait Until Location Contains" library="SeleniumLibrary">
<arg>atlassian.com</arg>
<doc>Waits until the current URL contains ``expected``.</doc>
<status status="PASS" starttime="20220704 15:28:15.041" endtime="20220704 15:28:15.062"/>
</kw>
<status status="PASS" starttime="20220704 15:28:15.041" endtime="20220704 15:28:15.062"/>
</kw>
<kw name="Enter Password" library="LoginPage">
<arg>${password}</arg>
<doc>Take a password as argument and
enters it in the password_input</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<arg>timeout=10</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 15:28:15.062" endtime="20220704 15:28:15.114"/>
</kw>
<kw name="Input Password" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<arg>${password}</arg>
<doc>Types the given password into the text field identified by ``locator``.</doc>
<msg timestamp="20220704 15:28:15.114" level="INFO">Typing password into text field 'css:input#password'.</msg>
<msg timestamp="20220704 15:28:15.160" level="INFO">Temporally setting log level to: NONE</msg>
<msg timestamp="20220704 15:28:15.220" level="INFO">Log level changed from NONE to INFO.</msg>
<status status="PASS" starttime="20220704 15:28:15.114" endtime="20220704 15:28:15.221"/>
</kw>
<status status="PASS" starttime="20220704 15:28:15.062" endtime="20220704 15:28:15.221"/>
</kw>
<kw name="Click Login Button" library="LoginPage">
<doc>Clicks Trello's login button if in Trello's
login page, else it clicks Atlassian's</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220704 15:28:15.232" level="INFO">${url} = https://id.atlassian.com/login?application=trello&amp;continue=https%3A%2F%2Ftrello.com%2Fauth%2Fatlassian%2Fcallback%3FreturnUrl%3D%252F%26display%3D%26aaOnboarding%3D%26updateEmail%3D%26traceId%3D62c307...</msg>
<status status="PASS" starttime="20220704 15:28:15.221" endtime="20220704 15:28:15.233"/>
</kw>
<if>
<branch type="IF" condition="'${url}' == '${LOGIN_URL}'">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="NOT RUN" starttime="20220704 15:28:15.233" endtime="20220704 15:28:15.233"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<status status="NOT RUN" starttime="20220704 15:28:15.233" endtime="20220704 15:28:15.233"/>
</kw>
<status status="NOT RUN" starttime="20220704 15:28:15.233" endtime="20220704 15:28:15.233"/>
</branch>
<branch type="ELSE">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220704 15:28:15.233" endtime="20220704 15:28:15.271"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220704 15:28:15.271" level="INFO">Clicking button 'css:button#login-submit'.</msg>
<status status="PASS" starttime="20220704 15:28:15.271" endtime="20220704 15:28:15.371"/>
</kw>
<status status="PASS" starttime="20220704 15:28:15.233" endtime="20220704 15:28:15.371"/>
</branch>
<status status="PASS" starttime="20220704 15:28:15.233" endtime="20220704 15:28:15.371"/>
</if>
<status status="PASS" starttime="20220704 15:28:15.221" endtime="20220704 15:28:15.371"/>
</kw>
<status status="PASS" starttime="20220704 15:28:13.354" endtime="20220704 15:28:15.371"/>
</kw>
<kw name="Go To Board" library="BoardsPage">
<arg>TestBoard</arg>
<doc>Receives the board name and goes to that board's page.</doc>
<kw name="Format String" library="String">
<var>${locator}</var>
<arg>${BOARD_BUTTON}</arg>
<arg>${board_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 15:28:15.372" level="INFO">${locator} = //div[@title="TestBoard"]</msg>
<status status="PASS" starttime="20220704 15:28:15.372" endtime="20220704 15:28:15.372"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 15:28:15.372" endtime="20220704 15:28:18.292"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 15:28:18.292" level="INFO">Clicking element '//div[@title="TestBoard"]'.</msg>
<status status="PASS" starttime="20220704 15:28:18.292" endtime="20220704 15:28:18.609"/>
</kw>
<status status="PASS" starttime="20220704 15:28:15.371" endtime="20220704 15:28:18.609"/>
</kw>
<kw name="Create new list with the name" library="ListComponent">
<arg>TO_MODIFY</arg>
<doc>Create a new list with the given name</doc>
<kw name="Wait Until Page Contains Element" library="SeleniumLibrary">
<arg>${ADD_LIST_BUTTON}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" starttime="20220704 15:28:18.609" endtime="20220704 15:28:19.024"/>
</kw>
<kw name="Click Link" library="SeleniumLibrary">
<arg>${ADD_LIST_BUTTON}</arg>
<doc>Clicks a link identified by ``locator``.</doc>
<msg timestamp="20220704 15:28:19.025" level="INFO">Clicking link 'xpath://a[contains(@Class, 'open-add-list')]'.</msg>
<status status="PASS" starttime="20220704 15:28:19.025" endtime="20220704 15:28:19.165"/>
</kw>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LIST_NAME_INPUT}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220704 15:28:19.166" endtime="20220704 15:28:19.228"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${LIST_NAME_INPUT}</arg>
<arg>${list_name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220704 15:28:19.229" level="INFO">Typing text 'TO_MODIFY' into text field 'xpath://input[@class="list-name-input"]'.</msg>
<status status="PASS" starttime="20220704 15:28:19.228" endtime="20220704 15:28:19.315"/>
</kw>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>${LIST_NAME_INPUT}</arg>
<arg>RETURN</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20220704 15:28:19.316" level="INFO">Sending key(s) ('RETURN',) to xpath://input[@class="list-name-input"] element.</msg>
<msg timestamp="20220704 15:28:19.660" level="INFO">Pressing special key RETURN to element.</msg>
<msg timestamp="20220704 15:28:19.661" level="INFO">Releasing special key RETURN.</msg>
<status status="PASS" starttime="20220704 15:28:19.315" endtime="20220704 15:28:19.691"/>
</kw>
<status status="PASS" starttime="20220704 15:28:18.609" endtime="20220704 15:28:19.691"/>
</kw>
<kw name="Modify the name of a list with" library="ListComponent">
<arg>TO_MODIFY</arg>
<arg>MODIFIED_LIST</arg>
<doc>Modify the name of an existent list</doc>
<kw name="Format String" library="String">
<var>${name_header_instance}</var>
<arg>${LIST_NAME_HEADER}</arg>
<arg>old_name=${old_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 15:28:19.692" level="INFO">${name_header_instance} = xpath://div[@class='list-header js-list-header u-clearfix is-menu-shown' and contains(.,'TO_MODIFY')]</msg>
<status status="PASS" starttime="20220704 15:28:19.692" endtime="20220704 15:28:19.692"/>
</kw>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${name_header_instance}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220704 15:28:19.692" endtime="20220704 15:28:19.742"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${name_header_instance}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 15:28:19.742" level="INFO">Clicking element 'xpath://div[@class='list-header js-list-header u-clearfix is-menu-shown' and contains(.,'TO_MODIFY')]'.</msg>
<status status="PASS" starttime="20220704 15:28:19.742" endtime="20220704 15:28:19.817"/>
</kw>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LIST_NAME_INPUT}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220704 15:28:19.818" endtime="20220704 15:28:19.860"/>
</kw>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>${LIST_NAME_INPUT}</arg>
<arg>BACKSPACE</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20220704 15:28:19.860" level="INFO">Sending key(s) ('BACKSPACE',) to xpath://input[@class="list-name-input"] element.</msg>
<msg timestamp="20220704 15:28:20.166" level="INFO">Pressing special key BACKSPACE to element.</msg>
<msg timestamp="20220704 15:28:20.166" level="INFO">Releasing special key BACKSPACE.</msg>
<status status="PASS" starttime="20220704 15:28:19.860" endtime="20220704 15:28:20.175"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${LIST_TEXT_AREA_NAME}</arg>
<arg>${new_name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220704 15:28:20.175" level="INFO">Typing text 'MODIFIED_LIST' into text field 'xpath://div[@class='js-list list-wrapper'][last()]//textarea'.</msg>
<status status="PASS" starttime="20220704 15:28:20.175" endtime="20220704 15:28:20.278"/>
</kw>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>None</arg>
<arg>RETURN</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20220704 15:28:20.279" level="INFO">Sending key(s) ('RETURN',) to page.</msg>
<msg timestamp="20220704 15:28:20.279" level="INFO">Pressing special key RETURN to browser.</msg>
<msg timestamp="20220704 15:28:20.279" level="INFO">Releasing special key RETURN.</msg>
<status status="PASS" starttime="20220704 15:28:20.278" endtime="20220704 15:28:20.298"/>
</kw>
<status status="PASS" starttime="20220704 15:28:19.692" endtime="20220704 15:28:20.298"/>
</kw>
<kw name="Verify That The List Exists" library="ListComponent">
<arg>MODIFIED_LIST</arg>
<doc>Verify that a given header of a list matches</doc>
<kw name="Format String" library="String">
<var>${list_name_locator}</var>
<arg>${LIST_DIV}</arg>
<arg>list_name=${list_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 15:28:20.299" level="INFO">${list_name_locator} = //h2[text()='MODIFIED_LIST']//ancestor::div[contains(@class, 'list-content')]</msg>
<status status="PASS" starttime="20220704 15:28:20.299" endtime="20220704 15:28:20.299"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${list_name_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 15:28:20.300" endtime="20220704 15:28:20.352"/>
</kw>
<kw name="Page Should Contain Element" library="SeleniumLibrary">
<arg>${list_name_locator}</arg>
<doc>Verifies that element ``locator`` is found on the current page.</doc>
<msg timestamp="20220704 15:28:20.361" level="INFO">Current page contains element '//h2[text()='MODIFIED_LIST']//ancestor::div[contains(@class, 'list-content')]'.</msg>
<status status="PASS" starttime="20220704 15:28:20.352" endtime="20220704 15:28:20.361"/>
</kw>
<status status="PASS" starttime="20220704 15:28:20.299" endtime="20220704 15:28:20.361"/>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Close a list</arg>
<arg>Close Browser</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Close a list" library="ListComponent">
<doc>archives a list</doc>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LIST_ACTIONS_BUTTON}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220704 15:28:20.362" endtime="20220704 15:28:20.400"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Click Link</arg>
<arg>${LIST_ACTIONS_BUTTON}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Click Link" library="SeleniumLibrary">
<arg>${LIST_ACTIONS_BUTTON}</arg>
<doc>Clicks a link identified by ``locator``.</doc>
<msg timestamp="20220704 15:28:20.401" level="INFO">Clicking link 'xpath://div[@class='js-list list-wrapper'][last()]//a[@aria-label="List actions"]'.</msg>
<status status="PASS" starttime="20220704 15:28:20.401" endtime="20220704 15:28:20.482"/>
</kw>
<status status="PASS" starttime="20220704 15:28:20.400" endtime="20220704 15:28:20.482"/>
</kw>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${CLOSE_LIST_BUTTON}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220704 15:28:20.482" endtime="20220704 15:28:20.547"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Click Link</arg>
<arg>${CLOSE_LIST_BUTTON}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Click Link" library="SeleniumLibrary">
<arg>${CLOSE_LIST_BUTTON}</arg>
<doc>Clicks a link identified by ``locator``.</doc>
<msg timestamp="20220704 15:28:20.548" level="INFO">Clicking link 'xpath://li//a[@class='js-close-list']'.</msg>
<status status="PASS" starttime="20220704 15:28:20.548" endtime="20220704 15:28:20.613"/>
</kw>
<status status="PASS" starttime="20220704 15:28:20.547" endtime="20220704 15:28:20.614"/>
</kw>
<status status="PASS" starttime="20220704 15:28:20.362" endtime="20220704 15:28:20.614"/>
</kw>
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20220704 15:28:20.614" endtime="20220704 15:28:20.722"/>
</kw>
<status status="PASS" starttime="20220704 15:28:20.361" endtime="20220704 15:28:20.722"/>
</kw>
<doc>verify that a list name can be modified in GUI</doc>
<tag>gui</tag>
<tag>list.update</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220704 15:28:12.368" endtime="20220704 15:28:20.722"/>
</test>
<test id="s1-s8-s1-s4-t3" name="archive a list" line="45">
<kw name="Open Browser From Environment" library="CommonGUI">
<arg>${LOGIN_URL}</arg>
<doc>This keywords takes REMOTE and BROWSER variables
from the environment automatically and only needs a url</doc>
<if>
<branch type="IF" condition="${is_remote}">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${url}</arg>
<arg>${BROWSER}</arg>
<arg>remote_url=http://selenium-hub:4444</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20220704 15:28:20.725" level="INFO">Opening browser 'chrome' to base url 'https://trello.com/login' through remote server at 'http://selenium-hub:4444'.</msg>
<status status="PASS" starttime="20220704 15:28:20.724" endtime="20220704 15:28:21.641"/>
</kw>
<status status="PASS" starttime="20220704 15:28:20.724" endtime="20220704 15:28:21.641"/>
</branch>
<branch type="ELSE">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${url}</arg>
<arg>${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<status status="NOT RUN" starttime="20220704 15:28:21.642" endtime="20220704 15:28:21.642"/>
</kw>
<status status="NOT RUN" starttime="20220704 15:28:21.641" endtime="20220704 15:28:21.642"/>
</branch>
<status status="PASS" starttime="20220704 15:28:20.724" endtime="20220704 15:28:21.642"/>
</if>
<status status="PASS" starttime="20220704 15:28:20.724" endtime="20220704 15:28:21.642"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20220704 15:28:21.642" endtime="20220704 15:28:21.752"/>
</kw>
<kw name="Login To Trello" library="LoginPage">
<arg>${DEFAULT_EMAIL}</arg>
<arg>${DEFAULT_PASSWORD}</arg>
<doc>High-level keyword for logging in to Trello</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220704 15:28:21.764" level="INFO">${url} = https://trello.com/login</msg>
<status status="PASS" starttime="20220704 15:28:21.752" endtime="20220704 15:28:21.764"/>
</kw>
<if>
<branch type="IF" condition="'${url}' != '${LOGIN_URL}'">
<kw name="Go To" library="SeleniumLibrary">
<arg>${LOGIN_URL}</arg>
<doc>Navigates the current browser window to the provided ``url``.</doc>
<status status="NOT RUN" starttime="20220704 15:28:21.765" endtime="20220704 15:28:21.765"/>
</kw>
<status status="NOT RUN" starttime="20220704 15:28:21.765" endtime="20220704 15:28:21.765"/>
</branch>
<status status="PASS" starttime="20220704 15:28:21.764" endtime="20220704 15:28:21.765"/>
</if>
<kw name="Enter Username" library="LoginPage">
<arg>${username}</arg>
<doc>Take a username as argument and
enters it in the user_input</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${USER_INPUT}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 15:28:21.765" endtime="20220704 15:28:21.799"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${USER_INPUT}</arg>
<arg>${username}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220704 15:28:21.800" level="INFO">Typing text 'bootcamp04@mailinator.com' into text field 'css:input#user'.</msg>
<status status="PASS" starttime="20220704 15:28:21.799" endtime="20220704 15:28:21.901"/>
</kw>
<status status="PASS" starttime="20220704 15:28:21.765" endtime="20220704 15:28:21.901"/>
</kw>
<kw name="Wait Until Element Is Not Visible" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<doc>Waits until the element ``locator`` is not visible.</doc>
<status status="PASS" starttime="20220704 15:28:21.901" endtime="20220704 15:28:22.610"/>
</kw>
<kw name="Click Login Button" library="LoginPage">
<doc>Clicks Trello's login button if in Trello's
login page, else it clicks Atlassian's</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220704 15:28:22.615" level="INFO">${url} = https://trello.com/login</msg>
<status status="PASS" starttime="20220704 15:28:22.610" endtime="20220704 15:28:22.615"/>
</kw>
<if>
<branch type="IF" condition="'${url}' == '${LOGIN_URL}'">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220704 15:28:22.616" endtime="20220704 15:28:22.653"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220704 15:28:22.654" level="INFO">Clicking button 'css:input#login'.</msg>
<status status="PASS" starttime="20220704 15:28:22.653" endtime="20220704 15:28:23.474"/>
</kw>
<status status="PASS" starttime="20220704 15:28:22.616" endtime="20220704 15:28:23.474"/>
</branch>
<branch type="ELSE">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="NOT RUN" starttime="20220704 15:28:23.474" endtime="20220704 15:28:23.474"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<status status="NOT RUN" starttime="20220704 15:28:23.474" endtime="20220704 15:28:23.474"/>
</kw>
<status status="NOT RUN" starttime="20220704 15:28:23.474" endtime="20220704 15:28:23.474"/>
</branch>
<status status="PASS" starttime="20220704 15:28:22.615" endtime="20220704 15:28:23.474"/>
</if>
<status status="PASS" starttime="20220704 15:28:22.610" endtime="20220704 15:28:23.474"/>
</kw>
<kw name="Wait Until Location Is Atlassian's Login" library="LoginPage">
<doc>Waits for the page redirection when logging in.</doc>
<kw name="Wait Until Location Contains" library="SeleniumLibrary">
<arg>atlassian.com</arg>
<doc>Waits until the current URL contains ``expected``.</doc>
<status status="PASS" starttime="20220704 15:28:23.475" endtime="20220704 15:28:23.496"/>
</kw>
<status status="PASS" starttime="20220704 15:28:23.474" endtime="20220704 15:28:23.496"/>
</kw>
<kw name="Enter Password" library="LoginPage">
<arg>${password}</arg>
<doc>Take a password as argument and
enters it in the password_input</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<arg>timeout=10</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 15:28:23.496" endtime="20220704 15:28:23.530"/>
</kw>
<kw name="Input Password" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<arg>${password}</arg>
<doc>Types the given password into the text field identified by ``locator``.</doc>
<msg timestamp="20220704 15:28:23.531" level="INFO">Typing password into text field 'css:input#password'.</msg>
<msg timestamp="20220704 15:28:23.589" level="INFO">Temporally setting log level to: NONE</msg>
<msg timestamp="20220704 15:28:23.657" level="INFO">Log level changed from NONE to INFO.</msg>
<status status="PASS" starttime="20220704 15:28:23.530" endtime="20220704 15:28:23.657"/>
</kw>
<status status="PASS" starttime="20220704 15:28:23.496" endtime="20220704 15:28:23.657"/>
</kw>
<kw name="Click Login Button" library="LoginPage">
<doc>Clicks Trello's login button if in Trello's
login page, else it clicks Atlassian's</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220704 15:28:23.670" level="INFO">${url} = https://id.atlassian.com/login?application=trello&amp;continue=https%3A%2F%2Ftrello.com%2Fauth%2Fatlassian%2Fcallback%3FreturnUrl%3D%252F%26display%3D%26aaOnboarding%3D%26updateEmail%3D%26traceId%3D62c307...</msg>
<status status="PASS" starttime="20220704 15:28:23.657" endtime="20220704 15:28:23.670"/>
</kw>
<if>
<branch type="IF" condition="'${url}' == '${LOGIN_URL}'">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="NOT RUN" starttime="20220704 15:28:23.670" endtime="20220704 15:28:23.670"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<status status="NOT RUN" starttime="20220704 15:28:23.670" endtime="20220704 15:28:23.671"/>
</kw>
<status status="NOT RUN" starttime="20220704 15:28:23.670" endtime="20220704 15:28:23.671"/>
</branch>
<branch type="ELSE">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220704 15:28:23.671" endtime="20220704 15:28:23.710"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220704 15:28:23.711" level="INFO">Clicking button 'css:button#login-submit'.</msg>
<status status="PASS" starttime="20220704 15:28:23.710" endtime="20220704 15:28:23.808"/>
</kw>
<status status="PASS" starttime="20220704 15:28:23.671" endtime="20220704 15:28:23.808"/>
</branch>
<status status="PASS" starttime="20220704 15:28:23.670" endtime="20220704 15:28:23.808"/>
</if>
<status status="PASS" starttime="20220704 15:28:23.657" endtime="20220704 15:28:23.808"/>
</kw>
<status status="PASS" starttime="20220704 15:28:21.752" endtime="20220704 15:28:23.808"/>
</kw>
<kw name="Go To Board" library="BoardsPage">
<arg>TestBoard</arg>
<doc>Receives the board name and goes to that board's page.</doc>
<kw name="Format String" library="String">
<var>${locator}</var>
<arg>${BOARD_BUTTON}</arg>
<arg>${board_name}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 15:28:23.809" level="INFO">${locator} = //div[@title="TestBoard"]</msg>
<status status="PASS" starttime="20220704 15:28:23.809" endtime="20220704 15:28:23.809"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 15:28:23.809" endtime="20220704 15:28:26.793"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220704 15:28:26.793" level="INFO">Clicking element '//div[@title="TestBoard"]'.</msg>
<status status="PASS" starttime="20220704 15:28:26.793" endtime="20220704 15:28:27.091"/>
</kw>
<status status="PASS" starttime="20220704 15:28:23.808" endtime="20220704 15:28:27.091"/>
</kw>
<kw name="Create new list with the name" library="ListComponent">
<arg>TO_ARCHIVE</arg>
<doc>Create a new list with the given name</doc>
<kw name="Wait Until Page Contains Element" library="SeleniumLibrary">
<arg>${ADD_LIST_BUTTON}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" starttime="20220704 15:28:27.091" endtime="20220704 15:28:27.495"/>
</kw>
<kw name="Click Link" library="SeleniumLibrary">
<arg>${ADD_LIST_BUTTON}</arg>
<doc>Clicks a link identified by ``locator``.</doc>
<msg timestamp="20220704 15:28:27.495" level="INFO">Clicking link 'xpath://a[contains(@Class, 'open-add-list')]'.</msg>
<status status="PASS" starttime="20220704 15:28:27.495" endtime="20220704 15:28:27.632"/>
</kw>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LIST_NAME_INPUT}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220704 15:28:27.632" endtime="20220704 15:28:27.684"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${LIST_NAME_INPUT}</arg>
<arg>${list_name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220704 15:28:27.685" level="INFO">Typing text 'TO_ARCHIVE' into text field 'xpath://input[@class="list-name-input"]'.</msg>
<status status="PASS" starttime="20220704 15:28:27.685" endtime="20220704 15:28:27.770"/>
</kw>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>${LIST_NAME_INPUT}</arg>
<arg>RETURN</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20220704 15:28:27.771" level="INFO">Sending key(s) ('RETURN',) to xpath://input[@class="list-name-input"] element.</msg>
<msg timestamp="20220704 15:28:28.057" level="INFO">Pressing special key RETURN to element.</msg>
<msg timestamp="20220704 15:28:28.057" level="INFO">Releasing special key RETURN.</msg>
<status status="PASS" starttime="20220704 15:28:27.770" endtime="20220704 15:28:28.083"/>
</kw>
<status status="PASS" starttime="20220704 15:28:27.091" endtime="20220704 15:28:28.083"/>
</kw>
<kw name="Close a list" library="ListComponent">
<doc>archives a list</doc>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LIST_ACTIONS_BUTTON}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220704 15:28:28.084" endtime="20220704 15:28:28.157"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Click Link</arg>
<arg>${LIST_ACTIONS_BUTTON}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Click Link" library="SeleniumLibrary">
<arg>${LIST_ACTIONS_BUTTON}</arg>
<doc>Clicks a link identified by ``locator``.</doc>
<msg timestamp="20220704 15:28:28.158" level="INFO">Clicking link 'xpath://div[@class='js-list list-wrapper'][last()]//a[@aria-label="List actions"]'.</msg>
<status status="PASS" starttime="20220704 15:28:28.157" endtime="20220704 15:28:28.318"/>
</kw>
<status status="PASS" starttime="20220704 15:28:28.157" endtime="20220704 15:28:28.318"/>
</kw>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${CLOSE_LIST_BUTTON}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220704 15:28:28.318" endtime="20220704 15:28:28.403"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Click Link</arg>
<arg>${CLOSE_LIST_BUTTON}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Click Link" library="SeleniumLibrary">
<arg>${CLOSE_LIST_BUTTON}</arg>
<doc>Clicks a link identified by ``locator``.</doc>
<msg timestamp="20220704 15:28:28.404" level="INFO">Clicking link 'xpath://li//a[@class='js-close-list']'.</msg>
<status status="PASS" starttime="20220704 15:28:28.404" endtime="20220704 15:28:28.478"/>
</kw>
<status status="PASS" starttime="20220704 15:28:28.403" endtime="20220704 15:28:28.478"/>
</kw>
<status status="PASS" starttime="20220704 15:28:28.083" endtime="20220704 15:28:28.478"/>
</kw>
<kw name="Enter to the side menu" library="TopBar">
<doc>accesing to the archive menu in the sidebar</doc>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${SHOW_MENU_BUTTON}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220704 15:28:28.478" endtime="20220704 15:28:28.526"/>
</kw>
<kw name="Click Link" library="SeleniumLibrary">
<arg>${SHOW_MENU_BUTTON}</arg>
<doc>Clicks a link identified by ``locator``.</doc>
<msg timestamp="20220704 15:28:28.526" level="INFO">Clicking link 'xpath://div[contains(@class, 'board-header')]//a[contains(., 'Show menu')]'.</msg>
<status status="PASS" starttime="20220704 15:28:28.526" endtime="20220704 15:28:28.599"/>
</kw>
<status status="PASS" starttime="20220704 15:28:28.478" endtime="20220704 15:28:28.599"/>
</kw>
<kw name="Enter to the list archive" library="ShownMenu">
<doc>accesing to the archive menu in the sidebar</doc>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${MORE_OPTIONS_SIDEBAR}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220704 15:28:28.599" endtime="20220704 15:28:28.648"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Click Link</arg>
<arg>${MORE_OPTIONS_SIDEBAR}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Click Link" library="SeleniumLibrary">
<arg>${MORE_OPTIONS_SIDEBAR}</arg>
<doc>Clicks a link identified by ``locator``.</doc>
<msg timestamp="20220704 15:28:28.649" level="INFO">Clicking link 'xpath://a[contains(@class,'board-menu-navigation-item-link') and contains(.,'More')]'.</msg>
<status status="PASS" starttime="20220704 15:28:28.649" endtime="20220704 15:28:28.774"/>
</kw>
<status status="PASS" starttime="20220704 15:28:28.649" endtime="20220704 15:28:28.774"/>
</kw>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${ARCHIVED_ITEMS_BUTTON}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220704 15:28:28.775" endtime="20220704 15:28:28.816"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Click Link</arg>
<arg>${ARCHIVED_ITEMS_BUTTON}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Click Link" library="SeleniumLibrary">
<arg>${ARCHIVED_ITEMS_BUTTON}</arg>
<doc>Clicks a link identified by ``locator``.</doc>
<msg timestamp="20220704 15:28:28.817" level="INFO">Clicking link 'xpath://a[contains(@class, 'js-open-archive')]'.</msg>
<status status="PASS" starttime="20220704 15:28:28.816" endtime="20220704 15:28:28.896"/>
</kw>
<status status="PASS" starttime="20220704 15:28:28.816" endtime="20220704 15:28:28.896"/>
</kw>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${SWITCH_TO_LIST_BUTTON}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220704 15:28:28.896" endtime="20220704 15:28:28.945"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Click Link</arg>
<arg>${SWITCH_TO_LIST_BUTTON}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Click Link" library="SeleniumLibrary">
<arg>${SWITCH_TO_LIST_BUTTON}</arg>
<doc>Clicks a link identified by ``locator``.</doc>
<msg timestamp="20220704 15:28:28.946" level="INFO">Clicking link 'xpath://div[@class='archive-controls']/a[contains(.,'Switch to lists')]'.</msg>
<status status="PASS" starttime="20220704 15:28:28.946" endtime="20220704 15:28:28.998"/>
</kw>
<status status="PASS" starttime="20220704 15:28:28.946" endtime="20220704 15:28:28.998"/>
</kw>
<status status="PASS" starttime="20220704 15:28:28.599" endtime="20220704 15:28:28.998"/>
</kw>
<kw name="Verify That A List Is In The Archive" library="ShownMenu">
<arg>TO_ARCHIVE</arg>
<doc>Verify that a given header of a list matches</doc>
<kw name="Format String" library="String">
<var>${list_name_locator_archive}</var>
<arg>${ARCHIVED_LIST_NAME_FIELD}</arg>
<arg>archived_list_title=${archived_list_title}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 15:28:28.999" level="INFO">${list_name_locator_archive} = xpath://div[@class='item-name']/span[.='TO_ARCHIVE']</msg>
<status status="PASS" starttime="20220704 15:28:28.998" endtime="20220704 15:28:28.999"/>
</kw>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${list_name_locator_archive}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220704 15:28:28.999" endtime="20220704 15:28:29.263"/>
</kw>
<kw name="Page Should Contain Element" library="SeleniumLibrary">
<arg>${list_name_locator_archive}</arg>
<doc>Verifies that element ``locator`` is found on the current page.</doc>
<msg timestamp="20220704 15:28:29.277" level="INFO">Current page contains element 'xpath://div[@class='item-name']/span[.='TO_ARCHIVE']'.</msg>
<status status="PASS" starttime="20220704 15:28:29.263" endtime="20220704 15:28:29.277"/>
</kw>
<status status="PASS" starttime="20220704 15:28:28.998" endtime="20220704 15:28:29.278"/>
</kw>
<kw name="Close archive tab" library="ShownMenu">
<doc>close sidebar tab</doc>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${CLOSE_SHOW_MENU}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220704 15:28:29.278" endtime="20220704 15:28:29.326"/>
</kw>
<kw name="Click Link" library="SeleniumLibrary">
<arg>${CLOSE_SHOW_MENU}</arg>
<doc>Clicks a link identified by ``locator``.</doc>
<msg timestamp="20220704 15:28:29.327" level="INFO">Clicking link 'xpath://a[@title="Close the board menu."]'.</msg>
<status status="PASS" starttime="20220704 15:28:29.327" endtime="20220704 15:28:29.394"/>
</kw>
<status status="PASS" starttime="20220704 15:28:29.278" endtime="20220704 15:28:29.394"/>
</kw>
<kw name="Close Browser" library="SeleniumLibrary" type="TEARDOWN">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20220704 15:28:29.395" endtime="20220704 15:28:29.485"/>
</kw>
<doc>verify that a list can be archived in GUI</doc>
<tag>gui</tag>
<tag>list.archive</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220704 15:28:20.723" endtime="20220704 15:28:29.486"/>
</test>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Teardown Board</arg>
<arg>Delete All Sessions</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Teardown Board">
<doc>Deletes used board for teardown</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 15:28:29.489" level="INFO">${url} = boards/62c307040d09570a43a20a69</msg>
<status status="PASS" starttime="20220704 15:28:29.489" endtime="20220704 15:28:29.489"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 15:28:29.805" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:28:29.489" endtime="20220704 15:28:29.805"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:28:29.806" endtime="20220704 15:28:29.806"/>
</return>
<msg timestamp="20220704 15:28:29.806" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 15:28:29.488" endtime="20220704 15:28:29.806"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 15:28:29.806" endtime="20220704 15:28:29.806"/>
</return>
<status status="PASS" starttime="20220704 15:28:29.488" endtime="20220704 15:28:29.806"/>
</kw>
<status status="PASS" starttime="20220704 15:28:29.488" endtime="20220704 15:28:29.806"/>
</kw>
<status status="PASS" starttime="20220704 15:28:29.487" endtime="20220704 15:28:29.806"/>
</kw>
<kw name="Delete All Sessions" library="request_own_library">
<status status="PASS" starttime="20220704 15:28:29.806" endtime="20220704 15:28:29.807"/>
</kw>
<status status="PASS" starttime="20220704 15:28:29.487" endtime="20220704 15:28:29.807"/>
</kw>
<doc>List Tests</doc>
<status status="PASS" starttime="20220704 15:28:04.481" endtime="20220704 15:28:29.807"/>
</suite>
<suite id="s1-s8-s1-s5" name="Trello Gui Login" source="/trello/gui/trello_gui_login.robot">
<test id="s1-s8-s1-s5-t1" name="Login With A Valid User and Password" line="7">
<kw name="Open Browser From Environment" library="CommonGUI">
<arg>${LOGIN_URL}</arg>
<doc>This keywords takes REMOTE and BROWSER variables
from the environment automatically and only needs a url</doc>
<if>
<branch type="IF" condition="${is_remote}">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${url}</arg>
<arg>${BROWSER}</arg>
<arg>remote_url=http://selenium-hub:4444</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20220704 15:28:29.817" level="INFO">Opening browser 'chrome' to base url 'https://trello.com/login' through remote server at 'http://selenium-hub:4444'.</msg>
<status status="PASS" starttime="20220704 15:28:29.817" endtime="20220704 15:28:30.791"/>
</kw>
<status status="PASS" starttime="20220704 15:28:29.817" endtime="20220704 15:28:30.791"/>
</branch>
<branch type="ELSE">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${url}</arg>
<arg>${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<status status="NOT RUN" starttime="20220704 15:28:30.791" endtime="20220704 15:28:30.791"/>
</kw>
<status status="NOT RUN" starttime="20220704 15:28:30.791" endtime="20220704 15:28:30.791"/>
</branch>
<status status="PASS" starttime="20220704 15:28:29.817" endtime="20220704 15:28:30.791"/>
</if>
<status status="PASS" starttime="20220704 15:28:29.816" endtime="20220704 15:28:30.791"/>
</kw>
<kw name="Enter Username" library="LoginPage">
<arg>${DEFAULT_EMAIL}</arg>
<doc>Take a username as argument and
enters it in the user_input</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${USER_INPUT}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 15:28:30.792" endtime="20220704 15:28:30.826"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${USER_INPUT}</arg>
<arg>${username}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20220704 15:28:30.826" level="INFO">Typing text 'bootcamp04@mailinator.com' into text field 'css:input#user'.</msg>
<status status="PASS" starttime="20220704 15:28:30.826" endtime="20220704 15:28:30.941"/>
</kw>
<status status="PASS" starttime="20220704 15:28:30.791" endtime="20220704 15:28:30.941"/>
</kw>
<kw name="Wait Until Element Is Not Visible" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<doc>Waits until the element ``locator`` is not visible.</doc>
<status status="PASS" starttime="20220704 15:28:30.941" endtime="20220704 15:28:31.652"/>
</kw>
<kw name="Click Login Button" library="LoginPage">
<doc>Clicks Trello's login button if in Trello's
login page, else it clicks Atlassian's</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220704 15:28:31.658" level="INFO">${url} = https://trello.com/login</msg>
<status status="PASS" starttime="20220704 15:28:31.653" endtime="20220704 15:28:31.659"/>
</kw>
<if>
<branch type="IF" condition="'${url}' == '${LOGIN_URL}'">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220704 15:28:31.659" endtime="20220704 15:28:31.691"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220704 15:28:31.692" level="INFO">Clicking button 'css:input#login'.</msg>
<status status="PASS" starttime="20220704 15:28:31.692" endtime="20220704 15:28:32.386"/>
</kw>
<status status="PASS" starttime="20220704 15:28:31.659" endtime="20220704 15:28:32.386"/>
</branch>
<branch type="ELSE">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="NOT RUN" starttime="20220704 15:28:32.386" endtime="20220704 15:28:32.386"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<status status="NOT RUN" starttime="20220704 15:28:32.386" endtime="20220704 15:28:32.386"/>
</kw>
<status status="NOT RUN" starttime="20220704 15:28:32.386" endtime="20220704 15:28:32.386"/>
</branch>
<status status="PASS" starttime="20220704 15:28:31.659" endtime="20220704 15:28:32.386"/>
</if>
<status status="PASS" starttime="20220704 15:28:31.652" endtime="20220704 15:28:32.386"/>
</kw>
<kw name="Wait Until Location Is Atlassian's Login" library="LoginPage">
<doc>Waits for the page redirection when logging in.</doc>
<kw name="Wait Until Location Contains" library="SeleniumLibrary">
<arg>atlassian.com</arg>
<doc>Waits until the current URL contains ``expected``.</doc>
<status status="PASS" starttime="20220704 15:28:32.387" endtime="20220704 15:28:32.411"/>
</kw>
<status status="PASS" starttime="20220704 15:28:32.387" endtime="20220704 15:28:32.411"/>
</kw>
<kw name="Enter Password" library="LoginPage">
<arg>${DEFAULT_PASSWORD}</arg>
<doc>Take a password as argument and
enters it in the password_input</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<arg>timeout=10</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 15:28:32.412" endtime="20220704 15:28:32.467"/>
</kw>
<kw name="Input Password" library="SeleniumLibrary">
<arg>${PASS_INPUT}</arg>
<arg>${password}</arg>
<doc>Types the given password into the text field identified by ``locator``.</doc>
<msg timestamp="20220704 15:28:32.468" level="INFO">Typing password into text field 'css:input#password'.</msg>
<msg timestamp="20220704 15:28:32.519" level="INFO">Temporally setting log level to: NONE</msg>
<msg timestamp="20220704 15:28:32.589" level="INFO">Log level changed from NONE to INFO.</msg>
<status status="PASS" starttime="20220704 15:28:32.467" endtime="20220704 15:28:32.589"/>
</kw>
<status status="PASS" starttime="20220704 15:28:32.411" endtime="20220704 15:28:32.589"/>
</kw>
<kw name="Click Login Button" library="LoginPage">
<doc>Clicks Trello's login button if in Trello's
login page, else it clicks Atlassian's</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${url}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20220704 15:28:32.595" level="INFO">${url} = https://id.atlassian.com/login?application=trello&amp;continue=https%3A%2F%2Ftrello.com%2Fauth%2Fatlassian%2Fcallback%3FreturnUrl%3D%252F%26display%3D%26aaOnboarding%3D%26updateEmail%3D%26traceId%3D62c307...</msg>
<status status="PASS" starttime="20220704 15:28:32.589" endtime="20220704 15:28:32.595"/>
</kw>
<if>
<branch type="IF" condition="'${url}' == '${LOGIN_URL}'">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="NOT RUN" starttime="20220704 15:28:32.595" endtime="20220704 15:28:32.595"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_TRELLO}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<status status="NOT RUN" starttime="20220704 15:28:32.595" endtime="20220704 15:28:32.595"/>
</kw>
<status status="NOT RUN" starttime="20220704 15:28:32.595" endtime="20220704 15:28:32.595"/>
</branch>
<branch type="ELSE">
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20220704 15:28:32.595" endtime="20220704 15:28:32.643"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${LOGIN_BUTTON_ATLASSIAN}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220704 15:28:32.643" level="INFO">Clicking button 'css:button#login-submit'.</msg>
<status status="PASS" starttime="20220704 15:28:32.643" endtime="20220704 15:28:32.743"/>
</kw>
<status status="PASS" starttime="20220704 15:28:32.595" endtime="20220704 15:28:32.743"/>
</branch>
<status status="PASS" starttime="20220704 15:28:32.595" endtime="20220704 15:28:32.743"/>
</if>
<status status="PASS" starttime="20220704 15:28:32.589" endtime="20220704 15:28:32.743"/>
</kw>
<kw name="Verify Current Page Is Boards Page" library="BoardsPage">
<doc>Assert that the browser is showing the boards page.</doc>
<kw name="Wait Until Location Contains" library="SeleniumLibrary">
<arg>${BOARDS_PATH}</arg>
<doc>Waits until the current URL contains ``expected``.</doc>
<status status="PASS" starttime="20220704 15:28:32.744" endtime="20220704 15:28:35.583"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${YOUR_WORKSPACES}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220704 15:28:35.583" endtime="20220704 15:28:35.619"/>
</kw>
<kw name="Element Text Should Be" library="SeleniumLibrary">
<arg>${YOUR_WORKSPACES}</arg>
<arg>YOUR WORKSPACES</arg>
<doc>Verifies that element ``locator`` contains exact the text ``expected``.</doc>
<msg timestamp="20220704 15:28:35.619" level="INFO">Verifying element 'css:h3.boards-page-section-header-name' contains exact text 'YOUR WORKSPACES'.</msg>
<status status="PASS" starttime="20220704 15:28:35.619" endtime="20220704 15:28:35.645"/>
</kw>
<status status="PASS" starttime="20220704 15:28:32.744" endtime="20220704 15:28:35.645"/>
</kw>
<kw name="Close Browser" library="SeleniumLibrary" type="TEARDOWN">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20220704 15:28:35.645" endtime="20220704 15:28:35.750"/>
</kw>
<doc>Verify that it is possible to login through
Trello's GUI using a valid email and password.</doc>
<tag>gui</tag>
<tag>login</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220704 15:28:29.815" endtime="20220704 15:28:35.750"/>
</test>
<doc>Example Trello Login Test</doc>
<status status="PASS" starttime="20220704 15:28:29.809" endtime="20220704 15:28:35.752"/>
</suite>
<status status="PASS" starttime="20220704 15:26:41.559" endtime="20220704 15:28:35.754"/>
</suite>
<status status="PASS" starttime="20220704 15:26:41.542" endtime="20220704 15:28:35.756"/>
</suite>
<status status="PASS" starttime="N/A" endtime="N/A" elapsedtime="547233"/>
</suite>
<statistics>
<total>
<stat pass="132" fail="0" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="72" fail="0" skip="0">api</stat>
<stat pass="8" fail="0" skip="0">board.create</stat>
<stat pass="8" fail="0" skip="0">board.delete</stat>
<stat pass="4" fail="0" skip="0">board.get</stat>
<stat pass="8" fail="0" skip="0">board.update</stat>
<stat pass="4" fail="0" skip="0">board.update.description</stat>
<stat pass="4" fail="0" skip="0">board.update.name</stat>
<stat pass="4" fail="0" skip="0">card.close</stat>
<stat pass="4" fail="0" skip="0">card.comment</stat>
<stat pass="8" fail="0" skip="0">card.create</stat>
<stat pass="8" fail="0" skip="0">card.delete</stat>
<stat pass="4" fail="0" skip="0">card.drag</stat>
<stat pass="4" fail="0" skip="0">card.move</stat>
<stat pass="4" fail="0" skip="0">card.title_board</stat>
<stat pass="4" fail="0" skip="0">card.update</stat>
<stat pass="4" fail="0" skip="0">checklist.create</stat>
<stat pass="4" fail="0" skip="0">checklist.delete</stat>
<stat pass="4" fail="0" skip="0">checklist.update</stat>
<stat pass="60" fail="0" skip="0">gui</stat>
<stat pass="4" fail="0" skip="0">label.create</stat>
<stat pass="4" fail="0" skip="0">label.delete</stat>
<stat pass="4" fail="0" skip="0">label.get</stat>
<stat pass="4" fail="0" skip="0">label.update</stat>
<stat pass="8" fail="0" skip="0">list.archive</stat>
<stat pass="12" fail="0" skip="0">list.create</stat>
<stat pass="8" fail="0" skip="0">list.update</stat>
<stat pass="4" fail="0" skip="0">login</stat>
<stat pass="36" fail="0" skip="0">regression</stat>
<stat pass="96" fail="0" skip="0">smoke</stat>
</tag>
<suite>
<stat pass="132" fail="0" skip="0" id="s1" name="Trello">Trello</stat>
<stat pass="18" fail="0" skip="0" id="s1-s1" name="Trello">Trello.Trello</stat>
<stat pass="18" fail="0" skip="0" id="s1-s1-s1" name="Api">Trello.Trello.Api</stat>
<stat pass="5" fail="0" skip="0" id="s1-s1-s1-s1" name="Trello Api Boards Tests">Trello.Trello.Api.Trello Api Boards Tests</stat>
<stat pass="4" fail="0" skip="0" id="s1-s1-s1-s2" name="Trello Api Cards Tests">Trello.Trello.Api.Trello Api Cards Tests</stat>
<stat pass="3" fail="0" skip="0" id="s1-s1-s1-s3" name="Trello Api Checklists Tests">Trello.Trello.Api.Trello Api Checklists Tests</stat>
<stat pass="3" fail="0" skip="0" id="s1-s1-s1-s4" name="Trello Api Labels Tests">Trello.Trello.Api.Trello Api Labels Tests</stat>
<stat pass="3" fail="0" skip="0" id="s1-s1-s1-s5" name="Trello Api Lists Tests">Trello.Trello.Api.Trello Api Lists Tests</stat>
<stat pass="15" fail="0" skip="0" id="s1-s2" name="Trello">Trello.Trello</stat>
<stat pass="15" fail="0" skip="0" id="s1-s2-s1" name="Gui">Trello.Trello.Gui</stat>
<stat pass="4" fail="0" skip="0" id="s1-s2-s1-s1" name="Trello Gui Board">Trello.Trello.Gui.Trello Gui Board</stat>
<stat pass="6" fail="0" skip="0" id="s1-s2-s1-s2" name="Trello Gui Cards">Trello.Trello.Gui.Trello Gui Cards</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s1-s3" name="Trello Gui Labels">Trello.Trello.Gui.Trello Gui Labels</stat>
<stat pass="3" fail="0" skip="0" id="s1-s2-s1-s4" name="Trello Gui Lists">Trello.Trello.Gui.Trello Gui Lists</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s1-s5" name="Trello Gui Login">Trello.Trello.Gui.Trello Gui Login</stat>
<stat pass="18" fail="0" skip="0" id="s1-s3" name="Trello">Trello.Trello</stat>
<stat pass="18" fail="0" skip="0" id="s1-s3-s1" name="Api">Trello.Trello.Api</stat>
<stat pass="5" fail="0" skip="0" id="s1-s3-s1-s1" name="Trello Api Boards Tests">Trello.Trello.Api.Trello Api Boards Tests</stat>
<stat pass="4" fail="0" skip="0" id="s1-s3-s1-s2" name="Trello Api Cards Tests">Trello.Trello.Api.Trello Api Cards Tests</stat>
<stat pass="3" fail="0" skip="0" id="s1-s3-s1-s3" name="Trello Api Checklists Tests">Trello.Trello.Api.Trello Api Checklists Tests</stat>
<stat pass="3" fail="0" skip="0" id="s1-s3-s1-s4" name="Trello Api Labels Tests">Trello.Trello.Api.Trello Api Labels Tests</stat>
<stat pass="3" fail="0" skip="0" id="s1-s3-s1-s5" name="Trello Api Lists Tests">Trello.Trello.Api.Trello Api Lists Tests</stat>
<stat pass="15" fail="0" skip="0" id="s1-s4" name="Trello">Trello.Trello</stat>
<stat pass="15" fail="0" skip="0" id="s1-s4-s1" name="Gui">Trello.Trello.Gui</stat>
<stat pass="4" fail="0" skip="0" id="s1-s4-s1-s1" name="Trello Gui Board">Trello.Trello.Gui.Trello Gui Board</stat>
<stat pass="6" fail="0" skip="0" id="s1-s4-s1-s2" name="Trello Gui Cards">Trello.Trello.Gui.Trello Gui Cards</stat>
<stat pass="1" fail="0" skip="0" id="s1-s4-s1-s3" name="Trello Gui Labels">Trello.Trello.Gui.Trello Gui Labels</stat>
<stat pass="3" fail="0" skip="0" id="s1-s4-s1-s4" name="Trello Gui Lists">Trello.Trello.Gui.Trello Gui Lists</stat>
<stat pass="1" fail="0" skip="0" id="s1-s4-s1-s5" name="Trello Gui Login">Trello.Trello.Gui.Trello Gui Login</stat>
<stat pass="18" fail="0" skip="0" id="s1-s5" name="Trello">Trello.Trello</stat>
<stat pass="18" fail="0" skip="0" id="s1-s5-s1" name="Api">Trello.Trello.Api</stat>
<stat pass="5" fail="0" skip="0" id="s1-s5-s1-s1" name="Trello Api Boards Tests">Trello.Trello.Api.Trello Api Boards Tests</stat>
<stat pass="4" fail="0" skip="0" id="s1-s5-s1-s2" name="Trello Api Cards Tests">Trello.Trello.Api.Trello Api Cards Tests</stat>
<stat pass="3" fail="0" skip="0" id="s1-s5-s1-s3" name="Trello Api Checklists Tests">Trello.Trello.Api.Trello Api Checklists Tests</stat>
<stat pass="3" fail="0" skip="0" id="s1-s5-s1-s4" name="Trello Api Labels Tests">Trello.Trello.Api.Trello Api Labels Tests</stat>
<stat pass="3" fail="0" skip="0" id="s1-s5-s1-s5" name="Trello Api Lists Tests">Trello.Trello.Api.Trello Api Lists Tests</stat>
<stat pass="15" fail="0" skip="0" id="s1-s6" name="Trello">Trello.Trello</stat>
<stat pass="15" fail="0" skip="0" id="s1-s6-s1" name="Gui">Trello.Trello.Gui</stat>
<stat pass="4" fail="0" skip="0" id="s1-s6-s1-s1" name="Trello Gui Board">Trello.Trello.Gui.Trello Gui Board</stat>
<stat pass="6" fail="0" skip="0" id="s1-s6-s1-s2" name="Trello Gui Cards">Trello.Trello.Gui.Trello Gui Cards</stat>
<stat pass="1" fail="0" skip="0" id="s1-s6-s1-s3" name="Trello Gui Labels">Trello.Trello.Gui.Trello Gui Labels</stat>
<stat pass="3" fail="0" skip="0" id="s1-s6-s1-s4" name="Trello Gui Lists">Trello.Trello.Gui.Trello Gui Lists</stat>
<stat pass="1" fail="0" skip="0" id="s1-s6-s1-s5" name="Trello Gui Login">Trello.Trello.Gui.Trello Gui Login</stat>
<stat pass="18" fail="0" skip="0" id="s1-s7" name="Trello">Trello.Trello</stat>
<stat pass="18" fail="0" skip="0" id="s1-s7-s1" name="Api">Trello.Trello.Api</stat>
<stat pass="5" fail="0" skip="0" id="s1-s7-s1-s1" name="Trello Api Boards Tests">Trello.Trello.Api.Trello Api Boards Tests</stat>
<stat pass="4" fail="0" skip="0" id="s1-s7-s1-s2" name="Trello Api Cards Tests">Trello.Trello.Api.Trello Api Cards Tests</stat>
<stat pass="3" fail="0" skip="0" id="s1-s7-s1-s3" name="Trello Api Checklists Tests">Trello.Trello.Api.Trello Api Checklists Tests</stat>
<stat pass="3" fail="0" skip="0" id="s1-s7-s1-s4" name="Trello Api Labels Tests">Trello.Trello.Api.Trello Api Labels Tests</stat>
<stat pass="3" fail="0" skip="0" id="s1-s7-s1-s5" name="Trello Api Lists Tests">Trello.Trello.Api.Trello Api Lists Tests</stat>
<stat pass="15" fail="0" skip="0" id="s1-s8" name="Trello">Trello.Trello</stat>
<stat pass="15" fail="0" skip="0" id="s1-s8-s1" name="Gui">Trello.Trello.Gui</stat>
<stat pass="4" fail="0" skip="0" id="s1-s8-s1-s1" name="Trello Gui Board">Trello.Trello.Gui.Trello Gui Board</stat>
<stat pass="6" fail="0" skip="0" id="s1-s8-s1-s2" name="Trello Gui Cards">Trello.Trello.Gui.Trello Gui Cards</stat>
<stat pass="1" fail="0" skip="0" id="s1-s8-s1-s3" name="Trello Gui Labels">Trello.Trello.Gui.Trello Gui Labels</stat>
<stat pass="3" fail="0" skip="0" id="s1-s8-s1-s4" name="Trello Gui Lists">Trello.Trello.Gui.Trello Gui Lists</stat>
<stat pass="1" fail="0" skip="0" id="s1-s8-s1-s5" name="Trello Gui Login">Trello.Trello.Gui.Trello Gui Login</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
