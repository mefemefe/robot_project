<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 5.0.1 (Python 3.10.5 on linux)" generated="20220704 19:39:09.579" rpa="false" schemaversion="3">
<suite id="s1" name="Trello" source="/trello">
<suite id="s1-s1" name="Api" source="/trello/api">
<suite id="s1-s1-s1" name="Trello Api Boards Tests" source="/trello/api/trello_api_boards_tests.robot">
<kw name="Create Trello Session" library="TrelloAPI" type="SETUP">
<doc>Creates a Trello Session</doc>
<kw name="Create Session" library="request_own_library">
<arg>${API_BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<status status="PASS" starttime="20220704 19:39:09.707" endtime="20220704 19:39:09.708"/>
</kw>
<status status="PASS" starttime="20220704 19:39:09.706" endtime="20220704 19:39:09.708"/>
</kw>
<test id="s1-s1-s1-t1" name="CREATE a board" line="9">
<kw name="Create A Board" library="Board">
<var>${response}</var>
<arg>NewBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 19:39:09.709" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 19:39:09.709" endtime="20220704 19:39:09.710"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 19:39:09.710" endtime="20220704 19:39:09.710"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 19:39:09.711" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220704 19:39:09.710" endtime="20220704 19:39:09.711"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 19:39:10.001" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:39:09.711" endtime="20220704 19:39:10.001"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 19:39:10.001" endtime="20220704 19:39:10.001"/>
</return>
<msg timestamp="20220704 19:39:10.002" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:39:09.709" endtime="20220704 19:39:10.002"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 19:39:10.002" endtime="20220704 19:39:10.002"/>
</return>
<msg timestamp="20220704 19:39:10.002" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:39:09.709" endtime="20220704 19:39:10.002"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>board</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220704 19:39:10.003" endtime="20220704 19:39:10.008"/>
</kw>
<status status="PASS" starttime="20220704 19:39:10.002" endtime="20220704 19:39:10.008"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${response.json()}[id]</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${response.json()}[id]</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 19:39:10.010" level="INFO">${url} = boards/62c341ddb7888a5ef22421a7</msg>
<status status="PASS" starttime="20220704 19:39:10.010" endtime="20220704 19:39:10.010"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 19:39:10.312" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:39:10.010" endtime="20220704 19:39:10.312"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 19:39:10.313" endtime="20220704 19:39:10.313"/>
</return>
<msg timestamp="20220704 19:39:10.313" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:39:10.009" endtime="20220704 19:39:10.313"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 19:39:10.313" endtime="20220704 19:39:10.313"/>
</return>
<status status="PASS" starttime="20220704 19:39:10.009" endtime="20220704 19:39:10.313"/>
</kw>
<status status="PASS" starttime="20220704 19:39:10.008" endtime="20220704 19:39:10.313"/>
</kw>
<doc>Verify that a board can be create through API</doc>
<tag>api</tag>
<tag>board.create</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220704 19:39:09.708" endtime="20220704 19:39:10.313"/>
</test>
<test id="s1-s1-s1-t2" name="UPDATE a Board's name" line="16">
<kw name="Create A Board" library="Board">
<var>${response}</var>
<arg>NewBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 19:39:10.315" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 19:39:10.315" endtime="20220704 19:39:10.315"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 19:39:10.315" endtime="20220704 19:39:10.316"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 19:39:10.316" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220704 19:39:10.316" endtime="20220704 19:39:10.316"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 19:39:10.454" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:39:10.317" endtime="20220704 19:39:10.454"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 19:39:10.454" endtime="20220704 19:39:10.454"/>
</return>
<msg timestamp="20220704 19:39:10.454" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:39:10.315" endtime="20220704 19:39:10.454"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 19:39:10.454" endtime="20220704 19:39:10.454"/>
</return>
<msg timestamp="20220704 19:39:10.455" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:39:10.314" endtime="20220704 19:39:10.455"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>board</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220704 19:39:10.455" endtime="20220704 19:39:10.459"/>
</kw>
<status status="PASS" starttime="20220704 19:39:10.455" endtime="20220704 19:39:10.460"/>
</kw>
<kw name="Update A Board" library="Board">
<arg>${response.json()}[id]</arg>
<arg>name</arg>
<arg>NewName</arg>
<doc>Updates the board with the given ID
optional_args: name, desc, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 19:39:10.462" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 19:39:10.461" endtime="20220704 19:39:10.462"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 19:39:10.462" endtime="20220704 19:39:10.462"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 19:39:10.463" level="INFO">${url} = boards/62c341dea8c37809b8508131</msg>
<status status="PASS" starttime="20220704 19:39:10.462" endtime="20220704 19:39:10.463"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 19:39:10.555" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:39:10.463" endtime="20220704 19:39:10.555"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 19:39:10.556" endtime="20220704 19:39:10.556"/>
</return>
<msg timestamp="20220704 19:39:10.556" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:39:10.461" endtime="20220704 19:39:10.556"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 19:39:10.556" endtime="20220704 19:39:10.556"/>
</return>
<status status="PASS" starttime="20220704 19:39:10.460" endtime="20220704 19:39:10.556"/>
</kw>
<kw name="Get A Board" library="Board">
<var>${new_response}</var>
<arg>${response.json()}[id]</arg>
<doc>Gets the Board with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 19:39:10.558" level="INFO">${url} = boards/62c341dea8c37809b8508131</msg>
<status status="PASS" starttime="20220704 19:39:10.558" endtime="20220704 19:39:10.558"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 19:39:10.624" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:39:10.558" endtime="20220704 19:39:10.624"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 19:39:10.624" endtime="20220704 19:39:10.624"/>
</return>
<msg timestamp="20220704 19:39:10.625" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:39:10.557" endtime="20220704 19:39:10.625"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 19:39:10.625" endtime="20220704 19:39:10.625"/>
</return>
<msg timestamp="20220704 19:39:10.625" level="INFO">${new_response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:39:10.556" endtime="20220704 19:39:10.625"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${new_response}</arg>
<arg>board</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220704 19:39:10.626" endtime="20220704 19:39:10.630"/>
</kw>
<status status="PASS" starttime="20220704 19:39:10.626" endtime="20220704 19:39:10.630"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${new_response.json()}[name]</arg>
<arg>NewName</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220704 19:39:10.631" endtime="20220704 19:39:10.631"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${response.json()}[id]</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${response.json()}[id]</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 19:39:10.634" level="INFO">${url} = boards/62c341dea8c37809b8508131</msg>
<status status="PASS" starttime="20220704 19:39:10.633" endtime="20220704 19:39:10.634"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 19:39:11.053" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:39:10.634" endtime="20220704 19:39:11.053"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 19:39:11.053" endtime="20220704 19:39:11.053"/>
</return>
<msg timestamp="20220704 19:39:11.053" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:39:10.633" endtime="20220704 19:39:11.053"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 19:39:11.053" endtime="20220704 19:39:11.053"/>
</return>
<status status="PASS" starttime="20220704 19:39:10.632" endtime="20220704 19:39:11.054"/>
</kw>
<status status="PASS" starttime="20220704 19:39:10.632" endtime="20220704 19:39:11.054"/>
</kw>
<doc>Verify that a board's name can be updated through API</doc>
<tag>api</tag>
<tag>board.update</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220704 19:39:10.314" endtime="20220704 19:39:11.054"/>
</test>
<test id="s1-s1-s1-t3" name="DELETE A Board" line="27">
<kw name="Create A Board" library="Board">
<var>${response}</var>
<arg>NewBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 19:39:11.057" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 19:39:11.057" endtime="20220704 19:39:11.057"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 19:39:11.057" endtime="20220704 19:39:11.057"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 19:39:11.058" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220704 19:39:11.058" endtime="20220704 19:39:11.058"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 19:39:11.204" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:39:11.058" endtime="20220704 19:39:11.204"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 19:39:11.204" endtime="20220704 19:39:11.204"/>
</return>
<msg timestamp="20220704 19:39:11.205" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:39:11.056" endtime="20220704 19:39:11.205"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 19:39:11.205" endtime="20220704 19:39:11.205"/>
</return>
<msg timestamp="20220704 19:39:11.205" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:39:11.056" endtime="20220704 19:39:11.205"/>
</kw>
<kw name="Delete A Board" library="Board">
<arg>${response.json()}[id]</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 19:39:11.207" level="INFO">${url} = boards/62c341df0cd1a8587ce078ab</msg>
<status status="PASS" starttime="20220704 19:39:11.206" endtime="20220704 19:39:11.207"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 19:39:11.539" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:39:11.207" endtime="20220704 19:39:11.539"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 19:39:11.539" endtime="20220704 19:39:11.539"/>
</return>
<msg timestamp="20220704 19:39:11.540" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:39:11.206" endtime="20220704 19:39:11.540"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 19:39:11.540" endtime="20220704 19:39:11.540"/>
</return>
<status status="PASS" starttime="20220704 19:39:11.205" endtime="20220704 19:39:11.540"/>
</kw>
<kw name="Get A Board" library="Board">
<arg>${response.json()}[id]</arg>
<arg>status_code=404</arg>
<doc>Gets the Board with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 19:39:11.542" level="INFO">${url} = boards/62c341df0cd1a8587ce078ab</msg>
<status status="PASS" starttime="20220704 19:39:11.542" endtime="20220704 19:39:11.542"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 19:39:11.575" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220704 19:39:11.542" endtime="20220704 19:39:11.576"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 19:39:11.576" endtime="20220704 19:39:11.576"/>
</return>
<msg timestamp="20220704 19:39:11.576" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220704 19:39:11.541" endtime="20220704 19:39:11.576"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 19:39:11.576" endtime="20220704 19:39:11.576"/>
</return>
<status status="PASS" starttime="20220704 19:39:11.540" endtime="20220704 19:39:11.576"/>
</kw>
<doc>Verify that a board can be deleted through API</doc>
<tag>api</tag>
<tag>board.delete</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220704 19:39:11.054" endtime="20220704 19:39:11.576"/>
</test>
<test id="s1-s1-s1-t4" name="GET Information of A Board" line="34">
<kw name="Create A Board" library="Board">
<var>${response}</var>
<arg>BoardTest</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 19:39:11.579" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 19:39:11.579" endtime="20220704 19:39:11.579"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 19:39:11.579" endtime="20220704 19:39:11.579"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 19:39:11.580" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220704 19:39:11.579" endtime="20220704 19:39:11.580"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 19:39:11.835" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:39:11.580" endtime="20220704 19:39:11.835"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 19:39:11.835" endtime="20220704 19:39:11.835"/>
</return>
<msg timestamp="20220704 19:39:11.835" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:39:11.578" endtime="20220704 19:39:11.835"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 19:39:11.835" endtime="20220704 19:39:11.835"/>
</return>
<msg timestamp="20220704 19:39:11.835" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:39:11.578" endtime="20220704 19:39:11.835"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>board</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220704 19:39:11.836" endtime="20220704 19:39:11.841"/>
</kw>
<status status="PASS" starttime="20220704 19:39:11.836" endtime="20220704 19:39:11.841"/>
</kw>
<kw name="Get A Board" library="Board">
<var>${response2}</var>
<arg>${response.json()}[id]</arg>
<doc>Gets the Board with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 19:39:11.843" level="INFO">${url} = boards/62c341dfa42e226c7b0c09e9</msg>
<status status="PASS" starttime="20220704 19:39:11.842" endtime="20220704 19:39:11.843"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 19:39:11.892" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:39:11.843" endtime="20220704 19:39:11.892"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 19:39:11.892" endtime="20220704 19:39:11.892"/>
</return>
<msg timestamp="20220704 19:39:11.892" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:39:11.842" endtime="20220704 19:39:11.892"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 19:39:11.893" endtime="20220704 19:39:11.893"/>
</return>
<msg timestamp="20220704 19:39:11.893" level="INFO">${response2} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:39:11.841" endtime="20220704 19:39:11.893"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response2}</arg>
<arg>board</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220704 19:39:11.893" endtime="20220704 19:39:11.897"/>
</kw>
<status status="PASS" starttime="20220704 19:39:11.893" endtime="20220704 19:39:11.898"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${response2.json()}[name]</arg>
<arg>BoardTest</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220704 19:39:11.898" endtime="20220704 19:39:11.899"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${response.json()}[id]</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${response.json()}[id]</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 19:39:11.901" level="INFO">${url} = boards/62c341dfa42e226c7b0c09e9</msg>
<status status="PASS" starttime="20220704 19:39:11.901" endtime="20220704 19:39:11.901"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 19:39:12.197" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:39:11.901" endtime="20220704 19:39:12.197"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 19:39:12.197" endtime="20220704 19:39:12.197"/>
</return>
<msg timestamp="20220704 19:39:12.197" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:39:11.900" endtime="20220704 19:39:12.197"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 19:39:12.197" endtime="20220704 19:39:12.197"/>
</return>
<status status="PASS" starttime="20220704 19:39:11.899" endtime="20220704 19:39:12.197"/>
</kw>
<status status="PASS" starttime="20220704 19:39:11.899" endtime="20220704 19:39:12.197"/>
</kw>
<doc>Verify that a board's information can be accesed through API</doc>
<tag>api</tag>
<tag>board.get</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220704 19:39:11.577" endtime="20220704 19:39:12.198"/>
</test>
<test id="s1-s1-s1-t5" name="UPDATE a Board's description" line="45">
<kw name="Create A Board" library="Board">
<var>${response}</var>
<arg>NewBoardForTest</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 19:39:12.200" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 19:39:12.199" endtime="20220704 19:39:12.200"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 19:39:12.200" endtime="20220704 19:39:12.200"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 19:39:12.201" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220704 19:39:12.200" endtime="20220704 19:39:12.201"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 19:39:12.366" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:39:12.201" endtime="20220704 19:39:12.367"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 19:39:12.367" endtime="20220704 19:39:12.367"/>
</return>
<msg timestamp="20220704 19:39:12.367" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:39:12.199" endtime="20220704 19:39:12.367"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 19:39:12.367" endtime="20220704 19:39:12.367"/>
</return>
<msg timestamp="20220704 19:39:12.367" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:39:12.199" endtime="20220704 19:39:12.367"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>board</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220704 19:39:12.368" endtime="20220704 19:39:12.372"/>
</kw>
<status status="PASS" starttime="20220704 19:39:12.367" endtime="20220704 19:39:12.372"/>
</kw>
<kw name="Update A Board" library="Board">
<arg>${response.json()}[id]</arg>
<arg>desc</arg>
<arg>sampleDescription</arg>
<doc>Updates the board with the given ID
optional_args: name, desc, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 19:39:12.374" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 19:39:12.374" endtime="20220704 19:39:12.374"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 19:39:12.374" endtime="20220704 19:39:12.374"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 19:39:12.374" level="INFO">${url} = boards/62c341e0eed7132b1e6d224f</msg>
<status status="PASS" starttime="20220704 19:39:12.374" endtime="20220704 19:39:12.374"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 19:39:12.482" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:39:12.374" endtime="20220704 19:39:12.482"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 19:39:12.482" endtime="20220704 19:39:12.482"/>
</return>
<msg timestamp="20220704 19:39:12.482" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:39:12.373" endtime="20220704 19:39:12.482"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 19:39:12.482" endtime="20220704 19:39:12.482"/>
</return>
<status status="PASS" starttime="20220704 19:39:12.372" endtime="20220704 19:39:12.483"/>
</kw>
<kw name="Get A Board" library="Board">
<var>${new_response}</var>
<arg>${response.json()}[id]</arg>
<doc>Gets the Board with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 19:39:12.485" level="INFO">${url} = boards/62c341e0eed7132b1e6d224f</msg>
<status status="PASS" starttime="20220704 19:39:12.484" endtime="20220704 19:39:12.485"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 19:39:12.531" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:39:12.485" endtime="20220704 19:39:12.531"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 19:39:12.531" endtime="20220704 19:39:12.531"/>
</return>
<msg timestamp="20220704 19:39:12.532" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:39:12.484" endtime="20220704 19:39:12.532"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 19:39:12.532" endtime="20220704 19:39:12.532"/>
</return>
<msg timestamp="20220704 19:39:12.532" level="INFO">${new_response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:39:12.483" endtime="20220704 19:39:12.532"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${new_response.json()}[desc]</arg>
<arg>sampleDescription</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220704 19:39:12.532" endtime="20220704 19:39:12.533"/>
</kw>
<kw name="Update A Board" library="Board">
<arg>${response.json()}[id]</arg>
<arg>desc</arg>
<arg>updatedDescription</arg>
<doc>Updates the board with the given ID
optional_args: name, desc, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 19:39:12.535" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 19:39:12.535" endtime="20220704 19:39:12.535"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 19:39:12.535" endtime="20220704 19:39:12.535"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 19:39:12.535" level="INFO">${url} = boards/62c341e0eed7132b1e6d224f</msg>
<status status="PASS" starttime="20220704 19:39:12.535" endtime="20220704 19:39:12.535"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 19:39:12.620" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:39:12.536" endtime="20220704 19:39:12.620"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 19:39:12.620" endtime="20220704 19:39:12.620"/>
</return>
<msg timestamp="20220704 19:39:12.620" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:39:12.534" endtime="20220704 19:39:12.620"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 19:39:12.620" endtime="20220704 19:39:12.620"/>
</return>
<status status="PASS" starttime="20220704 19:39:12.533" endtime="20220704 19:39:12.620"/>
</kw>
<kw name="Get A Board" library="Board">
<var>${new_response2}</var>
<arg>${response.json()}[id]</arg>
<doc>Gets the Board with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 19:39:12.622" level="INFO">${url} = boards/62c341e0eed7132b1e6d224f</msg>
<status status="PASS" starttime="20220704 19:39:12.622" endtime="20220704 19:39:12.622"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 19:39:12.680" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:39:12.622" endtime="20220704 19:39:12.680"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 19:39:12.680" endtime="20220704 19:39:12.680"/>
</return>
<msg timestamp="20220704 19:39:12.680" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:39:12.621" endtime="20220704 19:39:12.680"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 19:39:12.680" endtime="20220704 19:39:12.680"/>
</return>
<msg timestamp="20220704 19:39:12.681" level="INFO">${new_response2} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:39:12.620" endtime="20220704 19:39:12.681"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${new_response2.json()}[desc]</arg>
<arg>updatedDescription</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220704 19:39:12.681" endtime="20220704 19:39:12.682"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${response.json()}[id]</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${response.json()}[id]</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 19:39:12.684" level="INFO">${url} = boards/62c341e0eed7132b1e6d224f</msg>
<status status="PASS" starttime="20220704 19:39:12.684" endtime="20220704 19:39:12.684"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 19:39:13.025" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:39:12.684" endtime="20220704 19:39:13.025"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 19:39:13.025" endtime="20220704 19:39:13.025"/>
</return>
<msg timestamp="20220704 19:39:13.025" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:39:12.683" endtime="20220704 19:39:13.025"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 19:39:13.025" endtime="20220704 19:39:13.025"/>
</return>
<status status="PASS" starttime="20220704 19:39:12.682" endtime="20220704 19:39:13.025"/>
</kw>
<status status="PASS" starttime="20220704 19:39:12.682" endtime="20220704 19:39:13.025"/>
</kw>
<doc>Verify that a board's description can be updated through API</doc>
<tag>api</tag>
<tag>board.update</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220704 19:39:12.198" endtime="20220704 19:39:13.026"/>
</test>
<kw name="Delete All Sessions" library="request_own_library" type="TEARDOWN">
<status status="PASS" starttime="20220704 19:39:13.026" endtime="20220704 19:39:13.027"/>
</kw>
<doc>Example Test with Trello API Boards</doc>
<status status="PASS" starttime="20220704 19:39:09.599" endtime="20220704 19:39:13.028"/>
</suite>
<suite id="s1-s1-s2" name="Trello Api Cards Tests" source="/trello/api/trello_api_cards_tests.robot">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Create Trello Session</arg>
<arg>Setup Board And List</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Create Trello Session" library="TrelloAPI">
<doc>Creates a Trello Session</doc>
<kw name="Create Session" library="request_own_library">
<arg>${API_BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<status status="PASS" starttime="20220704 19:39:13.044" endtime="20220704 19:39:13.045"/>
</kw>
<status status="PASS" starttime="20220704 19:39:13.044" endtime="20220704 19:39:13.045"/>
</kw>
<kw name="Setup Board And List">
<doc>Create a board and save its ID and its first list's ID</doc>
<kw name="Create A Board" library="Board">
<var>${BOARD}</var>
<arg>TestBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 19:39:13.046" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 19:39:13.046" endtime="20220704 19:39:13.046"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 19:39:13.046" endtime="20220704 19:39:13.046"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 19:39:13.047" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220704 19:39:13.046" endtime="20220704 19:39:13.047"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 19:39:13.232" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:39:13.047" endtime="20220704 19:39:13.232"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 19:39:13.232" endtime="20220704 19:39:13.232"/>
</return>
<msg timestamp="20220704 19:39:13.232" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:39:13.045" endtime="20220704 19:39:13.232"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 19:39:13.232" endtime="20220704 19:39:13.232"/>
</return>
<msg timestamp="20220704 19:39:13.233" level="INFO">${BOARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:39:13.045" endtime="20220704 19:39:13.233"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_BOARD_ID}</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220704 19:39:13.234" level="INFO">${TEST_SUITE_BOARD_ID} = 62c341e113ed2a51b1539e04</msg>
<status status="PASS" starttime="20220704 19:39:13.233" endtime="20220704 19:39:13.234"/>
</kw>
<kw name="Get Lists On A Board" library="Board">
<var>${LISTS}</var>
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Get all the lists in a board</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>lists_on_board</arg>
<arg>${id}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 19:39:13.235" level="INFO">${url} = boards/62c341e113ed2a51b1539e04/lists/</msg>
<status status="PASS" starttime="20220704 19:39:13.235" endtime="20220704 19:39:13.235"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 19:39:13.290" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:39:13.235" endtime="20220704 19:39:13.290"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 19:39:13.290" endtime="20220704 19:39:13.290"/>
</return>
<msg timestamp="20220704 19:39:13.290" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:39:13.234" endtime="20220704 19:39:13.290"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 19:39:13.290" endtime="20220704 19:39:13.290"/>
</return>
<msg timestamp="20220704 19:39:13.291" level="INFO">${LISTS} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:39:13.234" endtime="20220704 19:39:13.291"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_LIST_ID}</arg>
<arg>${LISTS.json()}[0][id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220704 19:39:13.292" level="INFO">${TEST_SUITE_LIST_ID} = 62c341e113ed2a51b1539e0b</msg>
<status status="PASS" starttime="20220704 19:39:13.291" endtime="20220704 19:39:13.292"/>
</kw>
<status status="PASS" starttime="20220704 19:39:13.045" endtime="20220704 19:39:13.292"/>
</kw>
<status status="PASS" starttime="20220704 19:39:13.044" endtime="20220704 19:39:13.292"/>
</kw>
<test id="s1-s1-s2-t1" name="Verify A Card Can Be Created" line="13">
<kw name="Create A Card" library="Card">
<var>${response}</var>
<arg>name</arg>
<arg>RFCard2</arg>
<doc>Creates a new card in the given list.
required_args: listId
optional_args: name, desc, pos, idCardSource, idLabels, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>@{optional_args}</arg>
<arg>idList</arg>
<arg>${idList}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 19:39:13.294" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 19:39:13.294" endtime="20220704 19:39:13.294"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 19:39:13.294" endtime="20220704 19:39:13.294"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 19:39:13.295" level="INFO">${url} = cards/</msg>
<status status="PASS" starttime="20220704 19:39:13.294" endtime="20220704 19:39:13.295"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 19:39:13.459" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:39:13.295" endtime="20220704 19:39:13.459"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 19:39:13.459" endtime="20220704 19:39:13.459"/>
</return>
<msg timestamp="20220704 19:39:13.459" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:39:13.293" endtime="20220704 19:39:13.459"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 19:39:13.459" endtime="20220704 19:39:13.459"/>
</return>
<msg timestamp="20220704 19:39:13.459" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:39:13.293" endtime="20220704 19:39:13.459"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>card</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220704 19:39:13.460" endtime="20220704 19:39:13.465"/>
</kw>
<status status="PASS" starttime="20220704 19:39:13.459" endtime="20220704 19:39:13.465"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 19:39:13.466" endtime="20220704 19:39:13.466"/>
</return>
<msg timestamp="20220704 19:39:13.467" level="INFO">${CARD_ID} = 62c341e18c81d96853ff03c2</msg>
<status status="PASS" starttime="20220704 19:39:13.466" endtime="20220704 19:39:13.467"/>
</kw>
<kw name="Get A Card" library="Card">
<var>${response}</var>
<arg>${CARD_ID}</arg>
<doc>Gets the card with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 19:39:13.468" level="INFO">${url} = cards/62c341e18c81d96853ff03c2</msg>
<status status="PASS" starttime="20220704 19:39:13.468" endtime="20220704 19:39:13.468"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 19:39:13.524" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:39:13.468" endtime="20220704 19:39:13.524"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 19:39:13.524" endtime="20220704 19:39:13.524"/>
</return>
<msg timestamp="20220704 19:39:13.525" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:39:13.467" endtime="20220704 19:39:13.525"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 19:39:13.525" endtime="20220704 19:39:13.525"/>
</return>
<msg timestamp="20220704 19:39:13.525" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:39:13.467" endtime="20220704 19:39:13.525"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_NAME}</var>
<arg>${response}</arg>
<arg>name</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 19:39:13.526" endtime="20220704 19:39:13.526"/>
</return>
<msg timestamp="20220704 19:39:13.526" level="INFO">${CARD_NAME} = RFCard2</msg>
<status status="PASS" starttime="20220704 19:39:13.525" endtime="20220704 19:39:13.526"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${CARD_NAME}</arg>
<arg>RFCard2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220704 19:39:13.527" endtime="20220704 19:39:13.527"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Card</arg>
<arg>${CARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Card" library="Card">
<arg>${CARD_ID}</arg>
<doc>Deletes the card with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 19:39:13.528" level="INFO">${url} = cards/62c341e18c81d96853ff03c2</msg>
<status status="PASS" starttime="20220704 19:39:13.528" endtime="20220704 19:39:13.528"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 19:39:13.677" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:39:13.528" endtime="20220704 19:39:13.677"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 19:39:13.677" endtime="20220704 19:39:13.677"/>
</return>
<msg timestamp="20220704 19:39:13.677" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:39:13.528" endtime="20220704 19:39:13.677"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 19:39:13.677" endtime="20220704 19:39:13.678"/>
</return>
<status status="PASS" starttime="20220704 19:39:13.527" endtime="20220704 19:39:13.678"/>
</kw>
<status status="PASS" starttime="20220704 19:39:13.527" endtime="20220704 19:39:13.678"/>
</kw>
<doc>Verify that a card can be created through API</doc>
<tag>api</tag>
<tag>card.create</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220704 19:39:13.292" endtime="20220704 19:39:13.678"/>
</test>
<test id="s1-s1-s2-t2" name="Verify A Card Can Be Closed" line="24">
<kw name="Create A Card" library="Card">
<var>${response}</var>
<doc>Creates a new card in the given list.
required_args: listId
optional_args: name, desc, pos, idCardSource, idLabels, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>@{optional_args}</arg>
<arg>idList</arg>
<arg>${idList}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 19:39:13.681" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 19:39:13.681" endtime="20220704 19:39:13.681"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 19:39:13.681" endtime="20220704 19:39:13.681"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 19:39:13.682" level="INFO">${url} = cards/</msg>
<status status="PASS" starttime="20220704 19:39:13.681" endtime="20220704 19:39:13.682"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 19:39:13.843" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:39:13.682" endtime="20220704 19:39:13.843"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 19:39:13.843" endtime="20220704 19:39:13.843"/>
</return>
<msg timestamp="20220704 19:39:13.843" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:39:13.680" endtime="20220704 19:39:13.843"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 19:39:13.844" endtime="20220704 19:39:13.844"/>
</return>
<msg timestamp="20220704 19:39:13.844" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:39:13.680" endtime="20220704 19:39:13.844"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 19:39:13.844" endtime="20220704 19:39:13.844"/>
</return>
<msg timestamp="20220704 19:39:13.845" level="INFO">${CARD_ID} = 62c341e173308c5b09d52b87</msg>
<status status="PASS" starttime="20220704 19:39:13.844" endtime="20220704 19:39:13.845"/>
</kw>
<kw name="Archive A Card" library="Card">
<arg>${CARD_ID}</arg>
<doc>Modifies the card status to closed.</doc>
<kw name="Update A Card" library="Card">
<var>${response}</var>
<arg>${id}</arg>
<arg>closed</arg>
<arg>true</arg>
<arg>status_code=${status_code}</arg>
<doc>Updates the card with the given ID
optional_args: name, desc, closed, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<arg>status_code=${status_code}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 19:39:13.847" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 19:39:13.847" endtime="20220704 19:39:13.848"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 19:39:13.848" endtime="20220704 19:39:13.848"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 19:39:13.848" level="INFO">${url} = cards/62c341e173308c5b09d52b87</msg>
<status status="PASS" starttime="20220704 19:39:13.848" endtime="20220704 19:39:13.848"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 19:39:13.961" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:39:13.848" endtime="20220704 19:39:13.961"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 19:39:13.961" endtime="20220704 19:39:13.961"/>
</return>
<msg timestamp="20220704 19:39:13.962" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:39:13.847" endtime="20220704 19:39:13.962"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 19:39:13.962" endtime="20220704 19:39:13.962"/>
</return>
<msg timestamp="20220704 19:39:13.962" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:39:13.846" endtime="20220704 19:39:13.962"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 19:39:13.962" endtime="20220704 19:39:13.962"/>
</return>
<status status="PASS" starttime="20220704 19:39:13.845" endtime="20220704 19:39:13.962"/>
</kw>
<kw name="Get A Card" library="Card">
<var>${response}</var>
<arg>${CARD_ID}</arg>
<doc>Gets the card with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 19:39:13.964" level="INFO">${url} = cards/62c341e173308c5b09d52b87</msg>
<status status="PASS" starttime="20220704 19:39:13.964" endtime="20220704 19:39:13.964"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 19:39:14.019" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:39:13.964" endtime="20220704 19:39:14.019"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 19:39:14.019" endtime="20220704 19:39:14.019"/>
</return>
<msg timestamp="20220704 19:39:14.019" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:39:13.963" endtime="20220704 19:39:14.019"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 19:39:14.019" endtime="20220704 19:39:14.019"/>
</return>
<msg timestamp="20220704 19:39:14.019" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:39:13.962" endtime="20220704 19:39:14.019"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_CLOSED}</var>
<arg>${response}</arg>
<arg>closed</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 19:39:14.020" endtime="20220704 19:39:14.020"/>
</return>
<msg timestamp="20220704 19:39:14.021" level="INFO">${CARD_CLOSED} = True</msg>
<status status="PASS" starttime="20220704 19:39:14.019" endtime="20220704 19:39:14.021"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${CARD_CLOSED}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220704 19:39:14.021" endtime="20220704 19:39:14.021"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Card</arg>
<arg>${CARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Card" library="Card">
<arg>${CARD_ID}</arg>
<doc>Deletes the card with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 19:39:14.023" level="INFO">${url} = cards/62c341e173308c5b09d52b87</msg>
<status status="PASS" starttime="20220704 19:39:14.023" endtime="20220704 19:39:14.023"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 19:39:14.161" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:39:14.023" endtime="20220704 19:39:14.161"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 19:39:14.161" endtime="20220704 19:39:14.161"/>
</return>
<msg timestamp="20220704 19:39:14.161" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:39:14.022" endtime="20220704 19:39:14.161"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 19:39:14.161" endtime="20220704 19:39:14.161"/>
</return>
<status status="PASS" starttime="20220704 19:39:14.022" endtime="20220704 19:39:14.162"/>
</kw>
<status status="PASS" starttime="20220704 19:39:14.021" endtime="20220704 19:39:14.162"/>
</kw>
<doc>Verify that a card can be closed through API</doc>
<tag>api</tag>
<tag>card.close</tag>
<tag>regression</tag>
<status status="PASS" starttime="20220704 19:39:13.679" endtime="20220704 19:39:14.162"/>
</test>
<test id="s1-s1-s2-t3" name="Verify A Card Can Be Deleted" line="35">
<kw name="Create A Card" library="Card">
<var>${response}</var>
<doc>Creates a new card in the given list.
required_args: listId
optional_args: name, desc, pos, idCardSource, idLabels, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>@{optional_args}</arg>
<arg>idList</arg>
<arg>${idList}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 19:39:14.164" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 19:39:14.164" endtime="20220704 19:39:14.164"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 19:39:14.164" endtime="20220704 19:39:14.165"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 19:39:14.166" level="INFO">${url} = cards/</msg>
<status status="PASS" starttime="20220704 19:39:14.165" endtime="20220704 19:39:14.166"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 19:39:14.318" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:39:14.166" endtime="20220704 19:39:14.318"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 19:39:14.318" endtime="20220704 19:39:14.318"/>
</return>
<msg timestamp="20220704 19:39:14.319" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:39:14.163" endtime="20220704 19:39:14.319"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 19:39:14.319" endtime="20220704 19:39:14.319"/>
</return>
<msg timestamp="20220704 19:39:14.319" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:39:14.163" endtime="20220704 19:39:14.319"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 19:39:14.319" endtime="20220704 19:39:14.319"/>
</return>
<msg timestamp="20220704 19:39:14.320" level="INFO">${CARD_ID} = 62c341e243e9398927f59f65</msg>
<status status="PASS" starttime="20220704 19:39:14.319" endtime="20220704 19:39:14.320"/>
</kw>
<kw name="Delete A Card" library="Card">
<var>${response}</var>
<arg>${CARD_ID}</arg>
<doc>Deletes the card with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 19:39:14.322" level="INFO">${url} = cards/62c341e243e9398927f59f65</msg>
<status status="PASS" starttime="20220704 19:39:14.321" endtime="20220704 19:39:14.322"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 19:39:14.478" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:39:14.322" endtime="20220704 19:39:14.478"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 19:39:14.478" endtime="20220704 19:39:14.478"/>
</return>
<msg timestamp="20220704 19:39:14.479" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:39:14.321" endtime="20220704 19:39:14.479"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 19:39:14.479" endtime="20220704 19:39:14.479"/>
</return>
<msg timestamp="20220704 19:39:14.479" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:39:14.320" endtime="20220704 19:39:14.479"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>delete</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220704 19:39:14.480" endtime="20220704 19:39:14.481"/>
</kw>
<status status="PASS" starttime="20220704 19:39:14.479" endtime="20220704 19:39:14.482"/>
</kw>
<kw name="Get A Card" library="Card">
<arg>${CARD_ID}</arg>
<arg>status_code=404</arg>
<doc>Gets the card with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 19:39:14.483" level="INFO">${url} = cards/62c341e243e9398927f59f65</msg>
<status status="PASS" starttime="20220704 19:39:14.483" endtime="20220704 19:39:14.483"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 19:39:14.526" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220704 19:39:14.483" endtime="20220704 19:39:14.527"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 19:39:14.527" endtime="20220704 19:39:14.527"/>
</return>
<msg timestamp="20220704 19:39:14.527" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220704 19:39:14.482" endtime="20220704 19:39:14.527"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 19:39:14.527" endtime="20220704 19:39:14.527"/>
</return>
<status status="PASS" starttime="20220704 19:39:14.482" endtime="20220704 19:39:14.527"/>
</kw>
<doc>Verify that a card can be deleted through API</doc>
<tag>api</tag>
<tag>card.delete</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220704 19:39:14.162" endtime="20220704 19:39:14.527"/>
</test>
<test id="s1-s1-s2-t4" name="Verify A Card Can Be Updated" line="44">
<kw name="Create A Card" library="Card">
<var>${response}</var>
<arg>name</arg>
<arg>RFCard4</arg>
<doc>Creates a new card in the given list.
required_args: listId
optional_args: name, desc, pos, idCardSource, idLabels, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>@{optional_args}</arg>
<arg>idList</arg>
<arg>${idList}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 19:39:14.530" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 19:39:14.529" endtime="20220704 19:39:14.530"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 19:39:14.530" endtime="20220704 19:39:14.530"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 19:39:14.531" level="INFO">${url} = cards/</msg>
<status status="PASS" starttime="20220704 19:39:14.530" endtime="20220704 19:39:14.531"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 19:39:14.680" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:39:14.531" endtime="20220704 19:39:14.680"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 19:39:14.680" endtime="20220704 19:39:14.680"/>
</return>
<msg timestamp="20220704 19:39:14.680" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:39:14.529" endtime="20220704 19:39:14.680"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 19:39:14.680" endtime="20220704 19:39:14.680"/>
</return>
<msg timestamp="20220704 19:39:14.681" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:39:14.528" endtime="20220704 19:39:14.681"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 19:39:14.681" endtime="20220704 19:39:14.681"/>
</return>
<msg timestamp="20220704 19:39:14.682" level="INFO">${CARD_ID} = 62c341e212bbec2ac2ba0e6c</msg>
<status status="PASS" starttime="20220704 19:39:14.681" endtime="20220704 19:39:14.682"/>
</kw>
<kw name="Update A Card" library="Card">
<var>${response}</var>
<arg>${CARD_ID}</arg>
<arg>name</arg>
<arg>RFCard5</arg>
<arg>desc</arg>
<arg>Description</arg>
<doc>Updates the card with the given ID
optional_args: name, desc, closed, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<arg>status_code=${status_code}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 19:39:14.683" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 19:39:14.683" endtime="20220704 19:39:14.683"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 19:39:14.683" endtime="20220704 19:39:14.684"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 19:39:14.684" level="INFO">${url} = cards/62c341e212bbec2ac2ba0e6c</msg>
<status status="PASS" starttime="20220704 19:39:14.684" endtime="20220704 19:39:14.684"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 19:39:14.807" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:39:14.684" endtime="20220704 19:39:14.808"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 19:39:14.808" endtime="20220704 19:39:14.808"/>
</return>
<msg timestamp="20220704 19:39:14.808" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:39:14.682" endtime="20220704 19:39:14.808"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 19:39:14.808" endtime="20220704 19:39:14.808"/>
</return>
<msg timestamp="20220704 19:39:14.808" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:39:14.682" endtime="20220704 19:39:14.808"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>card</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220704 19:39:14.809" endtime="20220704 19:39:14.814"/>
</kw>
<status status="PASS" starttime="20220704 19:39:14.809" endtime="20220704 19:39:14.814"/>
</kw>
<kw name="Get A Card" library="Card">
<var>${response}</var>
<arg>${CARD_ID}</arg>
<doc>Gets the card with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 19:39:14.816" level="INFO">${url} = cards/62c341e212bbec2ac2ba0e6c</msg>
<status status="PASS" starttime="20220704 19:39:14.815" endtime="20220704 19:39:14.816"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 19:39:14.890" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:39:14.816" endtime="20220704 19:39:14.890"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 19:39:14.890" endtime="20220704 19:39:14.890"/>
</return>
<msg timestamp="20220704 19:39:14.890" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:39:14.815" endtime="20220704 19:39:14.890"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 19:39:14.890" endtime="20220704 19:39:14.890"/>
</return>
<msg timestamp="20220704 19:39:14.891" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:39:14.814" endtime="20220704 19:39:14.891"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_NAME}</var>
<arg>${response}</arg>
<arg>name</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 19:39:14.891" endtime="20220704 19:39:14.891"/>
</return>
<msg timestamp="20220704 19:39:14.892" level="INFO">${CARD_NAME} = RFCard5</msg>
<status status="PASS" starttime="20220704 19:39:14.891" endtime="20220704 19:39:14.892"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${CARD_DESC}</var>
<arg>${response}</arg>
<arg>desc</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 19:39:14.893" endtime="20220704 19:39:14.893"/>
</return>
<msg timestamp="20220704 19:39:14.893" level="INFO">${CARD_DESC} = Description</msg>
<status status="PASS" starttime="20220704 19:39:14.892" endtime="20220704 19:39:14.893"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${CARD_NAME}</arg>
<arg>RFCard5</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220704 19:39:14.893" endtime="20220704 19:39:14.894"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${CARD_DESC}</arg>
<arg>Description</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220704 19:39:14.894" endtime="20220704 19:39:14.894"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Card</arg>
<arg>${CARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Card" library="Card">
<arg>${CARD_ID}</arg>
<doc>Deletes the card with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 19:39:14.895" level="INFO">${url} = cards/62c341e212bbec2ac2ba0e6c</msg>
<status status="PASS" starttime="20220704 19:39:14.895" endtime="20220704 19:39:14.896"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 19:39:15.086" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:39:14.896" endtime="20220704 19:39:15.086"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 19:39:15.087" endtime="20220704 19:39:15.087"/>
</return>
<msg timestamp="20220704 19:39:15.087" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:39:14.895" endtime="20220704 19:39:15.087"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 19:39:15.087" endtime="20220704 19:39:15.087"/>
</return>
<status status="PASS" starttime="20220704 19:39:14.894" endtime="20220704 19:39:15.087"/>
</kw>
<status status="PASS" starttime="20220704 19:39:14.894" endtime="20220704 19:39:15.087"/>
</kw>
<doc>Verify that a card's name and Description can be updated through API</doc>
<tag>api</tag>
<tag>card.update</tag>
<tag>regression</tag>
<status status="PASS" starttime="20220704 19:39:14.528" endtime="20220704 19:39:15.087"/>
</test>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Teardown Board</arg>
<arg>Delete All Sessions</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Teardown Board">
<doc>Delete the board created for this suite</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 19:39:15.091" level="INFO">${url} = boards/62c341e113ed2a51b1539e04</msg>
<status status="PASS" starttime="20220704 19:39:15.090" endtime="20220704 19:39:15.091"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 19:39:15.392" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:39:15.091" endtime="20220704 19:39:15.392"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 19:39:15.392" endtime="20220704 19:39:15.392"/>
</return>
<msg timestamp="20220704 19:39:15.392" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:39:15.090" endtime="20220704 19:39:15.392"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 19:39:15.392" endtime="20220704 19:39:15.392"/>
</return>
<status status="PASS" starttime="20220704 19:39:15.089" endtime="20220704 19:39:15.392"/>
</kw>
<status status="PASS" starttime="20220704 19:39:15.089" endtime="20220704 19:39:15.392"/>
</kw>
<status status="PASS" starttime="20220704 19:39:15.089" endtime="20220704 19:39:15.393"/>
</kw>
<kw name="Delete All Sessions" library="request_own_library">
<status status="PASS" starttime="20220704 19:39:15.393" endtime="20220704 19:39:15.394"/>
</kw>
<status status="PASS" starttime="20220704 19:39:15.088" endtime="20220704 19:39:15.394"/>
</kw>
<doc>Example Test with Trello API Cards</doc>
<status status="PASS" starttime="20220704 19:39:13.029" endtime="20220704 19:39:15.394"/>
</suite>
<suite id="s1-s1-s3" name="Trello Api Checklists Tests" source="/trello/api/trello_api_checklists_tests.robot">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Create Trello Session</arg>
<arg>Setup Board, List And Card</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Create Trello Session" library="TrelloAPI">
<doc>Creates a Trello Session</doc>
<kw name="Create Session" library="request_own_library">
<arg>${API_BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<status status="PASS" starttime="20220704 19:39:15.404" endtime="20220704 19:39:15.405"/>
</kw>
<status status="PASS" starttime="20220704 19:39:15.404" endtime="20220704 19:39:15.405"/>
</kw>
<kw name="Setup Board, List And Card">
<doc>Create a board and save its ID and its first list's ID</doc>
<kw name="Create A Board" library="Board">
<var>${BOARD}</var>
<arg>TestBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 19:39:15.406" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 19:39:15.406" endtime="20220704 19:39:15.406"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 19:39:15.406" endtime="20220704 19:39:15.406"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 19:39:15.407" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220704 19:39:15.406" endtime="20220704 19:39:15.407"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 19:39:15.599" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:39:15.407" endtime="20220704 19:39:15.599"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 19:39:15.599" endtime="20220704 19:39:15.599"/>
</return>
<msg timestamp="20220704 19:39:15.599" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:39:15.405" endtime="20220704 19:39:15.599"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 19:39:15.599" endtime="20220704 19:39:15.599"/>
</return>
<msg timestamp="20220704 19:39:15.599" level="INFO">${BOARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:39:15.405" endtime="20220704 19:39:15.599"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_BOARD_ID}</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220704 19:39:15.600" level="INFO">${TEST_SUITE_BOARD_ID} = 62c341e3a60d1868ef9f743e</msg>
<status status="PASS" starttime="20220704 19:39:15.600" endtime="20220704 19:39:15.600"/>
</kw>
<kw name="Get Lists On A Board" library="Board">
<var>${LISTS}</var>
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Get all the lists in a board</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>lists_on_board</arg>
<arg>${id}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 19:39:15.602" level="INFO">${url} = boards/62c341e3a60d1868ef9f743e/lists/</msg>
<status status="PASS" starttime="20220704 19:39:15.601" endtime="20220704 19:39:15.602"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 19:39:15.648" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:39:15.602" endtime="20220704 19:39:15.648"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 19:39:15.648" endtime="20220704 19:39:15.648"/>
</return>
<msg timestamp="20220704 19:39:15.649" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:39:15.601" endtime="20220704 19:39:15.649"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 19:39:15.649" endtime="20220704 19:39:15.649"/>
</return>
<msg timestamp="20220704 19:39:15.649" level="INFO">${LISTS} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:39:15.601" endtime="20220704 19:39:15.649"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_LIST_ID}</arg>
<arg>${LISTS.json()}[0][id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220704 19:39:15.650" level="INFO">${TEST_SUITE_LIST_ID} = 62c341e3a60d1868ef9f7445</msg>
<status status="PASS" starttime="20220704 19:39:15.649" endtime="20220704 19:39:15.650"/>
</kw>
<kw name="Create A Card" library="Card">
<var>${CARD}</var>
<arg>name</arg>
<arg>TestCard</arg>
<doc>Creates a new card in the given list.
required_args: listId
optional_args: name, desc, pos, idCardSource, idLabels, due
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>card</arg>
<arg>@{optional_args}</arg>
<arg>idList</arg>
<arg>${idList}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 19:39:15.652" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 19:39:15.651" endtime="20220704 19:39:15.652"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 19:39:15.652" endtime="20220704 19:39:15.652"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 19:39:15.653" level="INFO">${url} = cards/</msg>
<status status="PASS" starttime="20220704 19:39:15.652" endtime="20220704 19:39:15.653"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 19:39:15.827" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:39:15.653" endtime="20220704 19:39:15.827"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 19:39:15.827" endtime="20220704 19:39:15.827"/>
</return>
<msg timestamp="20220704 19:39:15.827" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:39:15.651" endtime="20220704 19:39:15.827"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 19:39:15.827" endtime="20220704 19:39:15.827"/>
</return>
<msg timestamp="20220704 19:39:15.827" level="INFO">${CARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:39:15.650" endtime="20220704 19:39:15.827"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_CARD_ID}</arg>
<arg>${CARD.json()}[id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220704 19:39:15.828" level="INFO">${TEST_SUITE_CARD_ID} = 62c341e33dc8624ab21bb5d7</msg>
<status status="PASS" starttime="20220704 19:39:15.828" endtime="20220704 19:39:15.829"/>
</kw>
<status status="PASS" starttime="20220704 19:39:15.405" endtime="20220704 19:39:15.829"/>
</kw>
<status status="PASS" starttime="20220704 19:39:15.404" endtime="20220704 19:39:15.829"/>
</kw>
<test id="s1-s1-s3-t1" name="Verify A Checklist Can Be Created" line="14">
<kw name="Create A Checklist" library="Checklist">
<var>${response}</var>
<arg>name</arg>
<arg>TestChecklist</arg>
<arg>idCard=${TEST_SUITE_CARD_ID}</arg>
<doc>Creates a new checklist in the given card.
required_args: idCard
optional_args: name, pos, idChecklistSource
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>@{optional_args}</arg>
<arg>idCard</arg>
<arg>${idCard}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 19:39:15.831" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 19:39:15.831" endtime="20220704 19:39:15.831"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 19:39:15.831" endtime="20220704 19:39:15.831"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 19:39:15.832" level="INFO">${url} = checklists/</msg>
<status status="PASS" starttime="20220704 19:39:15.831" endtime="20220704 19:39:15.832"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 19:39:15.939" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:39:15.832" endtime="20220704 19:39:15.939"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 19:39:15.939" endtime="20220704 19:39:15.940"/>
</return>
<msg timestamp="20220704 19:39:15.940" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:39:15.830" endtime="20220704 19:39:15.940"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 19:39:15.940" endtime="20220704 19:39:15.940"/>
</return>
<msg timestamp="20220704 19:39:15.940" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:39:15.830" endtime="20220704 19:39:15.940"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${checklist_id}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 19:39:15.941" endtime="20220704 19:39:15.941"/>
</return>
<msg timestamp="20220704 19:39:15.941" level="INFO">${checklist_id} = 62c341e399e1c23241fb4fe3</msg>
<status status="PASS" starttime="20220704 19:39:15.940" endtime="20220704 19:39:15.941"/>
</kw>
<kw name="Get A Checklist" library="Checklist">
<var>${response}</var>
<arg>${checklist_id}</arg>
<doc>Gets the checklist with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 19:39:15.943" level="INFO">${url} = checklists/62c341e399e1c23241fb4fe3</msg>
<status status="PASS" starttime="20220704 19:39:15.942" endtime="20220704 19:39:15.943"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 19:39:16.002" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:39:15.943" endtime="20220704 19:39:16.002"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 19:39:16.002" endtime="20220704 19:39:16.002"/>
</return>
<msg timestamp="20220704 19:39:16.002" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:39:15.942" endtime="20220704 19:39:16.002"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 19:39:16.002" endtime="20220704 19:39:16.003"/>
</return>
<msg timestamp="20220704 19:39:16.003" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:39:15.942" endtime="20220704 19:39:16.003"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${checklist_name}</var>
<arg>${response}</arg>
<arg>name</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 19:39:16.003" endtime="20220704 19:39:16.003"/>
</return>
<msg timestamp="20220704 19:39:16.004" level="INFO">${checklist_name} = TestChecklist</msg>
<status status="PASS" starttime="20220704 19:39:16.003" endtime="20220704 19:39:16.004"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${checklist_name}</arg>
<arg>TestChecklist</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220704 19:39:16.004" endtime="20220704 19:39:16.005"/>
</kw>
<kw name="Delete A Checklist" library="Checklist" type="TEARDOWN">
<arg>${checklist_id}</arg>
<doc>Deletes the checklist with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 19:39:16.006" level="INFO">${url} = checklists/62c341e399e1c23241fb4fe3</msg>
<status status="PASS" starttime="20220704 19:39:16.006" endtime="20220704 19:39:16.006"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 19:39:16.103" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:39:16.006" endtime="20220704 19:39:16.103"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 19:39:16.104" endtime="20220704 19:39:16.104"/>
</return>
<msg timestamp="20220704 19:39:16.104" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:39:16.005" endtime="20220704 19:39:16.104"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 19:39:16.104" endtime="20220704 19:39:16.104"/>
</return>
<status status="PASS" starttime="20220704 19:39:16.005" endtime="20220704 19:39:16.104"/>
</kw>
<doc>Verify that a checklist can be created through API</doc>
<tag>api</tag>
<tag>checklist.create</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220704 19:39:15.829" endtime="20220704 19:39:16.104"/>
</test>
<test id="s1-s1-s3-t2" name="Verify A Checklist Can Be Deleted" line="24">
<kw name="Create A Checklist" library="Checklist">
<var>${response}</var>
<arg>name</arg>
<arg>TestChecklist</arg>
<arg>idCard=${TEST_SUITE_CARD_ID}</arg>
<doc>Creates a new checklist in the given card.
required_args: idCard
optional_args: name, pos, idChecklistSource
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>@{optional_args}</arg>
<arg>idCard</arg>
<arg>${idCard}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 19:39:16.107" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 19:39:16.107" endtime="20220704 19:39:16.107"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 19:39:16.107" endtime="20220704 19:39:16.108"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 19:39:16.108" level="INFO">${url} = checklists/</msg>
<status status="PASS" starttime="20220704 19:39:16.108" endtime="20220704 19:39:16.108"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 19:39:16.224" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:39:16.109" endtime="20220704 19:39:16.224"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 19:39:16.224" endtime="20220704 19:39:16.224"/>
</return>
<msg timestamp="20220704 19:39:16.224" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:39:16.106" endtime="20220704 19:39:16.224"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 19:39:16.224" endtime="20220704 19:39:16.224"/>
</return>
<msg timestamp="20220704 19:39:16.224" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:39:16.106" endtime="20220704 19:39:16.224"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${checklist_id}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 19:39:16.225" endtime="20220704 19:39:16.225"/>
</return>
<msg timestamp="20220704 19:39:16.226" level="INFO">${checklist_id} = 62c341e43478b0861f153838</msg>
<status status="PASS" starttime="20220704 19:39:16.225" endtime="20220704 19:39:16.226"/>
</kw>
<kw name="Delete A Checklist" library="Checklist">
<var>${response}</var>
<arg>${checklist_id}</arg>
<doc>Deletes the checklist with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 19:39:16.228" level="INFO">${url} = checklists/62c341e43478b0861f153838</msg>
<status status="PASS" starttime="20220704 19:39:16.227" endtime="20220704 19:39:16.228"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 19:39:16.333" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:39:16.228" endtime="20220704 19:39:16.333"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 19:39:16.333" endtime="20220704 19:39:16.333"/>
</return>
<msg timestamp="20220704 19:39:16.334" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:39:16.227" endtime="20220704 19:39:16.334"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 19:39:16.334" endtime="20220704 19:39:16.334"/>
</return>
<msg timestamp="20220704 19:39:16.334" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:39:16.226" endtime="20220704 19:39:16.334"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>delete</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220704 19:39:16.335" endtime="20220704 19:39:16.336"/>
</kw>
<status status="PASS" starttime="20220704 19:39:16.334" endtime="20220704 19:39:16.337"/>
</kw>
<kw name="Get A Checklist" library="Checklist">
<arg>${checklist_id}</arg>
<arg>status_code=404</arg>
<doc>Gets the checklist with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 19:39:16.338" level="INFO">${url} = checklists/62c341e43478b0861f153838</msg>
<status status="PASS" starttime="20220704 19:39:16.338" endtime="20220704 19:39:16.338"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 19:39:16.373" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220704 19:39:16.338" endtime="20220704 19:39:16.373"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 19:39:16.373" endtime="20220704 19:39:16.373"/>
</return>
<msg timestamp="20220704 19:39:16.374" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220704 19:39:16.337" endtime="20220704 19:39:16.374"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 19:39:16.374" endtime="20220704 19:39:16.374"/>
</return>
<status status="PASS" starttime="20220704 19:39:16.337" endtime="20220704 19:39:16.374"/>
</kw>
<doc>Verify that a checklist can be deleted through API</doc>
<tag>api</tag>
<tag>checklist.delete</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220704 19:39:16.105" endtime="20220704 19:39:16.374"/>
</test>
<test id="s1-s1-s3-t3" name="Verify A Checklist Can Be Updated" line="33">
<kw name="Create A Checklist" library="Checklist">
<var>${response}</var>
<arg>name</arg>
<arg>TestChecklist</arg>
<arg>idCard=${TEST_SUITE_CARD_ID}</arg>
<doc>Creates a new checklist in the given card.
required_args: idCard
optional_args: name, pos, idChecklistSource
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>@{optional_args}</arg>
<arg>idCard</arg>
<arg>${idCard}</arg>
<arg>status_code=${status_code}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 19:39:16.378" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 19:39:16.376" endtime="20220704 19:39:16.378"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 19:39:16.378" endtime="20220704 19:39:16.378"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 19:39:16.379" level="INFO">${url} = checklists/</msg>
<status status="PASS" starttime="20220704 19:39:16.378" endtime="20220704 19:39:16.379"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 19:39:16.488" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:39:16.379" endtime="20220704 19:39:16.488"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 19:39:16.488" endtime="20220704 19:39:16.488"/>
</return>
<msg timestamp="20220704 19:39:16.489" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:39:16.376" endtime="20220704 19:39:16.489"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 19:39:16.489" endtime="20220704 19:39:16.489"/>
</return>
<msg timestamp="20220704 19:39:16.489" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:39:16.375" endtime="20220704 19:39:16.489"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${checklist_id}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 19:39:16.489" endtime="20220704 19:39:16.489"/>
</return>
<msg timestamp="20220704 19:39:16.490" level="INFO">${checklist_id} = 62c341e4cd725d65f8c25929</msg>
<status status="PASS" starttime="20220704 19:39:16.489" endtime="20220704 19:39:16.490"/>
</kw>
<kw name="Update A Checklist" library="Checklist">
<var>${response}</var>
<arg>${checklist_id}</arg>
<arg>name</arg>
<arg>TestChecklist2</arg>
<doc>Updates the checklist with the given ID
optional_args: name, pos
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<arg>status_code=${status_code}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 19:39:16.491" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 19:39:16.491" endtime="20220704 19:39:16.491"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 19:39:16.491" endtime="20220704 19:39:16.492"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 19:39:16.492" level="INFO">${url} = checklists/62c341e4cd725d65f8c25929</msg>
<status status="PASS" starttime="20220704 19:39:16.492" endtime="20220704 19:39:16.492"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 19:39:16.576" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:39:16.492" endtime="20220704 19:39:16.576"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 19:39:16.576" endtime="20220704 19:39:16.576"/>
</return>
<msg timestamp="20220704 19:39:16.577" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:39:16.491" endtime="20220704 19:39:16.577"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 19:39:16.577" endtime="20220704 19:39:16.577"/>
</return>
<msg timestamp="20220704 19:39:16.577" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:39:16.490" endtime="20220704 19:39:16.577"/>
</kw>
<kw name="Get A Checklist" library="Checklist">
<var>${response}</var>
<arg>${checklist_id}</arg>
<doc>Gets the checklist with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 19:39:16.578" level="INFO">${url} = checklists/62c341e4cd725d65f8c25929</msg>
<status status="PASS" starttime="20220704 19:39:16.578" endtime="20220704 19:39:16.578"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 19:39:16.630" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:39:16.578" endtime="20220704 19:39:16.630"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 19:39:16.630" endtime="20220704 19:39:16.630"/>
</return>
<msg timestamp="20220704 19:39:16.630" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:39:16.577" endtime="20220704 19:39:16.630"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 19:39:16.630" endtime="20220704 19:39:16.630"/>
</return>
<msg timestamp="20220704 19:39:16.630" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:39:16.577" endtime="20220704 19:39:16.630"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${checklist_name}</var>
<arg>${response}</arg>
<arg>name</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 19:39:16.631" endtime="20220704 19:39:16.631"/>
</return>
<msg timestamp="20220704 19:39:16.632" level="INFO">${checklist_name} = TestChecklist2</msg>
<status status="PASS" starttime="20220704 19:39:16.631" endtime="20220704 19:39:16.632"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${checklist_name}</arg>
<arg>TestChecklist2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220704 19:39:16.632" endtime="20220704 19:39:16.632"/>
</kw>
<kw name="Delete A Checklist" library="Checklist" type="TEARDOWN">
<arg>${checklist_id}</arg>
<doc>Deletes the checklist with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>checklist</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 19:39:16.646" level="INFO">${url} = checklists/62c341e4cd725d65f8c25929</msg>
<status status="PASS" starttime="20220704 19:39:16.646" endtime="20220704 19:39:16.646"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 19:39:16.754" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:39:16.647" endtime="20220704 19:39:16.754"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 19:39:16.754" endtime="20220704 19:39:16.754"/>
</return>
<msg timestamp="20220704 19:39:16.754" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:39:16.646" endtime="20220704 19:39:16.754"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 19:39:16.754" endtime="20220704 19:39:16.754"/>
</return>
<status status="PASS" starttime="20220704 19:39:16.632" endtime="20220704 19:39:16.755"/>
</kw>
<doc>Verify that a checklist's name can be updated through API</doc>
<tag>api</tag>
<tag>checklist.update</tag>
<tag>regression</tag>
<status status="PASS" starttime="20220704 19:39:16.374" endtime="20220704 19:39:16.755"/>
</test>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Teardown Board</arg>
<arg>Delete All Sessions</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Teardown Board">
<doc>Delete the board created for this suite</doc>
<kw name="Delete A Board" library="Board">
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 19:39:16.757" level="INFO">${url} = boards/62c341e3a60d1868ef9f743e</msg>
<status status="PASS" starttime="20220704 19:39:16.756" endtime="20220704 19:39:16.757"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 19:39:17.114" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:39:16.757" endtime="20220704 19:39:17.114"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 19:39:17.114" endtime="20220704 19:39:17.114"/>
</return>
<msg timestamp="20220704 19:39:17.115" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:39:16.756" endtime="20220704 19:39:17.115"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 19:39:17.115" endtime="20220704 19:39:17.115"/>
</return>
<status status="PASS" starttime="20220704 19:39:16.756" endtime="20220704 19:39:17.115"/>
</kw>
<status status="PASS" starttime="20220704 19:39:16.755" endtime="20220704 19:39:17.115"/>
</kw>
<kw name="Delete All Sessions" library="request_own_library">
<status status="PASS" starttime="20220704 19:39:17.115" endtime="20220704 19:39:17.117"/>
</kw>
<status status="PASS" starttime="20220704 19:39:16.755" endtime="20220704 19:39:17.117"/>
</kw>
<doc>Example Test with Trello API Checklists</doc>
<status status="PASS" starttime="20220704 19:39:15.395" endtime="20220704 19:39:17.117"/>
</suite>
<suite id="s1-s1-s4" name="Trello Api Labels Tests" source="/trello/api/trello_api_labels_tests.robot">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Create Trello Session</arg>
<arg>Setup Board And List</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Create Trello Session" library="TrelloAPI">
<doc>Creates a Trello Session</doc>
<kw name="Create Session" library="request_own_library">
<arg>${API_BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<status status="PASS" starttime="20220704 19:39:17.128" endtime="20220704 19:39:17.128"/>
</kw>
<status status="PASS" starttime="20220704 19:39:17.128" endtime="20220704 19:39:17.129"/>
</kw>
<kw name="Setup Board And List">
<doc>Create a board and save its ID and its first list's ID</doc>
<kw name="Create A Board" library="Board">
<var>${BOARD}</var>
<arg>TestBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 19:39:17.130" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 19:39:17.129" endtime="20220704 19:39:17.130"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 19:39:17.130" endtime="20220704 19:39:17.130"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 19:39:17.131" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220704 19:39:17.130" endtime="20220704 19:39:17.131"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 19:39:17.328" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:39:17.131" endtime="20220704 19:39:17.328"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 19:39:17.328" endtime="20220704 19:39:17.328"/>
</return>
<msg timestamp="20220704 19:39:17.328" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:39:17.129" endtime="20220704 19:39:17.328"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 19:39:17.328" endtime="20220704 19:39:17.328"/>
</return>
<msg timestamp="20220704 19:39:17.328" level="INFO">${BOARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:39:17.129" endtime="20220704 19:39:17.328"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_BOARD_ID}</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220704 19:39:17.329" level="INFO">${TEST_SUITE_BOARD_ID} = 62c341e5ab480d1bf05eb15d</msg>
<status status="PASS" starttime="20220704 19:39:17.329" endtime="20220704 19:39:17.329"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${LISTS}</var>
<arg>boards/${TEST_SUITE_BOARD_ID}/lists</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 19:39:17.374" level="INFO">${LISTS} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:39:17.330" endtime="20220704 19:39:17.374"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_LIST_ID}</arg>
<arg>${LISTS.json()}[0][id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220704 19:39:17.376" level="INFO">${TEST_SUITE_LIST_ID} = 62c341e5ab480d1bf05eb164</msg>
<status status="PASS" starttime="20220704 19:39:17.374" endtime="20220704 19:39:17.376"/>
</kw>
<status status="PASS" starttime="20220704 19:39:17.129" endtime="20220704 19:39:17.376"/>
</kw>
<status status="PASS" starttime="20220704 19:39:17.127" endtime="20220704 19:39:17.376"/>
</kw>
<test id="s1-s1-s4-t1" name="Create and get label on board" line="14">
<kw name="Create A Label" library="Label">
<var>${response}</var>
<arg>name</arg>
<arg>label2</arg>
<arg>color</arg>
<arg>yellow</arg>
<doc>Creates a new label in the given board.
required_args: idBoard
optional_args: name, color
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>idBoard</arg>
<arg>${idBoard}</arg>
<arg>@{optional_args}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 19:39:17.378" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 19:39:17.377" endtime="20220704 19:39:17.378"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 19:39:17.378" endtime="20220704 19:39:17.378"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 19:39:17.379" level="INFO">${url} = labels/</msg>
<status status="PASS" starttime="20220704 19:39:17.378" endtime="20220704 19:39:17.379"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 19:39:17.475" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:39:17.379" endtime="20220704 19:39:17.475"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 19:39:17.475" endtime="20220704 19:39:17.475"/>
</return>
<msg timestamp="20220704 19:39:17.475" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:39:17.377" endtime="20220704 19:39:17.475"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 19:39:17.475" endtime="20220704 19:39:17.475"/>
</return>
<msg timestamp="20220704 19:39:17.476" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:39:17.377" endtime="20220704 19:39:17.476"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>label</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220704 19:39:17.476" endtime="20220704 19:39:17.478"/>
</kw>
<status status="PASS" starttime="20220704 19:39:17.476" endtime="20220704 19:39:17.478"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${LABEL_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 19:39:17.478" endtime="20220704 19:39:17.478"/>
</return>
<msg timestamp="20220704 19:39:17.479" level="INFO">${LABEL_ID} = 62c341e5c0a0061ca0cc7670</msg>
<status status="PASS" starttime="20220704 19:39:17.478" endtime="20220704 19:39:17.479"/>
</kw>
<kw name="Get A Label" library="Label">
<var>${response}</var>
<arg>${LABEL_ID}</arg>
<doc>Gets the label with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 19:39:17.480" level="INFO">${url} = labels/62c341e5c0a0061ca0cc7670</msg>
<status status="PASS" starttime="20220704 19:39:17.480" endtime="20220704 19:39:17.480"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 19:39:17.522" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:39:17.480" endtime="20220704 19:39:17.522"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 19:39:17.523" endtime="20220704 19:39:17.523"/>
</return>
<msg timestamp="20220704 19:39:17.523" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:39:17.479" endtime="20220704 19:39:17.523"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 19:39:17.523" endtime="20220704 19:39:17.523"/>
</return>
<msg timestamp="20220704 19:39:17.523" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:39:17.479" endtime="20220704 19:39:17.523"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${LABEL_COLOR}</var>
<arg>${response}</arg>
<arg>color</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 19:39:17.524" endtime="20220704 19:39:17.524"/>
</return>
<msg timestamp="20220704 19:39:17.525" level="INFO">${LABEL_COLOR} = yellow</msg>
<status status="PASS" starttime="20220704 19:39:17.523" endtime="20220704 19:39:17.525"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${LABEL_NAME}</var>
<arg>${response}</arg>
<arg>name</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 19:39:17.525" endtime="20220704 19:39:17.525"/>
</return>
<msg timestamp="20220704 19:39:17.526" level="INFO">${LABEL_NAME} = label2</msg>
<status status="PASS" starttime="20220704 19:39:17.525" endtime="20220704 19:39:17.526"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${LABEL_COLOR}</arg>
<arg>yellow</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220704 19:39:17.526" endtime="20220704 19:39:17.526"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${LABEL_NAME}</arg>
<arg>label2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220704 19:39:17.526" endtime="20220704 19:39:17.526"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Label</arg>
<arg>${LABEL_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Label" library="Label">
<arg>${LABEL_ID}</arg>
<doc>Deletes the label with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 19:39:17.528" level="INFO">${url} = labels/62c341e5c0a0061ca0cc7670</msg>
<status status="PASS" starttime="20220704 19:39:17.528" endtime="20220704 19:39:17.528"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 19:39:17.673" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:39:17.528" endtime="20220704 19:39:17.673"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 19:39:17.673" endtime="20220704 19:39:17.673"/>
</return>
<msg timestamp="20220704 19:39:17.673" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:39:17.527" endtime="20220704 19:39:17.673"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 19:39:17.673" endtime="20220704 19:39:17.673"/>
</return>
<status status="PASS" starttime="20220704 19:39:17.527" endtime="20220704 19:39:17.673"/>
</kw>
<status status="PASS" starttime="20220704 19:39:17.527" endtime="20220704 19:39:17.673"/>
</kw>
<doc>Verify that a label can be created through API</doc>
<tag>api</tag>
<tag>label.create</tag>
<tag>label.get</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220704 19:39:17.376" endtime="20220704 19:39:17.673"/>
</test>
<test id="s1-s1-s4-t2" name="Update label on board" line="28">
<kw name="Create A Label" library="Label">
<var>${response}</var>
<arg>name</arg>
<arg>label2</arg>
<arg>color</arg>
<arg>yellow</arg>
<doc>Creates a new label in the given board.
required_args: idBoard
optional_args: name, color
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>idBoard</arg>
<arg>${idBoard}</arg>
<arg>@{optional_args}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 19:39:17.676" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 19:39:17.675" endtime="20220704 19:39:17.676"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 19:39:17.676" endtime="20220704 19:39:17.676"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 19:39:17.677" level="INFO">${url} = labels/</msg>
<status status="PASS" starttime="20220704 19:39:17.676" endtime="20220704 19:39:17.677"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 19:39:17.770" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:39:17.677" endtime="20220704 19:39:17.770"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 19:39:17.770" endtime="20220704 19:39:17.770"/>
</return>
<msg timestamp="20220704 19:39:17.771" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:39:17.675" endtime="20220704 19:39:17.771"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 19:39:17.771" endtime="20220704 19:39:17.771"/>
</return>
<msg timestamp="20220704 19:39:17.771" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:39:17.674" endtime="20220704 19:39:17.771"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>label</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220704 19:39:17.771" endtime="20220704 19:39:17.773"/>
</kw>
<status status="PASS" starttime="20220704 19:39:17.771" endtime="20220704 19:39:17.773"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${LABEL_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 19:39:17.774" endtime="20220704 19:39:17.774"/>
</return>
<msg timestamp="20220704 19:39:17.774" level="INFO">${LABEL_ID} = 62c341e5903c7f2a78a03a64</msg>
<status status="PASS" starttime="20220704 19:39:17.773" endtime="20220704 19:39:17.774"/>
</kw>
<kw name="Update A Label" library="Label">
<var>${new_response}</var>
<arg>${LABEL_ID}</arg>
<arg>name</arg>
<arg>label3</arg>
<arg>color</arg>
<arg>orange</arg>
<doc>Updates the label with the given ID
optional_args: name, color
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 19:39:17.775" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 19:39:17.775" endtime="20220704 19:39:17.775"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 19:39:17.776" endtime="20220704 19:39:17.776"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 19:39:17.776" level="INFO">${url} = labels/62c341e5903c7f2a78a03a64</msg>
<status status="PASS" starttime="20220704 19:39:17.776" endtime="20220704 19:39:17.776"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 19:39:17.868" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:39:17.776" endtime="20220704 19:39:17.868"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 19:39:17.868" endtime="20220704 19:39:17.868"/>
</return>
<msg timestamp="20220704 19:39:17.868" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:39:17.775" endtime="20220704 19:39:17.868"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 19:39:17.868" endtime="20220704 19:39:17.868"/>
</return>
<msg timestamp="20220704 19:39:17.868" level="INFO">${new_response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:39:17.774" endtime="20220704 19:39:17.868"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${NEW_LABEL_COLOR}</var>
<arg>${new_response}</arg>
<arg>color</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 19:39:17.869" endtime="20220704 19:39:17.869"/>
</return>
<msg timestamp="20220704 19:39:17.870" level="INFO">${NEW_LABEL_COLOR} = orange</msg>
<status status="PASS" starttime="20220704 19:39:17.868" endtime="20220704 19:39:17.870"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${NEW_LABEL_NAME}</var>
<arg>${new_response}</arg>
<arg>name</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 19:39:17.870" endtime="20220704 19:39:17.870"/>
</return>
<msg timestamp="20220704 19:39:17.871" level="INFO">${NEW_LABEL_NAME} = label3</msg>
<status status="PASS" starttime="20220704 19:39:17.870" endtime="20220704 19:39:17.871"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${NEW_LABEL_COLOR}</arg>
<arg>orange</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220704 19:39:17.871" endtime="20220704 19:39:17.871"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${NEW_LABEL_NAME}</arg>
<arg>label3</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220704 19:39:17.871" endtime="20220704 19:39:17.872"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn" type="TEARDOWN">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Label</arg>
<arg>${LABEL_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Label" library="Label">
<arg>${LABEL_ID}</arg>
<doc>Deletes the label with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 19:39:17.874" level="INFO">${url} = labels/62c341e5903c7f2a78a03a64</msg>
<status status="PASS" starttime="20220704 19:39:17.873" endtime="20220704 19:39:17.874"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 19:39:17.979" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:39:17.874" endtime="20220704 19:39:17.979"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 19:39:17.979" endtime="20220704 19:39:17.979"/>
</return>
<msg timestamp="20220704 19:39:17.979" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:39:17.873" endtime="20220704 19:39:17.979"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 19:39:17.979" endtime="20220704 19:39:17.979"/>
</return>
<status status="PASS" starttime="20220704 19:39:17.872" endtime="20220704 19:39:17.979"/>
</kw>
<status status="PASS" starttime="20220704 19:39:17.872" endtime="20220704 19:39:17.979"/>
</kw>
<doc>Verify that a label's name and color can be updated through API</doc>
<tag>api</tag>
<tag>label.update</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220704 19:39:17.674" endtime="20220704 19:39:17.979"/>
</test>
<test id="s1-s1-s4-t3" name="Delete label on board" line="41">
<kw name="Create A Label" library="Label">
<var>${response}</var>
<arg>name</arg>
<arg>label2</arg>
<arg>color</arg>
<arg>yellow</arg>
<doc>Creates a new label in the given board.
required_args: idBoard
optional_args: name, color
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>idBoard</arg>
<arg>${idBoard}</arg>
<arg>@{optional_args}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 19:39:17.982" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 19:39:17.981" endtime="20220704 19:39:17.982"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 19:39:17.982" endtime="20220704 19:39:17.982"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 19:39:17.983" level="INFO">${url} = labels/</msg>
<status status="PASS" starttime="20220704 19:39:17.982" endtime="20220704 19:39:17.983"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 19:39:18.083" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:39:17.983" endtime="20220704 19:39:18.083"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 19:39:18.083" endtime="20220704 19:39:18.084"/>
</return>
<msg timestamp="20220704 19:39:18.084" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:39:17.981" endtime="20220704 19:39:18.084"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 19:39:18.084" endtime="20220704 19:39:18.084"/>
</return>
<msg timestamp="20220704 19:39:18.084" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:39:17.980" endtime="20220704 19:39:18.084"/>
</kw>
<kw name="Get Information From Response" library="CommonAPI">
<var>${LABEL_ID}</var>
<arg>${response}</arg>
<arg>id</arg>
<doc>Get a specific key from a response dictionary</doc>
<return>
<value>${response.json()}[${key}]</value>
<status status="PASS" starttime="20220704 19:39:18.085" endtime="20220704 19:39:18.085"/>
</return>
<msg timestamp="20220704 19:39:18.085" level="INFO">${LABEL_ID} = 62c341e6eebbf525a7b5f821</msg>
<status status="PASS" starttime="20220704 19:39:18.084" endtime="20220704 19:39:18.085"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Label</arg>
<arg>${LABEL_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Label" library="Label">
<arg>${LABEL_ID}</arg>
<doc>Deletes the label with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 19:39:18.087" level="INFO">${url} = labels/62c341e6eebbf525a7b5f821</msg>
<status status="PASS" starttime="20220704 19:39:18.087" endtime="20220704 19:39:18.087"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 19:39:18.261" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:39:18.087" endtime="20220704 19:39:18.262"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 19:39:18.262" endtime="20220704 19:39:18.262"/>
</return>
<msg timestamp="20220704 19:39:18.262" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:39:18.087" endtime="20220704 19:39:18.262"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 19:39:18.262" endtime="20220704 19:39:18.262"/>
</return>
<status status="PASS" starttime="20220704 19:39:18.086" endtime="20220704 19:39:18.262"/>
</kw>
<status status="PASS" starttime="20220704 19:39:18.086" endtime="20220704 19:39:18.262"/>
</kw>
<kw name="Get A Label" library="Label">
<arg>${LABEL_ID}</arg>
<arg>status_code=404</arg>
<doc>Gets the label with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>label</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 19:39:18.264" level="INFO">${url} = labels/62c341e6eebbf525a7b5f821</msg>
<status status="PASS" starttime="20220704 19:39:18.263" endtime="20220704 19:39:18.264"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 19:39:18.299" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220704 19:39:18.264" endtime="20220704 19:39:18.299"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 19:39:18.299" endtime="20220704 19:39:18.299"/>
</return>
<msg timestamp="20220704 19:39:18.300" level="INFO">${response} = The requested resource was not found.</msg>
<status status="PASS" starttime="20220704 19:39:18.263" endtime="20220704 19:39:18.300"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 19:39:18.300" endtime="20220704 19:39:18.300"/>
</return>
<status status="PASS" starttime="20220704 19:39:18.262" endtime="20220704 19:39:18.300"/>
</kw>
<doc>Verify that a label can be deleted through API</doc>
<tag>api</tag>
<tag>label.delete</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220704 19:39:17.980" endtime="20220704 19:39:18.300"/>
</test>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Teardown Board</arg>
<arg>Delete All Sessions</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Teardown Board">
<doc>Delete the board created for this session.</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 19:39:18.303" level="INFO">${url} = boards/62c341e5ab480d1bf05eb15d</msg>
<status status="PASS" starttime="20220704 19:39:18.303" endtime="20220704 19:39:18.303"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 19:39:18.599" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:39:18.303" endtime="20220704 19:39:18.599"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 19:39:18.599" endtime="20220704 19:39:18.599"/>
</return>
<msg timestamp="20220704 19:39:18.599" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:39:18.302" endtime="20220704 19:39:18.599"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 19:39:18.599" endtime="20220704 19:39:18.599"/>
</return>
<status status="PASS" starttime="20220704 19:39:18.302" endtime="20220704 19:39:18.600"/>
</kw>
<status status="PASS" starttime="20220704 19:39:18.302" endtime="20220704 19:39:18.600"/>
</kw>
<status status="PASS" starttime="20220704 19:39:18.301" endtime="20220704 19:39:18.600"/>
</kw>
<kw name="Delete All Sessions" library="request_own_library">
<status status="PASS" starttime="20220704 19:39:18.600" endtime="20220704 19:39:18.601"/>
</kw>
<status status="PASS" starttime="20220704 19:39:18.301" endtime="20220704 19:39:18.601"/>
</kw>
<doc>Example Test with Trello API Cards</doc>
<status status="PASS" starttime="20220704 19:39:17.119" endtime="20220704 19:39:18.601"/>
</suite>
<suite id="s1-s1-s5" name="Trello Api Lists Tests" source="/trello/api/trello_api_lists_tests.robot">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Create Trello Session</arg>
<arg>Setup Board</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Create Trello Session" library="TrelloAPI">
<doc>Creates a Trello Session</doc>
<kw name="Create Session" library="request_own_library">
<arg>${API_BASE_URL}</arg>
<arg>headers=&amp;{HEADERS}</arg>
<status status="PASS" starttime="20220704 19:39:18.613" endtime="20220704 19:39:18.614"/>
</kw>
<status status="PASS" starttime="20220704 19:39:18.613" endtime="20220704 19:39:18.614"/>
</kw>
<kw name="Setup Board">
<doc>Create a board and save it's id for the suite</doc>
<kw name="Create A Board" library="Board">
<var>${BOARD}</var>
<arg>TestBoard</arg>
<doc>Creates a new Board
name the board will have
optional_args: desc, defaultLists, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>@{optional_args}</arg>
<arg>name</arg>
<arg>${name}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 19:39:18.615" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 19:39:18.615" endtime="20220704 19:39:18.615"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 19:39:18.615" endtime="20220704 19:39:18.615"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 19:39:18.616" level="INFO">${url} = boards/</msg>
<status status="PASS" starttime="20220704 19:39:18.615" endtime="20220704 19:39:18.616"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 19:39:18.814" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:39:18.616" endtime="20220704 19:39:18.814"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 19:39:18.814" endtime="20220704 19:39:18.814"/>
</return>
<msg timestamp="20220704 19:39:18.814" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:39:18.614" endtime="20220704 19:39:18.815"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 19:39:18.815" endtime="20220704 19:39:18.815"/>
</return>
<msg timestamp="20220704 19:39:18.815" level="INFO">${BOARD} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:39:18.614" endtime="20220704 19:39:18.815"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Set Suite Variable</arg>
<arg>\${TEST_SUITE_BOARD_ID}</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>\${TEST_SUITE_BOARD_ID}</arg>
<arg>${BOARD.json()}[id]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20220704 19:39:18.816" level="INFO">${TEST_SUITE_BOARD_ID} = 62c341e684e8cf84049ee754</msg>
<status status="PASS" starttime="20220704 19:39:18.815" endtime="20220704 19:39:18.816"/>
</kw>
<status status="PASS" starttime="20220704 19:39:18.815" endtime="20220704 19:39:18.816"/>
</kw>
<status status="PASS" starttime="20220704 19:39:18.614" endtime="20220704 19:39:18.816"/>
</kw>
<status status="PASS" starttime="20220704 19:39:18.613" endtime="20220704 19:39:18.817"/>
</kw>
<test id="s1-s1-s5-t1" name="CREATE a list" line="13">
<kw name="Create A List" library="List">
<var>${response}</var>
<arg>NewList</arg>
<doc>Creates a new List
board id
name the list will have
optional_args: idListSource, pos, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>list</arg>
<arg>name</arg>
<arg>${name}</arg>
<arg>idBoard</arg>
<arg>${idBoard}</arg>
<arg>@{optional_args}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 19:39:18.819" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 19:39:18.818" endtime="20220704 19:39:18.819"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 19:39:18.819" endtime="20220704 19:39:18.819"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 19:39:18.820" level="INFO">${url} = lists/</msg>
<status status="PASS" starttime="20220704 19:39:18.819" endtime="20220704 19:39:18.820"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 19:39:18.928" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:39:18.820" endtime="20220704 19:39:18.928"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 19:39:18.928" endtime="20220704 19:39:18.928"/>
</return>
<msg timestamp="20220704 19:39:18.928" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:39:18.818" endtime="20220704 19:39:18.928"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 19:39:18.928" endtime="20220704 19:39:18.928"/>
</return>
<msg timestamp="20220704 19:39:18.928" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:39:18.817" endtime="20220704 19:39:18.928"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>list</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220704 19:39:18.929" endtime="20220704 19:39:18.931"/>
</kw>
<status status="PASS" starttime="20220704 19:39:18.929" endtime="20220704 19:39:18.931"/>
</kw>
<doc>Verify that a list can be created through API</doc>
<tag>api</tag>
<tag>list.create</tag>
<tag>smoke</tag>
<status status="PASS" starttime="20220704 19:39:18.817" endtime="20220704 19:39:18.931"/>
</test>
<test id="s1-s1-s5-t2" name="UPDATE a list" line="19">
<kw name="Create A List" library="List">
<var>${response}</var>
<arg>NewList</arg>
<doc>Creates a new List
board id
name the list will have
optional_args: idListSource, pos, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>list</arg>
<arg>name</arg>
<arg>${name}</arg>
<arg>idBoard</arg>
<arg>${idBoard}</arg>
<arg>@{optional_args}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 19:39:18.934" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 19:39:18.934" endtime="20220704 19:39:18.934"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 19:39:18.934" endtime="20220704 19:39:18.934"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 19:39:18.935" level="INFO">${url} = lists/</msg>
<status status="PASS" starttime="20220704 19:39:18.935" endtime="20220704 19:39:18.935"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 19:39:19.026" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:39:18.935" endtime="20220704 19:39:19.026"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 19:39:19.026" endtime="20220704 19:39:19.026"/>
</return>
<msg timestamp="20220704 19:39:19.027" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:39:18.933" endtime="20220704 19:39:19.027"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 19:39:19.027" endtime="20220704 19:39:19.027"/>
</return>
<msg timestamp="20220704 19:39:19.027" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:39:18.933" endtime="20220704 19:39:19.027"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${response}</arg>
<arg>list</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220704 19:39:19.028" endtime="20220704 19:39:19.029"/>
</kw>
<status status="PASS" starttime="20220704 19:39:19.027" endtime="20220704 19:39:19.030"/>
</kw>
<kw name="Update A List" library="List">
<arg>${response.json()}[id]</arg>
<arg>name</arg>
<arg>NewName</arg>
<doc>Updates the board with the given ID
optional_args: name, idListSource, pos, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>list</arg>
<arg>${id}</arg>
<arg>@{optional_args}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 19:39:19.032" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 19:39:19.031" endtime="20220704 19:39:19.032"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 19:39:19.032" endtime="20220704 19:39:19.032"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 19:39:19.033" level="INFO">${url} = lists/62c341e6e55e89031af9943f</msg>
<status status="PASS" starttime="20220704 19:39:19.032" endtime="20220704 19:39:19.033"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 19:39:19.102" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:39:19.033" endtime="20220704 19:39:19.102"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 19:39:19.102" endtime="20220704 19:39:19.102"/>
</return>
<msg timestamp="20220704 19:39:19.102" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:39:19.031" endtime="20220704 19:39:19.102"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 19:39:19.102" endtime="20220704 19:39:19.102"/>
</return>
<status status="PASS" starttime="20220704 19:39:19.030" endtime="20220704 19:39:19.102"/>
</kw>
<kw name="Get A List" library="List">
<var>${new_response}</var>
<arg>${response.json()}[id]</arg>
<doc>Gets the List with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>list</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 19:39:19.104" level="INFO">${url} = lists/62c341e6e55e89031af9943f</msg>
<status status="PASS" starttime="20220704 19:39:19.104" endtime="20220704 19:39:19.104"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 19:39:19.149" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:39:19.104" endtime="20220704 19:39:19.149"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 19:39:19.150" endtime="20220704 19:39:19.150"/>
</return>
<msg timestamp="20220704 19:39:19.150" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:39:19.103" endtime="20220704 19:39:19.150"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 19:39:19.150" endtime="20220704 19:39:19.150"/>
</return>
<msg timestamp="20220704 19:39:19.150" level="INFO">${new_response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:39:19.102" endtime="20220704 19:39:19.150"/>
</kw>
<kw name="Validate Response Schema" library="CommonAPI">
<arg>${new_response}</arg>
<arg>list</arg>
<doc>Validate the response against the corresponding schema
required_args: response object, element name
current available element schemas: attachment, board, card,
comment_on_card, delete, get_attachments, list, labels_on_board</doc>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${element}.json</arg>
<arg>${response.json()}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20220704 19:39:19.151" endtime="20220704 19:39:19.153"/>
</kw>
<status status="PASS" starttime="20220704 19:39:19.150" endtime="20220704 19:39:19.153"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${new_response.json()}[name]</arg>
<arg>NewName</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220704 19:39:19.153" endtime="20220704 19:39:19.154"/>
</kw>
<doc>Verify that a lists name can be updated through API</doc>
<tag>api</tag>
<tag>list.update</tag>
<tag>regression</tag>
<status status="PASS" starttime="20220704 19:39:18.932" endtime="20220704 19:39:19.154"/>
</test>
<test id="s1-s1-s5-t3" name="ARCHIVE A list" line="29">
<kw name="Create A List" library="List">
<var>${response}</var>
<arg>NewList</arg>
<doc>Creates a new List
board id
name the list will have
optional_args: idListSource, pos, etc.
keys and values should be separated, eg: name desired_name</doc>
<kw name="Create An Element" library="TrelloAPI">
<var>${response}</var>
<arg>list</arg>
<arg>name</arg>
<arg>${name}</arg>
<arg>idBoard</arg>
<arg>${idBoard}</arg>
<arg>@{optional_args}</arg>
<doc>Creates a new element using the Trello API
Elements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 19:39:19.158" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 19:39:19.157" endtime="20220704 19:39:19.158"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 19:39:19.158" endtime="20220704 19:39:19.158"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${EMPTY}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 19:39:19.159" level="INFO">${url} = lists/</msg>
<status status="PASS" starttime="20220704 19:39:19.158" endtime="20220704 19:39:19.159"/>
</kw>
<kw name="POST On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send POST requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_code:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 19:39:19.257" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:39:19.159" endtime="20220704 19:39:19.257"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 19:39:19.257" endtime="20220704 19:39:19.257"/>
</return>
<msg timestamp="20220704 19:39:19.258" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:39:19.157" endtime="20220704 19:39:19.258"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 19:39:19.258" endtime="20220704 19:39:19.258"/>
</return>
<msg timestamp="20220704 19:39:19.258" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:39:19.155" endtime="20220704 19:39:19.258"/>
</kw>
<kw name="Archive A List" library="List">
<arg>${response.json()}[id]</arg>
<doc>Deletes the list with the given ID</doc>
<kw name="Update An Element" library="TrelloAPI">
<var>${response}</var>
<arg>archive_list</arg>
<arg>${id}</arg>
<arg>value</arg>
<arg>true</arg>
<arg>status_code=${status_code}</arg>
<doc>Updates the element with the given id
Eelements: card, board, label</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{json}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220704 19:39:19.260" level="INFO">&amp;{json} = { }</msg>
<status status="PASS" starttime="20220704 19:39:19.260" endtime="20220704 19:39:19.260"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${json}</arg>
<arg>@{args}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220704 19:39:19.260" endtime="20220704 19:39:19.260"/>
</kw>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 19:39:19.261" level="INFO">${url} = lists/62c341e748c449402dcde15d/closed</msg>
<status status="PASS" starttime="20220704 19:39:19.260" endtime="20220704 19:39:19.261"/>
</kw>
<kw name="PUT On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<arg>&amp;{json}</arg>
<doc>Method to send PUT requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:param kwargs:    dict  Data that will be considered as Payload
:return:  the response.</doc>
<msg timestamp="20220704 19:39:19.364" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:39:19.261" endtime="20220704 19:39:19.364"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 19:39:19.364" endtime="20220704 19:39:19.364"/>
</return>
<msg timestamp="20220704 19:39:19.365" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:39:19.259" endtime="20220704 19:39:19.365"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 19:39:19.365" endtime="20220704 19:39:19.365"/>
</return>
<status status="PASS" starttime="20220704 19:39:19.258" endtime="20220704 19:39:19.365"/>
</kw>
<kw name="Get A List" library="List">
<var>${new_response}</var>
<arg>${response.json()}[id]</arg>
<doc>Gets the List with the given ID</doc>
<kw name="Get An Element" library="TrelloAPI">
<var>${response}</var>
<arg>list</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Gets an element with the given id using the trello API
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 19:39:19.367" level="INFO">${url} = lists/62c341e748c449402dcde15d</msg>
<status status="PASS" starttime="20220704 19:39:19.367" endtime="20220704 19:39:19.367"/>
</kw>
<kw name="GET On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send GET requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:param expected_status_codet:  str   Expected status code
:return:  the response.</doc>
<msg timestamp="20220704 19:39:19.409" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:39:19.367" endtime="20220704 19:39:19.409"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 19:39:19.409" endtime="20220704 19:39:19.409"/>
</return>
<msg timestamp="20220704 19:39:19.409" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:39:19.366" endtime="20220704 19:39:19.409"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 19:39:19.409" endtime="20220704 19:39:19.409"/>
</return>
<msg timestamp="20220704 19:39:19.409" level="INFO">${new_response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:39:19.365" endtime="20220704 19:39:19.409"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${new_response.json()}[closed]</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20220704 19:39:19.410" endtime="20220704 19:39:19.410"/>
</kw>
<doc>Verify that a list can be archived through API</doc>
<tag>api</tag>
<tag>list.archive</tag>
<tag>regression</tag>
<status status="PASS" starttime="20220704 19:39:19.154" endtime="20220704 19:39:19.411"/>
</test>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Teardown Board</arg>
<arg>Delete All Sessions</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Teardown Board">
<doc>Delete the board created for this suite.</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>10</arg>
<arg>2.5</arg>
<arg>Delete A Board</arg>
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Delete A Board" library="Board">
<arg>${TEST_SUITE_BOARD_ID}</arg>
<doc>Deletes the board with the given ID</doc>
<kw name="Delete An Element" library="TrelloAPI">
<var>${response}</var>
<arg>board</arg>
<arg>${id}</arg>
<arg>status_code=${status_code}</arg>
<doc>Deletes the element with the given id
Elements: card, board, label</doc>
<kw name="Format String" library="String">
<var>${url}</var>
<arg>${PATHS}[${element}]</arg>
<arg>${id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220704 19:39:19.414" level="INFO">${url} = boards/62c341e684e8cf84049ee754</msg>
<status status="PASS" starttime="20220704 19:39:19.413" endtime="20220704 19:39:19.414"/>
</kw>
<kw name="DELETE On Session" library="request_own_library">
<var>${response}</var>
<arg>${url}</arg>
<arg>${status_code}</arg>
<doc>Method to send DELETE requests to the specified endpoint
:param endpoint:  str   Endpoint of service to which the request will be sent
:return:  the response.</doc>
<msg timestamp="20220704 19:39:19.716" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:39:19.414" endtime="20220704 19:39:19.716"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 19:39:19.716" endtime="20220704 19:39:19.716"/>
</return>
<msg timestamp="20220704 19:39:19.717" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220704 19:39:19.413" endtime="20220704 19:39:19.717"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" starttime="20220704 19:39:19.717" endtime="20220704 19:39:19.717"/>
</return>
<status status="PASS" starttime="20220704 19:39:19.413" endtime="20220704 19:39:19.717"/>
</kw>
<status status="PASS" starttime="20220704 19:39:19.412" endtime="20220704 19:39:19.717"/>
</kw>
<status status="PASS" starttime="20220704 19:39:19.412" endtime="20220704 19:39:19.717"/>
</kw>
<kw name="Delete All Sessions" library="request_own_library">
<status status="PASS" starttime="20220704 19:39:19.717" endtime="20220704 19:39:19.718"/>
</kw>
<status status="PASS" starttime="20220704 19:39:19.411" endtime="20220704 19:39:19.719"/>
</kw>
<doc>Example Test with Trello API lists</doc>
<status status="PASS" starttime="20220704 19:39:18.603" endtime="20220704 19:39:19.719"/>
</suite>
<status status="PASS" starttime="20220704 19:39:09.598" endtime="20220704 19:39:19.721"/>
</suite>
<status status="PASS" starttime="20220704 19:39:09.580" endtime="20220704 19:39:19.724"/>
</suite>
<statistics>
<total>
<stat pass="18" fail="0" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="18" fail="0" skip="0">api</stat>
<stat pass="1" fail="0" skip="0">board.create</stat>
<stat pass="1" fail="0" skip="0">board.delete</stat>
<stat pass="1" fail="0" skip="0">board.get</stat>
<stat pass="2" fail="0" skip="0">board.update</stat>
<stat pass="1" fail="0" skip="0">card.close</stat>
<stat pass="1" fail="0" skip="0">card.create</stat>
<stat pass="1" fail="0" skip="0">card.delete</stat>
<stat pass="1" fail="0" skip="0">card.update</stat>
<stat pass="1" fail="0" skip="0">checklist.create</stat>
<stat pass="1" fail="0" skip="0">checklist.delete</stat>
<stat pass="1" fail="0" skip="0">checklist.update</stat>
<stat pass="1" fail="0" skip="0">label.create</stat>
<stat pass="1" fail="0" skip="0">label.delete</stat>
<stat pass="1" fail="0" skip="0">label.get</stat>
<stat pass="1" fail="0" skip="0">label.update</stat>
<stat pass="1" fail="0" skip="0">list.archive</stat>
<stat pass="1" fail="0" skip="0">list.create</stat>
<stat pass="1" fail="0" skip="0">list.update</stat>
<stat pass="5" fail="0" skip="0">regression</stat>
<stat pass="13" fail="0" skip="0">smoke</stat>
</tag>
<suite>
<stat pass="18" fail="0" skip="0" id="s1" name="Trello">Trello</stat>
<stat pass="18" fail="0" skip="0" id="s1-s1" name="Api">Trello.Api</stat>
<stat pass="5" fail="0" skip="0" id="s1-s1-s1" name="Trello Api Boards Tests">Trello.Api.Trello Api Boards Tests</stat>
<stat pass="4" fail="0" skip="0" id="s1-s1-s2" name="Trello Api Cards Tests">Trello.Api.Trello Api Cards Tests</stat>
<stat pass="3" fail="0" skip="0" id="s1-s1-s3" name="Trello Api Checklists Tests">Trello.Api.Trello Api Checklists Tests</stat>
<stat pass="3" fail="0" skip="0" id="s1-s1-s4" name="Trello Api Labels Tests">Trello.Api.Trello Api Labels Tests</stat>
<stat pass="3" fail="0" skip="0" id="s1-s1-s5" name="Trello Api Lists Tests">Trello.Api.Trello Api Lists Tests</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
